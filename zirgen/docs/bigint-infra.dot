// Graphviz (with "dot" layout) graph of approximate compiler
// infrastructure as of Aug 2024.
//
// Key:
//   green: exists,
//   red: doesn't exist, but we might want it to
//   dashed line:

digraph zirgen {
    rankdir="LR"
    node [color="darkgreen"]
    edge [color="darkgreen"]
    edge [penwidth=3]
    compound=true
    layout="dot"
    ranksep=1.3
    penwidth=1
    subgraph cluster_user_input {
        label="User-supplied inputs to IR"
        subgraph cluster_prog_and_circuits {
            label="Programs and circuits"


            subgraph cluster_accel {
                label="Accelerators"
                accel_rsa [label="RSA"]
                accel_ecdsa [color="red", label="ECDSA"]
                accel_circom [label="Circom-based"]
            }
        }
        subgraph cluster_edsl {
	    label="EDSL (v1) embedded in C++"
            edsl_bigint [label="BigInt program", style="dashed"]
        }
        subgraph cluster_dsl {
	    label="Zirgen DSL (.zir)"
            dsl_bigint [label="BigInt program", color="red"]
        }
    }

    subgraph cluster_ir {
        label="IR"
        subgraph cluster_ir_variants {
            label=""
            rank="same"
            bigint_ir [label="IR for bigint programs"]
            recursion_ir [label="IR for recursion circuit programs"]
        }
        subgraph cluster_transforms {
            label="Transforms"
            transform_bigint_witness [label="Generate bigint witness"]
            transform_bigint_zkr [label="Verify bigint wiitness"]
        }

        edsl_bigint -> bigint_ir [style="dashed"]
        bigint_ir -> transform_bigint_zkr
        dsl_bigint -> bigint_ir [color="red"]

        bigint_ir ->  transform_bigint_witness


        accel_rsa->edsl_bigint [style="dashed"]
        accel_circom->bigint_ir [color="red"]
        {accel_rsa accel_ecdsa}->dsl_bigint [color="red"]
        {accel_ecdsa}->edsl_bigint [color="red", style="dashed"]
    }

    circom_witness [label="Circom witness generator", color="red"]
    accel_circom -> circom_witness [color="red"]
    subgraph cluster_codegen {
        label="Generated code"
        subgraph cluster_codegen_v2 {
            label="Generalized codegen (zirgen)"
            codegen_bigint_v2 [label="bigint program"]
        }
        codegen_zkr [label=".zkr file"]
        transform_bigint_witness -> codegen_bigint_v2
        transform_bigint_zkr -> recursion_ir [constraint=false]
        recursion_ir -> codegen_zkr
    }
}
