NondetRegStruct
back_NondetReg(ExecContext& ctx, Index distance0, BoundLayout<NondetRegLayout> layout1) {
  return NondetRegStruct{._super = LOAD(LAYOUT_LOOKUP(layout1, _super), distance0)};
}
NondetRegStruct exec_NondetReg(ExecContext& ctx, Val arg0, BoundLayout<NondetRegLayout> layout1) {
  BoundLayout<Reg> x2 = LAYOUT_LOOKUP(layout1, _super);
  STORE(x2, arg0);
  return NondetRegStruct{._super = LOAD(x2, 0)};
}
NondetRegStruct back_Reg(ExecContext& ctx, Index distance0, BoundLayout<NondetRegLayout> layout1) {
  // Reg(<preamble>:4)
  NondetRegStruct x2 = back_NondetReg(ctx, distance0, layout1);
  return x2;
}
NondetRegStruct exec_Reg(ExecContext& ctx, Val arg0, BoundLayout<NondetRegLayout> layout1) {
  NondetRegStruct x2 = exec_NondetReg(ctx, arg0, layout1);
  // Reg(<preamble>:5)
  EQZ((arg0 - x2._super), "Reg(<preamble>:5)");
  return x2;
}
NondetRegStruct
exec_NondetBitReg(ExecContext& ctx, Val arg0, BoundLayout<NondetRegLayout> layout1) {
  // NondetBitReg(zirgen/circuit/keccak/bits.zir:11)
  NondetRegStruct x2 = exec_NondetReg(ctx, arg0, layout1);
  Val x3 = x2._super;
  // AssertBit(zirgen/circuit/keccak/bits.zir:6)
  // NondetBitReg(zirgen/circuit/keccak/bits.zir:12)
  EQZ((x3 * (Val(1) - x3)),
      "loc(callsite(\x22AssertBit\x22(\x22zirgen/circuit/keccak/bits.zir\x22:6:20) at "
      "\x22NondetBitReg\x22(\x22zirgen/circuit/keccak/bits.zir\x22:12:13)))");
  return x2;
}
UseOnceMemoryElementStruct
exec_UseOnceMemoryElement(ExecContext& ctx,
                          Val arg0,
                          Val arg1,
                          MemDigestStruct arg2,
                          BoundLayout<UseOnceMemoryElementLayout> layout3) {
  // UseOnceMemoryElement(zirgen/circuit/keccak/sha256_for_keccak.zir:17)
  NondetRegStruct x4 = exec_NondetReg(ctx, arg0, LAYOUT_LOOKUP(layout3, count));
  // UseOnceMemoryElement(zirgen/circuit/keccak/sha256_for_keccak.zir:18)
  NondetRegStruct x5 = exec_NondetReg(ctx, arg1, LAYOUT_LOOKUP(layout3, index));
  // UseOnceMemoryElement(zirgen/circuit/keccak/sha256_for_keccak.zir:16)
  Val4Array x6 = arg2._super;
  // UseOnceMemoryElement(zirgen/circuit/keccak/sha256_for_keccak.zir:20)
  NondetRegStruct x7 = exec_NondetReg(ctx, x6[0], LAYOUT_LOOKUP(layout3, _0));
  NondetRegStruct x8 = exec_NondetReg(ctx, x6[1], LAYOUT_LOOKUP(layout3, _1));
  NondetRegStruct x9 = exec_NondetReg(ctx, x6[2], LAYOUT_LOOKUP(layout3, _2));
  NondetRegStruct x10 = exec_NondetReg(ctx, x6[3], LAYOUT_LOOKUP(layout3, _3));
  return UseOnceMemoryElementStruct{
      .count = x4, .index = x5, .digest = NondetRegStruct4Array{x7, x8, x9, x10}};
}
ReadMemoryStruct
exec_ReadMemory(ExecContext& ctx, Val arg0, BoundLayout<ReadMemoryLayout> layout1) {
  // ReadMemory(zirgen/circuit/keccak/sha256_for_keccak.zir:24)
  Val x2 = (arg0 * Val(4));
  // SimpleMemoryPeek(zirgen/circuit/keccak/sha256_for_keccak.zir:5)
  Val x3 = INVOKE_EXTERN(ctx, simpleMemoryPeek, x2);
  Val x4 = INVOKE_EXTERN(ctx, simpleMemoryPeek, (x2 + Val(1)));
  Val x5 = INVOKE_EXTERN(ctx, simpleMemoryPeek, (x2 + Val(2)));
  Val x6 = INVOKE_EXTERN(ctx, simpleMemoryPeek, (x2 + Val(3)));
  // ReadMemory(zirgen/circuit/keccak/sha256_for_keccak.zir:26)
  UseOnceMemoryElementStruct x7 =
      exec_UseOnceMemoryElement(ctx,
                                Val(2013265920),
                                arg0,
                                MemDigestStruct{._super = Val4Array{x3, x4, x5, x6}},
                                LAYOUT_LOOKUP(layout1, elem));
  return ReadMemoryStruct{._super = x7.digest};
}
WriteMemoryStruct exec_WriteMemory(ExecContext& ctx,
                                   Val arg0,
                                   MemDigestStruct arg1,
                                   BoundLayout<WriteMemoryLayout> layout2) {
  // WriteMemory(zirgen/circuit/keccak/sha256_for_keccak.zir:31)
  Val x3 = (arg0 * Val(4));
  // WriteMemory(zirgen/circuit/keccak/sha256_for_keccak.zir:29)
  Val4Array x4 = arg1._super;
  // SimpleMemoryPoke(zirgen/circuit/keccak/sha256_for_keccak.zir:4)
  // WriteMemory(zirgen/circuit/keccak/sha256_for_keccak.zir:31)
  INVOKE_EXTERN(ctx, simpleMemoryPoke, x3, x4[0]);
  INVOKE_EXTERN(ctx, simpleMemoryPoke, (x3 + Val(1)), x4[1]);
  INVOKE_EXTERN(ctx, simpleMemoryPoke, (x3 + Val(2)), x4[2]);
  INVOKE_EXTERN(ctx, simpleMemoryPoke, (x3 + Val(3)), x4[3]);
  // WriteMemory(zirgen/circuit/keccak/sha256_for_keccak.zir:33)
  UseOnceMemoryElementStruct x5 =
      exec_UseOnceMemoryElement(ctx, Val(1), arg0, arg1, LAYOUT_LOOKUP(layout2, elem));
  // WriteMemory(zirgen/circuit/keccak/sha256_for_keccak.zir:34)
  EQZ((x5.count._super - Val(1)), "WriteMemory(zirgen/circuit/keccak/sha256_for_keccak.zir:34)");
  // WriteMemory(zirgen/circuit/keccak/sha256_for_keccak.zir:35)
  EQZ((x5.index._super - arg0), "WriteMemory(zirgen/circuit/keccak/sha256_for_keccak.zir:35)");
  // WriteMemory(zirgen/circuit/keccak/sha256_for_keccak.zir:33)
  NondetRegStruct4Array x6 = x5.digest;
  // WriteMemory(zirgen/circuit/keccak/sha256_for_keccak.zir:37)
  EQZ((x6[0]._super - x4[0]), "WriteMemory(zirgen/circuit/keccak/sha256_for_keccak.zir:37)");
  EQZ((x6[1]._super - x4[1]), "WriteMemory(zirgen/circuit/keccak/sha256_for_keccak.zir:37)");
  EQZ((x6[2]._super - x4[2]), "WriteMemory(zirgen/circuit/keccak/sha256_for_keccak.zir:37)");
  EQZ((x6[3]._super - x4[3]), "WriteMemory(zirgen/circuit/keccak/sha256_for_keccak.zir:37)");
  return WriteMemoryStruct{};
}
RetTupleStruct
back_RetTuple(ExecContext& ctx, Index distance0, BoundLayout<RetTupleLayout> layout1) {
  // RetTuple(zirgen/circuit/keccak/sha256_for_keccak.zir:132)
  Val22Array x2 = Val22Array{Val(0),  Val(1),  Val(2),  Val(3),  Val(4),  Val(5),  Val(6),  Val(7),
                             Val(8),  Val(9),  Val(10), Val(11), Val(12), Val(13), Val(14), Val(15),
                             Val(16), Val(17), Val(18), Val(19), Val(20), Val(21)};
  NondetRegStruct22Array x3 =
      map(x2,
          LAYOUT_LOOKUP(layout1, arrA),
          std::function([&](Val22Array::value_type x4,
                            BoundLayout<NondetRegLayout22LayoutArray::value_type> x5) {
            NondetRegStruct x6 = back_Reg(ctx, distance0, x5);
            return x6;
          }));
  // RetTuple(zirgen/circuit/keccak/sha256_for_keccak.zir:133)
  NondetRegStruct22Array x7 =
      map(x2,
          LAYOUT_LOOKUP(layout1, arrB),
          std::function([&](Val22Array::value_type x8,
                            BoundLayout<NondetRegLayout22LayoutArray::value_type> x9) {
            NondetRegStruct x10 = back_Reg(ctx, distance0, x9);
            return x10;
          }));
  // RetTuple(zirgen/circuit/keccak/sha256_for_keccak.zir:134)
  NondetRegStruct22Array x11 =
      map(x2,
          LAYOUT_LOOKUP(layout1, arrC),
          std::function([&](Val22Array::value_type x12,
                            BoundLayout<NondetRegLayout22LayoutArray::value_type> x13) {
            NondetRegStruct x14 = back_Reg(ctx, distance0, x13);
            return x14;
          }));
  // RetTuple(zirgen/circuit/keccak/sha256_for_keccak.zir:135)
  NondetRegStruct24Array x15 =
      map(Val24Array{Val(0),  Val(1),  Val(2),  Val(3),  Val(4),  Val(5),  Val(6),  Val(7),
                     Val(8),  Val(9),  Val(10), Val(11), Val(12), Val(13), Val(14), Val(15),
                     Val(16), Val(17), Val(18), Val(19), Val(20), Val(21), Val(22), Val(23)},
          LAYOUT_LOOKUP(layout1, arrD),
          std::function([&](Val24Array::value_type x16,
                            BoundLayout<NondetRegLayout24LayoutArray::value_type> x17) {
            NondetRegStruct x18 = back_Reg(ctx, distance0, x17);
            return x18;
          }));
  // RetTuple(zirgen/circuit/keccak/sha256_for_keccak.zir:136)
  NondetRegStruct22Array x19 =
      map(x2,
          LAYOUT_LOOKUP(layout1, arrE),
          std::function([&](Val22Array::value_type x20,
                            BoundLayout<NondetRegLayout22LayoutArray::value_type> x21) {
            NondetRegStruct x22 = back_Reg(ctx, distance0, x21);
            return x22;
          }));
  // RetTuple(zirgen/circuit/keccak/sha256_for_keccak.zir:137)
  NondetRegStruct22Array x23 =
      map(x2,
          LAYOUT_LOOKUP(layout1, arrF),
          std::function([&](Val22Array::value_type x24,
                            BoundLayout<NondetRegLayout22LayoutArray::value_type> x25) {
            NondetRegStruct x26 = back_Reg(ctx, distance0, x25);
            return x26;
          }));
  // RetTuple(zirgen/circuit/keccak/sha256_for_keccak.zir:138)
  NondetRegStruct x27 = back_Reg(ctx, distance0, LAYOUT_LOOKUP(layout1, minor));
  // RetTuple(zirgen/circuit/keccak/sha256_for_keccak.zir:139)
  NondetRegStruct x28 = back_Reg(ctx, distance0, LAYOUT_LOOKUP(layout1, major));
  // RetTuple(zirgen/circuit/keccak/sha256_for_keccak.zir:140)
  NondetRegStruct x29 = back_Reg(ctx, distance0, LAYOUT_LOOKUP(layout1, rnd));
  // RetTuple(zirgen/circuit/keccak/sha256_for_keccak.zir:141)
  NondetRegStruct x30 = back_Reg(ctx, distance0, LAYOUT_LOOKUP(layout1, blk));
  // RetTuple(zirgen/circuit/keccak/sha256_for_keccak.zir:142)
  NondetRegStruct x31 = back_Reg(ctx, distance0, LAYOUT_LOOKUP(layout1, midx));
  return RetTupleStruct{.arrA = x3,
                        .arrB = x7,
                        .arrC = x11,
                        .arrD = x15,
                        .arrE = x19,
                        .arrF = x23,
                        .minor = x27,
                        .major = x28,
                        .rnd = x29,
                        .blk = x30,
                        .midx = x31};
}
RetTupleStruct exec_RetTuple(ExecContext& ctx,
                             Val22Array arg0,
                             Val22Array arg1,
                             Val22Array arg2,
                             Val24Array arg3,
                             Val22Array arg4,
                             Val22Array arg5,
                             Val arg6,
                             Val arg7,
                             Val arg8,
                             Val arg9,
                             Val arg10,
                             BoundLayout<RetTupleLayout> layout11) {
  // RetTuple(zirgen/circuit/keccak/sha256_for_keccak.zir:132)
  NondetRegStruct22Array x12 =
      map(arg0,
          LAYOUT_LOOKUP(layout11, arrA),
          std::function([&](Val22Array::value_type x13,
                            BoundLayout<NondetRegLayout22LayoutArray::value_type> x14) {
            NondetRegStruct x15 = exec_Reg(ctx, x13, x14);
            return x15;
          }));
  // RetTuple(zirgen/circuit/keccak/sha256_for_keccak.zir:133)
  NondetRegStruct22Array x16 =
      map(arg1,
          LAYOUT_LOOKUP(layout11, arrB),
          std::function([&](Val22Array::value_type x17,
                            BoundLayout<NondetRegLayout22LayoutArray::value_type> x18) {
            NondetRegStruct x19 = exec_Reg(ctx, x17, x18);
            return x19;
          }));
  // RetTuple(zirgen/circuit/keccak/sha256_for_keccak.zir:134)
  NondetRegStruct22Array x20 =
      map(arg2,
          LAYOUT_LOOKUP(layout11, arrC),
          std::function([&](Val22Array::value_type x21,
                            BoundLayout<NondetRegLayout22LayoutArray::value_type> x22) {
            NondetRegStruct x23 = exec_Reg(ctx, x21, x22);
            return x23;
          }));
  // RetTuple(zirgen/circuit/keccak/sha256_for_keccak.zir:135)
  NondetRegStruct24Array x24 =
      map(arg3,
          LAYOUT_LOOKUP(layout11, arrD),
          std::function([&](Val24Array::value_type x25,
                            BoundLayout<NondetRegLayout24LayoutArray::value_type> x26) {
            NondetRegStruct x27 = exec_Reg(ctx, x25, x26);
            return x27;
          }));
  // RetTuple(zirgen/circuit/keccak/sha256_for_keccak.zir:136)
  NondetRegStruct22Array x28 =
      map(arg4,
          LAYOUT_LOOKUP(layout11, arrE),
          std::function([&](Val22Array::value_type x29,
                            BoundLayout<NondetRegLayout22LayoutArray::value_type> x30) {
            NondetRegStruct x31 = exec_Reg(ctx, x29, x30);
            return x31;
          }));
  // RetTuple(zirgen/circuit/keccak/sha256_for_keccak.zir:137)
  NondetRegStruct22Array x32 =
      map(arg5,
          LAYOUT_LOOKUP(layout11, arrF),
          std::function([&](Val22Array::value_type x33,
                            BoundLayout<NondetRegLayout22LayoutArray::value_type> x34) {
            NondetRegStruct x35 = exec_Reg(ctx, x33, x34);
            return x35;
          }));
  // RetTuple(zirgen/circuit/keccak/sha256_for_keccak.zir:138)
  NondetRegStruct x36 = exec_Reg(ctx, arg6, LAYOUT_LOOKUP(layout11, minor));
  // RetTuple(zirgen/circuit/keccak/sha256_for_keccak.zir:139)
  NondetRegStruct x37 = exec_Reg(ctx, arg7, LAYOUT_LOOKUP(layout11, major));
  // RetTuple(zirgen/circuit/keccak/sha256_for_keccak.zir:140)
  NondetRegStruct x38 = exec_Reg(ctx, arg8, LAYOUT_LOOKUP(layout11, rnd));
  // RetTuple(zirgen/circuit/keccak/sha256_for_keccak.zir:141)
  NondetRegStruct x39 = exec_Reg(ctx, arg9, LAYOUT_LOOKUP(layout11, blk));
  // RetTuple(zirgen/circuit/keccak/sha256_for_keccak.zir:142)
  NondetRegStruct x40 = exec_Reg(ctx, arg10, LAYOUT_LOOKUP(layout11, midx));
  return RetTupleStruct{.arrA = x12,
                        .arrB = x16,
                        .arrC = x20,
                        .arrD = x24,
                        .arrE = x28,
                        .arrF = x32,
                        .minor = x36,
                        .major = x37,
                        .rnd = x38,
                        .blk = x39,
                        .midx = x40};
}
Pack2Struct execPack2(ExecContext& ctx, Val32Array arg0, BoundLayout<Pack2Layout> layout1) {
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // pack2(zirgen/circuit/keccak/sha256_for_keccak.zir:244)
  Val x2 = ((((arg0[0] + (arg0[1] * Val(2))) + (arg0[2] * Val(4))) + (arg0[3] * Val(8))) +
            (arg0[4] * Val(16)));
  Val x3 = (((((x2 + (arg0[5] * Val(32))) + (arg0[6] * Val(64))) + (arg0[7] * Val(128))) +
             (arg0[8] * Val(256))) +
            (arg0[9] * Val(512)));
  Val x4 = (((((x3 + (arg0[10] * Val(1024))) + (arg0[11] * Val(2048))) + (arg0[12] * Val(4096))) +
             (arg0[13] * Val(8192))) +
            (arg0[14] * Val(16384)));
  NondetRegStruct x5 = exec_Reg(ctx, (x4 + (arg0[15] * Val(32768))), LAYOUT_LOOKUP(layout1, low));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // pack2(zirgen/circuit/keccak/sha256_for_keccak.zir:245)
  Val x6 = ((((arg0[16] + (arg0[17] * Val(2))) + (arg0[18] * Val(4))) + (arg0[19] * Val(8))) +
            (arg0[20] * Val(16)));
  Val x7 = (((((x6 + (arg0[21] * Val(32))) + (arg0[22] * Val(64))) + (arg0[23] * Val(128))) +
             (arg0[24] * Val(256))) +
            (arg0[25] * Val(512)));
  Val x8 = (((((x7 + (arg0[26] * Val(1024))) + (arg0[27] * Val(2048))) + (arg0[28] * Val(4096))) +
             (arg0[29] * Val(8192))) +
            (arg0[30] * Val(16384)));
  NondetRegStruct x9 = exec_Reg(ctx, (x8 + (arg0[31] * Val(32768))), LAYOUT_LOOKUP(layout1, high));
  return Pack2Struct{
      ._super = TwoShortsStruct{.low = x5._super, .high = x9._super}, .low = x5, .high = x9};
}
TwoShortsStruct execComputeW(ExecContext& ctx,
                             Val32Array arg0,
                             Val32Array arg1,
                             Val32Array arg2,
                             Val32Array arg3,
                             BoundLayout<ComputeWLayout> layout4) {
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:226)
  // computeW(zirgen/circuit/keccak/sha256_for_keccak.zir:255)
  Val x5 = (Val(1) - arg2[7]);
  Val x6 = (Val(1) - arg2[18]);
  Val x7 = ((arg2[7] * arg2[18]) + (x5 * x6));
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:227)
  Val x8 = (Val(1) - arg2[3]);
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:226)
  Val x9 = (Val(1) - arg2[8]);
  Val x10 = (Val(1) - arg2[19]);
  Val x11 = ((arg2[8] * arg2[19]) + (x9 * x10));
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:227)
  Val x12 = (Val(1) - arg2[4]);
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:226)
  Val x13 = (Val(1) - arg2[9]);
  Val x14 = (Val(1) - arg2[20]);
  Val x15 = ((arg2[9] * arg2[20]) + (x13 * x14));
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:227)
  Val x16 = (Val(1) - arg2[5]);
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:226)
  Val x17 = (Val(1) - arg2[10]);
  Val x18 = (Val(1) - arg2[21]);
  Val x19 = ((arg2[10] * arg2[21]) + (x17 * x18));
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:227)
  Val x20 = (Val(1) - arg2[6]);
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:226)
  Val x21 = (Val(1) - arg2[11]);
  Val x22 = (Val(1) - arg2[22]);
  Val x23 = ((arg2[11] * arg2[22]) + (x21 * x22));
  Val x24 = (Val(1) - arg2[12]);
  Val x25 = (Val(1) - arg2[23]);
  Val x26 = ((arg2[12] * arg2[23]) + (x24 * x25));
  Val x27 = (Val(1) - arg2[13]);
  Val x28 = (Val(1) - arg2[24]);
  Val x29 = ((arg2[13] * arg2[24]) + (x27 * x28));
  Val x30 = (Val(1) - arg2[14]);
  Val x31 = (Val(1) - arg2[25]);
  Val x32 = ((arg2[14] * arg2[25]) + (x30 * x31));
  Val x33 = (Val(1) - arg2[15]);
  Val x34 = (Val(1) - arg2[26]);
  Val x35 = ((arg2[15] * arg2[26]) + (x33 * x34));
  Val x36 = (Val(1) - arg2[16]);
  Val x37 = (Val(1) - arg2[27]);
  Val x38 = ((arg2[16] * arg2[27]) + (x36 * x37));
  Val x39 = (Val(1) - arg2[17]);
  Val x40 = (Val(1) - arg2[28]);
  Val x41 = ((arg2[17] * arg2[28]) + (x39 * x40));
  Val x42 = (Val(1) - arg2[29]);
  Val x43 = ((arg2[18] * arg2[29]) + (x6 * x42));
  Val x44 = (Val(1) - arg2[30]);
  Val x45 = ((arg2[19] * arg2[30]) + (x10 * x44));
  Val x46 = (Val(1) - arg2[31]);
  Val x47 = ((arg2[20] * arg2[31]) + (x14 * x46));
  Val x48 = (Val(1) - arg2[0]);
  Val x49 = ((arg2[21] * arg2[0]) + (x18 * x48));
  Val x50 = (Val(1) - arg2[1]);
  Val x51 = ((arg2[22] * arg2[1]) + (x22 * x50));
  Val x52 = (Val(1) - arg2[2]);
  Val x53 = ((arg2[23] * arg2[2]) + (x25 * x52));
  Val x54 = ((arg2[24] * arg2[3]) + (x28 * x8));
  Val x55 = ((arg2[25] * arg2[4]) + (x31 * x12));
  Val x56 = ((arg2[26] * arg2[5]) + (x34 * x16));
  Val x57 = ((arg2[27] * arg2[6]) + (x37 * x20));
  Val x58 = ((arg2[28] * arg2[7]) + (x40 * x5));
  Val x59 = ((arg2[29] * arg2[8]) + (x42 * x9));
  Val x60 = ((arg2[30] * arg2[9]) + (x44 * x13));
  Val x61 = ((arg2[31] * arg2[10]) + (x46 * x17));
  Val x62 = ((arg2[0] * arg2[11]) + (x48 * x21));
  Val x63 = ((arg2[1] * arg2[12]) + (x50 * x24));
  Val x64 = ((arg2[2] * arg2[13]) + (x52 * x27));
  Val x65 = ((arg2[3] * arg2[14]) + (x8 * x30));
  // computeW(zirgen/circuit/keccak/sha256_for_keccak.zir:257)
  Val x66 = (Val(1) - arg0[17]);
  Val x67 = (Val(1) - arg0[19]);
  Val x68 = ((arg0[17] * arg0[19]) + (x66 * x67));
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:227)
  Val x69 = (Val(1) - arg0[10]);
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:226)
  Val x70 = (Val(1) - arg0[18]);
  Val x71 = (Val(1) - arg0[20]);
  Val x72 = ((arg0[18] * arg0[20]) + (x70 * x71));
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:227)
  Val x73 = (Val(1) - arg0[11]);
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:226)
  Val x74 = (Val(1) - arg0[21]);
  Val x75 = ((arg0[19] * arg0[21]) + (x67 * x74));
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:227)
  Val x76 = (Val(1) - arg0[12]);
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:226)
  Val x77 = (Val(1) - arg0[22]);
  Val x78 = ((arg0[20] * arg0[22]) + (x71 * x77));
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:227)
  Val x79 = (Val(1) - arg0[13]);
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:226)
  Val x80 = (Val(1) - arg0[23]);
  Val x81 = ((arg0[21] * arg0[23]) + (x74 * x80));
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:227)
  Val x82 = (Val(1) - arg0[14]);
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:226)
  Val x83 = (Val(1) - arg0[24]);
  Val x84 = ((arg0[22] * arg0[24]) + (x77 * x83));
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:227)
  Val x85 = (Val(1) - arg0[15]);
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:226)
  Val x86 = (Val(1) - arg0[25]);
  Val x87 = ((arg0[23] * arg0[25]) + (x80 * x86));
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:227)
  Val x88 = (Val(1) - arg0[16]);
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:226)
  Val x89 = (Val(1) - arg0[26]);
  Val x90 = ((arg0[24] * arg0[26]) + (x83 * x89));
  Val x91 = (Val(1) - arg0[27]);
  Val x92 = ((arg0[25] * arg0[27]) + (x86 * x91));
  Val x93 = (Val(1) - arg0[28]);
  Val x94 = ((arg0[26] * arg0[28]) + (x89 * x93));
  Val x95 = (Val(1) - arg0[29]);
  Val x96 = ((arg0[27] * arg0[29]) + (x91 * x95));
  Val x97 = (Val(1) - arg0[30]);
  Val x98 = ((arg0[28] * arg0[30]) + (x93 * x97));
  Val x99 = (Val(1) - arg0[31]);
  Val x100 = ((arg0[29] * arg0[31]) + (x95 * x99));
  Val x101 = (Val(1) - arg0[0]);
  Val x102 = ((arg0[30] * arg0[0]) + (x97 * x101));
  Val x103 = (Val(1) - arg0[1]);
  Val x104 = ((arg0[31] * arg0[1]) + (x99 * x103));
  Val x105 = (Val(1) - arg0[2]);
  Val x106 = ((arg0[0] * arg0[2]) + (x101 * x105));
  Val x107 = (Val(1) - arg0[3]);
  Val x108 = ((arg0[1] * arg0[3]) + (x103 * x107));
  Val x109 = (Val(1) - arg0[4]);
  Val x110 = ((arg0[2] * arg0[4]) + (x105 * x109));
  Val x111 = (Val(1) - arg0[5]);
  Val x112 = ((arg0[3] * arg0[5]) + (x107 * x111));
  Val x113 = (Val(1) - arg0[6]);
  Val x114 = ((arg0[4] * arg0[6]) + (x109 * x113));
  Val x115 = (Val(1) - arg0[7]);
  Val x116 = ((arg0[5] * arg0[7]) + (x111 * x115));
  Val x117 = (Val(1) - arg0[8]);
  Val x118 = ((arg0[6] * arg0[8]) + (x113 * x117));
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:227)
  Val x119 = (Val(1) - arg0[9]);
  // computeW(zirgen/circuit/keccak/sha256_for_keccak.zir:259)
  Pack2Struct x120 = execPack2(ctx,
                               Val32Array{((x7 * arg2[3]) + ((Val(1) - x7) * x8)),
                                          ((x11 * arg2[4]) + ((Val(1) - x11) * x12)),
                                          ((x15 * arg2[5]) + ((Val(1) - x15) * x16)),
                                          ((x19 * arg2[6]) + ((Val(1) - x19) * x20)),
                                          ((x23 * arg2[7]) + ((Val(1) - x23) * x5)),
                                          ((x26 * arg2[8]) + ((Val(1) - x26) * x9)),
                                          ((x29 * arg2[9]) + ((Val(1) - x29) * x13)),
                                          ((x32 * arg2[10]) + ((Val(1) - x32) * x17)),
                                          ((x35 * arg2[11]) + ((Val(1) - x35) * x21)),
                                          ((x38 * arg2[12]) + ((Val(1) - x38) * x24)),
                                          ((x41 * arg2[13]) + ((Val(1) - x41) * x27)),
                                          ((x43 * arg2[14]) + ((Val(1) - x43) * x30)),
                                          ((x45 * arg2[15]) + ((Val(1) - x45) * x33)),
                                          ((x47 * arg2[16]) + ((Val(1) - x47) * x36)),
                                          ((x49 * arg2[17]) + ((Val(1) - x49) * x39)),
                                          ((x51 * arg2[18]) + ((Val(1) - x51) * x6)),
                                          ((x53 * arg2[19]) + ((Val(1) - x53) * x10)),
                                          ((x54 * arg2[20]) + ((Val(1) - x54) * x14)),
                                          ((x55 * arg2[21]) + ((Val(1) - x55) * x18)),
                                          ((x56 * arg2[22]) + ((Val(1) - x56) * x22)),
                                          ((x57 * arg2[23]) + ((Val(1) - x57) * x25)),
                                          ((x58 * arg2[24]) + ((Val(1) - x58) * x28)),
                                          ((x59 * arg2[25]) + ((Val(1) - x59) * x31)),
                                          ((x60 * arg2[26]) + ((Val(1) - x60) * x34)),
                                          ((x61 * arg2[27]) + ((Val(1) - x61) * x37)),
                                          ((x62 * arg2[28]) + ((Val(1) - x62) * x40)),
                                          ((x63 * arg2[29]) + ((Val(1) - x63) * x42)),
                                          ((x64 * arg2[30]) + ((Val(1) - x64) * x44)),
                                          ((x65 * arg2[31]) + ((Val(1) - x65) * x46)),
                                          (Val(1) - ((arg2[4] * arg2[15]) + (x12 * x33))),
                                          (Val(1) - ((arg2[5] * arg2[16]) + (x16 * x36))),
                                          (Val(1) - ((arg2[6] * arg2[17]) + (x20 * x39)))},
                               LAYOUT_LOOKUP(layout4, packS0));
  // computeW(zirgen/circuit/keccak/sha256_for_keccak.zir:260)
  Pack2Struct x121 = execPack2(ctx,
                               Val32Array{((x68 * arg0[10]) + ((Val(1) - x68) * x69)),
                                          ((x72 * arg0[11]) + ((Val(1) - x72) * x73)),
                                          ((x75 * arg0[12]) + ((Val(1) - x75) * x76)),
                                          ((x78 * arg0[13]) + ((Val(1) - x78) * x79)),
                                          ((x81 * arg0[14]) + ((Val(1) - x81) * x82)),
                                          ((x84 * arg0[15]) + ((Val(1) - x84) * x85)),
                                          ((x87 * arg0[16]) + ((Val(1) - x87) * x88)),
                                          ((x90 * arg0[17]) + ((Val(1) - x90) * x66)),
                                          ((x92 * arg0[18]) + ((Val(1) - x92) * x70)),
                                          ((x94 * arg0[19]) + ((Val(1) - x94) * x67)),
                                          ((x96 * arg0[20]) + ((Val(1) - x96) * x71)),
                                          ((x98 * arg0[21]) + ((Val(1) - x98) * x74)),
                                          ((x100 * arg0[22]) + ((Val(1) - x100) * x77)),
                                          ((x102 * arg0[23]) + ((Val(1) - x102) * x80)),
                                          ((x104 * arg0[24]) + ((Val(1) - x104) * x83)),
                                          ((x106 * arg0[25]) + ((Val(1) - x106) * x86)),
                                          ((x108 * arg0[26]) + ((Val(1) - x108) * x89)),
                                          ((x110 * arg0[27]) + ((Val(1) - x110) * x91)),
                                          ((x112 * arg0[28]) + ((Val(1) - x112) * x93)),
                                          ((x114 * arg0[29]) + ((Val(1) - x114) * x95)),
                                          ((x116 * arg0[30]) + ((Val(1) - x116) * x97)),
                                          ((x118 * arg0[31]) + ((Val(1) - x118) * x99)),
                                          (Val(1) - ((arg0[7] * arg0[9]) + (x115 * x119))),
                                          (Val(1) - ((arg0[8] * arg0[10]) + (x117 * x69))),
                                          (Val(1) - ((arg0[9] * arg0[11]) + (x119 * x73))),
                                          (Val(1) - ((arg0[10] * arg0[12]) + (x69 * x76))),
                                          (Val(1) - ((arg0[11] * arg0[13]) + (x73 * x79))),
                                          (Val(1) - ((arg0[12] * arg0[14]) + (x76 * x82))),
                                          (Val(1) - ((arg0[13] * arg0[15]) + (x79 * x85))),
                                          (Val(1) - ((arg0[14] * arg0[16]) + (x82 * x88))),
                                          (Val(1) - ((arg0[15] * arg0[17]) + (x85 * x66))),
                                          (Val(1) - ((arg0[16] * arg0[18]) + (x88 * x70)))},
                               LAYOUT_LOOKUP(layout4, packS1));
  // computeW(zirgen/circuit/keccak/sha256_for_keccak.zir:261)
  Pack2Struct x122 = execPack2(ctx, arg3, LAYOUT_LOOKUP(layout4, _0));
  Pack2Struct x123 = execPack2(ctx, arg1, LAYOUT_LOOKUP(layout4, _1));
  TwoShortsStruct x124 = x123._super;
  // computeW(zirgen/circuit/keccak/sha256_for_keccak.zir:260)
  TwoShortsStruct x125 = x121._super;
  // computeW(zirgen/circuit/keccak/sha256_for_keccak.zir:259)
  TwoShortsStruct x126 = x120._super;
  // computeW(zirgen/circuit/keccak/sha256_for_keccak.zir:261)
  TwoShortsStruct x127 = x122._super;
  return TwoShortsStruct{.low = (x127.low + (x126.low + (x124.low + x125.low))),
                         .high = (x127.high + (x126.high + (x124.high + x125.high)))};
}
ComputeAEStruct execComputeAE(ExecContext& ctx,
                              Val32Array arg0,
                              Val32Array arg1,
                              Val32Array arg2,
                              Val32Array arg3,
                              Val32Array arg4,
                              Val32Array arg5,
                              Val32Array arg6,
                              Val32Array arg7,
                              Val32Array arg8,
                              TwoShortsStruct arg9,
                              BoundLayout<ComputeAELayout> layout10) {
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:226)
  // computeAE(zirgen/circuit/keccak/sha256_for_keccak.zir:268)
  Val x11 = (Val(1) - arg0[2]);
  Val x12 = (Val(1) - arg0[13]);
  Val x13 = ((arg0[2] * arg0[13]) + (x11 * x12));
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:227)
  Val x14 = (Val(1) - arg0[22]);
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:226)
  Val x15 = (Val(1) - arg0[3]);
  Val x16 = (Val(1) - arg0[14]);
  Val x17 = ((arg0[3] * arg0[14]) + (x15 * x16));
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:227)
  Val x18 = (Val(1) - arg0[23]);
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:226)
  Val x19 = (Val(1) - arg0[4]);
  Val x20 = (Val(1) - arg0[15]);
  Val x21 = ((arg0[4] * arg0[15]) + (x19 * x20));
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:227)
  Val x22 = (Val(1) - arg0[24]);
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:226)
  Val x23 = (Val(1) - arg0[5]);
  Val x24 = (Val(1) - arg0[16]);
  Val x25 = ((arg0[5] * arg0[16]) + (x23 * x24));
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:227)
  Val x26 = (Val(1) - arg0[25]);
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:226)
  Val x27 = (Val(1) - arg0[6]);
  Val x28 = (Val(1) - arg0[17]);
  Val x29 = ((arg0[6] * arg0[17]) + (x27 * x28));
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:227)
  Val x30 = (Val(1) - arg0[26]);
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:226)
  Val x31 = (Val(1) - arg0[7]);
  Val x32 = (Val(1) - arg0[18]);
  Val x33 = ((arg0[7] * arg0[18]) + (x31 * x32));
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:227)
  Val x34 = (Val(1) - arg0[27]);
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:226)
  Val x35 = (Val(1) - arg0[8]);
  Val x36 = (Val(1) - arg0[19]);
  Val x37 = ((arg0[8] * arg0[19]) + (x35 * x36));
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:227)
  Val x38 = (Val(1) - arg0[28]);
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:226)
  Val x39 = (Val(1) - arg0[9]);
  Val x40 = (Val(1) - arg0[20]);
  Val x41 = ((arg0[9] * arg0[20]) + (x39 * x40));
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:227)
  Val x42 = (Val(1) - arg0[29]);
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:226)
  Val x43 = (Val(1) - arg0[10]);
  Val x44 = (Val(1) - arg0[21]);
  Val x45 = ((arg0[10] * arg0[21]) + (x43 * x44));
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:227)
  Val x46 = (Val(1) - arg0[30]);
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:226)
  Val x47 = (Val(1) - arg0[11]);
  Val x48 = ((arg0[11] * arg0[22]) + (x47 * x14));
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:227)
  Val x49 = (Val(1) - arg0[31]);
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:226)
  Val x50 = (Val(1) - arg0[12]);
  Val x51 = ((arg0[12] * arg0[23]) + (x50 * x18));
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:227)
  Val x52 = (Val(1) - arg0[0]);
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:226)
  Val x53 = ((arg0[13] * arg0[24]) + (x12 * x22));
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:227)
  Val x54 = (Val(1) - arg0[1]);
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:226)
  Val x55 = ((arg0[14] * arg0[25]) + (x16 * x26));
  Val x56 = ((arg0[15] * arg0[26]) + (x20 * x30));
  Val x57 = ((arg0[16] * arg0[27]) + (x24 * x34));
  Val x58 = ((arg0[17] * arg0[28]) + (x28 * x38));
  Val x59 = ((arg0[18] * arg0[29]) + (x32 * x42));
  Val x60 = ((arg0[19] * arg0[30]) + (x36 * x46));
  Val x61 = ((arg0[20] * arg0[31]) + (x40 * x49));
  Val x62 = ((arg0[21] * arg0[0]) + (x44 * x52));
  Val x63 = ((arg0[22] * arg0[1]) + (x14 * x54));
  Val x64 = ((arg0[23] * arg0[2]) + (x18 * x11));
  Val x65 = ((arg0[24] * arg0[3]) + (x22 * x15));
  Val x66 = ((arg0[25] * arg0[4]) + (x26 * x19));
  Val x67 = ((arg0[26] * arg0[5]) + (x30 * x23));
  Val x68 = ((arg0[27] * arg0[6]) + (x34 * x27));
  Val x69 = ((arg0[28] * arg0[7]) + (x38 * x31));
  Val x70 = ((arg0[29] * arg0[8]) + (x42 * x35));
  Val x71 = ((arg0[30] * arg0[9]) + (x46 * x39));
  Val x72 = ((arg0[31] * arg0[10]) + (x49 * x43));
  Val x73 = ((arg0[0] * arg0[11]) + (x52 * x47));
  Val x74 = ((arg0[1] * arg0[12]) + (x54 * x50));
  // computeAE(zirgen/circuit/keccak/sha256_for_keccak.zir:270)
  Val x75 = (Val(1) - arg4[6]);
  Val x76 = (Val(1) - arg4[11]);
  Val x77 = ((arg4[6] * arg4[11]) + (x75 * x76));
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:227)
  Val x78 = (Val(1) - arg4[25]);
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:226)
  Val x79 = (Val(1) - arg4[7]);
  Val x80 = (Val(1) - arg4[12]);
  Val x81 = ((arg4[7] * arg4[12]) + (x79 * x80));
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:227)
  Val x82 = (Val(1) - arg4[26]);
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:226)
  Val x83 = (Val(1) - arg4[8]);
  Val x84 = (Val(1) - arg4[13]);
  Val x85 = ((arg4[8] * arg4[13]) + (x83 * x84));
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:227)
  Val x86 = (Val(1) - arg4[27]);
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:226)
  Val x87 = (Val(1) - arg4[9]);
  Val x88 = (Val(1) - arg4[14]);
  Val x89 = ((arg4[9] * arg4[14]) + (x87 * x88));
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:227)
  Val x90 = (Val(1) - arg4[28]);
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:226)
  Val x91 = (Val(1) - arg4[10]);
  Val x92 = (Val(1) - arg4[15]);
  Val x93 = ((arg4[10] * arg4[15]) + (x91 * x92));
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:227)
  Val x94 = (Val(1) - arg4[29]);
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:226)
  Val x95 = (Val(1) - arg4[16]);
  Val x96 = ((arg4[11] * arg4[16]) + (x76 * x95));
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:227)
  Val x97 = (Val(1) - arg4[30]);
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:226)
  Val x98 = (Val(1) - arg4[17]);
  Val x99 = ((arg4[12] * arg4[17]) + (x80 * x98));
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:227)
  Val x100 = (Val(1) - arg4[31]);
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:226)
  Val x101 = (Val(1) - arg4[18]);
  Val x102 = ((arg4[13] * arg4[18]) + (x84 * x101));
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:227)
  Val x103 = (Val(1) - arg4[0]);
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:226)
  Val x104 = (Val(1) - arg4[19]);
  Val x105 = ((arg4[14] * arg4[19]) + (x88 * x104));
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:227)
  Val x106 = (Val(1) - arg4[1]);
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:226)
  Val x107 = (Val(1) - arg4[20]);
  Val x108 = ((arg4[15] * arg4[20]) + (x92 * x107));
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:227)
  Val x109 = (Val(1) - arg4[2]);
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:226)
  Val x110 = (Val(1) - arg4[21]);
  Val x111 = ((arg4[16] * arg4[21]) + (x95 * x110));
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:227)
  Val x112 = (Val(1) - arg4[3]);
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:226)
  Val x113 = (Val(1) - arg4[22]);
  Val x114 = ((arg4[17] * arg4[22]) + (x98 * x113));
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:227)
  Val x115 = (Val(1) - arg4[4]);
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:226)
  Val x116 = (Val(1) - arg4[23]);
  Val x117 = ((arg4[18] * arg4[23]) + (x101 * x116));
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:227)
  Val x118 = (Val(1) - arg4[5]);
  // xor3a(zirgen/circuit/keccak/sha256_for_keccak.zir:226)
  Val x119 = (Val(1) - arg4[24]);
  Val x120 = ((arg4[19] * arg4[24]) + (x104 * x119));
  Val x121 = ((arg4[20] * arg4[25]) + (x107 * x78));
  Val x122 = ((arg4[21] * arg4[26]) + (x110 * x82));
  Val x123 = ((arg4[22] * arg4[27]) + (x113 * x86));
  Val x124 = ((arg4[23] * arg4[28]) + (x116 * x90));
  Val x125 = ((arg4[24] * arg4[29]) + (x119 * x94));
  Val x126 = ((arg4[25] * arg4[30]) + (x78 * x97));
  Val x127 = ((arg4[26] * arg4[31]) + (x82 * x100));
  Val x128 = ((arg4[27] * arg4[0]) + (x86 * x103));
  Val x129 = ((arg4[28] * arg4[1]) + (x90 * x106));
  Val x130 = ((arg4[29] * arg4[2]) + (x94 * x109));
  Val x131 = ((arg4[30] * arg4[3]) + (x97 * x112));
  Val x132 = ((arg4[31] * arg4[4]) + (x100 * x115));
  Val x133 = ((arg4[0] * arg4[5]) + (x103 * x118));
  Val x134 = ((arg4[1] * arg4[6]) + (x106 * x75));
  Val x135 = ((arg4[2] * arg4[7]) + (x109 * x79));
  Val x136 = ((arg4[3] * arg4[8]) + (x112 * x83));
  Val x137 = ((arg4[4] * arg4[9]) + (x115 * x87));
  Val x138 = ((arg4[5] * arg4[10]) + (x118 * x91));
  // computeAE(zirgen/circuit/keccak/sha256_for_keccak.zir:272)
  Pack2Struct x139 = execPack2(
      ctx,
      Val32Array{
          ((arg4[0] * arg5[0]) + (x103 * arg6[0])),    ((arg4[1] * arg5[1]) + (x106 * arg6[1])),
          ((arg4[2] * arg5[2]) + (x109 * arg6[2])),    ((arg4[3] * arg5[3]) + (x112 * arg6[3])),
          ((arg4[4] * arg5[4]) + (x115 * arg6[4])),    ((arg4[5] * arg5[5]) + (x118 * arg6[5])),
          ((arg4[6] * arg5[6]) + (x75 * arg6[6])),     ((arg4[7] * arg5[7]) + (x79 * arg6[7])),
          ((arg4[8] * arg5[8]) + (x83 * arg6[8])),     ((arg4[9] * arg5[9]) + (x87 * arg6[9])),
          ((arg4[10] * arg5[10]) + (x91 * arg6[10])),  ((arg4[11] * arg5[11]) + (x76 * arg6[11])),
          ((arg4[12] * arg5[12]) + (x80 * arg6[12])),  ((arg4[13] * arg5[13]) + (x84 * arg6[13])),
          ((arg4[14] * arg5[14]) + (x88 * arg6[14])),  ((arg4[15] * arg5[15]) + (x92 * arg6[15])),
          ((arg4[16] * arg5[16]) + (x95 * arg6[16])),  ((arg4[17] * arg5[17]) + (x98 * arg6[17])),
          ((arg4[18] * arg5[18]) + (x101 * arg6[18])), ((arg4[19] * arg5[19]) + (x104 * arg6[19])),
          ((arg4[20] * arg5[20]) + (x107 * arg6[20])), ((arg4[21] * arg5[21]) + (x110 * arg6[21])),
          ((arg4[22] * arg5[22]) + (x113 * arg6[22])), ((arg4[23] * arg5[23]) + (x116 * arg6[23])),
          ((arg4[24] * arg5[24]) + (x119 * arg6[24])), ((arg4[25] * arg5[25]) + (x78 * arg6[25])),
          ((arg4[26] * arg5[26]) + (x82 * arg6[26])),  ((arg4[27] * arg5[27]) + (x86 * arg6[27])),
          ((arg4[28] * arg5[28]) + (x90 * arg6[28])),  ((arg4[29] * arg5[29]) + (x94 * arg6[29])),
          ((arg4[30] * arg5[30]) + (x97 * arg6[30])),  ((arg4[31] * arg5[31]) + (x100 * arg6[31]))},
      LAYOUT_LOOKUP(layout10, packCh));
  // computeAE(zirgen/circuit/keccak/sha256_for_keccak.zir:273)
  Pack2Struct x140 = execPack2(ctx, arg8, LAYOUT_LOOKUP(layout10, _0));
  Pack2Struct x141 = execPack2(ctx, arg7, LAYOUT_LOOKUP(layout10, _1));
  Pack2Struct x142 = execPack2(ctx,
                               Val32Array{((x77 * arg4[25]) + ((Val(1) - x77) * x78)),
                                          ((x81 * arg4[26]) + ((Val(1) - x81) * x82)),
                                          ((x85 * arg4[27]) + ((Val(1) - x85) * x86)),
                                          ((x89 * arg4[28]) + ((Val(1) - x89) * x90)),
                                          ((x93 * arg4[29]) + ((Val(1) - x93) * x94)),
                                          ((x96 * arg4[30]) + ((Val(1) - x96) * x97)),
                                          ((x99 * arg4[31]) + ((Val(1) - x99) * x100)),
                                          ((x102 * arg4[0]) + ((Val(1) - x102) * x103)),
                                          ((x105 * arg4[1]) + ((Val(1) - x105) * x106)),
                                          ((x108 * arg4[2]) + ((Val(1) - x108) * x109)),
                                          ((x111 * arg4[3]) + ((Val(1) - x111) * x112)),
                                          ((x114 * arg4[4]) + ((Val(1) - x114) * x115)),
                                          ((x117 * arg4[5]) + ((Val(1) - x117) * x118)),
                                          ((x120 * arg4[6]) + ((Val(1) - x120) * x75)),
                                          ((x121 * arg4[7]) + ((Val(1) - x121) * x79)),
                                          ((x122 * arg4[8]) + ((Val(1) - x122) * x83)),
                                          ((x123 * arg4[9]) + ((Val(1) - x123) * x87)),
                                          ((x124 * arg4[10]) + ((Val(1) - x124) * x91)),
                                          ((x125 * arg4[11]) + ((Val(1) - x125) * x76)),
                                          ((x126 * arg4[12]) + ((Val(1) - x126) * x80)),
                                          ((x127 * arg4[13]) + ((Val(1) - x127) * x84)),
                                          ((x128 * arg4[14]) + ((Val(1) - x128) * x88)),
                                          ((x129 * arg4[15]) + ((Val(1) - x129) * x92)),
                                          ((x130 * arg4[16]) + ((Val(1) - x130) * x95)),
                                          ((x131 * arg4[17]) + ((Val(1) - x131) * x98)),
                                          ((x132 * arg4[18]) + ((Val(1) - x132) * x101)),
                                          ((x133 * arg4[19]) + ((Val(1) - x133) * x104)),
                                          ((x134 * arg4[20]) + ((Val(1) - x134) * x107)),
                                          ((x135 * arg4[21]) + ((Val(1) - x135) * x110)),
                                          ((x136 * arg4[22]) + ((Val(1) - x136) * x113)),
                                          ((x137 * arg4[23]) + ((Val(1) - x137) * x116)),
                                          ((x138 * arg4[24]) + ((Val(1) - x138) * x119))},
                               LAYOUT_LOOKUP(layout10, _2));
  // computeAE(zirgen/circuit/keccak/sha256_for_keccak.zir:272)
  TwoShortsStruct x143 = x139._super;
  // computeAE(zirgen/circuit/keccak/sha256_for_keccak.zir:273)
  TwoShortsStruct x144 = x142._super;
  TwoShortsStruct x145 = x141._super;
  TwoShortsStruct x146 = x140._super;
  // add(zirgen/circuit/keccak/sha256_for_keccak.zir:250)
  Val x147 = (x146.low + (arg9.low + (x145.low + (x143.low + x144.low))));
  Val x148 = (x146.high + (arg9.high + (x145.high + (x143.high + x144.high))));
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:233)
  // computeAE(zirgen/circuit/keccak/sha256_for_keccak.zir:274)
  Val x149 = (arg0[0] * arg1[0]);
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:234)
  Val x150 = (((x149 * (Val(1) - arg2[0])) + ((arg0[0] * (Val(1) - arg1[0])) * arg2[0])) +
              ((x52 * arg1[0]) * arg2[0]));
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:233)
  Val x151 = (arg0[1] * arg1[1]);
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:234)
  Val x152 = (((x151 * (Val(1) - arg2[1])) + ((arg0[1] * (Val(1) - arg1[1])) * arg2[1])) +
              ((x54 * arg1[1]) * arg2[1]));
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:233)
  Val x153 = (arg0[2] * arg1[2]);
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:234)
  Val x154 = (((x153 * (Val(1) - arg2[2])) + ((arg0[2] * (Val(1) - arg1[2])) * arg2[2])) +
              ((x11 * arg1[2]) * arg2[2]));
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:233)
  Val x155 = (arg0[3] * arg1[3]);
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:234)
  Val x156 = (((x155 * (Val(1) - arg2[3])) + ((arg0[3] * (Val(1) - arg1[3])) * arg2[3])) +
              ((x15 * arg1[3]) * arg2[3]));
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:233)
  Val x157 = (arg0[4] * arg1[4]);
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:234)
  Val x158 = (((x157 * (Val(1) - arg2[4])) + ((arg0[4] * (Val(1) - arg1[4])) * arg2[4])) +
              ((x19 * arg1[4]) * arg2[4]));
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:233)
  Val x159 = (arg0[5] * arg1[5]);
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:234)
  Val x160 = (((x159 * (Val(1) - arg2[5])) + ((arg0[5] * (Val(1) - arg1[5])) * arg2[5])) +
              ((x23 * arg1[5]) * arg2[5]));
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:233)
  Val x161 = (arg0[6] * arg1[6]);
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:234)
  Val x162 = (((x161 * (Val(1) - arg2[6])) + ((arg0[6] * (Val(1) - arg1[6])) * arg2[6])) +
              ((x27 * arg1[6]) * arg2[6]));
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:233)
  Val x163 = (arg0[7] * arg1[7]);
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:234)
  Val x164 = (((x163 * (Val(1) - arg2[7])) + ((arg0[7] * (Val(1) - arg1[7])) * arg2[7])) +
              ((x31 * arg1[7]) * arg2[7]));
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:233)
  Val x165 = (arg0[8] * arg1[8]);
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:234)
  Val x166 = (((x165 * (Val(1) - arg2[8])) + ((arg0[8] * (Val(1) - arg1[8])) * arg2[8])) +
              ((x35 * arg1[8]) * arg2[8]));
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:233)
  Val x167 = (arg0[9] * arg1[9]);
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:234)
  Val x168 = (((x167 * (Val(1) - arg2[9])) + ((arg0[9] * (Val(1) - arg1[9])) * arg2[9])) +
              ((x39 * arg1[9]) * arg2[9]));
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:233)
  Val x169 = (arg0[10] * arg1[10]);
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:234)
  Val x170 = (((x169 * (Val(1) - arg2[10])) + ((arg0[10] * (Val(1) - arg1[10])) * arg2[10])) +
              ((x43 * arg1[10]) * arg2[10]));
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:233)
  Val x171 = (arg0[11] * arg1[11]);
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:234)
  Val x172 = (((x171 * (Val(1) - arg2[11])) + ((arg0[11] * (Val(1) - arg1[11])) * arg2[11])) +
              ((x47 * arg1[11]) * arg2[11]));
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:233)
  Val x173 = (arg0[12] * arg1[12]);
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:234)
  Val x174 = (((x173 * (Val(1) - arg2[12])) + ((arg0[12] * (Val(1) - arg1[12])) * arg2[12])) +
              ((x50 * arg1[12]) * arg2[12]));
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:233)
  Val x175 = (arg0[13] * arg1[13]);
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:234)
  Val x176 = (((x175 * (Val(1) - arg2[13])) + ((arg0[13] * (Val(1) - arg1[13])) * arg2[13])) +
              ((x12 * arg1[13]) * arg2[13]));
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:233)
  Val x177 = (arg0[14] * arg1[14]);
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:234)
  Val x178 = (((x177 * (Val(1) - arg2[14])) + ((arg0[14] * (Val(1) - arg1[14])) * arg2[14])) +
              ((x16 * arg1[14]) * arg2[14]));
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:233)
  Val x179 = (arg0[15] * arg1[15]);
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:234)
  Val x180 = (((x179 * (Val(1) - arg2[15])) + ((arg0[15] * (Val(1) - arg1[15])) * arg2[15])) +
              ((x20 * arg1[15]) * arg2[15]));
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:233)
  Val x181 = (arg0[16] * arg1[16]);
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:234)
  Val x182 = (((x181 * (Val(1) - arg2[16])) + ((arg0[16] * (Val(1) - arg1[16])) * arg2[16])) +
              ((x24 * arg1[16]) * arg2[16]));
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:233)
  Val x183 = (arg0[17] * arg1[17]);
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:234)
  Val x184 = (((x183 * (Val(1) - arg2[17])) + ((arg0[17] * (Val(1) - arg1[17])) * arg2[17])) +
              ((x28 * arg1[17]) * arg2[17]));
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:233)
  Val x185 = (arg0[18] * arg1[18]);
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:234)
  Val x186 = (((x185 * (Val(1) - arg2[18])) + ((arg0[18] * (Val(1) - arg1[18])) * arg2[18])) +
              ((x32 * arg1[18]) * arg2[18]));
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:233)
  Val x187 = (arg0[19] * arg1[19]);
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:234)
  Val x188 = (((x187 * (Val(1) - arg2[19])) + ((arg0[19] * (Val(1) - arg1[19])) * arg2[19])) +
              ((x36 * arg1[19]) * arg2[19]));
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:233)
  Val x189 = (arg0[20] * arg1[20]);
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:234)
  Val x190 = (((x189 * (Val(1) - arg2[20])) + ((arg0[20] * (Val(1) - arg1[20])) * arg2[20])) +
              ((x40 * arg1[20]) * arg2[20]));
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:233)
  Val x191 = (arg0[21] * arg1[21]);
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:234)
  Val x192 = (((x191 * (Val(1) - arg2[21])) + ((arg0[21] * (Val(1) - arg1[21])) * arg2[21])) +
              ((x44 * arg1[21]) * arg2[21]));
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:233)
  Val x193 = (arg0[22] * arg1[22]);
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:234)
  Val x194 = (((x193 * (Val(1) - arg2[22])) + ((arg0[22] * (Val(1) - arg1[22])) * arg2[22])) +
              ((x14 * arg1[22]) * arg2[22]));
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:233)
  Val x195 = (arg0[23] * arg1[23]);
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:234)
  Val x196 = (((x195 * (Val(1) - arg2[23])) + ((arg0[23] * (Val(1) - arg1[23])) * arg2[23])) +
              ((x18 * arg1[23]) * arg2[23]));
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:233)
  Val x197 = (arg0[24] * arg1[24]);
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:234)
  Val x198 = (((x197 * (Val(1) - arg2[24])) + ((arg0[24] * (Val(1) - arg1[24])) * arg2[24])) +
              ((x22 * arg1[24]) * arg2[24]));
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:233)
  Val x199 = (arg0[25] * arg1[25]);
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:234)
  Val x200 = (((x199 * (Val(1) - arg2[25])) + ((arg0[25] * (Val(1) - arg1[25])) * arg2[25])) +
              ((x26 * arg1[25]) * arg2[25]));
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:233)
  Val x201 = (arg0[26] * arg1[26]);
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:234)
  Val x202 = (((x201 * (Val(1) - arg2[26])) + ((arg0[26] * (Val(1) - arg1[26])) * arg2[26])) +
              ((x30 * arg1[26]) * arg2[26]));
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:233)
  Val x203 = (arg0[27] * arg1[27]);
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:234)
  Val x204 = (((x203 * (Val(1) - arg2[27])) + ((arg0[27] * (Val(1) - arg1[27])) * arg2[27])) +
              ((x34 * arg1[27]) * arg2[27]));
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:233)
  Val x205 = (arg0[28] * arg1[28]);
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:234)
  Val x206 = (((x205 * (Val(1) - arg2[28])) + ((arg0[28] * (Val(1) - arg1[28])) * arg2[28])) +
              ((x38 * arg1[28]) * arg2[28]));
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:233)
  Val x207 = (arg0[29] * arg1[29]);
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:234)
  Val x208 = (((x207 * (Val(1) - arg2[29])) + ((arg0[29] * (Val(1) - arg1[29])) * arg2[29])) +
              ((x42 * arg1[29]) * arg2[29]));
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:233)
  Val x209 = (arg0[30] * arg1[30]);
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:234)
  Val x210 = (((x209 * (Val(1) - arg2[30])) + ((arg0[30] * (Val(1) - arg1[30])) * arg2[30])) +
              ((x46 * arg1[30]) * arg2[30]));
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:233)
  Val x211 = (arg0[31] * arg1[31]);
  // maj3(zirgen/circuit/keccak/sha256_for_keccak.zir:234)
  Val x212 = (((x211 * (Val(1) - arg2[31])) + ((arg0[31] * (Val(1) - arg1[31])) * arg2[31])) +
              ((x49 * arg1[31]) * arg2[31]));
  Pack2Struct x213 = execPack2(
      ctx,
      Val32Array{(x150 + (x149 * arg2[0])),  (x152 + (x151 * arg2[1])),  (x154 + (x153 * arg2[2])),
                 (x156 + (x155 * arg2[3])),  (x158 + (x157 * arg2[4])),  (x160 + (x159 * arg2[5])),
                 (x162 + (x161 * arg2[6])),  (x164 + (x163 * arg2[7])),  (x166 + (x165 * arg2[8])),
                 (x168 + (x167 * arg2[9])),  (x170 + (x169 * arg2[10])), (x172 + (x171 * arg2[11])),
                 (x174 + (x173 * arg2[12])), (x176 + (x175 * arg2[13])), (x178 + (x177 * arg2[14])),
                 (x180 + (x179 * arg2[15])), (x182 + (x181 * arg2[16])), (x184 + (x183 * arg2[17])),
                 (x186 + (x185 * arg2[18])), (x188 + (x187 * arg2[19])), (x190 + (x189 * arg2[20])),
                 (x192 + (x191 * arg2[21])), (x194 + (x193 * arg2[22])), (x196 + (x195 * arg2[23])),
                 (x198 + (x197 * arg2[24])), (x200 + (x199 * arg2[25])), (x202 + (x201 * arg2[26])),
                 (x204 + (x203 * arg2[27])), (x206 + (x205 * arg2[28])), (x208 + (x207 * arg2[29])),
                 (x210 + (x209 * arg2[30])), (x212 + (x211 * arg2[31]))},
      LAYOUT_LOOKUP(layout10, packMaj));
  // computeAE(zirgen/circuit/keccak/sha256_for_keccak.zir:275)
  Pack2Struct x214 = execPack2(
      ctx,
      Val32Array{
          ((x13 * arg0[22]) + ((Val(1) - x13) * x14)), ((x17 * arg0[23]) + ((Val(1) - x17) * x18)),
          ((x21 * arg0[24]) + ((Val(1) - x21) * x22)), ((x25 * arg0[25]) + ((Val(1) - x25) * x26)),
          ((x29 * arg0[26]) + ((Val(1) - x29) * x30)), ((x33 * arg0[27]) + ((Val(1) - x33) * x34)),
          ((x37 * arg0[28]) + ((Val(1) - x37) * x38)), ((x41 * arg0[29]) + ((Val(1) - x41) * x42)),
          ((x45 * arg0[30]) + ((Val(1) - x45) * x46)), ((x48 * arg0[31]) + ((Val(1) - x48) * x49)),
          ((x51 * arg0[0]) + ((Val(1) - x51) * x52)),  ((x53 * arg0[1]) + ((Val(1) - x53) * x54)),
          ((x55 * arg0[2]) + ((Val(1) - x55) * x11)),  ((x56 * arg0[3]) + ((Val(1) - x56) * x15)),
          ((x57 * arg0[4]) + ((Val(1) - x57) * x19)),  ((x58 * arg0[5]) + ((Val(1) - x58) * x23)),
          ((x59 * arg0[6]) + ((Val(1) - x59) * x27)),  ((x60 * arg0[7]) + ((Val(1) - x60) * x31)),
          ((x61 * arg0[8]) + ((Val(1) - x61) * x35)),  ((x62 * arg0[9]) + ((Val(1) - x62) * x39)),
          ((x63 * arg0[10]) + ((Val(1) - x63) * x43)), ((x64 * arg0[11]) + ((Val(1) - x64) * x47)),
          ((x65 * arg0[12]) + ((Val(1) - x65) * x50)), ((x66 * arg0[13]) + ((Val(1) - x66) * x12)),
          ((x67 * arg0[14]) + ((Val(1) - x67) * x16)), ((x68 * arg0[15]) + ((Val(1) - x68) * x20)),
          ((x69 * arg0[16]) + ((Val(1) - x69) * x24)), ((x70 * arg0[17]) + ((Val(1) - x70) * x28)),
          ((x71 * arg0[18]) + ((Val(1) - x71) * x32)), ((x72 * arg0[19]) + ((Val(1) - x72) * x36)),
          ((x73 * arg0[20]) + ((Val(1) - x73) * x40)), ((x74 * arg0[21]) + ((Val(1) - x74) * x44))},
      LAYOUT_LOOKUP(layout10, _3));
  // computeAE(zirgen/circuit/keccak/sha256_for_keccak.zir:274)
  TwoShortsStruct x215 = x213._super;
  // computeAE(zirgen/circuit/keccak/sha256_for_keccak.zir:275)
  TwoShortsStruct x216 = x214._super;
  // computeAE(zirgen/circuit/keccak/sha256_for_keccak.zir:276)
  Pack2Struct x217 = execPack2(ctx, arg3, LAYOUT_LOOKUP(layout10, _4));
  TwoShortsStruct x218 = x217._super;
  return ComputeAEStruct{.aOut = TwoShortsStruct{.low = (x147 + (x215.low + x216.low)),
                                                 .high = (x148 + (x215.high + x216.high))},
                         .eOut =
                             TwoShortsStruct{.low = (x147 + x218.low), .high = (x148 + x218.high)}};
}
ToBits_19_Struct
exec_ToBits_19_(ExecContext& ctx, Val arg0, BoundLayout<ToBits_19_Layout> layout1) {
  // ToBits(zirgen/circuit/keccak/sha256_for_keccak.zir:80)
  NondetRegStruct19Array x2 = map(
      Val19Array{Val(0),
                 Val(1),
                 Val(2),
                 Val(3),
                 Val(4),
                 Val(5),
                 Val(6),
                 Val(7),
                 Val(8),
                 Val(9),
                 Val(10),
                 Val(11),
                 Val(12),
                 Val(13),
                 Val(14),
                 Val(15),
                 Val(16),
                 Val(17),
                 Val(18)},
      LAYOUT_LOOKUP(layout1, _super),
      std::function([&](Val19Array::value_type x3,
                        BoundLayout<NondetRegLayout19LayoutArray::value_type> x4) {
        // Div(<preamble>:10)
        Val x5 = inv(Val31Array{Val(1),         Val(2),         Val(4),         Val(8),
                                Val(16),        Val(32),        Val(64),        Val(128),
                                Val(256),       Val(512),       Val(1024),      Val(2048),
                                Val(4096),      Val(8192),      Val(16384),     Val(32768),
                                Val(65536),     Val(131072),    Val(262144),    Val(524288),
                                Val(1048576),   Val(2097152),   Val(4194304),   Val(8388608),
                                Val(16777216),  Val(33554432),  Val(67108864),  Val(134217728),
                                Val(268435456), Val(536870912), Val(1073741824)}[to_size_t(x3)]);
        // Div(<preamble>:11)
        EQZ(((x5 * Val31Array{Val(1),         Val(2),         Val(4),         Val(8),
                              Val(16),        Val(32),        Val(64),        Val(128),
                              Val(256),       Val(512),       Val(1024),      Val(2048),
                              Val(4096),      Val(8192),      Val(16384),     Val(32768),
                              Val(65536),     Val(131072),    Val(262144),    Val(524288),
                              Val(1048576),   Val(2097152),   Val(4194304),   Val(8388608),
                              Val(16777216),  Val(33554432),  Val(67108864),  Val(134217728),
                              Val(268435456), Val(536870912), Val(1073741824)}[to_size_t(x3)]) -
             Val(1)),
            "loc(callsite(\x22Div\x22(\x22<preamble>\x22:11:22) at "
            "\x22ToBits\x22(\x22zirgen/circuit/keccak/sha256_for_keccak.zir\x22:80:43)))");
        NondetRegStruct x6 = exec_NondetBitReg(
            ctx,
            (x5 *
             bitAnd(arg0,
                    Val31Array{Val(1),         Val(2),         Val(4),         Val(8),
                               Val(16),        Val(32),        Val(64),        Val(128),
                               Val(256),       Val(512),       Val(1024),      Val(2048),
                               Val(4096),      Val(8192),      Val(16384),     Val(32768),
                               Val(65536),     Val(131072),    Val(262144),    Val(524288),
                               Val(1048576),   Val(2097152),   Val(4194304),   Val(8388608),
                               Val(16777216),  Val(33554432),  Val(67108864),  Val(134217728),
                               Val(268435456), Val(536870912), Val(1073741824)}[to_size_t(x3)])),
            x4);
        return x6;
      }));
  return ToBits_19_Struct{._super = x2};
}
ToBits_20_Struct
exec_ToBits_20_(ExecContext& ctx, Val arg0, BoundLayout<ToBits_20_Layout> layout1) {
  NondetRegStruct20Array x2 = map(
      Val20Array{Val(0),  Val(1),  Val(2),  Val(3),  Val(4),  Val(5),  Val(6),
                 Val(7),  Val(8),  Val(9),  Val(10), Val(11), Val(12), Val(13),
                 Val(14), Val(15), Val(16), Val(17), Val(18), Val(19)},
      LAYOUT_LOOKUP(layout1, _super),
      std::function([&](Val20Array::value_type x3,
                        BoundLayout<NondetRegLayout20LayoutArray::value_type> x4) {
        // Div(<preamble>:10)
        Val x5 = inv(Val31Array{Val(1),         Val(2),         Val(4),         Val(8),
                                Val(16),        Val(32),        Val(64),        Val(128),
                                Val(256),       Val(512),       Val(1024),      Val(2048),
                                Val(4096),      Val(8192),      Val(16384),     Val(32768),
                                Val(65536),     Val(131072),    Val(262144),    Val(524288),
                                Val(1048576),   Val(2097152),   Val(4194304),   Val(8388608),
                                Val(16777216),  Val(33554432),  Val(67108864),  Val(134217728),
                                Val(268435456), Val(536870912), Val(1073741824)}[to_size_t(x3)]);
        // Div(<preamble>:11)
        EQZ(((x5 * Val31Array{Val(1),         Val(2),         Val(4),         Val(8),
                              Val(16),        Val(32),        Val(64),        Val(128),
                              Val(256),       Val(512),       Val(1024),      Val(2048),
                              Val(4096),      Val(8192),      Val(16384),     Val(32768),
                              Val(65536),     Val(131072),    Val(262144),    Val(524288),
                              Val(1048576),   Val(2097152),   Val(4194304),   Val(8388608),
                              Val(16777216),  Val(33554432),  Val(67108864),  Val(134217728),
                              Val(268435456), Val(536870912), Val(1073741824)}[to_size_t(x3)]) -
             Val(1)),
            "loc(callsite(\x22Div\x22(\x22<preamble>\x22:11:22) at "
            "\x22ToBits\x22(\x22zirgen/circuit/keccak/sha256_for_keccak.zir\x22:80:43)))");
        NondetRegStruct x6 = exec_NondetBitReg(
            ctx,
            (x5 *
             bitAnd(arg0,
                    Val31Array{Val(1),         Val(2),         Val(4),         Val(8),
                               Val(16),        Val(32),        Val(64),        Val(128),
                               Val(256),       Val(512),       Val(1024),      Val(2048),
                               Val(4096),      Val(8192),      Val(16384),     Val(32768),
                               Val(65536),     Val(131072),    Val(262144),    Val(524288),
                               Val(1048576),   Val(2097152),   Val(4194304),   Val(8388608),
                               Val(16777216),  Val(33554432),  Val(67108864),  Val(134217728),
                               Val(268435456), Val(536870912), Val(1073741824)}[to_size_t(x3)])),
            x4);
        return x6;
      }));
  return ToBits_20_Struct{._super = x2};
}
Concatenate_NondetReg__16__16_Struct execUnpackWithCarry(
    ExecContext& ctx, Val arg0, Val arg1, BoundLayout<UnpackWithCarryLayout> layout2) {
  // unpack_with_carry(zirgen/circuit/keccak/sha256_for_keccak.zir:280)
  ToBits_19_Struct x3 = exec_ToBits_19_(ctx, arg0, LAYOUT_LOOKUP(layout2, lowBits));
  NondetRegStruct19Array x4 = x3._super;
  Val x5 = x4[0]._super;
  Val x6 = x4[1]._super;
  Val x7 = x4[2]._super;
  Val x8 = x4[3]._super;
  Val x9 = x4[4]._super;
  Val x10 = x4[5]._super;
  Val x11 = x4[6]._super;
  Val x12 = x4[7]._super;
  Val x13 = x4[8]._super;
  Val x14 = x4[9]._super;
  Val x15 = x4[10]._super;
  Val x16 = x4[11]._super;
  Val x17 = x4[12]._super;
  Val x18 = x4[13]._super;
  Val x19 = x4[14]._super;
  Val x20 = x4[15]._super;
  Val x21 = x4[16]._super;
  Val x22 = x4[17]._super;
  Val x23 = x4[18]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // unpack_with_carry(zirgen/circuit/keccak/sha256_for_keccak.zir:281)
  Val x24 = ((((((x5 + (x6 * Val(2))) + (x7 * Val(4))) + (x8 * Val(8))) + (x9 * Val(16))) +
              (x10 * Val(32))) +
             (x11 * Val(64)));
  Val x25 =
      ((((((x24 + (x12 * Val(128))) + (x13 * Val(256))) + (x14 * Val(512))) + (x15 * Val(1024))) +
        (x16 * Val(2048))) +
       (x17 * Val(4096)));
  Val x26 = ((((((x25 + (x18 * Val(8192))) + (x19 * Val(16384))) + (x20 * Val(32768))) +
               (x21 * Val(65536))) +
              (x22 * Val(131072))) +
             (x23 * Val(262144)));
  EQZ((x26 - arg0), "unpack_with_carry(zirgen/circuit/keccak/sha256_for_keccak.zir:281)");
  // unpack_with_carry(zirgen/circuit/keccak/sha256_for_keccak.zir:283)
  Val x27 = (arg1 + ((x21 + (x22 * Val(2))) + (x23 * Val(4))));
  // unpack_with_carry(zirgen/circuit/keccak/sha256_for_keccak.zir:284)
  ToBits_20_Struct x28 = exec_ToBits_20_(ctx, x27, LAYOUT_LOOKUP(layout2, highBits));
  NondetRegStruct20Array x29 = x28._super;
  Val x30 = x29[0]._super;
  Val x31 = x29[1]._super;
  Val x32 = x29[2]._super;
  Val x33 = x29[3]._super;
  Val x34 = x29[4]._super;
  Val x35 = x29[5]._super;
  Val x36 = x29[6]._super;
  Val x37 = x29[7]._super;
  Val x38 = x29[8]._super;
  Val x39 = x29[9]._super;
  Val x40 = x29[10]._super;
  Val x41 = x29[11]._super;
  Val x42 = x29[12]._super;
  Val x43 = x29[13]._super;
  Val x44 = x29[14]._super;
  Val x45 = x29[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // unpack_with_carry(zirgen/circuit/keccak/sha256_for_keccak.zir:285)
  Val x46 = ((((((x30 + (x31 * Val(2))) + (x32 * Val(4))) + (x33 * Val(8))) + (x34 * Val(16))) +
              (x35 * Val(32))) +
             (x36 * Val(64)));
  Val x47 =
      ((((((x46 + (x37 * Val(128))) + (x38 * Val(256))) + (x39 * Val(512))) + (x40 * Val(1024))) +
        (x41 * Val(2048))) +
       (x42 * Val(4096)));
  Val x48 = ((((((x47 + (x43 * Val(8192))) + (x44 * Val(16384))) + (x45 * Val(32768))) +
               (x29[16]._super * Val(65536))) +
              (x29[17]._super * Val(131072))) +
             (x29[18]._super * Val(262144)));
  EQZ(((x48 + (x29[19]._super * Val(524288))) - x27),
      "unpack_with_carry(zirgen/circuit/keccak/sha256_for_keccak.zir:285)");
  return Concatenate_NondetReg__16__16_Struct{
      ._super = Concatenate_NondetReg__16__16__Super_SuperStruct32Array{
          Concatenate_NondetReg__16__16__Super_SuperStruct{._super = x5},
          Concatenate_NondetReg__16__16__Super_SuperStruct{._super = x6},
          Concatenate_NondetReg__16__16__Super_SuperStruct{._super = x7},
          Concatenate_NondetReg__16__16__Super_SuperStruct{._super = x8},
          Concatenate_NondetReg__16__16__Super_SuperStruct{._super = x9},
          Concatenate_NondetReg__16__16__Super_SuperStruct{._super = x10},
          Concatenate_NondetReg__16__16__Super_SuperStruct{._super = x11},
          Concatenate_NondetReg__16__16__Super_SuperStruct{._super = x12},
          Concatenate_NondetReg__16__16__Super_SuperStruct{._super = x13},
          Concatenate_NondetReg__16__16__Super_SuperStruct{._super = x14},
          Concatenate_NondetReg__16__16__Super_SuperStruct{._super = x15},
          Concatenate_NondetReg__16__16__Super_SuperStruct{._super = x16},
          Concatenate_NondetReg__16__16__Super_SuperStruct{._super = x17},
          Concatenate_NondetReg__16__16__Super_SuperStruct{._super = x18},
          Concatenate_NondetReg__16__16__Super_SuperStruct{._super = x19},
          Concatenate_NondetReg__16__16__Super_SuperStruct{._super = x20},
          Concatenate_NondetReg__16__16__Super_SuperStruct{._super = x30},
          Concatenate_NondetReg__16__16__Super_SuperStruct{._super = x31},
          Concatenate_NondetReg__16__16__Super_SuperStruct{._super = x32},
          Concatenate_NondetReg__16__16__Super_SuperStruct{._super = x33},
          Concatenate_NondetReg__16__16__Super_SuperStruct{._super = x34},
          Concatenate_NondetReg__16__16__Super_SuperStruct{._super = x35},
          Concatenate_NondetReg__16__16__Super_SuperStruct{._super = x36},
          Concatenate_NondetReg__16__16__Super_SuperStruct{._super = x37},
          Concatenate_NondetReg__16__16__Super_SuperStruct{._super = x38},
          Concatenate_NondetReg__16__16__Super_SuperStruct{._super = x39},
          Concatenate_NondetReg__16__16__Super_SuperStruct{._super = x40},
          Concatenate_NondetReg__16__16__Super_SuperStruct{._super = x41},
          Concatenate_NondetReg__16__16__Super_SuperStruct{._super = x42},
          Concatenate_NondetReg__16__16__Super_SuperStruct{._super = x43},
          Concatenate_NondetReg__16__16__Super_SuperStruct{._super = x44},
          Concatenate_NondetReg__16__16__Super_SuperStruct{._super = x45}}};
}
OneHot_16_Struct
exec_OneHot_16_(ExecContext& ctx, Val arg0, BoundLayout<OneHot_16_Layout> layout1) {
  // OneHot(zirgen/circuit/keccak/one_hot.zir:7)
  NondetRegStruct16Array x2 =
      map(Val16Array{Val(0),
                     Val(1),
                     Val(2),
                     Val(3),
                     Val(4),
                     Val(5),
                     Val(6),
                     Val(7),
                     Val(8),
                     Val(9),
                     Val(10),
                     Val(11),
                     Val(12),
                     Val(13),
                     Val(14),
                     Val(15)},
          LAYOUT_LOOKUP(layout1, _super),
          std::function([&](Val16Array::value_type x3,
                            BoundLayout<NondetRegLayout16LayoutArray::value_type> x4) {
            NondetRegStruct x5 = exec_NondetBitReg(ctx, isz((x3 - arg0)), x4);
            return x5;
          }));
  // OneHot(zirgen/circuit/keccak/one_hot.zir:9)
  Val x6 = x2[1]._super;
  Val x7 = x2[2]._super;
  Val x8 = x2[3]._super;
  Val x9 = x2[4]._super;
  Val x10 = ((((x2[0]._super + x6) + x7) + x8) + x9);
  Val x11 = x2[5]._super;
  Val x12 = x2[6]._super;
  Val x13 = x2[7]._super;
  Val x14 = x2[8]._super;
  Val x15 = x2[9]._super;
  Val x16 = x2[10]._super;
  Val x17 = ((((((x10 + x11) + x12) + x13) + x14) + x15) + x16);
  Val x18 = x2[11]._super;
  Val x19 = x2[12]._super;
  Val x20 = x2[13]._super;
  Val x21 = x2[14]._super;
  Val x22 = x2[15]._super;
  Val x23 = ((((((x17 + x18) + x19) + x20) + x21) + x22) - Val(1));
  EQZ(x23, "OneHot(zirgen/circuit/keccak/one_hot.zir:9)");
  // OneHot(zirgen/circuit/keccak/one_hot.zir:11)
  Val x24 = ((((((x6 + (x7 * Val(2))) + (x8 * Val(3))) + (x9 * Val(4))) + (x11 * Val(5))) +
              (x12 * Val(6))) +
             (x13 * Val(7)));
  Val x25 = ((((((x24 + (x14 * Val(8))) + (x15 * Val(9))) + (x16 * Val(10))) + (x18 * Val(11))) +
              (x19 * Val(12))) +
             (x20 * Val(13)));
  EQZ((((x25 + (x21 * Val(14))) + (x22 * Val(15))) - arg0),
      "OneHot(zirgen/circuit/keccak/one_hot.zir:11)");
  return OneHot_16_Struct{._super = x2};
}
ToBits_16_Struct
exec_ToBits_16_(ExecContext& ctx, Val arg0, BoundLayout<ToBits_16_Layout> layout1) {
  // ToBits(zirgen/circuit/keccak/sha256_for_keccak.zir:80)
  NondetRegStruct16Array x2 = map(
      Val16Array{Val(0),
                 Val(1),
                 Val(2),
                 Val(3),
                 Val(4),
                 Val(5),
                 Val(6),
                 Val(7),
                 Val(8),
                 Val(9),
                 Val(10),
                 Val(11),
                 Val(12),
                 Val(13),
                 Val(14),
                 Val(15)},
      LAYOUT_LOOKUP(layout1, _super),
      std::function([&](Val16Array::value_type x3,
                        BoundLayout<NondetRegLayout16LayoutArray::value_type> x4) {
        // Div(<preamble>:10)
        Val x5 = inv(Val31Array{Val(1),         Val(2),         Val(4),         Val(8),
                                Val(16),        Val(32),        Val(64),        Val(128),
                                Val(256),       Val(512),       Val(1024),      Val(2048),
                                Val(4096),      Val(8192),      Val(16384),     Val(32768),
                                Val(65536),     Val(131072),    Val(262144),    Val(524288),
                                Val(1048576),   Val(2097152),   Val(4194304),   Val(8388608),
                                Val(16777216),  Val(33554432),  Val(67108864),  Val(134217728),
                                Val(268435456), Val(536870912), Val(1073741824)}[to_size_t(x3)]);
        // Div(<preamble>:11)
        EQZ(((x5 * Val31Array{Val(1),         Val(2),         Val(4),         Val(8),
                              Val(16),        Val(32),        Val(64),        Val(128),
                              Val(256),       Val(512),       Val(1024),      Val(2048),
                              Val(4096),      Val(8192),      Val(16384),     Val(32768),
                              Val(65536),     Val(131072),    Val(262144),    Val(524288),
                              Val(1048576),   Val(2097152),   Val(4194304),   Val(8388608),
                              Val(16777216),  Val(33554432),  Val(67108864),  Val(134217728),
                              Val(268435456), Val(536870912), Val(1073741824)}[to_size_t(x3)]) -
             Val(1)),
            "loc(callsite(\x22Div\x22(\x22<preamble>\x22:11:22) at "
            "\x22ToBits\x22(\x22zirgen/circuit/keccak/sha256_for_keccak.zir\x22:80:43)))");
        NondetRegStruct x6 = exec_NondetBitReg(
            ctx,
            (x5 *
             bitAnd(arg0,
                    Val31Array{Val(1),         Val(2),         Val(4),         Val(8),
                               Val(16),        Val(32),        Val(64),        Val(128),
                               Val(256),       Val(512),       Val(1024),      Val(2048),
                               Val(4096),      Val(8192),      Val(16384),     Val(32768),
                               Val(65536),     Val(131072),    Val(262144),    Val(524288),
                               Val(1048576),   Val(2097152),   Val(4194304),   Val(8388608),
                               Val(16777216),  Val(33554432),  Val(67108864),  Val(134217728),
                               Val(268435456), Val(536870912), Val(1073741824)}[to_size_t(x3)])),
            x4);
        return x6;
      }));
  return ToBits_16_Struct{._super = x2};
}
RetTupleStruct execSha256load_0_(ExecContext& ctx,
                                 RetTupleStruct arg0,
                                 BoundLayout<RetTupleLayout> arg1,
                                 BoundLayout<Sha256load_0_Layout> layout2) {
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)
  BoundLayout<Sha256load_0_ValsLayout> x3 = LAYOUT_LOOKUP(layout2, vals);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:328)
  BoundLayout<Sha256load_0__SuperLayout> x4 = LAYOUT_LOOKUP(layout2, _super);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:292)
  RetTupleStruct x5 = back_RetTuple(ctx, 1, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:293)
  RetTupleStruct x6 = back_RetTuple(ctx, 2, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:294)
  RetTupleStruct x7 = back_RetTuple(ctx, 3, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:295)
  RetTupleStruct x8 = back_RetTuple(ctx, 4, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:292)
  Val x9 = x5.midx._super;
  Val x10 = x5.blk._super;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:298)
  Val x11 = ((x9 + Val(1)) - x10);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:299)
  NondetRegStruct x12 = exec_NondetReg(ctx, inv(x11), LAYOUT_LOOKUP(layout2, invWithin));
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:300)
  EQZ(((x11 * x12._super) - Val(1)), "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:300)");
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:292)
  Val x13 = x5.rnd._super;
  NondetRegStruct24Array x14 = x5.arrD;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)
  BoundLayout<Reg> x15 =
      LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x3, arm1), _extra0), count), _super);
  Val6Array x16;
  if (to_size_t((Val(1) - x13))) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:303)
    ReadMemoryStruct x17 = exec_ReadMemory(ctx, x10, LAYOUT_LOOKUP(LAYOUT_LOOKUP(x3, arm0), mem));
    NondetRegStruct4Array x18 = x17._super;
    x16 = Val6Array{x18[0]._super, x18[1]._super, x18[2]._super, x18[3]._super, Val(1), x10};
  } else if (to_size_t(x13)) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)
    STORE(x15, Val(0));
    EQZ(LOAD(x15, 0), "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)");
    x16 = Val6Array{x14[0]._super, x14[1]._super, Val(0), Val(0), Val(0), (x10 + Val(1))};
  } else {
    assert(0 && "Reached unreachable mux arm");
  }
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:309)
  ToBits_16_Struct x19 = exec_ToBits_16_(ctx, x16[0], LAYOUT_LOOKUP(layout2, highW));
  NondetRegStruct16Array x20 = x19._super;
  Val x21 = x20[0]._super;
  Val x22 = x20[1]._super;
  Val x23 = x20[2]._super;
  Val x24 = x20[3]._super;
  Val x25 = x20[4]._super;
  Val x26 = x20[5]._super;
  Val x27 = x20[6]._super;
  Val x28 = x20[7]._super;
  Val x29 = x20[8]._super;
  Val x30 = x20[9]._super;
  Val x31 = x20[10]._super;
  Val x32 = x20[11]._super;
  Val x33 = x20[12]._super;
  Val x34 = x20[13]._super;
  Val x35 = x20[14]._super;
  Val x36 = x20[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:310)
  Val x37 = ((((((x21 + (x22 * Val(2))) + (x23 * Val(4))) + (x24 * Val(8))) + (x25 * Val(16))) +
              (x26 * Val(32))) +
             (x27 * Val(64)));
  Val x38 =
      ((((((x37 + (x28 * Val(128))) + (x29 * Val(256))) + (x30 * Val(512))) + (x31 * Val(1024))) +
        (x32 * Val(2048))) +
       (x33 * Val(4096)));
  EQZ(((((x38 + (x34 * Val(8192))) + (x35 * Val(16384))) + (x36 * Val(32768))) - x16[0]),
      "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:310)");
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:312)
  ToBits_16_Struct x39 = exec_ToBits_16_(ctx, x16[1], LAYOUT_LOOKUP(layout2, lowW));
  NondetRegStruct16Array x40 = x39._super;
  Val x41 = x40[0]._super;
  Val x42 = x40[1]._super;
  Val x43 = x40[2]._super;
  Val x44 = x40[3]._super;
  Val x45 = x40[4]._super;
  Val x46 = x40[5]._super;
  Val x47 = x40[6]._super;
  Val x48 = x40[7]._super;
  Val x49 = x40[8]._super;
  Val x50 = x40[9]._super;
  Val x51 = x40[10]._super;
  Val x52 = x40[11]._super;
  Val x53 = x40[12]._super;
  Val x54 = x40[13]._super;
  Val x55 = x40[14]._super;
  Val x56 = x40[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:313)
  Val x57 = ((((((x41 + (x42 * Val(2))) + (x43 * Val(4))) + (x44 * Val(8))) + (x45 * Val(16))) +
              (x46 * Val(32))) +
             (x47 * Val(64)));
  Val x58 =
      ((((((x57 + (x48 * Val(128))) + (x49 * Val(256))) + (x50 * Val(512))) + (x51 * Val(1024))) +
        (x52 * Val(2048))) +
       (x53 * Val(4096)));
  EQZ(((((x58 + (x54 * Val(8192))) + (x55 * Val(16384))) + (x56 * Val(32768))) - x16[1]),
      "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:313)");
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:320)
  NondetRegStruct22Array x59 = x5.arrA;
  NondetRegStruct22Array x60 = x5.arrB;
  NondetRegStruct22Array x61 = x6.arrA;
  NondetRegStruct22Array x62 = x6.arrB;
  NondetRegStruct22Array x63 = x7.arrA;
  NondetRegStruct22Array x64 = x7.arrB;
  NondetRegStruct22Array x65 = x8.arrA;
  NondetRegStruct22Array x66 = x8.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:321)
  NondetRegStruct22Array x67 = x5.arrC;
  NondetRegStruct22Array x68 = x6.arrC;
  NondetRegStruct22Array x69 = x7.arrC;
  NondetRegStruct22Array x70 = x8.arrC;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:320)
  ComputeAEStruct x71 = execComputeAE(
      ctx,
      Val32Array{x59[0]._super,  x59[1]._super,  x59[2]._super,  x59[3]._super,  x59[4]._super,
                 x59[5]._super,  x59[6]._super,  x59[7]._super,  x59[8]._super,  x59[9]._super,
                 x59[10]._super, x59[11]._super, x59[12]._super, x59[13]._super, x59[14]._super,
                 x59[15]._super, x59[16]._super, x59[17]._super, x59[18]._super, x59[19]._super,
                 x59[20]._super, x59[21]._super, x60[0]._super,  x60[1]._super,  x60[2]._super,
                 x60[3]._super,  x60[4]._super,  x60[5]._super,  x60[6]._super,  x60[7]._super,
                 x60[8]._super,  x60[9]._super},
      Val32Array{x61[0]._super,  x61[1]._super,  x61[2]._super,  x61[3]._super,  x61[4]._super,
                 x61[5]._super,  x61[6]._super,  x61[7]._super,  x61[8]._super,  x61[9]._super,
                 x61[10]._super, x61[11]._super, x61[12]._super, x61[13]._super, x61[14]._super,
                 x61[15]._super, x61[16]._super, x61[17]._super, x61[18]._super, x61[19]._super,
                 x61[20]._super, x61[21]._super, x62[0]._super,  x62[1]._super,  x62[2]._super,
                 x62[3]._super,  x62[4]._super,  x62[5]._super,  x62[6]._super,  x62[7]._super,
                 x62[8]._super,  x62[9]._super},
      Val32Array{x63[0]._super,  x63[1]._super,  x63[2]._super,  x63[3]._super,  x63[4]._super,
                 x63[5]._super,  x63[6]._super,  x63[7]._super,  x63[8]._super,  x63[9]._super,
                 x63[10]._super, x63[11]._super, x63[12]._super, x63[13]._super, x63[14]._super,
                 x63[15]._super, x63[16]._super, x63[17]._super, x63[18]._super, x63[19]._super,
                 x63[20]._super, x63[21]._super, x64[0]._super,  x64[1]._super,  x64[2]._super,
                 x64[3]._super,  x64[4]._super,  x64[5]._super,  x64[6]._super,  x64[7]._super,
                 x64[8]._super,  x64[9]._super},
      Val32Array{x65[0]._super,  x65[1]._super,  x65[2]._super,  x65[3]._super,  x65[4]._super,
                 x65[5]._super,  x65[6]._super,  x65[7]._super,  x65[8]._super,  x65[9]._super,
                 x65[10]._super, x65[11]._super, x65[12]._super, x65[13]._super, x65[14]._super,
                 x65[15]._super, x65[16]._super, x65[17]._super, x65[18]._super, x65[19]._super,
                 x65[20]._super, x65[21]._super, x66[0]._super,  x66[1]._super,  x66[2]._super,
                 x66[3]._super,  x66[4]._super,  x66[5]._super,  x66[6]._super,  x66[7]._super,
                 x66[8]._super,  x66[9]._super},
      Val32Array{x60[10]._super, x60[11]._super, x60[12]._super, x60[13]._super, x60[14]._super,
                 x60[15]._super, x60[16]._super, x60[17]._super, x60[18]._super, x60[19]._super,
                 x60[20]._super, x60[21]._super, x67[0]._super,  x67[1]._super,  x67[2]._super,
                 x67[3]._super,  x67[4]._super,  x67[5]._super,  x67[6]._super,  x67[7]._super,
                 x67[8]._super,  x67[9]._super,  x67[10]._super, x67[11]._super, x67[12]._super,
                 x67[13]._super, x67[14]._super, x67[15]._super, x67[16]._super, x67[17]._super,
                 x67[18]._super, x67[19]._super},
      Val32Array{x62[10]._super, x62[11]._super, x62[12]._super, x62[13]._super, x62[14]._super,
                 x62[15]._super, x62[16]._super, x62[17]._super, x62[18]._super, x62[19]._super,
                 x62[20]._super, x62[21]._super, x68[0]._super,  x68[1]._super,  x68[2]._super,
                 x68[3]._super,  x68[4]._super,  x68[5]._super,  x68[6]._super,  x68[7]._super,
                 x68[8]._super,  x68[9]._super,  x68[10]._super, x68[11]._super, x68[12]._super,
                 x68[13]._super, x68[14]._super, x68[15]._super, x68[16]._super, x68[17]._super,
                 x68[18]._super, x68[19]._super},
      Val32Array{x64[10]._super, x64[11]._super, x64[12]._super, x64[13]._super, x64[14]._super,
                 x64[15]._super, x64[16]._super, x64[17]._super, x64[18]._super, x64[19]._super,
                 x64[20]._super, x64[21]._super, x69[0]._super,  x69[1]._super,  x69[2]._super,
                 x69[3]._super,  x69[4]._super,  x69[5]._super,  x69[6]._super,  x69[7]._super,
                 x69[8]._super,  x69[9]._super,  x69[10]._super, x69[11]._super, x69[12]._super,
                 x69[13]._super, x69[14]._super, x69[15]._super, x69[16]._super, x69[17]._super,
                 x69[18]._super, x69[19]._super},
      Val32Array{x66[10]._super, x66[11]._super, x66[12]._super, x66[13]._super, x66[14]._super,
                 x66[15]._super, x66[16]._super, x66[17]._super, x66[18]._super, x66[19]._super,
                 x66[20]._super, x66[21]._super, x70[0]._super,  x70[1]._super,  x70[2]._super,
                 x70[3]._super,  x70[4]._super,  x70[5]._super,  x70[6]._super,  x70[7]._super,
                 x70[8]._super,  x70[9]._super,  x70[10]._super, x70[11]._super, x70[12]._super,
                 x70[13]._super, x70[14]._super, x70[15]._super, x70[16]._super, x70[17]._super,
                 x70[18]._super, x70[19]._super},
      Val32Array{x49, x50, x51, x52, x53, x54, x55, x56, x41, x42, x43, x44, x45, x46, x47, x48,
                 x29, x30, x31, x32, x33, x34, x35, x36, x21, x22, x23, x24, x25, x26, x27, x28},
      TwoShortsStruct{.low = Val(12184), .high = Val(17034)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x72 = x71.aOut;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:323)
  Concatenate_NondetReg__16__16_Struct x73 =
      execUnpackWithCarry(ctx, x72.low, x72.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:320)
  TwoShortsStruct x74 = x71.eOut;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:324)
  Concatenate_NondetReg__16__16_Struct x75 =
      execUnpackWithCarry(ctx, x74.low, x74.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:323)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x76 = x73._super;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:324)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x77 = x75._super;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:327)
  Val24Array x78 = Val24Array{x16[2], x16[3], Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:326)
  Val22Array x79 =
      Val22Array{x76[0]._super,  x76[1]._super,  x76[2]._super,  x76[3]._super,  x76[4]._super,
                 x76[5]._super,  x76[6]._super,  x76[7]._super,  x76[8]._super,  x76[9]._super,
                 x76[10]._super, x76[11]._super, x76[12]._super, x76[13]._super, x76[14]._super,
                 x76[15]._super, x76[16]._super, x76[17]._super, x76[18]._super, x76[19]._super,
                 x76[20]._super, x76[21]._super};
  Val22Array x80 =
      Val22Array{x76[22]._super, x76[23]._super, x76[24]._super, x76[25]._super, x76[26]._super,
                 x76[27]._super, x76[28]._super, x76[29]._super, x76[30]._super, x76[31]._super,
                 x77[0]._super,  x77[1]._super,  x77[2]._super,  x77[3]._super,  x77[4]._super,
                 x77[5]._super,  x77[6]._super,  x77[7]._super,  x77[8]._super,  x77[9]._super,
                 x77[10]._super, x77[11]._super};
  Val22Array x81 =
      Val22Array{x77[12]._super, x77[13]._super, x77[14]._super, x77[15]._super, x77[16]._super,
                 x77[17]._super, x77[18]._super, x77[19]._super, x77[20]._super, x77[21]._super,
                 x77[22]._super, x77[23]._super, x77[24]._super, x77[25]._super, x77[26]._super,
                 x77[27]._super, x77[28]._super, x77[29]._super, x77[30]._super, x77[31]._super,
                 Val(0),         Val(0)};
  Val22Array x82 = Val22Array{x49, x50, x51, x52, x53, x54, x55, x56, x41, x42, x43,
                              x44, x45, x46, x47, x48, x29, x30, x31, x32, x33, x34};
  Val22Array x83 = Val22Array{x35,    x36,    x21,    x22,    x23,    x24,    x25,    x26,
                              x27,    x28,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  if (to_size_t(Val(1))) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:329)
    RetTupleStruct x84 = exec_RetTuple(ctx,
                                       x79,
                                       x80,
                                       x81,
                                       x78,
                                       x82,
                                       x83,
                                       Val(1),
                                       Val(19),
                                       x16[4],
                                       x16[5],
                                       x9,
                                       LAYOUT_LOOKUP(x4, arm0));
  }
  if (to_size_t(Val(0))) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:331)
    RetTupleStruct x85 = exec_RetTuple(ctx,
                                       x79,
                                       x80,
                                       x81,
                                       x78,
                                       x82,
                                       x83,
                                       Val(0),
                                       Val(20),
                                       x16[4],
                                       x16[5],
                                       x9,
                                       LAYOUT_LOOKUP(x4, arm1));
  }
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:328)
  RetTupleStruct x86 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x4, _super));
  return x86;
}
RetTupleStruct execSha256load_1_(ExecContext& ctx,
                                 RetTupleStruct arg0,
                                 BoundLayout<RetTupleLayout> arg1,
                                 BoundLayout<Sha256load_1_Layout> layout2) {
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)
  BoundLayout<Sha256load_1_ValsLayout> x3 = LAYOUT_LOOKUP(layout2, vals);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:328)
  BoundLayout<Sha256load_1__SuperLayout> x4 = LAYOUT_LOOKUP(layout2, _super);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:292)
  RetTupleStruct x5 = back_RetTuple(ctx, 1, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:293)
  RetTupleStruct x6 = back_RetTuple(ctx, 2, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:294)
  RetTupleStruct x7 = back_RetTuple(ctx, 3, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:295)
  RetTupleStruct x8 = back_RetTuple(ctx, 4, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:292)
  Val x9 = x5.midx._super;
  Val x10 = x5.blk._super;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:298)
  Val x11 = ((x9 + Val(1)) - x10);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:299)
  NondetRegStruct x12 = exec_NondetReg(ctx, inv(x11), LAYOUT_LOOKUP(layout2, invWithin));
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:300)
  EQZ(((x11 * x12._super) - Val(1)), "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:300)");
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:292)
  Val x13 = x5.rnd._super;
  NondetRegStruct24Array x14 = x5.arrD;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)
  BoundLayout<Reg> x15 =
      LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x3, arm1), _extra0), count), _super);
  Val6Array x16;
  if (to_size_t((Val(1) - x13))) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:303)
    ReadMemoryStruct x17 = exec_ReadMemory(ctx, x10, LAYOUT_LOOKUP(LAYOUT_LOOKUP(x3, arm0), mem));
    NondetRegStruct4Array x18 = x17._super;
    x16 = Val6Array{x18[0]._super, x18[1]._super, x18[2]._super, x18[3]._super, Val(1), x10};
  } else if (to_size_t(x13)) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)
    STORE(x15, Val(0));
    EQZ(LOAD(x15, 0), "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)");
    x16 = Val6Array{x14[0]._super, x14[1]._super, Val(0), Val(0), Val(0), (x10 + Val(1))};
  } else {
    assert(0 && "Reached unreachable mux arm");
  }
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:309)
  ToBits_16_Struct x19 = exec_ToBits_16_(ctx, x16[0], LAYOUT_LOOKUP(layout2, highW));
  NondetRegStruct16Array x20 = x19._super;
  Val x21 = x20[0]._super;
  Val x22 = x20[1]._super;
  Val x23 = x20[2]._super;
  Val x24 = x20[3]._super;
  Val x25 = x20[4]._super;
  Val x26 = x20[5]._super;
  Val x27 = x20[6]._super;
  Val x28 = x20[7]._super;
  Val x29 = x20[8]._super;
  Val x30 = x20[9]._super;
  Val x31 = x20[10]._super;
  Val x32 = x20[11]._super;
  Val x33 = x20[12]._super;
  Val x34 = x20[13]._super;
  Val x35 = x20[14]._super;
  Val x36 = x20[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:310)
  Val x37 = ((((((x21 + (x22 * Val(2))) + (x23 * Val(4))) + (x24 * Val(8))) + (x25 * Val(16))) +
              (x26 * Val(32))) +
             (x27 * Val(64)));
  Val x38 =
      ((((((x37 + (x28 * Val(128))) + (x29 * Val(256))) + (x30 * Val(512))) + (x31 * Val(1024))) +
        (x32 * Val(2048))) +
       (x33 * Val(4096)));
  EQZ(((((x38 + (x34 * Val(8192))) + (x35 * Val(16384))) + (x36 * Val(32768))) - x16[0]),
      "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:310)");
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:312)
  ToBits_16_Struct x39 = exec_ToBits_16_(ctx, x16[1], LAYOUT_LOOKUP(layout2, lowW));
  NondetRegStruct16Array x40 = x39._super;
  Val x41 = x40[0]._super;
  Val x42 = x40[1]._super;
  Val x43 = x40[2]._super;
  Val x44 = x40[3]._super;
  Val x45 = x40[4]._super;
  Val x46 = x40[5]._super;
  Val x47 = x40[6]._super;
  Val x48 = x40[7]._super;
  Val x49 = x40[8]._super;
  Val x50 = x40[9]._super;
  Val x51 = x40[10]._super;
  Val x52 = x40[11]._super;
  Val x53 = x40[12]._super;
  Val x54 = x40[13]._super;
  Val x55 = x40[14]._super;
  Val x56 = x40[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:313)
  Val x57 = ((((((x41 + (x42 * Val(2))) + (x43 * Val(4))) + (x44 * Val(8))) + (x45 * Val(16))) +
              (x46 * Val(32))) +
             (x47 * Val(64)));
  Val x58 =
      ((((((x57 + (x48 * Val(128))) + (x49 * Val(256))) + (x50 * Val(512))) + (x51 * Val(1024))) +
        (x52 * Val(2048))) +
       (x53 * Val(4096)));
  EQZ(((((x58 + (x54 * Val(8192))) + (x55 * Val(16384))) + (x56 * Val(32768))) - x16[1]),
      "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:313)");
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:320)
  NondetRegStruct22Array x59 = x5.arrA;
  NondetRegStruct22Array x60 = x5.arrB;
  NondetRegStruct22Array x61 = x6.arrA;
  NondetRegStruct22Array x62 = x6.arrB;
  NondetRegStruct22Array x63 = x7.arrA;
  NondetRegStruct22Array x64 = x7.arrB;
  NondetRegStruct22Array x65 = x8.arrA;
  NondetRegStruct22Array x66 = x8.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:321)
  NondetRegStruct22Array x67 = x5.arrC;
  NondetRegStruct22Array x68 = x6.arrC;
  NondetRegStruct22Array x69 = x7.arrC;
  NondetRegStruct22Array x70 = x8.arrC;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:320)
  ComputeAEStruct x71 = execComputeAE(
      ctx,
      Val32Array{x59[0]._super,  x59[1]._super,  x59[2]._super,  x59[3]._super,  x59[4]._super,
                 x59[5]._super,  x59[6]._super,  x59[7]._super,  x59[8]._super,  x59[9]._super,
                 x59[10]._super, x59[11]._super, x59[12]._super, x59[13]._super, x59[14]._super,
                 x59[15]._super, x59[16]._super, x59[17]._super, x59[18]._super, x59[19]._super,
                 x59[20]._super, x59[21]._super, x60[0]._super,  x60[1]._super,  x60[2]._super,
                 x60[3]._super,  x60[4]._super,  x60[5]._super,  x60[6]._super,  x60[7]._super,
                 x60[8]._super,  x60[9]._super},
      Val32Array{x61[0]._super,  x61[1]._super,  x61[2]._super,  x61[3]._super,  x61[4]._super,
                 x61[5]._super,  x61[6]._super,  x61[7]._super,  x61[8]._super,  x61[9]._super,
                 x61[10]._super, x61[11]._super, x61[12]._super, x61[13]._super, x61[14]._super,
                 x61[15]._super, x61[16]._super, x61[17]._super, x61[18]._super, x61[19]._super,
                 x61[20]._super, x61[21]._super, x62[0]._super,  x62[1]._super,  x62[2]._super,
                 x62[3]._super,  x62[4]._super,  x62[5]._super,  x62[6]._super,  x62[7]._super,
                 x62[8]._super,  x62[9]._super},
      Val32Array{x63[0]._super,  x63[1]._super,  x63[2]._super,  x63[3]._super,  x63[4]._super,
                 x63[5]._super,  x63[6]._super,  x63[7]._super,  x63[8]._super,  x63[9]._super,
                 x63[10]._super, x63[11]._super, x63[12]._super, x63[13]._super, x63[14]._super,
                 x63[15]._super, x63[16]._super, x63[17]._super, x63[18]._super, x63[19]._super,
                 x63[20]._super, x63[21]._super, x64[0]._super,  x64[1]._super,  x64[2]._super,
                 x64[3]._super,  x64[4]._super,  x64[5]._super,  x64[6]._super,  x64[7]._super,
                 x64[8]._super,  x64[9]._super},
      Val32Array{x65[0]._super,  x65[1]._super,  x65[2]._super,  x65[3]._super,  x65[4]._super,
                 x65[5]._super,  x65[6]._super,  x65[7]._super,  x65[8]._super,  x65[9]._super,
                 x65[10]._super, x65[11]._super, x65[12]._super, x65[13]._super, x65[14]._super,
                 x65[15]._super, x65[16]._super, x65[17]._super, x65[18]._super, x65[19]._super,
                 x65[20]._super, x65[21]._super, x66[0]._super,  x66[1]._super,  x66[2]._super,
                 x66[3]._super,  x66[4]._super,  x66[5]._super,  x66[6]._super,  x66[7]._super,
                 x66[8]._super,  x66[9]._super},
      Val32Array{x60[10]._super, x60[11]._super, x60[12]._super, x60[13]._super, x60[14]._super,
                 x60[15]._super, x60[16]._super, x60[17]._super, x60[18]._super, x60[19]._super,
                 x60[20]._super, x60[21]._super, x67[0]._super,  x67[1]._super,  x67[2]._super,
                 x67[3]._super,  x67[4]._super,  x67[5]._super,  x67[6]._super,  x67[7]._super,
                 x67[8]._super,  x67[9]._super,  x67[10]._super, x67[11]._super, x67[12]._super,
                 x67[13]._super, x67[14]._super, x67[15]._super, x67[16]._super, x67[17]._super,
                 x67[18]._super, x67[19]._super},
      Val32Array{x62[10]._super, x62[11]._super, x62[12]._super, x62[13]._super, x62[14]._super,
                 x62[15]._super, x62[16]._super, x62[17]._super, x62[18]._super, x62[19]._super,
                 x62[20]._super, x62[21]._super, x68[0]._super,  x68[1]._super,  x68[2]._super,
                 x68[3]._super,  x68[4]._super,  x68[5]._super,  x68[6]._super,  x68[7]._super,
                 x68[8]._super,  x68[9]._super,  x68[10]._super, x68[11]._super, x68[12]._super,
                 x68[13]._super, x68[14]._super, x68[15]._super, x68[16]._super, x68[17]._super,
                 x68[18]._super, x68[19]._super},
      Val32Array{x64[10]._super, x64[11]._super, x64[12]._super, x64[13]._super, x64[14]._super,
                 x64[15]._super, x64[16]._super, x64[17]._super, x64[18]._super, x64[19]._super,
                 x64[20]._super, x64[21]._super, x69[0]._super,  x69[1]._super,  x69[2]._super,
                 x69[3]._super,  x69[4]._super,  x69[5]._super,  x69[6]._super,  x69[7]._super,
                 x69[8]._super,  x69[9]._super,  x69[10]._super, x69[11]._super, x69[12]._super,
                 x69[13]._super, x69[14]._super, x69[15]._super, x69[16]._super, x69[17]._super,
                 x69[18]._super, x69[19]._super},
      Val32Array{x66[10]._super, x66[11]._super, x66[12]._super, x66[13]._super, x66[14]._super,
                 x66[15]._super, x66[16]._super, x66[17]._super, x66[18]._super, x66[19]._super,
                 x66[20]._super, x66[21]._super, x70[0]._super,  x70[1]._super,  x70[2]._super,
                 x70[3]._super,  x70[4]._super,  x70[5]._super,  x70[6]._super,  x70[7]._super,
                 x70[8]._super,  x70[9]._super,  x70[10]._super, x70[11]._super, x70[12]._super,
                 x70[13]._super, x70[14]._super, x70[15]._super, x70[16]._super, x70[17]._super,
                 x70[18]._super, x70[19]._super},
      Val32Array{x49, x50, x51, x52, x53, x54, x55, x56, x41, x42, x43, x44, x45, x46, x47, x48,
                 x29, x30, x31, x32, x33, x34, x35, x36, x21, x22, x23, x24, x25, x26, x27, x28},
      TwoShortsStruct{.low = Val(17553), .high = Val(28983)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x72 = x71.aOut;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:323)
  Concatenate_NondetReg__16__16_Struct x73 =
      execUnpackWithCarry(ctx, x72.low, x72.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:320)
  TwoShortsStruct x74 = x71.eOut;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:324)
  Concatenate_NondetReg__16__16_Struct x75 =
      execUnpackWithCarry(ctx, x74.low, x74.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:323)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x76 = x73._super;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:324)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x77 = x75._super;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:327)
  Val24Array x78 = Val24Array{x16[2], x16[3], Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:326)
  Val22Array x79 =
      Val22Array{x76[0]._super,  x76[1]._super,  x76[2]._super,  x76[3]._super,  x76[4]._super,
                 x76[5]._super,  x76[6]._super,  x76[7]._super,  x76[8]._super,  x76[9]._super,
                 x76[10]._super, x76[11]._super, x76[12]._super, x76[13]._super, x76[14]._super,
                 x76[15]._super, x76[16]._super, x76[17]._super, x76[18]._super, x76[19]._super,
                 x76[20]._super, x76[21]._super};
  Val22Array x80 =
      Val22Array{x76[22]._super, x76[23]._super, x76[24]._super, x76[25]._super, x76[26]._super,
                 x76[27]._super, x76[28]._super, x76[29]._super, x76[30]._super, x76[31]._super,
                 x77[0]._super,  x77[1]._super,  x77[2]._super,  x77[3]._super,  x77[4]._super,
                 x77[5]._super,  x77[6]._super,  x77[7]._super,  x77[8]._super,  x77[9]._super,
                 x77[10]._super, x77[11]._super};
  Val22Array x81 =
      Val22Array{x77[12]._super, x77[13]._super, x77[14]._super, x77[15]._super, x77[16]._super,
                 x77[17]._super, x77[18]._super, x77[19]._super, x77[20]._super, x77[21]._super,
                 x77[22]._super, x77[23]._super, x77[24]._super, x77[25]._super, x77[26]._super,
                 x77[27]._super, x77[28]._super, x77[29]._super, x77[30]._super, x77[31]._super,
                 Val(0),         Val(0)};
  Val22Array x82 = Val22Array{x49, x50, x51, x52, x53, x54, x55, x56, x41, x42, x43,
                              x44, x45, x46, x47, x48, x29, x30, x31, x32, x33, x34};
  Val22Array x83 = Val22Array{x35,    x36,    x21,    x22,    x23,    x24,    x25,    x26,
                              x27,    x28,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  if (to_size_t(Val(1))) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:329)
    RetTupleStruct x84 = exec_RetTuple(ctx,
                                       x79,
                                       x80,
                                       x81,
                                       x78,
                                       x82,
                                       x83,
                                       Val(2),
                                       Val(19),
                                       x16[4],
                                       x16[5],
                                       x9,
                                       LAYOUT_LOOKUP(x4, arm0));
  }
  if (to_size_t(Val(0))) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:331)
    RetTupleStruct x85 = exec_RetTuple(ctx,
                                       x79,
                                       x80,
                                       x81,
                                       x78,
                                       x82,
                                       x83,
                                       Val(0),
                                       Val(20),
                                       x16[4],
                                       x16[5],
                                       x9,
                                       LAYOUT_LOOKUP(x4, arm1));
  }
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:328)
  RetTupleStruct x86 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x4, _super));
  return x86;
}
RetTupleStruct execSha256load_2_(ExecContext& ctx,
                                 RetTupleStruct arg0,
                                 BoundLayout<RetTupleLayout> arg1,
                                 BoundLayout<Sha256load_2_Layout> layout2) {
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)
  BoundLayout<Sha256load_2_ValsLayout> x3 = LAYOUT_LOOKUP(layout2, vals);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:328)
  BoundLayout<Sha256load_2__SuperLayout> x4 = LAYOUT_LOOKUP(layout2, _super);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:292)
  RetTupleStruct x5 = back_RetTuple(ctx, 1, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:293)
  RetTupleStruct x6 = back_RetTuple(ctx, 2, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:294)
  RetTupleStruct x7 = back_RetTuple(ctx, 3, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:295)
  RetTupleStruct x8 = back_RetTuple(ctx, 4, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:292)
  Val x9 = x5.midx._super;
  Val x10 = x5.blk._super;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:298)
  Val x11 = ((x9 + Val(1)) - x10);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:299)
  NondetRegStruct x12 = exec_NondetReg(ctx, inv(x11), LAYOUT_LOOKUP(layout2, invWithin));
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:300)
  EQZ(((x11 * x12._super) - Val(1)), "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:300)");
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:292)
  Val x13 = x5.rnd._super;
  NondetRegStruct24Array x14 = x5.arrD;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)
  BoundLayout<Reg> x15 =
      LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x3, arm1), _extra0), count), _super);
  Val6Array x16;
  if (to_size_t((Val(1) - x13))) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:303)
    ReadMemoryStruct x17 = exec_ReadMemory(ctx, x10, LAYOUT_LOOKUP(LAYOUT_LOOKUP(x3, arm0), mem));
    NondetRegStruct4Array x18 = x17._super;
    x16 = Val6Array{x18[0]._super, x18[1]._super, x18[2]._super, x18[3]._super, Val(1), x10};
  } else if (to_size_t(x13)) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)
    STORE(x15, Val(0));
    EQZ(LOAD(x15, 0), "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)");
    x16 = Val6Array{x14[0]._super, x14[1]._super, Val(0), Val(0), Val(0), (x10 + Val(1))};
  } else {
    assert(0 && "Reached unreachable mux arm");
  }
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:309)
  ToBits_16_Struct x19 = exec_ToBits_16_(ctx, x16[0], LAYOUT_LOOKUP(layout2, highW));
  NondetRegStruct16Array x20 = x19._super;
  Val x21 = x20[0]._super;
  Val x22 = x20[1]._super;
  Val x23 = x20[2]._super;
  Val x24 = x20[3]._super;
  Val x25 = x20[4]._super;
  Val x26 = x20[5]._super;
  Val x27 = x20[6]._super;
  Val x28 = x20[7]._super;
  Val x29 = x20[8]._super;
  Val x30 = x20[9]._super;
  Val x31 = x20[10]._super;
  Val x32 = x20[11]._super;
  Val x33 = x20[12]._super;
  Val x34 = x20[13]._super;
  Val x35 = x20[14]._super;
  Val x36 = x20[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:310)
  Val x37 = ((((((x21 + (x22 * Val(2))) + (x23 * Val(4))) + (x24 * Val(8))) + (x25 * Val(16))) +
              (x26 * Val(32))) +
             (x27 * Val(64)));
  Val x38 =
      ((((((x37 + (x28 * Val(128))) + (x29 * Val(256))) + (x30 * Val(512))) + (x31 * Val(1024))) +
        (x32 * Val(2048))) +
       (x33 * Val(4096)));
  EQZ(((((x38 + (x34 * Val(8192))) + (x35 * Val(16384))) + (x36 * Val(32768))) - x16[0]),
      "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:310)");
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:312)
  ToBits_16_Struct x39 = exec_ToBits_16_(ctx, x16[1], LAYOUT_LOOKUP(layout2, lowW));
  NondetRegStruct16Array x40 = x39._super;
  Val x41 = x40[0]._super;
  Val x42 = x40[1]._super;
  Val x43 = x40[2]._super;
  Val x44 = x40[3]._super;
  Val x45 = x40[4]._super;
  Val x46 = x40[5]._super;
  Val x47 = x40[6]._super;
  Val x48 = x40[7]._super;
  Val x49 = x40[8]._super;
  Val x50 = x40[9]._super;
  Val x51 = x40[10]._super;
  Val x52 = x40[11]._super;
  Val x53 = x40[12]._super;
  Val x54 = x40[13]._super;
  Val x55 = x40[14]._super;
  Val x56 = x40[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:313)
  Val x57 = ((((((x41 + (x42 * Val(2))) + (x43 * Val(4))) + (x44 * Val(8))) + (x45 * Val(16))) +
              (x46 * Val(32))) +
             (x47 * Val(64)));
  Val x58 =
      ((((((x57 + (x48 * Val(128))) + (x49 * Val(256))) + (x50 * Val(512))) + (x51 * Val(1024))) +
        (x52 * Val(2048))) +
       (x53 * Val(4096)));
  EQZ(((((x58 + (x54 * Val(8192))) + (x55 * Val(16384))) + (x56 * Val(32768))) - x16[1]),
      "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:313)");
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:320)
  NondetRegStruct22Array x59 = x5.arrA;
  NondetRegStruct22Array x60 = x5.arrB;
  NondetRegStruct22Array x61 = x6.arrA;
  NondetRegStruct22Array x62 = x6.arrB;
  NondetRegStruct22Array x63 = x7.arrA;
  NondetRegStruct22Array x64 = x7.arrB;
  NondetRegStruct22Array x65 = x8.arrA;
  NondetRegStruct22Array x66 = x8.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:321)
  NondetRegStruct22Array x67 = x5.arrC;
  NondetRegStruct22Array x68 = x6.arrC;
  NondetRegStruct22Array x69 = x7.arrC;
  NondetRegStruct22Array x70 = x8.arrC;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:320)
  ComputeAEStruct x71 = execComputeAE(
      ctx,
      Val32Array{x59[0]._super,  x59[1]._super,  x59[2]._super,  x59[3]._super,  x59[4]._super,
                 x59[5]._super,  x59[6]._super,  x59[7]._super,  x59[8]._super,  x59[9]._super,
                 x59[10]._super, x59[11]._super, x59[12]._super, x59[13]._super, x59[14]._super,
                 x59[15]._super, x59[16]._super, x59[17]._super, x59[18]._super, x59[19]._super,
                 x59[20]._super, x59[21]._super, x60[0]._super,  x60[1]._super,  x60[2]._super,
                 x60[3]._super,  x60[4]._super,  x60[5]._super,  x60[6]._super,  x60[7]._super,
                 x60[8]._super,  x60[9]._super},
      Val32Array{x61[0]._super,  x61[1]._super,  x61[2]._super,  x61[3]._super,  x61[4]._super,
                 x61[5]._super,  x61[6]._super,  x61[7]._super,  x61[8]._super,  x61[9]._super,
                 x61[10]._super, x61[11]._super, x61[12]._super, x61[13]._super, x61[14]._super,
                 x61[15]._super, x61[16]._super, x61[17]._super, x61[18]._super, x61[19]._super,
                 x61[20]._super, x61[21]._super, x62[0]._super,  x62[1]._super,  x62[2]._super,
                 x62[3]._super,  x62[4]._super,  x62[5]._super,  x62[6]._super,  x62[7]._super,
                 x62[8]._super,  x62[9]._super},
      Val32Array{x63[0]._super,  x63[1]._super,  x63[2]._super,  x63[3]._super,  x63[4]._super,
                 x63[5]._super,  x63[6]._super,  x63[7]._super,  x63[8]._super,  x63[9]._super,
                 x63[10]._super, x63[11]._super, x63[12]._super, x63[13]._super, x63[14]._super,
                 x63[15]._super, x63[16]._super, x63[17]._super, x63[18]._super, x63[19]._super,
                 x63[20]._super, x63[21]._super, x64[0]._super,  x64[1]._super,  x64[2]._super,
                 x64[3]._super,  x64[4]._super,  x64[5]._super,  x64[6]._super,  x64[7]._super,
                 x64[8]._super,  x64[9]._super},
      Val32Array{x65[0]._super,  x65[1]._super,  x65[2]._super,  x65[3]._super,  x65[4]._super,
                 x65[5]._super,  x65[6]._super,  x65[7]._super,  x65[8]._super,  x65[9]._super,
                 x65[10]._super, x65[11]._super, x65[12]._super, x65[13]._super, x65[14]._super,
                 x65[15]._super, x65[16]._super, x65[17]._super, x65[18]._super, x65[19]._super,
                 x65[20]._super, x65[21]._super, x66[0]._super,  x66[1]._super,  x66[2]._super,
                 x66[3]._super,  x66[4]._super,  x66[5]._super,  x66[6]._super,  x66[7]._super,
                 x66[8]._super,  x66[9]._super},
      Val32Array{x60[10]._super, x60[11]._super, x60[12]._super, x60[13]._super, x60[14]._super,
                 x60[15]._super, x60[16]._super, x60[17]._super, x60[18]._super, x60[19]._super,
                 x60[20]._super, x60[21]._super, x67[0]._super,  x67[1]._super,  x67[2]._super,
                 x67[3]._super,  x67[4]._super,  x67[5]._super,  x67[6]._super,  x67[7]._super,
                 x67[8]._super,  x67[9]._super,  x67[10]._super, x67[11]._super, x67[12]._super,
                 x67[13]._super, x67[14]._super, x67[15]._super, x67[16]._super, x67[17]._super,
                 x67[18]._super, x67[19]._super},
      Val32Array{x62[10]._super, x62[11]._super, x62[12]._super, x62[13]._super, x62[14]._super,
                 x62[15]._super, x62[16]._super, x62[17]._super, x62[18]._super, x62[19]._super,
                 x62[20]._super, x62[21]._super, x68[0]._super,  x68[1]._super,  x68[2]._super,
                 x68[3]._super,  x68[4]._super,  x68[5]._super,  x68[6]._super,  x68[7]._super,
                 x68[8]._super,  x68[9]._super,  x68[10]._super, x68[11]._super, x68[12]._super,
                 x68[13]._super, x68[14]._super, x68[15]._super, x68[16]._super, x68[17]._super,
                 x68[18]._super, x68[19]._super},
      Val32Array{x64[10]._super, x64[11]._super, x64[12]._super, x64[13]._super, x64[14]._super,
                 x64[15]._super, x64[16]._super, x64[17]._super, x64[18]._super, x64[19]._super,
                 x64[20]._super, x64[21]._super, x69[0]._super,  x69[1]._super,  x69[2]._super,
                 x69[3]._super,  x69[4]._super,  x69[5]._super,  x69[6]._super,  x69[7]._super,
                 x69[8]._super,  x69[9]._super,  x69[10]._super, x69[11]._super, x69[12]._super,
                 x69[13]._super, x69[14]._super, x69[15]._super, x69[16]._super, x69[17]._super,
                 x69[18]._super, x69[19]._super},
      Val32Array{x66[10]._super, x66[11]._super, x66[12]._super, x66[13]._super, x66[14]._super,
                 x66[15]._super, x66[16]._super, x66[17]._super, x66[18]._super, x66[19]._super,
                 x66[20]._super, x66[21]._super, x70[0]._super,  x70[1]._super,  x70[2]._super,
                 x70[3]._super,  x70[4]._super,  x70[5]._super,  x70[6]._super,  x70[7]._super,
                 x70[8]._super,  x70[9]._super,  x70[10]._super, x70[11]._super, x70[12]._super,
                 x70[13]._super, x70[14]._super, x70[15]._super, x70[16]._super, x70[17]._super,
                 x70[18]._super, x70[19]._super},
      Val32Array{x49, x50, x51, x52, x53, x54, x55, x56, x41, x42, x43, x44, x45, x46, x47, x48,
                 x29, x30, x31, x32, x33, x34, x35, x36, x21, x22, x23, x24, x25, x26, x27, x28},
      TwoShortsStruct{.low = Val(64463), .high = Val(46528)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x72 = x71.aOut;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:323)
  Concatenate_NondetReg__16__16_Struct x73 =
      execUnpackWithCarry(ctx, x72.low, x72.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:320)
  TwoShortsStruct x74 = x71.eOut;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:324)
  Concatenate_NondetReg__16__16_Struct x75 =
      execUnpackWithCarry(ctx, x74.low, x74.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:323)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x76 = x73._super;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:324)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x77 = x75._super;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:327)
  Val24Array x78 = Val24Array{x16[2], x16[3], Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:326)
  Val22Array x79 =
      Val22Array{x76[0]._super,  x76[1]._super,  x76[2]._super,  x76[3]._super,  x76[4]._super,
                 x76[5]._super,  x76[6]._super,  x76[7]._super,  x76[8]._super,  x76[9]._super,
                 x76[10]._super, x76[11]._super, x76[12]._super, x76[13]._super, x76[14]._super,
                 x76[15]._super, x76[16]._super, x76[17]._super, x76[18]._super, x76[19]._super,
                 x76[20]._super, x76[21]._super};
  Val22Array x80 =
      Val22Array{x76[22]._super, x76[23]._super, x76[24]._super, x76[25]._super, x76[26]._super,
                 x76[27]._super, x76[28]._super, x76[29]._super, x76[30]._super, x76[31]._super,
                 x77[0]._super,  x77[1]._super,  x77[2]._super,  x77[3]._super,  x77[4]._super,
                 x77[5]._super,  x77[6]._super,  x77[7]._super,  x77[8]._super,  x77[9]._super,
                 x77[10]._super, x77[11]._super};
  Val22Array x81 =
      Val22Array{x77[12]._super, x77[13]._super, x77[14]._super, x77[15]._super, x77[16]._super,
                 x77[17]._super, x77[18]._super, x77[19]._super, x77[20]._super, x77[21]._super,
                 x77[22]._super, x77[23]._super, x77[24]._super, x77[25]._super, x77[26]._super,
                 x77[27]._super, x77[28]._super, x77[29]._super, x77[30]._super, x77[31]._super,
                 Val(0),         Val(0)};
  Val22Array x82 = Val22Array{x49, x50, x51, x52, x53, x54, x55, x56, x41, x42, x43,
                              x44, x45, x46, x47, x48, x29, x30, x31, x32, x33, x34};
  Val22Array x83 = Val22Array{x35,    x36,    x21,    x22,    x23,    x24,    x25,    x26,
                              x27,    x28,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  if (to_size_t(Val(1))) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:329)
    RetTupleStruct x84 = exec_RetTuple(ctx,
                                       x79,
                                       x80,
                                       x81,
                                       x78,
                                       x82,
                                       x83,
                                       Val(3),
                                       Val(19),
                                       x16[4],
                                       x16[5],
                                       x9,
                                       LAYOUT_LOOKUP(x4, arm0));
  }
  if (to_size_t(Val(0))) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:331)
    RetTupleStruct x85 = exec_RetTuple(ctx,
                                       x79,
                                       x80,
                                       x81,
                                       x78,
                                       x82,
                                       x83,
                                       Val(0),
                                       Val(20),
                                       x16[4],
                                       x16[5],
                                       x9,
                                       LAYOUT_LOOKUP(x4, arm1));
  }
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:328)
  RetTupleStruct x86 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x4, _super));
  return x86;
}
RetTupleStruct execSha256load_3_(ExecContext& ctx,
                                 RetTupleStruct arg0,
                                 BoundLayout<RetTupleLayout> arg1,
                                 BoundLayout<Sha256load_3_Layout> layout2) {
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)
  BoundLayout<Sha256load_3_ValsLayout> x3 = LAYOUT_LOOKUP(layout2, vals);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:328)
  BoundLayout<Sha256load_3__SuperLayout> x4 = LAYOUT_LOOKUP(layout2, _super);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:292)
  RetTupleStruct x5 = back_RetTuple(ctx, 1, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:293)
  RetTupleStruct x6 = back_RetTuple(ctx, 2, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:294)
  RetTupleStruct x7 = back_RetTuple(ctx, 3, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:295)
  RetTupleStruct x8 = back_RetTuple(ctx, 4, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:292)
  Val x9 = x5.midx._super;
  Val x10 = x5.blk._super;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:298)
  Val x11 = ((x9 + Val(1)) - x10);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:299)
  NondetRegStruct x12 = exec_NondetReg(ctx, inv(x11), LAYOUT_LOOKUP(layout2, invWithin));
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:300)
  EQZ(((x11 * x12._super) - Val(1)), "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:300)");
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:292)
  Val x13 = x5.rnd._super;
  NondetRegStruct24Array x14 = x5.arrD;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)
  BoundLayout<Reg> x15 =
      LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x3, arm1), _extra0), count), _super);
  Val6Array x16;
  if (to_size_t((Val(1) - x13))) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:303)
    ReadMemoryStruct x17 = exec_ReadMemory(ctx, x10, LAYOUT_LOOKUP(LAYOUT_LOOKUP(x3, arm0), mem));
    NondetRegStruct4Array x18 = x17._super;
    x16 = Val6Array{x18[0]._super, x18[1]._super, x18[2]._super, x18[3]._super, Val(1), x10};
  } else if (to_size_t(x13)) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)
    STORE(x15, Val(0));
    EQZ(LOAD(x15, 0), "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)");
    x16 = Val6Array{x14[0]._super, x14[1]._super, Val(0), Val(0), Val(0), (x10 + Val(1))};
  } else {
    assert(0 && "Reached unreachable mux arm");
  }
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:309)
  ToBits_16_Struct x19 = exec_ToBits_16_(ctx, x16[0], LAYOUT_LOOKUP(layout2, highW));
  NondetRegStruct16Array x20 = x19._super;
  Val x21 = x20[0]._super;
  Val x22 = x20[1]._super;
  Val x23 = x20[2]._super;
  Val x24 = x20[3]._super;
  Val x25 = x20[4]._super;
  Val x26 = x20[5]._super;
  Val x27 = x20[6]._super;
  Val x28 = x20[7]._super;
  Val x29 = x20[8]._super;
  Val x30 = x20[9]._super;
  Val x31 = x20[10]._super;
  Val x32 = x20[11]._super;
  Val x33 = x20[12]._super;
  Val x34 = x20[13]._super;
  Val x35 = x20[14]._super;
  Val x36 = x20[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:310)
  Val x37 = ((((((x21 + (x22 * Val(2))) + (x23 * Val(4))) + (x24 * Val(8))) + (x25 * Val(16))) +
              (x26 * Val(32))) +
             (x27 * Val(64)));
  Val x38 =
      ((((((x37 + (x28 * Val(128))) + (x29 * Val(256))) + (x30 * Val(512))) + (x31 * Val(1024))) +
        (x32 * Val(2048))) +
       (x33 * Val(4096)));
  EQZ(((((x38 + (x34 * Val(8192))) + (x35 * Val(16384))) + (x36 * Val(32768))) - x16[0]),
      "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:310)");
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:312)
  ToBits_16_Struct x39 = exec_ToBits_16_(ctx, x16[1], LAYOUT_LOOKUP(layout2, lowW));
  NondetRegStruct16Array x40 = x39._super;
  Val x41 = x40[0]._super;
  Val x42 = x40[1]._super;
  Val x43 = x40[2]._super;
  Val x44 = x40[3]._super;
  Val x45 = x40[4]._super;
  Val x46 = x40[5]._super;
  Val x47 = x40[6]._super;
  Val x48 = x40[7]._super;
  Val x49 = x40[8]._super;
  Val x50 = x40[9]._super;
  Val x51 = x40[10]._super;
  Val x52 = x40[11]._super;
  Val x53 = x40[12]._super;
  Val x54 = x40[13]._super;
  Val x55 = x40[14]._super;
  Val x56 = x40[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:313)
  Val x57 = ((((((x41 + (x42 * Val(2))) + (x43 * Val(4))) + (x44 * Val(8))) + (x45 * Val(16))) +
              (x46 * Val(32))) +
             (x47 * Val(64)));
  Val x58 =
      ((((((x57 + (x48 * Val(128))) + (x49 * Val(256))) + (x50 * Val(512))) + (x51 * Val(1024))) +
        (x52 * Val(2048))) +
       (x53 * Val(4096)));
  EQZ(((((x58 + (x54 * Val(8192))) + (x55 * Val(16384))) + (x56 * Val(32768))) - x16[1]),
      "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:313)");
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:320)
  NondetRegStruct22Array x59 = x5.arrA;
  NondetRegStruct22Array x60 = x5.arrB;
  NondetRegStruct22Array x61 = x6.arrA;
  NondetRegStruct22Array x62 = x6.arrB;
  NondetRegStruct22Array x63 = x7.arrA;
  NondetRegStruct22Array x64 = x7.arrB;
  NondetRegStruct22Array x65 = x8.arrA;
  NondetRegStruct22Array x66 = x8.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:321)
  NondetRegStruct22Array x67 = x5.arrC;
  NondetRegStruct22Array x68 = x6.arrC;
  NondetRegStruct22Array x69 = x7.arrC;
  NondetRegStruct22Array x70 = x8.arrC;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:320)
  ComputeAEStruct x71 = execComputeAE(
      ctx,
      Val32Array{x59[0]._super,  x59[1]._super,  x59[2]._super,  x59[3]._super,  x59[4]._super,
                 x59[5]._super,  x59[6]._super,  x59[7]._super,  x59[8]._super,  x59[9]._super,
                 x59[10]._super, x59[11]._super, x59[12]._super, x59[13]._super, x59[14]._super,
                 x59[15]._super, x59[16]._super, x59[17]._super, x59[18]._super, x59[19]._super,
                 x59[20]._super, x59[21]._super, x60[0]._super,  x60[1]._super,  x60[2]._super,
                 x60[3]._super,  x60[4]._super,  x60[5]._super,  x60[6]._super,  x60[7]._super,
                 x60[8]._super,  x60[9]._super},
      Val32Array{x61[0]._super,  x61[1]._super,  x61[2]._super,  x61[3]._super,  x61[4]._super,
                 x61[5]._super,  x61[6]._super,  x61[7]._super,  x61[8]._super,  x61[9]._super,
                 x61[10]._super, x61[11]._super, x61[12]._super, x61[13]._super, x61[14]._super,
                 x61[15]._super, x61[16]._super, x61[17]._super, x61[18]._super, x61[19]._super,
                 x61[20]._super, x61[21]._super, x62[0]._super,  x62[1]._super,  x62[2]._super,
                 x62[3]._super,  x62[4]._super,  x62[5]._super,  x62[6]._super,  x62[7]._super,
                 x62[8]._super,  x62[9]._super},
      Val32Array{x63[0]._super,  x63[1]._super,  x63[2]._super,  x63[3]._super,  x63[4]._super,
                 x63[5]._super,  x63[6]._super,  x63[7]._super,  x63[8]._super,  x63[9]._super,
                 x63[10]._super, x63[11]._super, x63[12]._super, x63[13]._super, x63[14]._super,
                 x63[15]._super, x63[16]._super, x63[17]._super, x63[18]._super, x63[19]._super,
                 x63[20]._super, x63[21]._super, x64[0]._super,  x64[1]._super,  x64[2]._super,
                 x64[3]._super,  x64[4]._super,  x64[5]._super,  x64[6]._super,  x64[7]._super,
                 x64[8]._super,  x64[9]._super},
      Val32Array{x65[0]._super,  x65[1]._super,  x65[2]._super,  x65[3]._super,  x65[4]._super,
                 x65[5]._super,  x65[6]._super,  x65[7]._super,  x65[8]._super,  x65[9]._super,
                 x65[10]._super, x65[11]._super, x65[12]._super, x65[13]._super, x65[14]._super,
                 x65[15]._super, x65[16]._super, x65[17]._super, x65[18]._super, x65[19]._super,
                 x65[20]._super, x65[21]._super, x66[0]._super,  x66[1]._super,  x66[2]._super,
                 x66[3]._super,  x66[4]._super,  x66[5]._super,  x66[6]._super,  x66[7]._super,
                 x66[8]._super,  x66[9]._super},
      Val32Array{x60[10]._super, x60[11]._super, x60[12]._super, x60[13]._super, x60[14]._super,
                 x60[15]._super, x60[16]._super, x60[17]._super, x60[18]._super, x60[19]._super,
                 x60[20]._super, x60[21]._super, x67[0]._super,  x67[1]._super,  x67[2]._super,
                 x67[3]._super,  x67[4]._super,  x67[5]._super,  x67[6]._super,  x67[7]._super,
                 x67[8]._super,  x67[9]._super,  x67[10]._super, x67[11]._super, x67[12]._super,
                 x67[13]._super, x67[14]._super, x67[15]._super, x67[16]._super, x67[17]._super,
                 x67[18]._super, x67[19]._super},
      Val32Array{x62[10]._super, x62[11]._super, x62[12]._super, x62[13]._super, x62[14]._super,
                 x62[15]._super, x62[16]._super, x62[17]._super, x62[18]._super, x62[19]._super,
                 x62[20]._super, x62[21]._super, x68[0]._super,  x68[1]._super,  x68[2]._super,
                 x68[3]._super,  x68[4]._super,  x68[5]._super,  x68[6]._super,  x68[7]._super,
                 x68[8]._super,  x68[9]._super,  x68[10]._super, x68[11]._super, x68[12]._super,
                 x68[13]._super, x68[14]._super, x68[15]._super, x68[16]._super, x68[17]._super,
                 x68[18]._super, x68[19]._super},
      Val32Array{x64[10]._super, x64[11]._super, x64[12]._super, x64[13]._super, x64[14]._super,
                 x64[15]._super, x64[16]._super, x64[17]._super, x64[18]._super, x64[19]._super,
                 x64[20]._super, x64[21]._super, x69[0]._super,  x69[1]._super,  x69[2]._super,
                 x69[3]._super,  x69[4]._super,  x69[5]._super,  x69[6]._super,  x69[7]._super,
                 x69[8]._super,  x69[9]._super,  x69[10]._super, x69[11]._super, x69[12]._super,
                 x69[13]._super, x69[14]._super, x69[15]._super, x69[16]._super, x69[17]._super,
                 x69[18]._super, x69[19]._super},
      Val32Array{x66[10]._super, x66[11]._super, x66[12]._super, x66[13]._super, x66[14]._super,
                 x66[15]._super, x66[16]._super, x66[17]._super, x66[18]._super, x66[19]._super,
                 x66[20]._super, x66[21]._super, x70[0]._super,  x70[1]._super,  x70[2]._super,
                 x70[3]._super,  x70[4]._super,  x70[5]._super,  x70[6]._super,  x70[7]._super,
                 x70[8]._super,  x70[9]._super,  x70[10]._super, x70[11]._super, x70[12]._super,
                 x70[13]._super, x70[14]._super, x70[15]._super, x70[16]._super, x70[17]._super,
                 x70[18]._super, x70[19]._super},
      Val32Array{x49, x50, x51, x52, x53, x54, x55, x56, x41, x42, x43, x44, x45, x46, x47, x48,
                 x29, x30, x31, x32, x33, x34, x35, x36, x21, x22, x23, x24, x25, x26, x27, x28},
      TwoShortsStruct{.low = Val(56229), .high = Val(59829)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x72 = x71.aOut;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:323)
  Concatenate_NondetReg__16__16_Struct x73 =
      execUnpackWithCarry(ctx, x72.low, x72.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:320)
  TwoShortsStruct x74 = x71.eOut;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:324)
  Concatenate_NondetReg__16__16_Struct x75 =
      execUnpackWithCarry(ctx, x74.low, x74.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:323)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x76 = x73._super;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:324)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x77 = x75._super;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:327)
  Val24Array x78 = Val24Array{x16[2], x16[3], Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:326)
  Val22Array x79 =
      Val22Array{x76[0]._super,  x76[1]._super,  x76[2]._super,  x76[3]._super,  x76[4]._super,
                 x76[5]._super,  x76[6]._super,  x76[7]._super,  x76[8]._super,  x76[9]._super,
                 x76[10]._super, x76[11]._super, x76[12]._super, x76[13]._super, x76[14]._super,
                 x76[15]._super, x76[16]._super, x76[17]._super, x76[18]._super, x76[19]._super,
                 x76[20]._super, x76[21]._super};
  Val22Array x80 =
      Val22Array{x76[22]._super, x76[23]._super, x76[24]._super, x76[25]._super, x76[26]._super,
                 x76[27]._super, x76[28]._super, x76[29]._super, x76[30]._super, x76[31]._super,
                 x77[0]._super,  x77[1]._super,  x77[2]._super,  x77[3]._super,  x77[4]._super,
                 x77[5]._super,  x77[6]._super,  x77[7]._super,  x77[8]._super,  x77[9]._super,
                 x77[10]._super, x77[11]._super};
  Val22Array x81 =
      Val22Array{x77[12]._super, x77[13]._super, x77[14]._super, x77[15]._super, x77[16]._super,
                 x77[17]._super, x77[18]._super, x77[19]._super, x77[20]._super, x77[21]._super,
                 x77[22]._super, x77[23]._super, x77[24]._super, x77[25]._super, x77[26]._super,
                 x77[27]._super, x77[28]._super, x77[29]._super, x77[30]._super, x77[31]._super,
                 Val(0),         Val(0)};
  Val22Array x82 = Val22Array{x49, x50, x51, x52, x53, x54, x55, x56, x41, x42, x43,
                              x44, x45, x46, x47, x48, x29, x30, x31, x32, x33, x34};
  Val22Array x83 = Val22Array{x35,    x36,    x21,    x22,    x23,    x24,    x25,    x26,
                              x27,    x28,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  if (to_size_t(Val(1))) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:329)
    RetTupleStruct x84 = exec_RetTuple(ctx,
                                       x79,
                                       x80,
                                       x81,
                                       x78,
                                       x82,
                                       x83,
                                       Val(4),
                                       Val(19),
                                       x16[4],
                                       x16[5],
                                       x9,
                                       LAYOUT_LOOKUP(x4, arm0));
  }
  if (to_size_t(Val(0))) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:331)
    RetTupleStruct x85 = exec_RetTuple(ctx,
                                       x79,
                                       x80,
                                       x81,
                                       x78,
                                       x82,
                                       x83,
                                       Val(0),
                                       Val(20),
                                       x16[4],
                                       x16[5],
                                       x9,
                                       LAYOUT_LOOKUP(x4, arm1));
  }
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:328)
  RetTupleStruct x86 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x4, _super));
  return x86;
}
RetTupleStruct execSha256load_4_(ExecContext& ctx,
                                 RetTupleStruct arg0,
                                 BoundLayout<RetTupleLayout> arg1,
                                 BoundLayout<Sha256load_4_Layout> layout2) {
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)
  BoundLayout<Sha256load_4_ValsLayout> x3 = LAYOUT_LOOKUP(layout2, vals);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:328)
  BoundLayout<Sha256load_4__SuperLayout> x4 = LAYOUT_LOOKUP(layout2, _super);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:292)
  RetTupleStruct x5 = back_RetTuple(ctx, 1, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:293)
  RetTupleStruct x6 = back_RetTuple(ctx, 2, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:294)
  RetTupleStruct x7 = back_RetTuple(ctx, 3, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:295)
  RetTupleStruct x8 = back_RetTuple(ctx, 4, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:292)
  Val x9 = x5.midx._super;
  Val x10 = x5.blk._super;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:298)
  Val x11 = ((x9 + Val(1)) - x10);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:299)
  NondetRegStruct x12 = exec_NondetReg(ctx, inv(x11), LAYOUT_LOOKUP(layout2, invWithin));
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:300)
  EQZ(((x11 * x12._super) - Val(1)), "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:300)");
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:292)
  Val x13 = x5.rnd._super;
  NondetRegStruct24Array x14 = x5.arrD;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)
  BoundLayout<Reg> x15 =
      LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x3, arm1), _extra0), count), _super);
  Val6Array x16;
  if (to_size_t((Val(1) - x13))) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:303)
    ReadMemoryStruct x17 = exec_ReadMemory(ctx, x10, LAYOUT_LOOKUP(LAYOUT_LOOKUP(x3, arm0), mem));
    NondetRegStruct4Array x18 = x17._super;
    x16 = Val6Array{x18[0]._super, x18[1]._super, x18[2]._super, x18[3]._super, Val(1), x10};
  } else if (to_size_t(x13)) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)
    STORE(x15, Val(0));
    EQZ(LOAD(x15, 0), "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)");
    x16 = Val6Array{x14[0]._super, x14[1]._super, Val(0), Val(0), Val(0), (x10 + Val(1))};
  } else {
    assert(0 && "Reached unreachable mux arm");
  }
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:309)
  ToBits_16_Struct x19 = exec_ToBits_16_(ctx, x16[0], LAYOUT_LOOKUP(layout2, highW));
  NondetRegStruct16Array x20 = x19._super;
  Val x21 = x20[0]._super;
  Val x22 = x20[1]._super;
  Val x23 = x20[2]._super;
  Val x24 = x20[3]._super;
  Val x25 = x20[4]._super;
  Val x26 = x20[5]._super;
  Val x27 = x20[6]._super;
  Val x28 = x20[7]._super;
  Val x29 = x20[8]._super;
  Val x30 = x20[9]._super;
  Val x31 = x20[10]._super;
  Val x32 = x20[11]._super;
  Val x33 = x20[12]._super;
  Val x34 = x20[13]._super;
  Val x35 = x20[14]._super;
  Val x36 = x20[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:310)
  Val x37 = ((((((x21 + (x22 * Val(2))) + (x23 * Val(4))) + (x24 * Val(8))) + (x25 * Val(16))) +
              (x26 * Val(32))) +
             (x27 * Val(64)));
  Val x38 =
      ((((((x37 + (x28 * Val(128))) + (x29 * Val(256))) + (x30 * Val(512))) + (x31 * Val(1024))) +
        (x32 * Val(2048))) +
       (x33 * Val(4096)));
  EQZ(((((x38 + (x34 * Val(8192))) + (x35 * Val(16384))) + (x36 * Val(32768))) - x16[0]),
      "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:310)");
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:312)
  ToBits_16_Struct x39 = exec_ToBits_16_(ctx, x16[1], LAYOUT_LOOKUP(layout2, lowW));
  NondetRegStruct16Array x40 = x39._super;
  Val x41 = x40[0]._super;
  Val x42 = x40[1]._super;
  Val x43 = x40[2]._super;
  Val x44 = x40[3]._super;
  Val x45 = x40[4]._super;
  Val x46 = x40[5]._super;
  Val x47 = x40[6]._super;
  Val x48 = x40[7]._super;
  Val x49 = x40[8]._super;
  Val x50 = x40[9]._super;
  Val x51 = x40[10]._super;
  Val x52 = x40[11]._super;
  Val x53 = x40[12]._super;
  Val x54 = x40[13]._super;
  Val x55 = x40[14]._super;
  Val x56 = x40[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:313)
  Val x57 = ((((((x41 + (x42 * Val(2))) + (x43 * Val(4))) + (x44 * Val(8))) + (x45 * Val(16))) +
              (x46 * Val(32))) +
             (x47 * Val(64)));
  Val x58 =
      ((((((x57 + (x48 * Val(128))) + (x49 * Val(256))) + (x50 * Val(512))) + (x51 * Val(1024))) +
        (x52 * Val(2048))) +
       (x53 * Val(4096)));
  EQZ(((((x58 + (x54 * Val(8192))) + (x55 * Val(16384))) + (x56 * Val(32768))) - x16[1]),
      "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:313)");
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:320)
  NondetRegStruct22Array x59 = x5.arrA;
  NondetRegStruct22Array x60 = x5.arrB;
  NondetRegStruct22Array x61 = x6.arrA;
  NondetRegStruct22Array x62 = x6.arrB;
  NondetRegStruct22Array x63 = x7.arrA;
  NondetRegStruct22Array x64 = x7.arrB;
  NondetRegStruct22Array x65 = x8.arrA;
  NondetRegStruct22Array x66 = x8.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:321)
  NondetRegStruct22Array x67 = x5.arrC;
  NondetRegStruct22Array x68 = x6.arrC;
  NondetRegStruct22Array x69 = x7.arrC;
  NondetRegStruct22Array x70 = x8.arrC;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:320)
  ComputeAEStruct x71 = execComputeAE(
      ctx,
      Val32Array{x59[0]._super,  x59[1]._super,  x59[2]._super,  x59[3]._super,  x59[4]._super,
                 x59[5]._super,  x59[6]._super,  x59[7]._super,  x59[8]._super,  x59[9]._super,
                 x59[10]._super, x59[11]._super, x59[12]._super, x59[13]._super, x59[14]._super,
                 x59[15]._super, x59[16]._super, x59[17]._super, x59[18]._super, x59[19]._super,
                 x59[20]._super, x59[21]._super, x60[0]._super,  x60[1]._super,  x60[2]._super,
                 x60[3]._super,  x60[4]._super,  x60[5]._super,  x60[6]._super,  x60[7]._super,
                 x60[8]._super,  x60[9]._super},
      Val32Array{x61[0]._super,  x61[1]._super,  x61[2]._super,  x61[3]._super,  x61[4]._super,
                 x61[5]._super,  x61[6]._super,  x61[7]._super,  x61[8]._super,  x61[9]._super,
                 x61[10]._super, x61[11]._super, x61[12]._super, x61[13]._super, x61[14]._super,
                 x61[15]._super, x61[16]._super, x61[17]._super, x61[18]._super, x61[19]._super,
                 x61[20]._super, x61[21]._super, x62[0]._super,  x62[1]._super,  x62[2]._super,
                 x62[3]._super,  x62[4]._super,  x62[5]._super,  x62[6]._super,  x62[7]._super,
                 x62[8]._super,  x62[9]._super},
      Val32Array{x63[0]._super,  x63[1]._super,  x63[2]._super,  x63[3]._super,  x63[4]._super,
                 x63[5]._super,  x63[6]._super,  x63[7]._super,  x63[8]._super,  x63[9]._super,
                 x63[10]._super, x63[11]._super, x63[12]._super, x63[13]._super, x63[14]._super,
                 x63[15]._super, x63[16]._super, x63[17]._super, x63[18]._super, x63[19]._super,
                 x63[20]._super, x63[21]._super, x64[0]._super,  x64[1]._super,  x64[2]._super,
                 x64[3]._super,  x64[4]._super,  x64[5]._super,  x64[6]._super,  x64[7]._super,
                 x64[8]._super,  x64[9]._super},
      Val32Array{x65[0]._super,  x65[1]._super,  x65[2]._super,  x65[3]._super,  x65[4]._super,
                 x65[5]._super,  x65[6]._super,  x65[7]._super,  x65[8]._super,  x65[9]._super,
                 x65[10]._super, x65[11]._super, x65[12]._super, x65[13]._super, x65[14]._super,
                 x65[15]._super, x65[16]._super, x65[17]._super, x65[18]._super, x65[19]._super,
                 x65[20]._super, x65[21]._super, x66[0]._super,  x66[1]._super,  x66[2]._super,
                 x66[3]._super,  x66[4]._super,  x66[5]._super,  x66[6]._super,  x66[7]._super,
                 x66[8]._super,  x66[9]._super},
      Val32Array{x60[10]._super, x60[11]._super, x60[12]._super, x60[13]._super, x60[14]._super,
                 x60[15]._super, x60[16]._super, x60[17]._super, x60[18]._super, x60[19]._super,
                 x60[20]._super, x60[21]._super, x67[0]._super,  x67[1]._super,  x67[2]._super,
                 x67[3]._super,  x67[4]._super,  x67[5]._super,  x67[6]._super,  x67[7]._super,
                 x67[8]._super,  x67[9]._super,  x67[10]._super, x67[11]._super, x67[12]._super,
                 x67[13]._super, x67[14]._super, x67[15]._super, x67[16]._super, x67[17]._super,
                 x67[18]._super, x67[19]._super},
      Val32Array{x62[10]._super, x62[11]._super, x62[12]._super, x62[13]._super, x62[14]._super,
                 x62[15]._super, x62[16]._super, x62[17]._super, x62[18]._super, x62[19]._super,
                 x62[20]._super, x62[21]._super, x68[0]._super,  x68[1]._super,  x68[2]._super,
                 x68[3]._super,  x68[4]._super,  x68[5]._super,  x68[6]._super,  x68[7]._super,
                 x68[8]._super,  x68[9]._super,  x68[10]._super, x68[11]._super, x68[12]._super,
                 x68[13]._super, x68[14]._super, x68[15]._super, x68[16]._super, x68[17]._super,
                 x68[18]._super, x68[19]._super},
      Val32Array{x64[10]._super, x64[11]._super, x64[12]._super, x64[13]._super, x64[14]._super,
                 x64[15]._super, x64[16]._super, x64[17]._super, x64[18]._super, x64[19]._super,
                 x64[20]._super, x64[21]._super, x69[0]._super,  x69[1]._super,  x69[2]._super,
                 x69[3]._super,  x69[4]._super,  x69[5]._super,  x69[6]._super,  x69[7]._super,
                 x69[8]._super,  x69[9]._super,  x69[10]._super, x69[11]._super, x69[12]._super,
                 x69[13]._super, x69[14]._super, x69[15]._super, x69[16]._super, x69[17]._super,
                 x69[18]._super, x69[19]._super},
      Val32Array{x66[10]._super, x66[11]._super, x66[12]._super, x66[13]._super, x66[14]._super,
                 x66[15]._super, x66[16]._super, x66[17]._super, x66[18]._super, x66[19]._super,
                 x66[20]._super, x66[21]._super, x70[0]._super,  x70[1]._super,  x70[2]._super,
                 x70[3]._super,  x70[4]._super,  x70[5]._super,  x70[6]._super,  x70[7]._super,
                 x70[8]._super,  x70[9]._super,  x70[10]._super, x70[11]._super, x70[12]._super,
                 x70[13]._super, x70[14]._super, x70[15]._super, x70[16]._super, x70[17]._super,
                 x70[18]._super, x70[19]._super},
      Val32Array{x49, x50, x51, x52, x53, x54, x55, x56, x41, x42, x43, x44, x45, x46, x47, x48,
                 x29, x30, x31, x32, x33, x34, x35, x36, x21, x22, x23, x24, x25, x26, x27, x28},
      TwoShortsStruct{.low = Val(49755), .high = Val(14678)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x72 = x71.aOut;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:323)
  Concatenate_NondetReg__16__16_Struct x73 =
      execUnpackWithCarry(ctx, x72.low, x72.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:320)
  TwoShortsStruct x74 = x71.eOut;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:324)
  Concatenate_NondetReg__16__16_Struct x75 =
      execUnpackWithCarry(ctx, x74.low, x74.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:323)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x76 = x73._super;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:324)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x77 = x75._super;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:327)
  Val24Array x78 = Val24Array{x16[2], x16[3], Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:326)
  Val22Array x79 =
      Val22Array{x76[0]._super,  x76[1]._super,  x76[2]._super,  x76[3]._super,  x76[4]._super,
                 x76[5]._super,  x76[6]._super,  x76[7]._super,  x76[8]._super,  x76[9]._super,
                 x76[10]._super, x76[11]._super, x76[12]._super, x76[13]._super, x76[14]._super,
                 x76[15]._super, x76[16]._super, x76[17]._super, x76[18]._super, x76[19]._super,
                 x76[20]._super, x76[21]._super};
  Val22Array x80 =
      Val22Array{x76[22]._super, x76[23]._super, x76[24]._super, x76[25]._super, x76[26]._super,
                 x76[27]._super, x76[28]._super, x76[29]._super, x76[30]._super, x76[31]._super,
                 x77[0]._super,  x77[1]._super,  x77[2]._super,  x77[3]._super,  x77[4]._super,
                 x77[5]._super,  x77[6]._super,  x77[7]._super,  x77[8]._super,  x77[9]._super,
                 x77[10]._super, x77[11]._super};
  Val22Array x81 =
      Val22Array{x77[12]._super, x77[13]._super, x77[14]._super, x77[15]._super, x77[16]._super,
                 x77[17]._super, x77[18]._super, x77[19]._super, x77[20]._super, x77[21]._super,
                 x77[22]._super, x77[23]._super, x77[24]._super, x77[25]._super, x77[26]._super,
                 x77[27]._super, x77[28]._super, x77[29]._super, x77[30]._super, x77[31]._super,
                 Val(0),         Val(0)};
  Val22Array x82 = Val22Array{x49, x50, x51, x52, x53, x54, x55, x56, x41, x42, x43,
                              x44, x45, x46, x47, x48, x29, x30, x31, x32, x33, x34};
  Val22Array x83 = Val22Array{x35,    x36,    x21,    x22,    x23,    x24,    x25,    x26,
                              x27,    x28,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  if (to_size_t(Val(1))) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:329)
    RetTupleStruct x84 = exec_RetTuple(ctx,
                                       x79,
                                       x80,
                                       x81,
                                       x78,
                                       x82,
                                       x83,
                                       Val(5),
                                       Val(19),
                                       x16[4],
                                       x16[5],
                                       x9,
                                       LAYOUT_LOOKUP(x4, arm0));
  }
  if (to_size_t(Val(0))) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:331)
    RetTupleStruct x85 = exec_RetTuple(ctx,
                                       x79,
                                       x80,
                                       x81,
                                       x78,
                                       x82,
                                       x83,
                                       Val(0),
                                       Val(20),
                                       x16[4],
                                       x16[5],
                                       x9,
                                       LAYOUT_LOOKUP(x4, arm1));
  }
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:328)
  RetTupleStruct x86 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x4, _super));
  return x86;
}
RetTupleStruct execSha256load_5_(ExecContext& ctx,
                                 RetTupleStruct arg0,
                                 BoundLayout<RetTupleLayout> arg1,
                                 BoundLayout<Sha256load_5_Layout> layout2) {
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)
  BoundLayout<Sha256load_5_ValsLayout> x3 = LAYOUT_LOOKUP(layout2, vals);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:328)
  BoundLayout<Sha256load_5__SuperLayout> x4 = LAYOUT_LOOKUP(layout2, _super);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:292)
  RetTupleStruct x5 = back_RetTuple(ctx, 1, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:293)
  RetTupleStruct x6 = back_RetTuple(ctx, 2, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:294)
  RetTupleStruct x7 = back_RetTuple(ctx, 3, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:295)
  RetTupleStruct x8 = back_RetTuple(ctx, 4, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:292)
  Val x9 = x5.midx._super;
  Val x10 = x5.blk._super;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:298)
  Val x11 = ((x9 + Val(1)) - x10);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:299)
  NondetRegStruct x12 = exec_NondetReg(ctx, inv(x11), LAYOUT_LOOKUP(layout2, invWithin));
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:300)
  EQZ(((x11 * x12._super) - Val(1)), "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:300)");
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:292)
  Val x13 = x5.rnd._super;
  NondetRegStruct24Array x14 = x5.arrD;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)
  BoundLayout<Reg> x15 =
      LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x3, arm1), _extra0), count), _super);
  Val6Array x16;
  if (to_size_t((Val(1) - x13))) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:303)
    ReadMemoryStruct x17 = exec_ReadMemory(ctx, x10, LAYOUT_LOOKUP(LAYOUT_LOOKUP(x3, arm0), mem));
    NondetRegStruct4Array x18 = x17._super;
    x16 = Val6Array{x18[0]._super, x18[1]._super, x18[2]._super, x18[3]._super, Val(1), x10};
  } else if (to_size_t(x13)) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)
    STORE(x15, Val(0));
    EQZ(LOAD(x15, 0), "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)");
    x16 = Val6Array{x14[0]._super, x14[1]._super, Val(0), Val(0), Val(0), (x10 + Val(1))};
  } else {
    assert(0 && "Reached unreachable mux arm");
  }
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:309)
  ToBits_16_Struct x19 = exec_ToBits_16_(ctx, x16[0], LAYOUT_LOOKUP(layout2, highW));
  NondetRegStruct16Array x20 = x19._super;
  Val x21 = x20[0]._super;
  Val x22 = x20[1]._super;
  Val x23 = x20[2]._super;
  Val x24 = x20[3]._super;
  Val x25 = x20[4]._super;
  Val x26 = x20[5]._super;
  Val x27 = x20[6]._super;
  Val x28 = x20[7]._super;
  Val x29 = x20[8]._super;
  Val x30 = x20[9]._super;
  Val x31 = x20[10]._super;
  Val x32 = x20[11]._super;
  Val x33 = x20[12]._super;
  Val x34 = x20[13]._super;
  Val x35 = x20[14]._super;
  Val x36 = x20[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:310)
  Val x37 = ((((((x21 + (x22 * Val(2))) + (x23 * Val(4))) + (x24 * Val(8))) + (x25 * Val(16))) +
              (x26 * Val(32))) +
             (x27 * Val(64)));
  Val x38 =
      ((((((x37 + (x28 * Val(128))) + (x29 * Val(256))) + (x30 * Val(512))) + (x31 * Val(1024))) +
        (x32 * Val(2048))) +
       (x33 * Val(4096)));
  EQZ(((((x38 + (x34 * Val(8192))) + (x35 * Val(16384))) + (x36 * Val(32768))) - x16[0]),
      "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:310)");
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:312)
  ToBits_16_Struct x39 = exec_ToBits_16_(ctx, x16[1], LAYOUT_LOOKUP(layout2, lowW));
  NondetRegStruct16Array x40 = x39._super;
  Val x41 = x40[0]._super;
  Val x42 = x40[1]._super;
  Val x43 = x40[2]._super;
  Val x44 = x40[3]._super;
  Val x45 = x40[4]._super;
  Val x46 = x40[5]._super;
  Val x47 = x40[6]._super;
  Val x48 = x40[7]._super;
  Val x49 = x40[8]._super;
  Val x50 = x40[9]._super;
  Val x51 = x40[10]._super;
  Val x52 = x40[11]._super;
  Val x53 = x40[12]._super;
  Val x54 = x40[13]._super;
  Val x55 = x40[14]._super;
  Val x56 = x40[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:313)
  Val x57 = ((((((x41 + (x42 * Val(2))) + (x43 * Val(4))) + (x44 * Val(8))) + (x45 * Val(16))) +
              (x46 * Val(32))) +
             (x47 * Val(64)));
  Val x58 =
      ((((((x57 + (x48 * Val(128))) + (x49 * Val(256))) + (x50 * Val(512))) + (x51 * Val(1024))) +
        (x52 * Val(2048))) +
       (x53 * Val(4096)));
  EQZ(((((x58 + (x54 * Val(8192))) + (x55 * Val(16384))) + (x56 * Val(32768))) - x16[1]),
      "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:313)");
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:320)
  NondetRegStruct22Array x59 = x5.arrA;
  NondetRegStruct22Array x60 = x5.arrB;
  NondetRegStruct22Array x61 = x6.arrA;
  NondetRegStruct22Array x62 = x6.arrB;
  NondetRegStruct22Array x63 = x7.arrA;
  NondetRegStruct22Array x64 = x7.arrB;
  NondetRegStruct22Array x65 = x8.arrA;
  NondetRegStruct22Array x66 = x8.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:321)
  NondetRegStruct22Array x67 = x5.arrC;
  NondetRegStruct22Array x68 = x6.arrC;
  NondetRegStruct22Array x69 = x7.arrC;
  NondetRegStruct22Array x70 = x8.arrC;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:320)
  ComputeAEStruct x71 = execComputeAE(
      ctx,
      Val32Array{x59[0]._super,  x59[1]._super,  x59[2]._super,  x59[3]._super,  x59[4]._super,
                 x59[5]._super,  x59[6]._super,  x59[7]._super,  x59[8]._super,  x59[9]._super,
                 x59[10]._super, x59[11]._super, x59[12]._super, x59[13]._super, x59[14]._super,
                 x59[15]._super, x59[16]._super, x59[17]._super, x59[18]._super, x59[19]._super,
                 x59[20]._super, x59[21]._super, x60[0]._super,  x60[1]._super,  x60[2]._super,
                 x60[3]._super,  x60[4]._super,  x60[5]._super,  x60[6]._super,  x60[7]._super,
                 x60[8]._super,  x60[9]._super},
      Val32Array{x61[0]._super,  x61[1]._super,  x61[2]._super,  x61[3]._super,  x61[4]._super,
                 x61[5]._super,  x61[6]._super,  x61[7]._super,  x61[8]._super,  x61[9]._super,
                 x61[10]._super, x61[11]._super, x61[12]._super, x61[13]._super, x61[14]._super,
                 x61[15]._super, x61[16]._super, x61[17]._super, x61[18]._super, x61[19]._super,
                 x61[20]._super, x61[21]._super, x62[0]._super,  x62[1]._super,  x62[2]._super,
                 x62[3]._super,  x62[4]._super,  x62[5]._super,  x62[6]._super,  x62[7]._super,
                 x62[8]._super,  x62[9]._super},
      Val32Array{x63[0]._super,  x63[1]._super,  x63[2]._super,  x63[3]._super,  x63[4]._super,
                 x63[5]._super,  x63[6]._super,  x63[7]._super,  x63[8]._super,  x63[9]._super,
                 x63[10]._super, x63[11]._super, x63[12]._super, x63[13]._super, x63[14]._super,
                 x63[15]._super, x63[16]._super, x63[17]._super, x63[18]._super, x63[19]._super,
                 x63[20]._super, x63[21]._super, x64[0]._super,  x64[1]._super,  x64[2]._super,
                 x64[3]._super,  x64[4]._super,  x64[5]._super,  x64[6]._super,  x64[7]._super,
                 x64[8]._super,  x64[9]._super},
      Val32Array{x65[0]._super,  x65[1]._super,  x65[2]._super,  x65[3]._super,  x65[4]._super,
                 x65[5]._super,  x65[6]._super,  x65[7]._super,  x65[8]._super,  x65[9]._super,
                 x65[10]._super, x65[11]._super, x65[12]._super, x65[13]._super, x65[14]._super,
                 x65[15]._super, x65[16]._super, x65[17]._super, x65[18]._super, x65[19]._super,
                 x65[20]._super, x65[21]._super, x66[0]._super,  x66[1]._super,  x66[2]._super,
                 x66[3]._super,  x66[4]._super,  x66[5]._super,  x66[6]._super,  x66[7]._super,
                 x66[8]._super,  x66[9]._super},
      Val32Array{x60[10]._super, x60[11]._super, x60[12]._super, x60[13]._super, x60[14]._super,
                 x60[15]._super, x60[16]._super, x60[17]._super, x60[18]._super, x60[19]._super,
                 x60[20]._super, x60[21]._super, x67[0]._super,  x67[1]._super,  x67[2]._super,
                 x67[3]._super,  x67[4]._super,  x67[5]._super,  x67[6]._super,  x67[7]._super,
                 x67[8]._super,  x67[9]._super,  x67[10]._super, x67[11]._super, x67[12]._super,
                 x67[13]._super, x67[14]._super, x67[15]._super, x67[16]._super, x67[17]._super,
                 x67[18]._super, x67[19]._super},
      Val32Array{x62[10]._super, x62[11]._super, x62[12]._super, x62[13]._super, x62[14]._super,
                 x62[15]._super, x62[16]._super, x62[17]._super, x62[18]._super, x62[19]._super,
                 x62[20]._super, x62[21]._super, x68[0]._super,  x68[1]._super,  x68[2]._super,
                 x68[3]._super,  x68[4]._super,  x68[5]._super,  x68[6]._super,  x68[7]._super,
                 x68[8]._super,  x68[9]._super,  x68[10]._super, x68[11]._super, x68[12]._super,
                 x68[13]._super, x68[14]._super, x68[15]._super, x68[16]._super, x68[17]._super,
                 x68[18]._super, x68[19]._super},
      Val32Array{x64[10]._super, x64[11]._super, x64[12]._super, x64[13]._super, x64[14]._super,
                 x64[15]._super, x64[16]._super, x64[17]._super, x64[18]._super, x64[19]._super,
                 x64[20]._super, x64[21]._super, x69[0]._super,  x69[1]._super,  x69[2]._super,
                 x69[3]._super,  x69[4]._super,  x69[5]._super,  x69[6]._super,  x69[7]._super,
                 x69[8]._super,  x69[9]._super,  x69[10]._super, x69[11]._super, x69[12]._super,
                 x69[13]._super, x69[14]._super, x69[15]._super, x69[16]._super, x69[17]._super,
                 x69[18]._super, x69[19]._super},
      Val32Array{x66[10]._super, x66[11]._super, x66[12]._super, x66[13]._super, x66[14]._super,
                 x66[15]._super, x66[16]._super, x66[17]._super, x66[18]._super, x66[19]._super,
                 x66[20]._super, x66[21]._super, x70[0]._super,  x70[1]._super,  x70[2]._super,
                 x70[3]._super,  x70[4]._super,  x70[5]._super,  x70[6]._super,  x70[7]._super,
                 x70[8]._super,  x70[9]._super,  x70[10]._super, x70[11]._super, x70[12]._super,
                 x70[13]._super, x70[14]._super, x70[15]._super, x70[16]._super, x70[17]._super,
                 x70[18]._super, x70[19]._super},
      Val32Array{x49, x50, x51, x52, x53, x54, x55, x56, x41, x42, x43, x44, x45, x46, x47, x48,
                 x29, x30, x31, x32, x33, x34, x35, x36, x21, x22, x23, x24, x25, x26, x27, x28},
      TwoShortsStruct{.low = Val(4593), .high = Val(23025)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x72 = x71.aOut;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:323)
  Concatenate_NondetReg__16__16_Struct x73 =
      execUnpackWithCarry(ctx, x72.low, x72.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:320)
  TwoShortsStruct x74 = x71.eOut;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:324)
  Concatenate_NondetReg__16__16_Struct x75 =
      execUnpackWithCarry(ctx, x74.low, x74.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:323)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x76 = x73._super;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:324)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x77 = x75._super;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:327)
  Val24Array x78 = Val24Array{x16[2], x16[3], Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:326)
  Val22Array x79 =
      Val22Array{x76[0]._super,  x76[1]._super,  x76[2]._super,  x76[3]._super,  x76[4]._super,
                 x76[5]._super,  x76[6]._super,  x76[7]._super,  x76[8]._super,  x76[9]._super,
                 x76[10]._super, x76[11]._super, x76[12]._super, x76[13]._super, x76[14]._super,
                 x76[15]._super, x76[16]._super, x76[17]._super, x76[18]._super, x76[19]._super,
                 x76[20]._super, x76[21]._super};
  Val22Array x80 =
      Val22Array{x76[22]._super, x76[23]._super, x76[24]._super, x76[25]._super, x76[26]._super,
                 x76[27]._super, x76[28]._super, x76[29]._super, x76[30]._super, x76[31]._super,
                 x77[0]._super,  x77[1]._super,  x77[2]._super,  x77[3]._super,  x77[4]._super,
                 x77[5]._super,  x77[6]._super,  x77[7]._super,  x77[8]._super,  x77[9]._super,
                 x77[10]._super, x77[11]._super};
  Val22Array x81 =
      Val22Array{x77[12]._super, x77[13]._super, x77[14]._super, x77[15]._super, x77[16]._super,
                 x77[17]._super, x77[18]._super, x77[19]._super, x77[20]._super, x77[21]._super,
                 x77[22]._super, x77[23]._super, x77[24]._super, x77[25]._super, x77[26]._super,
                 x77[27]._super, x77[28]._super, x77[29]._super, x77[30]._super, x77[31]._super,
                 Val(0),         Val(0)};
  Val22Array x82 = Val22Array{x49, x50, x51, x52, x53, x54, x55, x56, x41, x42, x43,
                              x44, x45, x46, x47, x48, x29, x30, x31, x32, x33, x34};
  Val22Array x83 = Val22Array{x35,    x36,    x21,    x22,    x23,    x24,    x25,    x26,
                              x27,    x28,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  if (to_size_t(Val(1))) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:329)
    RetTupleStruct x84 = exec_RetTuple(ctx,
                                       x79,
                                       x80,
                                       x81,
                                       x78,
                                       x82,
                                       x83,
                                       Val(6),
                                       Val(19),
                                       x16[4],
                                       x16[5],
                                       x9,
                                       LAYOUT_LOOKUP(x4, arm0));
  }
  if (to_size_t(Val(0))) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:331)
    RetTupleStruct x85 = exec_RetTuple(ctx,
                                       x79,
                                       x80,
                                       x81,
                                       x78,
                                       x82,
                                       x83,
                                       Val(0),
                                       Val(20),
                                       x16[4],
                                       x16[5],
                                       x9,
                                       LAYOUT_LOOKUP(x4, arm1));
  }
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:328)
  RetTupleStruct x86 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x4, _super));
  return x86;
}
RetTupleStruct execSha256load_6_(ExecContext& ctx,
                                 RetTupleStruct arg0,
                                 BoundLayout<RetTupleLayout> arg1,
                                 BoundLayout<Sha256load_6_Layout> layout2) {
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)
  BoundLayout<Sha256load_6_ValsLayout> x3 = LAYOUT_LOOKUP(layout2, vals);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:328)
  BoundLayout<Sha256load_6__SuperLayout> x4 = LAYOUT_LOOKUP(layout2, _super);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:292)
  RetTupleStruct x5 = back_RetTuple(ctx, 1, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:293)
  RetTupleStruct x6 = back_RetTuple(ctx, 2, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:294)
  RetTupleStruct x7 = back_RetTuple(ctx, 3, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:295)
  RetTupleStruct x8 = back_RetTuple(ctx, 4, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:292)
  Val x9 = x5.midx._super;
  Val x10 = x5.blk._super;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:298)
  Val x11 = ((x9 + Val(1)) - x10);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:299)
  NondetRegStruct x12 = exec_NondetReg(ctx, inv(x11), LAYOUT_LOOKUP(layout2, invWithin));
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:300)
  EQZ(((x11 * x12._super) - Val(1)), "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:300)");
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:292)
  Val x13 = x5.rnd._super;
  NondetRegStruct24Array x14 = x5.arrD;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)
  BoundLayout<Reg> x15 =
      LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x3, arm1), _extra0), count), _super);
  Val6Array x16;
  if (to_size_t((Val(1) - x13))) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:303)
    ReadMemoryStruct x17 = exec_ReadMemory(ctx, x10, LAYOUT_LOOKUP(LAYOUT_LOOKUP(x3, arm0), mem));
    NondetRegStruct4Array x18 = x17._super;
    x16 = Val6Array{x18[0]._super, x18[1]._super, x18[2]._super, x18[3]._super, Val(1), x10};
  } else if (to_size_t(x13)) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)
    STORE(x15, Val(0));
    EQZ(LOAD(x15, 0), "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)");
    x16 = Val6Array{x14[0]._super, x14[1]._super, Val(0), Val(0), Val(0), (x10 + Val(1))};
  } else {
    assert(0 && "Reached unreachable mux arm");
  }
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:309)
  ToBits_16_Struct x19 = exec_ToBits_16_(ctx, x16[0], LAYOUT_LOOKUP(layout2, highW));
  NondetRegStruct16Array x20 = x19._super;
  Val x21 = x20[0]._super;
  Val x22 = x20[1]._super;
  Val x23 = x20[2]._super;
  Val x24 = x20[3]._super;
  Val x25 = x20[4]._super;
  Val x26 = x20[5]._super;
  Val x27 = x20[6]._super;
  Val x28 = x20[7]._super;
  Val x29 = x20[8]._super;
  Val x30 = x20[9]._super;
  Val x31 = x20[10]._super;
  Val x32 = x20[11]._super;
  Val x33 = x20[12]._super;
  Val x34 = x20[13]._super;
  Val x35 = x20[14]._super;
  Val x36 = x20[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:310)
  Val x37 = ((((((x21 + (x22 * Val(2))) + (x23 * Val(4))) + (x24 * Val(8))) + (x25 * Val(16))) +
              (x26 * Val(32))) +
             (x27 * Val(64)));
  Val x38 =
      ((((((x37 + (x28 * Val(128))) + (x29 * Val(256))) + (x30 * Val(512))) + (x31 * Val(1024))) +
        (x32 * Val(2048))) +
       (x33 * Val(4096)));
  EQZ(((((x38 + (x34 * Val(8192))) + (x35 * Val(16384))) + (x36 * Val(32768))) - x16[0]),
      "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:310)");
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:312)
  ToBits_16_Struct x39 = exec_ToBits_16_(ctx, x16[1], LAYOUT_LOOKUP(layout2, lowW));
  NondetRegStruct16Array x40 = x39._super;
  Val x41 = x40[0]._super;
  Val x42 = x40[1]._super;
  Val x43 = x40[2]._super;
  Val x44 = x40[3]._super;
  Val x45 = x40[4]._super;
  Val x46 = x40[5]._super;
  Val x47 = x40[6]._super;
  Val x48 = x40[7]._super;
  Val x49 = x40[8]._super;
  Val x50 = x40[9]._super;
  Val x51 = x40[10]._super;
  Val x52 = x40[11]._super;
  Val x53 = x40[12]._super;
  Val x54 = x40[13]._super;
  Val x55 = x40[14]._super;
  Val x56 = x40[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:313)
  Val x57 = ((((((x41 + (x42 * Val(2))) + (x43 * Val(4))) + (x44 * Val(8))) + (x45 * Val(16))) +
              (x46 * Val(32))) +
             (x47 * Val(64)));
  Val x58 =
      ((((((x57 + (x48 * Val(128))) + (x49 * Val(256))) + (x50 * Val(512))) + (x51 * Val(1024))) +
        (x52 * Val(2048))) +
       (x53 * Val(4096)));
  EQZ(((((x58 + (x54 * Val(8192))) + (x55 * Val(16384))) + (x56 * Val(32768))) - x16[1]),
      "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:313)");
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:320)
  NondetRegStruct22Array x59 = x5.arrA;
  NondetRegStruct22Array x60 = x5.arrB;
  NondetRegStruct22Array x61 = x6.arrA;
  NondetRegStruct22Array x62 = x6.arrB;
  NondetRegStruct22Array x63 = x7.arrA;
  NondetRegStruct22Array x64 = x7.arrB;
  NondetRegStruct22Array x65 = x8.arrA;
  NondetRegStruct22Array x66 = x8.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:321)
  NondetRegStruct22Array x67 = x5.arrC;
  NondetRegStruct22Array x68 = x6.arrC;
  NondetRegStruct22Array x69 = x7.arrC;
  NondetRegStruct22Array x70 = x8.arrC;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:320)
  ComputeAEStruct x71 = execComputeAE(
      ctx,
      Val32Array{x59[0]._super,  x59[1]._super,  x59[2]._super,  x59[3]._super,  x59[4]._super,
                 x59[5]._super,  x59[6]._super,  x59[7]._super,  x59[8]._super,  x59[9]._super,
                 x59[10]._super, x59[11]._super, x59[12]._super, x59[13]._super, x59[14]._super,
                 x59[15]._super, x59[16]._super, x59[17]._super, x59[18]._super, x59[19]._super,
                 x59[20]._super, x59[21]._super, x60[0]._super,  x60[1]._super,  x60[2]._super,
                 x60[3]._super,  x60[4]._super,  x60[5]._super,  x60[6]._super,  x60[7]._super,
                 x60[8]._super,  x60[9]._super},
      Val32Array{x61[0]._super,  x61[1]._super,  x61[2]._super,  x61[3]._super,  x61[4]._super,
                 x61[5]._super,  x61[6]._super,  x61[7]._super,  x61[8]._super,  x61[9]._super,
                 x61[10]._super, x61[11]._super, x61[12]._super, x61[13]._super, x61[14]._super,
                 x61[15]._super, x61[16]._super, x61[17]._super, x61[18]._super, x61[19]._super,
                 x61[20]._super, x61[21]._super, x62[0]._super,  x62[1]._super,  x62[2]._super,
                 x62[3]._super,  x62[4]._super,  x62[5]._super,  x62[6]._super,  x62[7]._super,
                 x62[8]._super,  x62[9]._super},
      Val32Array{x63[0]._super,  x63[1]._super,  x63[2]._super,  x63[3]._super,  x63[4]._super,
                 x63[5]._super,  x63[6]._super,  x63[7]._super,  x63[8]._super,  x63[9]._super,
                 x63[10]._super, x63[11]._super, x63[12]._super, x63[13]._super, x63[14]._super,
                 x63[15]._super, x63[16]._super, x63[17]._super, x63[18]._super, x63[19]._super,
                 x63[20]._super, x63[21]._super, x64[0]._super,  x64[1]._super,  x64[2]._super,
                 x64[3]._super,  x64[4]._super,  x64[5]._super,  x64[6]._super,  x64[7]._super,
                 x64[8]._super,  x64[9]._super},
      Val32Array{x65[0]._super,  x65[1]._super,  x65[2]._super,  x65[3]._super,  x65[4]._super,
                 x65[5]._super,  x65[6]._super,  x65[7]._super,  x65[8]._super,  x65[9]._super,
                 x65[10]._super, x65[11]._super, x65[12]._super, x65[13]._super, x65[14]._super,
                 x65[15]._super, x65[16]._super, x65[17]._super, x65[18]._super, x65[19]._super,
                 x65[20]._super, x65[21]._super, x66[0]._super,  x66[1]._super,  x66[2]._super,
                 x66[3]._super,  x66[4]._super,  x66[5]._super,  x66[6]._super,  x66[7]._super,
                 x66[8]._super,  x66[9]._super},
      Val32Array{x60[10]._super, x60[11]._super, x60[12]._super, x60[13]._super, x60[14]._super,
                 x60[15]._super, x60[16]._super, x60[17]._super, x60[18]._super, x60[19]._super,
                 x60[20]._super, x60[21]._super, x67[0]._super,  x67[1]._super,  x67[2]._super,
                 x67[3]._super,  x67[4]._super,  x67[5]._super,  x67[6]._super,  x67[7]._super,
                 x67[8]._super,  x67[9]._super,  x67[10]._super, x67[11]._super, x67[12]._super,
                 x67[13]._super, x67[14]._super, x67[15]._super, x67[16]._super, x67[17]._super,
                 x67[18]._super, x67[19]._super},
      Val32Array{x62[10]._super, x62[11]._super, x62[12]._super, x62[13]._super, x62[14]._super,
                 x62[15]._super, x62[16]._super, x62[17]._super, x62[18]._super, x62[19]._super,
                 x62[20]._super, x62[21]._super, x68[0]._super,  x68[1]._super,  x68[2]._super,
                 x68[3]._super,  x68[4]._super,  x68[5]._super,  x68[6]._super,  x68[7]._super,
                 x68[8]._super,  x68[9]._super,  x68[10]._super, x68[11]._super, x68[12]._super,
                 x68[13]._super, x68[14]._super, x68[15]._super, x68[16]._super, x68[17]._super,
                 x68[18]._super, x68[19]._super},
      Val32Array{x64[10]._super, x64[11]._super, x64[12]._super, x64[13]._super, x64[14]._super,
                 x64[15]._super, x64[16]._super, x64[17]._super, x64[18]._super, x64[19]._super,
                 x64[20]._super, x64[21]._super, x69[0]._super,  x69[1]._super,  x69[2]._super,
                 x69[3]._super,  x69[4]._super,  x69[5]._super,  x69[6]._super,  x69[7]._super,
                 x69[8]._super,  x69[9]._super,  x69[10]._super, x69[11]._super, x69[12]._super,
                 x69[13]._super, x69[14]._super, x69[15]._super, x69[16]._super, x69[17]._super,
                 x69[18]._super, x69[19]._super},
      Val32Array{x66[10]._super, x66[11]._super, x66[12]._super, x66[13]._super, x66[14]._super,
                 x66[15]._super, x66[16]._super, x66[17]._super, x66[18]._super, x66[19]._super,
                 x66[20]._super, x66[21]._super, x70[0]._super,  x70[1]._super,  x70[2]._super,
                 x70[3]._super,  x70[4]._super,  x70[5]._super,  x70[6]._super,  x70[7]._super,
                 x70[8]._super,  x70[9]._super,  x70[10]._super, x70[11]._super, x70[12]._super,
                 x70[13]._super, x70[14]._super, x70[15]._super, x70[16]._super, x70[17]._super,
                 x70[18]._super, x70[19]._super},
      Val32Array{x49, x50, x51, x52, x53, x54, x55, x56, x41, x42, x43, x44, x45, x46, x47, x48,
                 x29, x30, x31, x32, x33, x34, x35, x36, x21, x22, x23, x24, x25, x26, x27, x28},
      TwoShortsStruct{.low = Val(33444), .high = Val(37439)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x72 = x71.aOut;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:323)
  Concatenate_NondetReg__16__16_Struct x73 =
      execUnpackWithCarry(ctx, x72.low, x72.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:320)
  TwoShortsStruct x74 = x71.eOut;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:324)
  Concatenate_NondetReg__16__16_Struct x75 =
      execUnpackWithCarry(ctx, x74.low, x74.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:323)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x76 = x73._super;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:324)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x77 = x75._super;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:327)
  Val24Array x78 = Val24Array{x16[2], x16[3], Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:326)
  Val22Array x79 =
      Val22Array{x76[0]._super,  x76[1]._super,  x76[2]._super,  x76[3]._super,  x76[4]._super,
                 x76[5]._super,  x76[6]._super,  x76[7]._super,  x76[8]._super,  x76[9]._super,
                 x76[10]._super, x76[11]._super, x76[12]._super, x76[13]._super, x76[14]._super,
                 x76[15]._super, x76[16]._super, x76[17]._super, x76[18]._super, x76[19]._super,
                 x76[20]._super, x76[21]._super};
  Val22Array x80 =
      Val22Array{x76[22]._super, x76[23]._super, x76[24]._super, x76[25]._super, x76[26]._super,
                 x76[27]._super, x76[28]._super, x76[29]._super, x76[30]._super, x76[31]._super,
                 x77[0]._super,  x77[1]._super,  x77[2]._super,  x77[3]._super,  x77[4]._super,
                 x77[5]._super,  x77[6]._super,  x77[7]._super,  x77[8]._super,  x77[9]._super,
                 x77[10]._super, x77[11]._super};
  Val22Array x81 =
      Val22Array{x77[12]._super, x77[13]._super, x77[14]._super, x77[15]._super, x77[16]._super,
                 x77[17]._super, x77[18]._super, x77[19]._super, x77[20]._super, x77[21]._super,
                 x77[22]._super, x77[23]._super, x77[24]._super, x77[25]._super, x77[26]._super,
                 x77[27]._super, x77[28]._super, x77[29]._super, x77[30]._super, x77[31]._super,
                 Val(0),         Val(0)};
  Val22Array x82 = Val22Array{x49, x50, x51, x52, x53, x54, x55, x56, x41, x42, x43,
                              x44, x45, x46, x47, x48, x29, x30, x31, x32, x33, x34};
  Val22Array x83 = Val22Array{x35,    x36,    x21,    x22,    x23,    x24,    x25,    x26,
                              x27,    x28,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  if (to_size_t(Val(1))) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:329)
    RetTupleStruct x84 = exec_RetTuple(ctx,
                                       x79,
                                       x80,
                                       x81,
                                       x78,
                                       x82,
                                       x83,
                                       Val(7),
                                       Val(19),
                                       x16[4],
                                       x16[5],
                                       x9,
                                       LAYOUT_LOOKUP(x4, arm0));
  }
  if (to_size_t(Val(0))) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:331)
    RetTupleStruct x85 = exec_RetTuple(ctx,
                                       x79,
                                       x80,
                                       x81,
                                       x78,
                                       x82,
                                       x83,
                                       Val(0),
                                       Val(20),
                                       x16[4],
                                       x16[5],
                                       x9,
                                       LAYOUT_LOOKUP(x4, arm1));
  }
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:328)
  RetTupleStruct x86 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x4, _super));
  return x86;
}
RetTupleStruct execSha256load_7_(ExecContext& ctx,
                                 RetTupleStruct arg0,
                                 BoundLayout<RetTupleLayout> arg1,
                                 BoundLayout<Sha256load_7_Layout> layout2) {
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)
  BoundLayout<Sha256load_7_ValsLayout> x3 = LAYOUT_LOOKUP(layout2, vals);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:328)
  BoundLayout<Sha256load_7__SuperLayout> x4 = LAYOUT_LOOKUP(layout2, _super);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:292)
  RetTupleStruct x5 = back_RetTuple(ctx, 1, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:293)
  RetTupleStruct x6 = back_RetTuple(ctx, 2, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:294)
  RetTupleStruct x7 = back_RetTuple(ctx, 3, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:295)
  RetTupleStruct x8 = back_RetTuple(ctx, 4, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:292)
  Val x9 = x5.midx._super;
  Val x10 = x5.blk._super;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:298)
  Val x11 = ((x9 + Val(1)) - x10);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:299)
  NondetRegStruct x12 = exec_NondetReg(ctx, inv(x11), LAYOUT_LOOKUP(layout2, invWithin));
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:300)
  EQZ(((x11 * x12._super) - Val(1)), "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:300)");
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:292)
  Val x13 = x5.rnd._super;
  NondetRegStruct24Array x14 = x5.arrD;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)
  BoundLayout<Reg> x15 =
      LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x3, arm1), _extra0), count), _super);
  Val6Array x16;
  if (to_size_t((Val(1) - x13))) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:303)
    ReadMemoryStruct x17 = exec_ReadMemory(ctx, x10, LAYOUT_LOOKUP(LAYOUT_LOOKUP(x3, arm0), mem));
    NondetRegStruct4Array x18 = x17._super;
    x16 = Val6Array{x18[0]._super, x18[1]._super, x18[2]._super, x18[3]._super, Val(1), x10};
  } else if (to_size_t(x13)) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)
    STORE(x15, Val(0));
    EQZ(LOAD(x15, 0), "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)");
    x16 = Val6Array{x14[0]._super, x14[1]._super, Val(0), Val(0), Val(0), (x10 + Val(1))};
  } else {
    assert(0 && "Reached unreachable mux arm");
  }
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:309)
  ToBits_16_Struct x19 = exec_ToBits_16_(ctx, x16[0], LAYOUT_LOOKUP(layout2, highW));
  NondetRegStruct16Array x20 = x19._super;
  Val x21 = x20[0]._super;
  Val x22 = x20[1]._super;
  Val x23 = x20[2]._super;
  Val x24 = x20[3]._super;
  Val x25 = x20[4]._super;
  Val x26 = x20[5]._super;
  Val x27 = x20[6]._super;
  Val x28 = x20[7]._super;
  Val x29 = x20[8]._super;
  Val x30 = x20[9]._super;
  Val x31 = x20[10]._super;
  Val x32 = x20[11]._super;
  Val x33 = x20[12]._super;
  Val x34 = x20[13]._super;
  Val x35 = x20[14]._super;
  Val x36 = x20[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:310)
  Val x37 = ((((((x21 + (x22 * Val(2))) + (x23 * Val(4))) + (x24 * Val(8))) + (x25 * Val(16))) +
              (x26 * Val(32))) +
             (x27 * Val(64)));
  Val x38 =
      ((((((x37 + (x28 * Val(128))) + (x29 * Val(256))) + (x30 * Val(512))) + (x31 * Val(1024))) +
        (x32 * Val(2048))) +
       (x33 * Val(4096)));
  EQZ(((((x38 + (x34 * Val(8192))) + (x35 * Val(16384))) + (x36 * Val(32768))) - x16[0]),
      "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:310)");
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:312)
  ToBits_16_Struct x39 = exec_ToBits_16_(ctx, x16[1], LAYOUT_LOOKUP(layout2, lowW));
  NondetRegStruct16Array x40 = x39._super;
  Val x41 = x40[0]._super;
  Val x42 = x40[1]._super;
  Val x43 = x40[2]._super;
  Val x44 = x40[3]._super;
  Val x45 = x40[4]._super;
  Val x46 = x40[5]._super;
  Val x47 = x40[6]._super;
  Val x48 = x40[7]._super;
  Val x49 = x40[8]._super;
  Val x50 = x40[9]._super;
  Val x51 = x40[10]._super;
  Val x52 = x40[11]._super;
  Val x53 = x40[12]._super;
  Val x54 = x40[13]._super;
  Val x55 = x40[14]._super;
  Val x56 = x40[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:313)
  Val x57 = ((((((x41 + (x42 * Val(2))) + (x43 * Val(4))) + (x44 * Val(8))) + (x45 * Val(16))) +
              (x46 * Val(32))) +
             (x47 * Val(64)));
  Val x58 =
      ((((((x57 + (x48 * Val(128))) + (x49 * Val(256))) + (x50 * Val(512))) + (x51 * Val(1024))) +
        (x52 * Val(2048))) +
       (x53 * Val(4096)));
  EQZ(((((x58 + (x54 * Val(8192))) + (x55 * Val(16384))) + (x56 * Val(32768))) - x16[1]),
      "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:313)");
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:320)
  NondetRegStruct22Array x59 = x5.arrA;
  NondetRegStruct22Array x60 = x5.arrB;
  NondetRegStruct22Array x61 = x6.arrA;
  NondetRegStruct22Array x62 = x6.arrB;
  NondetRegStruct22Array x63 = x7.arrA;
  NondetRegStruct22Array x64 = x7.arrB;
  NondetRegStruct22Array x65 = x8.arrA;
  NondetRegStruct22Array x66 = x8.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:321)
  NondetRegStruct22Array x67 = x5.arrC;
  NondetRegStruct22Array x68 = x6.arrC;
  NondetRegStruct22Array x69 = x7.arrC;
  NondetRegStruct22Array x70 = x8.arrC;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:320)
  ComputeAEStruct x71 = execComputeAE(
      ctx,
      Val32Array{x59[0]._super,  x59[1]._super,  x59[2]._super,  x59[3]._super,  x59[4]._super,
                 x59[5]._super,  x59[6]._super,  x59[7]._super,  x59[8]._super,  x59[9]._super,
                 x59[10]._super, x59[11]._super, x59[12]._super, x59[13]._super, x59[14]._super,
                 x59[15]._super, x59[16]._super, x59[17]._super, x59[18]._super, x59[19]._super,
                 x59[20]._super, x59[21]._super, x60[0]._super,  x60[1]._super,  x60[2]._super,
                 x60[3]._super,  x60[4]._super,  x60[5]._super,  x60[6]._super,  x60[7]._super,
                 x60[8]._super,  x60[9]._super},
      Val32Array{x61[0]._super,  x61[1]._super,  x61[2]._super,  x61[3]._super,  x61[4]._super,
                 x61[5]._super,  x61[6]._super,  x61[7]._super,  x61[8]._super,  x61[9]._super,
                 x61[10]._super, x61[11]._super, x61[12]._super, x61[13]._super, x61[14]._super,
                 x61[15]._super, x61[16]._super, x61[17]._super, x61[18]._super, x61[19]._super,
                 x61[20]._super, x61[21]._super, x62[0]._super,  x62[1]._super,  x62[2]._super,
                 x62[3]._super,  x62[4]._super,  x62[5]._super,  x62[6]._super,  x62[7]._super,
                 x62[8]._super,  x62[9]._super},
      Val32Array{x63[0]._super,  x63[1]._super,  x63[2]._super,  x63[3]._super,  x63[4]._super,
                 x63[5]._super,  x63[6]._super,  x63[7]._super,  x63[8]._super,  x63[9]._super,
                 x63[10]._super, x63[11]._super, x63[12]._super, x63[13]._super, x63[14]._super,
                 x63[15]._super, x63[16]._super, x63[17]._super, x63[18]._super, x63[19]._super,
                 x63[20]._super, x63[21]._super, x64[0]._super,  x64[1]._super,  x64[2]._super,
                 x64[3]._super,  x64[4]._super,  x64[5]._super,  x64[6]._super,  x64[7]._super,
                 x64[8]._super,  x64[9]._super},
      Val32Array{x65[0]._super,  x65[1]._super,  x65[2]._super,  x65[3]._super,  x65[4]._super,
                 x65[5]._super,  x65[6]._super,  x65[7]._super,  x65[8]._super,  x65[9]._super,
                 x65[10]._super, x65[11]._super, x65[12]._super, x65[13]._super, x65[14]._super,
                 x65[15]._super, x65[16]._super, x65[17]._super, x65[18]._super, x65[19]._super,
                 x65[20]._super, x65[21]._super, x66[0]._super,  x66[1]._super,  x66[2]._super,
                 x66[3]._super,  x66[4]._super,  x66[5]._super,  x66[6]._super,  x66[7]._super,
                 x66[8]._super,  x66[9]._super},
      Val32Array{x60[10]._super, x60[11]._super, x60[12]._super, x60[13]._super, x60[14]._super,
                 x60[15]._super, x60[16]._super, x60[17]._super, x60[18]._super, x60[19]._super,
                 x60[20]._super, x60[21]._super, x67[0]._super,  x67[1]._super,  x67[2]._super,
                 x67[3]._super,  x67[4]._super,  x67[5]._super,  x67[6]._super,  x67[7]._super,
                 x67[8]._super,  x67[9]._super,  x67[10]._super, x67[11]._super, x67[12]._super,
                 x67[13]._super, x67[14]._super, x67[15]._super, x67[16]._super, x67[17]._super,
                 x67[18]._super, x67[19]._super},
      Val32Array{x62[10]._super, x62[11]._super, x62[12]._super, x62[13]._super, x62[14]._super,
                 x62[15]._super, x62[16]._super, x62[17]._super, x62[18]._super, x62[19]._super,
                 x62[20]._super, x62[21]._super, x68[0]._super,  x68[1]._super,  x68[2]._super,
                 x68[3]._super,  x68[4]._super,  x68[5]._super,  x68[6]._super,  x68[7]._super,
                 x68[8]._super,  x68[9]._super,  x68[10]._super, x68[11]._super, x68[12]._super,
                 x68[13]._super, x68[14]._super, x68[15]._super, x68[16]._super, x68[17]._super,
                 x68[18]._super, x68[19]._super},
      Val32Array{x64[10]._super, x64[11]._super, x64[12]._super, x64[13]._super, x64[14]._super,
                 x64[15]._super, x64[16]._super, x64[17]._super, x64[18]._super, x64[19]._super,
                 x64[20]._super, x64[21]._super, x69[0]._super,  x69[1]._super,  x69[2]._super,
                 x69[3]._super,  x69[4]._super,  x69[5]._super,  x69[6]._super,  x69[7]._super,
                 x69[8]._super,  x69[9]._super,  x69[10]._super, x69[11]._super, x69[12]._super,
                 x69[13]._super, x69[14]._super, x69[15]._super, x69[16]._super, x69[17]._super,
                 x69[18]._super, x69[19]._super},
      Val32Array{x66[10]._super, x66[11]._super, x66[12]._super, x66[13]._super, x66[14]._super,
                 x66[15]._super, x66[16]._super, x66[17]._super, x66[18]._super, x66[19]._super,
                 x66[20]._super, x66[21]._super, x70[0]._super,  x70[1]._super,  x70[2]._super,
                 x70[3]._super,  x70[4]._super,  x70[5]._super,  x70[6]._super,  x70[7]._super,
                 x70[8]._super,  x70[9]._super,  x70[10]._super, x70[11]._super, x70[12]._super,
                 x70[13]._super, x70[14]._super, x70[15]._super, x70[16]._super, x70[17]._super,
                 x70[18]._super, x70[19]._super},
      Val32Array{x49, x50, x51, x52, x53, x54, x55, x56, x41, x42, x43, x44, x45, x46, x47, x48,
                 x29, x30, x31, x32, x33, x34, x35, x36, x21, x22, x23, x24, x25, x26, x27, x28},
      TwoShortsStruct{.low = Val(24277), .high = Val(43804)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x72 = x71.aOut;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:323)
  Concatenate_NondetReg__16__16_Struct x73 =
      execUnpackWithCarry(ctx, x72.low, x72.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:320)
  TwoShortsStruct x74 = x71.eOut;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:324)
  Concatenate_NondetReg__16__16_Struct x75 =
      execUnpackWithCarry(ctx, x74.low, x74.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:323)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x76 = x73._super;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:324)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x77 = x75._super;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:327)
  Val24Array x78 = Val24Array{x16[2], x16[3], Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:326)
  Val22Array x79 =
      Val22Array{x76[0]._super,  x76[1]._super,  x76[2]._super,  x76[3]._super,  x76[4]._super,
                 x76[5]._super,  x76[6]._super,  x76[7]._super,  x76[8]._super,  x76[9]._super,
                 x76[10]._super, x76[11]._super, x76[12]._super, x76[13]._super, x76[14]._super,
                 x76[15]._super, x76[16]._super, x76[17]._super, x76[18]._super, x76[19]._super,
                 x76[20]._super, x76[21]._super};
  Val22Array x80 =
      Val22Array{x76[22]._super, x76[23]._super, x76[24]._super, x76[25]._super, x76[26]._super,
                 x76[27]._super, x76[28]._super, x76[29]._super, x76[30]._super, x76[31]._super,
                 x77[0]._super,  x77[1]._super,  x77[2]._super,  x77[3]._super,  x77[4]._super,
                 x77[5]._super,  x77[6]._super,  x77[7]._super,  x77[8]._super,  x77[9]._super,
                 x77[10]._super, x77[11]._super};
  Val22Array x81 =
      Val22Array{x77[12]._super, x77[13]._super, x77[14]._super, x77[15]._super, x77[16]._super,
                 x77[17]._super, x77[18]._super, x77[19]._super, x77[20]._super, x77[21]._super,
                 x77[22]._super, x77[23]._super, x77[24]._super, x77[25]._super, x77[26]._super,
                 x77[27]._super, x77[28]._super, x77[29]._super, x77[30]._super, x77[31]._super,
                 Val(0),         Val(0)};
  Val22Array x82 = Val22Array{x49, x50, x51, x52, x53, x54, x55, x56, x41, x42, x43,
                              x44, x45, x46, x47, x48, x29, x30, x31, x32, x33, x34};
  Val22Array x83 = Val22Array{x35,    x36,    x21,    x22,    x23,    x24,    x25,    x26,
                              x27,    x28,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  if (to_size_t(Val(1))) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:329)
    RetTupleStruct x84 = exec_RetTuple(ctx,
                                       x79,
                                       x80,
                                       x81,
                                       x78,
                                       x82,
                                       x83,
                                       Val(8),
                                       Val(19),
                                       x16[4],
                                       x16[5],
                                       x9,
                                       LAYOUT_LOOKUP(x4, arm0));
  }
  if (to_size_t(Val(0))) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:331)
    RetTupleStruct x85 = exec_RetTuple(ctx,
                                       x79,
                                       x80,
                                       x81,
                                       x78,
                                       x82,
                                       x83,
                                       Val(0),
                                       Val(20),
                                       x16[4],
                                       x16[5],
                                       x9,
                                       LAYOUT_LOOKUP(x4, arm1));
  }
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:328)
  RetTupleStruct x86 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x4, _super));
  return x86;
}
RetTupleStruct execSha256load_8_(ExecContext& ctx,
                                 RetTupleStruct arg0,
                                 BoundLayout<RetTupleLayout> arg1,
                                 BoundLayout<Sha256load_8_Layout> layout2) {
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)
  BoundLayout<Sha256load_8_ValsLayout> x3 = LAYOUT_LOOKUP(layout2, vals);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:328)
  BoundLayout<Sha256load_8__SuperLayout> x4 = LAYOUT_LOOKUP(layout2, _super);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:292)
  RetTupleStruct x5 = back_RetTuple(ctx, 1, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:293)
  RetTupleStruct x6 = back_RetTuple(ctx, 2, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:294)
  RetTupleStruct x7 = back_RetTuple(ctx, 3, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:295)
  RetTupleStruct x8 = back_RetTuple(ctx, 4, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:292)
  Val x9 = x5.midx._super;
  Val x10 = x5.blk._super;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:298)
  Val x11 = ((x9 + Val(1)) - x10);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:299)
  NondetRegStruct x12 = exec_NondetReg(ctx, inv(x11), LAYOUT_LOOKUP(layout2, invWithin));
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:300)
  EQZ(((x11 * x12._super) - Val(1)), "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:300)");
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:292)
  Val x13 = x5.rnd._super;
  NondetRegStruct24Array x14 = x5.arrD;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)
  BoundLayout<Reg> x15 =
      LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x3, arm1), _extra0), count), _super);
  Val6Array x16;
  if (to_size_t((Val(1) - x13))) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:303)
    ReadMemoryStruct x17 = exec_ReadMemory(ctx, x10, LAYOUT_LOOKUP(LAYOUT_LOOKUP(x3, arm0), mem));
    NondetRegStruct4Array x18 = x17._super;
    x16 = Val6Array{x18[0]._super, x18[1]._super, x18[2]._super, x18[3]._super, Val(1), x10};
  } else if (to_size_t(x13)) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)
    STORE(x15, Val(0));
    EQZ(LOAD(x15, 0), "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)");
    x16 = Val6Array{x14[0]._super, x14[1]._super, Val(0), Val(0), Val(0), (x10 + Val(1))};
  } else {
    assert(0 && "Reached unreachable mux arm");
  }
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:309)
  ToBits_16_Struct x19 = exec_ToBits_16_(ctx, x16[0], LAYOUT_LOOKUP(layout2, highW));
  NondetRegStruct16Array x20 = x19._super;
  Val x21 = x20[0]._super;
  Val x22 = x20[1]._super;
  Val x23 = x20[2]._super;
  Val x24 = x20[3]._super;
  Val x25 = x20[4]._super;
  Val x26 = x20[5]._super;
  Val x27 = x20[6]._super;
  Val x28 = x20[7]._super;
  Val x29 = x20[8]._super;
  Val x30 = x20[9]._super;
  Val x31 = x20[10]._super;
  Val x32 = x20[11]._super;
  Val x33 = x20[12]._super;
  Val x34 = x20[13]._super;
  Val x35 = x20[14]._super;
  Val x36 = x20[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:310)
  Val x37 = ((((((x21 + (x22 * Val(2))) + (x23 * Val(4))) + (x24 * Val(8))) + (x25 * Val(16))) +
              (x26 * Val(32))) +
             (x27 * Val(64)));
  Val x38 =
      ((((((x37 + (x28 * Val(128))) + (x29 * Val(256))) + (x30 * Val(512))) + (x31 * Val(1024))) +
        (x32 * Val(2048))) +
       (x33 * Val(4096)));
  EQZ(((((x38 + (x34 * Val(8192))) + (x35 * Val(16384))) + (x36 * Val(32768))) - x16[0]),
      "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:310)");
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:312)
  ToBits_16_Struct x39 = exec_ToBits_16_(ctx, x16[1], LAYOUT_LOOKUP(layout2, lowW));
  NondetRegStruct16Array x40 = x39._super;
  Val x41 = x40[0]._super;
  Val x42 = x40[1]._super;
  Val x43 = x40[2]._super;
  Val x44 = x40[3]._super;
  Val x45 = x40[4]._super;
  Val x46 = x40[5]._super;
  Val x47 = x40[6]._super;
  Val x48 = x40[7]._super;
  Val x49 = x40[8]._super;
  Val x50 = x40[9]._super;
  Val x51 = x40[10]._super;
  Val x52 = x40[11]._super;
  Val x53 = x40[12]._super;
  Val x54 = x40[13]._super;
  Val x55 = x40[14]._super;
  Val x56 = x40[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:313)
  Val x57 = ((((((x41 + (x42 * Val(2))) + (x43 * Val(4))) + (x44 * Val(8))) + (x45 * Val(16))) +
              (x46 * Val(32))) +
             (x47 * Val(64)));
  Val x58 =
      ((((((x57 + (x48 * Val(128))) + (x49 * Val(256))) + (x50 * Val(512))) + (x51 * Val(1024))) +
        (x52 * Val(2048))) +
       (x53 * Val(4096)));
  EQZ(((((x58 + (x54 * Val(8192))) + (x55 * Val(16384))) + (x56 * Val(32768))) - x16[1]),
      "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:313)");
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:320)
  NondetRegStruct22Array x59 = x5.arrA;
  NondetRegStruct22Array x60 = x5.arrB;
  NondetRegStruct22Array x61 = x6.arrA;
  NondetRegStruct22Array x62 = x6.arrB;
  NondetRegStruct22Array x63 = x7.arrA;
  NondetRegStruct22Array x64 = x7.arrB;
  NondetRegStruct22Array x65 = x8.arrA;
  NondetRegStruct22Array x66 = x8.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:321)
  NondetRegStruct22Array x67 = x5.arrC;
  NondetRegStruct22Array x68 = x6.arrC;
  NondetRegStruct22Array x69 = x7.arrC;
  NondetRegStruct22Array x70 = x8.arrC;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:320)
  ComputeAEStruct x71 = execComputeAE(
      ctx,
      Val32Array{x59[0]._super,  x59[1]._super,  x59[2]._super,  x59[3]._super,  x59[4]._super,
                 x59[5]._super,  x59[6]._super,  x59[7]._super,  x59[8]._super,  x59[9]._super,
                 x59[10]._super, x59[11]._super, x59[12]._super, x59[13]._super, x59[14]._super,
                 x59[15]._super, x59[16]._super, x59[17]._super, x59[18]._super, x59[19]._super,
                 x59[20]._super, x59[21]._super, x60[0]._super,  x60[1]._super,  x60[2]._super,
                 x60[3]._super,  x60[4]._super,  x60[5]._super,  x60[6]._super,  x60[7]._super,
                 x60[8]._super,  x60[9]._super},
      Val32Array{x61[0]._super,  x61[1]._super,  x61[2]._super,  x61[3]._super,  x61[4]._super,
                 x61[5]._super,  x61[6]._super,  x61[7]._super,  x61[8]._super,  x61[9]._super,
                 x61[10]._super, x61[11]._super, x61[12]._super, x61[13]._super, x61[14]._super,
                 x61[15]._super, x61[16]._super, x61[17]._super, x61[18]._super, x61[19]._super,
                 x61[20]._super, x61[21]._super, x62[0]._super,  x62[1]._super,  x62[2]._super,
                 x62[3]._super,  x62[4]._super,  x62[5]._super,  x62[6]._super,  x62[7]._super,
                 x62[8]._super,  x62[9]._super},
      Val32Array{x63[0]._super,  x63[1]._super,  x63[2]._super,  x63[3]._super,  x63[4]._super,
                 x63[5]._super,  x63[6]._super,  x63[7]._super,  x63[8]._super,  x63[9]._super,
                 x63[10]._super, x63[11]._super, x63[12]._super, x63[13]._super, x63[14]._super,
                 x63[15]._super, x63[16]._super, x63[17]._super, x63[18]._super, x63[19]._super,
                 x63[20]._super, x63[21]._super, x64[0]._super,  x64[1]._super,  x64[2]._super,
                 x64[3]._super,  x64[4]._super,  x64[5]._super,  x64[6]._super,  x64[7]._super,
                 x64[8]._super,  x64[9]._super},
      Val32Array{x65[0]._super,  x65[1]._super,  x65[2]._super,  x65[3]._super,  x65[4]._super,
                 x65[5]._super,  x65[6]._super,  x65[7]._super,  x65[8]._super,  x65[9]._super,
                 x65[10]._super, x65[11]._super, x65[12]._super, x65[13]._super, x65[14]._super,
                 x65[15]._super, x65[16]._super, x65[17]._super, x65[18]._super, x65[19]._super,
                 x65[20]._super, x65[21]._super, x66[0]._super,  x66[1]._super,  x66[2]._super,
                 x66[3]._super,  x66[4]._super,  x66[5]._super,  x66[6]._super,  x66[7]._super,
                 x66[8]._super,  x66[9]._super},
      Val32Array{x60[10]._super, x60[11]._super, x60[12]._super, x60[13]._super, x60[14]._super,
                 x60[15]._super, x60[16]._super, x60[17]._super, x60[18]._super, x60[19]._super,
                 x60[20]._super, x60[21]._super, x67[0]._super,  x67[1]._super,  x67[2]._super,
                 x67[3]._super,  x67[4]._super,  x67[5]._super,  x67[6]._super,  x67[7]._super,
                 x67[8]._super,  x67[9]._super,  x67[10]._super, x67[11]._super, x67[12]._super,
                 x67[13]._super, x67[14]._super, x67[15]._super, x67[16]._super, x67[17]._super,
                 x67[18]._super, x67[19]._super},
      Val32Array{x62[10]._super, x62[11]._super, x62[12]._super, x62[13]._super, x62[14]._super,
                 x62[15]._super, x62[16]._super, x62[17]._super, x62[18]._super, x62[19]._super,
                 x62[20]._super, x62[21]._super, x68[0]._super,  x68[1]._super,  x68[2]._super,
                 x68[3]._super,  x68[4]._super,  x68[5]._super,  x68[6]._super,  x68[7]._super,
                 x68[8]._super,  x68[9]._super,  x68[10]._super, x68[11]._super, x68[12]._super,
                 x68[13]._super, x68[14]._super, x68[15]._super, x68[16]._super, x68[17]._super,
                 x68[18]._super, x68[19]._super},
      Val32Array{x64[10]._super, x64[11]._super, x64[12]._super, x64[13]._super, x64[14]._super,
                 x64[15]._super, x64[16]._super, x64[17]._super, x64[18]._super, x64[19]._super,
                 x64[20]._super, x64[21]._super, x69[0]._super,  x69[1]._super,  x69[2]._super,
                 x69[3]._super,  x69[4]._super,  x69[5]._super,  x69[6]._super,  x69[7]._super,
                 x69[8]._super,  x69[9]._super,  x69[10]._super, x69[11]._super, x69[12]._super,
                 x69[13]._super, x69[14]._super, x69[15]._super, x69[16]._super, x69[17]._super,
                 x69[18]._super, x69[19]._super},
      Val32Array{x66[10]._super, x66[11]._super, x66[12]._super, x66[13]._super, x66[14]._super,
                 x66[15]._super, x66[16]._super, x66[17]._super, x66[18]._super, x66[19]._super,
                 x66[20]._super, x66[21]._super, x70[0]._super,  x70[1]._super,  x70[2]._super,
                 x70[3]._super,  x70[4]._super,  x70[5]._super,  x70[6]._super,  x70[7]._super,
                 x70[8]._super,  x70[9]._super,  x70[10]._super, x70[11]._super, x70[12]._super,
                 x70[13]._super, x70[14]._super, x70[15]._super, x70[16]._super, x70[17]._super,
                 x70[18]._super, x70[19]._super},
      Val32Array{x49, x50, x51, x52, x53, x54, x55, x56, x41, x42, x43, x44, x45, x46, x47, x48,
                 x29, x30, x31, x32, x33, x34, x35, x36, x21, x22, x23, x24, x25, x26, x27, x28},
      TwoShortsStruct{.low = Val(43672), .high = Val(55303)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x72 = x71.aOut;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:323)
  Concatenate_NondetReg__16__16_Struct x73 =
      execUnpackWithCarry(ctx, x72.low, x72.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:320)
  TwoShortsStruct x74 = x71.eOut;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:324)
  Concatenate_NondetReg__16__16_Struct x75 =
      execUnpackWithCarry(ctx, x74.low, x74.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:323)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x76 = x73._super;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:324)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x77 = x75._super;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:327)
  Val24Array x78 = Val24Array{x16[2], x16[3], Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:326)
  Val22Array x79 =
      Val22Array{x76[0]._super,  x76[1]._super,  x76[2]._super,  x76[3]._super,  x76[4]._super,
                 x76[5]._super,  x76[6]._super,  x76[7]._super,  x76[8]._super,  x76[9]._super,
                 x76[10]._super, x76[11]._super, x76[12]._super, x76[13]._super, x76[14]._super,
                 x76[15]._super, x76[16]._super, x76[17]._super, x76[18]._super, x76[19]._super,
                 x76[20]._super, x76[21]._super};
  Val22Array x80 =
      Val22Array{x76[22]._super, x76[23]._super, x76[24]._super, x76[25]._super, x76[26]._super,
                 x76[27]._super, x76[28]._super, x76[29]._super, x76[30]._super, x76[31]._super,
                 x77[0]._super,  x77[1]._super,  x77[2]._super,  x77[3]._super,  x77[4]._super,
                 x77[5]._super,  x77[6]._super,  x77[7]._super,  x77[8]._super,  x77[9]._super,
                 x77[10]._super, x77[11]._super};
  Val22Array x81 =
      Val22Array{x77[12]._super, x77[13]._super, x77[14]._super, x77[15]._super, x77[16]._super,
                 x77[17]._super, x77[18]._super, x77[19]._super, x77[20]._super, x77[21]._super,
                 x77[22]._super, x77[23]._super, x77[24]._super, x77[25]._super, x77[26]._super,
                 x77[27]._super, x77[28]._super, x77[29]._super, x77[30]._super, x77[31]._super,
                 Val(0),         Val(0)};
  Val22Array x82 = Val22Array{x49, x50, x51, x52, x53, x54, x55, x56, x41, x42, x43,
                              x44, x45, x46, x47, x48, x29, x30, x31, x32, x33, x34};
  Val22Array x83 = Val22Array{x35,    x36,    x21,    x22,    x23,    x24,    x25,    x26,
                              x27,    x28,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  if (to_size_t(Val(1))) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:329)
    RetTupleStruct x84 = exec_RetTuple(ctx,
                                       x79,
                                       x80,
                                       x81,
                                       x78,
                                       x82,
                                       x83,
                                       Val(9),
                                       Val(19),
                                       x16[4],
                                       x16[5],
                                       x9,
                                       LAYOUT_LOOKUP(x4, arm0));
  }
  if (to_size_t(Val(0))) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:331)
    RetTupleStruct x85 = exec_RetTuple(ctx,
                                       x79,
                                       x80,
                                       x81,
                                       x78,
                                       x82,
                                       x83,
                                       Val(0),
                                       Val(20),
                                       x16[4],
                                       x16[5],
                                       x9,
                                       LAYOUT_LOOKUP(x4, arm1));
  }
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:328)
  RetTupleStruct x86 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x4, _super));
  return x86;
}
RetTupleStruct execSha256load_9_(ExecContext& ctx,
                                 RetTupleStruct arg0,
                                 BoundLayout<RetTupleLayout> arg1,
                                 BoundLayout<Sha256load_9_Layout> layout2) {
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)
  BoundLayout<Sha256load_9_ValsLayout> x3 = LAYOUT_LOOKUP(layout2, vals);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:328)
  BoundLayout<Sha256load_9__SuperLayout> x4 = LAYOUT_LOOKUP(layout2, _super);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:292)
  RetTupleStruct x5 = back_RetTuple(ctx, 1, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:293)
  RetTupleStruct x6 = back_RetTuple(ctx, 2, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:294)
  RetTupleStruct x7 = back_RetTuple(ctx, 3, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:295)
  RetTupleStruct x8 = back_RetTuple(ctx, 4, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:292)
  Val x9 = x5.midx._super;
  Val x10 = x5.blk._super;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:298)
  Val x11 = ((x9 + Val(1)) - x10);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:299)
  NondetRegStruct x12 = exec_NondetReg(ctx, inv(x11), LAYOUT_LOOKUP(layout2, invWithin));
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:300)
  EQZ(((x11 * x12._super) - Val(1)), "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:300)");
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:292)
  Val x13 = x5.rnd._super;
  NondetRegStruct24Array x14 = x5.arrD;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)
  BoundLayout<Reg> x15 =
      LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x3, arm1), _extra0), count), _super);
  Val6Array x16;
  if (to_size_t((Val(1) - x13))) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:303)
    ReadMemoryStruct x17 = exec_ReadMemory(ctx, x10, LAYOUT_LOOKUP(LAYOUT_LOOKUP(x3, arm0), mem));
    NondetRegStruct4Array x18 = x17._super;
    x16 = Val6Array{x18[0]._super, x18[1]._super, x18[2]._super, x18[3]._super, Val(1), x10};
  } else if (to_size_t(x13)) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)
    STORE(x15, Val(0));
    EQZ(LOAD(x15, 0), "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)");
    x16 = Val6Array{x14[0]._super, x14[1]._super, Val(0), Val(0), Val(0), (x10 + Val(1))};
  } else {
    assert(0 && "Reached unreachable mux arm");
  }
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:309)
  ToBits_16_Struct x19 = exec_ToBits_16_(ctx, x16[0], LAYOUT_LOOKUP(layout2, highW));
  NondetRegStruct16Array x20 = x19._super;
  Val x21 = x20[0]._super;
  Val x22 = x20[1]._super;
  Val x23 = x20[2]._super;
  Val x24 = x20[3]._super;
  Val x25 = x20[4]._super;
  Val x26 = x20[5]._super;
  Val x27 = x20[6]._super;
  Val x28 = x20[7]._super;
  Val x29 = x20[8]._super;
  Val x30 = x20[9]._super;
  Val x31 = x20[10]._super;
  Val x32 = x20[11]._super;
  Val x33 = x20[12]._super;
  Val x34 = x20[13]._super;
  Val x35 = x20[14]._super;
  Val x36 = x20[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:310)
  Val x37 = ((((((x21 + (x22 * Val(2))) + (x23 * Val(4))) + (x24 * Val(8))) + (x25 * Val(16))) +
              (x26 * Val(32))) +
             (x27 * Val(64)));
  Val x38 =
      ((((((x37 + (x28 * Val(128))) + (x29 * Val(256))) + (x30 * Val(512))) + (x31 * Val(1024))) +
        (x32 * Val(2048))) +
       (x33 * Val(4096)));
  EQZ(((((x38 + (x34 * Val(8192))) + (x35 * Val(16384))) + (x36 * Val(32768))) - x16[0]),
      "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:310)");
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:312)
  ToBits_16_Struct x39 = exec_ToBits_16_(ctx, x16[1], LAYOUT_LOOKUP(layout2, lowW));
  NondetRegStruct16Array x40 = x39._super;
  Val x41 = x40[0]._super;
  Val x42 = x40[1]._super;
  Val x43 = x40[2]._super;
  Val x44 = x40[3]._super;
  Val x45 = x40[4]._super;
  Val x46 = x40[5]._super;
  Val x47 = x40[6]._super;
  Val x48 = x40[7]._super;
  Val x49 = x40[8]._super;
  Val x50 = x40[9]._super;
  Val x51 = x40[10]._super;
  Val x52 = x40[11]._super;
  Val x53 = x40[12]._super;
  Val x54 = x40[13]._super;
  Val x55 = x40[14]._super;
  Val x56 = x40[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:313)
  Val x57 = ((((((x41 + (x42 * Val(2))) + (x43 * Val(4))) + (x44 * Val(8))) + (x45 * Val(16))) +
              (x46 * Val(32))) +
             (x47 * Val(64)));
  Val x58 =
      ((((((x57 + (x48 * Val(128))) + (x49 * Val(256))) + (x50 * Val(512))) + (x51 * Val(1024))) +
        (x52 * Val(2048))) +
       (x53 * Val(4096)));
  EQZ(((((x58 + (x54 * Val(8192))) + (x55 * Val(16384))) + (x56 * Val(32768))) - x16[1]),
      "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:313)");
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:320)
  NondetRegStruct22Array x59 = x5.arrA;
  NondetRegStruct22Array x60 = x5.arrB;
  NondetRegStruct22Array x61 = x6.arrA;
  NondetRegStruct22Array x62 = x6.arrB;
  NondetRegStruct22Array x63 = x7.arrA;
  NondetRegStruct22Array x64 = x7.arrB;
  NondetRegStruct22Array x65 = x8.arrA;
  NondetRegStruct22Array x66 = x8.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:321)
  NondetRegStruct22Array x67 = x5.arrC;
  NondetRegStruct22Array x68 = x6.arrC;
  NondetRegStruct22Array x69 = x7.arrC;
  NondetRegStruct22Array x70 = x8.arrC;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:320)
  ComputeAEStruct x71 = execComputeAE(
      ctx,
      Val32Array{x59[0]._super,  x59[1]._super,  x59[2]._super,  x59[3]._super,  x59[4]._super,
                 x59[5]._super,  x59[6]._super,  x59[7]._super,  x59[8]._super,  x59[9]._super,
                 x59[10]._super, x59[11]._super, x59[12]._super, x59[13]._super, x59[14]._super,
                 x59[15]._super, x59[16]._super, x59[17]._super, x59[18]._super, x59[19]._super,
                 x59[20]._super, x59[21]._super, x60[0]._super,  x60[1]._super,  x60[2]._super,
                 x60[3]._super,  x60[4]._super,  x60[5]._super,  x60[6]._super,  x60[7]._super,
                 x60[8]._super,  x60[9]._super},
      Val32Array{x61[0]._super,  x61[1]._super,  x61[2]._super,  x61[3]._super,  x61[4]._super,
                 x61[5]._super,  x61[6]._super,  x61[7]._super,  x61[8]._super,  x61[9]._super,
                 x61[10]._super, x61[11]._super, x61[12]._super, x61[13]._super, x61[14]._super,
                 x61[15]._super, x61[16]._super, x61[17]._super, x61[18]._super, x61[19]._super,
                 x61[20]._super, x61[21]._super, x62[0]._super,  x62[1]._super,  x62[2]._super,
                 x62[3]._super,  x62[4]._super,  x62[5]._super,  x62[6]._super,  x62[7]._super,
                 x62[8]._super,  x62[9]._super},
      Val32Array{x63[0]._super,  x63[1]._super,  x63[2]._super,  x63[3]._super,  x63[4]._super,
                 x63[5]._super,  x63[6]._super,  x63[7]._super,  x63[8]._super,  x63[9]._super,
                 x63[10]._super, x63[11]._super, x63[12]._super, x63[13]._super, x63[14]._super,
                 x63[15]._super, x63[16]._super, x63[17]._super, x63[18]._super, x63[19]._super,
                 x63[20]._super, x63[21]._super, x64[0]._super,  x64[1]._super,  x64[2]._super,
                 x64[3]._super,  x64[4]._super,  x64[5]._super,  x64[6]._super,  x64[7]._super,
                 x64[8]._super,  x64[9]._super},
      Val32Array{x65[0]._super,  x65[1]._super,  x65[2]._super,  x65[3]._super,  x65[4]._super,
                 x65[5]._super,  x65[6]._super,  x65[7]._super,  x65[8]._super,  x65[9]._super,
                 x65[10]._super, x65[11]._super, x65[12]._super, x65[13]._super, x65[14]._super,
                 x65[15]._super, x65[16]._super, x65[17]._super, x65[18]._super, x65[19]._super,
                 x65[20]._super, x65[21]._super, x66[0]._super,  x66[1]._super,  x66[2]._super,
                 x66[3]._super,  x66[4]._super,  x66[5]._super,  x66[6]._super,  x66[7]._super,
                 x66[8]._super,  x66[9]._super},
      Val32Array{x60[10]._super, x60[11]._super, x60[12]._super, x60[13]._super, x60[14]._super,
                 x60[15]._super, x60[16]._super, x60[17]._super, x60[18]._super, x60[19]._super,
                 x60[20]._super, x60[21]._super, x67[0]._super,  x67[1]._super,  x67[2]._super,
                 x67[3]._super,  x67[4]._super,  x67[5]._super,  x67[6]._super,  x67[7]._super,
                 x67[8]._super,  x67[9]._super,  x67[10]._super, x67[11]._super, x67[12]._super,
                 x67[13]._super, x67[14]._super, x67[15]._super, x67[16]._super, x67[17]._super,
                 x67[18]._super, x67[19]._super},
      Val32Array{x62[10]._super, x62[11]._super, x62[12]._super, x62[13]._super, x62[14]._super,
                 x62[15]._super, x62[16]._super, x62[17]._super, x62[18]._super, x62[19]._super,
                 x62[20]._super, x62[21]._super, x68[0]._super,  x68[1]._super,  x68[2]._super,
                 x68[3]._super,  x68[4]._super,  x68[5]._super,  x68[6]._super,  x68[7]._super,
                 x68[8]._super,  x68[9]._super,  x68[10]._super, x68[11]._super, x68[12]._super,
                 x68[13]._super, x68[14]._super, x68[15]._super, x68[16]._super, x68[17]._super,
                 x68[18]._super, x68[19]._super},
      Val32Array{x64[10]._super, x64[11]._super, x64[12]._super, x64[13]._super, x64[14]._super,
                 x64[15]._super, x64[16]._super, x64[17]._super, x64[18]._super, x64[19]._super,
                 x64[20]._super, x64[21]._super, x69[0]._super,  x69[1]._super,  x69[2]._super,
                 x69[3]._super,  x69[4]._super,  x69[5]._super,  x69[6]._super,  x69[7]._super,
                 x69[8]._super,  x69[9]._super,  x69[10]._super, x69[11]._super, x69[12]._super,
                 x69[13]._super, x69[14]._super, x69[15]._super, x69[16]._super, x69[17]._super,
                 x69[18]._super, x69[19]._super},
      Val32Array{x66[10]._super, x66[11]._super, x66[12]._super, x66[13]._super, x66[14]._super,
                 x66[15]._super, x66[16]._super, x66[17]._super, x66[18]._super, x66[19]._super,
                 x66[20]._super, x66[21]._super, x70[0]._super,  x70[1]._super,  x70[2]._super,
                 x70[3]._super,  x70[4]._super,  x70[5]._super,  x70[6]._super,  x70[7]._super,
                 x70[8]._super,  x70[9]._super,  x70[10]._super, x70[11]._super, x70[12]._super,
                 x70[13]._super, x70[14]._super, x70[15]._super, x70[16]._super, x70[17]._super,
                 x70[18]._super, x70[19]._super},
      Val32Array{x49, x50, x51, x52, x53, x54, x55, x56, x41, x42, x43, x44, x45, x46, x47, x48,
                 x29, x30, x31, x32, x33, x34, x35, x36, x21, x22, x23, x24, x25, x26, x27, x28},
      TwoShortsStruct{.low = Val(23297), .high = Val(4739)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x72 = x71.aOut;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:323)
  Concatenate_NondetReg__16__16_Struct x73 =
      execUnpackWithCarry(ctx, x72.low, x72.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:320)
  TwoShortsStruct x74 = x71.eOut;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:324)
  Concatenate_NondetReg__16__16_Struct x75 =
      execUnpackWithCarry(ctx, x74.low, x74.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:323)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x76 = x73._super;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:324)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x77 = x75._super;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:327)
  Val24Array x78 = Val24Array{x16[2], x16[3], Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:326)
  Val22Array x79 =
      Val22Array{x76[0]._super,  x76[1]._super,  x76[2]._super,  x76[3]._super,  x76[4]._super,
                 x76[5]._super,  x76[6]._super,  x76[7]._super,  x76[8]._super,  x76[9]._super,
                 x76[10]._super, x76[11]._super, x76[12]._super, x76[13]._super, x76[14]._super,
                 x76[15]._super, x76[16]._super, x76[17]._super, x76[18]._super, x76[19]._super,
                 x76[20]._super, x76[21]._super};
  Val22Array x80 =
      Val22Array{x76[22]._super, x76[23]._super, x76[24]._super, x76[25]._super, x76[26]._super,
                 x76[27]._super, x76[28]._super, x76[29]._super, x76[30]._super, x76[31]._super,
                 x77[0]._super,  x77[1]._super,  x77[2]._super,  x77[3]._super,  x77[4]._super,
                 x77[5]._super,  x77[6]._super,  x77[7]._super,  x77[8]._super,  x77[9]._super,
                 x77[10]._super, x77[11]._super};
  Val22Array x81 =
      Val22Array{x77[12]._super, x77[13]._super, x77[14]._super, x77[15]._super, x77[16]._super,
                 x77[17]._super, x77[18]._super, x77[19]._super, x77[20]._super, x77[21]._super,
                 x77[22]._super, x77[23]._super, x77[24]._super, x77[25]._super, x77[26]._super,
                 x77[27]._super, x77[28]._super, x77[29]._super, x77[30]._super, x77[31]._super,
                 Val(0),         Val(0)};
  Val22Array x82 = Val22Array{x49, x50, x51, x52, x53, x54, x55, x56, x41, x42, x43,
                              x44, x45, x46, x47, x48, x29, x30, x31, x32, x33, x34};
  Val22Array x83 = Val22Array{x35,    x36,    x21,    x22,    x23,    x24,    x25,    x26,
                              x27,    x28,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  if (to_size_t(Val(1))) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:329)
    RetTupleStruct x84 = exec_RetTuple(ctx,
                                       x79,
                                       x80,
                                       x81,
                                       x78,
                                       x82,
                                       x83,
                                       Val(10),
                                       Val(19),
                                       x16[4],
                                       x16[5],
                                       x9,
                                       LAYOUT_LOOKUP(x4, arm0));
  }
  if (to_size_t(Val(0))) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:331)
    RetTupleStruct x85 = exec_RetTuple(ctx,
                                       x79,
                                       x80,
                                       x81,
                                       x78,
                                       x82,
                                       x83,
                                       Val(0),
                                       Val(20),
                                       x16[4],
                                       x16[5],
                                       x9,
                                       LAYOUT_LOOKUP(x4, arm1));
  }
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:328)
  RetTupleStruct x86 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x4, _super));
  return x86;
}
RetTupleStruct execSha256load_10_(ExecContext& ctx,
                                  RetTupleStruct arg0,
                                  BoundLayout<RetTupleLayout> arg1,
                                  BoundLayout<Sha256load_10_Layout> layout2) {
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)
  BoundLayout<Sha256load_10_ValsLayout> x3 = LAYOUT_LOOKUP(layout2, vals);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:328)
  BoundLayout<Sha256load_10__SuperLayout> x4 = LAYOUT_LOOKUP(layout2, _super);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:292)
  RetTupleStruct x5 = back_RetTuple(ctx, 1, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:293)
  RetTupleStruct x6 = back_RetTuple(ctx, 2, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:294)
  RetTupleStruct x7 = back_RetTuple(ctx, 3, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:295)
  RetTupleStruct x8 = back_RetTuple(ctx, 4, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:292)
  Val x9 = x5.midx._super;
  Val x10 = x5.blk._super;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:298)
  Val x11 = ((x9 + Val(1)) - x10);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:299)
  NondetRegStruct x12 = exec_NondetReg(ctx, inv(x11), LAYOUT_LOOKUP(layout2, invWithin));
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:300)
  EQZ(((x11 * x12._super) - Val(1)), "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:300)");
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:292)
  Val x13 = x5.rnd._super;
  NondetRegStruct24Array x14 = x5.arrD;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)
  BoundLayout<Reg> x15 =
      LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x3, arm1), _extra0), count), _super);
  Val6Array x16;
  if (to_size_t((Val(1) - x13))) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:303)
    ReadMemoryStruct x17 = exec_ReadMemory(ctx, x10, LAYOUT_LOOKUP(LAYOUT_LOOKUP(x3, arm0), mem));
    NondetRegStruct4Array x18 = x17._super;
    x16 = Val6Array{x18[0]._super, x18[1]._super, x18[2]._super, x18[3]._super, Val(1), x10};
  } else if (to_size_t(x13)) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)
    STORE(x15, Val(0));
    EQZ(LOAD(x15, 0), "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)");
    x16 = Val6Array{x14[0]._super, x14[1]._super, Val(0), Val(0), Val(0), (x10 + Val(1))};
  } else {
    assert(0 && "Reached unreachable mux arm");
  }
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:309)
  ToBits_16_Struct x19 = exec_ToBits_16_(ctx, x16[0], LAYOUT_LOOKUP(layout2, highW));
  NondetRegStruct16Array x20 = x19._super;
  Val x21 = x20[0]._super;
  Val x22 = x20[1]._super;
  Val x23 = x20[2]._super;
  Val x24 = x20[3]._super;
  Val x25 = x20[4]._super;
  Val x26 = x20[5]._super;
  Val x27 = x20[6]._super;
  Val x28 = x20[7]._super;
  Val x29 = x20[8]._super;
  Val x30 = x20[9]._super;
  Val x31 = x20[10]._super;
  Val x32 = x20[11]._super;
  Val x33 = x20[12]._super;
  Val x34 = x20[13]._super;
  Val x35 = x20[14]._super;
  Val x36 = x20[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:310)
  Val x37 = ((((((x21 + (x22 * Val(2))) + (x23 * Val(4))) + (x24 * Val(8))) + (x25 * Val(16))) +
              (x26 * Val(32))) +
             (x27 * Val(64)));
  Val x38 =
      ((((((x37 + (x28 * Val(128))) + (x29 * Val(256))) + (x30 * Val(512))) + (x31 * Val(1024))) +
        (x32 * Val(2048))) +
       (x33 * Val(4096)));
  EQZ(((((x38 + (x34 * Val(8192))) + (x35 * Val(16384))) + (x36 * Val(32768))) - x16[0]),
      "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:310)");
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:312)
  ToBits_16_Struct x39 = exec_ToBits_16_(ctx, x16[1], LAYOUT_LOOKUP(layout2, lowW));
  NondetRegStruct16Array x40 = x39._super;
  Val x41 = x40[0]._super;
  Val x42 = x40[1]._super;
  Val x43 = x40[2]._super;
  Val x44 = x40[3]._super;
  Val x45 = x40[4]._super;
  Val x46 = x40[5]._super;
  Val x47 = x40[6]._super;
  Val x48 = x40[7]._super;
  Val x49 = x40[8]._super;
  Val x50 = x40[9]._super;
  Val x51 = x40[10]._super;
  Val x52 = x40[11]._super;
  Val x53 = x40[12]._super;
  Val x54 = x40[13]._super;
  Val x55 = x40[14]._super;
  Val x56 = x40[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:313)
  Val x57 = ((((((x41 + (x42 * Val(2))) + (x43 * Val(4))) + (x44 * Val(8))) + (x45 * Val(16))) +
              (x46 * Val(32))) +
             (x47 * Val(64)));
  Val x58 =
      ((((((x57 + (x48 * Val(128))) + (x49 * Val(256))) + (x50 * Val(512))) + (x51 * Val(1024))) +
        (x52 * Val(2048))) +
       (x53 * Val(4096)));
  EQZ(((((x58 + (x54 * Val(8192))) + (x55 * Val(16384))) + (x56 * Val(32768))) - x16[1]),
      "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:313)");
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:320)
  NondetRegStruct22Array x59 = x5.arrA;
  NondetRegStruct22Array x60 = x5.arrB;
  NondetRegStruct22Array x61 = x6.arrA;
  NondetRegStruct22Array x62 = x6.arrB;
  NondetRegStruct22Array x63 = x7.arrA;
  NondetRegStruct22Array x64 = x7.arrB;
  NondetRegStruct22Array x65 = x8.arrA;
  NondetRegStruct22Array x66 = x8.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:321)
  NondetRegStruct22Array x67 = x5.arrC;
  NondetRegStruct22Array x68 = x6.arrC;
  NondetRegStruct22Array x69 = x7.arrC;
  NondetRegStruct22Array x70 = x8.arrC;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:320)
  ComputeAEStruct x71 = execComputeAE(
      ctx,
      Val32Array{x59[0]._super,  x59[1]._super,  x59[2]._super,  x59[3]._super,  x59[4]._super,
                 x59[5]._super,  x59[6]._super,  x59[7]._super,  x59[8]._super,  x59[9]._super,
                 x59[10]._super, x59[11]._super, x59[12]._super, x59[13]._super, x59[14]._super,
                 x59[15]._super, x59[16]._super, x59[17]._super, x59[18]._super, x59[19]._super,
                 x59[20]._super, x59[21]._super, x60[0]._super,  x60[1]._super,  x60[2]._super,
                 x60[3]._super,  x60[4]._super,  x60[5]._super,  x60[6]._super,  x60[7]._super,
                 x60[8]._super,  x60[9]._super},
      Val32Array{x61[0]._super,  x61[1]._super,  x61[2]._super,  x61[3]._super,  x61[4]._super,
                 x61[5]._super,  x61[6]._super,  x61[7]._super,  x61[8]._super,  x61[9]._super,
                 x61[10]._super, x61[11]._super, x61[12]._super, x61[13]._super, x61[14]._super,
                 x61[15]._super, x61[16]._super, x61[17]._super, x61[18]._super, x61[19]._super,
                 x61[20]._super, x61[21]._super, x62[0]._super,  x62[1]._super,  x62[2]._super,
                 x62[3]._super,  x62[4]._super,  x62[5]._super,  x62[6]._super,  x62[7]._super,
                 x62[8]._super,  x62[9]._super},
      Val32Array{x63[0]._super,  x63[1]._super,  x63[2]._super,  x63[3]._super,  x63[4]._super,
                 x63[5]._super,  x63[6]._super,  x63[7]._super,  x63[8]._super,  x63[9]._super,
                 x63[10]._super, x63[11]._super, x63[12]._super, x63[13]._super, x63[14]._super,
                 x63[15]._super, x63[16]._super, x63[17]._super, x63[18]._super, x63[19]._super,
                 x63[20]._super, x63[21]._super, x64[0]._super,  x64[1]._super,  x64[2]._super,
                 x64[3]._super,  x64[4]._super,  x64[5]._super,  x64[6]._super,  x64[7]._super,
                 x64[8]._super,  x64[9]._super},
      Val32Array{x65[0]._super,  x65[1]._super,  x65[2]._super,  x65[3]._super,  x65[4]._super,
                 x65[5]._super,  x65[6]._super,  x65[7]._super,  x65[8]._super,  x65[9]._super,
                 x65[10]._super, x65[11]._super, x65[12]._super, x65[13]._super, x65[14]._super,
                 x65[15]._super, x65[16]._super, x65[17]._super, x65[18]._super, x65[19]._super,
                 x65[20]._super, x65[21]._super, x66[0]._super,  x66[1]._super,  x66[2]._super,
                 x66[3]._super,  x66[4]._super,  x66[5]._super,  x66[6]._super,  x66[7]._super,
                 x66[8]._super,  x66[9]._super},
      Val32Array{x60[10]._super, x60[11]._super, x60[12]._super, x60[13]._super, x60[14]._super,
                 x60[15]._super, x60[16]._super, x60[17]._super, x60[18]._super, x60[19]._super,
                 x60[20]._super, x60[21]._super, x67[0]._super,  x67[1]._super,  x67[2]._super,
                 x67[3]._super,  x67[4]._super,  x67[5]._super,  x67[6]._super,  x67[7]._super,
                 x67[8]._super,  x67[9]._super,  x67[10]._super, x67[11]._super, x67[12]._super,
                 x67[13]._super, x67[14]._super, x67[15]._super, x67[16]._super, x67[17]._super,
                 x67[18]._super, x67[19]._super},
      Val32Array{x62[10]._super, x62[11]._super, x62[12]._super, x62[13]._super, x62[14]._super,
                 x62[15]._super, x62[16]._super, x62[17]._super, x62[18]._super, x62[19]._super,
                 x62[20]._super, x62[21]._super, x68[0]._super,  x68[1]._super,  x68[2]._super,
                 x68[3]._super,  x68[4]._super,  x68[5]._super,  x68[6]._super,  x68[7]._super,
                 x68[8]._super,  x68[9]._super,  x68[10]._super, x68[11]._super, x68[12]._super,
                 x68[13]._super, x68[14]._super, x68[15]._super, x68[16]._super, x68[17]._super,
                 x68[18]._super, x68[19]._super},
      Val32Array{x64[10]._super, x64[11]._super, x64[12]._super, x64[13]._super, x64[14]._super,
                 x64[15]._super, x64[16]._super, x64[17]._super, x64[18]._super, x64[19]._super,
                 x64[20]._super, x64[21]._super, x69[0]._super,  x69[1]._super,  x69[2]._super,
                 x69[3]._super,  x69[4]._super,  x69[5]._super,  x69[6]._super,  x69[7]._super,
                 x69[8]._super,  x69[9]._super,  x69[10]._super, x69[11]._super, x69[12]._super,
                 x69[13]._super, x69[14]._super, x69[15]._super, x69[16]._super, x69[17]._super,
                 x69[18]._super, x69[19]._super},
      Val32Array{x66[10]._super, x66[11]._super, x66[12]._super, x66[13]._super, x66[14]._super,
                 x66[15]._super, x66[16]._super, x66[17]._super, x66[18]._super, x66[19]._super,
                 x66[20]._super, x66[21]._super, x70[0]._super,  x70[1]._super,  x70[2]._super,
                 x70[3]._super,  x70[4]._super,  x70[5]._super,  x70[6]._super,  x70[7]._super,
                 x70[8]._super,  x70[9]._super,  x70[10]._super, x70[11]._super, x70[12]._super,
                 x70[13]._super, x70[14]._super, x70[15]._super, x70[16]._super, x70[17]._super,
                 x70[18]._super, x70[19]._super},
      Val32Array{x49, x50, x51, x52, x53, x54, x55, x56, x41, x42, x43, x44, x45, x46, x47, x48,
                 x29, x30, x31, x32, x33, x34, x35, x36, x21, x22, x23, x24, x25, x26, x27, x28},
      TwoShortsStruct{.low = Val(34238), .high = Val(9265)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x72 = x71.aOut;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:323)
  Concatenate_NondetReg__16__16_Struct x73 =
      execUnpackWithCarry(ctx, x72.low, x72.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:320)
  TwoShortsStruct x74 = x71.eOut;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:324)
  Concatenate_NondetReg__16__16_Struct x75 =
      execUnpackWithCarry(ctx, x74.low, x74.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:323)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x76 = x73._super;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:324)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x77 = x75._super;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:327)
  Val24Array x78 = Val24Array{x16[2], x16[3], Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:326)
  Val22Array x79 =
      Val22Array{x76[0]._super,  x76[1]._super,  x76[2]._super,  x76[3]._super,  x76[4]._super,
                 x76[5]._super,  x76[6]._super,  x76[7]._super,  x76[8]._super,  x76[9]._super,
                 x76[10]._super, x76[11]._super, x76[12]._super, x76[13]._super, x76[14]._super,
                 x76[15]._super, x76[16]._super, x76[17]._super, x76[18]._super, x76[19]._super,
                 x76[20]._super, x76[21]._super};
  Val22Array x80 =
      Val22Array{x76[22]._super, x76[23]._super, x76[24]._super, x76[25]._super, x76[26]._super,
                 x76[27]._super, x76[28]._super, x76[29]._super, x76[30]._super, x76[31]._super,
                 x77[0]._super,  x77[1]._super,  x77[2]._super,  x77[3]._super,  x77[4]._super,
                 x77[5]._super,  x77[6]._super,  x77[7]._super,  x77[8]._super,  x77[9]._super,
                 x77[10]._super, x77[11]._super};
  Val22Array x81 =
      Val22Array{x77[12]._super, x77[13]._super, x77[14]._super, x77[15]._super, x77[16]._super,
                 x77[17]._super, x77[18]._super, x77[19]._super, x77[20]._super, x77[21]._super,
                 x77[22]._super, x77[23]._super, x77[24]._super, x77[25]._super, x77[26]._super,
                 x77[27]._super, x77[28]._super, x77[29]._super, x77[30]._super, x77[31]._super,
                 Val(0),         Val(0)};
  Val22Array x82 = Val22Array{x49, x50, x51, x52, x53, x54, x55, x56, x41, x42, x43,
                              x44, x45, x46, x47, x48, x29, x30, x31, x32, x33, x34};
  Val22Array x83 = Val22Array{x35,    x36,    x21,    x22,    x23,    x24,    x25,    x26,
                              x27,    x28,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  if (to_size_t(Val(1))) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:329)
    RetTupleStruct x84 = exec_RetTuple(ctx,
                                       x79,
                                       x80,
                                       x81,
                                       x78,
                                       x82,
                                       x83,
                                       Val(11),
                                       Val(19),
                                       x16[4],
                                       x16[5],
                                       x9,
                                       LAYOUT_LOOKUP(x4, arm0));
  }
  if (to_size_t(Val(0))) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:331)
    RetTupleStruct x85 = exec_RetTuple(ctx,
                                       x79,
                                       x80,
                                       x81,
                                       x78,
                                       x82,
                                       x83,
                                       Val(0),
                                       Val(20),
                                       x16[4],
                                       x16[5],
                                       x9,
                                       LAYOUT_LOOKUP(x4, arm1));
  }
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:328)
  RetTupleStruct x86 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x4, _super));
  return x86;
}
RetTupleStruct execSha256load_11_(ExecContext& ctx,
                                  RetTupleStruct arg0,
                                  BoundLayout<RetTupleLayout> arg1,
                                  BoundLayout<Sha256load_11_Layout> layout2) {
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)
  BoundLayout<Sha256load_11_ValsLayout> x3 = LAYOUT_LOOKUP(layout2, vals);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:328)
  BoundLayout<Sha256load_11__SuperLayout> x4 = LAYOUT_LOOKUP(layout2, _super);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:292)
  RetTupleStruct x5 = back_RetTuple(ctx, 1, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:293)
  RetTupleStruct x6 = back_RetTuple(ctx, 2, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:294)
  RetTupleStruct x7 = back_RetTuple(ctx, 3, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:295)
  RetTupleStruct x8 = back_RetTuple(ctx, 4, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:292)
  Val x9 = x5.midx._super;
  Val x10 = x5.blk._super;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:298)
  Val x11 = ((x9 + Val(1)) - x10);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:299)
  NondetRegStruct x12 = exec_NondetReg(ctx, inv(x11), LAYOUT_LOOKUP(layout2, invWithin));
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:300)
  EQZ(((x11 * x12._super) - Val(1)), "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:300)");
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:292)
  Val x13 = x5.rnd._super;
  NondetRegStruct24Array x14 = x5.arrD;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)
  BoundLayout<Reg> x15 =
      LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x3, arm1), _extra0), count), _super);
  Val6Array x16;
  if (to_size_t((Val(1) - x13))) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:303)
    ReadMemoryStruct x17 = exec_ReadMemory(ctx, x10, LAYOUT_LOOKUP(LAYOUT_LOOKUP(x3, arm0), mem));
    NondetRegStruct4Array x18 = x17._super;
    x16 = Val6Array{x18[0]._super, x18[1]._super, x18[2]._super, x18[3]._super, Val(1), x10};
  } else if (to_size_t(x13)) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)
    STORE(x15, Val(0));
    EQZ(LOAD(x15, 0), "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)");
    x16 = Val6Array{x14[0]._super, x14[1]._super, Val(0), Val(0), Val(0), (x10 + Val(1))};
  } else {
    assert(0 && "Reached unreachable mux arm");
  }
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:309)
  ToBits_16_Struct x19 = exec_ToBits_16_(ctx, x16[0], LAYOUT_LOOKUP(layout2, highW));
  NondetRegStruct16Array x20 = x19._super;
  Val x21 = x20[0]._super;
  Val x22 = x20[1]._super;
  Val x23 = x20[2]._super;
  Val x24 = x20[3]._super;
  Val x25 = x20[4]._super;
  Val x26 = x20[5]._super;
  Val x27 = x20[6]._super;
  Val x28 = x20[7]._super;
  Val x29 = x20[8]._super;
  Val x30 = x20[9]._super;
  Val x31 = x20[10]._super;
  Val x32 = x20[11]._super;
  Val x33 = x20[12]._super;
  Val x34 = x20[13]._super;
  Val x35 = x20[14]._super;
  Val x36 = x20[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:310)
  Val x37 = ((((((x21 + (x22 * Val(2))) + (x23 * Val(4))) + (x24 * Val(8))) + (x25 * Val(16))) +
              (x26 * Val(32))) +
             (x27 * Val(64)));
  Val x38 =
      ((((((x37 + (x28 * Val(128))) + (x29 * Val(256))) + (x30 * Val(512))) + (x31 * Val(1024))) +
        (x32 * Val(2048))) +
       (x33 * Val(4096)));
  EQZ(((((x38 + (x34 * Val(8192))) + (x35 * Val(16384))) + (x36 * Val(32768))) - x16[0]),
      "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:310)");
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:312)
  ToBits_16_Struct x39 = exec_ToBits_16_(ctx, x16[1], LAYOUT_LOOKUP(layout2, lowW));
  NondetRegStruct16Array x40 = x39._super;
  Val x41 = x40[0]._super;
  Val x42 = x40[1]._super;
  Val x43 = x40[2]._super;
  Val x44 = x40[3]._super;
  Val x45 = x40[4]._super;
  Val x46 = x40[5]._super;
  Val x47 = x40[6]._super;
  Val x48 = x40[7]._super;
  Val x49 = x40[8]._super;
  Val x50 = x40[9]._super;
  Val x51 = x40[10]._super;
  Val x52 = x40[11]._super;
  Val x53 = x40[12]._super;
  Val x54 = x40[13]._super;
  Val x55 = x40[14]._super;
  Val x56 = x40[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:313)
  Val x57 = ((((((x41 + (x42 * Val(2))) + (x43 * Val(4))) + (x44 * Val(8))) + (x45 * Val(16))) +
              (x46 * Val(32))) +
             (x47 * Val(64)));
  Val x58 =
      ((((((x57 + (x48 * Val(128))) + (x49 * Val(256))) + (x50 * Val(512))) + (x51 * Val(1024))) +
        (x52 * Val(2048))) +
       (x53 * Val(4096)));
  EQZ(((((x58 + (x54 * Val(8192))) + (x55 * Val(16384))) + (x56 * Val(32768))) - x16[1]),
      "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:313)");
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:320)
  NondetRegStruct22Array x59 = x5.arrA;
  NondetRegStruct22Array x60 = x5.arrB;
  NondetRegStruct22Array x61 = x6.arrA;
  NondetRegStruct22Array x62 = x6.arrB;
  NondetRegStruct22Array x63 = x7.arrA;
  NondetRegStruct22Array x64 = x7.arrB;
  NondetRegStruct22Array x65 = x8.arrA;
  NondetRegStruct22Array x66 = x8.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:321)
  NondetRegStruct22Array x67 = x5.arrC;
  NondetRegStruct22Array x68 = x6.arrC;
  NondetRegStruct22Array x69 = x7.arrC;
  NondetRegStruct22Array x70 = x8.arrC;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:320)
  ComputeAEStruct x71 = execComputeAE(
      ctx,
      Val32Array{x59[0]._super,  x59[1]._super,  x59[2]._super,  x59[3]._super,  x59[4]._super,
                 x59[5]._super,  x59[6]._super,  x59[7]._super,  x59[8]._super,  x59[9]._super,
                 x59[10]._super, x59[11]._super, x59[12]._super, x59[13]._super, x59[14]._super,
                 x59[15]._super, x59[16]._super, x59[17]._super, x59[18]._super, x59[19]._super,
                 x59[20]._super, x59[21]._super, x60[0]._super,  x60[1]._super,  x60[2]._super,
                 x60[3]._super,  x60[4]._super,  x60[5]._super,  x60[6]._super,  x60[7]._super,
                 x60[8]._super,  x60[9]._super},
      Val32Array{x61[0]._super,  x61[1]._super,  x61[2]._super,  x61[3]._super,  x61[4]._super,
                 x61[5]._super,  x61[6]._super,  x61[7]._super,  x61[8]._super,  x61[9]._super,
                 x61[10]._super, x61[11]._super, x61[12]._super, x61[13]._super, x61[14]._super,
                 x61[15]._super, x61[16]._super, x61[17]._super, x61[18]._super, x61[19]._super,
                 x61[20]._super, x61[21]._super, x62[0]._super,  x62[1]._super,  x62[2]._super,
                 x62[3]._super,  x62[4]._super,  x62[5]._super,  x62[6]._super,  x62[7]._super,
                 x62[8]._super,  x62[9]._super},
      Val32Array{x63[0]._super,  x63[1]._super,  x63[2]._super,  x63[3]._super,  x63[4]._super,
                 x63[5]._super,  x63[6]._super,  x63[7]._super,  x63[8]._super,  x63[9]._super,
                 x63[10]._super, x63[11]._super, x63[12]._super, x63[13]._super, x63[14]._super,
                 x63[15]._super, x63[16]._super, x63[17]._super, x63[18]._super, x63[19]._super,
                 x63[20]._super, x63[21]._super, x64[0]._super,  x64[1]._super,  x64[2]._super,
                 x64[3]._super,  x64[4]._super,  x64[5]._super,  x64[6]._super,  x64[7]._super,
                 x64[8]._super,  x64[9]._super},
      Val32Array{x65[0]._super,  x65[1]._super,  x65[2]._super,  x65[3]._super,  x65[4]._super,
                 x65[5]._super,  x65[6]._super,  x65[7]._super,  x65[8]._super,  x65[9]._super,
                 x65[10]._super, x65[11]._super, x65[12]._super, x65[13]._super, x65[14]._super,
                 x65[15]._super, x65[16]._super, x65[17]._super, x65[18]._super, x65[19]._super,
                 x65[20]._super, x65[21]._super, x66[0]._super,  x66[1]._super,  x66[2]._super,
                 x66[3]._super,  x66[4]._super,  x66[5]._super,  x66[6]._super,  x66[7]._super,
                 x66[8]._super,  x66[9]._super},
      Val32Array{x60[10]._super, x60[11]._super, x60[12]._super, x60[13]._super, x60[14]._super,
                 x60[15]._super, x60[16]._super, x60[17]._super, x60[18]._super, x60[19]._super,
                 x60[20]._super, x60[21]._super, x67[0]._super,  x67[1]._super,  x67[2]._super,
                 x67[3]._super,  x67[4]._super,  x67[5]._super,  x67[6]._super,  x67[7]._super,
                 x67[8]._super,  x67[9]._super,  x67[10]._super, x67[11]._super, x67[12]._super,
                 x67[13]._super, x67[14]._super, x67[15]._super, x67[16]._super, x67[17]._super,
                 x67[18]._super, x67[19]._super},
      Val32Array{x62[10]._super, x62[11]._super, x62[12]._super, x62[13]._super, x62[14]._super,
                 x62[15]._super, x62[16]._super, x62[17]._super, x62[18]._super, x62[19]._super,
                 x62[20]._super, x62[21]._super, x68[0]._super,  x68[1]._super,  x68[2]._super,
                 x68[3]._super,  x68[4]._super,  x68[5]._super,  x68[6]._super,  x68[7]._super,
                 x68[8]._super,  x68[9]._super,  x68[10]._super, x68[11]._super, x68[12]._super,
                 x68[13]._super, x68[14]._super, x68[15]._super, x68[16]._super, x68[17]._super,
                 x68[18]._super, x68[19]._super},
      Val32Array{x64[10]._super, x64[11]._super, x64[12]._super, x64[13]._super, x64[14]._super,
                 x64[15]._super, x64[16]._super, x64[17]._super, x64[18]._super, x64[19]._super,
                 x64[20]._super, x64[21]._super, x69[0]._super,  x69[1]._super,  x69[2]._super,
                 x69[3]._super,  x69[4]._super,  x69[5]._super,  x69[6]._super,  x69[7]._super,
                 x69[8]._super,  x69[9]._super,  x69[10]._super, x69[11]._super, x69[12]._super,
                 x69[13]._super, x69[14]._super, x69[15]._super, x69[16]._super, x69[17]._super,
                 x69[18]._super, x69[19]._super},
      Val32Array{x66[10]._super, x66[11]._super, x66[12]._super, x66[13]._super, x66[14]._super,
                 x66[15]._super, x66[16]._super, x66[17]._super, x66[18]._super, x66[19]._super,
                 x66[20]._super, x66[21]._super, x70[0]._super,  x70[1]._super,  x70[2]._super,
                 x70[3]._super,  x70[4]._super,  x70[5]._super,  x70[6]._super,  x70[7]._super,
                 x70[8]._super,  x70[9]._super,  x70[10]._super, x70[11]._super, x70[12]._super,
                 x70[13]._super, x70[14]._super, x70[15]._super, x70[16]._super, x70[17]._super,
                 x70[18]._super, x70[19]._super},
      Val32Array{x49, x50, x51, x52, x53, x54, x55, x56, x41, x42, x43, x44, x45, x46, x47, x48,
                 x29, x30, x31, x32, x33, x34, x35, x36, x21, x22, x23, x24, x25, x26, x27, x28},
      TwoShortsStruct{.low = Val(32195), .high = Val(21772)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x72 = x71.aOut;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:323)
  Concatenate_NondetReg__16__16_Struct x73 =
      execUnpackWithCarry(ctx, x72.low, x72.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:320)
  TwoShortsStruct x74 = x71.eOut;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:324)
  Concatenate_NondetReg__16__16_Struct x75 =
      execUnpackWithCarry(ctx, x74.low, x74.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:323)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x76 = x73._super;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:324)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x77 = x75._super;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:327)
  Val24Array x78 = Val24Array{x16[2], x16[3], Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:326)
  Val22Array x79 =
      Val22Array{x76[0]._super,  x76[1]._super,  x76[2]._super,  x76[3]._super,  x76[4]._super,
                 x76[5]._super,  x76[6]._super,  x76[7]._super,  x76[8]._super,  x76[9]._super,
                 x76[10]._super, x76[11]._super, x76[12]._super, x76[13]._super, x76[14]._super,
                 x76[15]._super, x76[16]._super, x76[17]._super, x76[18]._super, x76[19]._super,
                 x76[20]._super, x76[21]._super};
  Val22Array x80 =
      Val22Array{x76[22]._super, x76[23]._super, x76[24]._super, x76[25]._super, x76[26]._super,
                 x76[27]._super, x76[28]._super, x76[29]._super, x76[30]._super, x76[31]._super,
                 x77[0]._super,  x77[1]._super,  x77[2]._super,  x77[3]._super,  x77[4]._super,
                 x77[5]._super,  x77[6]._super,  x77[7]._super,  x77[8]._super,  x77[9]._super,
                 x77[10]._super, x77[11]._super};
  Val22Array x81 =
      Val22Array{x77[12]._super, x77[13]._super, x77[14]._super, x77[15]._super, x77[16]._super,
                 x77[17]._super, x77[18]._super, x77[19]._super, x77[20]._super, x77[21]._super,
                 x77[22]._super, x77[23]._super, x77[24]._super, x77[25]._super, x77[26]._super,
                 x77[27]._super, x77[28]._super, x77[29]._super, x77[30]._super, x77[31]._super,
                 Val(0),         Val(0)};
  Val22Array x82 = Val22Array{x49, x50, x51, x52, x53, x54, x55, x56, x41, x42, x43,
                              x44, x45, x46, x47, x48, x29, x30, x31, x32, x33, x34};
  Val22Array x83 = Val22Array{x35,    x36,    x21,    x22,    x23,    x24,    x25,    x26,
                              x27,    x28,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  if (to_size_t(Val(1))) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:329)
    RetTupleStruct x84 = exec_RetTuple(ctx,
                                       x79,
                                       x80,
                                       x81,
                                       x78,
                                       x82,
                                       x83,
                                       Val(12),
                                       Val(19),
                                       x16[4],
                                       x16[5],
                                       x9,
                                       LAYOUT_LOOKUP(x4, arm0));
  }
  if (to_size_t(Val(0))) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:331)
    RetTupleStruct x85 = exec_RetTuple(ctx,
                                       x79,
                                       x80,
                                       x81,
                                       x78,
                                       x82,
                                       x83,
                                       Val(0),
                                       Val(20),
                                       x16[4],
                                       x16[5],
                                       x9,
                                       LAYOUT_LOOKUP(x4, arm1));
  }
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:328)
  RetTupleStruct x86 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x4, _super));
  return x86;
}
RetTupleStruct execSha256load_12_(ExecContext& ctx,
                                  RetTupleStruct arg0,
                                  BoundLayout<RetTupleLayout> arg1,
                                  BoundLayout<Sha256load_12_Layout> layout2) {
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)
  BoundLayout<Sha256load_12_ValsLayout> x3 = LAYOUT_LOOKUP(layout2, vals);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:328)
  BoundLayout<Sha256load_12__SuperLayout> x4 = LAYOUT_LOOKUP(layout2, _super);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:292)
  RetTupleStruct x5 = back_RetTuple(ctx, 1, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:293)
  RetTupleStruct x6 = back_RetTuple(ctx, 2, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:294)
  RetTupleStruct x7 = back_RetTuple(ctx, 3, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:295)
  RetTupleStruct x8 = back_RetTuple(ctx, 4, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:292)
  Val x9 = x5.midx._super;
  Val x10 = x5.blk._super;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:298)
  Val x11 = ((x9 + Val(1)) - x10);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:299)
  NondetRegStruct x12 = exec_NondetReg(ctx, inv(x11), LAYOUT_LOOKUP(layout2, invWithin));
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:300)
  EQZ(((x11 * x12._super) - Val(1)), "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:300)");
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:292)
  Val x13 = x5.rnd._super;
  NondetRegStruct24Array x14 = x5.arrD;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)
  BoundLayout<Reg> x15 =
      LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x3, arm1), _extra0), count), _super);
  Val6Array x16;
  if (to_size_t((Val(1) - x13))) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:303)
    ReadMemoryStruct x17 = exec_ReadMemory(ctx, x10, LAYOUT_LOOKUP(LAYOUT_LOOKUP(x3, arm0), mem));
    NondetRegStruct4Array x18 = x17._super;
    x16 = Val6Array{x18[0]._super, x18[1]._super, x18[2]._super, x18[3]._super, Val(1), x10};
  } else if (to_size_t(x13)) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)
    STORE(x15, Val(0));
    EQZ(LOAD(x15, 0), "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)");
    x16 = Val6Array{x14[0]._super, x14[1]._super, Val(0), Val(0), Val(0), (x10 + Val(1))};
  } else {
    assert(0 && "Reached unreachable mux arm");
  }
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:309)
  ToBits_16_Struct x19 = exec_ToBits_16_(ctx, x16[0], LAYOUT_LOOKUP(layout2, highW));
  NondetRegStruct16Array x20 = x19._super;
  Val x21 = x20[0]._super;
  Val x22 = x20[1]._super;
  Val x23 = x20[2]._super;
  Val x24 = x20[3]._super;
  Val x25 = x20[4]._super;
  Val x26 = x20[5]._super;
  Val x27 = x20[6]._super;
  Val x28 = x20[7]._super;
  Val x29 = x20[8]._super;
  Val x30 = x20[9]._super;
  Val x31 = x20[10]._super;
  Val x32 = x20[11]._super;
  Val x33 = x20[12]._super;
  Val x34 = x20[13]._super;
  Val x35 = x20[14]._super;
  Val x36 = x20[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:310)
  Val x37 = ((((((x21 + (x22 * Val(2))) + (x23 * Val(4))) + (x24 * Val(8))) + (x25 * Val(16))) +
              (x26 * Val(32))) +
             (x27 * Val(64)));
  Val x38 =
      ((((((x37 + (x28 * Val(128))) + (x29 * Val(256))) + (x30 * Val(512))) + (x31 * Val(1024))) +
        (x32 * Val(2048))) +
       (x33 * Val(4096)));
  EQZ(((((x38 + (x34 * Val(8192))) + (x35 * Val(16384))) + (x36 * Val(32768))) - x16[0]),
      "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:310)");
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:312)
  ToBits_16_Struct x39 = exec_ToBits_16_(ctx, x16[1], LAYOUT_LOOKUP(layout2, lowW));
  NondetRegStruct16Array x40 = x39._super;
  Val x41 = x40[0]._super;
  Val x42 = x40[1]._super;
  Val x43 = x40[2]._super;
  Val x44 = x40[3]._super;
  Val x45 = x40[4]._super;
  Val x46 = x40[5]._super;
  Val x47 = x40[6]._super;
  Val x48 = x40[7]._super;
  Val x49 = x40[8]._super;
  Val x50 = x40[9]._super;
  Val x51 = x40[10]._super;
  Val x52 = x40[11]._super;
  Val x53 = x40[12]._super;
  Val x54 = x40[13]._super;
  Val x55 = x40[14]._super;
  Val x56 = x40[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:313)
  Val x57 = ((((((x41 + (x42 * Val(2))) + (x43 * Val(4))) + (x44 * Val(8))) + (x45 * Val(16))) +
              (x46 * Val(32))) +
             (x47 * Val(64)));
  Val x58 =
      ((((((x57 + (x48 * Val(128))) + (x49 * Val(256))) + (x50 * Val(512))) + (x51 * Val(1024))) +
        (x52 * Val(2048))) +
       (x53 * Val(4096)));
  EQZ(((((x58 + (x54 * Val(8192))) + (x55 * Val(16384))) + (x56 * Val(32768))) - x16[1]),
      "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:313)");
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:320)
  NondetRegStruct22Array x59 = x5.arrA;
  NondetRegStruct22Array x60 = x5.arrB;
  NondetRegStruct22Array x61 = x6.arrA;
  NondetRegStruct22Array x62 = x6.arrB;
  NondetRegStruct22Array x63 = x7.arrA;
  NondetRegStruct22Array x64 = x7.arrB;
  NondetRegStruct22Array x65 = x8.arrA;
  NondetRegStruct22Array x66 = x8.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:321)
  NondetRegStruct22Array x67 = x5.arrC;
  NondetRegStruct22Array x68 = x6.arrC;
  NondetRegStruct22Array x69 = x7.arrC;
  NondetRegStruct22Array x70 = x8.arrC;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:320)
  ComputeAEStruct x71 = execComputeAE(
      ctx,
      Val32Array{x59[0]._super,  x59[1]._super,  x59[2]._super,  x59[3]._super,  x59[4]._super,
                 x59[5]._super,  x59[6]._super,  x59[7]._super,  x59[8]._super,  x59[9]._super,
                 x59[10]._super, x59[11]._super, x59[12]._super, x59[13]._super, x59[14]._super,
                 x59[15]._super, x59[16]._super, x59[17]._super, x59[18]._super, x59[19]._super,
                 x59[20]._super, x59[21]._super, x60[0]._super,  x60[1]._super,  x60[2]._super,
                 x60[3]._super,  x60[4]._super,  x60[5]._super,  x60[6]._super,  x60[7]._super,
                 x60[8]._super,  x60[9]._super},
      Val32Array{x61[0]._super,  x61[1]._super,  x61[2]._super,  x61[3]._super,  x61[4]._super,
                 x61[5]._super,  x61[6]._super,  x61[7]._super,  x61[8]._super,  x61[9]._super,
                 x61[10]._super, x61[11]._super, x61[12]._super, x61[13]._super, x61[14]._super,
                 x61[15]._super, x61[16]._super, x61[17]._super, x61[18]._super, x61[19]._super,
                 x61[20]._super, x61[21]._super, x62[0]._super,  x62[1]._super,  x62[2]._super,
                 x62[3]._super,  x62[4]._super,  x62[5]._super,  x62[6]._super,  x62[7]._super,
                 x62[8]._super,  x62[9]._super},
      Val32Array{x63[0]._super,  x63[1]._super,  x63[2]._super,  x63[3]._super,  x63[4]._super,
                 x63[5]._super,  x63[6]._super,  x63[7]._super,  x63[8]._super,  x63[9]._super,
                 x63[10]._super, x63[11]._super, x63[12]._super, x63[13]._super, x63[14]._super,
                 x63[15]._super, x63[16]._super, x63[17]._super, x63[18]._super, x63[19]._super,
                 x63[20]._super, x63[21]._super, x64[0]._super,  x64[1]._super,  x64[2]._super,
                 x64[3]._super,  x64[4]._super,  x64[5]._super,  x64[6]._super,  x64[7]._super,
                 x64[8]._super,  x64[9]._super},
      Val32Array{x65[0]._super,  x65[1]._super,  x65[2]._super,  x65[3]._super,  x65[4]._super,
                 x65[5]._super,  x65[6]._super,  x65[7]._super,  x65[8]._super,  x65[9]._super,
                 x65[10]._super, x65[11]._super, x65[12]._super, x65[13]._super, x65[14]._super,
                 x65[15]._super, x65[16]._super, x65[17]._super, x65[18]._super, x65[19]._super,
                 x65[20]._super, x65[21]._super, x66[0]._super,  x66[1]._super,  x66[2]._super,
                 x66[3]._super,  x66[4]._super,  x66[5]._super,  x66[6]._super,  x66[7]._super,
                 x66[8]._super,  x66[9]._super},
      Val32Array{x60[10]._super, x60[11]._super, x60[12]._super, x60[13]._super, x60[14]._super,
                 x60[15]._super, x60[16]._super, x60[17]._super, x60[18]._super, x60[19]._super,
                 x60[20]._super, x60[21]._super, x67[0]._super,  x67[1]._super,  x67[2]._super,
                 x67[3]._super,  x67[4]._super,  x67[5]._super,  x67[6]._super,  x67[7]._super,
                 x67[8]._super,  x67[9]._super,  x67[10]._super, x67[11]._super, x67[12]._super,
                 x67[13]._super, x67[14]._super, x67[15]._super, x67[16]._super, x67[17]._super,
                 x67[18]._super, x67[19]._super},
      Val32Array{x62[10]._super, x62[11]._super, x62[12]._super, x62[13]._super, x62[14]._super,
                 x62[15]._super, x62[16]._super, x62[17]._super, x62[18]._super, x62[19]._super,
                 x62[20]._super, x62[21]._super, x68[0]._super,  x68[1]._super,  x68[2]._super,
                 x68[3]._super,  x68[4]._super,  x68[5]._super,  x68[6]._super,  x68[7]._super,
                 x68[8]._super,  x68[9]._super,  x68[10]._super, x68[11]._super, x68[12]._super,
                 x68[13]._super, x68[14]._super, x68[15]._super, x68[16]._super, x68[17]._super,
                 x68[18]._super, x68[19]._super},
      Val32Array{x64[10]._super, x64[11]._super, x64[12]._super, x64[13]._super, x64[14]._super,
                 x64[15]._super, x64[16]._super, x64[17]._super, x64[18]._super, x64[19]._super,
                 x64[20]._super, x64[21]._super, x69[0]._super,  x69[1]._super,  x69[2]._super,
                 x69[3]._super,  x69[4]._super,  x69[5]._super,  x69[6]._super,  x69[7]._super,
                 x69[8]._super,  x69[9]._super,  x69[10]._super, x69[11]._super, x69[12]._super,
                 x69[13]._super, x69[14]._super, x69[15]._super, x69[16]._super, x69[17]._super,
                 x69[18]._super, x69[19]._super},
      Val32Array{x66[10]._super, x66[11]._super, x66[12]._super, x66[13]._super, x66[14]._super,
                 x66[15]._super, x66[16]._super, x66[17]._super, x66[18]._super, x66[19]._super,
                 x66[20]._super, x66[21]._super, x70[0]._super,  x70[1]._super,  x70[2]._super,
                 x70[3]._super,  x70[4]._super,  x70[5]._super,  x70[6]._super,  x70[7]._super,
                 x70[8]._super,  x70[9]._super,  x70[10]._super, x70[11]._super, x70[12]._super,
                 x70[13]._super, x70[14]._super, x70[15]._super, x70[16]._super, x70[17]._super,
                 x70[18]._super, x70[19]._super},
      Val32Array{x49, x50, x51, x52, x53, x54, x55, x56, x41, x42, x43, x44, x45, x46, x47, x48,
                 x29, x30, x31, x32, x33, x34, x35, x36, x21, x22, x23, x24, x25, x26, x27, x28},
      TwoShortsStruct{.low = Val(23924), .high = Val(29374)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x72 = x71.aOut;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:323)
  Concatenate_NondetReg__16__16_Struct x73 =
      execUnpackWithCarry(ctx, x72.low, x72.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:320)
  TwoShortsStruct x74 = x71.eOut;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:324)
  Concatenate_NondetReg__16__16_Struct x75 =
      execUnpackWithCarry(ctx, x74.low, x74.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:323)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x76 = x73._super;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:324)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x77 = x75._super;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:327)
  Val24Array x78 = Val24Array{x16[2], x16[3], Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:326)
  Val22Array x79 =
      Val22Array{x76[0]._super,  x76[1]._super,  x76[2]._super,  x76[3]._super,  x76[4]._super,
                 x76[5]._super,  x76[6]._super,  x76[7]._super,  x76[8]._super,  x76[9]._super,
                 x76[10]._super, x76[11]._super, x76[12]._super, x76[13]._super, x76[14]._super,
                 x76[15]._super, x76[16]._super, x76[17]._super, x76[18]._super, x76[19]._super,
                 x76[20]._super, x76[21]._super};
  Val22Array x80 =
      Val22Array{x76[22]._super, x76[23]._super, x76[24]._super, x76[25]._super, x76[26]._super,
                 x76[27]._super, x76[28]._super, x76[29]._super, x76[30]._super, x76[31]._super,
                 x77[0]._super,  x77[1]._super,  x77[2]._super,  x77[3]._super,  x77[4]._super,
                 x77[5]._super,  x77[6]._super,  x77[7]._super,  x77[8]._super,  x77[9]._super,
                 x77[10]._super, x77[11]._super};
  Val22Array x81 =
      Val22Array{x77[12]._super, x77[13]._super, x77[14]._super, x77[15]._super, x77[16]._super,
                 x77[17]._super, x77[18]._super, x77[19]._super, x77[20]._super, x77[21]._super,
                 x77[22]._super, x77[23]._super, x77[24]._super, x77[25]._super, x77[26]._super,
                 x77[27]._super, x77[28]._super, x77[29]._super, x77[30]._super, x77[31]._super,
                 Val(0),         Val(0)};
  Val22Array x82 = Val22Array{x49, x50, x51, x52, x53, x54, x55, x56, x41, x42, x43,
                              x44, x45, x46, x47, x48, x29, x30, x31, x32, x33, x34};
  Val22Array x83 = Val22Array{x35,    x36,    x21,    x22,    x23,    x24,    x25,    x26,
                              x27,    x28,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  if (to_size_t(Val(1))) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:329)
    RetTupleStruct x84 = exec_RetTuple(ctx,
                                       x79,
                                       x80,
                                       x81,
                                       x78,
                                       x82,
                                       x83,
                                       Val(13),
                                       Val(19),
                                       x16[4],
                                       x16[5],
                                       x9,
                                       LAYOUT_LOOKUP(x4, arm0));
  }
  if (to_size_t(Val(0))) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:331)
    RetTupleStruct x85 = exec_RetTuple(ctx,
                                       x79,
                                       x80,
                                       x81,
                                       x78,
                                       x82,
                                       x83,
                                       Val(0),
                                       Val(20),
                                       x16[4],
                                       x16[5],
                                       x9,
                                       LAYOUT_LOOKUP(x4, arm1));
  }
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:328)
  RetTupleStruct x86 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x4, _super));
  return x86;
}
RetTupleStruct execSha256load_13_(ExecContext& ctx,
                                  RetTupleStruct arg0,
                                  BoundLayout<RetTupleLayout> arg1,
                                  BoundLayout<Sha256load_13_Layout> layout2) {
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)
  BoundLayout<Sha256load_13_ValsLayout> x3 = LAYOUT_LOOKUP(layout2, vals);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:328)
  BoundLayout<Sha256load_13__SuperLayout> x4 = LAYOUT_LOOKUP(layout2, _super);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:292)
  RetTupleStruct x5 = back_RetTuple(ctx, 1, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:293)
  RetTupleStruct x6 = back_RetTuple(ctx, 2, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:294)
  RetTupleStruct x7 = back_RetTuple(ctx, 3, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:295)
  RetTupleStruct x8 = back_RetTuple(ctx, 4, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:292)
  Val x9 = x5.midx._super;
  Val x10 = x5.blk._super;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:298)
  Val x11 = ((x9 + Val(1)) - x10);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:299)
  NondetRegStruct x12 = exec_NondetReg(ctx, inv(x11), LAYOUT_LOOKUP(layout2, invWithin));
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:300)
  EQZ(((x11 * x12._super) - Val(1)), "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:300)");
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:292)
  Val x13 = x5.rnd._super;
  NondetRegStruct24Array x14 = x5.arrD;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)
  BoundLayout<Reg> x15 =
      LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x3, arm1), _extra0), count), _super);
  Val6Array x16;
  if (to_size_t((Val(1) - x13))) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:303)
    ReadMemoryStruct x17 = exec_ReadMemory(ctx, x10, LAYOUT_LOOKUP(LAYOUT_LOOKUP(x3, arm0), mem));
    NondetRegStruct4Array x18 = x17._super;
    x16 = Val6Array{x18[0]._super, x18[1]._super, x18[2]._super, x18[3]._super, Val(1), x10};
  } else if (to_size_t(x13)) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)
    STORE(x15, Val(0));
    EQZ(LOAD(x15, 0), "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)");
    x16 = Val6Array{x14[0]._super, x14[1]._super, Val(0), Val(0), Val(0), (x10 + Val(1))};
  } else {
    assert(0 && "Reached unreachable mux arm");
  }
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:309)
  ToBits_16_Struct x19 = exec_ToBits_16_(ctx, x16[0], LAYOUT_LOOKUP(layout2, highW));
  NondetRegStruct16Array x20 = x19._super;
  Val x21 = x20[0]._super;
  Val x22 = x20[1]._super;
  Val x23 = x20[2]._super;
  Val x24 = x20[3]._super;
  Val x25 = x20[4]._super;
  Val x26 = x20[5]._super;
  Val x27 = x20[6]._super;
  Val x28 = x20[7]._super;
  Val x29 = x20[8]._super;
  Val x30 = x20[9]._super;
  Val x31 = x20[10]._super;
  Val x32 = x20[11]._super;
  Val x33 = x20[12]._super;
  Val x34 = x20[13]._super;
  Val x35 = x20[14]._super;
  Val x36 = x20[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:310)
  Val x37 = ((((((x21 + (x22 * Val(2))) + (x23 * Val(4))) + (x24 * Val(8))) + (x25 * Val(16))) +
              (x26 * Val(32))) +
             (x27 * Val(64)));
  Val x38 =
      ((((((x37 + (x28 * Val(128))) + (x29 * Val(256))) + (x30 * Val(512))) + (x31 * Val(1024))) +
        (x32 * Val(2048))) +
       (x33 * Val(4096)));
  EQZ(((((x38 + (x34 * Val(8192))) + (x35 * Val(16384))) + (x36 * Val(32768))) - x16[0]),
      "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:310)");
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:312)
  ToBits_16_Struct x39 = exec_ToBits_16_(ctx, x16[1], LAYOUT_LOOKUP(layout2, lowW));
  NondetRegStruct16Array x40 = x39._super;
  Val x41 = x40[0]._super;
  Val x42 = x40[1]._super;
  Val x43 = x40[2]._super;
  Val x44 = x40[3]._super;
  Val x45 = x40[4]._super;
  Val x46 = x40[5]._super;
  Val x47 = x40[6]._super;
  Val x48 = x40[7]._super;
  Val x49 = x40[8]._super;
  Val x50 = x40[9]._super;
  Val x51 = x40[10]._super;
  Val x52 = x40[11]._super;
  Val x53 = x40[12]._super;
  Val x54 = x40[13]._super;
  Val x55 = x40[14]._super;
  Val x56 = x40[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:313)
  Val x57 = ((((((x41 + (x42 * Val(2))) + (x43 * Val(4))) + (x44 * Val(8))) + (x45 * Val(16))) +
              (x46 * Val(32))) +
             (x47 * Val(64)));
  Val x58 =
      ((((((x57 + (x48 * Val(128))) + (x49 * Val(256))) + (x50 * Val(512))) + (x51 * Val(1024))) +
        (x52 * Val(2048))) +
       (x53 * Val(4096)));
  EQZ(((((x58 + (x54 * Val(8192))) + (x55 * Val(16384))) + (x56 * Val(32768))) - x16[1]),
      "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:313)");
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:320)
  NondetRegStruct22Array x59 = x5.arrA;
  NondetRegStruct22Array x60 = x5.arrB;
  NondetRegStruct22Array x61 = x6.arrA;
  NondetRegStruct22Array x62 = x6.arrB;
  NondetRegStruct22Array x63 = x7.arrA;
  NondetRegStruct22Array x64 = x7.arrB;
  NondetRegStruct22Array x65 = x8.arrA;
  NondetRegStruct22Array x66 = x8.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:321)
  NondetRegStruct22Array x67 = x5.arrC;
  NondetRegStruct22Array x68 = x6.arrC;
  NondetRegStruct22Array x69 = x7.arrC;
  NondetRegStruct22Array x70 = x8.arrC;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:320)
  ComputeAEStruct x71 = execComputeAE(
      ctx,
      Val32Array{x59[0]._super,  x59[1]._super,  x59[2]._super,  x59[3]._super,  x59[4]._super,
                 x59[5]._super,  x59[6]._super,  x59[7]._super,  x59[8]._super,  x59[9]._super,
                 x59[10]._super, x59[11]._super, x59[12]._super, x59[13]._super, x59[14]._super,
                 x59[15]._super, x59[16]._super, x59[17]._super, x59[18]._super, x59[19]._super,
                 x59[20]._super, x59[21]._super, x60[0]._super,  x60[1]._super,  x60[2]._super,
                 x60[3]._super,  x60[4]._super,  x60[5]._super,  x60[6]._super,  x60[7]._super,
                 x60[8]._super,  x60[9]._super},
      Val32Array{x61[0]._super,  x61[1]._super,  x61[2]._super,  x61[3]._super,  x61[4]._super,
                 x61[5]._super,  x61[6]._super,  x61[7]._super,  x61[8]._super,  x61[9]._super,
                 x61[10]._super, x61[11]._super, x61[12]._super, x61[13]._super, x61[14]._super,
                 x61[15]._super, x61[16]._super, x61[17]._super, x61[18]._super, x61[19]._super,
                 x61[20]._super, x61[21]._super, x62[0]._super,  x62[1]._super,  x62[2]._super,
                 x62[3]._super,  x62[4]._super,  x62[5]._super,  x62[6]._super,  x62[7]._super,
                 x62[8]._super,  x62[9]._super},
      Val32Array{x63[0]._super,  x63[1]._super,  x63[2]._super,  x63[3]._super,  x63[4]._super,
                 x63[5]._super,  x63[6]._super,  x63[7]._super,  x63[8]._super,  x63[9]._super,
                 x63[10]._super, x63[11]._super, x63[12]._super, x63[13]._super, x63[14]._super,
                 x63[15]._super, x63[16]._super, x63[17]._super, x63[18]._super, x63[19]._super,
                 x63[20]._super, x63[21]._super, x64[0]._super,  x64[1]._super,  x64[2]._super,
                 x64[3]._super,  x64[4]._super,  x64[5]._super,  x64[6]._super,  x64[7]._super,
                 x64[8]._super,  x64[9]._super},
      Val32Array{x65[0]._super,  x65[1]._super,  x65[2]._super,  x65[3]._super,  x65[4]._super,
                 x65[5]._super,  x65[6]._super,  x65[7]._super,  x65[8]._super,  x65[9]._super,
                 x65[10]._super, x65[11]._super, x65[12]._super, x65[13]._super, x65[14]._super,
                 x65[15]._super, x65[16]._super, x65[17]._super, x65[18]._super, x65[19]._super,
                 x65[20]._super, x65[21]._super, x66[0]._super,  x66[1]._super,  x66[2]._super,
                 x66[3]._super,  x66[4]._super,  x66[5]._super,  x66[6]._super,  x66[7]._super,
                 x66[8]._super,  x66[9]._super},
      Val32Array{x60[10]._super, x60[11]._super, x60[12]._super, x60[13]._super, x60[14]._super,
                 x60[15]._super, x60[16]._super, x60[17]._super, x60[18]._super, x60[19]._super,
                 x60[20]._super, x60[21]._super, x67[0]._super,  x67[1]._super,  x67[2]._super,
                 x67[3]._super,  x67[4]._super,  x67[5]._super,  x67[6]._super,  x67[7]._super,
                 x67[8]._super,  x67[9]._super,  x67[10]._super, x67[11]._super, x67[12]._super,
                 x67[13]._super, x67[14]._super, x67[15]._super, x67[16]._super, x67[17]._super,
                 x67[18]._super, x67[19]._super},
      Val32Array{x62[10]._super, x62[11]._super, x62[12]._super, x62[13]._super, x62[14]._super,
                 x62[15]._super, x62[16]._super, x62[17]._super, x62[18]._super, x62[19]._super,
                 x62[20]._super, x62[21]._super, x68[0]._super,  x68[1]._super,  x68[2]._super,
                 x68[3]._super,  x68[4]._super,  x68[5]._super,  x68[6]._super,  x68[7]._super,
                 x68[8]._super,  x68[9]._super,  x68[10]._super, x68[11]._super, x68[12]._super,
                 x68[13]._super, x68[14]._super, x68[15]._super, x68[16]._super, x68[17]._super,
                 x68[18]._super, x68[19]._super},
      Val32Array{x64[10]._super, x64[11]._super, x64[12]._super, x64[13]._super, x64[14]._super,
                 x64[15]._super, x64[16]._super, x64[17]._super, x64[18]._super, x64[19]._super,
                 x64[20]._super, x64[21]._super, x69[0]._super,  x69[1]._super,  x69[2]._super,
                 x69[3]._super,  x69[4]._super,  x69[5]._super,  x69[6]._super,  x69[7]._super,
                 x69[8]._super,  x69[9]._super,  x69[10]._super, x69[11]._super, x69[12]._super,
                 x69[13]._super, x69[14]._super, x69[15]._super, x69[16]._super, x69[17]._super,
                 x69[18]._super, x69[19]._super},
      Val32Array{x66[10]._super, x66[11]._super, x66[12]._super, x66[13]._super, x66[14]._super,
                 x66[15]._super, x66[16]._super, x66[17]._super, x66[18]._super, x66[19]._super,
                 x66[20]._super, x66[21]._super, x70[0]._super,  x70[1]._super,  x70[2]._super,
                 x70[3]._super,  x70[4]._super,  x70[5]._super,  x70[6]._super,  x70[7]._super,
                 x70[8]._super,  x70[9]._super,  x70[10]._super, x70[11]._super, x70[12]._super,
                 x70[13]._super, x70[14]._super, x70[15]._super, x70[16]._super, x70[17]._super,
                 x70[18]._super, x70[19]._super},
      Val32Array{x49, x50, x51, x52, x53, x54, x55, x56, x41, x42, x43, x44, x45, x46, x47, x48,
                 x29, x30, x31, x32, x33, x34, x35, x36, x21, x22, x23, x24, x25, x26, x27, x28},
      TwoShortsStruct{.low = Val(45566), .high = Val(32990)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x72 = x71.aOut;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:323)
  Concatenate_NondetReg__16__16_Struct x73 =
      execUnpackWithCarry(ctx, x72.low, x72.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:320)
  TwoShortsStruct x74 = x71.eOut;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:324)
  Concatenate_NondetReg__16__16_Struct x75 =
      execUnpackWithCarry(ctx, x74.low, x74.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:323)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x76 = x73._super;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:324)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x77 = x75._super;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:327)
  Val24Array x78 = Val24Array{x16[2], x16[3], Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:326)
  Val22Array x79 =
      Val22Array{x76[0]._super,  x76[1]._super,  x76[2]._super,  x76[3]._super,  x76[4]._super,
                 x76[5]._super,  x76[6]._super,  x76[7]._super,  x76[8]._super,  x76[9]._super,
                 x76[10]._super, x76[11]._super, x76[12]._super, x76[13]._super, x76[14]._super,
                 x76[15]._super, x76[16]._super, x76[17]._super, x76[18]._super, x76[19]._super,
                 x76[20]._super, x76[21]._super};
  Val22Array x80 =
      Val22Array{x76[22]._super, x76[23]._super, x76[24]._super, x76[25]._super, x76[26]._super,
                 x76[27]._super, x76[28]._super, x76[29]._super, x76[30]._super, x76[31]._super,
                 x77[0]._super,  x77[1]._super,  x77[2]._super,  x77[3]._super,  x77[4]._super,
                 x77[5]._super,  x77[6]._super,  x77[7]._super,  x77[8]._super,  x77[9]._super,
                 x77[10]._super, x77[11]._super};
  Val22Array x81 =
      Val22Array{x77[12]._super, x77[13]._super, x77[14]._super, x77[15]._super, x77[16]._super,
                 x77[17]._super, x77[18]._super, x77[19]._super, x77[20]._super, x77[21]._super,
                 x77[22]._super, x77[23]._super, x77[24]._super, x77[25]._super, x77[26]._super,
                 x77[27]._super, x77[28]._super, x77[29]._super, x77[30]._super, x77[31]._super,
                 Val(0),         Val(0)};
  Val22Array x82 = Val22Array{x49, x50, x51, x52, x53, x54, x55, x56, x41, x42, x43,
                              x44, x45, x46, x47, x48, x29, x30, x31, x32, x33, x34};
  Val22Array x83 = Val22Array{x35,    x36,    x21,    x22,    x23,    x24,    x25,    x26,
                              x27,    x28,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  if (to_size_t(Val(1))) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:329)
    RetTupleStruct x84 = exec_RetTuple(ctx,
                                       x79,
                                       x80,
                                       x81,
                                       x78,
                                       x82,
                                       x83,
                                       Val(14),
                                       Val(19),
                                       x16[4],
                                       x16[5],
                                       x9,
                                       LAYOUT_LOOKUP(x4, arm0));
  }
  if (to_size_t(Val(0))) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:331)
    RetTupleStruct x85 = exec_RetTuple(ctx,
                                       x79,
                                       x80,
                                       x81,
                                       x78,
                                       x82,
                                       x83,
                                       Val(0),
                                       Val(20),
                                       x16[4],
                                       x16[5],
                                       x9,
                                       LAYOUT_LOOKUP(x4, arm1));
  }
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:328)
  RetTupleStruct x86 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x4, _super));
  return x86;
}
RetTupleStruct execSha256load_14_(ExecContext& ctx,
                                  RetTupleStruct arg0,
                                  BoundLayout<RetTupleLayout> arg1,
                                  BoundLayout<Sha256load_14_Layout> layout2) {
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)
  BoundLayout<Sha256load_14_ValsLayout> x3 = LAYOUT_LOOKUP(layout2, vals);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:328)
  BoundLayout<Sha256load_14__SuperLayout> x4 = LAYOUT_LOOKUP(layout2, _super);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:292)
  RetTupleStruct x5 = back_RetTuple(ctx, 1, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:293)
  RetTupleStruct x6 = back_RetTuple(ctx, 2, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:294)
  RetTupleStruct x7 = back_RetTuple(ctx, 3, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:295)
  RetTupleStruct x8 = back_RetTuple(ctx, 4, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:292)
  Val x9 = x5.midx._super;
  Val x10 = x5.blk._super;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:298)
  Val x11 = ((x9 + Val(1)) - x10);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:299)
  NondetRegStruct x12 = exec_NondetReg(ctx, inv(x11), LAYOUT_LOOKUP(layout2, invWithin));
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:300)
  EQZ(((x11 * x12._super) - Val(1)), "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:300)");
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:292)
  Val x13 = x5.rnd._super;
  NondetRegStruct24Array x14 = x5.arrD;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)
  BoundLayout<Reg> x15 =
      LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x3, arm1), _extra0), count), _super);
  Val6Array x16;
  if (to_size_t((Val(1) - x13))) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:303)
    ReadMemoryStruct x17 = exec_ReadMemory(ctx, x10, LAYOUT_LOOKUP(LAYOUT_LOOKUP(x3, arm0), mem));
    NondetRegStruct4Array x18 = x17._super;
    x16 = Val6Array{x18[0]._super, x18[1]._super, x18[2]._super, x18[3]._super, Val(1), x10};
  } else if (to_size_t(x13)) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)
    STORE(x15, Val(0));
    EQZ(LOAD(x15, 0), "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)");
    x16 = Val6Array{x14[0]._super, x14[1]._super, Val(0), Val(0), Val(0), (x10 + Val(1))};
  } else {
    assert(0 && "Reached unreachable mux arm");
  }
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:309)
  ToBits_16_Struct x19 = exec_ToBits_16_(ctx, x16[0], LAYOUT_LOOKUP(layout2, highW));
  NondetRegStruct16Array x20 = x19._super;
  Val x21 = x20[0]._super;
  Val x22 = x20[1]._super;
  Val x23 = x20[2]._super;
  Val x24 = x20[3]._super;
  Val x25 = x20[4]._super;
  Val x26 = x20[5]._super;
  Val x27 = x20[6]._super;
  Val x28 = x20[7]._super;
  Val x29 = x20[8]._super;
  Val x30 = x20[9]._super;
  Val x31 = x20[10]._super;
  Val x32 = x20[11]._super;
  Val x33 = x20[12]._super;
  Val x34 = x20[13]._super;
  Val x35 = x20[14]._super;
  Val x36 = x20[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:310)
  Val x37 = ((((((x21 + (x22 * Val(2))) + (x23 * Val(4))) + (x24 * Val(8))) + (x25 * Val(16))) +
              (x26 * Val(32))) +
             (x27 * Val(64)));
  Val x38 =
      ((((((x37 + (x28 * Val(128))) + (x29 * Val(256))) + (x30 * Val(512))) + (x31 * Val(1024))) +
        (x32 * Val(2048))) +
       (x33 * Val(4096)));
  EQZ(((((x38 + (x34 * Val(8192))) + (x35 * Val(16384))) + (x36 * Val(32768))) - x16[0]),
      "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:310)");
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:312)
  ToBits_16_Struct x39 = exec_ToBits_16_(ctx, x16[1], LAYOUT_LOOKUP(layout2, lowW));
  NondetRegStruct16Array x40 = x39._super;
  Val x41 = x40[0]._super;
  Val x42 = x40[1]._super;
  Val x43 = x40[2]._super;
  Val x44 = x40[3]._super;
  Val x45 = x40[4]._super;
  Val x46 = x40[5]._super;
  Val x47 = x40[6]._super;
  Val x48 = x40[7]._super;
  Val x49 = x40[8]._super;
  Val x50 = x40[9]._super;
  Val x51 = x40[10]._super;
  Val x52 = x40[11]._super;
  Val x53 = x40[12]._super;
  Val x54 = x40[13]._super;
  Val x55 = x40[14]._super;
  Val x56 = x40[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:313)
  Val x57 = ((((((x41 + (x42 * Val(2))) + (x43 * Val(4))) + (x44 * Val(8))) + (x45 * Val(16))) +
              (x46 * Val(32))) +
             (x47 * Val(64)));
  Val x58 =
      ((((((x57 + (x48 * Val(128))) + (x49 * Val(256))) + (x50 * Val(512))) + (x51 * Val(1024))) +
        (x52 * Val(2048))) +
       (x53 * Val(4096)));
  EQZ(((((x58 + (x54 * Val(8192))) + (x55 * Val(16384))) + (x56 * Val(32768))) - x16[1]),
      "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:313)");
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:320)
  NondetRegStruct22Array x59 = x5.arrA;
  NondetRegStruct22Array x60 = x5.arrB;
  NondetRegStruct22Array x61 = x6.arrA;
  NondetRegStruct22Array x62 = x6.arrB;
  NondetRegStruct22Array x63 = x7.arrA;
  NondetRegStruct22Array x64 = x7.arrB;
  NondetRegStruct22Array x65 = x8.arrA;
  NondetRegStruct22Array x66 = x8.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:321)
  NondetRegStruct22Array x67 = x5.arrC;
  NondetRegStruct22Array x68 = x6.arrC;
  NondetRegStruct22Array x69 = x7.arrC;
  NondetRegStruct22Array x70 = x8.arrC;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:320)
  ComputeAEStruct x71 = execComputeAE(
      ctx,
      Val32Array{x59[0]._super,  x59[1]._super,  x59[2]._super,  x59[3]._super,  x59[4]._super,
                 x59[5]._super,  x59[6]._super,  x59[7]._super,  x59[8]._super,  x59[9]._super,
                 x59[10]._super, x59[11]._super, x59[12]._super, x59[13]._super, x59[14]._super,
                 x59[15]._super, x59[16]._super, x59[17]._super, x59[18]._super, x59[19]._super,
                 x59[20]._super, x59[21]._super, x60[0]._super,  x60[1]._super,  x60[2]._super,
                 x60[3]._super,  x60[4]._super,  x60[5]._super,  x60[6]._super,  x60[7]._super,
                 x60[8]._super,  x60[9]._super},
      Val32Array{x61[0]._super,  x61[1]._super,  x61[2]._super,  x61[3]._super,  x61[4]._super,
                 x61[5]._super,  x61[6]._super,  x61[7]._super,  x61[8]._super,  x61[9]._super,
                 x61[10]._super, x61[11]._super, x61[12]._super, x61[13]._super, x61[14]._super,
                 x61[15]._super, x61[16]._super, x61[17]._super, x61[18]._super, x61[19]._super,
                 x61[20]._super, x61[21]._super, x62[0]._super,  x62[1]._super,  x62[2]._super,
                 x62[3]._super,  x62[4]._super,  x62[5]._super,  x62[6]._super,  x62[7]._super,
                 x62[8]._super,  x62[9]._super},
      Val32Array{x63[0]._super,  x63[1]._super,  x63[2]._super,  x63[3]._super,  x63[4]._super,
                 x63[5]._super,  x63[6]._super,  x63[7]._super,  x63[8]._super,  x63[9]._super,
                 x63[10]._super, x63[11]._super, x63[12]._super, x63[13]._super, x63[14]._super,
                 x63[15]._super, x63[16]._super, x63[17]._super, x63[18]._super, x63[19]._super,
                 x63[20]._super, x63[21]._super, x64[0]._super,  x64[1]._super,  x64[2]._super,
                 x64[3]._super,  x64[4]._super,  x64[5]._super,  x64[6]._super,  x64[7]._super,
                 x64[8]._super,  x64[9]._super},
      Val32Array{x65[0]._super,  x65[1]._super,  x65[2]._super,  x65[3]._super,  x65[4]._super,
                 x65[5]._super,  x65[6]._super,  x65[7]._super,  x65[8]._super,  x65[9]._super,
                 x65[10]._super, x65[11]._super, x65[12]._super, x65[13]._super, x65[14]._super,
                 x65[15]._super, x65[16]._super, x65[17]._super, x65[18]._super, x65[19]._super,
                 x65[20]._super, x65[21]._super, x66[0]._super,  x66[1]._super,  x66[2]._super,
                 x66[3]._super,  x66[4]._super,  x66[5]._super,  x66[6]._super,  x66[7]._super,
                 x66[8]._super,  x66[9]._super},
      Val32Array{x60[10]._super, x60[11]._super, x60[12]._super, x60[13]._super, x60[14]._super,
                 x60[15]._super, x60[16]._super, x60[17]._super, x60[18]._super, x60[19]._super,
                 x60[20]._super, x60[21]._super, x67[0]._super,  x67[1]._super,  x67[2]._super,
                 x67[3]._super,  x67[4]._super,  x67[5]._super,  x67[6]._super,  x67[7]._super,
                 x67[8]._super,  x67[9]._super,  x67[10]._super, x67[11]._super, x67[12]._super,
                 x67[13]._super, x67[14]._super, x67[15]._super, x67[16]._super, x67[17]._super,
                 x67[18]._super, x67[19]._super},
      Val32Array{x62[10]._super, x62[11]._super, x62[12]._super, x62[13]._super, x62[14]._super,
                 x62[15]._super, x62[16]._super, x62[17]._super, x62[18]._super, x62[19]._super,
                 x62[20]._super, x62[21]._super, x68[0]._super,  x68[1]._super,  x68[2]._super,
                 x68[3]._super,  x68[4]._super,  x68[5]._super,  x68[6]._super,  x68[7]._super,
                 x68[8]._super,  x68[9]._super,  x68[10]._super, x68[11]._super, x68[12]._super,
                 x68[13]._super, x68[14]._super, x68[15]._super, x68[16]._super, x68[17]._super,
                 x68[18]._super, x68[19]._super},
      Val32Array{x64[10]._super, x64[11]._super, x64[12]._super, x64[13]._super, x64[14]._super,
                 x64[15]._super, x64[16]._super, x64[17]._super, x64[18]._super, x64[19]._super,
                 x64[20]._super, x64[21]._super, x69[0]._super,  x69[1]._super,  x69[2]._super,
                 x69[3]._super,  x69[4]._super,  x69[5]._super,  x69[6]._super,  x69[7]._super,
                 x69[8]._super,  x69[9]._super,  x69[10]._super, x69[11]._super, x69[12]._super,
                 x69[13]._super, x69[14]._super, x69[15]._super, x69[16]._super, x69[17]._super,
                 x69[18]._super, x69[19]._super},
      Val32Array{x66[10]._super, x66[11]._super, x66[12]._super, x66[13]._super, x66[14]._super,
                 x66[15]._super, x66[16]._super, x66[17]._super, x66[18]._super, x66[19]._super,
                 x66[20]._super, x66[21]._super, x70[0]._super,  x70[1]._super,  x70[2]._super,
                 x70[3]._super,  x70[4]._super,  x70[5]._super,  x70[6]._super,  x70[7]._super,
                 x70[8]._super,  x70[9]._super,  x70[10]._super, x70[11]._super, x70[12]._super,
                 x70[13]._super, x70[14]._super, x70[15]._super, x70[16]._super, x70[17]._super,
                 x70[18]._super, x70[19]._super},
      Val32Array{x49, x50, x51, x52, x53, x54, x55, x56, x41, x42, x43, x44, x45, x46, x47, x48,
                 x29, x30, x31, x32, x33, x34, x35, x36, x21, x22, x23, x24, x25, x26, x27, x28},
      TwoShortsStruct{.low = Val(1703), .high = Val(39900)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x72 = x71.aOut;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:323)
  Concatenate_NondetReg__16__16_Struct x73 =
      execUnpackWithCarry(ctx, x72.low, x72.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:320)
  TwoShortsStruct x74 = x71.eOut;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:324)
  Concatenate_NondetReg__16__16_Struct x75 =
      execUnpackWithCarry(ctx, x74.low, x74.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:323)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x76 = x73._super;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:324)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x77 = x75._super;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:327)
  Val24Array x78 = Val24Array{x16[2], x16[3], Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:326)
  Val22Array x79 =
      Val22Array{x76[0]._super,  x76[1]._super,  x76[2]._super,  x76[3]._super,  x76[4]._super,
                 x76[5]._super,  x76[6]._super,  x76[7]._super,  x76[8]._super,  x76[9]._super,
                 x76[10]._super, x76[11]._super, x76[12]._super, x76[13]._super, x76[14]._super,
                 x76[15]._super, x76[16]._super, x76[17]._super, x76[18]._super, x76[19]._super,
                 x76[20]._super, x76[21]._super};
  Val22Array x80 =
      Val22Array{x76[22]._super, x76[23]._super, x76[24]._super, x76[25]._super, x76[26]._super,
                 x76[27]._super, x76[28]._super, x76[29]._super, x76[30]._super, x76[31]._super,
                 x77[0]._super,  x77[1]._super,  x77[2]._super,  x77[3]._super,  x77[4]._super,
                 x77[5]._super,  x77[6]._super,  x77[7]._super,  x77[8]._super,  x77[9]._super,
                 x77[10]._super, x77[11]._super};
  Val22Array x81 =
      Val22Array{x77[12]._super, x77[13]._super, x77[14]._super, x77[15]._super, x77[16]._super,
                 x77[17]._super, x77[18]._super, x77[19]._super, x77[20]._super, x77[21]._super,
                 x77[22]._super, x77[23]._super, x77[24]._super, x77[25]._super, x77[26]._super,
                 x77[27]._super, x77[28]._super, x77[29]._super, x77[30]._super, x77[31]._super,
                 Val(0),         Val(0)};
  Val22Array x82 = Val22Array{x49, x50, x51, x52, x53, x54, x55, x56, x41, x42, x43,
                              x44, x45, x46, x47, x48, x29, x30, x31, x32, x33, x34};
  Val22Array x83 = Val22Array{x35,    x36,    x21,    x22,    x23,    x24,    x25,    x26,
                              x27,    x28,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  if (to_size_t(Val(1))) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:329)
    RetTupleStruct x84 = exec_RetTuple(ctx,
                                       x79,
                                       x80,
                                       x81,
                                       x78,
                                       x82,
                                       x83,
                                       Val(15),
                                       Val(19),
                                       x16[4],
                                       x16[5],
                                       x9,
                                       LAYOUT_LOOKUP(x4, arm0));
  }
  if (to_size_t(Val(0))) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:331)
    RetTupleStruct x85 = exec_RetTuple(ctx,
                                       x79,
                                       x80,
                                       x81,
                                       x78,
                                       x82,
                                       x83,
                                       Val(0),
                                       Val(20),
                                       x16[4],
                                       x16[5],
                                       x9,
                                       LAYOUT_LOOKUP(x4, arm1));
  }
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:328)
  RetTupleStruct x86 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x4, _super));
  return x86;
}
RetTupleStruct execSha256load_15_(ExecContext& ctx,
                                  RetTupleStruct arg0,
                                  BoundLayout<RetTupleLayout> arg1,
                                  BoundLayout<Sha256load_15_Layout> layout2) {
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)
  BoundLayout<Sha256load_15_ValsLayout> x3 = LAYOUT_LOOKUP(layout2, vals);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:328)
  BoundLayout<Sha256load_15__SuperLayout> x4 = LAYOUT_LOOKUP(layout2, _super);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:292)
  RetTupleStruct x5 = back_RetTuple(ctx, 1, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:293)
  RetTupleStruct x6 = back_RetTuple(ctx, 2, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:294)
  RetTupleStruct x7 = back_RetTuple(ctx, 3, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:295)
  RetTupleStruct x8 = back_RetTuple(ctx, 4, arg1);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:292)
  Val x9 = x5.midx._super;
  Val x10 = x5.blk._super;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:298)
  Val x11 = ((x9 + Val(1)) - x10);
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:299)
  NondetRegStruct x12 = exec_NondetReg(ctx, inv(x11), LAYOUT_LOOKUP(layout2, invWithin));
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:300)
  EQZ(((x11 * x12._super) - Val(1)), "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:300)");
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:292)
  Val x13 = x5.rnd._super;
  NondetRegStruct24Array x14 = x5.arrD;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)
  BoundLayout<Reg> x15 =
      LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x3, arm1), _extra0), count), _super);
  Val6Array x16;
  if (to_size_t((Val(1) - x13))) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:303)
    ReadMemoryStruct x17 = exec_ReadMemory(ctx, x10, LAYOUT_LOOKUP(LAYOUT_LOOKUP(x3, arm0), mem));
    NondetRegStruct4Array x18 = x17._super;
    x16 = Val6Array{x18[0]._super, x18[1]._super, x18[2]._super, x18[3]._super, Val(1), x10};
  } else if (to_size_t(x13)) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)
    STORE(x15, Val(0));
    EQZ(LOAD(x15, 0), "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:302)");
    x16 = Val6Array{x14[0]._super, x14[1]._super, Val(0), Val(0), Val(0), (x10 + Val(1))};
  } else {
    assert(0 && "Reached unreachable mux arm");
  }
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:309)
  ToBits_16_Struct x19 = exec_ToBits_16_(ctx, x16[0], LAYOUT_LOOKUP(layout2, highW));
  NondetRegStruct16Array x20 = x19._super;
  Val x21 = x20[0]._super;
  Val x22 = x20[1]._super;
  Val x23 = x20[2]._super;
  Val x24 = x20[3]._super;
  Val x25 = x20[4]._super;
  Val x26 = x20[5]._super;
  Val x27 = x20[6]._super;
  Val x28 = x20[7]._super;
  Val x29 = x20[8]._super;
  Val x30 = x20[9]._super;
  Val x31 = x20[10]._super;
  Val x32 = x20[11]._super;
  Val x33 = x20[12]._super;
  Val x34 = x20[13]._super;
  Val x35 = x20[14]._super;
  Val x36 = x20[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:310)
  Val x37 = ((((((x21 + (x22 * Val(2))) + (x23 * Val(4))) + (x24 * Val(8))) + (x25 * Val(16))) +
              (x26 * Val(32))) +
             (x27 * Val(64)));
  Val x38 =
      ((((((x37 + (x28 * Val(128))) + (x29 * Val(256))) + (x30 * Val(512))) + (x31 * Val(1024))) +
        (x32 * Val(2048))) +
       (x33 * Val(4096)));
  EQZ(((((x38 + (x34 * Val(8192))) + (x35 * Val(16384))) + (x36 * Val(32768))) - x16[0]),
      "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:310)");
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:312)
  ToBits_16_Struct x39 = exec_ToBits_16_(ctx, x16[1], LAYOUT_LOOKUP(layout2, lowW));
  NondetRegStruct16Array x40 = x39._super;
  Val x41 = x40[0]._super;
  Val x42 = x40[1]._super;
  Val x43 = x40[2]._super;
  Val x44 = x40[3]._super;
  Val x45 = x40[4]._super;
  Val x46 = x40[5]._super;
  Val x47 = x40[6]._super;
  Val x48 = x40[7]._super;
  Val x49 = x40[8]._super;
  Val x50 = x40[9]._super;
  Val x51 = x40[10]._super;
  Val x52 = x40[11]._super;
  Val x53 = x40[12]._super;
  Val x54 = x40[13]._super;
  Val x55 = x40[14]._super;
  Val x56 = x40[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:313)
  Val x57 = ((((((x41 + (x42 * Val(2))) + (x43 * Val(4))) + (x44 * Val(8))) + (x45 * Val(16))) +
              (x46 * Val(32))) +
             (x47 * Val(64)));
  Val x58 =
      ((((((x57 + (x48 * Val(128))) + (x49 * Val(256))) + (x50 * Val(512))) + (x51 * Val(1024))) +
        (x52 * Val(2048))) +
       (x53 * Val(4096)));
  EQZ(((((x58 + (x54 * Val(8192))) + (x55 * Val(16384))) + (x56 * Val(32768))) - x16[1]),
      "sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:313)");
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:320)
  NondetRegStruct22Array x59 = x5.arrA;
  NondetRegStruct22Array x60 = x5.arrB;
  NondetRegStruct22Array x61 = x6.arrA;
  NondetRegStruct22Array x62 = x6.arrB;
  NondetRegStruct22Array x63 = x7.arrA;
  NondetRegStruct22Array x64 = x7.arrB;
  NondetRegStruct22Array x65 = x8.arrA;
  NondetRegStruct22Array x66 = x8.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:321)
  NondetRegStruct22Array x67 = x5.arrC;
  NondetRegStruct22Array x68 = x6.arrC;
  NondetRegStruct22Array x69 = x7.arrC;
  NondetRegStruct22Array x70 = x8.arrC;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:320)
  ComputeAEStruct x71 = execComputeAE(
      ctx,
      Val32Array{x59[0]._super,  x59[1]._super,  x59[2]._super,  x59[3]._super,  x59[4]._super,
                 x59[5]._super,  x59[6]._super,  x59[7]._super,  x59[8]._super,  x59[9]._super,
                 x59[10]._super, x59[11]._super, x59[12]._super, x59[13]._super, x59[14]._super,
                 x59[15]._super, x59[16]._super, x59[17]._super, x59[18]._super, x59[19]._super,
                 x59[20]._super, x59[21]._super, x60[0]._super,  x60[1]._super,  x60[2]._super,
                 x60[3]._super,  x60[4]._super,  x60[5]._super,  x60[6]._super,  x60[7]._super,
                 x60[8]._super,  x60[9]._super},
      Val32Array{x61[0]._super,  x61[1]._super,  x61[2]._super,  x61[3]._super,  x61[4]._super,
                 x61[5]._super,  x61[6]._super,  x61[7]._super,  x61[8]._super,  x61[9]._super,
                 x61[10]._super, x61[11]._super, x61[12]._super, x61[13]._super, x61[14]._super,
                 x61[15]._super, x61[16]._super, x61[17]._super, x61[18]._super, x61[19]._super,
                 x61[20]._super, x61[21]._super, x62[0]._super,  x62[1]._super,  x62[2]._super,
                 x62[3]._super,  x62[4]._super,  x62[5]._super,  x62[6]._super,  x62[7]._super,
                 x62[8]._super,  x62[9]._super},
      Val32Array{x63[0]._super,  x63[1]._super,  x63[2]._super,  x63[3]._super,  x63[4]._super,
                 x63[5]._super,  x63[6]._super,  x63[7]._super,  x63[8]._super,  x63[9]._super,
                 x63[10]._super, x63[11]._super, x63[12]._super, x63[13]._super, x63[14]._super,
                 x63[15]._super, x63[16]._super, x63[17]._super, x63[18]._super, x63[19]._super,
                 x63[20]._super, x63[21]._super, x64[0]._super,  x64[1]._super,  x64[2]._super,
                 x64[3]._super,  x64[4]._super,  x64[5]._super,  x64[6]._super,  x64[7]._super,
                 x64[8]._super,  x64[9]._super},
      Val32Array{x65[0]._super,  x65[1]._super,  x65[2]._super,  x65[3]._super,  x65[4]._super,
                 x65[5]._super,  x65[6]._super,  x65[7]._super,  x65[8]._super,  x65[9]._super,
                 x65[10]._super, x65[11]._super, x65[12]._super, x65[13]._super, x65[14]._super,
                 x65[15]._super, x65[16]._super, x65[17]._super, x65[18]._super, x65[19]._super,
                 x65[20]._super, x65[21]._super, x66[0]._super,  x66[1]._super,  x66[2]._super,
                 x66[3]._super,  x66[4]._super,  x66[5]._super,  x66[6]._super,  x66[7]._super,
                 x66[8]._super,  x66[9]._super},
      Val32Array{x60[10]._super, x60[11]._super, x60[12]._super, x60[13]._super, x60[14]._super,
                 x60[15]._super, x60[16]._super, x60[17]._super, x60[18]._super, x60[19]._super,
                 x60[20]._super, x60[21]._super, x67[0]._super,  x67[1]._super,  x67[2]._super,
                 x67[3]._super,  x67[4]._super,  x67[5]._super,  x67[6]._super,  x67[7]._super,
                 x67[8]._super,  x67[9]._super,  x67[10]._super, x67[11]._super, x67[12]._super,
                 x67[13]._super, x67[14]._super, x67[15]._super, x67[16]._super, x67[17]._super,
                 x67[18]._super, x67[19]._super},
      Val32Array{x62[10]._super, x62[11]._super, x62[12]._super, x62[13]._super, x62[14]._super,
                 x62[15]._super, x62[16]._super, x62[17]._super, x62[18]._super, x62[19]._super,
                 x62[20]._super, x62[21]._super, x68[0]._super,  x68[1]._super,  x68[2]._super,
                 x68[3]._super,  x68[4]._super,  x68[5]._super,  x68[6]._super,  x68[7]._super,
                 x68[8]._super,  x68[9]._super,  x68[10]._super, x68[11]._super, x68[12]._super,
                 x68[13]._super, x68[14]._super, x68[15]._super, x68[16]._super, x68[17]._super,
                 x68[18]._super, x68[19]._super},
      Val32Array{x64[10]._super, x64[11]._super, x64[12]._super, x64[13]._super, x64[14]._super,
                 x64[15]._super, x64[16]._super, x64[17]._super, x64[18]._super, x64[19]._super,
                 x64[20]._super, x64[21]._super, x69[0]._super,  x69[1]._super,  x69[2]._super,
                 x69[3]._super,  x69[4]._super,  x69[5]._super,  x69[6]._super,  x69[7]._super,
                 x69[8]._super,  x69[9]._super,  x69[10]._super, x69[11]._super, x69[12]._super,
                 x69[13]._super, x69[14]._super, x69[15]._super, x69[16]._super, x69[17]._super,
                 x69[18]._super, x69[19]._super},
      Val32Array{x66[10]._super, x66[11]._super, x66[12]._super, x66[13]._super, x66[14]._super,
                 x66[15]._super, x66[16]._super, x66[17]._super, x66[18]._super, x66[19]._super,
                 x66[20]._super, x66[21]._super, x70[0]._super,  x70[1]._super,  x70[2]._super,
                 x70[3]._super,  x70[4]._super,  x70[5]._super,  x70[6]._super,  x70[7]._super,
                 x70[8]._super,  x70[9]._super,  x70[10]._super, x70[11]._super, x70[12]._super,
                 x70[13]._super, x70[14]._super, x70[15]._super, x70[16]._super, x70[17]._super,
                 x70[18]._super, x70[19]._super},
      Val32Array{x49, x50, x51, x52, x53, x54, x55, x56, x41, x42, x43, x44, x45, x46, x47, x48,
                 x29, x30, x31, x32, x33, x34, x35, x36, x21, x22, x23, x24, x25, x26, x27, x28},
      TwoShortsStruct{.low = Val(61812), .high = Val(49563)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x72 = x71.aOut;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:323)
  Concatenate_NondetReg__16__16_Struct x73 =
      execUnpackWithCarry(ctx, x72.low, x72.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:320)
  TwoShortsStruct x74 = x71.eOut;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:324)
  Concatenate_NondetReg__16__16_Struct x75 =
      execUnpackWithCarry(ctx, x74.low, x74.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:323)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x76 = x73._super;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:324)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x77 = x75._super;
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:327)
  Val24Array x78 = Val24Array{x16[2], x16[3], Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:326)
  Val22Array x79 =
      Val22Array{x76[0]._super,  x76[1]._super,  x76[2]._super,  x76[3]._super,  x76[4]._super,
                 x76[5]._super,  x76[6]._super,  x76[7]._super,  x76[8]._super,  x76[9]._super,
                 x76[10]._super, x76[11]._super, x76[12]._super, x76[13]._super, x76[14]._super,
                 x76[15]._super, x76[16]._super, x76[17]._super, x76[18]._super, x76[19]._super,
                 x76[20]._super, x76[21]._super};
  Val22Array x80 =
      Val22Array{x76[22]._super, x76[23]._super, x76[24]._super, x76[25]._super, x76[26]._super,
                 x76[27]._super, x76[28]._super, x76[29]._super, x76[30]._super, x76[31]._super,
                 x77[0]._super,  x77[1]._super,  x77[2]._super,  x77[3]._super,  x77[4]._super,
                 x77[5]._super,  x77[6]._super,  x77[7]._super,  x77[8]._super,  x77[9]._super,
                 x77[10]._super, x77[11]._super};
  Val22Array x81 =
      Val22Array{x77[12]._super, x77[13]._super, x77[14]._super, x77[15]._super, x77[16]._super,
                 x77[17]._super, x77[18]._super, x77[19]._super, x77[20]._super, x77[21]._super,
                 x77[22]._super, x77[23]._super, x77[24]._super, x77[25]._super, x77[26]._super,
                 x77[27]._super, x77[28]._super, x77[29]._super, x77[30]._super, x77[31]._super,
                 Val(0),         Val(0)};
  Val22Array x82 = Val22Array{x49, x50, x51, x52, x53, x54, x55, x56, x41, x42, x43,
                              x44, x45, x46, x47, x48, x29, x30, x31, x32, x33, x34};
  Val22Array x83 = Val22Array{x35,    x36,    x21,    x22,    x23,    x24,    x25,    x26,
                              x27,    x28,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  if (to_size_t(Val(0))) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:329)
    RetTupleStruct x84 = exec_RetTuple(ctx,
                                       x79,
                                       x80,
                                       x81,
                                       x78,
                                       x82,
                                       x83,
                                       Val(16),
                                       Val(19),
                                       x16[4],
                                       x16[5],
                                       x9,
                                       LAYOUT_LOOKUP(x4, arm0));
  }
  if (to_size_t(Val(1))) {
    // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:331)
    RetTupleStruct x85 = exec_RetTuple(ctx,
                                       x79,
                                       x80,
                                       x81,
                                       x78,
                                       x82,
                                       x83,
                                       Val(0),
                                       Val(20),
                                       x16[4],
                                       x16[5],
                                       x9,
                                       LAYOUT_LOOKUP(x4, arm1));
  }
  // sha256load(zirgen/circuit/keccak/sha256_for_keccak.zir:328)
  RetTupleStruct x86 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x4, _super));
  return x86;
}
RetTupleStruct execSha256loadAll(ExecContext& ctx,
                                 RetTupleStruct arg0,
                                 BoundLayout<RetTupleLayout> arg1,
                                 BoundLayout<Sha256loadAllLayout> layout2) {
  // sha256load_all(zirgen/circuit/keccak/sha256_for_keccak.zir:337)
  BoundLayout<Sha256loadAll_SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256load_all(zirgen/circuit/keccak/sha256_for_keccak.zir:336)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  OneHot_16_Struct x5 = exec_OneHot_16_(ctx, x4.minor._super, LAYOUT_LOOKUP(layout2, minorOnehot));
  NondetRegStruct16Array x6 = x5._super;
  if (to_size_t(x6[0]._super)) {
    // sha256load_all(zirgen/circuit/keccak/sha256_for_keccak.zir:338)
    RetTupleStruct x7 = execSha256load_0_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm0));
  }
  if (to_size_t(x6[1]._super)) {
    // sha256load_all(zirgen/circuit/keccak/sha256_for_keccak.zir:339)
    RetTupleStruct x8 = execSha256load_1_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm1));
  }
  if (to_size_t(x6[2]._super)) {
    // sha256load_all(zirgen/circuit/keccak/sha256_for_keccak.zir:340)
    RetTupleStruct x9 = execSha256load_2_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm2));
  }
  if (to_size_t(x6[3]._super)) {
    // sha256load_all(zirgen/circuit/keccak/sha256_for_keccak.zir:341)
    RetTupleStruct x10 = execSha256load_3_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm3));
  }
  if (to_size_t(x6[4]._super)) {
    // sha256load_all(zirgen/circuit/keccak/sha256_for_keccak.zir:342)
    RetTupleStruct x11 = execSha256load_4_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm4));
  }
  if (to_size_t(x6[5]._super)) {
    // sha256load_all(zirgen/circuit/keccak/sha256_for_keccak.zir:343)
    RetTupleStruct x12 = execSha256load_5_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm5));
  }
  if (to_size_t(x6[6]._super)) {
    // sha256load_all(zirgen/circuit/keccak/sha256_for_keccak.zir:344)
    RetTupleStruct x13 = execSha256load_6_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm6));
  }
  if (to_size_t(x6[7]._super)) {
    // sha256load_all(zirgen/circuit/keccak/sha256_for_keccak.zir:345)
    RetTupleStruct x14 = execSha256load_7_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm7));
  }
  if (to_size_t(x6[8]._super)) {
    // sha256load_all(zirgen/circuit/keccak/sha256_for_keccak.zir:346)
    RetTupleStruct x15 = execSha256load_8_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm8));
  }
  if (to_size_t(x6[9]._super)) {
    // sha256load_all(zirgen/circuit/keccak/sha256_for_keccak.zir:347)
    RetTupleStruct x16 = execSha256load_9_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm9));
  }
  if (to_size_t(x6[10]._super)) {
    // sha256load_all(zirgen/circuit/keccak/sha256_for_keccak.zir:348)
    RetTupleStruct x17 = execSha256load_10_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm10));
  }
  if (to_size_t(x6[11]._super)) {
    // sha256load_all(zirgen/circuit/keccak/sha256_for_keccak.zir:349)
    RetTupleStruct x18 = execSha256load_11_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm11));
  }
  if (to_size_t(x6[12]._super)) {
    // sha256load_all(zirgen/circuit/keccak/sha256_for_keccak.zir:350)
    RetTupleStruct x19 = execSha256load_12_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm12));
  }
  if (to_size_t(x6[13]._super)) {
    // sha256load_all(zirgen/circuit/keccak/sha256_for_keccak.zir:351)
    RetTupleStruct x20 = execSha256load_13_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm13));
  }
  if (to_size_t(x6[14]._super)) {
    // sha256load_all(zirgen/circuit/keccak/sha256_for_keccak.zir:352)
    RetTupleStruct x21 = execSha256load_14_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm14));
  }
  if (to_size_t(x6[15]._super)) {
    // sha256load_all(zirgen/circuit/keccak/sha256_for_keccak.zir:353)
    RetTupleStruct x22 = execSha256load_15_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm15));
  }
  // sha256load_all(zirgen/circuit/keccak/sha256_for_keccak.zir:337)
  RetTupleStruct x23 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x23;
}
ToBits_22_Struct
exec_ToBits_22_(ExecContext& ctx, Val arg0, BoundLayout<ToBits_22_Layout> layout1) {
  // ToBits(zirgen/circuit/keccak/sha256_for_keccak.zir:80)
  NondetRegStruct22Array x2 = map(
      Val22Array{Val(0),  Val(1),  Val(2),  Val(3),  Val(4),  Val(5),  Val(6),  Val(7),
                 Val(8),  Val(9),  Val(10), Val(11), Val(12), Val(13), Val(14), Val(15),
                 Val(16), Val(17), Val(18), Val(19), Val(20), Val(21)},
      LAYOUT_LOOKUP(layout1, _super),
      std::function([&](Val22Array::value_type x3,
                        BoundLayout<NondetRegLayout22LayoutArray::value_type> x4) {
        // Div(<preamble>:10)
        Val x5 = inv(Val31Array{Val(1),         Val(2),         Val(4),         Val(8),
                                Val(16),        Val(32),        Val(64),        Val(128),
                                Val(256),       Val(512),       Val(1024),      Val(2048),
                                Val(4096),      Val(8192),      Val(16384),     Val(32768),
                                Val(65536),     Val(131072),    Val(262144),    Val(524288),
                                Val(1048576),   Val(2097152),   Val(4194304),   Val(8388608),
                                Val(16777216),  Val(33554432),  Val(67108864),  Val(134217728),
                                Val(268435456), Val(536870912), Val(1073741824)}[to_size_t(x3)]);
        // Div(<preamble>:11)
        EQZ(((x5 * Val31Array{Val(1),         Val(2),         Val(4),         Val(8),
                              Val(16),        Val(32),        Val(64),        Val(128),
                              Val(256),       Val(512),       Val(1024),      Val(2048),
                              Val(4096),      Val(8192),      Val(16384),     Val(32768),
                              Val(65536),     Val(131072),    Val(262144),    Val(524288),
                              Val(1048576),   Val(2097152),   Val(4194304),   Val(8388608),
                              Val(16777216),  Val(33554432),  Val(67108864),  Val(134217728),
                              Val(268435456), Val(536870912), Val(1073741824)}[to_size_t(x3)]) -
             Val(1)),
            "loc(callsite(\x22Div\x22(\x22<preamble>\x22:11:22) at "
            "\x22ToBits\x22(\x22zirgen/circuit/keccak/sha256_for_keccak.zir\x22:80:43)))");
        NondetRegStruct x6 = exec_NondetBitReg(
            ctx,
            (x5 *
             bitAnd(arg0,
                    Val31Array{Val(1),         Val(2),         Val(4),         Val(8),
                               Val(16),        Val(32),        Val(64),        Val(128),
                               Val(256),       Val(512),       Val(1024),      Val(2048),
                               Val(4096),      Val(8192),      Val(16384),     Val(32768),
                               Val(65536),     Val(131072),    Val(262144),    Val(524288),
                               Val(1048576),   Val(2097152),   Val(4194304),   Val(8388608),
                               Val(16777216),  Val(33554432),  Val(67108864),  Val(134217728),
                               Val(268435456), Val(536870912), Val(1073741824)}[to_size_t(x3)])),
            x4);
        return x6;
      }));
  return ToBits_22_Struct{._super = x2};
}
ToBits_21_Struct
exec_ToBits_21_(ExecContext& ctx, Val arg0, BoundLayout<ToBits_21_Layout> layout1) {
  NondetRegStruct21Array x2 = map(
      Val21Array{Val(0),  Val(1),  Val(2),  Val(3),  Val(4),  Val(5),  Val(6),
                 Val(7),  Val(8),  Val(9),  Val(10), Val(11), Val(12), Val(13),
                 Val(14), Val(15), Val(16), Val(17), Val(18), Val(19), Val(20)},
      LAYOUT_LOOKUP(layout1, _super),
      std::function([&](Val21Array::value_type x3,
                        BoundLayout<NondetRegLayout21LayoutArray::value_type> x4) {
        // Div(<preamble>:10)
        Val x5 = inv(Val31Array{Val(1),         Val(2),         Val(4),         Val(8),
                                Val(16),        Val(32),        Val(64),        Val(128),
                                Val(256),       Val(512),       Val(1024),      Val(2048),
                                Val(4096),      Val(8192),      Val(16384),     Val(32768),
                                Val(65536),     Val(131072),    Val(262144),    Val(524288),
                                Val(1048576),   Val(2097152),   Val(4194304),   Val(8388608),
                                Val(16777216),  Val(33554432),  Val(67108864),  Val(134217728),
                                Val(268435456), Val(536870912), Val(1073741824)}[to_size_t(x3)]);
        // Div(<preamble>:11)
        EQZ(((x5 * Val31Array{Val(1),         Val(2),         Val(4),         Val(8),
                              Val(16),        Val(32),        Val(64),        Val(128),
                              Val(256),       Val(512),       Val(1024),      Val(2048),
                              Val(4096),      Val(8192),      Val(16384),     Val(32768),
                              Val(65536),     Val(131072),    Val(262144),    Val(524288),
                              Val(1048576),   Val(2097152),   Val(4194304),   Val(8388608),
                              Val(16777216),  Val(33554432),  Val(67108864),  Val(134217728),
                              Val(268435456), Val(536870912), Val(1073741824)}[to_size_t(x3)]) -
             Val(1)),
            "loc(callsite(\x22Div\x22(\x22<preamble>\x22:11:22) at "
            "\x22ToBits\x22(\x22zirgen/circuit/keccak/sha256_for_keccak.zir\x22:80:43)))");
        NondetRegStruct x6 = exec_NondetBitReg(
            ctx,
            (x5 *
             bitAnd(arg0,
                    Val31Array{Val(1),         Val(2),         Val(4),         Val(8),
                               Val(16),        Val(32),        Val(64),        Val(128),
                               Val(256),       Val(512),       Val(1024),      Val(2048),
                               Val(4096),      Val(8192),      Val(16384),     Val(32768),
                               Val(65536),     Val(131072),    Val(262144),    Val(524288),
                               Val(1048576),   Val(2097152),   Val(4194304),   Val(8388608),
                               Val(16777216),  Val(33554432),  Val(67108864),  Val(134217728),
                               Val(268435456), Val(536870912), Val(1073741824)}[to_size_t(x3)])),
            x4);
        return x6;
      }));
  return ToBits_21_Struct{._super = x2};
}
RetTupleStruct
execIotaXorRc(ExecContext& ctx, RetTupleStruct arg0, BoundLayout<IotaXorRcLayout> layout1) {
  // iota_xor_rc(zirgen/circuit/keccak/keccak.zir:807)
  NondetRegStruct22Array x2 = arg0.arrA;
  // iota_xor_rc(zirgen/circuit/keccak/keccak.zir:809)
  ToBits_22_Struct x3 = exec_ToBits_22_(ctx, x2[0]._super, LAYOUT_LOOKUP(layout1, unpackA000));
  // iota_xor_rc(zirgen/circuit/keccak/keccak.zir:810)
  ToBits_21_Struct x4 = exec_ToBits_21_(ctx, x2[1]._super, LAYOUT_LOOKUP(layout1, unpackA001));
  // iota_xor_rc(zirgen/circuit/keccak/keccak.zir:807)
  NondetRegStruct24Array x5 = arg0.arrD;
  Val x6 = x5[0]._super;
  Val x7 = x5[1]._super;
  Val x8 = x5[2]._super;
  Val x9 = x5[3]._super;
  Val x10 = x5[4]._super;
  Val x11 = x5[5]._super;
  Val x12 = x5[6]._super;
  Val x13 = x5[7]._super;
  Val x14 = x5[8]._super;
  Val x15 = x5[9]._super;
  Val x16 = x5[10]._super;
  Val x17 = x5[11]._super;
  Val x18 = x5[12]._super;
  Val x19 = x5[13]._super;
  Val x20 = x5[14]._super;
  Val x21 = x5[15]._super;
  Val x22 = x5[16]._super;
  Val x23 = x5[17]._super;
  Val x24 = x5[18]._super;
  Val x25 = x5[19]._super;
  Val x26 = x5[20]._super;
  Val x27 = x5[21]._super;
  Val x28 = x5[22]._super;
  Val x29 = x5[23]._super;
  // rctable(zirgen/circuit/keccak/keccak.zir:19)
  // iota_xor_rc(zirgen/circuit/keccak/keccak.zir:812)
  Val22Array x30 = Val22Array{Val(1), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // rctable(zirgen/circuit/keccak/keccak.zir:20)
  Val22Array x31 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // rctable(zirgen/circuit/keccak/keccak.zir:27)
  Val22Array x32 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(1), Val(0)};
  // rctable(zirgen/circuit/keccak/keccak.zir:29)
  Val22Array x33 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(1), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // rctable(zirgen/circuit/keccak/keccak.zir:31)
  Val22Array x34 = Val22Array{Val(1), Val(1), Val(0), Val(1), Val(0), Val(0), Val(0), Val(1),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(1),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // rctable(zirgen/circuit/keccak/keccak.zir:18)
  // iota_xor_rc(zirgen/circuit/keccak/keccak.zir:813)
  RctableStruct x35 = RctableStruct{._super = Val22Array3Array{x30, x33, x31}};
  RctableStruct x36 =
      RctableStruct{._super = Val22Array3Array{
                        Val22Array{Val(1), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(1),
                                   Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(1),
                                   Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                        x33,
                        x32}};
  // rctable(zirgen/circuit/keccak/keccak.zir:40)
  Val22Array x37 = Val22Array{Val(1), Val(0), Val(0), Val(1), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(1),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // rctable(zirgen/circuit/keccak/keccak.zir:52)
  Val22Array x38 = Val22Array{Val(0), Val(1), Val(0), Val(1), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RctableStruct x39;
  if (to_size_t(x6)) {
    x39 = RctableStruct{._super = Val22Array3Array{x30, x31, x31}};
  } else if (to_size_t(x7)) {
    x39 =
        RctableStruct{._super = Val22Array3Array{
                          Val22Array{Val(0), Val(1), Val(0), Val(0), Val(0), Val(0), Val(0), Val(1),
                                     Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(1),
                                     Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                          x31,
                          x31}};
  } else if (to_size_t(x8)) {
    x39 =
        RctableStruct{._super = Val22Array3Array{
                          Val22Array{Val(0), Val(1), Val(0), Val(1), Val(0), Val(0), Val(0), Val(1),
                                     Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(1),
                                     Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                          x31,
                          x32}};
  } else if (to_size_t(x9)) {
    x39 =
        RctableStruct{._super = Val22Array3Array{
                          Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                     Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(1),
                                     Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                          x33,
                          x32}};
  } else if (to_size_t(x10)) {
    x39 = RctableStruct{._super = Val22Array3Array{x34, x31, x31}};
  } else if (to_size_t(x11)) {
    x39 = x35;
  } else if (to_size_t(x12)) {
    x39 = x36;
  } else if (to_size_t(x13)) {
    x39 = RctableStruct{._super = Val22Array3Array{x37, x31, x32}};
  } else if (to_size_t(x14)) {
    x39 =
        RctableStruct{._super = Val22Array3Array{
                          Val22Array{Val(0), Val(1), Val(0), Val(1), Val(0), Val(0), Val(0), Val(1),
                                     Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                     Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                          x31,
                          x31}};
  } else if (to_size_t(x15)) {
    x39 =
        RctableStruct{._super = Val22Array3Array{
                          Val22Array{Val(0), Val(0), Val(0), Val(1), Val(0), Val(0), Val(0), Val(1),
                                     Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                     Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                          x31,
                          x31}};
  } else if (to_size_t(x16)) {
    x39 = RctableStruct{._super = Val22Array3Array{x37, x33, x31}};
  } else if (to_size_t(x17)) {
    x39 = RctableStruct{._super = Val22Array3Array{x38, x33, x31}};
  } else if (to_size_t(x18)) {
    x39 = RctableStruct{._super = Val22Array3Array{x34, x33, x31}};
  } else if (to_size_t(x19)) {
    x39 =
        RctableStruct{._super = Val22Array3Array{
                          Val22Array{Val(1), Val(1), Val(0), Val(1), Val(0), Val(0), Val(0), Val(1),
                                     Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                     Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                          x31,
                          x32}};
  } else if (to_size_t(x20)) {
    x39 =
        RctableStruct{._super = Val22Array3Array{
                          Val22Array{Val(1), Val(0), Val(0), Val(1), Val(0), Val(0), Val(0), Val(1),
                                     Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(1),
                                     Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                          x31,
                          x32}};
  } else if (to_size_t(x21)) {
    x39 =
        RctableStruct{._super = Val22Array3Array{
                          Val22Array{Val(1), Val(1), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                     Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(1),
                                     Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                          x31,
                          x32}};
  } else if (to_size_t(x22)) {
    x39 =
        RctableStruct{._super = Val22Array3Array{
                          Val22Array{Val(0), Val(1), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                     Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(1),
                                     Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                          x31,
                          x32}};
  } else if (to_size_t(x23)) {
    x39 =
        RctableStruct{._super = Val22Array3Array{
                          Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(1),
                                     Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                     Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                          x31,
                          x32}};
  } else if (to_size_t(x24)) {
    x39 =
        RctableStruct{._super = Val22Array3Array{
                          Val22Array{Val(0), Val(1), Val(0), Val(1), Val(0), Val(0), Val(0), Val(0),
                                     Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(1),
                                     Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                          x31,
                          x31}};
  } else if (to_size_t(x25)) {
    x39 = RctableStruct{._super = Val22Array3Array{x38, x33, x32}};
  } else if (to_size_t(x26)) {
    x39 = x36;
  } else if (to_size_t(x27)) {
    x39 =
        RctableStruct{._super = Val22Array3Array{
                          Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(1),
                                     Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(1),
                                     Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                          x31,
                          x32}};
  } else if (to_size_t(x28)) {
    x39 = x35;
  } else if (to_size_t(x29)) {
    x39 =
        RctableStruct{._super = Val22Array3Array{
                          Val22Array{Val(0), Val(0), Val(0), Val(1), Val(0), Val(0), Val(0), Val(0),
                                     Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(1),
                                     Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                          x33,
                          x32}};
  } else {
    assert(0 && "Reached unreachable mux arm");
  }
  // iota_xor_rc(zirgen/circuit/keccak/keccak.zir:819)
  BoundLayout<IotaXorRcArm23_SuperLayout> x40 = LAYOUT_LOOKUP(LAYOUT_LOOKUP(layout1, nxt), arm23);
  // iota_xor_rc(zirgen/circuit/keccak/keccak.zir:807)
  Val x41 = arg0.blk._super;
  // iota_xor_rc(zirgen/circuit/keccak/keccak.zir:823)
  Val x42 = (x41 - Val(1));
  Val3Array x43;
  if (to_size_t(x6)) {
    x43 = Val3Array{Val(0), Val(1), x41};
  } else if (to_size_t(x7)) {
    x43 = Val3Array{Val(0), Val(2), x41};
  } else if (to_size_t(x8)) {
    x43 = Val3Array{Val(0), Val(3), x41};
  } else if (to_size_t(x9)) {
    x43 = Val3Array{Val(0), Val(4), x41};
  } else if (to_size_t(x10)) {
    x43 = Val3Array{Val(0), Val(5), x41};
  } else if (to_size_t(x11)) {
    x43 = Val3Array{Val(0), Val(6), x41};
  } else if (to_size_t(x12)) {
    x43 = Val3Array{Val(0), Val(7), x41};
  } else if (to_size_t(x13)) {
    x43 = Val3Array{Val(0), Val(8), x41};
  } else if (to_size_t(x14)) {
    x43 = Val3Array{Val(0), Val(9), x41};
  } else if (to_size_t(x15)) {
    x43 = Val3Array{Val(0), Val(10), x41};
  } else if (to_size_t(x16)) {
    x43 = Val3Array{Val(0), Val(11), x41};
  } else if (to_size_t(x17)) {
    x43 = Val3Array{Val(0), Val(12), x41};
  } else if (to_size_t(x18)) {
    x43 = Val3Array{Val(0), Val(13), x41};
  } else if (to_size_t(x19)) {
    x43 = Val3Array{Val(0), Val(14), x41};
  } else if (to_size_t(x20)) {
    x43 = Val3Array{Val(0), Val(15), x41};
  } else if (to_size_t(x21)) {
    x43 = Val3Array{Val(0), Val(16), x41};
  } else if (to_size_t(x22)) {
    x43 = Val3Array{Val(0), Val(17), x41};
  } else if (to_size_t(x23)) {
    x43 = Val3Array{Val(0), Val(18), x41};
  } else if (to_size_t(x24)) {
    x43 = Val3Array{Val(0), Val(19), x41};
  } else if (to_size_t(x25)) {
    x43 = Val3Array{Val(0), Val(20), x41};
  } else if (to_size_t(x26)) {
    x43 = Val3Array{Val(0), Val(21), x41};
  } else if (to_size_t(x27)) {
    x43 = Val3Array{Val(0), Val(22), x41};
  } else if (to_size_t(x28)) {
    x43 = Val3Array{Val(0), Val(23), x41};
  } else if (to_size_t(x29)) {
    // iota_xor_rc(zirgen/circuit/keccak/keccak.zir:824)
    NondetRegStruct x44 = exec_NondetReg(ctx, inv(x42), LAYOUT_LOOKUP(x40, invNewBlk));
    // iota_xor_rc(zirgen/circuit/keccak/keccak.zir:825)
    NondetRegStruct x45 = exec_Reg(ctx, (x42 * x44._super), LAYOUT_LOOKUP(x40, prod));
    Val x46 = x45._super;
    // iota_xor_rc(zirgen/circuit/keccak/keccak.zir:826)
    Val x47 = (Val(1) - x46);
    EQZ((x42 * x47), "iota_xor_rc(zirgen/circuit/keccak/keccak.zir:826)");
    Val3Array x48;
    if (to_size_t(x46)) {
      x48 = Val3Array{Val(15), Val(0), x42};
    } else if (to_size_t(x47)) {
      x48 = Val3Array{Val(17), Val(0), Val(0)};
    } else {
      assert(0 && "Reached unreachable mux arm");
    }
    x43 = x48;
  } else {
    assert(0 && "Reached unreachable mux arm");
  }
  // iota_xor_rc(zirgen/circuit/keccak/keccak.zir:812)
  Val22Array3Array x49 = x39._super;
  // iota_xor_rc(zirgen/circuit/keccak/keccak.zir:809)
  NondetRegStruct22Array x50 = x3._super;
  Val x51 = x50[0]._super;
  Val x52 = x50[1]._super;
  Val x53 = x50[2]._super;
  Val x54 = x50[3]._super;
  Val x55 = x50[4]._super;
  Val x56 = x50[5]._super;
  Val x57 = x50[6]._super;
  Val x58 = x50[7]._super;
  Val x59 = x50[8]._super;
  Val x60 = x50[9]._super;
  Val x61 = x50[10]._super;
  Val x62 = x50[11]._super;
  Val x63 = x50[12]._super;
  Val x64 = x50[13]._super;
  Val x65 = x50[14]._super;
  Val x66 = x50[15]._super;
  Val x67 = x50[16]._super;
  Val x68 = x50[17]._super;
  Val x69 = x50[18]._super;
  Val x70 = x50[19]._super;
  Val x71 = x50[20]._super;
  Val x72 = x50[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // iota_xor_rc(zirgen/circuit/keccak/keccak.zir:829)
  Val x73 = (((x49[0][1] + x52) - ((x49[0][1] * Val(2)) * x52)) * Val(2));
  Val x74 = (((x49[0][2] + x53) - ((x49[0][2] * Val(2)) * x53)) * Val(4));
  Val x75 = (((x49[0][3] + x54) - ((x49[0][3] * Val(2)) * x54)) * Val(8));
  Val x76 = (((x49[0][4] + x55) - ((x49[0][4] * Val(2)) * x55)) * Val(16));
  Val x77 = (((x49[0][5] + x56) - ((x49[0][5] * Val(2)) * x56)) * Val(32));
  Val x78 = (((x49[0][6] + x57) - ((x49[0][6] * Val(2)) * x57)) * Val(64));
  Val x79 = (((x49[0][7] + x58) - ((x49[0][7] * Val(2)) * x58)) * Val(128));
  Val x80 = (((x49[0][8] + x59) - ((x49[0][8] * Val(2)) * x59)) * Val(256));
  Val x81 = (((x49[0][9] + x60) - ((x49[0][9] * Val(2)) * x60)) * Val(512));
  Val x82 = (((x49[0][10] + x61) - ((x49[0][10] * Val(2)) * x61)) * Val(1024));
  Val x83 = (((x49[0][11] + x62) - ((x49[0][11] * Val(2)) * x62)) * Val(2048));
  Val x84 = (((x49[0][12] + x63) - ((x49[0][12] * Val(2)) * x63)) * Val(4096));
  Val x85 = (((x49[0][13] + x64) - ((x49[0][13] * Val(2)) * x64)) * Val(8192));
  Val x86 = (((x49[0][14] + x65) - ((x49[0][14] * Val(2)) * x65)) * Val(16384));
  Val x87 = (((x49[0][15] + x66) - ((x49[0][15] * Val(2)) * x66)) * Val(32768));
  Val x88 = (((x49[0][16] + x67) - ((x49[0][16] * Val(2)) * x67)) * Val(65536));
  Val x89 = (((x49[0][17] + x68) - ((x49[0][17] * Val(2)) * x68)) * Val(131072));
  Val x90 = (((x49[0][18] + x69) - ((x49[0][18] * Val(2)) * x69)) * Val(262144));
  Val x91 = (((x49[0][19] + x70) - ((x49[0][19] * Val(2)) * x70)) * Val(524288));
  Val x92 = (((x49[0][20] + x71) - ((x49[0][20] * Val(2)) * x71)) * Val(1048576));
  Val x93 = (((x49[0][21] + x72) - ((x49[0][21] * Val(2)) * x72)) * Val(2097152));
  Val x94 = (((x49[0][0] + x51) - ((x49[0][0] * Val(2)) * x51)) + x73);
  Val x95 = ((((((x94 + x74) + x75) + x76) + x77) + x78) + x79);
  Val x96 = ((((((x95 + x80) + x81) + x82) + x83) + x84) + x85);
  Val x97 = ((((((x96 + x86) + x87) + x88) + x89) + x90) + x91);
  // iota_xor_rc(zirgen/circuit/keccak/keccak.zir:810)
  NondetRegStruct21Array x98 = x4._super;
  Val x99 = x98[0]._super;
  Val x100 = x98[1]._super;
  Val x101 = x98[2]._super;
  Val x102 = x98[3]._super;
  Val x103 = x98[4]._super;
  Val x104 = x98[5]._super;
  Val x105 = x98[6]._super;
  Val x106 = x98[7]._super;
  Val x107 = x98[8]._super;
  Val x108 = x98[9]._super;
  Val x109 = x98[10]._super;
  Val x110 = x98[11]._super;
  Val x111 = x98[12]._super;
  Val x112 = x98[13]._super;
  Val x113 = x98[14]._super;
  Val x114 = x98[15]._super;
  Val x115 = x98[16]._super;
  Val x116 = x98[17]._super;
  Val x117 = x98[18]._super;
  Val x118 = x98[19]._super;
  Val x119 = x98[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // iota_xor_rc(zirgen/circuit/keccak/keccak.zir:830)
  Val x120 = (((x49[1][1] + x100) - ((x49[1][1] * Val(2)) * x100)) * Val(2));
  Val x121 = (((x49[1][2] + x101) - ((x49[1][2] * Val(2)) * x101)) * Val(4));
  Val x122 = (((x49[1][3] + x102) - ((x49[1][3] * Val(2)) * x102)) * Val(8));
  Val x123 = (((x49[1][4] + x103) - ((x49[1][4] * Val(2)) * x103)) * Val(16));
  Val x124 = (((x49[1][5] + x104) - ((x49[1][5] * Val(2)) * x104)) * Val(32));
  Val x125 = (((x49[1][6] + x105) - ((x49[1][6] * Val(2)) * x105)) * Val(64));
  Val x126 = (((x49[1][7] + x106) - ((x49[1][7] * Val(2)) * x106)) * Val(128));
  Val x127 = (((x49[1][8] + x107) - ((x49[1][8] * Val(2)) * x107)) * Val(256));
  Val x128 = (((x49[1][9] + x108) - ((x49[1][9] * Val(2)) * x108)) * Val(512));
  Val x129 = (((x49[1][10] + x109) - ((x49[1][10] * Val(2)) * x109)) * Val(1024));
  Val x130 = (((x49[1][11] + x110) - ((x49[1][11] * Val(2)) * x110)) * Val(2048));
  Val x131 = (((x49[1][12] + x111) - ((x49[1][12] * Val(2)) * x111)) * Val(4096));
  Val x132 = (((x49[1][13] + x112) - ((x49[1][13] * Val(2)) * x112)) * Val(8192));
  Val x133 = (((x49[1][14] + x113) - ((x49[1][14] * Val(2)) * x113)) * Val(16384));
  Val x134 = (((x49[1][15] + x114) - ((x49[1][15] * Val(2)) * x114)) * Val(32768));
  Val x135 = (((x49[1][16] + x115) - ((x49[1][16] * Val(2)) * x115)) * Val(65536));
  Val x136 = (((x49[1][17] + x116) - ((x49[1][17] * Val(2)) * x116)) * Val(131072));
  Val x137 = (((x49[1][18] + x117) - ((x49[1][18] * Val(2)) * x117)) * Val(262144));
  Val x138 = (((x49[1][19] + x118) - ((x49[1][19] * Val(2)) * x118)) * Val(524288));
  Val x139 = (((x49[1][20] + x119) - ((x49[1][20] * Val(2)) * x119)) * Val(1048576));
  Val x140 = (((x49[1][0] + x99) - ((x49[1][0] * Val(2)) * x99)) + x120);
  Val x141 = ((((((x140 + x121) + x122) + x123) + x124) + x125) + x126);
  Val x142 = ((((((x141 + x127) + x128) + x129) + x130) + x131) + x132);
  Val x143 = ((((((x142 + x133) + x134) + x135) + x136) + x137) + x138);
  // iota_xor_rc(zirgen/circuit/keccak/keccak.zir:807)
  NondetRegStruct22Array x144 = arg0.arrF;
  Val x145 = x144[0]._super;
  Val x146 = x144[1]._super;
  Val x147 = x144[2]._super;
  Val x148 = x144[3]._super;
  Val x149 = x144[4]._super;
  Val x150 = x144[5]._super;
  Val x151 = x144[6]._super;
  Val x152 = x144[7]._super;
  Val x153 = x144[8]._super;
  Val x154 = x144[9]._super;
  Val x155 = x144[10]._super;
  Val x156 = x144[11]._super;
  Val x157 = x144[12]._super;
  Val x158 = x144[13]._super;
  Val x159 = x144[14]._super;
  Val x160 = x144[15]._super;
  Val x161 = x144[16]._super;
  Val x162 = x144[17]._super;
  Val x163 = x144[18]._super;
  Val x164 = x144[19]._super;
  Val x165 = x144[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // iota_xor_rc(zirgen/circuit/keccak/keccak.zir:831)
  Val x166 = (((x49[2][1] + x146) - ((x49[2][1] * Val(2)) * x146)) * Val(2));
  Val x167 = (((x49[2][2] + x147) - ((x49[2][2] * Val(2)) * x147)) * Val(4));
  Val x168 = (((x49[2][3] + x148) - ((x49[2][3] * Val(2)) * x148)) * Val(8));
  Val x169 = (((x49[2][4] + x149) - ((x49[2][4] * Val(2)) * x149)) * Val(16));
  Val x170 = (((x49[2][5] + x150) - ((x49[2][5] * Val(2)) * x150)) * Val(32));
  Val x171 = (((x49[2][6] + x151) - ((x49[2][6] * Val(2)) * x151)) * Val(64));
  Val x172 = (((x49[2][7] + x152) - ((x49[2][7] * Val(2)) * x152)) * Val(128));
  Val x173 = (((x49[2][8] + x153) - ((x49[2][8] * Val(2)) * x153)) * Val(256));
  Val x174 = (((x49[2][9] + x154) - ((x49[2][9] * Val(2)) * x154)) * Val(512));
  Val x175 = (((x49[2][10] + x155) - ((x49[2][10] * Val(2)) * x155)) * Val(1024));
  Val x176 = (((x49[2][11] + x156) - ((x49[2][11] * Val(2)) * x156)) * Val(2048));
  Val x177 = (((x49[2][12] + x157) - ((x49[2][12] * Val(2)) * x157)) * Val(4096));
  Val x178 = (((x49[2][13] + x158) - ((x49[2][13] * Val(2)) * x158)) * Val(8192));
  Val x179 = (((x49[2][14] + x159) - ((x49[2][14] * Val(2)) * x159)) * Val(16384));
  Val x180 = (((x49[2][15] + x160) - ((x49[2][15] * Val(2)) * x160)) * Val(32768));
  Val x181 = (((x49[2][16] + x161) - ((x49[2][16] * Val(2)) * x161)) * Val(65536));
  Val x182 = (((x49[2][17] + x162) - ((x49[2][17] * Val(2)) * x162)) * Val(131072));
  Val x183 = (((x49[2][18] + x163) - ((x49[2][18] * Val(2)) * x163)) * Val(262144));
  Val x184 = (((x49[2][19] + x164) - ((x49[2][19] * Val(2)) * x164)) * Val(524288));
  Val x185 = (((x49[2][20] + x165) - ((x49[2][20] * Val(2)) * x165)) * Val(1048576));
  Val x186 = (((x49[2][0] + x145) - ((x49[2][0] * Val(2)) * x145)) + x166);
  Val x187 = ((((((x186 + x167) + x168) + x169) + x170) + x171) + x172);
  Val x188 = ((((((x187 + x173) + x174) + x175) + x176) + x177) + x178);
  Val x189 = ((((((x188 + x179) + x180) + x181) + x182) + x183) + x184);
  // iota_xor_rc(zirgen/circuit/keccak/keccak.zir:807)
  NondetRegStruct22Array x190 = arg0.arrE;
  NondetRegStruct22Array x191 = arg0.arrB;
  NondetRegStruct22Array x192 = arg0.arrC;
  // iota_xor_rc(zirgen/circuit/keccak/keccak.zir:835)
  RetTupleStruct x193 = exec_RetTuple(
      ctx,
      Val22Array{((x97 + x92) + x93), (x143 + x139), (x189 + x185), x2[3]._super,  x2[4]._super,
                 x2[5]._super,        x2[6]._super,  x2[7]._super,  x2[8]._super,  x2[9]._super,
                 x2[10]._super,       x2[11]._super, x2[12]._super, x2[13]._super, x2[14]._super,
                 x2[15]._super,       x2[16]._super, x2[17]._super, x2[18]._super, x2[19]._super,
                 x2[20]._super,       x2[21]._super},
      Val22Array{x191[0]._super,  x191[1]._super,  x191[2]._super,  x191[3]._super,
                 x191[4]._super,  x191[5]._super,  x191[6]._super,  x191[7]._super,
                 x191[8]._super,  x191[9]._super,  x191[10]._super, x191[11]._super,
                 x191[12]._super, x191[13]._super, x191[14]._super, x191[15]._super,
                 x191[16]._super, x191[17]._super, x191[18]._super, x191[19]._super,
                 x191[20]._super, x191[21]._super},
      Val22Array{x192[0]._super,  x192[1]._super,  x192[2]._super,  x192[3]._super,
                 x192[4]._super,  x192[5]._super,  x192[6]._super,  x192[7]._super,
                 x192[8]._super,  x192[9]._super,  x192[10]._super, x192[11]._super,
                 x192[12]._super, x192[13]._super, x192[14]._super, x192[15]._super,
                 x192[16]._super, x192[17]._super, x192[18]._super, x192[19]._super,
                 x192[20]._super, x192[21]._super},
      Val24Array{x190[0]._super,  x190[1]._super,  x190[2]._super,  x190[3]._super,
                 x190[4]._super,  x190[5]._super,  x190[6]._super,  x190[7]._super,
                 x190[8]._super,  x190[9]._super,  x190[10]._super, x190[11]._super,
                 x190[12]._super, x190[13]._super, x190[14]._super, x190[15]._super,
                 x190[16]._super, x190[17]._super, x190[18]._super, x190[19]._super,
                 x190[20]._super, x190[21]._super, Val(0),          Val(0)},
      x31,
      x31,
      Val(0),
      x43[0],
      x43[1],
      x43[2],
      arg0.midx._super,
      LAYOUT_LOOKUP(layout1, _super));
  return x193;
}
RetTupleStruct execAbsorbCopy1(ExecContext& ctx,
                               RetTupleStruct arg0,
                               BoundLayout<RetTupleLayout> arg1,
                               BoundLayout<RetTupleLayout> layout2) {
  // absorb_copy1(zirgen/circuit/keccak/keccak.zir:924)
  RetTupleStruct x3 = back_RetTuple(ctx, 1, arg1);
  // absorb_copy1(zirgen/circuit/keccak/keccak.zir:925)
  RetTupleStruct x4 = back_RetTuple(ctx, 2, arg1);
  // absorb_copy1(zirgen/circuit/keccak/keccak.zir:926)
  RetTupleStruct x5 = back_RetTuple(ctx, 3, arg1);
  // absorb_copy1(zirgen/circuit/keccak/keccak.zir:927)
  RetTupleStruct x6 = back_RetTuple(ctx, 4, arg1);
  // absorb_copy1(zirgen/circuit/keccak/keccak.zir:928)
  RetTupleStruct x7 = back_RetTuple(ctx, 5, arg1);
  // absorb_copy1(zirgen/circuit/keccak/keccak.zir:929)
  RetTupleStruct x8 = back_RetTuple(ctx, 6, arg1);
  // absorb_copy1(zirgen/circuit/keccak/keccak.zir:930)
  RetTupleStruct x9 = back_RetTuple(ctx, 7, arg1);
  // absorb_copy1(zirgen/circuit/keccak/keccak.zir:931)
  RetTupleStruct x10 = back_RetTuple(ctx, 8, arg1);
  // absorb_copy1(zirgen/circuit/keccak/keccak.zir:932)
  RetTupleStruct x11 = back_RetTuple(ctx, 9, arg1);
  // absorb_copy1(zirgen/circuit/keccak/keccak.zir:933)
  RetTupleStruct x12 = back_RetTuple(ctx, 10, arg1);
  // absorb_copy1(zirgen/circuit/keccak/keccak.zir:932)
  NondetRegStruct24Array x13 = x11.arrD;
  // absorb_copy1(zirgen/circuit/keccak/keccak.zir:931)
  NondetRegStruct24Array x14 = x10.arrD;
  // absorb_copy1(zirgen/circuit/keccak/keccak.zir:930)
  NondetRegStruct24Array x15 = x9.arrD;
  // absorb_copy1(zirgen/circuit/keccak/keccak.zir:929)
  NondetRegStruct24Array x16 = x8.arrD;
  // absorb_copy1(zirgen/circuit/keccak/keccak.zir:928)
  NondetRegStruct24Array x17 = x7.arrD;
  // absorb_copy1(zirgen/circuit/keccak/keccak.zir:927)
  NondetRegStruct24Array x18 = x6.arrD;
  // absorb_copy1(zirgen/circuit/keccak/keccak.zir:926)
  NondetRegStruct24Array x19 = x5.arrD;
  // absorb_copy1(zirgen/circuit/keccak/keccak.zir:925)
  NondetRegStruct24Array x20 = x4.arrD;
  // absorb_copy1(zirgen/circuit/keccak/keccak.zir:924)
  NondetRegStruct24Array x21 = x3.arrD;
  // absorb_copy1(zirgen/circuit/keccak/keccak.zir:933)
  NondetRegStruct22Array x22 = x12.arrB;
  NondetRegStruct22Array x23 = x12.arrC;
  NondetRegStruct24Array x24 = x12.arrD;
  // absorb_copy1(zirgen/circuit/keccak/keccak.zir:949)
  Val22Array x25 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x26 = exec_RetTuple(
      ctx,
      Val22Array{x13[21]._super, x13[22]._super, x13[23]._super, x14[21]._super, x14[22]._super,
                 x14[23]._super, x15[21]._super, x15[22]._super, x15[23]._super, x16[21]._super,
                 x16[22]._super, x16[23]._super, x17[21]._super, x17[22]._super, x17[23]._super,
                 x18[21]._super, x18[22]._super, x18[23]._super, x19[21]._super, x19[22]._super,
                 x19[23]._super, x20[21]._super},
      Val22Array{x20[22]._super, x20[23]._super, x21[21]._super, x21[22]._super, x21[23]._super,
                 x22[5]._super,  x22[6]._super,  x22[7]._super,  x22[8]._super,  x22[9]._super,
                 x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super},
      Val22Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super},
      Val24Array{x24[0]._super,  x24[1]._super,  x24[2]._super,  x24[3]._super,  x24[4]._super,
                 x24[5]._super,  x24[6]._super,  x24[7]._super,  x24[8]._super,  x24[9]._super,
                 x24[10]._super, x24[11]._super, x24[12]._super, x24[13]._super, x24[14]._super,
                 x24[15]._super, x24[16]._super, x24[17]._super, x24[18]._super, x24[19]._super,
                 x24[20]._super, x24[21]._super, x24[22]._super, x24[23]._super},
      x25,
      x25,
      Val(0),
      Val(16),
      Val(0),
      x3.blk._super,
      x3.midx._super,
      layout2);
  return x26;
}
OneHot_10_Struct
exec_OneHot_10_(ExecContext& ctx, Val arg0, BoundLayout<OneHot_10_Layout> layout1) {
  // OneHot(zirgen/circuit/keccak/one_hot.zir:7)
  NondetRegStruct10Array x2 = map(
      Val10Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5), Val(6), Val(7), Val(8), Val(9)},
      LAYOUT_LOOKUP(layout1, _super),
      std::function(
          [&](Val10Array::value_type x3, BoundLayout<NondetRegLayout10LayoutArray::value_type> x4) {
            NondetRegStruct x5 = exec_NondetBitReg(ctx, isz((x3 - arg0)), x4);
            return x5;
          }));
  // OneHot(zirgen/circuit/keccak/one_hot.zir:9)
  Val x6 = x2[1]._super;
  Val x7 = x2[2]._super;
  Val x8 = x2[3]._super;
  Val x9 = x2[4]._super;
  Val x10 = ((((x2[0]._super + x6) + x7) + x8) + x9);
  Val x11 = x2[5]._super;
  Val x12 = x2[6]._super;
  Val x13 = x2[7]._super;
  Val x14 = x2[8]._super;
  Val x15 = x2[9]._super;
  Val x16 = ((((((x10 + x11) + x12) + x13) + x14) + x15) - Val(1));
  EQZ(x16, "OneHot(zirgen/circuit/keccak/one_hot.zir:9)");
  // OneHot(zirgen/circuit/keccak/one_hot.zir:11)
  Val x17 = ((((((x6 + (x7 * Val(2))) + (x8 * Val(3))) + (x9 * Val(4))) + (x11 * Val(5))) +
              (x12 * Val(6))) +
             (x13 * Val(7)));
  EQZ((((x17 + (x14 * Val(8))) + (x15 * Val(9))) - arg0),
      "OneHot(zirgen/circuit/keccak/one_hot.zir:11)");
  return OneHot_10_Struct{._super = x2};
}
RetTupleStruct execAbsorbWord_0__0_(ExecContext& ctx,
                                    RetTupleStruct arg0,
                                    BoundLayout<AbsorbWord_0__0_Layout> layout1) {
  // absorb_word(zirgen/circuit/keccak/keccak.zir:855)
  NondetRegStruct22Array x2 = arg0.arrA;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:862)
  Val x3 = x2[0]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:874)
  ToBits_22_Struct x4 = exec_ToBits_22_(ctx, x3, LAYOUT_LOOKUP(layout1, unpackA));
  NondetRegStruct22Array x5 = x4._super;
  Val x6 = x5[0]._super;
  Val x7 = x5[1]._super;
  Val x8 = x5[2]._super;
  Val x9 = x5[3]._super;
  Val x10 = x5[4]._super;
  Val x11 = x5[5]._super;
  Val x12 = x5[6]._super;
  Val x13 = x5[7]._super;
  Val x14 = x5[8]._super;
  Val x15 = x5[9]._super;
  Val x16 = x5[10]._super;
  Val x17 = x5[11]._super;
  Val x18 = x5[12]._super;
  Val x19 = x5[13]._super;
  Val x20 = x5[14]._super;
  Val x21 = x5[15]._super;
  Val x22 = x5[16]._super;
  Val x23 = x5[17]._super;
  Val x24 = x5[18]._super;
  Val x25 = x5[19]._super;
  Val x26 = x5[20]._super;
  Val x27 = x5[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:875)
  Val x28 = (x7 * Val(2));
  Val x29 =
      ((((((x6 + x28) + (x8 * Val(4))) + (x9 * Val(8))) + (x10 * Val(16))) + (x11 * Val(32))) +
       (x12 * Val(64)));
  Val x30 =
      ((((((x29 + (x13 * Val(128))) + (x14 * Val(256))) + (x15 * Val(512))) + (x16 * Val(1024))) +
        (x17 * Val(2048))) +
       (x18 * Val(4096)));
  Val x31 = ((((((x30 + (x19 * Val(8192))) + (x20 * Val(16384))) + (x21 * Val(32768))) +
               (x22 * Val(65536))) +
              (x23 * Val(131072))) +
             (x24 * Val(262144)));
  EQZ(((((x31 + (x25 * Val(524288))) + (x26 * Val(1048576))) + (x27 * Val(2097152))) - x3),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:875)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:866)
  Val x32 = x2[1]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:876)
  ToBits_22_Struct x33 = exec_ToBits_22_(ctx, x32, LAYOUT_LOOKUP(layout1, unpackE));
  NondetRegStruct22Array x34 = x33._super;
  Val x35 = x34[0]._super;
  Val x36 = x34[1]._super;
  Val x37 = x34[2]._super;
  Val x38 = x34[3]._super;
  Val x39 = x34[4]._super;
  Val x40 = x34[5]._super;
  Val x41 = x34[6]._super;
  Val x42 = x34[7]._super;
  Val x43 = x34[8]._super;
  Val x44 = x34[9]._super;
  Val x45 = x34[10]._super;
  Val x46 = x34[11]._super;
  Val x47 = x34[12]._super;
  Val x48 = x34[13]._super;
  Val x49 = x34[14]._super;
  Val x50 = x34[15]._super;
  Val x51 = x34[16]._super;
  Val x52 = x34[17]._super;
  Val x53 = x34[18]._super;
  Val x54 = x34[19]._super;
  Val x55 = x34[20]._super;
  Val x56 = x34[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:877)
  Val x57 = (x36 * Val(2));
  Val x58 =
      ((((((x35 + x57) + (x37 * Val(4))) + (x38 * Val(8))) + (x39 * Val(16))) + (x40 * Val(32))) +
       (x41 * Val(64)));
  Val x59 =
      ((((((x58 + (x42 * Val(128))) + (x43 * Val(256))) + (x44 * Val(512))) + (x45 * Val(1024))) +
        (x46 * Val(2048))) +
       (x47 * Val(4096)));
  Val x60 = ((((((x59 + (x48 * Val(8192))) + (x49 * Val(16384))) + (x50 * Val(32768))) +
               (x51 * Val(65536))) +
              (x52 * Val(131072))) +
             (x53 * Val(262144)));
  EQZ(((((x60 + (x54 * Val(524288))) + (x55 * Val(1048576))) + (x56 * Val(2097152))) - x32),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:877)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:870)
  Val x61 = x2[2]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:878)
  ToBits_22_Struct x62 = exec_ToBits_22_(ctx, x61, LAYOUT_LOOKUP(layout1, unpackF));
  NondetRegStruct22Array x63 = x62._super;
  Val x64 = x63[0]._super;
  Val x65 = x63[1]._super;
  Val x66 = x63[2]._super;
  Val x67 = x63[3]._super;
  Val x68 = x63[4]._super;
  Val x69 = x63[5]._super;
  Val x70 = x63[6]._super;
  Val x71 = x63[7]._super;
  Val x72 = x63[8]._super;
  Val x73 = x63[9]._super;
  Val x74 = x63[10]._super;
  Val x75 = x63[11]._super;
  Val x76 = x63[12]._super;
  Val x77 = x63[13]._super;
  Val x78 = x63[14]._super;
  Val x79 = x63[15]._super;
  Val x80 = x63[16]._super;
  Val x81 = x63[17]._super;
  Val x82 = x63[18]._super;
  Val x83 = x63[19]._super;
  Val x84 = x63[20]._super;
  Val x85 = x63[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:879)
  Val x86 = (x65 * Val(2));
  Val x87 =
      ((((((x64 + x86) + (x66 * Val(4))) + (x67 * Val(8))) + (x68 * Val(16))) + (x69 * Val(32))) +
       (x70 * Val(64)));
  Val x88 =
      ((((((x87 + (x71 * Val(128))) + (x72 * Val(256))) + (x73 * Val(512))) + (x74 * Val(1024))) +
        (x75 * Val(2048))) +
       (x76 * Val(4096)));
  Val x89 = ((((((x88 + (x77 * Val(8192))) + (x78 * Val(16384))) + (x79 * Val(32768))) +
               (x80 * Val(65536))) +
              (x81 * Val(131072))) +
             (x82 * Val(262144)));
  EQZ(((((x89 + (x83 * Val(524288))) + (x84 * Val(1048576))) + (x85 * Val(2097152))) - x61),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:879)");
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:881)
  Val x90 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:882)
  ToBits_16_Struct x91 = exec_ToBits_16_(ctx, x90, LAYOUT_LOOKUP(layout1, unpack_1));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:883)
  Val x92 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:884)
  ToBits_16_Struct x93 = exec_ToBits_16_(ctx, x92, LAYOUT_LOOKUP(layout1, unpack_2));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:885)
  Val x94 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:886)
  ToBits_16_Struct x95 = exec_ToBits_16_(ctx, x94, LAYOUT_LOOKUP(layout1, unpack_3));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:887)
  Val x96 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:888)
  ToBits_16_Struct x97 = exec_ToBits_16_(ctx, x96, LAYOUT_LOOKUP(layout1, unpack_4));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:855)
  Val x98 = arg0.midx._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:889)
  Val x99 = (x98 + Val(1));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:890)
  NondetRegStruct x100 = exec_NondetReg(ctx, inv(x99), LAYOUT_LOOKUP(layout1, invmidx));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:891)
  EQZ(((x100._super * x99) - Val(1)), "absorb_word(zirgen/circuit/keccak/keccak.zir:891)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:882)
  NondetRegStruct16Array x101 = x91._super;
  Val x102 = x101[0]._super;
  Val x103 = x101[1]._super;
  Val x104 = x101[2]._super;
  Val x105 = x101[3]._super;
  Val x106 = x101[4]._super;
  Val x107 = x101[5]._super;
  Val x108 = x101[6]._super;
  Val x109 = x101[7]._super;
  Val x110 = x101[8]._super;
  Val x111 = x101[9]._super;
  Val x112 = x101[10]._super;
  Val x113 = x101[11]._super;
  Val x114 = x101[12]._super;
  Val x115 = x101[13]._super;
  Val x116 = x101[14]._super;
  Val x117 = x101[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x118 =
      ((((((x102 + (x103 * Val(2))) + (x104 * Val(4))) + (x105 * Val(8))) + (x106 * Val(16))) +
        (x107 * Val(32))) +
       (x108 * Val(64)));
  Val x119 = ((((((x118 + (x109 * Val(128))) + (x110 * Val(256))) + (x111 * Val(512))) +
                (x112 * Val(1024))) +
               (x113 * Val(2048))) +
              (x114 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:884)
  NondetRegStruct16Array x120 = x93._super;
  Val x121 = x120[0]._super;
  Val x122 = x120[1]._super;
  Val x123 = x120[2]._super;
  Val x124 = x120[3]._super;
  Val x125 = x120[4]._super;
  Val x126 = x120[5]._super;
  Val x127 = x120[6]._super;
  Val x128 = x120[7]._super;
  Val x129 = x120[8]._super;
  Val x130 = x120[9]._super;
  Val x131 = x120[10]._super;
  Val x132 = x120[11]._super;
  Val x133 = x120[12]._super;
  Val x134 = x120[13]._super;
  Val x135 = x120[14]._super;
  Val x136 = x120[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x137 =
      ((((((x121 + (x122 * Val(2))) + (x123 * Val(4))) + (x124 * Val(8))) + (x125 * Val(16))) +
        (x126 * Val(32))) +
       (x127 * Val(64)));
  Val x138 = ((((((x137 + (x128 * Val(128))) + (x129 * Val(256))) + (x130 * Val(512))) +
                (x131 * Val(1024))) +
               (x132 * Val(2048))) +
              (x133 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:886)
  NondetRegStruct16Array x139 = x95._super;
  Val x140 = x139[0]._super;
  Val x141 = x139[1]._super;
  Val x142 = x139[2]._super;
  Val x143 = x139[3]._super;
  Val x144 = x139[4]._super;
  Val x145 = x139[5]._super;
  Val x146 = x139[6]._super;
  Val x147 = x139[7]._super;
  Val x148 = x139[8]._super;
  Val x149 = x139[9]._super;
  Val x150 = x139[10]._super;
  Val x151 = x139[11]._super;
  Val x152 = x139[12]._super;
  Val x153 = x139[13]._super;
  Val x154 = x139[14]._super;
  Val x155 = x139[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x156 =
      ((((((x140 + (x141 * Val(2))) + (x142 * Val(4))) + (x143 * Val(8))) + (x144 * Val(16))) +
        (x145 * Val(32))) +
       (x146 * Val(64)));
  Val x157 = ((((((x156 + (x147 * Val(128))) + (x148 * Val(256))) + (x149 * Val(512))) +
                (x150 * Val(1024))) +
               (x151 * Val(2048))) +
              (x152 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:888)
  NondetRegStruct16Array x158 = x97._super;
  Val x159 = x158[0]._super;
  Val x160 = x158[1]._super;
  Val x161 = x158[2]._super;
  Val x162 = x158[3]._super;
  Val x163 = x158[4]._super;
  Val x164 = x158[5]._super;
  Val x165 = x158[6]._super;
  Val x166 = x158[7]._super;
  Val x167 = x158[8]._super;
  Val x168 = x158[9]._super;
  Val x169 = x158[10]._super;
  Val x170 = x158[11]._super;
  Val x171 = x158[12]._super;
  Val x172 = x158[13]._super;
  Val x173 = x158[14]._super;
  Val x174 = x158[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x175 =
      ((((((x159 + (x160 * Val(2))) + (x161 * Val(4))) + (x162 * Val(8))) + (x163 * Val(16))) +
        (x164 * Val(32))) +
       (x165 * Val(64)));
  Val x176 = ((((((x175 + (x166 * Val(128))) + (x167 * Val(256))) + (x168 * Val(512))) +
                (x169 * Val(1024))) +
               (x170 * Val(2048))) +
              (x171 * Val(4096)));
  WriteMemoryStruct x177 = exec_WriteMemory(
      ctx,
      x99,
      MemDigestStruct{
          ._super =
              Val4Array{
                  (((x119 + (x115 * Val(8192))) + (x116 * Val(16384))) + (x117 * Val(32768))),
                  (((x138 + (x134 * Val(8192))) + (x135 * Val(16384))) + (x136 * Val(32768))),
                  (((x157 + (x153 * Val(8192))) + (x154 * Val(16384))) + (x155 * Val(32768))),
                  (((x176 + (x172 * Val(8192))) + (x173 * Val(16384))) + (x174 * Val(32768)))}},
      LAYOUT_LOOKUP(layout1, _0));
  // xor2(zirgen/circuit/keccak/keccak.zir:114)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:897)
  Val x178 = ((x6 + x102) - ((x6 * Val(2)) * x102));
  Val x179 = ((x7 + x103) - (x28 * x103));
  Val x180 = ((x8 + x104) - ((x8 * Val(2)) * x104));
  Val x181 = ((x9 + x105) - ((x9 * Val(2)) * x105));
  Val x182 = ((x10 + x106) - ((x10 * Val(2)) * x106));
  Val x183 = ((x11 + x107) - ((x11 * Val(2)) * x107));
  Val x184 = ((x12 + x108) - ((x12 * Val(2)) * x108));
  Val x185 = ((x13 + x109) - ((x13 * Val(2)) * x109));
  Val x186 = ((x14 + x110) - ((x14 * Val(2)) * x110));
  Val x187 = ((x15 + x111) - ((x15 * Val(2)) * x111));
  Val x188 = ((x16 + x112) - ((x16 * Val(2)) * x112));
  Val x189 = ((x17 + x113) - ((x17 * Val(2)) * x113));
  Val x190 = ((x18 + x114) - ((x18 * Val(2)) * x114));
  Val x191 = ((x19 + x115) - ((x19 * Val(2)) * x115));
  Val x192 = ((x20 + x116) - ((x20 * Val(2)) * x116));
  Val x193 = ((x21 + x117) - ((x21 * Val(2)) * x117));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:898)
  Val x194 = ((x22 + x121) - ((x22 * Val(2)) * x121));
  Val x195 = ((x23 + x122) - ((x23 * Val(2)) * x122));
  Val x196 = ((x24 + x123) - ((x24 * Val(2)) * x123));
  Val x197 = ((x25 + x124) - ((x25 * Val(2)) * x124));
  Val x198 = ((x26 + x125) - ((x26 * Val(2)) * x125));
  Val x199 = ((x27 + x126) - ((x27 * Val(2)) * x126));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:902)
  Val x200 = ((x35 + x127) - ((x35 * Val(2)) * x127));
  Val x201 = ((x36 + x128) - (x57 * x128));
  Val x202 = ((x37 + x129) - ((x37 * Val(2)) * x129));
  Val x203 = ((x38 + x130) - ((x38 * Val(2)) * x130));
  Val x204 = ((x39 + x131) - ((x39 * Val(2)) * x131));
  Val x205 = ((x40 + x132) - ((x40 * Val(2)) * x132));
  Val x206 = ((x41 + x133) - ((x41 * Val(2)) * x133));
  Val x207 = ((x42 + x134) - ((x42 * Val(2)) * x134));
  Val x208 = ((x43 + x135) - ((x43 * Val(2)) * x135));
  Val x209 = ((x44 + x136) - ((x44 * Val(2)) * x136));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:903)
  Val x210 = ((x45 + x140) - ((x45 * Val(2)) * x140));
  Val x211 = ((x46 + x141) - ((x46 * Val(2)) * x141));
  Val x212 = ((x47 + x142) - ((x47 * Val(2)) * x142));
  Val x213 = ((x48 + x143) - ((x48 * Val(2)) * x143));
  Val x214 = ((x49 + x144) - ((x49 * Val(2)) * x144));
  Val x215 = ((x50 + x145) - ((x50 * Val(2)) * x145));
  Val x216 = ((x51 + x146) - ((x51 * Val(2)) * x146));
  Val x217 = ((x52 + x147) - ((x52 * Val(2)) * x147));
  Val x218 = ((x53 + x148) - ((x53 * Val(2)) * x148));
  Val x219 = ((x54 + x149) - ((x54 * Val(2)) * x149));
  Val x220 = ((x55 + x150) - ((x55 * Val(2)) * x150));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:907)
  Val x221 = ((x64 + x151) - ((x64 * Val(2)) * x151));
  Val x222 = ((x65 + x152) - (x86 * x152));
  Val x223 = ((x66 + x153) - ((x66 * Val(2)) * x153));
  Val x224 = ((x67 + x154) - ((x67 * Val(2)) * x154));
  Val x225 = ((x68 + x155) - ((x68 * Val(2)) * x155));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:908)
  Val x226 = ((x69 + x159) - ((x69 * Val(2)) * x159));
  Val x227 = ((x70 + x160) - ((x70 * Val(2)) * x160));
  Val x228 = ((x71 + x161) - ((x71 * Val(2)) * x161));
  Val x229 = ((x72 + x162) - ((x72 * Val(2)) * x162));
  Val x230 = ((x73 + x163) - ((x73 * Val(2)) * x163));
  Val x231 = ((x74 + x164) - ((x74 * Val(2)) * x164));
  Val x232 = ((x75 + x165) - ((x75 * Val(2)) * x165));
  Val x233 = ((x76 + x166) - ((x76 * Val(2)) * x166));
  Val x234 = ((x77 + x167) - ((x77 * Val(2)) * x167));
  Val x235 = ((x78 + x168) - ((x78 * Val(2)) * x168));
  Val x236 = ((x79 + x169) - ((x79 * Val(2)) * x169));
  Val x237 = ((x80 + x170) - ((x80 * Val(2)) * x170));
  Val x238 = ((x81 + x171) - ((x81 * Val(2)) * x171));
  Val x239 = ((x82 + x172) - ((x82 * Val(2)) * x172));
  Val x240 = ((x83 + x173) - ((x83 * Val(2)) * x173));
  Val x241 = ((x84 + x174) - ((x84 * Val(2)) * x174));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:911)
  Val x242 =
      ((((((x178 + (x179 * Val(2))) + (x180 * Val(4))) + (x181 * Val(8))) + (x182 * Val(16))) +
        (x183 * Val(32))) +
       (x184 * Val(64)));
  Val x243 = ((((((x242 + (x185 * Val(128))) + (x186 * Val(256))) + (x187 * Val(512))) +
                (x188 * Val(1024))) +
               (x189 * Val(2048))) +
              (x190 * Val(4096)));
  Val x244 = ((((((x243 + (x191 * Val(8192))) + (x192 * Val(16384))) + (x193 * Val(32768))) +
                (x194 * Val(65536))) +
               (x195 * Val(131072))) +
              (x196 * Val(262144)));
  Val x245 =
      ((((((x200 + (x201 * Val(2))) + (x202 * Val(4))) + (x203 * Val(8))) + (x204 * Val(16))) +
        (x205 * Val(32))) +
       (x206 * Val(64)));
  Val x246 = ((((((x245 + (x207 * Val(128))) + (x208 * Val(256))) + (x209 * Val(512))) +
                (x210 * Val(1024))) +
               (x211 * Val(2048))) +
              (x212 * Val(4096)));
  Val x247 = ((((((x246 + (x213 * Val(8192))) + (x214 * Val(16384))) + (x215 * Val(32768))) +
                (x216 * Val(65536))) +
               (x217 * Val(131072))) +
              (x218 * Val(262144)));
  Val x248 =
      ((((((x221 + (x222 * Val(2))) + (x223 * Val(4))) + (x224 * Val(8))) + (x225 * Val(16))) +
        (x226 * Val(32))) +
       (x227 * Val(64)));
  Val x249 = ((((((x248 + (x228 * Val(128))) + (x229 * Val(256))) + (x230 * Val(512))) +
                (x231 * Val(1024))) +
               (x232 * Val(2048))) +
              (x233 * Val(4096)));
  Val x250 = ((((((x249 + (x234 * Val(8192))) + (x235 * Val(16384))) + (x236 * Val(32768))) +
                (x237 * Val(65536))) +
               (x238 * Val(131072))) +
              (x239 * Val(262144)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:919)
  RetTupleStruct x251 = exec_RetTuple(
      ctx,
      Val22Array{x6,  x7,  x8,  x9,  x10, x11, x12, x13, x14, x15, x16,
                 x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27},
      Val22Array{x178, x179, x180, x181, x182, x183, x184, x185, x186, x187, x188,
                 x189, x190, x191, x192, x193, x194, x195, x196, x197, x198, x199},
      Val22Array{x200, x201, x202, x203, x204, x205, x206, x207, x208, x209, x210,
                 x211, x212, x213, x214, x215, x216, x217, x218, x219, x220, Val(0)},
      Val24Array{x221,
                 x222,
                 x223,
                 x224,
                 x225,
                 x226,
                 x227,
                 x228,
                 x229,
                 x230,
                 x231,
                 x232,
                 x233,
                 x234,
                 x235,
                 x236,
                 x237,
                 x238,
                 x239,
                 x240,
                 x241,
                 (((x244 + (x197 * Val(524288))) + (x198 * Val(1048576))) + (x199 * Val(2097152))),
                 ((x247 + (x219 * Val(524288))) + (x220 * Val(1048576))),
                 ((x250 + (x240 * Val(524288))) + (x241 * Val(1048576)))},
      Val22Array{x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45,
                 x46, x47, x48, x49, x50, x51, x52, x53, x54, x55, x56},
      Val22Array{x64, x65, x66, x67, x68, x69, x70, x71, x72, x73, x74,
                 x75, x76, x77, x78, x79, x80, x81, x82, x83, x84, x85},
      Val(1),
      Val(15),
      Val(0),
      arg0.blk._super,
      x98,
      LAYOUT_LOOKUP(layout1, _super));
  return x251;
}
RetTupleStruct execAbsorbWord_1__0_(ExecContext& ctx,
                                    RetTupleStruct arg0,
                                    BoundLayout<AbsorbWord_1__0_Layout> layout1) {
  // absorb_word(zirgen/circuit/keccak/keccak.zir:855)
  NondetRegStruct22Array x2 = arg0.arrA;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:862)
  Val x3 = x2[3]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:874)
  ToBits_22_Struct x4 = exec_ToBits_22_(ctx, x3, LAYOUT_LOOKUP(layout1, unpackA));
  NondetRegStruct22Array x5 = x4._super;
  Val x6 = x5[0]._super;
  Val x7 = x5[1]._super;
  Val x8 = x5[2]._super;
  Val x9 = x5[3]._super;
  Val x10 = x5[4]._super;
  Val x11 = x5[5]._super;
  Val x12 = x5[6]._super;
  Val x13 = x5[7]._super;
  Val x14 = x5[8]._super;
  Val x15 = x5[9]._super;
  Val x16 = x5[10]._super;
  Val x17 = x5[11]._super;
  Val x18 = x5[12]._super;
  Val x19 = x5[13]._super;
  Val x20 = x5[14]._super;
  Val x21 = x5[15]._super;
  Val x22 = x5[16]._super;
  Val x23 = x5[17]._super;
  Val x24 = x5[18]._super;
  Val x25 = x5[19]._super;
  Val x26 = x5[20]._super;
  Val x27 = x5[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:875)
  Val x28 = (x7 * Val(2));
  Val x29 =
      ((((((x6 + x28) + (x8 * Val(4))) + (x9 * Val(8))) + (x10 * Val(16))) + (x11 * Val(32))) +
       (x12 * Val(64)));
  Val x30 =
      ((((((x29 + (x13 * Val(128))) + (x14 * Val(256))) + (x15 * Val(512))) + (x16 * Val(1024))) +
        (x17 * Val(2048))) +
       (x18 * Val(4096)));
  Val x31 = ((((((x30 + (x19 * Val(8192))) + (x20 * Val(16384))) + (x21 * Val(32768))) +
               (x22 * Val(65536))) +
              (x23 * Val(131072))) +
             (x24 * Val(262144)));
  EQZ(((((x31 + (x25 * Val(524288))) + (x26 * Val(1048576))) + (x27 * Val(2097152))) - x3),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:875)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:866)
  Val x32 = x2[4]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:876)
  ToBits_22_Struct x33 = exec_ToBits_22_(ctx, x32, LAYOUT_LOOKUP(layout1, unpackE));
  NondetRegStruct22Array x34 = x33._super;
  Val x35 = x34[0]._super;
  Val x36 = x34[1]._super;
  Val x37 = x34[2]._super;
  Val x38 = x34[3]._super;
  Val x39 = x34[4]._super;
  Val x40 = x34[5]._super;
  Val x41 = x34[6]._super;
  Val x42 = x34[7]._super;
  Val x43 = x34[8]._super;
  Val x44 = x34[9]._super;
  Val x45 = x34[10]._super;
  Val x46 = x34[11]._super;
  Val x47 = x34[12]._super;
  Val x48 = x34[13]._super;
  Val x49 = x34[14]._super;
  Val x50 = x34[15]._super;
  Val x51 = x34[16]._super;
  Val x52 = x34[17]._super;
  Val x53 = x34[18]._super;
  Val x54 = x34[19]._super;
  Val x55 = x34[20]._super;
  Val x56 = x34[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:877)
  Val x57 = (x36 * Val(2));
  Val x58 =
      ((((((x35 + x57) + (x37 * Val(4))) + (x38 * Val(8))) + (x39 * Val(16))) + (x40 * Val(32))) +
       (x41 * Val(64)));
  Val x59 =
      ((((((x58 + (x42 * Val(128))) + (x43 * Val(256))) + (x44 * Val(512))) + (x45 * Val(1024))) +
        (x46 * Val(2048))) +
       (x47 * Val(4096)));
  Val x60 = ((((((x59 + (x48 * Val(8192))) + (x49 * Val(16384))) + (x50 * Val(32768))) +
               (x51 * Val(65536))) +
              (x52 * Val(131072))) +
             (x53 * Val(262144)));
  EQZ(((((x60 + (x54 * Val(524288))) + (x55 * Val(1048576))) + (x56 * Val(2097152))) - x32),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:877)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:870)
  Val x61 = x2[5]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:878)
  ToBits_22_Struct x62 = exec_ToBits_22_(ctx, x61, LAYOUT_LOOKUP(layout1, unpackF));
  NondetRegStruct22Array x63 = x62._super;
  Val x64 = x63[0]._super;
  Val x65 = x63[1]._super;
  Val x66 = x63[2]._super;
  Val x67 = x63[3]._super;
  Val x68 = x63[4]._super;
  Val x69 = x63[5]._super;
  Val x70 = x63[6]._super;
  Val x71 = x63[7]._super;
  Val x72 = x63[8]._super;
  Val x73 = x63[9]._super;
  Val x74 = x63[10]._super;
  Val x75 = x63[11]._super;
  Val x76 = x63[12]._super;
  Val x77 = x63[13]._super;
  Val x78 = x63[14]._super;
  Val x79 = x63[15]._super;
  Val x80 = x63[16]._super;
  Val x81 = x63[17]._super;
  Val x82 = x63[18]._super;
  Val x83 = x63[19]._super;
  Val x84 = x63[20]._super;
  Val x85 = x63[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:879)
  Val x86 = (x65 * Val(2));
  Val x87 =
      ((((((x64 + x86) + (x66 * Val(4))) + (x67 * Val(8))) + (x68 * Val(16))) + (x69 * Val(32))) +
       (x70 * Val(64)));
  Val x88 =
      ((((((x87 + (x71 * Val(128))) + (x72 * Val(256))) + (x73 * Val(512))) + (x74 * Val(1024))) +
        (x75 * Val(2048))) +
       (x76 * Val(4096)));
  Val x89 = ((((((x88 + (x77 * Val(8192))) + (x78 * Val(16384))) + (x79 * Val(32768))) +
               (x80 * Val(65536))) +
              (x81 * Val(131072))) +
             (x82 * Val(262144)));
  EQZ(((((x89 + (x83 * Val(524288))) + (x84 * Val(1048576))) + (x85 * Val(2097152))) - x61),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:879)");
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:881)
  Val x90 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:882)
  ToBits_16_Struct x91 = exec_ToBits_16_(ctx, x90, LAYOUT_LOOKUP(layout1, unpack_1));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:883)
  Val x92 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:884)
  ToBits_16_Struct x93 = exec_ToBits_16_(ctx, x92, LAYOUT_LOOKUP(layout1, unpack_2));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:885)
  Val x94 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:886)
  ToBits_16_Struct x95 = exec_ToBits_16_(ctx, x94, LAYOUT_LOOKUP(layout1, unpack_3));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:887)
  Val x96 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:888)
  ToBits_16_Struct x97 = exec_ToBits_16_(ctx, x96, LAYOUT_LOOKUP(layout1, unpack_4));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:855)
  Val x98 = arg0.midx._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:889)
  Val x99 = ((x98 + Val(1)) + Val(1));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:890)
  NondetRegStruct x100 = exec_NondetReg(ctx, inv(x99), LAYOUT_LOOKUP(layout1, invmidx));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:891)
  EQZ(((x100._super * x99) - Val(1)), "absorb_word(zirgen/circuit/keccak/keccak.zir:891)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:882)
  NondetRegStruct16Array x101 = x91._super;
  Val x102 = x101[0]._super;
  Val x103 = x101[1]._super;
  Val x104 = x101[2]._super;
  Val x105 = x101[3]._super;
  Val x106 = x101[4]._super;
  Val x107 = x101[5]._super;
  Val x108 = x101[6]._super;
  Val x109 = x101[7]._super;
  Val x110 = x101[8]._super;
  Val x111 = x101[9]._super;
  Val x112 = x101[10]._super;
  Val x113 = x101[11]._super;
  Val x114 = x101[12]._super;
  Val x115 = x101[13]._super;
  Val x116 = x101[14]._super;
  Val x117 = x101[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x118 =
      ((((((x102 + (x103 * Val(2))) + (x104 * Val(4))) + (x105 * Val(8))) + (x106 * Val(16))) +
        (x107 * Val(32))) +
       (x108 * Val(64)));
  Val x119 = ((((((x118 + (x109 * Val(128))) + (x110 * Val(256))) + (x111 * Val(512))) +
                (x112 * Val(1024))) +
               (x113 * Val(2048))) +
              (x114 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:884)
  NondetRegStruct16Array x120 = x93._super;
  Val x121 = x120[0]._super;
  Val x122 = x120[1]._super;
  Val x123 = x120[2]._super;
  Val x124 = x120[3]._super;
  Val x125 = x120[4]._super;
  Val x126 = x120[5]._super;
  Val x127 = x120[6]._super;
  Val x128 = x120[7]._super;
  Val x129 = x120[8]._super;
  Val x130 = x120[9]._super;
  Val x131 = x120[10]._super;
  Val x132 = x120[11]._super;
  Val x133 = x120[12]._super;
  Val x134 = x120[13]._super;
  Val x135 = x120[14]._super;
  Val x136 = x120[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x137 =
      ((((((x121 + (x122 * Val(2))) + (x123 * Val(4))) + (x124 * Val(8))) + (x125 * Val(16))) +
        (x126 * Val(32))) +
       (x127 * Val(64)));
  Val x138 = ((((((x137 + (x128 * Val(128))) + (x129 * Val(256))) + (x130 * Val(512))) +
                (x131 * Val(1024))) +
               (x132 * Val(2048))) +
              (x133 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:886)
  NondetRegStruct16Array x139 = x95._super;
  Val x140 = x139[0]._super;
  Val x141 = x139[1]._super;
  Val x142 = x139[2]._super;
  Val x143 = x139[3]._super;
  Val x144 = x139[4]._super;
  Val x145 = x139[5]._super;
  Val x146 = x139[6]._super;
  Val x147 = x139[7]._super;
  Val x148 = x139[8]._super;
  Val x149 = x139[9]._super;
  Val x150 = x139[10]._super;
  Val x151 = x139[11]._super;
  Val x152 = x139[12]._super;
  Val x153 = x139[13]._super;
  Val x154 = x139[14]._super;
  Val x155 = x139[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x156 =
      ((((((x140 + (x141 * Val(2))) + (x142 * Val(4))) + (x143 * Val(8))) + (x144 * Val(16))) +
        (x145 * Val(32))) +
       (x146 * Val(64)));
  Val x157 = ((((((x156 + (x147 * Val(128))) + (x148 * Val(256))) + (x149 * Val(512))) +
                (x150 * Val(1024))) +
               (x151 * Val(2048))) +
              (x152 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:888)
  NondetRegStruct16Array x158 = x97._super;
  Val x159 = x158[0]._super;
  Val x160 = x158[1]._super;
  Val x161 = x158[2]._super;
  Val x162 = x158[3]._super;
  Val x163 = x158[4]._super;
  Val x164 = x158[5]._super;
  Val x165 = x158[6]._super;
  Val x166 = x158[7]._super;
  Val x167 = x158[8]._super;
  Val x168 = x158[9]._super;
  Val x169 = x158[10]._super;
  Val x170 = x158[11]._super;
  Val x171 = x158[12]._super;
  Val x172 = x158[13]._super;
  Val x173 = x158[14]._super;
  Val x174 = x158[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x175 =
      ((((((x159 + (x160 * Val(2))) + (x161 * Val(4))) + (x162 * Val(8))) + (x163 * Val(16))) +
        (x164 * Val(32))) +
       (x165 * Val(64)));
  Val x176 = ((((((x175 + (x166 * Val(128))) + (x167 * Val(256))) + (x168 * Val(512))) +
                (x169 * Val(1024))) +
               (x170 * Val(2048))) +
              (x171 * Val(4096)));
  WriteMemoryStruct x177 = exec_WriteMemory(
      ctx,
      x99,
      MemDigestStruct{
          ._super =
              Val4Array{
                  (((x119 + (x115 * Val(8192))) + (x116 * Val(16384))) + (x117 * Val(32768))),
                  (((x138 + (x134 * Val(8192))) + (x135 * Val(16384))) + (x136 * Val(32768))),
                  (((x157 + (x153 * Val(8192))) + (x154 * Val(16384))) + (x155 * Val(32768))),
                  (((x176 + (x172 * Val(8192))) + (x173 * Val(16384))) + (x174 * Val(32768)))}},
      LAYOUT_LOOKUP(layout1, _0));
  // xor2(zirgen/circuit/keccak/keccak.zir:114)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:897)
  Val x178 = ((x6 + x102) - ((x6 * Val(2)) * x102));
  Val x179 = ((x7 + x103) - (x28 * x103));
  Val x180 = ((x8 + x104) - ((x8 * Val(2)) * x104));
  Val x181 = ((x9 + x105) - ((x9 * Val(2)) * x105));
  Val x182 = ((x10 + x106) - ((x10 * Val(2)) * x106));
  Val x183 = ((x11 + x107) - ((x11 * Val(2)) * x107));
  Val x184 = ((x12 + x108) - ((x12 * Val(2)) * x108));
  Val x185 = ((x13 + x109) - ((x13 * Val(2)) * x109));
  Val x186 = ((x14 + x110) - ((x14 * Val(2)) * x110));
  Val x187 = ((x15 + x111) - ((x15 * Val(2)) * x111));
  Val x188 = ((x16 + x112) - ((x16 * Val(2)) * x112));
  Val x189 = ((x17 + x113) - ((x17 * Val(2)) * x113));
  Val x190 = ((x18 + x114) - ((x18 * Val(2)) * x114));
  Val x191 = ((x19 + x115) - ((x19 * Val(2)) * x115));
  Val x192 = ((x20 + x116) - ((x20 * Val(2)) * x116));
  Val x193 = ((x21 + x117) - ((x21 * Val(2)) * x117));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:898)
  Val x194 = ((x22 + x121) - ((x22 * Val(2)) * x121));
  Val x195 = ((x23 + x122) - ((x23 * Val(2)) * x122));
  Val x196 = ((x24 + x123) - ((x24 * Val(2)) * x123));
  Val x197 = ((x25 + x124) - ((x25 * Val(2)) * x124));
  Val x198 = ((x26 + x125) - ((x26 * Val(2)) * x125));
  Val x199 = ((x27 + x126) - ((x27 * Val(2)) * x126));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:902)
  Val x200 = ((x35 + x127) - ((x35 * Val(2)) * x127));
  Val x201 = ((x36 + x128) - (x57 * x128));
  Val x202 = ((x37 + x129) - ((x37 * Val(2)) * x129));
  Val x203 = ((x38 + x130) - ((x38 * Val(2)) * x130));
  Val x204 = ((x39 + x131) - ((x39 * Val(2)) * x131));
  Val x205 = ((x40 + x132) - ((x40 * Val(2)) * x132));
  Val x206 = ((x41 + x133) - ((x41 * Val(2)) * x133));
  Val x207 = ((x42 + x134) - ((x42 * Val(2)) * x134));
  Val x208 = ((x43 + x135) - ((x43 * Val(2)) * x135));
  Val x209 = ((x44 + x136) - ((x44 * Val(2)) * x136));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:903)
  Val x210 = ((x45 + x140) - ((x45 * Val(2)) * x140));
  Val x211 = ((x46 + x141) - ((x46 * Val(2)) * x141));
  Val x212 = ((x47 + x142) - ((x47 * Val(2)) * x142));
  Val x213 = ((x48 + x143) - ((x48 * Val(2)) * x143));
  Val x214 = ((x49 + x144) - ((x49 * Val(2)) * x144));
  Val x215 = ((x50 + x145) - ((x50 * Val(2)) * x145));
  Val x216 = ((x51 + x146) - ((x51 * Val(2)) * x146));
  Val x217 = ((x52 + x147) - ((x52 * Val(2)) * x147));
  Val x218 = ((x53 + x148) - ((x53 * Val(2)) * x148));
  Val x219 = ((x54 + x149) - ((x54 * Val(2)) * x149));
  Val x220 = ((x55 + x150) - ((x55 * Val(2)) * x150));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:907)
  Val x221 = ((x64 + x151) - ((x64 * Val(2)) * x151));
  Val x222 = ((x65 + x152) - (x86 * x152));
  Val x223 = ((x66 + x153) - ((x66 * Val(2)) * x153));
  Val x224 = ((x67 + x154) - ((x67 * Val(2)) * x154));
  Val x225 = ((x68 + x155) - ((x68 * Val(2)) * x155));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:908)
  Val x226 = ((x69 + x159) - ((x69 * Val(2)) * x159));
  Val x227 = ((x70 + x160) - ((x70 * Val(2)) * x160));
  Val x228 = ((x71 + x161) - ((x71 * Val(2)) * x161));
  Val x229 = ((x72 + x162) - ((x72 * Val(2)) * x162));
  Val x230 = ((x73 + x163) - ((x73 * Val(2)) * x163));
  Val x231 = ((x74 + x164) - ((x74 * Val(2)) * x164));
  Val x232 = ((x75 + x165) - ((x75 * Val(2)) * x165));
  Val x233 = ((x76 + x166) - ((x76 * Val(2)) * x166));
  Val x234 = ((x77 + x167) - ((x77 * Val(2)) * x167));
  Val x235 = ((x78 + x168) - ((x78 * Val(2)) * x168));
  Val x236 = ((x79 + x169) - ((x79 * Val(2)) * x169));
  Val x237 = ((x80 + x170) - ((x80 * Val(2)) * x170));
  Val x238 = ((x81 + x171) - ((x81 * Val(2)) * x171));
  Val x239 = ((x82 + x172) - ((x82 * Val(2)) * x172));
  Val x240 = ((x83 + x173) - ((x83 * Val(2)) * x173));
  Val x241 = ((x84 + x174) - ((x84 * Val(2)) * x174));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:911)
  Val x242 =
      ((((((x178 + (x179 * Val(2))) + (x180 * Val(4))) + (x181 * Val(8))) + (x182 * Val(16))) +
        (x183 * Val(32))) +
       (x184 * Val(64)));
  Val x243 = ((((((x242 + (x185 * Val(128))) + (x186 * Val(256))) + (x187 * Val(512))) +
                (x188 * Val(1024))) +
               (x189 * Val(2048))) +
              (x190 * Val(4096)));
  Val x244 = ((((((x243 + (x191 * Val(8192))) + (x192 * Val(16384))) + (x193 * Val(32768))) +
                (x194 * Val(65536))) +
               (x195 * Val(131072))) +
              (x196 * Val(262144)));
  Val x245 =
      ((((((x200 + (x201 * Val(2))) + (x202 * Val(4))) + (x203 * Val(8))) + (x204 * Val(16))) +
        (x205 * Val(32))) +
       (x206 * Val(64)));
  Val x246 = ((((((x245 + (x207 * Val(128))) + (x208 * Val(256))) + (x209 * Val(512))) +
                (x210 * Val(1024))) +
               (x211 * Val(2048))) +
              (x212 * Val(4096)));
  Val x247 = ((((((x246 + (x213 * Val(8192))) + (x214 * Val(16384))) + (x215 * Val(32768))) +
                (x216 * Val(65536))) +
               (x217 * Val(131072))) +
              (x218 * Val(262144)));
  Val x248 =
      ((((((x221 + (x222 * Val(2))) + (x223 * Val(4))) + (x224 * Val(8))) + (x225 * Val(16))) +
        (x226 * Val(32))) +
       (x227 * Val(64)));
  Val x249 = ((((((x248 + (x228 * Val(128))) + (x229 * Val(256))) + (x230 * Val(512))) +
                (x231 * Val(1024))) +
               (x232 * Val(2048))) +
              (x233 * Val(4096)));
  Val x250 = ((((((x249 + (x234 * Val(8192))) + (x235 * Val(16384))) + (x236 * Val(32768))) +
                (x237 * Val(65536))) +
               (x238 * Val(131072))) +
              (x239 * Val(262144)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:919)
  RetTupleStruct x251 = exec_RetTuple(
      ctx,
      Val22Array{x6,  x7,  x8,  x9,  x10, x11, x12, x13, x14, x15, x16,
                 x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27},
      Val22Array{x178, x179, x180, x181, x182, x183, x184, x185, x186, x187, x188,
                 x189, x190, x191, x192, x193, x194, x195, x196, x197, x198, x199},
      Val22Array{x200, x201, x202, x203, x204, x205, x206, x207, x208, x209, x210,
                 x211, x212, x213, x214, x215, x216, x217, x218, x219, x220, Val(0)},
      Val24Array{x221,
                 x222,
                 x223,
                 x224,
                 x225,
                 x226,
                 x227,
                 x228,
                 x229,
                 x230,
                 x231,
                 x232,
                 x233,
                 x234,
                 x235,
                 x236,
                 x237,
                 x238,
                 x239,
                 x240,
                 x241,
                 (((x244 + (x197 * Val(524288))) + (x198 * Val(1048576))) + (x199 * Val(2097152))),
                 ((x247 + (x219 * Val(524288))) + (x220 * Val(1048576))),
                 ((x250 + (x240 * Val(524288))) + (x241 * Val(1048576)))},
      Val22Array{x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45,
                 x46, x47, x48, x49, x50, x51, x52, x53, x54, x55, x56},
      Val22Array{x64, x65, x66, x67, x68, x69, x70, x71, x72, x73, x74,
                 x75, x76, x77, x78, x79, x80, x81, x82, x83, x84, x85},
      Val(2),
      Val(15),
      Val(0),
      arg0.blk._super,
      x98,
      LAYOUT_LOOKUP(layout1, _super));
  return x251;
}
RetTupleStruct execAbsorbWord_2__0_(ExecContext& ctx,
                                    RetTupleStruct arg0,
                                    BoundLayout<AbsorbWord_2__0_Layout> layout1) {
  // absorb_word(zirgen/circuit/keccak/keccak.zir:855)
  NondetRegStruct22Array x2 = arg0.arrA;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:862)
  Val x3 = x2[6]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:874)
  ToBits_22_Struct x4 = exec_ToBits_22_(ctx, x3, LAYOUT_LOOKUP(layout1, unpackA));
  NondetRegStruct22Array x5 = x4._super;
  Val x6 = x5[0]._super;
  Val x7 = x5[1]._super;
  Val x8 = x5[2]._super;
  Val x9 = x5[3]._super;
  Val x10 = x5[4]._super;
  Val x11 = x5[5]._super;
  Val x12 = x5[6]._super;
  Val x13 = x5[7]._super;
  Val x14 = x5[8]._super;
  Val x15 = x5[9]._super;
  Val x16 = x5[10]._super;
  Val x17 = x5[11]._super;
  Val x18 = x5[12]._super;
  Val x19 = x5[13]._super;
  Val x20 = x5[14]._super;
  Val x21 = x5[15]._super;
  Val x22 = x5[16]._super;
  Val x23 = x5[17]._super;
  Val x24 = x5[18]._super;
  Val x25 = x5[19]._super;
  Val x26 = x5[20]._super;
  Val x27 = x5[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:875)
  Val x28 = (x7 * Val(2));
  Val x29 =
      ((((((x6 + x28) + (x8 * Val(4))) + (x9 * Val(8))) + (x10 * Val(16))) + (x11 * Val(32))) +
       (x12 * Val(64)));
  Val x30 =
      ((((((x29 + (x13 * Val(128))) + (x14 * Val(256))) + (x15 * Val(512))) + (x16 * Val(1024))) +
        (x17 * Val(2048))) +
       (x18 * Val(4096)));
  Val x31 = ((((((x30 + (x19 * Val(8192))) + (x20 * Val(16384))) + (x21 * Val(32768))) +
               (x22 * Val(65536))) +
              (x23 * Val(131072))) +
             (x24 * Val(262144)));
  EQZ(((((x31 + (x25 * Val(524288))) + (x26 * Val(1048576))) + (x27 * Val(2097152))) - x3),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:875)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:866)
  Val x32 = x2[7]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:876)
  ToBits_22_Struct x33 = exec_ToBits_22_(ctx, x32, LAYOUT_LOOKUP(layout1, unpackE));
  NondetRegStruct22Array x34 = x33._super;
  Val x35 = x34[0]._super;
  Val x36 = x34[1]._super;
  Val x37 = x34[2]._super;
  Val x38 = x34[3]._super;
  Val x39 = x34[4]._super;
  Val x40 = x34[5]._super;
  Val x41 = x34[6]._super;
  Val x42 = x34[7]._super;
  Val x43 = x34[8]._super;
  Val x44 = x34[9]._super;
  Val x45 = x34[10]._super;
  Val x46 = x34[11]._super;
  Val x47 = x34[12]._super;
  Val x48 = x34[13]._super;
  Val x49 = x34[14]._super;
  Val x50 = x34[15]._super;
  Val x51 = x34[16]._super;
  Val x52 = x34[17]._super;
  Val x53 = x34[18]._super;
  Val x54 = x34[19]._super;
  Val x55 = x34[20]._super;
  Val x56 = x34[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:877)
  Val x57 = (x36 * Val(2));
  Val x58 =
      ((((((x35 + x57) + (x37 * Val(4))) + (x38 * Val(8))) + (x39 * Val(16))) + (x40 * Val(32))) +
       (x41 * Val(64)));
  Val x59 =
      ((((((x58 + (x42 * Val(128))) + (x43 * Val(256))) + (x44 * Val(512))) + (x45 * Val(1024))) +
        (x46 * Val(2048))) +
       (x47 * Val(4096)));
  Val x60 = ((((((x59 + (x48 * Val(8192))) + (x49 * Val(16384))) + (x50 * Val(32768))) +
               (x51 * Val(65536))) +
              (x52 * Val(131072))) +
             (x53 * Val(262144)));
  EQZ(((((x60 + (x54 * Val(524288))) + (x55 * Val(1048576))) + (x56 * Val(2097152))) - x32),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:877)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:870)
  Val x61 = x2[8]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:878)
  ToBits_22_Struct x62 = exec_ToBits_22_(ctx, x61, LAYOUT_LOOKUP(layout1, unpackF));
  NondetRegStruct22Array x63 = x62._super;
  Val x64 = x63[0]._super;
  Val x65 = x63[1]._super;
  Val x66 = x63[2]._super;
  Val x67 = x63[3]._super;
  Val x68 = x63[4]._super;
  Val x69 = x63[5]._super;
  Val x70 = x63[6]._super;
  Val x71 = x63[7]._super;
  Val x72 = x63[8]._super;
  Val x73 = x63[9]._super;
  Val x74 = x63[10]._super;
  Val x75 = x63[11]._super;
  Val x76 = x63[12]._super;
  Val x77 = x63[13]._super;
  Val x78 = x63[14]._super;
  Val x79 = x63[15]._super;
  Val x80 = x63[16]._super;
  Val x81 = x63[17]._super;
  Val x82 = x63[18]._super;
  Val x83 = x63[19]._super;
  Val x84 = x63[20]._super;
  Val x85 = x63[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:879)
  Val x86 = (x65 * Val(2));
  Val x87 =
      ((((((x64 + x86) + (x66 * Val(4))) + (x67 * Val(8))) + (x68 * Val(16))) + (x69 * Val(32))) +
       (x70 * Val(64)));
  Val x88 =
      ((((((x87 + (x71 * Val(128))) + (x72 * Val(256))) + (x73 * Val(512))) + (x74 * Val(1024))) +
        (x75 * Val(2048))) +
       (x76 * Val(4096)));
  Val x89 = ((((((x88 + (x77 * Val(8192))) + (x78 * Val(16384))) + (x79 * Val(32768))) +
               (x80 * Val(65536))) +
              (x81 * Val(131072))) +
             (x82 * Val(262144)));
  EQZ(((((x89 + (x83 * Val(524288))) + (x84 * Val(1048576))) + (x85 * Val(2097152))) - x61),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:879)");
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:881)
  Val x90 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:882)
  ToBits_16_Struct x91 = exec_ToBits_16_(ctx, x90, LAYOUT_LOOKUP(layout1, unpack_1));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:883)
  Val x92 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:884)
  ToBits_16_Struct x93 = exec_ToBits_16_(ctx, x92, LAYOUT_LOOKUP(layout1, unpack_2));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:885)
  Val x94 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:886)
  ToBits_16_Struct x95 = exec_ToBits_16_(ctx, x94, LAYOUT_LOOKUP(layout1, unpack_3));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:887)
  Val x96 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:888)
  ToBits_16_Struct x97 = exec_ToBits_16_(ctx, x96, LAYOUT_LOOKUP(layout1, unpack_4));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:855)
  Val x98 = arg0.midx._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:889)
  Val x99 = ((x98 + Val(1)) + Val(2));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:890)
  NondetRegStruct x100 = exec_NondetReg(ctx, inv(x99), LAYOUT_LOOKUP(layout1, invmidx));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:891)
  EQZ(((x100._super * x99) - Val(1)), "absorb_word(zirgen/circuit/keccak/keccak.zir:891)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:882)
  NondetRegStruct16Array x101 = x91._super;
  Val x102 = x101[0]._super;
  Val x103 = x101[1]._super;
  Val x104 = x101[2]._super;
  Val x105 = x101[3]._super;
  Val x106 = x101[4]._super;
  Val x107 = x101[5]._super;
  Val x108 = x101[6]._super;
  Val x109 = x101[7]._super;
  Val x110 = x101[8]._super;
  Val x111 = x101[9]._super;
  Val x112 = x101[10]._super;
  Val x113 = x101[11]._super;
  Val x114 = x101[12]._super;
  Val x115 = x101[13]._super;
  Val x116 = x101[14]._super;
  Val x117 = x101[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x118 =
      ((((((x102 + (x103 * Val(2))) + (x104 * Val(4))) + (x105 * Val(8))) + (x106 * Val(16))) +
        (x107 * Val(32))) +
       (x108 * Val(64)));
  Val x119 = ((((((x118 + (x109 * Val(128))) + (x110 * Val(256))) + (x111 * Val(512))) +
                (x112 * Val(1024))) +
               (x113 * Val(2048))) +
              (x114 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:884)
  NondetRegStruct16Array x120 = x93._super;
  Val x121 = x120[0]._super;
  Val x122 = x120[1]._super;
  Val x123 = x120[2]._super;
  Val x124 = x120[3]._super;
  Val x125 = x120[4]._super;
  Val x126 = x120[5]._super;
  Val x127 = x120[6]._super;
  Val x128 = x120[7]._super;
  Val x129 = x120[8]._super;
  Val x130 = x120[9]._super;
  Val x131 = x120[10]._super;
  Val x132 = x120[11]._super;
  Val x133 = x120[12]._super;
  Val x134 = x120[13]._super;
  Val x135 = x120[14]._super;
  Val x136 = x120[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x137 =
      ((((((x121 + (x122 * Val(2))) + (x123 * Val(4))) + (x124 * Val(8))) + (x125 * Val(16))) +
        (x126 * Val(32))) +
       (x127 * Val(64)));
  Val x138 = ((((((x137 + (x128 * Val(128))) + (x129 * Val(256))) + (x130 * Val(512))) +
                (x131 * Val(1024))) +
               (x132 * Val(2048))) +
              (x133 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:886)
  NondetRegStruct16Array x139 = x95._super;
  Val x140 = x139[0]._super;
  Val x141 = x139[1]._super;
  Val x142 = x139[2]._super;
  Val x143 = x139[3]._super;
  Val x144 = x139[4]._super;
  Val x145 = x139[5]._super;
  Val x146 = x139[6]._super;
  Val x147 = x139[7]._super;
  Val x148 = x139[8]._super;
  Val x149 = x139[9]._super;
  Val x150 = x139[10]._super;
  Val x151 = x139[11]._super;
  Val x152 = x139[12]._super;
  Val x153 = x139[13]._super;
  Val x154 = x139[14]._super;
  Val x155 = x139[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x156 =
      ((((((x140 + (x141 * Val(2))) + (x142 * Val(4))) + (x143 * Val(8))) + (x144 * Val(16))) +
        (x145 * Val(32))) +
       (x146 * Val(64)));
  Val x157 = ((((((x156 + (x147 * Val(128))) + (x148 * Val(256))) + (x149 * Val(512))) +
                (x150 * Val(1024))) +
               (x151 * Val(2048))) +
              (x152 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:888)
  NondetRegStruct16Array x158 = x97._super;
  Val x159 = x158[0]._super;
  Val x160 = x158[1]._super;
  Val x161 = x158[2]._super;
  Val x162 = x158[3]._super;
  Val x163 = x158[4]._super;
  Val x164 = x158[5]._super;
  Val x165 = x158[6]._super;
  Val x166 = x158[7]._super;
  Val x167 = x158[8]._super;
  Val x168 = x158[9]._super;
  Val x169 = x158[10]._super;
  Val x170 = x158[11]._super;
  Val x171 = x158[12]._super;
  Val x172 = x158[13]._super;
  Val x173 = x158[14]._super;
  Val x174 = x158[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x175 =
      ((((((x159 + (x160 * Val(2))) + (x161 * Val(4))) + (x162 * Val(8))) + (x163 * Val(16))) +
        (x164 * Val(32))) +
       (x165 * Val(64)));
  Val x176 = ((((((x175 + (x166 * Val(128))) + (x167 * Val(256))) + (x168 * Val(512))) +
                (x169 * Val(1024))) +
               (x170 * Val(2048))) +
              (x171 * Val(4096)));
  WriteMemoryStruct x177 = exec_WriteMemory(
      ctx,
      x99,
      MemDigestStruct{
          ._super =
              Val4Array{
                  (((x119 + (x115 * Val(8192))) + (x116 * Val(16384))) + (x117 * Val(32768))),
                  (((x138 + (x134 * Val(8192))) + (x135 * Val(16384))) + (x136 * Val(32768))),
                  (((x157 + (x153 * Val(8192))) + (x154 * Val(16384))) + (x155 * Val(32768))),
                  (((x176 + (x172 * Val(8192))) + (x173 * Val(16384))) + (x174 * Val(32768)))}},
      LAYOUT_LOOKUP(layout1, _0));
  // xor2(zirgen/circuit/keccak/keccak.zir:114)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:897)
  Val x178 = ((x6 + x102) - ((x6 * Val(2)) * x102));
  Val x179 = ((x7 + x103) - (x28 * x103));
  Val x180 = ((x8 + x104) - ((x8 * Val(2)) * x104));
  Val x181 = ((x9 + x105) - ((x9 * Val(2)) * x105));
  Val x182 = ((x10 + x106) - ((x10 * Val(2)) * x106));
  Val x183 = ((x11 + x107) - ((x11 * Val(2)) * x107));
  Val x184 = ((x12 + x108) - ((x12 * Val(2)) * x108));
  Val x185 = ((x13 + x109) - ((x13 * Val(2)) * x109));
  Val x186 = ((x14 + x110) - ((x14 * Val(2)) * x110));
  Val x187 = ((x15 + x111) - ((x15 * Val(2)) * x111));
  Val x188 = ((x16 + x112) - ((x16 * Val(2)) * x112));
  Val x189 = ((x17 + x113) - ((x17 * Val(2)) * x113));
  Val x190 = ((x18 + x114) - ((x18 * Val(2)) * x114));
  Val x191 = ((x19 + x115) - ((x19 * Val(2)) * x115));
  Val x192 = ((x20 + x116) - ((x20 * Val(2)) * x116));
  Val x193 = ((x21 + x117) - ((x21 * Val(2)) * x117));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:898)
  Val x194 = ((x22 + x121) - ((x22 * Val(2)) * x121));
  Val x195 = ((x23 + x122) - ((x23 * Val(2)) * x122));
  Val x196 = ((x24 + x123) - ((x24 * Val(2)) * x123));
  Val x197 = ((x25 + x124) - ((x25 * Val(2)) * x124));
  Val x198 = ((x26 + x125) - ((x26 * Val(2)) * x125));
  Val x199 = ((x27 + x126) - ((x27 * Val(2)) * x126));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:902)
  Val x200 = ((x35 + x127) - ((x35 * Val(2)) * x127));
  Val x201 = ((x36 + x128) - (x57 * x128));
  Val x202 = ((x37 + x129) - ((x37 * Val(2)) * x129));
  Val x203 = ((x38 + x130) - ((x38 * Val(2)) * x130));
  Val x204 = ((x39 + x131) - ((x39 * Val(2)) * x131));
  Val x205 = ((x40 + x132) - ((x40 * Val(2)) * x132));
  Val x206 = ((x41 + x133) - ((x41 * Val(2)) * x133));
  Val x207 = ((x42 + x134) - ((x42 * Val(2)) * x134));
  Val x208 = ((x43 + x135) - ((x43 * Val(2)) * x135));
  Val x209 = ((x44 + x136) - ((x44 * Val(2)) * x136));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:903)
  Val x210 = ((x45 + x140) - ((x45 * Val(2)) * x140));
  Val x211 = ((x46 + x141) - ((x46 * Val(2)) * x141));
  Val x212 = ((x47 + x142) - ((x47 * Val(2)) * x142));
  Val x213 = ((x48 + x143) - ((x48 * Val(2)) * x143));
  Val x214 = ((x49 + x144) - ((x49 * Val(2)) * x144));
  Val x215 = ((x50 + x145) - ((x50 * Val(2)) * x145));
  Val x216 = ((x51 + x146) - ((x51 * Val(2)) * x146));
  Val x217 = ((x52 + x147) - ((x52 * Val(2)) * x147));
  Val x218 = ((x53 + x148) - ((x53 * Val(2)) * x148));
  Val x219 = ((x54 + x149) - ((x54 * Val(2)) * x149));
  Val x220 = ((x55 + x150) - ((x55 * Val(2)) * x150));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:907)
  Val x221 = ((x64 + x151) - ((x64 * Val(2)) * x151));
  Val x222 = ((x65 + x152) - (x86 * x152));
  Val x223 = ((x66 + x153) - ((x66 * Val(2)) * x153));
  Val x224 = ((x67 + x154) - ((x67 * Val(2)) * x154));
  Val x225 = ((x68 + x155) - ((x68 * Val(2)) * x155));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:908)
  Val x226 = ((x69 + x159) - ((x69 * Val(2)) * x159));
  Val x227 = ((x70 + x160) - ((x70 * Val(2)) * x160));
  Val x228 = ((x71 + x161) - ((x71 * Val(2)) * x161));
  Val x229 = ((x72 + x162) - ((x72 * Val(2)) * x162));
  Val x230 = ((x73 + x163) - ((x73 * Val(2)) * x163));
  Val x231 = ((x74 + x164) - ((x74 * Val(2)) * x164));
  Val x232 = ((x75 + x165) - ((x75 * Val(2)) * x165));
  Val x233 = ((x76 + x166) - ((x76 * Val(2)) * x166));
  Val x234 = ((x77 + x167) - ((x77 * Val(2)) * x167));
  Val x235 = ((x78 + x168) - ((x78 * Val(2)) * x168));
  Val x236 = ((x79 + x169) - ((x79 * Val(2)) * x169));
  Val x237 = ((x80 + x170) - ((x80 * Val(2)) * x170));
  Val x238 = ((x81 + x171) - ((x81 * Val(2)) * x171));
  Val x239 = ((x82 + x172) - ((x82 * Val(2)) * x172));
  Val x240 = ((x83 + x173) - ((x83 * Val(2)) * x173));
  Val x241 = ((x84 + x174) - ((x84 * Val(2)) * x174));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:911)
  Val x242 =
      ((((((x178 + (x179 * Val(2))) + (x180 * Val(4))) + (x181 * Val(8))) + (x182 * Val(16))) +
        (x183 * Val(32))) +
       (x184 * Val(64)));
  Val x243 = ((((((x242 + (x185 * Val(128))) + (x186 * Val(256))) + (x187 * Val(512))) +
                (x188 * Val(1024))) +
               (x189 * Val(2048))) +
              (x190 * Val(4096)));
  Val x244 = ((((((x243 + (x191 * Val(8192))) + (x192 * Val(16384))) + (x193 * Val(32768))) +
                (x194 * Val(65536))) +
               (x195 * Val(131072))) +
              (x196 * Val(262144)));
  Val x245 =
      ((((((x200 + (x201 * Val(2))) + (x202 * Val(4))) + (x203 * Val(8))) + (x204 * Val(16))) +
        (x205 * Val(32))) +
       (x206 * Val(64)));
  Val x246 = ((((((x245 + (x207 * Val(128))) + (x208 * Val(256))) + (x209 * Val(512))) +
                (x210 * Val(1024))) +
               (x211 * Val(2048))) +
              (x212 * Val(4096)));
  Val x247 = ((((((x246 + (x213 * Val(8192))) + (x214 * Val(16384))) + (x215 * Val(32768))) +
                (x216 * Val(65536))) +
               (x217 * Val(131072))) +
              (x218 * Val(262144)));
  Val x248 =
      ((((((x221 + (x222 * Val(2))) + (x223 * Val(4))) + (x224 * Val(8))) + (x225 * Val(16))) +
        (x226 * Val(32))) +
       (x227 * Val(64)));
  Val x249 = ((((((x248 + (x228 * Val(128))) + (x229 * Val(256))) + (x230 * Val(512))) +
                (x231 * Val(1024))) +
               (x232 * Val(2048))) +
              (x233 * Val(4096)));
  Val x250 = ((((((x249 + (x234 * Val(8192))) + (x235 * Val(16384))) + (x236 * Val(32768))) +
                (x237 * Val(65536))) +
               (x238 * Val(131072))) +
              (x239 * Val(262144)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:919)
  RetTupleStruct x251 = exec_RetTuple(
      ctx,
      Val22Array{x6,  x7,  x8,  x9,  x10, x11, x12, x13, x14, x15, x16,
                 x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27},
      Val22Array{x178, x179, x180, x181, x182, x183, x184, x185, x186, x187, x188,
                 x189, x190, x191, x192, x193, x194, x195, x196, x197, x198, x199},
      Val22Array{x200, x201, x202, x203, x204, x205, x206, x207, x208, x209, x210,
                 x211, x212, x213, x214, x215, x216, x217, x218, x219, x220, Val(0)},
      Val24Array{x221,
                 x222,
                 x223,
                 x224,
                 x225,
                 x226,
                 x227,
                 x228,
                 x229,
                 x230,
                 x231,
                 x232,
                 x233,
                 x234,
                 x235,
                 x236,
                 x237,
                 x238,
                 x239,
                 x240,
                 x241,
                 (((x244 + (x197 * Val(524288))) + (x198 * Val(1048576))) + (x199 * Val(2097152))),
                 ((x247 + (x219 * Val(524288))) + (x220 * Val(1048576))),
                 ((x250 + (x240 * Val(524288))) + (x241 * Val(1048576)))},
      Val22Array{x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45,
                 x46, x47, x48, x49, x50, x51, x52, x53, x54, x55, x56},
      Val22Array{x64, x65, x66, x67, x68, x69, x70, x71, x72, x73, x74,
                 x75, x76, x77, x78, x79, x80, x81, x82, x83, x84, x85},
      Val(3),
      Val(15),
      Val(0),
      arg0.blk._super,
      x98,
      LAYOUT_LOOKUP(layout1, _super));
  return x251;
}
RetTupleStruct execAbsorbWord_3__0_(ExecContext& ctx,
                                    RetTupleStruct arg0,
                                    BoundLayout<AbsorbWord_3__0_Layout> layout1) {
  // absorb_word(zirgen/circuit/keccak/keccak.zir:855)
  NondetRegStruct22Array x2 = arg0.arrA;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:862)
  Val x3 = x2[9]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:874)
  ToBits_22_Struct x4 = exec_ToBits_22_(ctx, x3, LAYOUT_LOOKUP(layout1, unpackA));
  NondetRegStruct22Array x5 = x4._super;
  Val x6 = x5[0]._super;
  Val x7 = x5[1]._super;
  Val x8 = x5[2]._super;
  Val x9 = x5[3]._super;
  Val x10 = x5[4]._super;
  Val x11 = x5[5]._super;
  Val x12 = x5[6]._super;
  Val x13 = x5[7]._super;
  Val x14 = x5[8]._super;
  Val x15 = x5[9]._super;
  Val x16 = x5[10]._super;
  Val x17 = x5[11]._super;
  Val x18 = x5[12]._super;
  Val x19 = x5[13]._super;
  Val x20 = x5[14]._super;
  Val x21 = x5[15]._super;
  Val x22 = x5[16]._super;
  Val x23 = x5[17]._super;
  Val x24 = x5[18]._super;
  Val x25 = x5[19]._super;
  Val x26 = x5[20]._super;
  Val x27 = x5[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:875)
  Val x28 = (x7 * Val(2));
  Val x29 =
      ((((((x6 + x28) + (x8 * Val(4))) + (x9 * Val(8))) + (x10 * Val(16))) + (x11 * Val(32))) +
       (x12 * Val(64)));
  Val x30 =
      ((((((x29 + (x13 * Val(128))) + (x14 * Val(256))) + (x15 * Val(512))) + (x16 * Val(1024))) +
        (x17 * Val(2048))) +
       (x18 * Val(4096)));
  Val x31 = ((((((x30 + (x19 * Val(8192))) + (x20 * Val(16384))) + (x21 * Val(32768))) +
               (x22 * Val(65536))) +
              (x23 * Val(131072))) +
             (x24 * Val(262144)));
  EQZ(((((x31 + (x25 * Val(524288))) + (x26 * Val(1048576))) + (x27 * Val(2097152))) - x3),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:875)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:866)
  Val x32 = x2[10]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:876)
  ToBits_22_Struct x33 = exec_ToBits_22_(ctx, x32, LAYOUT_LOOKUP(layout1, unpackE));
  NondetRegStruct22Array x34 = x33._super;
  Val x35 = x34[0]._super;
  Val x36 = x34[1]._super;
  Val x37 = x34[2]._super;
  Val x38 = x34[3]._super;
  Val x39 = x34[4]._super;
  Val x40 = x34[5]._super;
  Val x41 = x34[6]._super;
  Val x42 = x34[7]._super;
  Val x43 = x34[8]._super;
  Val x44 = x34[9]._super;
  Val x45 = x34[10]._super;
  Val x46 = x34[11]._super;
  Val x47 = x34[12]._super;
  Val x48 = x34[13]._super;
  Val x49 = x34[14]._super;
  Val x50 = x34[15]._super;
  Val x51 = x34[16]._super;
  Val x52 = x34[17]._super;
  Val x53 = x34[18]._super;
  Val x54 = x34[19]._super;
  Val x55 = x34[20]._super;
  Val x56 = x34[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:877)
  Val x57 = (x36 * Val(2));
  Val x58 =
      ((((((x35 + x57) + (x37 * Val(4))) + (x38 * Val(8))) + (x39 * Val(16))) + (x40 * Val(32))) +
       (x41 * Val(64)));
  Val x59 =
      ((((((x58 + (x42 * Val(128))) + (x43 * Val(256))) + (x44 * Val(512))) + (x45 * Val(1024))) +
        (x46 * Val(2048))) +
       (x47 * Val(4096)));
  Val x60 = ((((((x59 + (x48 * Val(8192))) + (x49 * Val(16384))) + (x50 * Val(32768))) +
               (x51 * Val(65536))) +
              (x52 * Val(131072))) +
             (x53 * Val(262144)));
  EQZ(((((x60 + (x54 * Val(524288))) + (x55 * Val(1048576))) + (x56 * Val(2097152))) - x32),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:877)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:870)
  Val x61 = x2[11]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:878)
  ToBits_22_Struct x62 = exec_ToBits_22_(ctx, x61, LAYOUT_LOOKUP(layout1, unpackF));
  NondetRegStruct22Array x63 = x62._super;
  Val x64 = x63[0]._super;
  Val x65 = x63[1]._super;
  Val x66 = x63[2]._super;
  Val x67 = x63[3]._super;
  Val x68 = x63[4]._super;
  Val x69 = x63[5]._super;
  Val x70 = x63[6]._super;
  Val x71 = x63[7]._super;
  Val x72 = x63[8]._super;
  Val x73 = x63[9]._super;
  Val x74 = x63[10]._super;
  Val x75 = x63[11]._super;
  Val x76 = x63[12]._super;
  Val x77 = x63[13]._super;
  Val x78 = x63[14]._super;
  Val x79 = x63[15]._super;
  Val x80 = x63[16]._super;
  Val x81 = x63[17]._super;
  Val x82 = x63[18]._super;
  Val x83 = x63[19]._super;
  Val x84 = x63[20]._super;
  Val x85 = x63[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:879)
  Val x86 = (x65 * Val(2));
  Val x87 =
      ((((((x64 + x86) + (x66 * Val(4))) + (x67 * Val(8))) + (x68 * Val(16))) + (x69 * Val(32))) +
       (x70 * Val(64)));
  Val x88 =
      ((((((x87 + (x71 * Val(128))) + (x72 * Val(256))) + (x73 * Val(512))) + (x74 * Val(1024))) +
        (x75 * Val(2048))) +
       (x76 * Val(4096)));
  Val x89 = ((((((x88 + (x77 * Val(8192))) + (x78 * Val(16384))) + (x79 * Val(32768))) +
               (x80 * Val(65536))) +
              (x81 * Val(131072))) +
             (x82 * Val(262144)));
  EQZ(((((x89 + (x83 * Val(524288))) + (x84 * Val(1048576))) + (x85 * Val(2097152))) - x61),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:879)");
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:881)
  Val x90 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:882)
  ToBits_16_Struct x91 = exec_ToBits_16_(ctx, x90, LAYOUT_LOOKUP(layout1, unpack_1));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:883)
  Val x92 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:884)
  ToBits_16_Struct x93 = exec_ToBits_16_(ctx, x92, LAYOUT_LOOKUP(layout1, unpack_2));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:885)
  Val x94 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:886)
  ToBits_16_Struct x95 = exec_ToBits_16_(ctx, x94, LAYOUT_LOOKUP(layout1, unpack_3));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:887)
  Val x96 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:888)
  ToBits_16_Struct x97 = exec_ToBits_16_(ctx, x96, LAYOUT_LOOKUP(layout1, unpack_4));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:855)
  Val x98 = arg0.midx._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:889)
  Val x99 = ((x98 + Val(1)) + Val(3));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:890)
  NondetRegStruct x100 = exec_NondetReg(ctx, inv(x99), LAYOUT_LOOKUP(layout1, invmidx));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:891)
  EQZ(((x100._super * x99) - Val(1)), "absorb_word(zirgen/circuit/keccak/keccak.zir:891)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:882)
  NondetRegStruct16Array x101 = x91._super;
  Val x102 = x101[0]._super;
  Val x103 = x101[1]._super;
  Val x104 = x101[2]._super;
  Val x105 = x101[3]._super;
  Val x106 = x101[4]._super;
  Val x107 = x101[5]._super;
  Val x108 = x101[6]._super;
  Val x109 = x101[7]._super;
  Val x110 = x101[8]._super;
  Val x111 = x101[9]._super;
  Val x112 = x101[10]._super;
  Val x113 = x101[11]._super;
  Val x114 = x101[12]._super;
  Val x115 = x101[13]._super;
  Val x116 = x101[14]._super;
  Val x117 = x101[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x118 =
      ((((((x102 + (x103 * Val(2))) + (x104 * Val(4))) + (x105 * Val(8))) + (x106 * Val(16))) +
        (x107 * Val(32))) +
       (x108 * Val(64)));
  Val x119 = ((((((x118 + (x109 * Val(128))) + (x110 * Val(256))) + (x111 * Val(512))) +
                (x112 * Val(1024))) +
               (x113 * Val(2048))) +
              (x114 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:884)
  NondetRegStruct16Array x120 = x93._super;
  Val x121 = x120[0]._super;
  Val x122 = x120[1]._super;
  Val x123 = x120[2]._super;
  Val x124 = x120[3]._super;
  Val x125 = x120[4]._super;
  Val x126 = x120[5]._super;
  Val x127 = x120[6]._super;
  Val x128 = x120[7]._super;
  Val x129 = x120[8]._super;
  Val x130 = x120[9]._super;
  Val x131 = x120[10]._super;
  Val x132 = x120[11]._super;
  Val x133 = x120[12]._super;
  Val x134 = x120[13]._super;
  Val x135 = x120[14]._super;
  Val x136 = x120[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x137 =
      ((((((x121 + (x122 * Val(2))) + (x123 * Val(4))) + (x124 * Val(8))) + (x125 * Val(16))) +
        (x126 * Val(32))) +
       (x127 * Val(64)));
  Val x138 = ((((((x137 + (x128 * Val(128))) + (x129 * Val(256))) + (x130 * Val(512))) +
                (x131 * Val(1024))) +
               (x132 * Val(2048))) +
              (x133 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:886)
  NondetRegStruct16Array x139 = x95._super;
  Val x140 = x139[0]._super;
  Val x141 = x139[1]._super;
  Val x142 = x139[2]._super;
  Val x143 = x139[3]._super;
  Val x144 = x139[4]._super;
  Val x145 = x139[5]._super;
  Val x146 = x139[6]._super;
  Val x147 = x139[7]._super;
  Val x148 = x139[8]._super;
  Val x149 = x139[9]._super;
  Val x150 = x139[10]._super;
  Val x151 = x139[11]._super;
  Val x152 = x139[12]._super;
  Val x153 = x139[13]._super;
  Val x154 = x139[14]._super;
  Val x155 = x139[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x156 =
      ((((((x140 + (x141 * Val(2))) + (x142 * Val(4))) + (x143 * Val(8))) + (x144 * Val(16))) +
        (x145 * Val(32))) +
       (x146 * Val(64)));
  Val x157 = ((((((x156 + (x147 * Val(128))) + (x148 * Val(256))) + (x149 * Val(512))) +
                (x150 * Val(1024))) +
               (x151 * Val(2048))) +
              (x152 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:888)
  NondetRegStruct16Array x158 = x97._super;
  Val x159 = x158[0]._super;
  Val x160 = x158[1]._super;
  Val x161 = x158[2]._super;
  Val x162 = x158[3]._super;
  Val x163 = x158[4]._super;
  Val x164 = x158[5]._super;
  Val x165 = x158[6]._super;
  Val x166 = x158[7]._super;
  Val x167 = x158[8]._super;
  Val x168 = x158[9]._super;
  Val x169 = x158[10]._super;
  Val x170 = x158[11]._super;
  Val x171 = x158[12]._super;
  Val x172 = x158[13]._super;
  Val x173 = x158[14]._super;
  Val x174 = x158[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x175 =
      ((((((x159 + (x160 * Val(2))) + (x161 * Val(4))) + (x162 * Val(8))) + (x163 * Val(16))) +
        (x164 * Val(32))) +
       (x165 * Val(64)));
  Val x176 = ((((((x175 + (x166 * Val(128))) + (x167 * Val(256))) + (x168 * Val(512))) +
                (x169 * Val(1024))) +
               (x170 * Val(2048))) +
              (x171 * Val(4096)));
  WriteMemoryStruct x177 = exec_WriteMemory(
      ctx,
      x99,
      MemDigestStruct{
          ._super =
              Val4Array{
                  (((x119 + (x115 * Val(8192))) + (x116 * Val(16384))) + (x117 * Val(32768))),
                  (((x138 + (x134 * Val(8192))) + (x135 * Val(16384))) + (x136 * Val(32768))),
                  (((x157 + (x153 * Val(8192))) + (x154 * Val(16384))) + (x155 * Val(32768))),
                  (((x176 + (x172 * Val(8192))) + (x173 * Val(16384))) + (x174 * Val(32768)))}},
      LAYOUT_LOOKUP(layout1, _0));
  // xor2(zirgen/circuit/keccak/keccak.zir:114)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:897)
  Val x178 = ((x6 + x102) - ((x6 * Val(2)) * x102));
  Val x179 = ((x7 + x103) - (x28 * x103));
  Val x180 = ((x8 + x104) - ((x8 * Val(2)) * x104));
  Val x181 = ((x9 + x105) - ((x9 * Val(2)) * x105));
  Val x182 = ((x10 + x106) - ((x10 * Val(2)) * x106));
  Val x183 = ((x11 + x107) - ((x11 * Val(2)) * x107));
  Val x184 = ((x12 + x108) - ((x12 * Val(2)) * x108));
  Val x185 = ((x13 + x109) - ((x13 * Val(2)) * x109));
  Val x186 = ((x14 + x110) - ((x14 * Val(2)) * x110));
  Val x187 = ((x15 + x111) - ((x15 * Val(2)) * x111));
  Val x188 = ((x16 + x112) - ((x16 * Val(2)) * x112));
  Val x189 = ((x17 + x113) - ((x17 * Val(2)) * x113));
  Val x190 = ((x18 + x114) - ((x18 * Val(2)) * x114));
  Val x191 = ((x19 + x115) - ((x19 * Val(2)) * x115));
  Val x192 = ((x20 + x116) - ((x20 * Val(2)) * x116));
  Val x193 = ((x21 + x117) - ((x21 * Val(2)) * x117));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:898)
  Val x194 = ((x22 + x121) - ((x22 * Val(2)) * x121));
  Val x195 = ((x23 + x122) - ((x23 * Val(2)) * x122));
  Val x196 = ((x24 + x123) - ((x24 * Val(2)) * x123));
  Val x197 = ((x25 + x124) - ((x25 * Val(2)) * x124));
  Val x198 = ((x26 + x125) - ((x26 * Val(2)) * x125));
  Val x199 = ((x27 + x126) - ((x27 * Val(2)) * x126));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:902)
  Val x200 = ((x35 + x127) - ((x35 * Val(2)) * x127));
  Val x201 = ((x36 + x128) - (x57 * x128));
  Val x202 = ((x37 + x129) - ((x37 * Val(2)) * x129));
  Val x203 = ((x38 + x130) - ((x38 * Val(2)) * x130));
  Val x204 = ((x39 + x131) - ((x39 * Val(2)) * x131));
  Val x205 = ((x40 + x132) - ((x40 * Val(2)) * x132));
  Val x206 = ((x41 + x133) - ((x41 * Val(2)) * x133));
  Val x207 = ((x42 + x134) - ((x42 * Val(2)) * x134));
  Val x208 = ((x43 + x135) - ((x43 * Val(2)) * x135));
  Val x209 = ((x44 + x136) - ((x44 * Val(2)) * x136));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:903)
  Val x210 = ((x45 + x140) - ((x45 * Val(2)) * x140));
  Val x211 = ((x46 + x141) - ((x46 * Val(2)) * x141));
  Val x212 = ((x47 + x142) - ((x47 * Val(2)) * x142));
  Val x213 = ((x48 + x143) - ((x48 * Val(2)) * x143));
  Val x214 = ((x49 + x144) - ((x49 * Val(2)) * x144));
  Val x215 = ((x50 + x145) - ((x50 * Val(2)) * x145));
  Val x216 = ((x51 + x146) - ((x51 * Val(2)) * x146));
  Val x217 = ((x52 + x147) - ((x52 * Val(2)) * x147));
  Val x218 = ((x53 + x148) - ((x53 * Val(2)) * x148));
  Val x219 = ((x54 + x149) - ((x54 * Val(2)) * x149));
  Val x220 = ((x55 + x150) - ((x55 * Val(2)) * x150));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:907)
  Val x221 = ((x64 + x151) - ((x64 * Val(2)) * x151));
  Val x222 = ((x65 + x152) - (x86 * x152));
  Val x223 = ((x66 + x153) - ((x66 * Val(2)) * x153));
  Val x224 = ((x67 + x154) - ((x67 * Val(2)) * x154));
  Val x225 = ((x68 + x155) - ((x68 * Val(2)) * x155));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:908)
  Val x226 = ((x69 + x159) - ((x69 * Val(2)) * x159));
  Val x227 = ((x70 + x160) - ((x70 * Val(2)) * x160));
  Val x228 = ((x71 + x161) - ((x71 * Val(2)) * x161));
  Val x229 = ((x72 + x162) - ((x72 * Val(2)) * x162));
  Val x230 = ((x73 + x163) - ((x73 * Val(2)) * x163));
  Val x231 = ((x74 + x164) - ((x74 * Val(2)) * x164));
  Val x232 = ((x75 + x165) - ((x75 * Val(2)) * x165));
  Val x233 = ((x76 + x166) - ((x76 * Val(2)) * x166));
  Val x234 = ((x77 + x167) - ((x77 * Val(2)) * x167));
  Val x235 = ((x78 + x168) - ((x78 * Val(2)) * x168));
  Val x236 = ((x79 + x169) - ((x79 * Val(2)) * x169));
  Val x237 = ((x80 + x170) - ((x80 * Val(2)) * x170));
  Val x238 = ((x81 + x171) - ((x81 * Val(2)) * x171));
  Val x239 = ((x82 + x172) - ((x82 * Val(2)) * x172));
  Val x240 = ((x83 + x173) - ((x83 * Val(2)) * x173));
  Val x241 = ((x84 + x174) - ((x84 * Val(2)) * x174));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:911)
  Val x242 =
      ((((((x178 + (x179 * Val(2))) + (x180 * Val(4))) + (x181 * Val(8))) + (x182 * Val(16))) +
        (x183 * Val(32))) +
       (x184 * Val(64)));
  Val x243 = ((((((x242 + (x185 * Val(128))) + (x186 * Val(256))) + (x187 * Val(512))) +
                (x188 * Val(1024))) +
               (x189 * Val(2048))) +
              (x190 * Val(4096)));
  Val x244 = ((((((x243 + (x191 * Val(8192))) + (x192 * Val(16384))) + (x193 * Val(32768))) +
                (x194 * Val(65536))) +
               (x195 * Val(131072))) +
              (x196 * Val(262144)));
  Val x245 =
      ((((((x200 + (x201 * Val(2))) + (x202 * Val(4))) + (x203 * Val(8))) + (x204 * Val(16))) +
        (x205 * Val(32))) +
       (x206 * Val(64)));
  Val x246 = ((((((x245 + (x207 * Val(128))) + (x208 * Val(256))) + (x209 * Val(512))) +
                (x210 * Val(1024))) +
               (x211 * Val(2048))) +
              (x212 * Val(4096)));
  Val x247 = ((((((x246 + (x213 * Val(8192))) + (x214 * Val(16384))) + (x215 * Val(32768))) +
                (x216 * Val(65536))) +
               (x217 * Val(131072))) +
              (x218 * Val(262144)));
  Val x248 =
      ((((((x221 + (x222 * Val(2))) + (x223 * Val(4))) + (x224 * Val(8))) + (x225 * Val(16))) +
        (x226 * Val(32))) +
       (x227 * Val(64)));
  Val x249 = ((((((x248 + (x228 * Val(128))) + (x229 * Val(256))) + (x230 * Val(512))) +
                (x231 * Val(1024))) +
               (x232 * Val(2048))) +
              (x233 * Val(4096)));
  Val x250 = ((((((x249 + (x234 * Val(8192))) + (x235 * Val(16384))) + (x236 * Val(32768))) +
                (x237 * Val(65536))) +
               (x238 * Val(131072))) +
              (x239 * Val(262144)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:919)
  RetTupleStruct x251 = exec_RetTuple(
      ctx,
      Val22Array{x6,  x7,  x8,  x9,  x10, x11, x12, x13, x14, x15, x16,
                 x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27},
      Val22Array{x178, x179, x180, x181, x182, x183, x184, x185, x186, x187, x188,
                 x189, x190, x191, x192, x193, x194, x195, x196, x197, x198, x199},
      Val22Array{x200, x201, x202, x203, x204, x205, x206, x207, x208, x209, x210,
                 x211, x212, x213, x214, x215, x216, x217, x218, x219, x220, Val(0)},
      Val24Array{x221,
                 x222,
                 x223,
                 x224,
                 x225,
                 x226,
                 x227,
                 x228,
                 x229,
                 x230,
                 x231,
                 x232,
                 x233,
                 x234,
                 x235,
                 x236,
                 x237,
                 x238,
                 x239,
                 x240,
                 x241,
                 (((x244 + (x197 * Val(524288))) + (x198 * Val(1048576))) + (x199 * Val(2097152))),
                 ((x247 + (x219 * Val(524288))) + (x220 * Val(1048576))),
                 ((x250 + (x240 * Val(524288))) + (x241 * Val(1048576)))},
      Val22Array{x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45,
                 x46, x47, x48, x49, x50, x51, x52, x53, x54, x55, x56},
      Val22Array{x64, x65, x66, x67, x68, x69, x70, x71, x72, x73, x74,
                 x75, x76, x77, x78, x79, x80, x81, x82, x83, x84, x85},
      Val(4),
      Val(15),
      Val(0),
      arg0.blk._super,
      x98,
      LAYOUT_LOOKUP(layout1, _super));
  return x251;
}
RetTupleStruct execAbsorbWord_4__0_(ExecContext& ctx,
                                    RetTupleStruct arg0,
                                    BoundLayout<AbsorbWord_4__0_Layout> layout1) {
  // absorb_word(zirgen/circuit/keccak/keccak.zir:855)
  NondetRegStruct22Array x2 = arg0.arrA;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:862)
  Val x3 = x2[12]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:874)
  ToBits_22_Struct x4 = exec_ToBits_22_(ctx, x3, LAYOUT_LOOKUP(layout1, unpackA));
  NondetRegStruct22Array x5 = x4._super;
  Val x6 = x5[0]._super;
  Val x7 = x5[1]._super;
  Val x8 = x5[2]._super;
  Val x9 = x5[3]._super;
  Val x10 = x5[4]._super;
  Val x11 = x5[5]._super;
  Val x12 = x5[6]._super;
  Val x13 = x5[7]._super;
  Val x14 = x5[8]._super;
  Val x15 = x5[9]._super;
  Val x16 = x5[10]._super;
  Val x17 = x5[11]._super;
  Val x18 = x5[12]._super;
  Val x19 = x5[13]._super;
  Val x20 = x5[14]._super;
  Val x21 = x5[15]._super;
  Val x22 = x5[16]._super;
  Val x23 = x5[17]._super;
  Val x24 = x5[18]._super;
  Val x25 = x5[19]._super;
  Val x26 = x5[20]._super;
  Val x27 = x5[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:875)
  Val x28 = (x7 * Val(2));
  Val x29 =
      ((((((x6 + x28) + (x8 * Val(4))) + (x9 * Val(8))) + (x10 * Val(16))) + (x11 * Val(32))) +
       (x12 * Val(64)));
  Val x30 =
      ((((((x29 + (x13 * Val(128))) + (x14 * Val(256))) + (x15 * Val(512))) + (x16 * Val(1024))) +
        (x17 * Val(2048))) +
       (x18 * Val(4096)));
  Val x31 = ((((((x30 + (x19 * Val(8192))) + (x20 * Val(16384))) + (x21 * Val(32768))) +
               (x22 * Val(65536))) +
              (x23 * Val(131072))) +
             (x24 * Val(262144)));
  EQZ(((((x31 + (x25 * Val(524288))) + (x26 * Val(1048576))) + (x27 * Val(2097152))) - x3),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:875)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:866)
  Val x32 = x2[13]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:876)
  ToBits_22_Struct x33 = exec_ToBits_22_(ctx, x32, LAYOUT_LOOKUP(layout1, unpackE));
  NondetRegStruct22Array x34 = x33._super;
  Val x35 = x34[0]._super;
  Val x36 = x34[1]._super;
  Val x37 = x34[2]._super;
  Val x38 = x34[3]._super;
  Val x39 = x34[4]._super;
  Val x40 = x34[5]._super;
  Val x41 = x34[6]._super;
  Val x42 = x34[7]._super;
  Val x43 = x34[8]._super;
  Val x44 = x34[9]._super;
  Val x45 = x34[10]._super;
  Val x46 = x34[11]._super;
  Val x47 = x34[12]._super;
  Val x48 = x34[13]._super;
  Val x49 = x34[14]._super;
  Val x50 = x34[15]._super;
  Val x51 = x34[16]._super;
  Val x52 = x34[17]._super;
  Val x53 = x34[18]._super;
  Val x54 = x34[19]._super;
  Val x55 = x34[20]._super;
  Val x56 = x34[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:877)
  Val x57 = (x36 * Val(2));
  Val x58 =
      ((((((x35 + x57) + (x37 * Val(4))) + (x38 * Val(8))) + (x39 * Val(16))) + (x40 * Val(32))) +
       (x41 * Val(64)));
  Val x59 =
      ((((((x58 + (x42 * Val(128))) + (x43 * Val(256))) + (x44 * Val(512))) + (x45 * Val(1024))) +
        (x46 * Val(2048))) +
       (x47 * Val(4096)));
  Val x60 = ((((((x59 + (x48 * Val(8192))) + (x49 * Val(16384))) + (x50 * Val(32768))) +
               (x51 * Val(65536))) +
              (x52 * Val(131072))) +
             (x53 * Val(262144)));
  EQZ(((((x60 + (x54 * Val(524288))) + (x55 * Val(1048576))) + (x56 * Val(2097152))) - x32),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:877)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:870)
  Val x61 = x2[14]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:878)
  ToBits_22_Struct x62 = exec_ToBits_22_(ctx, x61, LAYOUT_LOOKUP(layout1, unpackF));
  NondetRegStruct22Array x63 = x62._super;
  Val x64 = x63[0]._super;
  Val x65 = x63[1]._super;
  Val x66 = x63[2]._super;
  Val x67 = x63[3]._super;
  Val x68 = x63[4]._super;
  Val x69 = x63[5]._super;
  Val x70 = x63[6]._super;
  Val x71 = x63[7]._super;
  Val x72 = x63[8]._super;
  Val x73 = x63[9]._super;
  Val x74 = x63[10]._super;
  Val x75 = x63[11]._super;
  Val x76 = x63[12]._super;
  Val x77 = x63[13]._super;
  Val x78 = x63[14]._super;
  Val x79 = x63[15]._super;
  Val x80 = x63[16]._super;
  Val x81 = x63[17]._super;
  Val x82 = x63[18]._super;
  Val x83 = x63[19]._super;
  Val x84 = x63[20]._super;
  Val x85 = x63[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:879)
  Val x86 = (x65 * Val(2));
  Val x87 =
      ((((((x64 + x86) + (x66 * Val(4))) + (x67 * Val(8))) + (x68 * Val(16))) + (x69 * Val(32))) +
       (x70 * Val(64)));
  Val x88 =
      ((((((x87 + (x71 * Val(128))) + (x72 * Val(256))) + (x73 * Val(512))) + (x74 * Val(1024))) +
        (x75 * Val(2048))) +
       (x76 * Val(4096)));
  Val x89 = ((((((x88 + (x77 * Val(8192))) + (x78 * Val(16384))) + (x79 * Val(32768))) +
               (x80 * Val(65536))) +
              (x81 * Val(131072))) +
             (x82 * Val(262144)));
  EQZ(((((x89 + (x83 * Val(524288))) + (x84 * Val(1048576))) + (x85 * Val(2097152))) - x61),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:879)");
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:881)
  Val x90 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:882)
  ToBits_16_Struct x91 = exec_ToBits_16_(ctx, x90, LAYOUT_LOOKUP(layout1, unpack_1));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:883)
  Val x92 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:884)
  ToBits_16_Struct x93 = exec_ToBits_16_(ctx, x92, LAYOUT_LOOKUP(layout1, unpack_2));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:885)
  Val x94 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:886)
  ToBits_16_Struct x95 = exec_ToBits_16_(ctx, x94, LAYOUT_LOOKUP(layout1, unpack_3));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:887)
  Val x96 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:888)
  ToBits_16_Struct x97 = exec_ToBits_16_(ctx, x96, LAYOUT_LOOKUP(layout1, unpack_4));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:855)
  Val x98 = arg0.midx._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:889)
  Val x99 = ((x98 + Val(1)) + Val(4));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:890)
  NondetRegStruct x100 = exec_NondetReg(ctx, inv(x99), LAYOUT_LOOKUP(layout1, invmidx));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:891)
  EQZ(((x100._super * x99) - Val(1)), "absorb_word(zirgen/circuit/keccak/keccak.zir:891)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:882)
  NondetRegStruct16Array x101 = x91._super;
  Val x102 = x101[0]._super;
  Val x103 = x101[1]._super;
  Val x104 = x101[2]._super;
  Val x105 = x101[3]._super;
  Val x106 = x101[4]._super;
  Val x107 = x101[5]._super;
  Val x108 = x101[6]._super;
  Val x109 = x101[7]._super;
  Val x110 = x101[8]._super;
  Val x111 = x101[9]._super;
  Val x112 = x101[10]._super;
  Val x113 = x101[11]._super;
  Val x114 = x101[12]._super;
  Val x115 = x101[13]._super;
  Val x116 = x101[14]._super;
  Val x117 = x101[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x118 =
      ((((((x102 + (x103 * Val(2))) + (x104 * Val(4))) + (x105 * Val(8))) + (x106 * Val(16))) +
        (x107 * Val(32))) +
       (x108 * Val(64)));
  Val x119 = ((((((x118 + (x109 * Val(128))) + (x110 * Val(256))) + (x111 * Val(512))) +
                (x112 * Val(1024))) +
               (x113 * Val(2048))) +
              (x114 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:884)
  NondetRegStruct16Array x120 = x93._super;
  Val x121 = x120[0]._super;
  Val x122 = x120[1]._super;
  Val x123 = x120[2]._super;
  Val x124 = x120[3]._super;
  Val x125 = x120[4]._super;
  Val x126 = x120[5]._super;
  Val x127 = x120[6]._super;
  Val x128 = x120[7]._super;
  Val x129 = x120[8]._super;
  Val x130 = x120[9]._super;
  Val x131 = x120[10]._super;
  Val x132 = x120[11]._super;
  Val x133 = x120[12]._super;
  Val x134 = x120[13]._super;
  Val x135 = x120[14]._super;
  Val x136 = x120[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x137 =
      ((((((x121 + (x122 * Val(2))) + (x123 * Val(4))) + (x124 * Val(8))) + (x125 * Val(16))) +
        (x126 * Val(32))) +
       (x127 * Val(64)));
  Val x138 = ((((((x137 + (x128 * Val(128))) + (x129 * Val(256))) + (x130 * Val(512))) +
                (x131 * Val(1024))) +
               (x132 * Val(2048))) +
              (x133 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:886)
  NondetRegStruct16Array x139 = x95._super;
  Val x140 = x139[0]._super;
  Val x141 = x139[1]._super;
  Val x142 = x139[2]._super;
  Val x143 = x139[3]._super;
  Val x144 = x139[4]._super;
  Val x145 = x139[5]._super;
  Val x146 = x139[6]._super;
  Val x147 = x139[7]._super;
  Val x148 = x139[8]._super;
  Val x149 = x139[9]._super;
  Val x150 = x139[10]._super;
  Val x151 = x139[11]._super;
  Val x152 = x139[12]._super;
  Val x153 = x139[13]._super;
  Val x154 = x139[14]._super;
  Val x155 = x139[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x156 =
      ((((((x140 + (x141 * Val(2))) + (x142 * Val(4))) + (x143 * Val(8))) + (x144 * Val(16))) +
        (x145 * Val(32))) +
       (x146 * Val(64)));
  Val x157 = ((((((x156 + (x147 * Val(128))) + (x148 * Val(256))) + (x149 * Val(512))) +
                (x150 * Val(1024))) +
               (x151 * Val(2048))) +
              (x152 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:888)
  NondetRegStruct16Array x158 = x97._super;
  Val x159 = x158[0]._super;
  Val x160 = x158[1]._super;
  Val x161 = x158[2]._super;
  Val x162 = x158[3]._super;
  Val x163 = x158[4]._super;
  Val x164 = x158[5]._super;
  Val x165 = x158[6]._super;
  Val x166 = x158[7]._super;
  Val x167 = x158[8]._super;
  Val x168 = x158[9]._super;
  Val x169 = x158[10]._super;
  Val x170 = x158[11]._super;
  Val x171 = x158[12]._super;
  Val x172 = x158[13]._super;
  Val x173 = x158[14]._super;
  Val x174 = x158[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x175 =
      ((((((x159 + (x160 * Val(2))) + (x161 * Val(4))) + (x162 * Val(8))) + (x163 * Val(16))) +
        (x164 * Val(32))) +
       (x165 * Val(64)));
  Val x176 = ((((((x175 + (x166 * Val(128))) + (x167 * Val(256))) + (x168 * Val(512))) +
                (x169 * Val(1024))) +
               (x170 * Val(2048))) +
              (x171 * Val(4096)));
  WriteMemoryStruct x177 = exec_WriteMemory(
      ctx,
      x99,
      MemDigestStruct{
          ._super =
              Val4Array{
                  (((x119 + (x115 * Val(8192))) + (x116 * Val(16384))) + (x117 * Val(32768))),
                  (((x138 + (x134 * Val(8192))) + (x135 * Val(16384))) + (x136 * Val(32768))),
                  (((x157 + (x153 * Val(8192))) + (x154 * Val(16384))) + (x155 * Val(32768))),
                  (((x176 + (x172 * Val(8192))) + (x173 * Val(16384))) + (x174 * Val(32768)))}},
      LAYOUT_LOOKUP(layout1, _0));
  // xor2(zirgen/circuit/keccak/keccak.zir:114)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:897)
  Val x178 = ((x6 + x102) - ((x6 * Val(2)) * x102));
  Val x179 = ((x7 + x103) - (x28 * x103));
  Val x180 = ((x8 + x104) - ((x8 * Val(2)) * x104));
  Val x181 = ((x9 + x105) - ((x9 * Val(2)) * x105));
  Val x182 = ((x10 + x106) - ((x10 * Val(2)) * x106));
  Val x183 = ((x11 + x107) - ((x11 * Val(2)) * x107));
  Val x184 = ((x12 + x108) - ((x12 * Val(2)) * x108));
  Val x185 = ((x13 + x109) - ((x13 * Val(2)) * x109));
  Val x186 = ((x14 + x110) - ((x14 * Val(2)) * x110));
  Val x187 = ((x15 + x111) - ((x15 * Val(2)) * x111));
  Val x188 = ((x16 + x112) - ((x16 * Val(2)) * x112));
  Val x189 = ((x17 + x113) - ((x17 * Val(2)) * x113));
  Val x190 = ((x18 + x114) - ((x18 * Val(2)) * x114));
  Val x191 = ((x19 + x115) - ((x19 * Val(2)) * x115));
  Val x192 = ((x20 + x116) - ((x20 * Val(2)) * x116));
  Val x193 = ((x21 + x117) - ((x21 * Val(2)) * x117));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:898)
  Val x194 = ((x22 + x121) - ((x22 * Val(2)) * x121));
  Val x195 = ((x23 + x122) - ((x23 * Val(2)) * x122));
  Val x196 = ((x24 + x123) - ((x24 * Val(2)) * x123));
  Val x197 = ((x25 + x124) - ((x25 * Val(2)) * x124));
  Val x198 = ((x26 + x125) - ((x26 * Val(2)) * x125));
  Val x199 = ((x27 + x126) - ((x27 * Val(2)) * x126));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:902)
  Val x200 = ((x35 + x127) - ((x35 * Val(2)) * x127));
  Val x201 = ((x36 + x128) - (x57 * x128));
  Val x202 = ((x37 + x129) - ((x37 * Val(2)) * x129));
  Val x203 = ((x38 + x130) - ((x38 * Val(2)) * x130));
  Val x204 = ((x39 + x131) - ((x39 * Val(2)) * x131));
  Val x205 = ((x40 + x132) - ((x40 * Val(2)) * x132));
  Val x206 = ((x41 + x133) - ((x41 * Val(2)) * x133));
  Val x207 = ((x42 + x134) - ((x42 * Val(2)) * x134));
  Val x208 = ((x43 + x135) - ((x43 * Val(2)) * x135));
  Val x209 = ((x44 + x136) - ((x44 * Val(2)) * x136));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:903)
  Val x210 = ((x45 + x140) - ((x45 * Val(2)) * x140));
  Val x211 = ((x46 + x141) - ((x46 * Val(2)) * x141));
  Val x212 = ((x47 + x142) - ((x47 * Val(2)) * x142));
  Val x213 = ((x48 + x143) - ((x48 * Val(2)) * x143));
  Val x214 = ((x49 + x144) - ((x49 * Val(2)) * x144));
  Val x215 = ((x50 + x145) - ((x50 * Val(2)) * x145));
  Val x216 = ((x51 + x146) - ((x51 * Val(2)) * x146));
  Val x217 = ((x52 + x147) - ((x52 * Val(2)) * x147));
  Val x218 = ((x53 + x148) - ((x53 * Val(2)) * x148));
  Val x219 = ((x54 + x149) - ((x54 * Val(2)) * x149));
  Val x220 = ((x55 + x150) - ((x55 * Val(2)) * x150));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:907)
  Val x221 = ((x64 + x151) - ((x64 * Val(2)) * x151));
  Val x222 = ((x65 + x152) - (x86 * x152));
  Val x223 = ((x66 + x153) - ((x66 * Val(2)) * x153));
  Val x224 = ((x67 + x154) - ((x67 * Val(2)) * x154));
  Val x225 = ((x68 + x155) - ((x68 * Val(2)) * x155));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:908)
  Val x226 = ((x69 + x159) - ((x69 * Val(2)) * x159));
  Val x227 = ((x70 + x160) - ((x70 * Val(2)) * x160));
  Val x228 = ((x71 + x161) - ((x71 * Val(2)) * x161));
  Val x229 = ((x72 + x162) - ((x72 * Val(2)) * x162));
  Val x230 = ((x73 + x163) - ((x73 * Val(2)) * x163));
  Val x231 = ((x74 + x164) - ((x74 * Val(2)) * x164));
  Val x232 = ((x75 + x165) - ((x75 * Val(2)) * x165));
  Val x233 = ((x76 + x166) - ((x76 * Val(2)) * x166));
  Val x234 = ((x77 + x167) - ((x77 * Val(2)) * x167));
  Val x235 = ((x78 + x168) - ((x78 * Val(2)) * x168));
  Val x236 = ((x79 + x169) - ((x79 * Val(2)) * x169));
  Val x237 = ((x80 + x170) - ((x80 * Val(2)) * x170));
  Val x238 = ((x81 + x171) - ((x81 * Val(2)) * x171));
  Val x239 = ((x82 + x172) - ((x82 * Val(2)) * x172));
  Val x240 = ((x83 + x173) - ((x83 * Val(2)) * x173));
  Val x241 = ((x84 + x174) - ((x84 * Val(2)) * x174));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:911)
  Val x242 =
      ((((((x178 + (x179 * Val(2))) + (x180 * Val(4))) + (x181 * Val(8))) + (x182 * Val(16))) +
        (x183 * Val(32))) +
       (x184 * Val(64)));
  Val x243 = ((((((x242 + (x185 * Val(128))) + (x186 * Val(256))) + (x187 * Val(512))) +
                (x188 * Val(1024))) +
               (x189 * Val(2048))) +
              (x190 * Val(4096)));
  Val x244 = ((((((x243 + (x191 * Val(8192))) + (x192 * Val(16384))) + (x193 * Val(32768))) +
                (x194 * Val(65536))) +
               (x195 * Val(131072))) +
              (x196 * Val(262144)));
  Val x245 =
      ((((((x200 + (x201 * Val(2))) + (x202 * Val(4))) + (x203 * Val(8))) + (x204 * Val(16))) +
        (x205 * Val(32))) +
       (x206 * Val(64)));
  Val x246 = ((((((x245 + (x207 * Val(128))) + (x208 * Val(256))) + (x209 * Val(512))) +
                (x210 * Val(1024))) +
               (x211 * Val(2048))) +
              (x212 * Val(4096)));
  Val x247 = ((((((x246 + (x213 * Val(8192))) + (x214 * Val(16384))) + (x215 * Val(32768))) +
                (x216 * Val(65536))) +
               (x217 * Val(131072))) +
              (x218 * Val(262144)));
  Val x248 =
      ((((((x221 + (x222 * Val(2))) + (x223 * Val(4))) + (x224 * Val(8))) + (x225 * Val(16))) +
        (x226 * Val(32))) +
       (x227 * Val(64)));
  Val x249 = ((((((x248 + (x228 * Val(128))) + (x229 * Val(256))) + (x230 * Val(512))) +
                (x231 * Val(1024))) +
               (x232 * Val(2048))) +
              (x233 * Val(4096)));
  Val x250 = ((((((x249 + (x234 * Val(8192))) + (x235 * Val(16384))) + (x236 * Val(32768))) +
                (x237 * Val(65536))) +
               (x238 * Val(131072))) +
              (x239 * Val(262144)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:919)
  RetTupleStruct x251 = exec_RetTuple(
      ctx,
      Val22Array{x6,  x7,  x8,  x9,  x10, x11, x12, x13, x14, x15, x16,
                 x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27},
      Val22Array{x178, x179, x180, x181, x182, x183, x184, x185, x186, x187, x188,
                 x189, x190, x191, x192, x193, x194, x195, x196, x197, x198, x199},
      Val22Array{x200, x201, x202, x203, x204, x205, x206, x207, x208, x209, x210,
                 x211, x212, x213, x214, x215, x216, x217, x218, x219, x220, Val(0)},
      Val24Array{x221,
                 x222,
                 x223,
                 x224,
                 x225,
                 x226,
                 x227,
                 x228,
                 x229,
                 x230,
                 x231,
                 x232,
                 x233,
                 x234,
                 x235,
                 x236,
                 x237,
                 x238,
                 x239,
                 x240,
                 x241,
                 (((x244 + (x197 * Val(524288))) + (x198 * Val(1048576))) + (x199 * Val(2097152))),
                 ((x247 + (x219 * Val(524288))) + (x220 * Val(1048576))),
                 ((x250 + (x240 * Val(524288))) + (x241 * Val(1048576)))},
      Val22Array{x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45,
                 x46, x47, x48, x49, x50, x51, x52, x53, x54, x55, x56},
      Val22Array{x64, x65, x66, x67, x68, x69, x70, x71, x72, x73, x74,
                 x75, x76, x77, x78, x79, x80, x81, x82, x83, x84, x85},
      Val(5),
      Val(15),
      Val(0),
      arg0.blk._super,
      x98,
      LAYOUT_LOOKUP(layout1, _super));
  return x251;
}
RetTupleStruct execAbsorbWord_0__1_(ExecContext& ctx,
                                    RetTupleStruct arg0,
                                    BoundLayout<AbsorbWord_0__1_Layout> layout1) {
  // absorb_word(zirgen/circuit/keccak/keccak.zir:855)
  NondetRegStruct22Array x2 = arg0.arrA;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:862)
  Val x3 = x2[15]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:874)
  ToBits_22_Struct x4 = exec_ToBits_22_(ctx, x3, LAYOUT_LOOKUP(layout1, unpackA));
  NondetRegStruct22Array x5 = x4._super;
  Val x6 = x5[0]._super;
  Val x7 = x5[1]._super;
  Val x8 = x5[2]._super;
  Val x9 = x5[3]._super;
  Val x10 = x5[4]._super;
  Val x11 = x5[5]._super;
  Val x12 = x5[6]._super;
  Val x13 = x5[7]._super;
  Val x14 = x5[8]._super;
  Val x15 = x5[9]._super;
  Val x16 = x5[10]._super;
  Val x17 = x5[11]._super;
  Val x18 = x5[12]._super;
  Val x19 = x5[13]._super;
  Val x20 = x5[14]._super;
  Val x21 = x5[15]._super;
  Val x22 = x5[16]._super;
  Val x23 = x5[17]._super;
  Val x24 = x5[18]._super;
  Val x25 = x5[19]._super;
  Val x26 = x5[20]._super;
  Val x27 = x5[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:875)
  Val x28 = (x7 * Val(2));
  Val x29 =
      ((((((x6 + x28) + (x8 * Val(4))) + (x9 * Val(8))) + (x10 * Val(16))) + (x11 * Val(32))) +
       (x12 * Val(64)));
  Val x30 =
      ((((((x29 + (x13 * Val(128))) + (x14 * Val(256))) + (x15 * Val(512))) + (x16 * Val(1024))) +
        (x17 * Val(2048))) +
       (x18 * Val(4096)));
  Val x31 = ((((((x30 + (x19 * Val(8192))) + (x20 * Val(16384))) + (x21 * Val(32768))) +
               (x22 * Val(65536))) +
              (x23 * Val(131072))) +
             (x24 * Val(262144)));
  EQZ(((((x31 + (x25 * Val(524288))) + (x26 * Val(1048576))) + (x27 * Val(2097152))) - x3),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:875)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:866)
  Val x32 = x2[16]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:876)
  ToBits_22_Struct x33 = exec_ToBits_22_(ctx, x32, LAYOUT_LOOKUP(layout1, unpackE));
  NondetRegStruct22Array x34 = x33._super;
  Val x35 = x34[0]._super;
  Val x36 = x34[1]._super;
  Val x37 = x34[2]._super;
  Val x38 = x34[3]._super;
  Val x39 = x34[4]._super;
  Val x40 = x34[5]._super;
  Val x41 = x34[6]._super;
  Val x42 = x34[7]._super;
  Val x43 = x34[8]._super;
  Val x44 = x34[9]._super;
  Val x45 = x34[10]._super;
  Val x46 = x34[11]._super;
  Val x47 = x34[12]._super;
  Val x48 = x34[13]._super;
  Val x49 = x34[14]._super;
  Val x50 = x34[15]._super;
  Val x51 = x34[16]._super;
  Val x52 = x34[17]._super;
  Val x53 = x34[18]._super;
  Val x54 = x34[19]._super;
  Val x55 = x34[20]._super;
  Val x56 = x34[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:877)
  Val x57 = (x36 * Val(2));
  Val x58 =
      ((((((x35 + x57) + (x37 * Val(4))) + (x38 * Val(8))) + (x39 * Val(16))) + (x40 * Val(32))) +
       (x41 * Val(64)));
  Val x59 =
      ((((((x58 + (x42 * Val(128))) + (x43 * Val(256))) + (x44 * Val(512))) + (x45 * Val(1024))) +
        (x46 * Val(2048))) +
       (x47 * Val(4096)));
  Val x60 = ((((((x59 + (x48 * Val(8192))) + (x49 * Val(16384))) + (x50 * Val(32768))) +
               (x51 * Val(65536))) +
              (x52 * Val(131072))) +
             (x53 * Val(262144)));
  EQZ(((((x60 + (x54 * Val(524288))) + (x55 * Val(1048576))) + (x56 * Val(2097152))) - x32),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:877)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:870)
  Val x61 = x2[17]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:878)
  ToBits_22_Struct x62 = exec_ToBits_22_(ctx, x61, LAYOUT_LOOKUP(layout1, unpackF));
  NondetRegStruct22Array x63 = x62._super;
  Val x64 = x63[0]._super;
  Val x65 = x63[1]._super;
  Val x66 = x63[2]._super;
  Val x67 = x63[3]._super;
  Val x68 = x63[4]._super;
  Val x69 = x63[5]._super;
  Val x70 = x63[6]._super;
  Val x71 = x63[7]._super;
  Val x72 = x63[8]._super;
  Val x73 = x63[9]._super;
  Val x74 = x63[10]._super;
  Val x75 = x63[11]._super;
  Val x76 = x63[12]._super;
  Val x77 = x63[13]._super;
  Val x78 = x63[14]._super;
  Val x79 = x63[15]._super;
  Val x80 = x63[16]._super;
  Val x81 = x63[17]._super;
  Val x82 = x63[18]._super;
  Val x83 = x63[19]._super;
  Val x84 = x63[20]._super;
  Val x85 = x63[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:879)
  Val x86 = (x65 * Val(2));
  Val x87 =
      ((((((x64 + x86) + (x66 * Val(4))) + (x67 * Val(8))) + (x68 * Val(16))) + (x69 * Val(32))) +
       (x70 * Val(64)));
  Val x88 =
      ((((((x87 + (x71 * Val(128))) + (x72 * Val(256))) + (x73 * Val(512))) + (x74 * Val(1024))) +
        (x75 * Val(2048))) +
       (x76 * Val(4096)));
  Val x89 = ((((((x88 + (x77 * Val(8192))) + (x78 * Val(16384))) + (x79 * Val(32768))) +
               (x80 * Val(65536))) +
              (x81 * Val(131072))) +
             (x82 * Val(262144)));
  EQZ(((((x89 + (x83 * Val(524288))) + (x84 * Val(1048576))) + (x85 * Val(2097152))) - x61),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:879)");
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:881)
  Val x90 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:882)
  ToBits_16_Struct x91 = exec_ToBits_16_(ctx, x90, LAYOUT_LOOKUP(layout1, unpack_1));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:883)
  Val x92 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:884)
  ToBits_16_Struct x93 = exec_ToBits_16_(ctx, x92, LAYOUT_LOOKUP(layout1, unpack_2));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:885)
  Val x94 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:886)
  ToBits_16_Struct x95 = exec_ToBits_16_(ctx, x94, LAYOUT_LOOKUP(layout1, unpack_3));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:887)
  Val x96 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:888)
  ToBits_16_Struct x97 = exec_ToBits_16_(ctx, x96, LAYOUT_LOOKUP(layout1, unpack_4));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:855)
  Val x98 = arg0.midx._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:889)
  Val x99 = ((x98 + Val(1)) + Val(5));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:890)
  NondetRegStruct x100 = exec_NondetReg(ctx, inv(x99), LAYOUT_LOOKUP(layout1, invmidx));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:891)
  EQZ(((x100._super * x99) - Val(1)), "absorb_word(zirgen/circuit/keccak/keccak.zir:891)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:882)
  NondetRegStruct16Array x101 = x91._super;
  Val x102 = x101[0]._super;
  Val x103 = x101[1]._super;
  Val x104 = x101[2]._super;
  Val x105 = x101[3]._super;
  Val x106 = x101[4]._super;
  Val x107 = x101[5]._super;
  Val x108 = x101[6]._super;
  Val x109 = x101[7]._super;
  Val x110 = x101[8]._super;
  Val x111 = x101[9]._super;
  Val x112 = x101[10]._super;
  Val x113 = x101[11]._super;
  Val x114 = x101[12]._super;
  Val x115 = x101[13]._super;
  Val x116 = x101[14]._super;
  Val x117 = x101[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x118 =
      ((((((x102 + (x103 * Val(2))) + (x104 * Val(4))) + (x105 * Val(8))) + (x106 * Val(16))) +
        (x107 * Val(32))) +
       (x108 * Val(64)));
  Val x119 = ((((((x118 + (x109 * Val(128))) + (x110 * Val(256))) + (x111 * Val(512))) +
                (x112 * Val(1024))) +
               (x113 * Val(2048))) +
              (x114 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:884)
  NondetRegStruct16Array x120 = x93._super;
  Val x121 = x120[0]._super;
  Val x122 = x120[1]._super;
  Val x123 = x120[2]._super;
  Val x124 = x120[3]._super;
  Val x125 = x120[4]._super;
  Val x126 = x120[5]._super;
  Val x127 = x120[6]._super;
  Val x128 = x120[7]._super;
  Val x129 = x120[8]._super;
  Val x130 = x120[9]._super;
  Val x131 = x120[10]._super;
  Val x132 = x120[11]._super;
  Val x133 = x120[12]._super;
  Val x134 = x120[13]._super;
  Val x135 = x120[14]._super;
  Val x136 = x120[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x137 =
      ((((((x121 + (x122 * Val(2))) + (x123 * Val(4))) + (x124 * Val(8))) + (x125 * Val(16))) +
        (x126 * Val(32))) +
       (x127 * Val(64)));
  Val x138 = ((((((x137 + (x128 * Val(128))) + (x129 * Val(256))) + (x130 * Val(512))) +
                (x131 * Val(1024))) +
               (x132 * Val(2048))) +
              (x133 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:886)
  NondetRegStruct16Array x139 = x95._super;
  Val x140 = x139[0]._super;
  Val x141 = x139[1]._super;
  Val x142 = x139[2]._super;
  Val x143 = x139[3]._super;
  Val x144 = x139[4]._super;
  Val x145 = x139[5]._super;
  Val x146 = x139[6]._super;
  Val x147 = x139[7]._super;
  Val x148 = x139[8]._super;
  Val x149 = x139[9]._super;
  Val x150 = x139[10]._super;
  Val x151 = x139[11]._super;
  Val x152 = x139[12]._super;
  Val x153 = x139[13]._super;
  Val x154 = x139[14]._super;
  Val x155 = x139[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x156 =
      ((((((x140 + (x141 * Val(2))) + (x142 * Val(4))) + (x143 * Val(8))) + (x144 * Val(16))) +
        (x145 * Val(32))) +
       (x146 * Val(64)));
  Val x157 = ((((((x156 + (x147 * Val(128))) + (x148 * Val(256))) + (x149 * Val(512))) +
                (x150 * Val(1024))) +
               (x151 * Val(2048))) +
              (x152 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:888)
  NondetRegStruct16Array x158 = x97._super;
  Val x159 = x158[0]._super;
  Val x160 = x158[1]._super;
  Val x161 = x158[2]._super;
  Val x162 = x158[3]._super;
  Val x163 = x158[4]._super;
  Val x164 = x158[5]._super;
  Val x165 = x158[6]._super;
  Val x166 = x158[7]._super;
  Val x167 = x158[8]._super;
  Val x168 = x158[9]._super;
  Val x169 = x158[10]._super;
  Val x170 = x158[11]._super;
  Val x171 = x158[12]._super;
  Val x172 = x158[13]._super;
  Val x173 = x158[14]._super;
  Val x174 = x158[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x175 =
      ((((((x159 + (x160 * Val(2))) + (x161 * Val(4))) + (x162 * Val(8))) + (x163 * Val(16))) +
        (x164 * Val(32))) +
       (x165 * Val(64)));
  Val x176 = ((((((x175 + (x166 * Val(128))) + (x167 * Val(256))) + (x168 * Val(512))) +
                (x169 * Val(1024))) +
               (x170 * Val(2048))) +
              (x171 * Val(4096)));
  WriteMemoryStruct x177 = exec_WriteMemory(
      ctx,
      x99,
      MemDigestStruct{
          ._super =
              Val4Array{
                  (((x119 + (x115 * Val(8192))) + (x116 * Val(16384))) + (x117 * Val(32768))),
                  (((x138 + (x134 * Val(8192))) + (x135 * Val(16384))) + (x136 * Val(32768))),
                  (((x157 + (x153 * Val(8192))) + (x154 * Val(16384))) + (x155 * Val(32768))),
                  (((x176 + (x172 * Val(8192))) + (x173 * Val(16384))) + (x174 * Val(32768)))}},
      LAYOUT_LOOKUP(layout1, _0));
  // xor2(zirgen/circuit/keccak/keccak.zir:114)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:897)
  Val x178 = ((x6 + x102) - ((x6 * Val(2)) * x102));
  Val x179 = ((x7 + x103) - (x28 * x103));
  Val x180 = ((x8 + x104) - ((x8 * Val(2)) * x104));
  Val x181 = ((x9 + x105) - ((x9 * Val(2)) * x105));
  Val x182 = ((x10 + x106) - ((x10 * Val(2)) * x106));
  Val x183 = ((x11 + x107) - ((x11 * Val(2)) * x107));
  Val x184 = ((x12 + x108) - ((x12 * Val(2)) * x108));
  Val x185 = ((x13 + x109) - ((x13 * Val(2)) * x109));
  Val x186 = ((x14 + x110) - ((x14 * Val(2)) * x110));
  Val x187 = ((x15 + x111) - ((x15 * Val(2)) * x111));
  Val x188 = ((x16 + x112) - ((x16 * Val(2)) * x112));
  Val x189 = ((x17 + x113) - ((x17 * Val(2)) * x113));
  Val x190 = ((x18 + x114) - ((x18 * Val(2)) * x114));
  Val x191 = ((x19 + x115) - ((x19 * Val(2)) * x115));
  Val x192 = ((x20 + x116) - ((x20 * Val(2)) * x116));
  Val x193 = ((x21 + x117) - ((x21 * Val(2)) * x117));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:898)
  Val x194 = ((x22 + x121) - ((x22 * Val(2)) * x121));
  Val x195 = ((x23 + x122) - ((x23 * Val(2)) * x122));
  Val x196 = ((x24 + x123) - ((x24 * Val(2)) * x123));
  Val x197 = ((x25 + x124) - ((x25 * Val(2)) * x124));
  Val x198 = ((x26 + x125) - ((x26 * Val(2)) * x125));
  Val x199 = ((x27 + x126) - ((x27 * Val(2)) * x126));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:902)
  Val x200 = ((x35 + x127) - ((x35 * Val(2)) * x127));
  Val x201 = ((x36 + x128) - (x57 * x128));
  Val x202 = ((x37 + x129) - ((x37 * Val(2)) * x129));
  Val x203 = ((x38 + x130) - ((x38 * Val(2)) * x130));
  Val x204 = ((x39 + x131) - ((x39 * Val(2)) * x131));
  Val x205 = ((x40 + x132) - ((x40 * Val(2)) * x132));
  Val x206 = ((x41 + x133) - ((x41 * Val(2)) * x133));
  Val x207 = ((x42 + x134) - ((x42 * Val(2)) * x134));
  Val x208 = ((x43 + x135) - ((x43 * Val(2)) * x135));
  Val x209 = ((x44 + x136) - ((x44 * Val(2)) * x136));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:903)
  Val x210 = ((x45 + x140) - ((x45 * Val(2)) * x140));
  Val x211 = ((x46 + x141) - ((x46 * Val(2)) * x141));
  Val x212 = ((x47 + x142) - ((x47 * Val(2)) * x142));
  Val x213 = ((x48 + x143) - ((x48 * Val(2)) * x143));
  Val x214 = ((x49 + x144) - ((x49 * Val(2)) * x144));
  Val x215 = ((x50 + x145) - ((x50 * Val(2)) * x145));
  Val x216 = ((x51 + x146) - ((x51 * Val(2)) * x146));
  Val x217 = ((x52 + x147) - ((x52 * Val(2)) * x147));
  Val x218 = ((x53 + x148) - ((x53 * Val(2)) * x148));
  Val x219 = ((x54 + x149) - ((x54 * Val(2)) * x149));
  Val x220 = ((x55 + x150) - ((x55 * Val(2)) * x150));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:907)
  Val x221 = ((x64 + x151) - ((x64 * Val(2)) * x151));
  Val x222 = ((x65 + x152) - (x86 * x152));
  Val x223 = ((x66 + x153) - ((x66 * Val(2)) * x153));
  Val x224 = ((x67 + x154) - ((x67 * Val(2)) * x154));
  Val x225 = ((x68 + x155) - ((x68 * Val(2)) * x155));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:908)
  Val x226 = ((x69 + x159) - ((x69 * Val(2)) * x159));
  Val x227 = ((x70 + x160) - ((x70 * Val(2)) * x160));
  Val x228 = ((x71 + x161) - ((x71 * Val(2)) * x161));
  Val x229 = ((x72 + x162) - ((x72 * Val(2)) * x162));
  Val x230 = ((x73 + x163) - ((x73 * Val(2)) * x163));
  Val x231 = ((x74 + x164) - ((x74 * Val(2)) * x164));
  Val x232 = ((x75 + x165) - ((x75 * Val(2)) * x165));
  Val x233 = ((x76 + x166) - ((x76 * Val(2)) * x166));
  Val x234 = ((x77 + x167) - ((x77 * Val(2)) * x167));
  Val x235 = ((x78 + x168) - ((x78 * Val(2)) * x168));
  Val x236 = ((x79 + x169) - ((x79 * Val(2)) * x169));
  Val x237 = ((x80 + x170) - ((x80 * Val(2)) * x170));
  Val x238 = ((x81 + x171) - ((x81 * Val(2)) * x171));
  Val x239 = ((x82 + x172) - ((x82 * Val(2)) * x172));
  Val x240 = ((x83 + x173) - ((x83 * Val(2)) * x173));
  Val x241 = ((x84 + x174) - ((x84 * Val(2)) * x174));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:911)
  Val x242 =
      ((((((x178 + (x179 * Val(2))) + (x180 * Val(4))) + (x181 * Val(8))) + (x182 * Val(16))) +
        (x183 * Val(32))) +
       (x184 * Val(64)));
  Val x243 = ((((((x242 + (x185 * Val(128))) + (x186 * Val(256))) + (x187 * Val(512))) +
                (x188 * Val(1024))) +
               (x189 * Val(2048))) +
              (x190 * Val(4096)));
  Val x244 = ((((((x243 + (x191 * Val(8192))) + (x192 * Val(16384))) + (x193 * Val(32768))) +
                (x194 * Val(65536))) +
               (x195 * Val(131072))) +
              (x196 * Val(262144)));
  Val x245 =
      ((((((x200 + (x201 * Val(2))) + (x202 * Val(4))) + (x203 * Val(8))) + (x204 * Val(16))) +
        (x205 * Val(32))) +
       (x206 * Val(64)));
  Val x246 = ((((((x245 + (x207 * Val(128))) + (x208 * Val(256))) + (x209 * Val(512))) +
                (x210 * Val(1024))) +
               (x211 * Val(2048))) +
              (x212 * Val(4096)));
  Val x247 = ((((((x246 + (x213 * Val(8192))) + (x214 * Val(16384))) + (x215 * Val(32768))) +
                (x216 * Val(65536))) +
               (x217 * Val(131072))) +
              (x218 * Val(262144)));
  Val x248 =
      ((((((x221 + (x222 * Val(2))) + (x223 * Val(4))) + (x224 * Val(8))) + (x225 * Val(16))) +
        (x226 * Val(32))) +
       (x227 * Val(64)));
  Val x249 = ((((((x248 + (x228 * Val(128))) + (x229 * Val(256))) + (x230 * Val(512))) +
                (x231 * Val(1024))) +
               (x232 * Val(2048))) +
              (x233 * Val(4096)));
  Val x250 = ((((((x249 + (x234 * Val(8192))) + (x235 * Val(16384))) + (x236 * Val(32768))) +
                (x237 * Val(65536))) +
               (x238 * Val(131072))) +
              (x239 * Val(262144)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:919)
  RetTupleStruct x251 = exec_RetTuple(
      ctx,
      Val22Array{x6,  x7,  x8,  x9,  x10, x11, x12, x13, x14, x15, x16,
                 x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27},
      Val22Array{x178, x179, x180, x181, x182, x183, x184, x185, x186, x187, x188,
                 x189, x190, x191, x192, x193, x194, x195, x196, x197, x198, x199},
      Val22Array{x200, x201, x202, x203, x204, x205, x206, x207, x208, x209, x210,
                 x211, x212, x213, x214, x215, x216, x217, x218, x219, x220, Val(0)},
      Val24Array{x221,
                 x222,
                 x223,
                 x224,
                 x225,
                 x226,
                 x227,
                 x228,
                 x229,
                 x230,
                 x231,
                 x232,
                 x233,
                 x234,
                 x235,
                 x236,
                 x237,
                 x238,
                 x239,
                 x240,
                 x241,
                 (((x244 + (x197 * Val(524288))) + (x198 * Val(1048576))) + (x199 * Val(2097152))),
                 ((x247 + (x219 * Val(524288))) + (x220 * Val(1048576))),
                 ((x250 + (x240 * Val(524288))) + (x241 * Val(1048576)))},
      Val22Array{x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45,
                 x46, x47, x48, x49, x50, x51, x52, x53, x54, x55, x56},
      Val22Array{x64, x65, x66, x67, x68, x69, x70, x71, x72, x73, x74,
                 x75, x76, x77, x78, x79, x80, x81, x82, x83, x84, x85},
      Val(6),
      Val(15),
      Val(0),
      arg0.blk._super,
      x98,
      LAYOUT_LOOKUP(layout1, _super));
  return x251;
}
RetTupleStruct execAbsorbWord_1__1_(ExecContext& ctx,
                                    RetTupleStruct arg0,
                                    BoundLayout<AbsorbWord_1__1_Layout> layout1) {
  // absorb_word(zirgen/circuit/keccak/keccak.zir:855)
  NondetRegStruct22Array x2 = arg0.arrA;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:862)
  Val x3 = x2[18]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:874)
  ToBits_22_Struct x4 = exec_ToBits_22_(ctx, x3, LAYOUT_LOOKUP(layout1, unpackA));
  NondetRegStruct22Array x5 = x4._super;
  Val x6 = x5[0]._super;
  Val x7 = x5[1]._super;
  Val x8 = x5[2]._super;
  Val x9 = x5[3]._super;
  Val x10 = x5[4]._super;
  Val x11 = x5[5]._super;
  Val x12 = x5[6]._super;
  Val x13 = x5[7]._super;
  Val x14 = x5[8]._super;
  Val x15 = x5[9]._super;
  Val x16 = x5[10]._super;
  Val x17 = x5[11]._super;
  Val x18 = x5[12]._super;
  Val x19 = x5[13]._super;
  Val x20 = x5[14]._super;
  Val x21 = x5[15]._super;
  Val x22 = x5[16]._super;
  Val x23 = x5[17]._super;
  Val x24 = x5[18]._super;
  Val x25 = x5[19]._super;
  Val x26 = x5[20]._super;
  Val x27 = x5[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:875)
  Val x28 = (x7 * Val(2));
  Val x29 =
      ((((((x6 + x28) + (x8 * Val(4))) + (x9 * Val(8))) + (x10 * Val(16))) + (x11 * Val(32))) +
       (x12 * Val(64)));
  Val x30 =
      ((((((x29 + (x13 * Val(128))) + (x14 * Val(256))) + (x15 * Val(512))) + (x16 * Val(1024))) +
        (x17 * Val(2048))) +
       (x18 * Val(4096)));
  Val x31 = ((((((x30 + (x19 * Val(8192))) + (x20 * Val(16384))) + (x21 * Val(32768))) +
               (x22 * Val(65536))) +
              (x23 * Val(131072))) +
             (x24 * Val(262144)));
  EQZ(((((x31 + (x25 * Val(524288))) + (x26 * Val(1048576))) + (x27 * Val(2097152))) - x3),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:875)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:866)
  Val x32 = x2[19]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:876)
  ToBits_22_Struct x33 = exec_ToBits_22_(ctx, x32, LAYOUT_LOOKUP(layout1, unpackE));
  NondetRegStruct22Array x34 = x33._super;
  Val x35 = x34[0]._super;
  Val x36 = x34[1]._super;
  Val x37 = x34[2]._super;
  Val x38 = x34[3]._super;
  Val x39 = x34[4]._super;
  Val x40 = x34[5]._super;
  Val x41 = x34[6]._super;
  Val x42 = x34[7]._super;
  Val x43 = x34[8]._super;
  Val x44 = x34[9]._super;
  Val x45 = x34[10]._super;
  Val x46 = x34[11]._super;
  Val x47 = x34[12]._super;
  Val x48 = x34[13]._super;
  Val x49 = x34[14]._super;
  Val x50 = x34[15]._super;
  Val x51 = x34[16]._super;
  Val x52 = x34[17]._super;
  Val x53 = x34[18]._super;
  Val x54 = x34[19]._super;
  Val x55 = x34[20]._super;
  Val x56 = x34[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:877)
  Val x57 = (x36 * Val(2));
  Val x58 =
      ((((((x35 + x57) + (x37 * Val(4))) + (x38 * Val(8))) + (x39 * Val(16))) + (x40 * Val(32))) +
       (x41 * Val(64)));
  Val x59 =
      ((((((x58 + (x42 * Val(128))) + (x43 * Val(256))) + (x44 * Val(512))) + (x45 * Val(1024))) +
        (x46 * Val(2048))) +
       (x47 * Val(4096)));
  Val x60 = ((((((x59 + (x48 * Val(8192))) + (x49 * Val(16384))) + (x50 * Val(32768))) +
               (x51 * Val(65536))) +
              (x52 * Val(131072))) +
             (x53 * Val(262144)));
  EQZ(((((x60 + (x54 * Val(524288))) + (x55 * Val(1048576))) + (x56 * Val(2097152))) - x32),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:877)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:870)
  Val x61 = x2[20]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:878)
  ToBits_22_Struct x62 = exec_ToBits_22_(ctx, x61, LAYOUT_LOOKUP(layout1, unpackF));
  NondetRegStruct22Array x63 = x62._super;
  Val x64 = x63[0]._super;
  Val x65 = x63[1]._super;
  Val x66 = x63[2]._super;
  Val x67 = x63[3]._super;
  Val x68 = x63[4]._super;
  Val x69 = x63[5]._super;
  Val x70 = x63[6]._super;
  Val x71 = x63[7]._super;
  Val x72 = x63[8]._super;
  Val x73 = x63[9]._super;
  Val x74 = x63[10]._super;
  Val x75 = x63[11]._super;
  Val x76 = x63[12]._super;
  Val x77 = x63[13]._super;
  Val x78 = x63[14]._super;
  Val x79 = x63[15]._super;
  Val x80 = x63[16]._super;
  Val x81 = x63[17]._super;
  Val x82 = x63[18]._super;
  Val x83 = x63[19]._super;
  Val x84 = x63[20]._super;
  Val x85 = x63[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:879)
  Val x86 = (x65 * Val(2));
  Val x87 =
      ((((((x64 + x86) + (x66 * Val(4))) + (x67 * Val(8))) + (x68 * Val(16))) + (x69 * Val(32))) +
       (x70 * Val(64)));
  Val x88 =
      ((((((x87 + (x71 * Val(128))) + (x72 * Val(256))) + (x73 * Val(512))) + (x74 * Val(1024))) +
        (x75 * Val(2048))) +
       (x76 * Val(4096)));
  Val x89 = ((((((x88 + (x77 * Val(8192))) + (x78 * Val(16384))) + (x79 * Val(32768))) +
               (x80 * Val(65536))) +
              (x81 * Val(131072))) +
             (x82 * Val(262144)));
  EQZ(((((x89 + (x83 * Val(524288))) + (x84 * Val(1048576))) + (x85 * Val(2097152))) - x61),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:879)");
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:881)
  Val x90 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:882)
  ToBits_16_Struct x91 = exec_ToBits_16_(ctx, x90, LAYOUT_LOOKUP(layout1, unpack_1));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:883)
  Val x92 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:884)
  ToBits_16_Struct x93 = exec_ToBits_16_(ctx, x92, LAYOUT_LOOKUP(layout1, unpack_2));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:885)
  Val x94 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:886)
  ToBits_16_Struct x95 = exec_ToBits_16_(ctx, x94, LAYOUT_LOOKUP(layout1, unpack_3));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:887)
  Val x96 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:888)
  ToBits_16_Struct x97 = exec_ToBits_16_(ctx, x96, LAYOUT_LOOKUP(layout1, unpack_4));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:855)
  Val x98 = arg0.midx._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:889)
  Val x99 = (((x98 + Val(1)) + Val(1)) + Val(5));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:890)
  NondetRegStruct x100 = exec_NondetReg(ctx, inv(x99), LAYOUT_LOOKUP(layout1, invmidx));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:891)
  EQZ(((x100._super * x99) - Val(1)), "absorb_word(zirgen/circuit/keccak/keccak.zir:891)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:882)
  NondetRegStruct16Array x101 = x91._super;
  Val x102 = x101[0]._super;
  Val x103 = x101[1]._super;
  Val x104 = x101[2]._super;
  Val x105 = x101[3]._super;
  Val x106 = x101[4]._super;
  Val x107 = x101[5]._super;
  Val x108 = x101[6]._super;
  Val x109 = x101[7]._super;
  Val x110 = x101[8]._super;
  Val x111 = x101[9]._super;
  Val x112 = x101[10]._super;
  Val x113 = x101[11]._super;
  Val x114 = x101[12]._super;
  Val x115 = x101[13]._super;
  Val x116 = x101[14]._super;
  Val x117 = x101[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x118 =
      ((((((x102 + (x103 * Val(2))) + (x104 * Val(4))) + (x105 * Val(8))) + (x106 * Val(16))) +
        (x107 * Val(32))) +
       (x108 * Val(64)));
  Val x119 = ((((((x118 + (x109 * Val(128))) + (x110 * Val(256))) + (x111 * Val(512))) +
                (x112 * Val(1024))) +
               (x113 * Val(2048))) +
              (x114 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:884)
  NondetRegStruct16Array x120 = x93._super;
  Val x121 = x120[0]._super;
  Val x122 = x120[1]._super;
  Val x123 = x120[2]._super;
  Val x124 = x120[3]._super;
  Val x125 = x120[4]._super;
  Val x126 = x120[5]._super;
  Val x127 = x120[6]._super;
  Val x128 = x120[7]._super;
  Val x129 = x120[8]._super;
  Val x130 = x120[9]._super;
  Val x131 = x120[10]._super;
  Val x132 = x120[11]._super;
  Val x133 = x120[12]._super;
  Val x134 = x120[13]._super;
  Val x135 = x120[14]._super;
  Val x136 = x120[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x137 =
      ((((((x121 + (x122 * Val(2))) + (x123 * Val(4))) + (x124 * Val(8))) + (x125 * Val(16))) +
        (x126 * Val(32))) +
       (x127 * Val(64)));
  Val x138 = ((((((x137 + (x128 * Val(128))) + (x129 * Val(256))) + (x130 * Val(512))) +
                (x131 * Val(1024))) +
               (x132 * Val(2048))) +
              (x133 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:886)
  NondetRegStruct16Array x139 = x95._super;
  Val x140 = x139[0]._super;
  Val x141 = x139[1]._super;
  Val x142 = x139[2]._super;
  Val x143 = x139[3]._super;
  Val x144 = x139[4]._super;
  Val x145 = x139[5]._super;
  Val x146 = x139[6]._super;
  Val x147 = x139[7]._super;
  Val x148 = x139[8]._super;
  Val x149 = x139[9]._super;
  Val x150 = x139[10]._super;
  Val x151 = x139[11]._super;
  Val x152 = x139[12]._super;
  Val x153 = x139[13]._super;
  Val x154 = x139[14]._super;
  Val x155 = x139[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x156 =
      ((((((x140 + (x141 * Val(2))) + (x142 * Val(4))) + (x143 * Val(8))) + (x144 * Val(16))) +
        (x145 * Val(32))) +
       (x146 * Val(64)));
  Val x157 = ((((((x156 + (x147 * Val(128))) + (x148 * Val(256))) + (x149 * Val(512))) +
                (x150 * Val(1024))) +
               (x151 * Val(2048))) +
              (x152 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:888)
  NondetRegStruct16Array x158 = x97._super;
  Val x159 = x158[0]._super;
  Val x160 = x158[1]._super;
  Val x161 = x158[2]._super;
  Val x162 = x158[3]._super;
  Val x163 = x158[4]._super;
  Val x164 = x158[5]._super;
  Val x165 = x158[6]._super;
  Val x166 = x158[7]._super;
  Val x167 = x158[8]._super;
  Val x168 = x158[9]._super;
  Val x169 = x158[10]._super;
  Val x170 = x158[11]._super;
  Val x171 = x158[12]._super;
  Val x172 = x158[13]._super;
  Val x173 = x158[14]._super;
  Val x174 = x158[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x175 =
      ((((((x159 + (x160 * Val(2))) + (x161 * Val(4))) + (x162 * Val(8))) + (x163 * Val(16))) +
        (x164 * Val(32))) +
       (x165 * Val(64)));
  Val x176 = ((((((x175 + (x166 * Val(128))) + (x167 * Val(256))) + (x168 * Val(512))) +
                (x169 * Val(1024))) +
               (x170 * Val(2048))) +
              (x171 * Val(4096)));
  WriteMemoryStruct x177 = exec_WriteMemory(
      ctx,
      x99,
      MemDigestStruct{
          ._super =
              Val4Array{
                  (((x119 + (x115 * Val(8192))) + (x116 * Val(16384))) + (x117 * Val(32768))),
                  (((x138 + (x134 * Val(8192))) + (x135 * Val(16384))) + (x136 * Val(32768))),
                  (((x157 + (x153 * Val(8192))) + (x154 * Val(16384))) + (x155 * Val(32768))),
                  (((x176 + (x172 * Val(8192))) + (x173 * Val(16384))) + (x174 * Val(32768)))}},
      LAYOUT_LOOKUP(layout1, _0));
  // xor2(zirgen/circuit/keccak/keccak.zir:114)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:897)
  Val x178 = ((x6 + x102) - ((x6 * Val(2)) * x102));
  Val x179 = ((x7 + x103) - (x28 * x103));
  Val x180 = ((x8 + x104) - ((x8 * Val(2)) * x104));
  Val x181 = ((x9 + x105) - ((x9 * Val(2)) * x105));
  Val x182 = ((x10 + x106) - ((x10 * Val(2)) * x106));
  Val x183 = ((x11 + x107) - ((x11 * Val(2)) * x107));
  Val x184 = ((x12 + x108) - ((x12 * Val(2)) * x108));
  Val x185 = ((x13 + x109) - ((x13 * Val(2)) * x109));
  Val x186 = ((x14 + x110) - ((x14 * Val(2)) * x110));
  Val x187 = ((x15 + x111) - ((x15 * Val(2)) * x111));
  Val x188 = ((x16 + x112) - ((x16 * Val(2)) * x112));
  Val x189 = ((x17 + x113) - ((x17 * Val(2)) * x113));
  Val x190 = ((x18 + x114) - ((x18 * Val(2)) * x114));
  Val x191 = ((x19 + x115) - ((x19 * Val(2)) * x115));
  Val x192 = ((x20 + x116) - ((x20 * Val(2)) * x116));
  Val x193 = ((x21 + x117) - ((x21 * Val(2)) * x117));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:898)
  Val x194 = ((x22 + x121) - ((x22 * Val(2)) * x121));
  Val x195 = ((x23 + x122) - ((x23 * Val(2)) * x122));
  Val x196 = ((x24 + x123) - ((x24 * Val(2)) * x123));
  Val x197 = ((x25 + x124) - ((x25 * Val(2)) * x124));
  Val x198 = ((x26 + x125) - ((x26 * Val(2)) * x125));
  Val x199 = ((x27 + x126) - ((x27 * Val(2)) * x126));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:902)
  Val x200 = ((x35 + x127) - ((x35 * Val(2)) * x127));
  Val x201 = ((x36 + x128) - (x57 * x128));
  Val x202 = ((x37 + x129) - ((x37 * Val(2)) * x129));
  Val x203 = ((x38 + x130) - ((x38 * Val(2)) * x130));
  Val x204 = ((x39 + x131) - ((x39 * Val(2)) * x131));
  Val x205 = ((x40 + x132) - ((x40 * Val(2)) * x132));
  Val x206 = ((x41 + x133) - ((x41 * Val(2)) * x133));
  Val x207 = ((x42 + x134) - ((x42 * Val(2)) * x134));
  Val x208 = ((x43 + x135) - ((x43 * Val(2)) * x135));
  Val x209 = ((x44 + x136) - ((x44 * Val(2)) * x136));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:903)
  Val x210 = ((x45 + x140) - ((x45 * Val(2)) * x140));
  Val x211 = ((x46 + x141) - ((x46 * Val(2)) * x141));
  Val x212 = ((x47 + x142) - ((x47 * Val(2)) * x142));
  Val x213 = ((x48 + x143) - ((x48 * Val(2)) * x143));
  Val x214 = ((x49 + x144) - ((x49 * Val(2)) * x144));
  Val x215 = ((x50 + x145) - ((x50 * Val(2)) * x145));
  Val x216 = ((x51 + x146) - ((x51 * Val(2)) * x146));
  Val x217 = ((x52 + x147) - ((x52 * Val(2)) * x147));
  Val x218 = ((x53 + x148) - ((x53 * Val(2)) * x148));
  Val x219 = ((x54 + x149) - ((x54 * Val(2)) * x149));
  Val x220 = ((x55 + x150) - ((x55 * Val(2)) * x150));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:907)
  Val x221 = ((x64 + x151) - ((x64 * Val(2)) * x151));
  Val x222 = ((x65 + x152) - (x86 * x152));
  Val x223 = ((x66 + x153) - ((x66 * Val(2)) * x153));
  Val x224 = ((x67 + x154) - ((x67 * Val(2)) * x154));
  Val x225 = ((x68 + x155) - ((x68 * Val(2)) * x155));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:908)
  Val x226 = ((x69 + x159) - ((x69 * Val(2)) * x159));
  Val x227 = ((x70 + x160) - ((x70 * Val(2)) * x160));
  Val x228 = ((x71 + x161) - ((x71 * Val(2)) * x161));
  Val x229 = ((x72 + x162) - ((x72 * Val(2)) * x162));
  Val x230 = ((x73 + x163) - ((x73 * Val(2)) * x163));
  Val x231 = ((x74 + x164) - ((x74 * Val(2)) * x164));
  Val x232 = ((x75 + x165) - ((x75 * Val(2)) * x165));
  Val x233 = ((x76 + x166) - ((x76 * Val(2)) * x166));
  Val x234 = ((x77 + x167) - ((x77 * Val(2)) * x167));
  Val x235 = ((x78 + x168) - ((x78 * Val(2)) * x168));
  Val x236 = ((x79 + x169) - ((x79 * Val(2)) * x169));
  Val x237 = ((x80 + x170) - ((x80 * Val(2)) * x170));
  Val x238 = ((x81 + x171) - ((x81 * Val(2)) * x171));
  Val x239 = ((x82 + x172) - ((x82 * Val(2)) * x172));
  Val x240 = ((x83 + x173) - ((x83 * Val(2)) * x173));
  Val x241 = ((x84 + x174) - ((x84 * Val(2)) * x174));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:911)
  Val x242 =
      ((((((x178 + (x179 * Val(2))) + (x180 * Val(4))) + (x181 * Val(8))) + (x182 * Val(16))) +
        (x183 * Val(32))) +
       (x184 * Val(64)));
  Val x243 = ((((((x242 + (x185 * Val(128))) + (x186 * Val(256))) + (x187 * Val(512))) +
                (x188 * Val(1024))) +
               (x189 * Val(2048))) +
              (x190 * Val(4096)));
  Val x244 = ((((((x243 + (x191 * Val(8192))) + (x192 * Val(16384))) + (x193 * Val(32768))) +
                (x194 * Val(65536))) +
               (x195 * Val(131072))) +
              (x196 * Val(262144)));
  Val x245 =
      ((((((x200 + (x201 * Val(2))) + (x202 * Val(4))) + (x203 * Val(8))) + (x204 * Val(16))) +
        (x205 * Val(32))) +
       (x206 * Val(64)));
  Val x246 = ((((((x245 + (x207 * Val(128))) + (x208 * Val(256))) + (x209 * Val(512))) +
                (x210 * Val(1024))) +
               (x211 * Val(2048))) +
              (x212 * Val(4096)));
  Val x247 = ((((((x246 + (x213 * Val(8192))) + (x214 * Val(16384))) + (x215 * Val(32768))) +
                (x216 * Val(65536))) +
               (x217 * Val(131072))) +
              (x218 * Val(262144)));
  Val x248 =
      ((((((x221 + (x222 * Val(2))) + (x223 * Val(4))) + (x224 * Val(8))) + (x225 * Val(16))) +
        (x226 * Val(32))) +
       (x227 * Val(64)));
  Val x249 = ((((((x248 + (x228 * Val(128))) + (x229 * Val(256))) + (x230 * Val(512))) +
                (x231 * Val(1024))) +
               (x232 * Val(2048))) +
              (x233 * Val(4096)));
  Val x250 = ((((((x249 + (x234 * Val(8192))) + (x235 * Val(16384))) + (x236 * Val(32768))) +
                (x237 * Val(65536))) +
               (x238 * Val(131072))) +
              (x239 * Val(262144)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:919)
  RetTupleStruct x251 = exec_RetTuple(
      ctx,
      Val22Array{x6,  x7,  x8,  x9,  x10, x11, x12, x13, x14, x15, x16,
                 x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27},
      Val22Array{x178, x179, x180, x181, x182, x183, x184, x185, x186, x187, x188,
                 x189, x190, x191, x192, x193, x194, x195, x196, x197, x198, x199},
      Val22Array{x200, x201, x202, x203, x204, x205, x206, x207, x208, x209, x210,
                 x211, x212, x213, x214, x215, x216, x217, x218, x219, x220, Val(0)},
      Val24Array{x221,
                 x222,
                 x223,
                 x224,
                 x225,
                 x226,
                 x227,
                 x228,
                 x229,
                 x230,
                 x231,
                 x232,
                 x233,
                 x234,
                 x235,
                 x236,
                 x237,
                 x238,
                 x239,
                 x240,
                 x241,
                 (((x244 + (x197 * Val(524288))) + (x198 * Val(1048576))) + (x199 * Val(2097152))),
                 ((x247 + (x219 * Val(524288))) + (x220 * Val(1048576))),
                 ((x250 + (x240 * Val(524288))) + (x241 * Val(1048576)))},
      Val22Array{x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45,
                 x46, x47, x48, x49, x50, x51, x52, x53, x54, x55, x56},
      Val22Array{x64, x65, x66, x67, x68, x69, x70, x71, x72, x73, x74,
                 x75, x76, x77, x78, x79, x80, x81, x82, x83, x84, x85},
      Val(7),
      Val(15),
      Val(0),
      arg0.blk._super,
      x98,
      LAYOUT_LOOKUP(layout1, _super));
  return x251;
}
RetTupleStruct execAbsorbWord_2__1_(ExecContext& ctx,
                                    RetTupleStruct arg0,
                                    BoundLayout<AbsorbWord_2__1_Layout> layout1) {
  // absorb_word(zirgen/circuit/keccak/keccak.zir:855)
  NondetRegStruct22Array x2 = arg0.arrB;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:862)
  Val x3 = arg0.arrA[21]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:874)
  ToBits_22_Struct x4 = exec_ToBits_22_(ctx, x3, LAYOUT_LOOKUP(layout1, unpackA));
  NondetRegStruct22Array x5 = x4._super;
  Val x6 = x5[0]._super;
  Val x7 = x5[1]._super;
  Val x8 = x5[2]._super;
  Val x9 = x5[3]._super;
  Val x10 = x5[4]._super;
  Val x11 = x5[5]._super;
  Val x12 = x5[6]._super;
  Val x13 = x5[7]._super;
  Val x14 = x5[8]._super;
  Val x15 = x5[9]._super;
  Val x16 = x5[10]._super;
  Val x17 = x5[11]._super;
  Val x18 = x5[12]._super;
  Val x19 = x5[13]._super;
  Val x20 = x5[14]._super;
  Val x21 = x5[15]._super;
  Val x22 = x5[16]._super;
  Val x23 = x5[17]._super;
  Val x24 = x5[18]._super;
  Val x25 = x5[19]._super;
  Val x26 = x5[20]._super;
  Val x27 = x5[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:875)
  Val x28 = (x7 * Val(2));
  Val x29 =
      ((((((x6 + x28) + (x8 * Val(4))) + (x9 * Val(8))) + (x10 * Val(16))) + (x11 * Val(32))) +
       (x12 * Val(64)));
  Val x30 =
      ((((((x29 + (x13 * Val(128))) + (x14 * Val(256))) + (x15 * Val(512))) + (x16 * Val(1024))) +
        (x17 * Val(2048))) +
       (x18 * Val(4096)));
  Val x31 = ((((((x30 + (x19 * Val(8192))) + (x20 * Val(16384))) + (x21 * Val(32768))) +
               (x22 * Val(65536))) +
              (x23 * Val(131072))) +
             (x24 * Val(262144)));
  EQZ(((((x31 + (x25 * Val(524288))) + (x26 * Val(1048576))) + (x27 * Val(2097152))) - x3),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:875)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:866)
  Val x32 = x2[0]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:876)
  ToBits_22_Struct x33 = exec_ToBits_22_(ctx, x32, LAYOUT_LOOKUP(layout1, unpackE));
  NondetRegStruct22Array x34 = x33._super;
  Val x35 = x34[0]._super;
  Val x36 = x34[1]._super;
  Val x37 = x34[2]._super;
  Val x38 = x34[3]._super;
  Val x39 = x34[4]._super;
  Val x40 = x34[5]._super;
  Val x41 = x34[6]._super;
  Val x42 = x34[7]._super;
  Val x43 = x34[8]._super;
  Val x44 = x34[9]._super;
  Val x45 = x34[10]._super;
  Val x46 = x34[11]._super;
  Val x47 = x34[12]._super;
  Val x48 = x34[13]._super;
  Val x49 = x34[14]._super;
  Val x50 = x34[15]._super;
  Val x51 = x34[16]._super;
  Val x52 = x34[17]._super;
  Val x53 = x34[18]._super;
  Val x54 = x34[19]._super;
  Val x55 = x34[20]._super;
  Val x56 = x34[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:877)
  Val x57 = (x36 * Val(2));
  Val x58 =
      ((((((x35 + x57) + (x37 * Val(4))) + (x38 * Val(8))) + (x39 * Val(16))) + (x40 * Val(32))) +
       (x41 * Val(64)));
  Val x59 =
      ((((((x58 + (x42 * Val(128))) + (x43 * Val(256))) + (x44 * Val(512))) + (x45 * Val(1024))) +
        (x46 * Val(2048))) +
       (x47 * Val(4096)));
  Val x60 = ((((((x59 + (x48 * Val(8192))) + (x49 * Val(16384))) + (x50 * Val(32768))) +
               (x51 * Val(65536))) +
              (x52 * Val(131072))) +
             (x53 * Val(262144)));
  EQZ(((((x60 + (x54 * Val(524288))) + (x55 * Val(1048576))) + (x56 * Val(2097152))) - x32),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:877)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:870)
  Val x61 = x2[1]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:878)
  ToBits_22_Struct x62 = exec_ToBits_22_(ctx, x61, LAYOUT_LOOKUP(layout1, unpackF));
  NondetRegStruct22Array x63 = x62._super;
  Val x64 = x63[0]._super;
  Val x65 = x63[1]._super;
  Val x66 = x63[2]._super;
  Val x67 = x63[3]._super;
  Val x68 = x63[4]._super;
  Val x69 = x63[5]._super;
  Val x70 = x63[6]._super;
  Val x71 = x63[7]._super;
  Val x72 = x63[8]._super;
  Val x73 = x63[9]._super;
  Val x74 = x63[10]._super;
  Val x75 = x63[11]._super;
  Val x76 = x63[12]._super;
  Val x77 = x63[13]._super;
  Val x78 = x63[14]._super;
  Val x79 = x63[15]._super;
  Val x80 = x63[16]._super;
  Val x81 = x63[17]._super;
  Val x82 = x63[18]._super;
  Val x83 = x63[19]._super;
  Val x84 = x63[20]._super;
  Val x85 = x63[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:879)
  Val x86 = (x65 * Val(2));
  Val x87 =
      ((((((x64 + x86) + (x66 * Val(4))) + (x67 * Val(8))) + (x68 * Val(16))) + (x69 * Val(32))) +
       (x70 * Val(64)));
  Val x88 =
      ((((((x87 + (x71 * Val(128))) + (x72 * Val(256))) + (x73 * Val(512))) + (x74 * Val(1024))) +
        (x75 * Val(2048))) +
       (x76 * Val(4096)));
  Val x89 = ((((((x88 + (x77 * Val(8192))) + (x78 * Val(16384))) + (x79 * Val(32768))) +
               (x80 * Val(65536))) +
              (x81 * Val(131072))) +
             (x82 * Val(262144)));
  EQZ(((((x89 + (x83 * Val(524288))) + (x84 * Val(1048576))) + (x85 * Val(2097152))) - x61),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:879)");
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:881)
  Val x90 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:882)
  ToBits_16_Struct x91 = exec_ToBits_16_(ctx, x90, LAYOUT_LOOKUP(layout1, unpack_1));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:883)
  Val x92 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:884)
  ToBits_16_Struct x93 = exec_ToBits_16_(ctx, x92, LAYOUT_LOOKUP(layout1, unpack_2));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:885)
  Val x94 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:886)
  ToBits_16_Struct x95 = exec_ToBits_16_(ctx, x94, LAYOUT_LOOKUP(layout1, unpack_3));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:887)
  Val x96 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:888)
  ToBits_16_Struct x97 = exec_ToBits_16_(ctx, x96, LAYOUT_LOOKUP(layout1, unpack_4));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:855)
  Val x98 = arg0.midx._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:889)
  Val x99 = (((x98 + Val(1)) + Val(2)) + Val(5));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:890)
  NondetRegStruct x100 = exec_NondetReg(ctx, inv(x99), LAYOUT_LOOKUP(layout1, invmidx));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:891)
  EQZ(((x100._super * x99) - Val(1)), "absorb_word(zirgen/circuit/keccak/keccak.zir:891)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:882)
  NondetRegStruct16Array x101 = x91._super;
  Val x102 = x101[0]._super;
  Val x103 = x101[1]._super;
  Val x104 = x101[2]._super;
  Val x105 = x101[3]._super;
  Val x106 = x101[4]._super;
  Val x107 = x101[5]._super;
  Val x108 = x101[6]._super;
  Val x109 = x101[7]._super;
  Val x110 = x101[8]._super;
  Val x111 = x101[9]._super;
  Val x112 = x101[10]._super;
  Val x113 = x101[11]._super;
  Val x114 = x101[12]._super;
  Val x115 = x101[13]._super;
  Val x116 = x101[14]._super;
  Val x117 = x101[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x118 =
      ((((((x102 + (x103 * Val(2))) + (x104 * Val(4))) + (x105 * Val(8))) + (x106 * Val(16))) +
        (x107 * Val(32))) +
       (x108 * Val(64)));
  Val x119 = ((((((x118 + (x109 * Val(128))) + (x110 * Val(256))) + (x111 * Val(512))) +
                (x112 * Val(1024))) +
               (x113 * Val(2048))) +
              (x114 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:884)
  NondetRegStruct16Array x120 = x93._super;
  Val x121 = x120[0]._super;
  Val x122 = x120[1]._super;
  Val x123 = x120[2]._super;
  Val x124 = x120[3]._super;
  Val x125 = x120[4]._super;
  Val x126 = x120[5]._super;
  Val x127 = x120[6]._super;
  Val x128 = x120[7]._super;
  Val x129 = x120[8]._super;
  Val x130 = x120[9]._super;
  Val x131 = x120[10]._super;
  Val x132 = x120[11]._super;
  Val x133 = x120[12]._super;
  Val x134 = x120[13]._super;
  Val x135 = x120[14]._super;
  Val x136 = x120[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x137 =
      ((((((x121 + (x122 * Val(2))) + (x123 * Val(4))) + (x124 * Val(8))) + (x125 * Val(16))) +
        (x126 * Val(32))) +
       (x127 * Val(64)));
  Val x138 = ((((((x137 + (x128 * Val(128))) + (x129 * Val(256))) + (x130 * Val(512))) +
                (x131 * Val(1024))) +
               (x132 * Val(2048))) +
              (x133 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:886)
  NondetRegStruct16Array x139 = x95._super;
  Val x140 = x139[0]._super;
  Val x141 = x139[1]._super;
  Val x142 = x139[2]._super;
  Val x143 = x139[3]._super;
  Val x144 = x139[4]._super;
  Val x145 = x139[5]._super;
  Val x146 = x139[6]._super;
  Val x147 = x139[7]._super;
  Val x148 = x139[8]._super;
  Val x149 = x139[9]._super;
  Val x150 = x139[10]._super;
  Val x151 = x139[11]._super;
  Val x152 = x139[12]._super;
  Val x153 = x139[13]._super;
  Val x154 = x139[14]._super;
  Val x155 = x139[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x156 =
      ((((((x140 + (x141 * Val(2))) + (x142 * Val(4))) + (x143 * Val(8))) + (x144 * Val(16))) +
        (x145 * Val(32))) +
       (x146 * Val(64)));
  Val x157 = ((((((x156 + (x147 * Val(128))) + (x148 * Val(256))) + (x149 * Val(512))) +
                (x150 * Val(1024))) +
               (x151 * Val(2048))) +
              (x152 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:888)
  NondetRegStruct16Array x158 = x97._super;
  Val x159 = x158[0]._super;
  Val x160 = x158[1]._super;
  Val x161 = x158[2]._super;
  Val x162 = x158[3]._super;
  Val x163 = x158[4]._super;
  Val x164 = x158[5]._super;
  Val x165 = x158[6]._super;
  Val x166 = x158[7]._super;
  Val x167 = x158[8]._super;
  Val x168 = x158[9]._super;
  Val x169 = x158[10]._super;
  Val x170 = x158[11]._super;
  Val x171 = x158[12]._super;
  Val x172 = x158[13]._super;
  Val x173 = x158[14]._super;
  Val x174 = x158[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x175 =
      ((((((x159 + (x160 * Val(2))) + (x161 * Val(4))) + (x162 * Val(8))) + (x163 * Val(16))) +
        (x164 * Val(32))) +
       (x165 * Val(64)));
  Val x176 = ((((((x175 + (x166 * Val(128))) + (x167 * Val(256))) + (x168 * Val(512))) +
                (x169 * Val(1024))) +
               (x170 * Val(2048))) +
              (x171 * Val(4096)));
  WriteMemoryStruct x177 = exec_WriteMemory(
      ctx,
      x99,
      MemDigestStruct{
          ._super =
              Val4Array{
                  (((x119 + (x115 * Val(8192))) + (x116 * Val(16384))) + (x117 * Val(32768))),
                  (((x138 + (x134 * Val(8192))) + (x135 * Val(16384))) + (x136 * Val(32768))),
                  (((x157 + (x153 * Val(8192))) + (x154 * Val(16384))) + (x155 * Val(32768))),
                  (((x176 + (x172 * Val(8192))) + (x173 * Val(16384))) + (x174 * Val(32768)))}},
      LAYOUT_LOOKUP(layout1, _0));
  // xor2(zirgen/circuit/keccak/keccak.zir:114)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:897)
  Val x178 = ((x6 + x102) - ((x6 * Val(2)) * x102));
  Val x179 = ((x7 + x103) - (x28 * x103));
  Val x180 = ((x8 + x104) - ((x8 * Val(2)) * x104));
  Val x181 = ((x9 + x105) - ((x9 * Val(2)) * x105));
  Val x182 = ((x10 + x106) - ((x10 * Val(2)) * x106));
  Val x183 = ((x11 + x107) - ((x11 * Val(2)) * x107));
  Val x184 = ((x12 + x108) - ((x12 * Val(2)) * x108));
  Val x185 = ((x13 + x109) - ((x13 * Val(2)) * x109));
  Val x186 = ((x14 + x110) - ((x14 * Val(2)) * x110));
  Val x187 = ((x15 + x111) - ((x15 * Val(2)) * x111));
  Val x188 = ((x16 + x112) - ((x16 * Val(2)) * x112));
  Val x189 = ((x17 + x113) - ((x17 * Val(2)) * x113));
  Val x190 = ((x18 + x114) - ((x18 * Val(2)) * x114));
  Val x191 = ((x19 + x115) - ((x19 * Val(2)) * x115));
  Val x192 = ((x20 + x116) - ((x20 * Val(2)) * x116));
  Val x193 = ((x21 + x117) - ((x21 * Val(2)) * x117));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:898)
  Val x194 = ((x22 + x121) - ((x22 * Val(2)) * x121));
  Val x195 = ((x23 + x122) - ((x23 * Val(2)) * x122));
  Val x196 = ((x24 + x123) - ((x24 * Val(2)) * x123));
  Val x197 = ((x25 + x124) - ((x25 * Val(2)) * x124));
  Val x198 = ((x26 + x125) - ((x26 * Val(2)) * x125));
  Val x199 = ((x27 + x126) - ((x27 * Val(2)) * x126));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:902)
  Val x200 = ((x35 + x127) - ((x35 * Val(2)) * x127));
  Val x201 = ((x36 + x128) - (x57 * x128));
  Val x202 = ((x37 + x129) - ((x37 * Val(2)) * x129));
  Val x203 = ((x38 + x130) - ((x38 * Val(2)) * x130));
  Val x204 = ((x39 + x131) - ((x39 * Val(2)) * x131));
  Val x205 = ((x40 + x132) - ((x40 * Val(2)) * x132));
  Val x206 = ((x41 + x133) - ((x41 * Val(2)) * x133));
  Val x207 = ((x42 + x134) - ((x42 * Val(2)) * x134));
  Val x208 = ((x43 + x135) - ((x43 * Val(2)) * x135));
  Val x209 = ((x44 + x136) - ((x44 * Val(2)) * x136));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:903)
  Val x210 = ((x45 + x140) - ((x45 * Val(2)) * x140));
  Val x211 = ((x46 + x141) - ((x46 * Val(2)) * x141));
  Val x212 = ((x47 + x142) - ((x47 * Val(2)) * x142));
  Val x213 = ((x48 + x143) - ((x48 * Val(2)) * x143));
  Val x214 = ((x49 + x144) - ((x49 * Val(2)) * x144));
  Val x215 = ((x50 + x145) - ((x50 * Val(2)) * x145));
  Val x216 = ((x51 + x146) - ((x51 * Val(2)) * x146));
  Val x217 = ((x52 + x147) - ((x52 * Val(2)) * x147));
  Val x218 = ((x53 + x148) - ((x53 * Val(2)) * x148));
  Val x219 = ((x54 + x149) - ((x54 * Val(2)) * x149));
  Val x220 = ((x55 + x150) - ((x55 * Val(2)) * x150));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:907)
  Val x221 = ((x64 + x151) - ((x64 * Val(2)) * x151));
  Val x222 = ((x65 + x152) - (x86 * x152));
  Val x223 = ((x66 + x153) - ((x66 * Val(2)) * x153));
  Val x224 = ((x67 + x154) - ((x67 * Val(2)) * x154));
  Val x225 = ((x68 + x155) - ((x68 * Val(2)) * x155));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:908)
  Val x226 = ((x69 + x159) - ((x69 * Val(2)) * x159));
  Val x227 = ((x70 + x160) - ((x70 * Val(2)) * x160));
  Val x228 = ((x71 + x161) - ((x71 * Val(2)) * x161));
  Val x229 = ((x72 + x162) - ((x72 * Val(2)) * x162));
  Val x230 = ((x73 + x163) - ((x73 * Val(2)) * x163));
  Val x231 = ((x74 + x164) - ((x74 * Val(2)) * x164));
  Val x232 = ((x75 + x165) - ((x75 * Val(2)) * x165));
  Val x233 = ((x76 + x166) - ((x76 * Val(2)) * x166));
  Val x234 = ((x77 + x167) - ((x77 * Val(2)) * x167));
  Val x235 = ((x78 + x168) - ((x78 * Val(2)) * x168));
  Val x236 = ((x79 + x169) - ((x79 * Val(2)) * x169));
  Val x237 = ((x80 + x170) - ((x80 * Val(2)) * x170));
  Val x238 = ((x81 + x171) - ((x81 * Val(2)) * x171));
  Val x239 = ((x82 + x172) - ((x82 * Val(2)) * x172));
  Val x240 = ((x83 + x173) - ((x83 * Val(2)) * x173));
  Val x241 = ((x84 + x174) - ((x84 * Val(2)) * x174));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:911)
  Val x242 =
      ((((((x178 + (x179 * Val(2))) + (x180 * Val(4))) + (x181 * Val(8))) + (x182 * Val(16))) +
        (x183 * Val(32))) +
       (x184 * Val(64)));
  Val x243 = ((((((x242 + (x185 * Val(128))) + (x186 * Val(256))) + (x187 * Val(512))) +
                (x188 * Val(1024))) +
               (x189 * Val(2048))) +
              (x190 * Val(4096)));
  Val x244 = ((((((x243 + (x191 * Val(8192))) + (x192 * Val(16384))) + (x193 * Val(32768))) +
                (x194 * Val(65536))) +
               (x195 * Val(131072))) +
              (x196 * Val(262144)));
  Val x245 =
      ((((((x200 + (x201 * Val(2))) + (x202 * Val(4))) + (x203 * Val(8))) + (x204 * Val(16))) +
        (x205 * Val(32))) +
       (x206 * Val(64)));
  Val x246 = ((((((x245 + (x207 * Val(128))) + (x208 * Val(256))) + (x209 * Val(512))) +
                (x210 * Val(1024))) +
               (x211 * Val(2048))) +
              (x212 * Val(4096)));
  Val x247 = ((((((x246 + (x213 * Val(8192))) + (x214 * Val(16384))) + (x215 * Val(32768))) +
                (x216 * Val(65536))) +
               (x217 * Val(131072))) +
              (x218 * Val(262144)));
  Val x248 =
      ((((((x221 + (x222 * Val(2))) + (x223 * Val(4))) + (x224 * Val(8))) + (x225 * Val(16))) +
        (x226 * Val(32))) +
       (x227 * Val(64)));
  Val x249 = ((((((x248 + (x228 * Val(128))) + (x229 * Val(256))) + (x230 * Val(512))) +
                (x231 * Val(1024))) +
               (x232 * Val(2048))) +
              (x233 * Val(4096)));
  Val x250 = ((((((x249 + (x234 * Val(8192))) + (x235 * Val(16384))) + (x236 * Val(32768))) +
                (x237 * Val(65536))) +
               (x238 * Val(131072))) +
              (x239 * Val(262144)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:919)
  RetTupleStruct x251 = exec_RetTuple(
      ctx,
      Val22Array{x6,  x7,  x8,  x9,  x10, x11, x12, x13, x14, x15, x16,
                 x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27},
      Val22Array{x178, x179, x180, x181, x182, x183, x184, x185, x186, x187, x188,
                 x189, x190, x191, x192, x193, x194, x195, x196, x197, x198, x199},
      Val22Array{x200, x201, x202, x203, x204, x205, x206, x207, x208, x209, x210,
                 x211, x212, x213, x214, x215, x216, x217, x218, x219, x220, Val(0)},
      Val24Array{x221,
                 x222,
                 x223,
                 x224,
                 x225,
                 x226,
                 x227,
                 x228,
                 x229,
                 x230,
                 x231,
                 x232,
                 x233,
                 x234,
                 x235,
                 x236,
                 x237,
                 x238,
                 x239,
                 x240,
                 x241,
                 (((x244 + (x197 * Val(524288))) + (x198 * Val(1048576))) + (x199 * Val(2097152))),
                 ((x247 + (x219 * Val(524288))) + (x220 * Val(1048576))),
                 ((x250 + (x240 * Val(524288))) + (x241 * Val(1048576)))},
      Val22Array{x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45,
                 x46, x47, x48, x49, x50, x51, x52, x53, x54, x55, x56},
      Val22Array{x64, x65, x66, x67, x68, x69, x70, x71, x72, x73, x74,
                 x75, x76, x77, x78, x79, x80, x81, x82, x83, x84, x85},
      Val(8),
      Val(15),
      Val(0),
      arg0.blk._super,
      x98,
      LAYOUT_LOOKUP(layout1, _super));
  return x251;
}
RetTupleStruct execAbsorbWord_3__1_(ExecContext& ctx,
                                    RetTupleStruct arg0,
                                    BoundLayout<AbsorbWord_3__1_Layout> layout1) {
  // absorb_word(zirgen/circuit/keccak/keccak.zir:855)
  NondetRegStruct22Array x2 = arg0.arrB;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:862)
  Val x3 = x2[2]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:874)
  ToBits_22_Struct x4 = exec_ToBits_22_(ctx, x3, LAYOUT_LOOKUP(layout1, unpackA));
  NondetRegStruct22Array x5 = x4._super;
  Val x6 = x5[0]._super;
  Val x7 = x5[1]._super;
  Val x8 = x5[2]._super;
  Val x9 = x5[3]._super;
  Val x10 = x5[4]._super;
  Val x11 = x5[5]._super;
  Val x12 = x5[6]._super;
  Val x13 = x5[7]._super;
  Val x14 = x5[8]._super;
  Val x15 = x5[9]._super;
  Val x16 = x5[10]._super;
  Val x17 = x5[11]._super;
  Val x18 = x5[12]._super;
  Val x19 = x5[13]._super;
  Val x20 = x5[14]._super;
  Val x21 = x5[15]._super;
  Val x22 = x5[16]._super;
  Val x23 = x5[17]._super;
  Val x24 = x5[18]._super;
  Val x25 = x5[19]._super;
  Val x26 = x5[20]._super;
  Val x27 = x5[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:875)
  Val x28 = (x7 * Val(2));
  Val x29 =
      ((((((x6 + x28) + (x8 * Val(4))) + (x9 * Val(8))) + (x10 * Val(16))) + (x11 * Val(32))) +
       (x12 * Val(64)));
  Val x30 =
      ((((((x29 + (x13 * Val(128))) + (x14 * Val(256))) + (x15 * Val(512))) + (x16 * Val(1024))) +
        (x17 * Val(2048))) +
       (x18 * Val(4096)));
  Val x31 = ((((((x30 + (x19 * Val(8192))) + (x20 * Val(16384))) + (x21 * Val(32768))) +
               (x22 * Val(65536))) +
              (x23 * Val(131072))) +
             (x24 * Val(262144)));
  EQZ(((((x31 + (x25 * Val(524288))) + (x26 * Val(1048576))) + (x27 * Val(2097152))) - x3),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:875)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:866)
  Val x32 = x2[3]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:876)
  ToBits_22_Struct x33 = exec_ToBits_22_(ctx, x32, LAYOUT_LOOKUP(layout1, unpackE));
  NondetRegStruct22Array x34 = x33._super;
  Val x35 = x34[0]._super;
  Val x36 = x34[1]._super;
  Val x37 = x34[2]._super;
  Val x38 = x34[3]._super;
  Val x39 = x34[4]._super;
  Val x40 = x34[5]._super;
  Val x41 = x34[6]._super;
  Val x42 = x34[7]._super;
  Val x43 = x34[8]._super;
  Val x44 = x34[9]._super;
  Val x45 = x34[10]._super;
  Val x46 = x34[11]._super;
  Val x47 = x34[12]._super;
  Val x48 = x34[13]._super;
  Val x49 = x34[14]._super;
  Val x50 = x34[15]._super;
  Val x51 = x34[16]._super;
  Val x52 = x34[17]._super;
  Val x53 = x34[18]._super;
  Val x54 = x34[19]._super;
  Val x55 = x34[20]._super;
  Val x56 = x34[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:877)
  Val x57 = (x36 * Val(2));
  Val x58 =
      ((((((x35 + x57) + (x37 * Val(4))) + (x38 * Val(8))) + (x39 * Val(16))) + (x40 * Val(32))) +
       (x41 * Val(64)));
  Val x59 =
      ((((((x58 + (x42 * Val(128))) + (x43 * Val(256))) + (x44 * Val(512))) + (x45 * Val(1024))) +
        (x46 * Val(2048))) +
       (x47 * Val(4096)));
  Val x60 = ((((((x59 + (x48 * Val(8192))) + (x49 * Val(16384))) + (x50 * Val(32768))) +
               (x51 * Val(65536))) +
              (x52 * Val(131072))) +
             (x53 * Val(262144)));
  EQZ(((((x60 + (x54 * Val(524288))) + (x55 * Val(1048576))) + (x56 * Val(2097152))) - x32),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:877)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:870)
  Val x61 = x2[4]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:878)
  ToBits_22_Struct x62 = exec_ToBits_22_(ctx, x61, LAYOUT_LOOKUP(layout1, unpackF));
  NondetRegStruct22Array x63 = x62._super;
  Val x64 = x63[0]._super;
  Val x65 = x63[1]._super;
  Val x66 = x63[2]._super;
  Val x67 = x63[3]._super;
  Val x68 = x63[4]._super;
  Val x69 = x63[5]._super;
  Val x70 = x63[6]._super;
  Val x71 = x63[7]._super;
  Val x72 = x63[8]._super;
  Val x73 = x63[9]._super;
  Val x74 = x63[10]._super;
  Val x75 = x63[11]._super;
  Val x76 = x63[12]._super;
  Val x77 = x63[13]._super;
  Val x78 = x63[14]._super;
  Val x79 = x63[15]._super;
  Val x80 = x63[16]._super;
  Val x81 = x63[17]._super;
  Val x82 = x63[18]._super;
  Val x83 = x63[19]._super;
  Val x84 = x63[20]._super;
  Val x85 = x63[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:879)
  Val x86 = (x65 * Val(2));
  Val x87 =
      ((((((x64 + x86) + (x66 * Val(4))) + (x67 * Val(8))) + (x68 * Val(16))) + (x69 * Val(32))) +
       (x70 * Val(64)));
  Val x88 =
      ((((((x87 + (x71 * Val(128))) + (x72 * Val(256))) + (x73 * Val(512))) + (x74 * Val(1024))) +
        (x75 * Val(2048))) +
       (x76 * Val(4096)));
  Val x89 = ((((((x88 + (x77 * Val(8192))) + (x78 * Val(16384))) + (x79 * Val(32768))) +
               (x80 * Val(65536))) +
              (x81 * Val(131072))) +
             (x82 * Val(262144)));
  EQZ(((((x89 + (x83 * Val(524288))) + (x84 * Val(1048576))) + (x85 * Val(2097152))) - x61),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:879)");
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:881)
  Val x90 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:882)
  ToBits_16_Struct x91 = exec_ToBits_16_(ctx, x90, LAYOUT_LOOKUP(layout1, unpack_1));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:883)
  Val x92 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:884)
  ToBits_16_Struct x93 = exec_ToBits_16_(ctx, x92, LAYOUT_LOOKUP(layout1, unpack_2));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:885)
  Val x94 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:886)
  ToBits_16_Struct x95 = exec_ToBits_16_(ctx, x94, LAYOUT_LOOKUP(layout1, unpack_3));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:887)
  Val x96 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:888)
  ToBits_16_Struct x97 = exec_ToBits_16_(ctx, x96, LAYOUT_LOOKUP(layout1, unpack_4));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:855)
  Val x98 = arg0.midx._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:889)
  Val x99 = (((x98 + Val(1)) + Val(3)) + Val(5));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:890)
  NondetRegStruct x100 = exec_NondetReg(ctx, inv(x99), LAYOUT_LOOKUP(layout1, invmidx));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:891)
  EQZ(((x100._super * x99) - Val(1)), "absorb_word(zirgen/circuit/keccak/keccak.zir:891)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:882)
  NondetRegStruct16Array x101 = x91._super;
  Val x102 = x101[0]._super;
  Val x103 = x101[1]._super;
  Val x104 = x101[2]._super;
  Val x105 = x101[3]._super;
  Val x106 = x101[4]._super;
  Val x107 = x101[5]._super;
  Val x108 = x101[6]._super;
  Val x109 = x101[7]._super;
  Val x110 = x101[8]._super;
  Val x111 = x101[9]._super;
  Val x112 = x101[10]._super;
  Val x113 = x101[11]._super;
  Val x114 = x101[12]._super;
  Val x115 = x101[13]._super;
  Val x116 = x101[14]._super;
  Val x117 = x101[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x118 =
      ((((((x102 + (x103 * Val(2))) + (x104 * Val(4))) + (x105 * Val(8))) + (x106 * Val(16))) +
        (x107 * Val(32))) +
       (x108 * Val(64)));
  Val x119 = ((((((x118 + (x109 * Val(128))) + (x110 * Val(256))) + (x111 * Val(512))) +
                (x112 * Val(1024))) +
               (x113 * Val(2048))) +
              (x114 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:884)
  NondetRegStruct16Array x120 = x93._super;
  Val x121 = x120[0]._super;
  Val x122 = x120[1]._super;
  Val x123 = x120[2]._super;
  Val x124 = x120[3]._super;
  Val x125 = x120[4]._super;
  Val x126 = x120[5]._super;
  Val x127 = x120[6]._super;
  Val x128 = x120[7]._super;
  Val x129 = x120[8]._super;
  Val x130 = x120[9]._super;
  Val x131 = x120[10]._super;
  Val x132 = x120[11]._super;
  Val x133 = x120[12]._super;
  Val x134 = x120[13]._super;
  Val x135 = x120[14]._super;
  Val x136 = x120[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x137 =
      ((((((x121 + (x122 * Val(2))) + (x123 * Val(4))) + (x124 * Val(8))) + (x125 * Val(16))) +
        (x126 * Val(32))) +
       (x127 * Val(64)));
  Val x138 = ((((((x137 + (x128 * Val(128))) + (x129 * Val(256))) + (x130 * Val(512))) +
                (x131 * Val(1024))) +
               (x132 * Val(2048))) +
              (x133 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:886)
  NondetRegStruct16Array x139 = x95._super;
  Val x140 = x139[0]._super;
  Val x141 = x139[1]._super;
  Val x142 = x139[2]._super;
  Val x143 = x139[3]._super;
  Val x144 = x139[4]._super;
  Val x145 = x139[5]._super;
  Val x146 = x139[6]._super;
  Val x147 = x139[7]._super;
  Val x148 = x139[8]._super;
  Val x149 = x139[9]._super;
  Val x150 = x139[10]._super;
  Val x151 = x139[11]._super;
  Val x152 = x139[12]._super;
  Val x153 = x139[13]._super;
  Val x154 = x139[14]._super;
  Val x155 = x139[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x156 =
      ((((((x140 + (x141 * Val(2))) + (x142 * Val(4))) + (x143 * Val(8))) + (x144 * Val(16))) +
        (x145 * Val(32))) +
       (x146 * Val(64)));
  Val x157 = ((((((x156 + (x147 * Val(128))) + (x148 * Val(256))) + (x149 * Val(512))) +
                (x150 * Val(1024))) +
               (x151 * Val(2048))) +
              (x152 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:888)
  NondetRegStruct16Array x158 = x97._super;
  Val x159 = x158[0]._super;
  Val x160 = x158[1]._super;
  Val x161 = x158[2]._super;
  Val x162 = x158[3]._super;
  Val x163 = x158[4]._super;
  Val x164 = x158[5]._super;
  Val x165 = x158[6]._super;
  Val x166 = x158[7]._super;
  Val x167 = x158[8]._super;
  Val x168 = x158[9]._super;
  Val x169 = x158[10]._super;
  Val x170 = x158[11]._super;
  Val x171 = x158[12]._super;
  Val x172 = x158[13]._super;
  Val x173 = x158[14]._super;
  Val x174 = x158[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x175 =
      ((((((x159 + (x160 * Val(2))) + (x161 * Val(4))) + (x162 * Val(8))) + (x163 * Val(16))) +
        (x164 * Val(32))) +
       (x165 * Val(64)));
  Val x176 = ((((((x175 + (x166 * Val(128))) + (x167 * Val(256))) + (x168 * Val(512))) +
                (x169 * Val(1024))) +
               (x170 * Val(2048))) +
              (x171 * Val(4096)));
  WriteMemoryStruct x177 = exec_WriteMemory(
      ctx,
      x99,
      MemDigestStruct{
          ._super =
              Val4Array{
                  (((x119 + (x115 * Val(8192))) + (x116 * Val(16384))) + (x117 * Val(32768))),
                  (((x138 + (x134 * Val(8192))) + (x135 * Val(16384))) + (x136 * Val(32768))),
                  (((x157 + (x153 * Val(8192))) + (x154 * Val(16384))) + (x155 * Val(32768))),
                  (((x176 + (x172 * Val(8192))) + (x173 * Val(16384))) + (x174 * Val(32768)))}},
      LAYOUT_LOOKUP(layout1, _0));
  // xor2(zirgen/circuit/keccak/keccak.zir:114)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:897)
  Val x178 = ((x6 + x102) - ((x6 * Val(2)) * x102));
  Val x179 = ((x7 + x103) - (x28 * x103));
  Val x180 = ((x8 + x104) - ((x8 * Val(2)) * x104));
  Val x181 = ((x9 + x105) - ((x9 * Val(2)) * x105));
  Val x182 = ((x10 + x106) - ((x10 * Val(2)) * x106));
  Val x183 = ((x11 + x107) - ((x11 * Val(2)) * x107));
  Val x184 = ((x12 + x108) - ((x12 * Val(2)) * x108));
  Val x185 = ((x13 + x109) - ((x13 * Val(2)) * x109));
  Val x186 = ((x14 + x110) - ((x14 * Val(2)) * x110));
  Val x187 = ((x15 + x111) - ((x15 * Val(2)) * x111));
  Val x188 = ((x16 + x112) - ((x16 * Val(2)) * x112));
  Val x189 = ((x17 + x113) - ((x17 * Val(2)) * x113));
  Val x190 = ((x18 + x114) - ((x18 * Val(2)) * x114));
  Val x191 = ((x19 + x115) - ((x19 * Val(2)) * x115));
  Val x192 = ((x20 + x116) - ((x20 * Val(2)) * x116));
  Val x193 = ((x21 + x117) - ((x21 * Val(2)) * x117));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:898)
  Val x194 = ((x22 + x121) - ((x22 * Val(2)) * x121));
  Val x195 = ((x23 + x122) - ((x23 * Val(2)) * x122));
  Val x196 = ((x24 + x123) - ((x24 * Val(2)) * x123));
  Val x197 = ((x25 + x124) - ((x25 * Val(2)) * x124));
  Val x198 = ((x26 + x125) - ((x26 * Val(2)) * x125));
  Val x199 = ((x27 + x126) - ((x27 * Val(2)) * x126));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:902)
  Val x200 = ((x35 + x127) - ((x35 * Val(2)) * x127));
  Val x201 = ((x36 + x128) - (x57 * x128));
  Val x202 = ((x37 + x129) - ((x37 * Val(2)) * x129));
  Val x203 = ((x38 + x130) - ((x38 * Val(2)) * x130));
  Val x204 = ((x39 + x131) - ((x39 * Val(2)) * x131));
  Val x205 = ((x40 + x132) - ((x40 * Val(2)) * x132));
  Val x206 = ((x41 + x133) - ((x41 * Val(2)) * x133));
  Val x207 = ((x42 + x134) - ((x42 * Val(2)) * x134));
  Val x208 = ((x43 + x135) - ((x43 * Val(2)) * x135));
  Val x209 = ((x44 + x136) - ((x44 * Val(2)) * x136));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:903)
  Val x210 = ((x45 + x140) - ((x45 * Val(2)) * x140));
  Val x211 = ((x46 + x141) - ((x46 * Val(2)) * x141));
  Val x212 = ((x47 + x142) - ((x47 * Val(2)) * x142));
  Val x213 = ((x48 + x143) - ((x48 * Val(2)) * x143));
  Val x214 = ((x49 + x144) - ((x49 * Val(2)) * x144));
  Val x215 = ((x50 + x145) - ((x50 * Val(2)) * x145));
  Val x216 = ((x51 + x146) - ((x51 * Val(2)) * x146));
  Val x217 = ((x52 + x147) - ((x52 * Val(2)) * x147));
  Val x218 = ((x53 + x148) - ((x53 * Val(2)) * x148));
  Val x219 = ((x54 + x149) - ((x54 * Val(2)) * x149));
  Val x220 = ((x55 + x150) - ((x55 * Val(2)) * x150));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:907)
  Val x221 = ((x64 + x151) - ((x64 * Val(2)) * x151));
  Val x222 = ((x65 + x152) - (x86 * x152));
  Val x223 = ((x66 + x153) - ((x66 * Val(2)) * x153));
  Val x224 = ((x67 + x154) - ((x67 * Val(2)) * x154));
  Val x225 = ((x68 + x155) - ((x68 * Val(2)) * x155));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:908)
  Val x226 = ((x69 + x159) - ((x69 * Val(2)) * x159));
  Val x227 = ((x70 + x160) - ((x70 * Val(2)) * x160));
  Val x228 = ((x71 + x161) - ((x71 * Val(2)) * x161));
  Val x229 = ((x72 + x162) - ((x72 * Val(2)) * x162));
  Val x230 = ((x73 + x163) - ((x73 * Val(2)) * x163));
  Val x231 = ((x74 + x164) - ((x74 * Val(2)) * x164));
  Val x232 = ((x75 + x165) - ((x75 * Val(2)) * x165));
  Val x233 = ((x76 + x166) - ((x76 * Val(2)) * x166));
  Val x234 = ((x77 + x167) - ((x77 * Val(2)) * x167));
  Val x235 = ((x78 + x168) - ((x78 * Val(2)) * x168));
  Val x236 = ((x79 + x169) - ((x79 * Val(2)) * x169));
  Val x237 = ((x80 + x170) - ((x80 * Val(2)) * x170));
  Val x238 = ((x81 + x171) - ((x81 * Val(2)) * x171));
  Val x239 = ((x82 + x172) - ((x82 * Val(2)) * x172));
  Val x240 = ((x83 + x173) - ((x83 * Val(2)) * x173));
  Val x241 = ((x84 + x174) - ((x84 * Val(2)) * x174));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:911)
  Val x242 =
      ((((((x178 + (x179 * Val(2))) + (x180 * Val(4))) + (x181 * Val(8))) + (x182 * Val(16))) +
        (x183 * Val(32))) +
       (x184 * Val(64)));
  Val x243 = ((((((x242 + (x185 * Val(128))) + (x186 * Val(256))) + (x187 * Val(512))) +
                (x188 * Val(1024))) +
               (x189 * Val(2048))) +
              (x190 * Val(4096)));
  Val x244 = ((((((x243 + (x191 * Val(8192))) + (x192 * Val(16384))) + (x193 * Val(32768))) +
                (x194 * Val(65536))) +
               (x195 * Val(131072))) +
              (x196 * Val(262144)));
  Val x245 =
      ((((((x200 + (x201 * Val(2))) + (x202 * Val(4))) + (x203 * Val(8))) + (x204 * Val(16))) +
        (x205 * Val(32))) +
       (x206 * Val(64)));
  Val x246 = ((((((x245 + (x207 * Val(128))) + (x208 * Val(256))) + (x209 * Val(512))) +
                (x210 * Val(1024))) +
               (x211 * Val(2048))) +
              (x212 * Val(4096)));
  Val x247 = ((((((x246 + (x213 * Val(8192))) + (x214 * Val(16384))) + (x215 * Val(32768))) +
                (x216 * Val(65536))) +
               (x217 * Val(131072))) +
              (x218 * Val(262144)));
  Val x248 =
      ((((((x221 + (x222 * Val(2))) + (x223 * Val(4))) + (x224 * Val(8))) + (x225 * Val(16))) +
        (x226 * Val(32))) +
       (x227 * Val(64)));
  Val x249 = ((((((x248 + (x228 * Val(128))) + (x229 * Val(256))) + (x230 * Val(512))) +
                (x231 * Val(1024))) +
               (x232 * Val(2048))) +
              (x233 * Val(4096)));
  Val x250 = ((((((x249 + (x234 * Val(8192))) + (x235 * Val(16384))) + (x236 * Val(32768))) +
                (x237 * Val(65536))) +
               (x238 * Val(131072))) +
              (x239 * Val(262144)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:919)
  RetTupleStruct x251 = exec_RetTuple(
      ctx,
      Val22Array{x6,  x7,  x8,  x9,  x10, x11, x12, x13, x14, x15, x16,
                 x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27},
      Val22Array{x178, x179, x180, x181, x182, x183, x184, x185, x186, x187, x188,
                 x189, x190, x191, x192, x193, x194, x195, x196, x197, x198, x199},
      Val22Array{x200, x201, x202, x203, x204, x205, x206, x207, x208, x209, x210,
                 x211, x212, x213, x214, x215, x216, x217, x218, x219, x220, Val(0)},
      Val24Array{x221,
                 x222,
                 x223,
                 x224,
                 x225,
                 x226,
                 x227,
                 x228,
                 x229,
                 x230,
                 x231,
                 x232,
                 x233,
                 x234,
                 x235,
                 x236,
                 x237,
                 x238,
                 x239,
                 x240,
                 x241,
                 (((x244 + (x197 * Val(524288))) + (x198 * Val(1048576))) + (x199 * Val(2097152))),
                 ((x247 + (x219 * Val(524288))) + (x220 * Val(1048576))),
                 ((x250 + (x240 * Val(524288))) + (x241 * Val(1048576)))},
      Val22Array{x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45,
                 x46, x47, x48, x49, x50, x51, x52, x53, x54, x55, x56},
      Val22Array{x64, x65, x66, x67, x68, x69, x70, x71, x72, x73, x74,
                 x75, x76, x77, x78, x79, x80, x81, x82, x83, x84, x85},
      Val(9),
      Val(15),
      Val(0),
      arg0.blk._super,
      x98,
      LAYOUT_LOOKUP(layout1, _super));
  return x251;
}
RetTupleStruct execAbsorbMajor1(ExecContext& ctx,
                                RetTupleStruct arg0,
                                BoundLayout<RetTupleLayout> arg1,
                                BoundLayout<AbsorbMajor1Layout> layout2) {
  // absorb_major1(zirgen/circuit/keccak/keccak.zir:956)
  BoundLayout<AbsorbMajor1_SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // absorb_major1(zirgen/circuit/keccak/keccak.zir:955)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  OneHot_10_Struct x5 = exec_OneHot_10_(ctx, x4.minor._super, LAYOUT_LOOKUP(layout2, minorOnehot));
  NondetRegStruct10Array x6 = x5._super;
  // absorb_major1(zirgen/circuit/keccak/keccak.zir:956)
  BoundLayout<AbsorbMajor1Arm9Layout> x7 = LAYOUT_LOOKUP(x3, arm9);
  if (to_size_t(x6[0]._super)) {
    // absorb_major1(zirgen/circuit/keccak/keccak.zir:957)
    RetTupleStruct x8 = back_RetTuple(ctx, 1, arg1);
    RetTupleStruct x9 = execAbsorbWord_0__0_(ctx, x8, LAYOUT_LOOKUP(x3, arm0));
  }
  if (to_size_t(x6[1]._super)) {
    // absorb_major1(zirgen/circuit/keccak/keccak.zir:958)
    RetTupleStruct x10 = back_RetTuple(ctx, 2, arg1);
    RetTupleStruct x11 = execAbsorbWord_1__0_(ctx, x10, LAYOUT_LOOKUP(x3, arm1));
  }
  if (to_size_t(x6[2]._super)) {
    // absorb_major1(zirgen/circuit/keccak/keccak.zir:959)
    RetTupleStruct x12 = back_RetTuple(ctx, 3, arg1);
    RetTupleStruct x13 = execAbsorbWord_2__0_(ctx, x12, LAYOUT_LOOKUP(x3, arm2));
  }
  if (to_size_t(x6[3]._super)) {
    // absorb_major1(zirgen/circuit/keccak/keccak.zir:960)
    RetTupleStruct x14 = back_RetTuple(ctx, 4, arg1);
    RetTupleStruct x15 = execAbsorbWord_3__0_(ctx, x14, LAYOUT_LOOKUP(x3, arm3));
  }
  if (to_size_t(x6[4]._super)) {
    // absorb_major1(zirgen/circuit/keccak/keccak.zir:961)
    RetTupleStruct x16 = back_RetTuple(ctx, 5, arg1);
    RetTupleStruct x17 = execAbsorbWord_4__0_(ctx, x16, LAYOUT_LOOKUP(x3, arm4));
  }
  if (to_size_t(x6[5]._super)) {
    // absorb_major1(zirgen/circuit/keccak/keccak.zir:962)
    RetTupleStruct x18 = back_RetTuple(ctx, 6, arg1);
    RetTupleStruct x19 = execAbsorbWord_0__1_(ctx, x18, LAYOUT_LOOKUP(x3, arm5));
  }
  if (to_size_t(x6[6]._super)) {
    // absorb_major1(zirgen/circuit/keccak/keccak.zir:963)
    RetTupleStruct x20 = back_RetTuple(ctx, 7, arg1);
    RetTupleStruct x21 = execAbsorbWord_1__1_(ctx, x20, LAYOUT_LOOKUP(x3, arm6));
  }
  if (to_size_t(x6[7]._super)) {
    // absorb_major1(zirgen/circuit/keccak/keccak.zir:964)
    RetTupleStruct x22 = back_RetTuple(ctx, 8, arg1);
    RetTupleStruct x23 = execAbsorbWord_2__1_(ctx, x22, LAYOUT_LOOKUP(x3, arm7));
  }
  if (to_size_t(x6[8]._super)) {
    // absorb_major1(zirgen/circuit/keccak/keccak.zir:965)
    RetTupleStruct x24 = back_RetTuple(ctx, 9, arg1);
    RetTupleStruct x25 = execAbsorbWord_3__1_(ctx, x24, LAYOUT_LOOKUP(x3, arm8));
  }
  // absorb_major1(zirgen/circuit/keccak/keccak.zir:956)
  BoundLayout<Reg> x26 = LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x7, _extra0), count), _super);
  if (to_size_t(x6[9]._super)) {
    // absorb_major1(zirgen/circuit/keccak/keccak.zir:966)
    RetTupleStruct x27 = execAbsorbCopy1(ctx, arg0, arg1, LAYOUT_LOOKUP(x7, _super));
    // absorb_major1(zirgen/circuit/keccak/keccak.zir:956)
    STORE(x26, Val(0));
    EQZ(LOAD(x26, 0), "absorb_major1(zirgen/circuit/keccak/keccak.zir:956)");
  }
  RetTupleStruct x28 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x28;
}
RetTupleStruct execAbsorbCopy2(ExecContext& ctx,
                               RetTupleStruct arg0,
                               BoundLayout<RetTupleLayout> arg1,
                               BoundLayout<RetTupleLayout> layout2) {
  // absorb_copy2(zirgen/circuit/keccak/keccak.zir:971)
  RetTupleStruct x3 = back_RetTuple(ctx, 1, arg1);
  // absorb_copy2(zirgen/circuit/keccak/keccak.zir:972)
  RetTupleStruct x4 = back_RetTuple(ctx, 2, arg1);
  // absorb_copy2(zirgen/circuit/keccak/keccak.zir:973)
  RetTupleStruct x5 = back_RetTuple(ctx, 3, arg1);
  // absorb_copy2(zirgen/circuit/keccak/keccak.zir:974)
  RetTupleStruct x6 = back_RetTuple(ctx, 4, arg1);
  // absorb_copy2(zirgen/circuit/keccak/keccak.zir:975)
  RetTupleStruct x7 = back_RetTuple(ctx, 5, arg1);
  // absorb_copy2(zirgen/circuit/keccak/keccak.zir:976)
  RetTupleStruct x8 = back_RetTuple(ctx, 6, arg1);
  // absorb_copy2(zirgen/circuit/keccak/keccak.zir:977)
  RetTupleStruct x9 = back_RetTuple(ctx, 7, arg1);
  // absorb_copy2(zirgen/circuit/keccak/keccak.zir:978)
  RetTupleStruct x10 = back_RetTuple(ctx, 8, arg1);
  // absorb_copy2(zirgen/circuit/keccak/keccak.zir:979)
  RetTupleStruct x11 = back_RetTuple(ctx, 9, arg1);
  NondetRegStruct22Array x12 = x11.arrB;
  // absorb_copy2(zirgen/circuit/keccak/keccak.zir:978)
  NondetRegStruct24Array x13 = x10.arrD;
  // absorb_copy2(zirgen/circuit/keccak/keccak.zir:977)
  NondetRegStruct24Array x14 = x9.arrD;
  // absorb_copy2(zirgen/circuit/keccak/keccak.zir:976)
  NondetRegStruct24Array x15 = x8.arrD;
  // absorb_copy2(zirgen/circuit/keccak/keccak.zir:975)
  NondetRegStruct24Array x16 = x7.arrD;
  // absorb_copy2(zirgen/circuit/keccak/keccak.zir:974)
  NondetRegStruct24Array x17 = x6.arrD;
  // absorb_copy2(zirgen/circuit/keccak/keccak.zir:973)
  NondetRegStruct24Array x18 = x5.arrD;
  // absorb_copy2(zirgen/circuit/keccak/keccak.zir:972)
  NondetRegStruct24Array x19 = x4.arrD;
  // absorb_copy2(zirgen/circuit/keccak/keccak.zir:971)
  NondetRegStruct24Array x20 = x3.arrD;
  // absorb_copy2(zirgen/circuit/keccak/keccak.zir:979)
  NondetRegStruct22Array x21 = x11.arrC;
  NondetRegStruct22Array x22 = x11.arrA;
  NondetRegStruct24Array x23 = x11.arrD;
  // absorb_copy2(zirgen/circuit/keccak/keccak.zir:995)
  Val22Array x24 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x25 = exec_RetTuple(
      ctx,
      Val22Array{x22[0]._super,  x22[1]._super,  x22[2]._super,  x22[3]._super,  x22[4]._super,
                 x22[5]._super,  x22[6]._super,  x22[7]._super,  x22[8]._super,  x22[9]._super,
                 x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super},
      Val22Array{x12[0]._super,  x12[1]._super,  x12[2]._super,  x12[3]._super,  x12[4]._super,
                 x13[21]._super, x13[22]._super, x13[23]._super, x14[21]._super, x14[22]._super,
                 x14[23]._super, x15[21]._super, x15[22]._super, x15[23]._super, x16[21]._super,
                 x16[22]._super, x16[23]._super, x17[21]._super, x17[22]._super, x17[23]._super,
                 x18[21]._super, x18[22]._super},
      Val22Array{x18[23]._super, x19[21]._super, x19[22]._super, x19[23]._super, x20[21]._super,
                 x20[22]._super, x20[23]._super, x21[7]._super,  x21[8]._super,  x21[9]._super,
                 x21[10]._super, x21[11]._super, x21[12]._super, x21[13]._super, x21[14]._super,
                 x21[15]._super, x21[16]._super, x21[17]._super, x21[18]._super, x21[19]._super,
                 x21[20]._super, x21[21]._super},
      Val24Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super, x23[22]._super, x23[23]._super},
      x24,
      x24,
      Val(0),
      Val(0),
      Val(0),
      x3.blk._super,
      (x3.midx._super + Val(17)),
      layout2);
  return x25;
}
OneHot_9_Struct exec_OneHot_9_(ExecContext& ctx, Val arg0, BoundLayout<OneHot_9_Layout> layout1) {
  // OneHot(zirgen/circuit/keccak/one_hot.zir:7)
  NondetRegStruct9Array x2 =
      map(Val9Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5), Val(6), Val(7), Val(8)},
          LAYOUT_LOOKUP(layout1, _super),
          std::function([&](Val9Array::value_type x3,
                            BoundLayout<NondetRegLayout9LayoutArray::value_type> x4) {
            NondetRegStruct x5 = exec_NondetBitReg(ctx, isz((x3 - arg0)), x4);
            return x5;
          }));
  // OneHot(zirgen/circuit/keccak/one_hot.zir:9)
  Val x6 = x2[1]._super;
  Val x7 = x2[2]._super;
  Val x8 = x2[3]._super;
  Val x9 = x2[4]._super;
  Val x10 = ((((x2[0]._super + x6) + x7) + x8) + x9);
  Val x11 = x2[5]._super;
  Val x12 = x2[6]._super;
  Val x13 = x2[7]._super;
  Val x14 = x2[8]._super;
  EQZ((((((x10 + x11) + x12) + x13) + x14) - Val(1)),
      "OneHot(zirgen/circuit/keccak/one_hot.zir:9)");
  // OneHot(zirgen/circuit/keccak/one_hot.zir:11)
  Val x15 = ((((((x6 + (x7 * Val(2))) + (x8 * Val(3))) + (x9 * Val(4))) + (x11 * Val(5))) +
              (x12 * Val(6))) +
             (x13 * Val(7)));
  EQZ(((x15 + (x14 * Val(8))) - arg0), "OneHot(zirgen/circuit/keccak/one_hot.zir:11)");
  return OneHot_9_Struct{._super = x2};
}
RetTupleStruct execAbsorbWord_4__1_(ExecContext& ctx,
                                    RetTupleStruct arg0,
                                    BoundLayout<AbsorbWord_4__1_Layout> layout1) {
  // absorb_word(zirgen/circuit/keccak/keccak.zir:855)
  NondetRegStruct22Array x2 = arg0.arrB;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:862)
  Val x3 = x2[5]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:874)
  ToBits_22_Struct x4 = exec_ToBits_22_(ctx, x3, LAYOUT_LOOKUP(layout1, unpackA));
  NondetRegStruct22Array x5 = x4._super;
  Val x6 = x5[0]._super;
  Val x7 = x5[1]._super;
  Val x8 = x5[2]._super;
  Val x9 = x5[3]._super;
  Val x10 = x5[4]._super;
  Val x11 = x5[5]._super;
  Val x12 = x5[6]._super;
  Val x13 = x5[7]._super;
  Val x14 = x5[8]._super;
  Val x15 = x5[9]._super;
  Val x16 = x5[10]._super;
  Val x17 = x5[11]._super;
  Val x18 = x5[12]._super;
  Val x19 = x5[13]._super;
  Val x20 = x5[14]._super;
  Val x21 = x5[15]._super;
  Val x22 = x5[16]._super;
  Val x23 = x5[17]._super;
  Val x24 = x5[18]._super;
  Val x25 = x5[19]._super;
  Val x26 = x5[20]._super;
  Val x27 = x5[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:875)
  Val x28 = (x7 * Val(2));
  Val x29 =
      ((((((x6 + x28) + (x8 * Val(4))) + (x9 * Val(8))) + (x10 * Val(16))) + (x11 * Val(32))) +
       (x12 * Val(64)));
  Val x30 =
      ((((((x29 + (x13 * Val(128))) + (x14 * Val(256))) + (x15 * Val(512))) + (x16 * Val(1024))) +
        (x17 * Val(2048))) +
       (x18 * Val(4096)));
  Val x31 = ((((((x30 + (x19 * Val(8192))) + (x20 * Val(16384))) + (x21 * Val(32768))) +
               (x22 * Val(65536))) +
              (x23 * Val(131072))) +
             (x24 * Val(262144)));
  EQZ(((((x31 + (x25 * Val(524288))) + (x26 * Val(1048576))) + (x27 * Val(2097152))) - x3),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:875)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:866)
  Val x32 = x2[6]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:876)
  ToBits_22_Struct x33 = exec_ToBits_22_(ctx, x32, LAYOUT_LOOKUP(layout1, unpackE));
  NondetRegStruct22Array x34 = x33._super;
  Val x35 = x34[0]._super;
  Val x36 = x34[1]._super;
  Val x37 = x34[2]._super;
  Val x38 = x34[3]._super;
  Val x39 = x34[4]._super;
  Val x40 = x34[5]._super;
  Val x41 = x34[6]._super;
  Val x42 = x34[7]._super;
  Val x43 = x34[8]._super;
  Val x44 = x34[9]._super;
  Val x45 = x34[10]._super;
  Val x46 = x34[11]._super;
  Val x47 = x34[12]._super;
  Val x48 = x34[13]._super;
  Val x49 = x34[14]._super;
  Val x50 = x34[15]._super;
  Val x51 = x34[16]._super;
  Val x52 = x34[17]._super;
  Val x53 = x34[18]._super;
  Val x54 = x34[19]._super;
  Val x55 = x34[20]._super;
  Val x56 = x34[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:877)
  Val x57 = (x36 * Val(2));
  Val x58 =
      ((((((x35 + x57) + (x37 * Val(4))) + (x38 * Val(8))) + (x39 * Val(16))) + (x40 * Val(32))) +
       (x41 * Val(64)));
  Val x59 =
      ((((((x58 + (x42 * Val(128))) + (x43 * Val(256))) + (x44 * Val(512))) + (x45 * Val(1024))) +
        (x46 * Val(2048))) +
       (x47 * Val(4096)));
  Val x60 = ((((((x59 + (x48 * Val(8192))) + (x49 * Val(16384))) + (x50 * Val(32768))) +
               (x51 * Val(65536))) +
              (x52 * Val(131072))) +
             (x53 * Val(262144)));
  EQZ(((((x60 + (x54 * Val(524288))) + (x55 * Val(1048576))) + (x56 * Val(2097152))) - x32),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:877)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:870)
  Val x61 = x2[7]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:878)
  ToBits_22_Struct x62 = exec_ToBits_22_(ctx, x61, LAYOUT_LOOKUP(layout1, unpackF));
  NondetRegStruct22Array x63 = x62._super;
  Val x64 = x63[0]._super;
  Val x65 = x63[1]._super;
  Val x66 = x63[2]._super;
  Val x67 = x63[3]._super;
  Val x68 = x63[4]._super;
  Val x69 = x63[5]._super;
  Val x70 = x63[6]._super;
  Val x71 = x63[7]._super;
  Val x72 = x63[8]._super;
  Val x73 = x63[9]._super;
  Val x74 = x63[10]._super;
  Val x75 = x63[11]._super;
  Val x76 = x63[12]._super;
  Val x77 = x63[13]._super;
  Val x78 = x63[14]._super;
  Val x79 = x63[15]._super;
  Val x80 = x63[16]._super;
  Val x81 = x63[17]._super;
  Val x82 = x63[18]._super;
  Val x83 = x63[19]._super;
  Val x84 = x63[20]._super;
  Val x85 = x63[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:879)
  Val x86 = (x65 * Val(2));
  Val x87 =
      ((((((x64 + x86) + (x66 * Val(4))) + (x67 * Val(8))) + (x68 * Val(16))) + (x69 * Val(32))) +
       (x70 * Val(64)));
  Val x88 =
      ((((((x87 + (x71 * Val(128))) + (x72 * Val(256))) + (x73 * Val(512))) + (x74 * Val(1024))) +
        (x75 * Val(2048))) +
       (x76 * Val(4096)));
  Val x89 = ((((((x88 + (x77 * Val(8192))) + (x78 * Val(16384))) + (x79 * Val(32768))) +
               (x80 * Val(65536))) +
              (x81 * Val(131072))) +
             (x82 * Val(262144)));
  EQZ(((((x89 + (x83 * Val(524288))) + (x84 * Val(1048576))) + (x85 * Val(2097152))) - x61),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:879)");
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:881)
  Val x90 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:882)
  ToBits_16_Struct x91 = exec_ToBits_16_(ctx, x90, LAYOUT_LOOKUP(layout1, unpack_1));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:883)
  Val x92 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:884)
  ToBits_16_Struct x93 = exec_ToBits_16_(ctx, x92, LAYOUT_LOOKUP(layout1, unpack_2));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:885)
  Val x94 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:886)
  ToBits_16_Struct x95 = exec_ToBits_16_(ctx, x94, LAYOUT_LOOKUP(layout1, unpack_3));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:887)
  Val x96 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:888)
  ToBits_16_Struct x97 = exec_ToBits_16_(ctx, x96, LAYOUT_LOOKUP(layout1, unpack_4));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:855)
  Val x98 = arg0.midx._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:889)
  Val x99 = (((x98 + Val(1)) + Val(4)) + Val(5));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:890)
  NondetRegStruct x100 = exec_NondetReg(ctx, inv(x99), LAYOUT_LOOKUP(layout1, invmidx));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:891)
  EQZ(((x100._super * x99) - Val(1)), "absorb_word(zirgen/circuit/keccak/keccak.zir:891)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:882)
  NondetRegStruct16Array x101 = x91._super;
  Val x102 = x101[0]._super;
  Val x103 = x101[1]._super;
  Val x104 = x101[2]._super;
  Val x105 = x101[3]._super;
  Val x106 = x101[4]._super;
  Val x107 = x101[5]._super;
  Val x108 = x101[6]._super;
  Val x109 = x101[7]._super;
  Val x110 = x101[8]._super;
  Val x111 = x101[9]._super;
  Val x112 = x101[10]._super;
  Val x113 = x101[11]._super;
  Val x114 = x101[12]._super;
  Val x115 = x101[13]._super;
  Val x116 = x101[14]._super;
  Val x117 = x101[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x118 =
      ((((((x102 + (x103 * Val(2))) + (x104 * Val(4))) + (x105 * Val(8))) + (x106 * Val(16))) +
        (x107 * Val(32))) +
       (x108 * Val(64)));
  Val x119 = ((((((x118 + (x109 * Val(128))) + (x110 * Val(256))) + (x111 * Val(512))) +
                (x112 * Val(1024))) +
               (x113 * Val(2048))) +
              (x114 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:884)
  NondetRegStruct16Array x120 = x93._super;
  Val x121 = x120[0]._super;
  Val x122 = x120[1]._super;
  Val x123 = x120[2]._super;
  Val x124 = x120[3]._super;
  Val x125 = x120[4]._super;
  Val x126 = x120[5]._super;
  Val x127 = x120[6]._super;
  Val x128 = x120[7]._super;
  Val x129 = x120[8]._super;
  Val x130 = x120[9]._super;
  Val x131 = x120[10]._super;
  Val x132 = x120[11]._super;
  Val x133 = x120[12]._super;
  Val x134 = x120[13]._super;
  Val x135 = x120[14]._super;
  Val x136 = x120[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x137 =
      ((((((x121 + (x122 * Val(2))) + (x123 * Val(4))) + (x124 * Val(8))) + (x125 * Val(16))) +
        (x126 * Val(32))) +
       (x127 * Val(64)));
  Val x138 = ((((((x137 + (x128 * Val(128))) + (x129 * Val(256))) + (x130 * Val(512))) +
                (x131 * Val(1024))) +
               (x132 * Val(2048))) +
              (x133 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:886)
  NondetRegStruct16Array x139 = x95._super;
  Val x140 = x139[0]._super;
  Val x141 = x139[1]._super;
  Val x142 = x139[2]._super;
  Val x143 = x139[3]._super;
  Val x144 = x139[4]._super;
  Val x145 = x139[5]._super;
  Val x146 = x139[6]._super;
  Val x147 = x139[7]._super;
  Val x148 = x139[8]._super;
  Val x149 = x139[9]._super;
  Val x150 = x139[10]._super;
  Val x151 = x139[11]._super;
  Val x152 = x139[12]._super;
  Val x153 = x139[13]._super;
  Val x154 = x139[14]._super;
  Val x155 = x139[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x156 =
      ((((((x140 + (x141 * Val(2))) + (x142 * Val(4))) + (x143 * Val(8))) + (x144 * Val(16))) +
        (x145 * Val(32))) +
       (x146 * Val(64)));
  Val x157 = ((((((x156 + (x147 * Val(128))) + (x148 * Val(256))) + (x149 * Val(512))) +
                (x150 * Val(1024))) +
               (x151 * Val(2048))) +
              (x152 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:888)
  NondetRegStruct16Array x158 = x97._super;
  Val x159 = x158[0]._super;
  Val x160 = x158[1]._super;
  Val x161 = x158[2]._super;
  Val x162 = x158[3]._super;
  Val x163 = x158[4]._super;
  Val x164 = x158[5]._super;
  Val x165 = x158[6]._super;
  Val x166 = x158[7]._super;
  Val x167 = x158[8]._super;
  Val x168 = x158[9]._super;
  Val x169 = x158[10]._super;
  Val x170 = x158[11]._super;
  Val x171 = x158[12]._super;
  Val x172 = x158[13]._super;
  Val x173 = x158[14]._super;
  Val x174 = x158[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x175 =
      ((((((x159 + (x160 * Val(2))) + (x161 * Val(4))) + (x162 * Val(8))) + (x163 * Val(16))) +
        (x164 * Val(32))) +
       (x165 * Val(64)));
  Val x176 = ((((((x175 + (x166 * Val(128))) + (x167 * Val(256))) + (x168 * Val(512))) +
                (x169 * Val(1024))) +
               (x170 * Val(2048))) +
              (x171 * Val(4096)));
  WriteMemoryStruct x177 = exec_WriteMemory(
      ctx,
      x99,
      MemDigestStruct{
          ._super =
              Val4Array{
                  (((x119 + (x115 * Val(8192))) + (x116 * Val(16384))) + (x117 * Val(32768))),
                  (((x138 + (x134 * Val(8192))) + (x135 * Val(16384))) + (x136 * Val(32768))),
                  (((x157 + (x153 * Val(8192))) + (x154 * Val(16384))) + (x155 * Val(32768))),
                  (((x176 + (x172 * Val(8192))) + (x173 * Val(16384))) + (x174 * Val(32768)))}},
      LAYOUT_LOOKUP(layout1, _0));
  // xor2(zirgen/circuit/keccak/keccak.zir:114)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:897)
  Val x178 = ((x6 + x102) - ((x6 * Val(2)) * x102));
  Val x179 = ((x7 + x103) - (x28 * x103));
  Val x180 = ((x8 + x104) - ((x8 * Val(2)) * x104));
  Val x181 = ((x9 + x105) - ((x9 * Val(2)) * x105));
  Val x182 = ((x10 + x106) - ((x10 * Val(2)) * x106));
  Val x183 = ((x11 + x107) - ((x11 * Val(2)) * x107));
  Val x184 = ((x12 + x108) - ((x12 * Val(2)) * x108));
  Val x185 = ((x13 + x109) - ((x13 * Val(2)) * x109));
  Val x186 = ((x14 + x110) - ((x14 * Val(2)) * x110));
  Val x187 = ((x15 + x111) - ((x15 * Val(2)) * x111));
  Val x188 = ((x16 + x112) - ((x16 * Val(2)) * x112));
  Val x189 = ((x17 + x113) - ((x17 * Val(2)) * x113));
  Val x190 = ((x18 + x114) - ((x18 * Val(2)) * x114));
  Val x191 = ((x19 + x115) - ((x19 * Val(2)) * x115));
  Val x192 = ((x20 + x116) - ((x20 * Val(2)) * x116));
  Val x193 = ((x21 + x117) - ((x21 * Val(2)) * x117));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:898)
  Val x194 = ((x22 + x121) - ((x22 * Val(2)) * x121));
  Val x195 = ((x23 + x122) - ((x23 * Val(2)) * x122));
  Val x196 = ((x24 + x123) - ((x24 * Val(2)) * x123));
  Val x197 = ((x25 + x124) - ((x25 * Val(2)) * x124));
  Val x198 = ((x26 + x125) - ((x26 * Val(2)) * x125));
  Val x199 = ((x27 + x126) - ((x27 * Val(2)) * x126));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:902)
  Val x200 = ((x35 + x127) - ((x35 * Val(2)) * x127));
  Val x201 = ((x36 + x128) - (x57 * x128));
  Val x202 = ((x37 + x129) - ((x37 * Val(2)) * x129));
  Val x203 = ((x38 + x130) - ((x38 * Val(2)) * x130));
  Val x204 = ((x39 + x131) - ((x39 * Val(2)) * x131));
  Val x205 = ((x40 + x132) - ((x40 * Val(2)) * x132));
  Val x206 = ((x41 + x133) - ((x41 * Val(2)) * x133));
  Val x207 = ((x42 + x134) - ((x42 * Val(2)) * x134));
  Val x208 = ((x43 + x135) - ((x43 * Val(2)) * x135));
  Val x209 = ((x44 + x136) - ((x44 * Val(2)) * x136));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:903)
  Val x210 = ((x45 + x140) - ((x45 * Val(2)) * x140));
  Val x211 = ((x46 + x141) - ((x46 * Val(2)) * x141));
  Val x212 = ((x47 + x142) - ((x47 * Val(2)) * x142));
  Val x213 = ((x48 + x143) - ((x48 * Val(2)) * x143));
  Val x214 = ((x49 + x144) - ((x49 * Val(2)) * x144));
  Val x215 = ((x50 + x145) - ((x50 * Val(2)) * x145));
  Val x216 = ((x51 + x146) - ((x51 * Val(2)) * x146));
  Val x217 = ((x52 + x147) - ((x52 * Val(2)) * x147));
  Val x218 = ((x53 + x148) - ((x53 * Val(2)) * x148));
  Val x219 = ((x54 + x149) - ((x54 * Val(2)) * x149));
  Val x220 = ((x55 + x150) - ((x55 * Val(2)) * x150));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:907)
  Val x221 = ((x64 + x151) - ((x64 * Val(2)) * x151));
  Val x222 = ((x65 + x152) - (x86 * x152));
  Val x223 = ((x66 + x153) - ((x66 * Val(2)) * x153));
  Val x224 = ((x67 + x154) - ((x67 * Val(2)) * x154));
  Val x225 = ((x68 + x155) - ((x68 * Val(2)) * x155));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:908)
  Val x226 = ((x69 + x159) - ((x69 * Val(2)) * x159));
  Val x227 = ((x70 + x160) - ((x70 * Val(2)) * x160));
  Val x228 = ((x71 + x161) - ((x71 * Val(2)) * x161));
  Val x229 = ((x72 + x162) - ((x72 * Val(2)) * x162));
  Val x230 = ((x73 + x163) - ((x73 * Val(2)) * x163));
  Val x231 = ((x74 + x164) - ((x74 * Val(2)) * x164));
  Val x232 = ((x75 + x165) - ((x75 * Val(2)) * x165));
  Val x233 = ((x76 + x166) - ((x76 * Val(2)) * x166));
  Val x234 = ((x77 + x167) - ((x77 * Val(2)) * x167));
  Val x235 = ((x78 + x168) - ((x78 * Val(2)) * x168));
  Val x236 = ((x79 + x169) - ((x79 * Val(2)) * x169));
  Val x237 = ((x80 + x170) - ((x80 * Val(2)) * x170));
  Val x238 = ((x81 + x171) - ((x81 * Val(2)) * x171));
  Val x239 = ((x82 + x172) - ((x82 * Val(2)) * x172));
  Val x240 = ((x83 + x173) - ((x83 * Val(2)) * x173));
  Val x241 = ((x84 + x174) - ((x84 * Val(2)) * x174));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:911)
  Val x242 =
      ((((((x178 + (x179 * Val(2))) + (x180 * Val(4))) + (x181 * Val(8))) + (x182 * Val(16))) +
        (x183 * Val(32))) +
       (x184 * Val(64)));
  Val x243 = ((((((x242 + (x185 * Val(128))) + (x186 * Val(256))) + (x187 * Val(512))) +
                (x188 * Val(1024))) +
               (x189 * Val(2048))) +
              (x190 * Val(4096)));
  Val x244 = ((((((x243 + (x191 * Val(8192))) + (x192 * Val(16384))) + (x193 * Val(32768))) +
                (x194 * Val(65536))) +
               (x195 * Val(131072))) +
              (x196 * Val(262144)));
  Val x245 =
      ((((((x200 + (x201 * Val(2))) + (x202 * Val(4))) + (x203 * Val(8))) + (x204 * Val(16))) +
        (x205 * Val(32))) +
       (x206 * Val(64)));
  Val x246 = ((((((x245 + (x207 * Val(128))) + (x208 * Val(256))) + (x209 * Val(512))) +
                (x210 * Val(1024))) +
               (x211 * Val(2048))) +
              (x212 * Val(4096)));
  Val x247 = ((((((x246 + (x213 * Val(8192))) + (x214 * Val(16384))) + (x215 * Val(32768))) +
                (x216 * Val(65536))) +
               (x217 * Val(131072))) +
              (x218 * Val(262144)));
  Val x248 =
      ((((((x221 + (x222 * Val(2))) + (x223 * Val(4))) + (x224 * Val(8))) + (x225 * Val(16))) +
        (x226 * Val(32))) +
       (x227 * Val(64)));
  Val x249 = ((((((x248 + (x228 * Val(128))) + (x229 * Val(256))) + (x230 * Val(512))) +
                (x231 * Val(1024))) +
               (x232 * Val(2048))) +
              (x233 * Val(4096)));
  Val x250 = ((((((x249 + (x234 * Val(8192))) + (x235 * Val(16384))) + (x236 * Val(32768))) +
                (x237 * Val(65536))) +
               (x238 * Val(131072))) +
              (x239 * Val(262144)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:919)
  RetTupleStruct x251 = exec_RetTuple(
      ctx,
      Val22Array{x6,  x7,  x8,  x9,  x10, x11, x12, x13, x14, x15, x16,
                 x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27},
      Val22Array{x178, x179, x180, x181, x182, x183, x184, x185, x186, x187, x188,
                 x189, x190, x191, x192, x193, x194, x195, x196, x197, x198, x199},
      Val22Array{x200, x201, x202, x203, x204, x205, x206, x207, x208, x209, x210,
                 x211, x212, x213, x214, x215, x216, x217, x218, x219, x220, Val(0)},
      Val24Array{x221,
                 x222,
                 x223,
                 x224,
                 x225,
                 x226,
                 x227,
                 x228,
                 x229,
                 x230,
                 x231,
                 x232,
                 x233,
                 x234,
                 x235,
                 x236,
                 x237,
                 x238,
                 x239,
                 x240,
                 x241,
                 (((x244 + (x197 * Val(524288))) + (x198 * Val(1048576))) + (x199 * Val(2097152))),
                 ((x247 + (x219 * Val(524288))) + (x220 * Val(1048576))),
                 ((x250 + (x240 * Val(524288))) + (x241 * Val(1048576)))},
      Val22Array{x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45,
                 x46, x47, x48, x49, x50, x51, x52, x53, x54, x55, x56},
      Val22Array{x64, x65, x66, x67, x68, x69, x70, x71, x72, x73, x74,
                 x75, x76, x77, x78, x79, x80, x81, x82, x83, x84, x85},
      Val(1),
      Val(16),
      Val(0),
      arg0.blk._super,
      x98,
      LAYOUT_LOOKUP(layout1, _super));
  return x251;
}
RetTupleStruct execAbsorbWord_0__2_(ExecContext& ctx,
                                    RetTupleStruct arg0,
                                    BoundLayout<AbsorbWord_0__2_Layout> layout1) {
  // absorb_word(zirgen/circuit/keccak/keccak.zir:855)
  NondetRegStruct22Array x2 = arg0.arrB;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:862)
  Val x3 = x2[8]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:874)
  ToBits_22_Struct x4 = exec_ToBits_22_(ctx, x3, LAYOUT_LOOKUP(layout1, unpackA));
  NondetRegStruct22Array x5 = x4._super;
  Val x6 = x5[0]._super;
  Val x7 = x5[1]._super;
  Val x8 = x5[2]._super;
  Val x9 = x5[3]._super;
  Val x10 = x5[4]._super;
  Val x11 = x5[5]._super;
  Val x12 = x5[6]._super;
  Val x13 = x5[7]._super;
  Val x14 = x5[8]._super;
  Val x15 = x5[9]._super;
  Val x16 = x5[10]._super;
  Val x17 = x5[11]._super;
  Val x18 = x5[12]._super;
  Val x19 = x5[13]._super;
  Val x20 = x5[14]._super;
  Val x21 = x5[15]._super;
  Val x22 = x5[16]._super;
  Val x23 = x5[17]._super;
  Val x24 = x5[18]._super;
  Val x25 = x5[19]._super;
  Val x26 = x5[20]._super;
  Val x27 = x5[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:875)
  Val x28 = (x7 * Val(2));
  Val x29 =
      ((((((x6 + x28) + (x8 * Val(4))) + (x9 * Val(8))) + (x10 * Val(16))) + (x11 * Val(32))) +
       (x12 * Val(64)));
  Val x30 =
      ((((((x29 + (x13 * Val(128))) + (x14 * Val(256))) + (x15 * Val(512))) + (x16 * Val(1024))) +
        (x17 * Val(2048))) +
       (x18 * Val(4096)));
  Val x31 = ((((((x30 + (x19 * Val(8192))) + (x20 * Val(16384))) + (x21 * Val(32768))) +
               (x22 * Val(65536))) +
              (x23 * Val(131072))) +
             (x24 * Val(262144)));
  EQZ(((((x31 + (x25 * Val(524288))) + (x26 * Val(1048576))) + (x27 * Val(2097152))) - x3),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:875)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:866)
  Val x32 = x2[9]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:876)
  ToBits_22_Struct x33 = exec_ToBits_22_(ctx, x32, LAYOUT_LOOKUP(layout1, unpackE));
  NondetRegStruct22Array x34 = x33._super;
  Val x35 = x34[0]._super;
  Val x36 = x34[1]._super;
  Val x37 = x34[2]._super;
  Val x38 = x34[3]._super;
  Val x39 = x34[4]._super;
  Val x40 = x34[5]._super;
  Val x41 = x34[6]._super;
  Val x42 = x34[7]._super;
  Val x43 = x34[8]._super;
  Val x44 = x34[9]._super;
  Val x45 = x34[10]._super;
  Val x46 = x34[11]._super;
  Val x47 = x34[12]._super;
  Val x48 = x34[13]._super;
  Val x49 = x34[14]._super;
  Val x50 = x34[15]._super;
  Val x51 = x34[16]._super;
  Val x52 = x34[17]._super;
  Val x53 = x34[18]._super;
  Val x54 = x34[19]._super;
  Val x55 = x34[20]._super;
  Val x56 = x34[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:877)
  Val x57 = (x36 * Val(2));
  Val x58 =
      ((((((x35 + x57) + (x37 * Val(4))) + (x38 * Val(8))) + (x39 * Val(16))) + (x40 * Val(32))) +
       (x41 * Val(64)));
  Val x59 =
      ((((((x58 + (x42 * Val(128))) + (x43 * Val(256))) + (x44 * Val(512))) + (x45 * Val(1024))) +
        (x46 * Val(2048))) +
       (x47 * Val(4096)));
  Val x60 = ((((((x59 + (x48 * Val(8192))) + (x49 * Val(16384))) + (x50 * Val(32768))) +
               (x51 * Val(65536))) +
              (x52 * Val(131072))) +
             (x53 * Val(262144)));
  EQZ(((((x60 + (x54 * Val(524288))) + (x55 * Val(1048576))) + (x56 * Val(2097152))) - x32),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:877)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:870)
  Val x61 = x2[10]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:878)
  ToBits_22_Struct x62 = exec_ToBits_22_(ctx, x61, LAYOUT_LOOKUP(layout1, unpackF));
  NondetRegStruct22Array x63 = x62._super;
  Val x64 = x63[0]._super;
  Val x65 = x63[1]._super;
  Val x66 = x63[2]._super;
  Val x67 = x63[3]._super;
  Val x68 = x63[4]._super;
  Val x69 = x63[5]._super;
  Val x70 = x63[6]._super;
  Val x71 = x63[7]._super;
  Val x72 = x63[8]._super;
  Val x73 = x63[9]._super;
  Val x74 = x63[10]._super;
  Val x75 = x63[11]._super;
  Val x76 = x63[12]._super;
  Val x77 = x63[13]._super;
  Val x78 = x63[14]._super;
  Val x79 = x63[15]._super;
  Val x80 = x63[16]._super;
  Val x81 = x63[17]._super;
  Val x82 = x63[18]._super;
  Val x83 = x63[19]._super;
  Val x84 = x63[20]._super;
  Val x85 = x63[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:879)
  Val x86 = (x65 * Val(2));
  Val x87 =
      ((((((x64 + x86) + (x66 * Val(4))) + (x67 * Val(8))) + (x68 * Val(16))) + (x69 * Val(32))) +
       (x70 * Val(64)));
  Val x88 =
      ((((((x87 + (x71 * Val(128))) + (x72 * Val(256))) + (x73 * Val(512))) + (x74 * Val(1024))) +
        (x75 * Val(2048))) +
       (x76 * Val(4096)));
  Val x89 = ((((((x88 + (x77 * Val(8192))) + (x78 * Val(16384))) + (x79 * Val(32768))) +
               (x80 * Val(65536))) +
              (x81 * Val(131072))) +
             (x82 * Val(262144)));
  EQZ(((((x89 + (x83 * Val(524288))) + (x84 * Val(1048576))) + (x85 * Val(2097152))) - x61),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:879)");
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:881)
  Val x90 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:882)
  ToBits_16_Struct x91 = exec_ToBits_16_(ctx, x90, LAYOUT_LOOKUP(layout1, unpack_1));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:883)
  Val x92 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:884)
  ToBits_16_Struct x93 = exec_ToBits_16_(ctx, x92, LAYOUT_LOOKUP(layout1, unpack_2));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:885)
  Val x94 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:886)
  ToBits_16_Struct x95 = exec_ToBits_16_(ctx, x94, LAYOUT_LOOKUP(layout1, unpack_3));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:887)
  Val x96 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:888)
  ToBits_16_Struct x97 = exec_ToBits_16_(ctx, x96, LAYOUT_LOOKUP(layout1, unpack_4));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:855)
  Val x98 = arg0.midx._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:889)
  Val x99 = ((x98 + Val(1)) + Val(10));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:890)
  NondetRegStruct x100 = exec_NondetReg(ctx, inv(x99), LAYOUT_LOOKUP(layout1, invmidx));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:891)
  EQZ(((x100._super * x99) - Val(1)), "absorb_word(zirgen/circuit/keccak/keccak.zir:891)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:882)
  NondetRegStruct16Array x101 = x91._super;
  Val x102 = x101[0]._super;
  Val x103 = x101[1]._super;
  Val x104 = x101[2]._super;
  Val x105 = x101[3]._super;
  Val x106 = x101[4]._super;
  Val x107 = x101[5]._super;
  Val x108 = x101[6]._super;
  Val x109 = x101[7]._super;
  Val x110 = x101[8]._super;
  Val x111 = x101[9]._super;
  Val x112 = x101[10]._super;
  Val x113 = x101[11]._super;
  Val x114 = x101[12]._super;
  Val x115 = x101[13]._super;
  Val x116 = x101[14]._super;
  Val x117 = x101[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x118 =
      ((((((x102 + (x103 * Val(2))) + (x104 * Val(4))) + (x105 * Val(8))) + (x106 * Val(16))) +
        (x107 * Val(32))) +
       (x108 * Val(64)));
  Val x119 = ((((((x118 + (x109 * Val(128))) + (x110 * Val(256))) + (x111 * Val(512))) +
                (x112 * Val(1024))) +
               (x113 * Val(2048))) +
              (x114 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:884)
  NondetRegStruct16Array x120 = x93._super;
  Val x121 = x120[0]._super;
  Val x122 = x120[1]._super;
  Val x123 = x120[2]._super;
  Val x124 = x120[3]._super;
  Val x125 = x120[4]._super;
  Val x126 = x120[5]._super;
  Val x127 = x120[6]._super;
  Val x128 = x120[7]._super;
  Val x129 = x120[8]._super;
  Val x130 = x120[9]._super;
  Val x131 = x120[10]._super;
  Val x132 = x120[11]._super;
  Val x133 = x120[12]._super;
  Val x134 = x120[13]._super;
  Val x135 = x120[14]._super;
  Val x136 = x120[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x137 =
      ((((((x121 + (x122 * Val(2))) + (x123 * Val(4))) + (x124 * Val(8))) + (x125 * Val(16))) +
        (x126 * Val(32))) +
       (x127 * Val(64)));
  Val x138 = ((((((x137 + (x128 * Val(128))) + (x129 * Val(256))) + (x130 * Val(512))) +
                (x131 * Val(1024))) +
               (x132 * Val(2048))) +
              (x133 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:886)
  NondetRegStruct16Array x139 = x95._super;
  Val x140 = x139[0]._super;
  Val x141 = x139[1]._super;
  Val x142 = x139[2]._super;
  Val x143 = x139[3]._super;
  Val x144 = x139[4]._super;
  Val x145 = x139[5]._super;
  Val x146 = x139[6]._super;
  Val x147 = x139[7]._super;
  Val x148 = x139[8]._super;
  Val x149 = x139[9]._super;
  Val x150 = x139[10]._super;
  Val x151 = x139[11]._super;
  Val x152 = x139[12]._super;
  Val x153 = x139[13]._super;
  Val x154 = x139[14]._super;
  Val x155 = x139[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x156 =
      ((((((x140 + (x141 * Val(2))) + (x142 * Val(4))) + (x143 * Val(8))) + (x144 * Val(16))) +
        (x145 * Val(32))) +
       (x146 * Val(64)));
  Val x157 = ((((((x156 + (x147 * Val(128))) + (x148 * Val(256))) + (x149 * Val(512))) +
                (x150 * Val(1024))) +
               (x151 * Val(2048))) +
              (x152 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:888)
  NondetRegStruct16Array x158 = x97._super;
  Val x159 = x158[0]._super;
  Val x160 = x158[1]._super;
  Val x161 = x158[2]._super;
  Val x162 = x158[3]._super;
  Val x163 = x158[4]._super;
  Val x164 = x158[5]._super;
  Val x165 = x158[6]._super;
  Val x166 = x158[7]._super;
  Val x167 = x158[8]._super;
  Val x168 = x158[9]._super;
  Val x169 = x158[10]._super;
  Val x170 = x158[11]._super;
  Val x171 = x158[12]._super;
  Val x172 = x158[13]._super;
  Val x173 = x158[14]._super;
  Val x174 = x158[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x175 =
      ((((((x159 + (x160 * Val(2))) + (x161 * Val(4))) + (x162 * Val(8))) + (x163 * Val(16))) +
        (x164 * Val(32))) +
       (x165 * Val(64)));
  Val x176 = ((((((x175 + (x166 * Val(128))) + (x167 * Val(256))) + (x168 * Val(512))) +
                (x169 * Val(1024))) +
               (x170 * Val(2048))) +
              (x171 * Val(4096)));
  WriteMemoryStruct x177 = exec_WriteMemory(
      ctx,
      x99,
      MemDigestStruct{
          ._super =
              Val4Array{
                  (((x119 + (x115 * Val(8192))) + (x116 * Val(16384))) + (x117 * Val(32768))),
                  (((x138 + (x134 * Val(8192))) + (x135 * Val(16384))) + (x136 * Val(32768))),
                  (((x157 + (x153 * Val(8192))) + (x154 * Val(16384))) + (x155 * Val(32768))),
                  (((x176 + (x172 * Val(8192))) + (x173 * Val(16384))) + (x174 * Val(32768)))}},
      LAYOUT_LOOKUP(layout1, _0));
  // xor2(zirgen/circuit/keccak/keccak.zir:114)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:897)
  Val x178 = ((x6 + x102) - ((x6 * Val(2)) * x102));
  Val x179 = ((x7 + x103) - (x28 * x103));
  Val x180 = ((x8 + x104) - ((x8 * Val(2)) * x104));
  Val x181 = ((x9 + x105) - ((x9 * Val(2)) * x105));
  Val x182 = ((x10 + x106) - ((x10 * Val(2)) * x106));
  Val x183 = ((x11 + x107) - ((x11 * Val(2)) * x107));
  Val x184 = ((x12 + x108) - ((x12 * Val(2)) * x108));
  Val x185 = ((x13 + x109) - ((x13 * Val(2)) * x109));
  Val x186 = ((x14 + x110) - ((x14 * Val(2)) * x110));
  Val x187 = ((x15 + x111) - ((x15 * Val(2)) * x111));
  Val x188 = ((x16 + x112) - ((x16 * Val(2)) * x112));
  Val x189 = ((x17 + x113) - ((x17 * Val(2)) * x113));
  Val x190 = ((x18 + x114) - ((x18 * Val(2)) * x114));
  Val x191 = ((x19 + x115) - ((x19 * Val(2)) * x115));
  Val x192 = ((x20 + x116) - ((x20 * Val(2)) * x116));
  Val x193 = ((x21 + x117) - ((x21 * Val(2)) * x117));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:898)
  Val x194 = ((x22 + x121) - ((x22 * Val(2)) * x121));
  Val x195 = ((x23 + x122) - ((x23 * Val(2)) * x122));
  Val x196 = ((x24 + x123) - ((x24 * Val(2)) * x123));
  Val x197 = ((x25 + x124) - ((x25 * Val(2)) * x124));
  Val x198 = ((x26 + x125) - ((x26 * Val(2)) * x125));
  Val x199 = ((x27 + x126) - ((x27 * Val(2)) * x126));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:902)
  Val x200 = ((x35 + x127) - ((x35 * Val(2)) * x127));
  Val x201 = ((x36 + x128) - (x57 * x128));
  Val x202 = ((x37 + x129) - ((x37 * Val(2)) * x129));
  Val x203 = ((x38 + x130) - ((x38 * Val(2)) * x130));
  Val x204 = ((x39 + x131) - ((x39 * Val(2)) * x131));
  Val x205 = ((x40 + x132) - ((x40 * Val(2)) * x132));
  Val x206 = ((x41 + x133) - ((x41 * Val(2)) * x133));
  Val x207 = ((x42 + x134) - ((x42 * Val(2)) * x134));
  Val x208 = ((x43 + x135) - ((x43 * Val(2)) * x135));
  Val x209 = ((x44 + x136) - ((x44 * Val(2)) * x136));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:903)
  Val x210 = ((x45 + x140) - ((x45 * Val(2)) * x140));
  Val x211 = ((x46 + x141) - ((x46 * Val(2)) * x141));
  Val x212 = ((x47 + x142) - ((x47 * Val(2)) * x142));
  Val x213 = ((x48 + x143) - ((x48 * Val(2)) * x143));
  Val x214 = ((x49 + x144) - ((x49 * Val(2)) * x144));
  Val x215 = ((x50 + x145) - ((x50 * Val(2)) * x145));
  Val x216 = ((x51 + x146) - ((x51 * Val(2)) * x146));
  Val x217 = ((x52 + x147) - ((x52 * Val(2)) * x147));
  Val x218 = ((x53 + x148) - ((x53 * Val(2)) * x148));
  Val x219 = ((x54 + x149) - ((x54 * Val(2)) * x149));
  Val x220 = ((x55 + x150) - ((x55 * Val(2)) * x150));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:907)
  Val x221 = ((x64 + x151) - ((x64 * Val(2)) * x151));
  Val x222 = ((x65 + x152) - (x86 * x152));
  Val x223 = ((x66 + x153) - ((x66 * Val(2)) * x153));
  Val x224 = ((x67 + x154) - ((x67 * Val(2)) * x154));
  Val x225 = ((x68 + x155) - ((x68 * Val(2)) * x155));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:908)
  Val x226 = ((x69 + x159) - ((x69 * Val(2)) * x159));
  Val x227 = ((x70 + x160) - ((x70 * Val(2)) * x160));
  Val x228 = ((x71 + x161) - ((x71 * Val(2)) * x161));
  Val x229 = ((x72 + x162) - ((x72 * Val(2)) * x162));
  Val x230 = ((x73 + x163) - ((x73 * Val(2)) * x163));
  Val x231 = ((x74 + x164) - ((x74 * Val(2)) * x164));
  Val x232 = ((x75 + x165) - ((x75 * Val(2)) * x165));
  Val x233 = ((x76 + x166) - ((x76 * Val(2)) * x166));
  Val x234 = ((x77 + x167) - ((x77 * Val(2)) * x167));
  Val x235 = ((x78 + x168) - ((x78 * Val(2)) * x168));
  Val x236 = ((x79 + x169) - ((x79 * Val(2)) * x169));
  Val x237 = ((x80 + x170) - ((x80 * Val(2)) * x170));
  Val x238 = ((x81 + x171) - ((x81 * Val(2)) * x171));
  Val x239 = ((x82 + x172) - ((x82 * Val(2)) * x172));
  Val x240 = ((x83 + x173) - ((x83 * Val(2)) * x173));
  Val x241 = ((x84 + x174) - ((x84 * Val(2)) * x174));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:911)
  Val x242 =
      ((((((x178 + (x179 * Val(2))) + (x180 * Val(4))) + (x181 * Val(8))) + (x182 * Val(16))) +
        (x183 * Val(32))) +
       (x184 * Val(64)));
  Val x243 = ((((((x242 + (x185 * Val(128))) + (x186 * Val(256))) + (x187 * Val(512))) +
                (x188 * Val(1024))) +
               (x189 * Val(2048))) +
              (x190 * Val(4096)));
  Val x244 = ((((((x243 + (x191 * Val(8192))) + (x192 * Val(16384))) + (x193 * Val(32768))) +
                (x194 * Val(65536))) +
               (x195 * Val(131072))) +
              (x196 * Val(262144)));
  Val x245 =
      ((((((x200 + (x201 * Val(2))) + (x202 * Val(4))) + (x203 * Val(8))) + (x204 * Val(16))) +
        (x205 * Val(32))) +
       (x206 * Val(64)));
  Val x246 = ((((((x245 + (x207 * Val(128))) + (x208 * Val(256))) + (x209 * Val(512))) +
                (x210 * Val(1024))) +
               (x211 * Val(2048))) +
              (x212 * Val(4096)));
  Val x247 = ((((((x246 + (x213 * Val(8192))) + (x214 * Val(16384))) + (x215 * Val(32768))) +
                (x216 * Val(65536))) +
               (x217 * Val(131072))) +
              (x218 * Val(262144)));
  Val x248 =
      ((((((x221 + (x222 * Val(2))) + (x223 * Val(4))) + (x224 * Val(8))) + (x225 * Val(16))) +
        (x226 * Val(32))) +
       (x227 * Val(64)));
  Val x249 = ((((((x248 + (x228 * Val(128))) + (x229 * Val(256))) + (x230 * Val(512))) +
                (x231 * Val(1024))) +
               (x232 * Val(2048))) +
              (x233 * Val(4096)));
  Val x250 = ((((((x249 + (x234 * Val(8192))) + (x235 * Val(16384))) + (x236 * Val(32768))) +
                (x237 * Val(65536))) +
               (x238 * Val(131072))) +
              (x239 * Val(262144)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:919)
  RetTupleStruct x251 = exec_RetTuple(
      ctx,
      Val22Array{x6,  x7,  x8,  x9,  x10, x11, x12, x13, x14, x15, x16,
                 x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27},
      Val22Array{x178, x179, x180, x181, x182, x183, x184, x185, x186, x187, x188,
                 x189, x190, x191, x192, x193, x194, x195, x196, x197, x198, x199},
      Val22Array{x200, x201, x202, x203, x204, x205, x206, x207, x208, x209, x210,
                 x211, x212, x213, x214, x215, x216, x217, x218, x219, x220, Val(0)},
      Val24Array{x221,
                 x222,
                 x223,
                 x224,
                 x225,
                 x226,
                 x227,
                 x228,
                 x229,
                 x230,
                 x231,
                 x232,
                 x233,
                 x234,
                 x235,
                 x236,
                 x237,
                 x238,
                 x239,
                 x240,
                 x241,
                 (((x244 + (x197 * Val(524288))) + (x198 * Val(1048576))) + (x199 * Val(2097152))),
                 ((x247 + (x219 * Val(524288))) + (x220 * Val(1048576))),
                 ((x250 + (x240 * Val(524288))) + (x241 * Val(1048576)))},
      Val22Array{x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45,
                 x46, x47, x48, x49, x50, x51, x52, x53, x54, x55, x56},
      Val22Array{x64, x65, x66, x67, x68, x69, x70, x71, x72, x73, x74,
                 x75, x76, x77, x78, x79, x80, x81, x82, x83, x84, x85},
      Val(2),
      Val(16),
      Val(0),
      arg0.blk._super,
      x98,
      LAYOUT_LOOKUP(layout1, _super));
  return x251;
}
RetTupleStruct execAbsorbWord_1__2_(ExecContext& ctx,
                                    RetTupleStruct arg0,
                                    BoundLayout<AbsorbWord_1__2_Layout> layout1) {
  // absorb_word(zirgen/circuit/keccak/keccak.zir:855)
  NondetRegStruct22Array x2 = arg0.arrB;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:862)
  Val x3 = x2[11]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:874)
  ToBits_22_Struct x4 = exec_ToBits_22_(ctx, x3, LAYOUT_LOOKUP(layout1, unpackA));
  NondetRegStruct22Array x5 = x4._super;
  Val x6 = x5[0]._super;
  Val x7 = x5[1]._super;
  Val x8 = x5[2]._super;
  Val x9 = x5[3]._super;
  Val x10 = x5[4]._super;
  Val x11 = x5[5]._super;
  Val x12 = x5[6]._super;
  Val x13 = x5[7]._super;
  Val x14 = x5[8]._super;
  Val x15 = x5[9]._super;
  Val x16 = x5[10]._super;
  Val x17 = x5[11]._super;
  Val x18 = x5[12]._super;
  Val x19 = x5[13]._super;
  Val x20 = x5[14]._super;
  Val x21 = x5[15]._super;
  Val x22 = x5[16]._super;
  Val x23 = x5[17]._super;
  Val x24 = x5[18]._super;
  Val x25 = x5[19]._super;
  Val x26 = x5[20]._super;
  Val x27 = x5[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:875)
  Val x28 = (x7 * Val(2));
  Val x29 =
      ((((((x6 + x28) + (x8 * Val(4))) + (x9 * Val(8))) + (x10 * Val(16))) + (x11 * Val(32))) +
       (x12 * Val(64)));
  Val x30 =
      ((((((x29 + (x13 * Val(128))) + (x14 * Val(256))) + (x15 * Val(512))) + (x16 * Val(1024))) +
        (x17 * Val(2048))) +
       (x18 * Val(4096)));
  Val x31 = ((((((x30 + (x19 * Val(8192))) + (x20 * Val(16384))) + (x21 * Val(32768))) +
               (x22 * Val(65536))) +
              (x23 * Val(131072))) +
             (x24 * Val(262144)));
  EQZ(((((x31 + (x25 * Val(524288))) + (x26 * Val(1048576))) + (x27 * Val(2097152))) - x3),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:875)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:866)
  Val x32 = x2[12]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:876)
  ToBits_22_Struct x33 = exec_ToBits_22_(ctx, x32, LAYOUT_LOOKUP(layout1, unpackE));
  NondetRegStruct22Array x34 = x33._super;
  Val x35 = x34[0]._super;
  Val x36 = x34[1]._super;
  Val x37 = x34[2]._super;
  Val x38 = x34[3]._super;
  Val x39 = x34[4]._super;
  Val x40 = x34[5]._super;
  Val x41 = x34[6]._super;
  Val x42 = x34[7]._super;
  Val x43 = x34[8]._super;
  Val x44 = x34[9]._super;
  Val x45 = x34[10]._super;
  Val x46 = x34[11]._super;
  Val x47 = x34[12]._super;
  Val x48 = x34[13]._super;
  Val x49 = x34[14]._super;
  Val x50 = x34[15]._super;
  Val x51 = x34[16]._super;
  Val x52 = x34[17]._super;
  Val x53 = x34[18]._super;
  Val x54 = x34[19]._super;
  Val x55 = x34[20]._super;
  Val x56 = x34[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:877)
  Val x57 = (x36 * Val(2));
  Val x58 =
      ((((((x35 + x57) + (x37 * Val(4))) + (x38 * Val(8))) + (x39 * Val(16))) + (x40 * Val(32))) +
       (x41 * Val(64)));
  Val x59 =
      ((((((x58 + (x42 * Val(128))) + (x43 * Val(256))) + (x44 * Val(512))) + (x45 * Val(1024))) +
        (x46 * Val(2048))) +
       (x47 * Val(4096)));
  Val x60 = ((((((x59 + (x48 * Val(8192))) + (x49 * Val(16384))) + (x50 * Val(32768))) +
               (x51 * Val(65536))) +
              (x52 * Val(131072))) +
             (x53 * Val(262144)));
  EQZ(((((x60 + (x54 * Val(524288))) + (x55 * Val(1048576))) + (x56 * Val(2097152))) - x32),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:877)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:870)
  Val x61 = x2[13]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:878)
  ToBits_22_Struct x62 = exec_ToBits_22_(ctx, x61, LAYOUT_LOOKUP(layout1, unpackF));
  NondetRegStruct22Array x63 = x62._super;
  Val x64 = x63[0]._super;
  Val x65 = x63[1]._super;
  Val x66 = x63[2]._super;
  Val x67 = x63[3]._super;
  Val x68 = x63[4]._super;
  Val x69 = x63[5]._super;
  Val x70 = x63[6]._super;
  Val x71 = x63[7]._super;
  Val x72 = x63[8]._super;
  Val x73 = x63[9]._super;
  Val x74 = x63[10]._super;
  Val x75 = x63[11]._super;
  Val x76 = x63[12]._super;
  Val x77 = x63[13]._super;
  Val x78 = x63[14]._super;
  Val x79 = x63[15]._super;
  Val x80 = x63[16]._super;
  Val x81 = x63[17]._super;
  Val x82 = x63[18]._super;
  Val x83 = x63[19]._super;
  Val x84 = x63[20]._super;
  Val x85 = x63[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:879)
  Val x86 = (x65 * Val(2));
  Val x87 =
      ((((((x64 + x86) + (x66 * Val(4))) + (x67 * Val(8))) + (x68 * Val(16))) + (x69 * Val(32))) +
       (x70 * Val(64)));
  Val x88 =
      ((((((x87 + (x71 * Val(128))) + (x72 * Val(256))) + (x73 * Val(512))) + (x74 * Val(1024))) +
        (x75 * Val(2048))) +
       (x76 * Val(4096)));
  Val x89 = ((((((x88 + (x77 * Val(8192))) + (x78 * Val(16384))) + (x79 * Val(32768))) +
               (x80 * Val(65536))) +
              (x81 * Val(131072))) +
             (x82 * Val(262144)));
  EQZ(((((x89 + (x83 * Val(524288))) + (x84 * Val(1048576))) + (x85 * Val(2097152))) - x61),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:879)");
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:881)
  Val x90 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:882)
  ToBits_16_Struct x91 = exec_ToBits_16_(ctx, x90, LAYOUT_LOOKUP(layout1, unpack_1));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:883)
  Val x92 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:884)
  ToBits_16_Struct x93 = exec_ToBits_16_(ctx, x92, LAYOUT_LOOKUP(layout1, unpack_2));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:885)
  Val x94 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:886)
  ToBits_16_Struct x95 = exec_ToBits_16_(ctx, x94, LAYOUT_LOOKUP(layout1, unpack_3));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:887)
  Val x96 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:888)
  ToBits_16_Struct x97 = exec_ToBits_16_(ctx, x96, LAYOUT_LOOKUP(layout1, unpack_4));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:855)
  Val x98 = arg0.midx._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:889)
  Val x99 = (((x98 + Val(1)) + Val(1)) + Val(10));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:890)
  NondetRegStruct x100 = exec_NondetReg(ctx, inv(x99), LAYOUT_LOOKUP(layout1, invmidx));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:891)
  EQZ(((x100._super * x99) - Val(1)), "absorb_word(zirgen/circuit/keccak/keccak.zir:891)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:882)
  NondetRegStruct16Array x101 = x91._super;
  Val x102 = x101[0]._super;
  Val x103 = x101[1]._super;
  Val x104 = x101[2]._super;
  Val x105 = x101[3]._super;
  Val x106 = x101[4]._super;
  Val x107 = x101[5]._super;
  Val x108 = x101[6]._super;
  Val x109 = x101[7]._super;
  Val x110 = x101[8]._super;
  Val x111 = x101[9]._super;
  Val x112 = x101[10]._super;
  Val x113 = x101[11]._super;
  Val x114 = x101[12]._super;
  Val x115 = x101[13]._super;
  Val x116 = x101[14]._super;
  Val x117 = x101[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x118 =
      ((((((x102 + (x103 * Val(2))) + (x104 * Val(4))) + (x105 * Val(8))) + (x106 * Val(16))) +
        (x107 * Val(32))) +
       (x108 * Val(64)));
  Val x119 = ((((((x118 + (x109 * Val(128))) + (x110 * Val(256))) + (x111 * Val(512))) +
                (x112 * Val(1024))) +
               (x113 * Val(2048))) +
              (x114 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:884)
  NondetRegStruct16Array x120 = x93._super;
  Val x121 = x120[0]._super;
  Val x122 = x120[1]._super;
  Val x123 = x120[2]._super;
  Val x124 = x120[3]._super;
  Val x125 = x120[4]._super;
  Val x126 = x120[5]._super;
  Val x127 = x120[6]._super;
  Val x128 = x120[7]._super;
  Val x129 = x120[8]._super;
  Val x130 = x120[9]._super;
  Val x131 = x120[10]._super;
  Val x132 = x120[11]._super;
  Val x133 = x120[12]._super;
  Val x134 = x120[13]._super;
  Val x135 = x120[14]._super;
  Val x136 = x120[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x137 =
      ((((((x121 + (x122 * Val(2))) + (x123 * Val(4))) + (x124 * Val(8))) + (x125 * Val(16))) +
        (x126 * Val(32))) +
       (x127 * Val(64)));
  Val x138 = ((((((x137 + (x128 * Val(128))) + (x129 * Val(256))) + (x130 * Val(512))) +
                (x131 * Val(1024))) +
               (x132 * Val(2048))) +
              (x133 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:886)
  NondetRegStruct16Array x139 = x95._super;
  Val x140 = x139[0]._super;
  Val x141 = x139[1]._super;
  Val x142 = x139[2]._super;
  Val x143 = x139[3]._super;
  Val x144 = x139[4]._super;
  Val x145 = x139[5]._super;
  Val x146 = x139[6]._super;
  Val x147 = x139[7]._super;
  Val x148 = x139[8]._super;
  Val x149 = x139[9]._super;
  Val x150 = x139[10]._super;
  Val x151 = x139[11]._super;
  Val x152 = x139[12]._super;
  Val x153 = x139[13]._super;
  Val x154 = x139[14]._super;
  Val x155 = x139[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x156 =
      ((((((x140 + (x141 * Val(2))) + (x142 * Val(4))) + (x143 * Val(8))) + (x144 * Val(16))) +
        (x145 * Val(32))) +
       (x146 * Val(64)));
  Val x157 = ((((((x156 + (x147 * Val(128))) + (x148 * Val(256))) + (x149 * Val(512))) +
                (x150 * Val(1024))) +
               (x151 * Val(2048))) +
              (x152 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:888)
  NondetRegStruct16Array x158 = x97._super;
  Val x159 = x158[0]._super;
  Val x160 = x158[1]._super;
  Val x161 = x158[2]._super;
  Val x162 = x158[3]._super;
  Val x163 = x158[4]._super;
  Val x164 = x158[5]._super;
  Val x165 = x158[6]._super;
  Val x166 = x158[7]._super;
  Val x167 = x158[8]._super;
  Val x168 = x158[9]._super;
  Val x169 = x158[10]._super;
  Val x170 = x158[11]._super;
  Val x171 = x158[12]._super;
  Val x172 = x158[13]._super;
  Val x173 = x158[14]._super;
  Val x174 = x158[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x175 =
      ((((((x159 + (x160 * Val(2))) + (x161 * Val(4))) + (x162 * Val(8))) + (x163 * Val(16))) +
        (x164 * Val(32))) +
       (x165 * Val(64)));
  Val x176 = ((((((x175 + (x166 * Val(128))) + (x167 * Val(256))) + (x168 * Val(512))) +
                (x169 * Val(1024))) +
               (x170 * Val(2048))) +
              (x171 * Val(4096)));
  WriteMemoryStruct x177 = exec_WriteMemory(
      ctx,
      x99,
      MemDigestStruct{
          ._super =
              Val4Array{
                  (((x119 + (x115 * Val(8192))) + (x116 * Val(16384))) + (x117 * Val(32768))),
                  (((x138 + (x134 * Val(8192))) + (x135 * Val(16384))) + (x136 * Val(32768))),
                  (((x157 + (x153 * Val(8192))) + (x154 * Val(16384))) + (x155 * Val(32768))),
                  (((x176 + (x172 * Val(8192))) + (x173 * Val(16384))) + (x174 * Val(32768)))}},
      LAYOUT_LOOKUP(layout1, _0));
  // xor2(zirgen/circuit/keccak/keccak.zir:114)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:897)
  Val x178 = ((x6 + x102) - ((x6 * Val(2)) * x102));
  Val x179 = ((x7 + x103) - (x28 * x103));
  Val x180 = ((x8 + x104) - ((x8 * Val(2)) * x104));
  Val x181 = ((x9 + x105) - ((x9 * Val(2)) * x105));
  Val x182 = ((x10 + x106) - ((x10 * Val(2)) * x106));
  Val x183 = ((x11 + x107) - ((x11 * Val(2)) * x107));
  Val x184 = ((x12 + x108) - ((x12 * Val(2)) * x108));
  Val x185 = ((x13 + x109) - ((x13 * Val(2)) * x109));
  Val x186 = ((x14 + x110) - ((x14 * Val(2)) * x110));
  Val x187 = ((x15 + x111) - ((x15 * Val(2)) * x111));
  Val x188 = ((x16 + x112) - ((x16 * Val(2)) * x112));
  Val x189 = ((x17 + x113) - ((x17 * Val(2)) * x113));
  Val x190 = ((x18 + x114) - ((x18 * Val(2)) * x114));
  Val x191 = ((x19 + x115) - ((x19 * Val(2)) * x115));
  Val x192 = ((x20 + x116) - ((x20 * Val(2)) * x116));
  Val x193 = ((x21 + x117) - ((x21 * Val(2)) * x117));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:898)
  Val x194 = ((x22 + x121) - ((x22 * Val(2)) * x121));
  Val x195 = ((x23 + x122) - ((x23 * Val(2)) * x122));
  Val x196 = ((x24 + x123) - ((x24 * Val(2)) * x123));
  Val x197 = ((x25 + x124) - ((x25 * Val(2)) * x124));
  Val x198 = ((x26 + x125) - ((x26 * Val(2)) * x125));
  Val x199 = ((x27 + x126) - ((x27 * Val(2)) * x126));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:902)
  Val x200 = ((x35 + x127) - ((x35 * Val(2)) * x127));
  Val x201 = ((x36 + x128) - (x57 * x128));
  Val x202 = ((x37 + x129) - ((x37 * Val(2)) * x129));
  Val x203 = ((x38 + x130) - ((x38 * Val(2)) * x130));
  Val x204 = ((x39 + x131) - ((x39 * Val(2)) * x131));
  Val x205 = ((x40 + x132) - ((x40 * Val(2)) * x132));
  Val x206 = ((x41 + x133) - ((x41 * Val(2)) * x133));
  Val x207 = ((x42 + x134) - ((x42 * Val(2)) * x134));
  Val x208 = ((x43 + x135) - ((x43 * Val(2)) * x135));
  Val x209 = ((x44 + x136) - ((x44 * Val(2)) * x136));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:903)
  Val x210 = ((x45 + x140) - ((x45 * Val(2)) * x140));
  Val x211 = ((x46 + x141) - ((x46 * Val(2)) * x141));
  Val x212 = ((x47 + x142) - ((x47 * Val(2)) * x142));
  Val x213 = ((x48 + x143) - ((x48 * Val(2)) * x143));
  Val x214 = ((x49 + x144) - ((x49 * Val(2)) * x144));
  Val x215 = ((x50 + x145) - ((x50 * Val(2)) * x145));
  Val x216 = ((x51 + x146) - ((x51 * Val(2)) * x146));
  Val x217 = ((x52 + x147) - ((x52 * Val(2)) * x147));
  Val x218 = ((x53 + x148) - ((x53 * Val(2)) * x148));
  Val x219 = ((x54 + x149) - ((x54 * Val(2)) * x149));
  Val x220 = ((x55 + x150) - ((x55 * Val(2)) * x150));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:907)
  Val x221 = ((x64 + x151) - ((x64 * Val(2)) * x151));
  Val x222 = ((x65 + x152) - (x86 * x152));
  Val x223 = ((x66 + x153) - ((x66 * Val(2)) * x153));
  Val x224 = ((x67 + x154) - ((x67 * Val(2)) * x154));
  Val x225 = ((x68 + x155) - ((x68 * Val(2)) * x155));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:908)
  Val x226 = ((x69 + x159) - ((x69 * Val(2)) * x159));
  Val x227 = ((x70 + x160) - ((x70 * Val(2)) * x160));
  Val x228 = ((x71 + x161) - ((x71 * Val(2)) * x161));
  Val x229 = ((x72 + x162) - ((x72 * Val(2)) * x162));
  Val x230 = ((x73 + x163) - ((x73 * Val(2)) * x163));
  Val x231 = ((x74 + x164) - ((x74 * Val(2)) * x164));
  Val x232 = ((x75 + x165) - ((x75 * Val(2)) * x165));
  Val x233 = ((x76 + x166) - ((x76 * Val(2)) * x166));
  Val x234 = ((x77 + x167) - ((x77 * Val(2)) * x167));
  Val x235 = ((x78 + x168) - ((x78 * Val(2)) * x168));
  Val x236 = ((x79 + x169) - ((x79 * Val(2)) * x169));
  Val x237 = ((x80 + x170) - ((x80 * Val(2)) * x170));
  Val x238 = ((x81 + x171) - ((x81 * Val(2)) * x171));
  Val x239 = ((x82 + x172) - ((x82 * Val(2)) * x172));
  Val x240 = ((x83 + x173) - ((x83 * Val(2)) * x173));
  Val x241 = ((x84 + x174) - ((x84 * Val(2)) * x174));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:911)
  Val x242 =
      ((((((x178 + (x179 * Val(2))) + (x180 * Val(4))) + (x181 * Val(8))) + (x182 * Val(16))) +
        (x183 * Val(32))) +
       (x184 * Val(64)));
  Val x243 = ((((((x242 + (x185 * Val(128))) + (x186 * Val(256))) + (x187 * Val(512))) +
                (x188 * Val(1024))) +
               (x189 * Val(2048))) +
              (x190 * Val(4096)));
  Val x244 = ((((((x243 + (x191 * Val(8192))) + (x192 * Val(16384))) + (x193 * Val(32768))) +
                (x194 * Val(65536))) +
               (x195 * Val(131072))) +
              (x196 * Val(262144)));
  Val x245 =
      ((((((x200 + (x201 * Val(2))) + (x202 * Val(4))) + (x203 * Val(8))) + (x204 * Val(16))) +
        (x205 * Val(32))) +
       (x206 * Val(64)));
  Val x246 = ((((((x245 + (x207 * Val(128))) + (x208 * Val(256))) + (x209 * Val(512))) +
                (x210 * Val(1024))) +
               (x211 * Val(2048))) +
              (x212 * Val(4096)));
  Val x247 = ((((((x246 + (x213 * Val(8192))) + (x214 * Val(16384))) + (x215 * Val(32768))) +
                (x216 * Val(65536))) +
               (x217 * Val(131072))) +
              (x218 * Val(262144)));
  Val x248 =
      ((((((x221 + (x222 * Val(2))) + (x223 * Val(4))) + (x224 * Val(8))) + (x225 * Val(16))) +
        (x226 * Val(32))) +
       (x227 * Val(64)));
  Val x249 = ((((((x248 + (x228 * Val(128))) + (x229 * Val(256))) + (x230 * Val(512))) +
                (x231 * Val(1024))) +
               (x232 * Val(2048))) +
              (x233 * Val(4096)));
  Val x250 = ((((((x249 + (x234 * Val(8192))) + (x235 * Val(16384))) + (x236 * Val(32768))) +
                (x237 * Val(65536))) +
               (x238 * Val(131072))) +
              (x239 * Val(262144)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:919)
  RetTupleStruct x251 = exec_RetTuple(
      ctx,
      Val22Array{x6,  x7,  x8,  x9,  x10, x11, x12, x13, x14, x15, x16,
                 x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27},
      Val22Array{x178, x179, x180, x181, x182, x183, x184, x185, x186, x187, x188,
                 x189, x190, x191, x192, x193, x194, x195, x196, x197, x198, x199},
      Val22Array{x200, x201, x202, x203, x204, x205, x206, x207, x208, x209, x210,
                 x211, x212, x213, x214, x215, x216, x217, x218, x219, x220, Val(0)},
      Val24Array{x221,
                 x222,
                 x223,
                 x224,
                 x225,
                 x226,
                 x227,
                 x228,
                 x229,
                 x230,
                 x231,
                 x232,
                 x233,
                 x234,
                 x235,
                 x236,
                 x237,
                 x238,
                 x239,
                 x240,
                 x241,
                 (((x244 + (x197 * Val(524288))) + (x198 * Val(1048576))) + (x199 * Val(2097152))),
                 ((x247 + (x219 * Val(524288))) + (x220 * Val(1048576))),
                 ((x250 + (x240 * Val(524288))) + (x241 * Val(1048576)))},
      Val22Array{x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45,
                 x46, x47, x48, x49, x50, x51, x52, x53, x54, x55, x56},
      Val22Array{x64, x65, x66, x67, x68, x69, x70, x71, x72, x73, x74,
                 x75, x76, x77, x78, x79, x80, x81, x82, x83, x84, x85},
      Val(3),
      Val(16),
      Val(0),
      arg0.blk._super,
      x98,
      LAYOUT_LOOKUP(layout1, _super));
  return x251;
}
RetTupleStruct execAbsorbWord_2__2_(ExecContext& ctx,
                                    RetTupleStruct arg0,
                                    BoundLayout<AbsorbWord_2__2_Layout> layout1) {
  // absorb_word(zirgen/circuit/keccak/keccak.zir:855)
  NondetRegStruct22Array x2 = arg0.arrB;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:862)
  Val x3 = x2[14]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:874)
  ToBits_22_Struct x4 = exec_ToBits_22_(ctx, x3, LAYOUT_LOOKUP(layout1, unpackA));
  NondetRegStruct22Array x5 = x4._super;
  Val x6 = x5[0]._super;
  Val x7 = x5[1]._super;
  Val x8 = x5[2]._super;
  Val x9 = x5[3]._super;
  Val x10 = x5[4]._super;
  Val x11 = x5[5]._super;
  Val x12 = x5[6]._super;
  Val x13 = x5[7]._super;
  Val x14 = x5[8]._super;
  Val x15 = x5[9]._super;
  Val x16 = x5[10]._super;
  Val x17 = x5[11]._super;
  Val x18 = x5[12]._super;
  Val x19 = x5[13]._super;
  Val x20 = x5[14]._super;
  Val x21 = x5[15]._super;
  Val x22 = x5[16]._super;
  Val x23 = x5[17]._super;
  Val x24 = x5[18]._super;
  Val x25 = x5[19]._super;
  Val x26 = x5[20]._super;
  Val x27 = x5[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:875)
  Val x28 = (x7 * Val(2));
  Val x29 =
      ((((((x6 + x28) + (x8 * Val(4))) + (x9 * Val(8))) + (x10 * Val(16))) + (x11 * Val(32))) +
       (x12 * Val(64)));
  Val x30 =
      ((((((x29 + (x13 * Val(128))) + (x14 * Val(256))) + (x15 * Val(512))) + (x16 * Val(1024))) +
        (x17 * Val(2048))) +
       (x18 * Val(4096)));
  Val x31 = ((((((x30 + (x19 * Val(8192))) + (x20 * Val(16384))) + (x21 * Val(32768))) +
               (x22 * Val(65536))) +
              (x23 * Val(131072))) +
             (x24 * Val(262144)));
  EQZ(((((x31 + (x25 * Val(524288))) + (x26 * Val(1048576))) + (x27 * Val(2097152))) - x3),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:875)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:866)
  Val x32 = x2[15]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:876)
  ToBits_22_Struct x33 = exec_ToBits_22_(ctx, x32, LAYOUT_LOOKUP(layout1, unpackE));
  NondetRegStruct22Array x34 = x33._super;
  Val x35 = x34[0]._super;
  Val x36 = x34[1]._super;
  Val x37 = x34[2]._super;
  Val x38 = x34[3]._super;
  Val x39 = x34[4]._super;
  Val x40 = x34[5]._super;
  Val x41 = x34[6]._super;
  Val x42 = x34[7]._super;
  Val x43 = x34[8]._super;
  Val x44 = x34[9]._super;
  Val x45 = x34[10]._super;
  Val x46 = x34[11]._super;
  Val x47 = x34[12]._super;
  Val x48 = x34[13]._super;
  Val x49 = x34[14]._super;
  Val x50 = x34[15]._super;
  Val x51 = x34[16]._super;
  Val x52 = x34[17]._super;
  Val x53 = x34[18]._super;
  Val x54 = x34[19]._super;
  Val x55 = x34[20]._super;
  Val x56 = x34[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:877)
  Val x57 = (x36 * Val(2));
  Val x58 =
      ((((((x35 + x57) + (x37 * Val(4))) + (x38 * Val(8))) + (x39 * Val(16))) + (x40 * Val(32))) +
       (x41 * Val(64)));
  Val x59 =
      ((((((x58 + (x42 * Val(128))) + (x43 * Val(256))) + (x44 * Val(512))) + (x45 * Val(1024))) +
        (x46 * Val(2048))) +
       (x47 * Val(4096)));
  Val x60 = ((((((x59 + (x48 * Val(8192))) + (x49 * Val(16384))) + (x50 * Val(32768))) +
               (x51 * Val(65536))) +
              (x52 * Val(131072))) +
             (x53 * Val(262144)));
  EQZ(((((x60 + (x54 * Val(524288))) + (x55 * Val(1048576))) + (x56 * Val(2097152))) - x32),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:877)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:870)
  Val x61 = x2[16]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:878)
  ToBits_22_Struct x62 = exec_ToBits_22_(ctx, x61, LAYOUT_LOOKUP(layout1, unpackF));
  NondetRegStruct22Array x63 = x62._super;
  Val x64 = x63[0]._super;
  Val x65 = x63[1]._super;
  Val x66 = x63[2]._super;
  Val x67 = x63[3]._super;
  Val x68 = x63[4]._super;
  Val x69 = x63[5]._super;
  Val x70 = x63[6]._super;
  Val x71 = x63[7]._super;
  Val x72 = x63[8]._super;
  Val x73 = x63[9]._super;
  Val x74 = x63[10]._super;
  Val x75 = x63[11]._super;
  Val x76 = x63[12]._super;
  Val x77 = x63[13]._super;
  Val x78 = x63[14]._super;
  Val x79 = x63[15]._super;
  Val x80 = x63[16]._super;
  Val x81 = x63[17]._super;
  Val x82 = x63[18]._super;
  Val x83 = x63[19]._super;
  Val x84 = x63[20]._super;
  Val x85 = x63[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:879)
  Val x86 = (x65 * Val(2));
  Val x87 =
      ((((((x64 + x86) + (x66 * Val(4))) + (x67 * Val(8))) + (x68 * Val(16))) + (x69 * Val(32))) +
       (x70 * Val(64)));
  Val x88 =
      ((((((x87 + (x71 * Val(128))) + (x72 * Val(256))) + (x73 * Val(512))) + (x74 * Val(1024))) +
        (x75 * Val(2048))) +
       (x76 * Val(4096)));
  Val x89 = ((((((x88 + (x77 * Val(8192))) + (x78 * Val(16384))) + (x79 * Val(32768))) +
               (x80 * Val(65536))) +
              (x81 * Val(131072))) +
             (x82 * Val(262144)));
  EQZ(((((x89 + (x83 * Val(524288))) + (x84 * Val(1048576))) + (x85 * Val(2097152))) - x61),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:879)");
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:881)
  Val x90 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:882)
  ToBits_16_Struct x91 = exec_ToBits_16_(ctx, x90, LAYOUT_LOOKUP(layout1, unpack_1));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:883)
  Val x92 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:884)
  ToBits_16_Struct x93 = exec_ToBits_16_(ctx, x92, LAYOUT_LOOKUP(layout1, unpack_2));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:885)
  Val x94 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:886)
  ToBits_16_Struct x95 = exec_ToBits_16_(ctx, x94, LAYOUT_LOOKUP(layout1, unpack_3));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:887)
  Val x96 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:888)
  ToBits_16_Struct x97 = exec_ToBits_16_(ctx, x96, LAYOUT_LOOKUP(layout1, unpack_4));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:855)
  Val x98 = arg0.midx._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:889)
  Val x99 = (((x98 + Val(1)) + Val(2)) + Val(10));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:890)
  NondetRegStruct x100 = exec_NondetReg(ctx, inv(x99), LAYOUT_LOOKUP(layout1, invmidx));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:891)
  EQZ(((x100._super * x99) - Val(1)), "absorb_word(zirgen/circuit/keccak/keccak.zir:891)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:882)
  NondetRegStruct16Array x101 = x91._super;
  Val x102 = x101[0]._super;
  Val x103 = x101[1]._super;
  Val x104 = x101[2]._super;
  Val x105 = x101[3]._super;
  Val x106 = x101[4]._super;
  Val x107 = x101[5]._super;
  Val x108 = x101[6]._super;
  Val x109 = x101[7]._super;
  Val x110 = x101[8]._super;
  Val x111 = x101[9]._super;
  Val x112 = x101[10]._super;
  Val x113 = x101[11]._super;
  Val x114 = x101[12]._super;
  Val x115 = x101[13]._super;
  Val x116 = x101[14]._super;
  Val x117 = x101[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x118 =
      ((((((x102 + (x103 * Val(2))) + (x104 * Val(4))) + (x105 * Val(8))) + (x106 * Val(16))) +
        (x107 * Val(32))) +
       (x108 * Val(64)));
  Val x119 = ((((((x118 + (x109 * Val(128))) + (x110 * Val(256))) + (x111 * Val(512))) +
                (x112 * Val(1024))) +
               (x113 * Val(2048))) +
              (x114 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:884)
  NondetRegStruct16Array x120 = x93._super;
  Val x121 = x120[0]._super;
  Val x122 = x120[1]._super;
  Val x123 = x120[2]._super;
  Val x124 = x120[3]._super;
  Val x125 = x120[4]._super;
  Val x126 = x120[5]._super;
  Val x127 = x120[6]._super;
  Val x128 = x120[7]._super;
  Val x129 = x120[8]._super;
  Val x130 = x120[9]._super;
  Val x131 = x120[10]._super;
  Val x132 = x120[11]._super;
  Val x133 = x120[12]._super;
  Val x134 = x120[13]._super;
  Val x135 = x120[14]._super;
  Val x136 = x120[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x137 =
      ((((((x121 + (x122 * Val(2))) + (x123 * Val(4))) + (x124 * Val(8))) + (x125 * Val(16))) +
        (x126 * Val(32))) +
       (x127 * Val(64)));
  Val x138 = ((((((x137 + (x128 * Val(128))) + (x129 * Val(256))) + (x130 * Val(512))) +
                (x131 * Val(1024))) +
               (x132 * Val(2048))) +
              (x133 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:886)
  NondetRegStruct16Array x139 = x95._super;
  Val x140 = x139[0]._super;
  Val x141 = x139[1]._super;
  Val x142 = x139[2]._super;
  Val x143 = x139[3]._super;
  Val x144 = x139[4]._super;
  Val x145 = x139[5]._super;
  Val x146 = x139[6]._super;
  Val x147 = x139[7]._super;
  Val x148 = x139[8]._super;
  Val x149 = x139[9]._super;
  Val x150 = x139[10]._super;
  Val x151 = x139[11]._super;
  Val x152 = x139[12]._super;
  Val x153 = x139[13]._super;
  Val x154 = x139[14]._super;
  Val x155 = x139[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x156 =
      ((((((x140 + (x141 * Val(2))) + (x142 * Val(4))) + (x143 * Val(8))) + (x144 * Val(16))) +
        (x145 * Val(32))) +
       (x146 * Val(64)));
  Val x157 = ((((((x156 + (x147 * Val(128))) + (x148 * Val(256))) + (x149 * Val(512))) +
                (x150 * Val(1024))) +
               (x151 * Val(2048))) +
              (x152 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:888)
  NondetRegStruct16Array x158 = x97._super;
  Val x159 = x158[0]._super;
  Val x160 = x158[1]._super;
  Val x161 = x158[2]._super;
  Val x162 = x158[3]._super;
  Val x163 = x158[4]._super;
  Val x164 = x158[5]._super;
  Val x165 = x158[6]._super;
  Val x166 = x158[7]._super;
  Val x167 = x158[8]._super;
  Val x168 = x158[9]._super;
  Val x169 = x158[10]._super;
  Val x170 = x158[11]._super;
  Val x171 = x158[12]._super;
  Val x172 = x158[13]._super;
  Val x173 = x158[14]._super;
  Val x174 = x158[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x175 =
      ((((((x159 + (x160 * Val(2))) + (x161 * Val(4))) + (x162 * Val(8))) + (x163 * Val(16))) +
        (x164 * Val(32))) +
       (x165 * Val(64)));
  Val x176 = ((((((x175 + (x166 * Val(128))) + (x167 * Val(256))) + (x168 * Val(512))) +
                (x169 * Val(1024))) +
               (x170 * Val(2048))) +
              (x171 * Val(4096)));
  WriteMemoryStruct x177 = exec_WriteMemory(
      ctx,
      x99,
      MemDigestStruct{
          ._super =
              Val4Array{
                  (((x119 + (x115 * Val(8192))) + (x116 * Val(16384))) + (x117 * Val(32768))),
                  (((x138 + (x134 * Val(8192))) + (x135 * Val(16384))) + (x136 * Val(32768))),
                  (((x157 + (x153 * Val(8192))) + (x154 * Val(16384))) + (x155 * Val(32768))),
                  (((x176 + (x172 * Val(8192))) + (x173 * Val(16384))) + (x174 * Val(32768)))}},
      LAYOUT_LOOKUP(layout1, _0));
  // xor2(zirgen/circuit/keccak/keccak.zir:114)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:897)
  Val x178 = ((x6 + x102) - ((x6 * Val(2)) * x102));
  Val x179 = ((x7 + x103) - (x28 * x103));
  Val x180 = ((x8 + x104) - ((x8 * Val(2)) * x104));
  Val x181 = ((x9 + x105) - ((x9 * Val(2)) * x105));
  Val x182 = ((x10 + x106) - ((x10 * Val(2)) * x106));
  Val x183 = ((x11 + x107) - ((x11 * Val(2)) * x107));
  Val x184 = ((x12 + x108) - ((x12 * Val(2)) * x108));
  Val x185 = ((x13 + x109) - ((x13 * Val(2)) * x109));
  Val x186 = ((x14 + x110) - ((x14 * Val(2)) * x110));
  Val x187 = ((x15 + x111) - ((x15 * Val(2)) * x111));
  Val x188 = ((x16 + x112) - ((x16 * Val(2)) * x112));
  Val x189 = ((x17 + x113) - ((x17 * Val(2)) * x113));
  Val x190 = ((x18 + x114) - ((x18 * Val(2)) * x114));
  Val x191 = ((x19 + x115) - ((x19 * Val(2)) * x115));
  Val x192 = ((x20 + x116) - ((x20 * Val(2)) * x116));
  Val x193 = ((x21 + x117) - ((x21 * Val(2)) * x117));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:898)
  Val x194 = ((x22 + x121) - ((x22 * Val(2)) * x121));
  Val x195 = ((x23 + x122) - ((x23 * Val(2)) * x122));
  Val x196 = ((x24 + x123) - ((x24 * Val(2)) * x123));
  Val x197 = ((x25 + x124) - ((x25 * Val(2)) * x124));
  Val x198 = ((x26 + x125) - ((x26 * Val(2)) * x125));
  Val x199 = ((x27 + x126) - ((x27 * Val(2)) * x126));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:902)
  Val x200 = ((x35 + x127) - ((x35 * Val(2)) * x127));
  Val x201 = ((x36 + x128) - (x57 * x128));
  Val x202 = ((x37 + x129) - ((x37 * Val(2)) * x129));
  Val x203 = ((x38 + x130) - ((x38 * Val(2)) * x130));
  Val x204 = ((x39 + x131) - ((x39 * Val(2)) * x131));
  Val x205 = ((x40 + x132) - ((x40 * Val(2)) * x132));
  Val x206 = ((x41 + x133) - ((x41 * Val(2)) * x133));
  Val x207 = ((x42 + x134) - ((x42 * Val(2)) * x134));
  Val x208 = ((x43 + x135) - ((x43 * Val(2)) * x135));
  Val x209 = ((x44 + x136) - ((x44 * Val(2)) * x136));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:903)
  Val x210 = ((x45 + x140) - ((x45 * Val(2)) * x140));
  Val x211 = ((x46 + x141) - ((x46 * Val(2)) * x141));
  Val x212 = ((x47 + x142) - ((x47 * Val(2)) * x142));
  Val x213 = ((x48 + x143) - ((x48 * Val(2)) * x143));
  Val x214 = ((x49 + x144) - ((x49 * Val(2)) * x144));
  Val x215 = ((x50 + x145) - ((x50 * Val(2)) * x145));
  Val x216 = ((x51 + x146) - ((x51 * Val(2)) * x146));
  Val x217 = ((x52 + x147) - ((x52 * Val(2)) * x147));
  Val x218 = ((x53 + x148) - ((x53 * Val(2)) * x148));
  Val x219 = ((x54 + x149) - ((x54 * Val(2)) * x149));
  Val x220 = ((x55 + x150) - ((x55 * Val(2)) * x150));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:907)
  Val x221 = ((x64 + x151) - ((x64 * Val(2)) * x151));
  Val x222 = ((x65 + x152) - (x86 * x152));
  Val x223 = ((x66 + x153) - ((x66 * Val(2)) * x153));
  Val x224 = ((x67 + x154) - ((x67 * Val(2)) * x154));
  Val x225 = ((x68 + x155) - ((x68 * Val(2)) * x155));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:908)
  Val x226 = ((x69 + x159) - ((x69 * Val(2)) * x159));
  Val x227 = ((x70 + x160) - ((x70 * Val(2)) * x160));
  Val x228 = ((x71 + x161) - ((x71 * Val(2)) * x161));
  Val x229 = ((x72 + x162) - ((x72 * Val(2)) * x162));
  Val x230 = ((x73 + x163) - ((x73 * Val(2)) * x163));
  Val x231 = ((x74 + x164) - ((x74 * Val(2)) * x164));
  Val x232 = ((x75 + x165) - ((x75 * Val(2)) * x165));
  Val x233 = ((x76 + x166) - ((x76 * Val(2)) * x166));
  Val x234 = ((x77 + x167) - ((x77 * Val(2)) * x167));
  Val x235 = ((x78 + x168) - ((x78 * Val(2)) * x168));
  Val x236 = ((x79 + x169) - ((x79 * Val(2)) * x169));
  Val x237 = ((x80 + x170) - ((x80 * Val(2)) * x170));
  Val x238 = ((x81 + x171) - ((x81 * Val(2)) * x171));
  Val x239 = ((x82 + x172) - ((x82 * Val(2)) * x172));
  Val x240 = ((x83 + x173) - ((x83 * Val(2)) * x173));
  Val x241 = ((x84 + x174) - ((x84 * Val(2)) * x174));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:911)
  Val x242 =
      ((((((x178 + (x179 * Val(2))) + (x180 * Val(4))) + (x181 * Val(8))) + (x182 * Val(16))) +
        (x183 * Val(32))) +
       (x184 * Val(64)));
  Val x243 = ((((((x242 + (x185 * Val(128))) + (x186 * Val(256))) + (x187 * Val(512))) +
                (x188 * Val(1024))) +
               (x189 * Val(2048))) +
              (x190 * Val(4096)));
  Val x244 = ((((((x243 + (x191 * Val(8192))) + (x192 * Val(16384))) + (x193 * Val(32768))) +
                (x194 * Val(65536))) +
               (x195 * Val(131072))) +
              (x196 * Val(262144)));
  Val x245 =
      ((((((x200 + (x201 * Val(2))) + (x202 * Val(4))) + (x203 * Val(8))) + (x204 * Val(16))) +
        (x205 * Val(32))) +
       (x206 * Val(64)));
  Val x246 = ((((((x245 + (x207 * Val(128))) + (x208 * Val(256))) + (x209 * Val(512))) +
                (x210 * Val(1024))) +
               (x211 * Val(2048))) +
              (x212 * Val(4096)));
  Val x247 = ((((((x246 + (x213 * Val(8192))) + (x214 * Val(16384))) + (x215 * Val(32768))) +
                (x216 * Val(65536))) +
               (x217 * Val(131072))) +
              (x218 * Val(262144)));
  Val x248 =
      ((((((x221 + (x222 * Val(2))) + (x223 * Val(4))) + (x224 * Val(8))) + (x225 * Val(16))) +
        (x226 * Val(32))) +
       (x227 * Val(64)));
  Val x249 = ((((((x248 + (x228 * Val(128))) + (x229 * Val(256))) + (x230 * Val(512))) +
                (x231 * Val(1024))) +
               (x232 * Val(2048))) +
              (x233 * Val(4096)));
  Val x250 = ((((((x249 + (x234 * Val(8192))) + (x235 * Val(16384))) + (x236 * Val(32768))) +
                (x237 * Val(65536))) +
               (x238 * Val(131072))) +
              (x239 * Val(262144)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:919)
  RetTupleStruct x251 = exec_RetTuple(
      ctx,
      Val22Array{x6,  x7,  x8,  x9,  x10, x11, x12, x13, x14, x15, x16,
                 x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27},
      Val22Array{x178, x179, x180, x181, x182, x183, x184, x185, x186, x187, x188,
                 x189, x190, x191, x192, x193, x194, x195, x196, x197, x198, x199},
      Val22Array{x200, x201, x202, x203, x204, x205, x206, x207, x208, x209, x210,
                 x211, x212, x213, x214, x215, x216, x217, x218, x219, x220, Val(0)},
      Val24Array{x221,
                 x222,
                 x223,
                 x224,
                 x225,
                 x226,
                 x227,
                 x228,
                 x229,
                 x230,
                 x231,
                 x232,
                 x233,
                 x234,
                 x235,
                 x236,
                 x237,
                 x238,
                 x239,
                 x240,
                 x241,
                 (((x244 + (x197 * Val(524288))) + (x198 * Val(1048576))) + (x199 * Val(2097152))),
                 ((x247 + (x219 * Val(524288))) + (x220 * Val(1048576))),
                 ((x250 + (x240 * Val(524288))) + (x241 * Val(1048576)))},
      Val22Array{x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45,
                 x46, x47, x48, x49, x50, x51, x52, x53, x54, x55, x56},
      Val22Array{x64, x65, x66, x67, x68, x69, x70, x71, x72, x73, x74,
                 x75, x76, x77, x78, x79, x80, x81, x82, x83, x84, x85},
      Val(4),
      Val(16),
      Val(0),
      arg0.blk._super,
      x98,
      LAYOUT_LOOKUP(layout1, _super));
  return x251;
}
RetTupleStruct execAbsorbWord_3__2_(ExecContext& ctx,
                                    RetTupleStruct arg0,
                                    BoundLayout<AbsorbWord_3__2_Layout> layout1) {
  // absorb_word(zirgen/circuit/keccak/keccak.zir:855)
  NondetRegStruct22Array x2 = arg0.arrB;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:862)
  Val x3 = x2[17]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:874)
  ToBits_22_Struct x4 = exec_ToBits_22_(ctx, x3, LAYOUT_LOOKUP(layout1, unpackA));
  NondetRegStruct22Array x5 = x4._super;
  Val x6 = x5[0]._super;
  Val x7 = x5[1]._super;
  Val x8 = x5[2]._super;
  Val x9 = x5[3]._super;
  Val x10 = x5[4]._super;
  Val x11 = x5[5]._super;
  Val x12 = x5[6]._super;
  Val x13 = x5[7]._super;
  Val x14 = x5[8]._super;
  Val x15 = x5[9]._super;
  Val x16 = x5[10]._super;
  Val x17 = x5[11]._super;
  Val x18 = x5[12]._super;
  Val x19 = x5[13]._super;
  Val x20 = x5[14]._super;
  Val x21 = x5[15]._super;
  Val x22 = x5[16]._super;
  Val x23 = x5[17]._super;
  Val x24 = x5[18]._super;
  Val x25 = x5[19]._super;
  Val x26 = x5[20]._super;
  Val x27 = x5[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:875)
  Val x28 = (x7 * Val(2));
  Val x29 =
      ((((((x6 + x28) + (x8 * Val(4))) + (x9 * Val(8))) + (x10 * Val(16))) + (x11 * Val(32))) +
       (x12 * Val(64)));
  Val x30 =
      ((((((x29 + (x13 * Val(128))) + (x14 * Val(256))) + (x15 * Val(512))) + (x16 * Val(1024))) +
        (x17 * Val(2048))) +
       (x18 * Val(4096)));
  Val x31 = ((((((x30 + (x19 * Val(8192))) + (x20 * Val(16384))) + (x21 * Val(32768))) +
               (x22 * Val(65536))) +
              (x23 * Val(131072))) +
             (x24 * Val(262144)));
  EQZ(((((x31 + (x25 * Val(524288))) + (x26 * Val(1048576))) + (x27 * Val(2097152))) - x3),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:875)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:866)
  Val x32 = x2[18]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:876)
  ToBits_22_Struct x33 = exec_ToBits_22_(ctx, x32, LAYOUT_LOOKUP(layout1, unpackE));
  NondetRegStruct22Array x34 = x33._super;
  Val x35 = x34[0]._super;
  Val x36 = x34[1]._super;
  Val x37 = x34[2]._super;
  Val x38 = x34[3]._super;
  Val x39 = x34[4]._super;
  Val x40 = x34[5]._super;
  Val x41 = x34[6]._super;
  Val x42 = x34[7]._super;
  Val x43 = x34[8]._super;
  Val x44 = x34[9]._super;
  Val x45 = x34[10]._super;
  Val x46 = x34[11]._super;
  Val x47 = x34[12]._super;
  Val x48 = x34[13]._super;
  Val x49 = x34[14]._super;
  Val x50 = x34[15]._super;
  Val x51 = x34[16]._super;
  Val x52 = x34[17]._super;
  Val x53 = x34[18]._super;
  Val x54 = x34[19]._super;
  Val x55 = x34[20]._super;
  Val x56 = x34[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:877)
  Val x57 = (x36 * Val(2));
  Val x58 =
      ((((((x35 + x57) + (x37 * Val(4))) + (x38 * Val(8))) + (x39 * Val(16))) + (x40 * Val(32))) +
       (x41 * Val(64)));
  Val x59 =
      ((((((x58 + (x42 * Val(128))) + (x43 * Val(256))) + (x44 * Val(512))) + (x45 * Val(1024))) +
        (x46 * Val(2048))) +
       (x47 * Val(4096)));
  Val x60 = ((((((x59 + (x48 * Val(8192))) + (x49 * Val(16384))) + (x50 * Val(32768))) +
               (x51 * Val(65536))) +
              (x52 * Val(131072))) +
             (x53 * Val(262144)));
  EQZ(((((x60 + (x54 * Val(524288))) + (x55 * Val(1048576))) + (x56 * Val(2097152))) - x32),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:877)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:870)
  Val x61 = x2[19]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:878)
  ToBits_22_Struct x62 = exec_ToBits_22_(ctx, x61, LAYOUT_LOOKUP(layout1, unpackF));
  NondetRegStruct22Array x63 = x62._super;
  Val x64 = x63[0]._super;
  Val x65 = x63[1]._super;
  Val x66 = x63[2]._super;
  Val x67 = x63[3]._super;
  Val x68 = x63[4]._super;
  Val x69 = x63[5]._super;
  Val x70 = x63[6]._super;
  Val x71 = x63[7]._super;
  Val x72 = x63[8]._super;
  Val x73 = x63[9]._super;
  Val x74 = x63[10]._super;
  Val x75 = x63[11]._super;
  Val x76 = x63[12]._super;
  Val x77 = x63[13]._super;
  Val x78 = x63[14]._super;
  Val x79 = x63[15]._super;
  Val x80 = x63[16]._super;
  Val x81 = x63[17]._super;
  Val x82 = x63[18]._super;
  Val x83 = x63[19]._super;
  Val x84 = x63[20]._super;
  Val x85 = x63[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:879)
  Val x86 = (x65 * Val(2));
  Val x87 =
      ((((((x64 + x86) + (x66 * Val(4))) + (x67 * Val(8))) + (x68 * Val(16))) + (x69 * Val(32))) +
       (x70 * Val(64)));
  Val x88 =
      ((((((x87 + (x71 * Val(128))) + (x72 * Val(256))) + (x73 * Val(512))) + (x74 * Val(1024))) +
        (x75 * Val(2048))) +
       (x76 * Val(4096)));
  Val x89 = ((((((x88 + (x77 * Val(8192))) + (x78 * Val(16384))) + (x79 * Val(32768))) +
               (x80 * Val(65536))) +
              (x81 * Val(131072))) +
             (x82 * Val(262144)));
  EQZ(((((x89 + (x83 * Val(524288))) + (x84 * Val(1048576))) + (x85 * Val(2097152))) - x61),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:879)");
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:881)
  Val x90 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:882)
  ToBits_16_Struct x91 = exec_ToBits_16_(ctx, x90, LAYOUT_LOOKUP(layout1, unpack_1));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:883)
  Val x92 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:884)
  ToBits_16_Struct x93 = exec_ToBits_16_(ctx, x92, LAYOUT_LOOKUP(layout1, unpack_2));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:885)
  Val x94 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:886)
  ToBits_16_Struct x95 = exec_ToBits_16_(ctx, x94, LAYOUT_LOOKUP(layout1, unpack_3));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:887)
  Val x96 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:888)
  ToBits_16_Struct x97 = exec_ToBits_16_(ctx, x96, LAYOUT_LOOKUP(layout1, unpack_4));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:855)
  Val x98 = arg0.midx._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:889)
  Val x99 = (((x98 + Val(1)) + Val(3)) + Val(10));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:890)
  NondetRegStruct x100 = exec_NondetReg(ctx, inv(x99), LAYOUT_LOOKUP(layout1, invmidx));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:891)
  EQZ(((x100._super * x99) - Val(1)), "absorb_word(zirgen/circuit/keccak/keccak.zir:891)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:882)
  NondetRegStruct16Array x101 = x91._super;
  Val x102 = x101[0]._super;
  Val x103 = x101[1]._super;
  Val x104 = x101[2]._super;
  Val x105 = x101[3]._super;
  Val x106 = x101[4]._super;
  Val x107 = x101[5]._super;
  Val x108 = x101[6]._super;
  Val x109 = x101[7]._super;
  Val x110 = x101[8]._super;
  Val x111 = x101[9]._super;
  Val x112 = x101[10]._super;
  Val x113 = x101[11]._super;
  Val x114 = x101[12]._super;
  Val x115 = x101[13]._super;
  Val x116 = x101[14]._super;
  Val x117 = x101[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x118 =
      ((((((x102 + (x103 * Val(2))) + (x104 * Val(4))) + (x105 * Val(8))) + (x106 * Val(16))) +
        (x107 * Val(32))) +
       (x108 * Val(64)));
  Val x119 = ((((((x118 + (x109 * Val(128))) + (x110 * Val(256))) + (x111 * Val(512))) +
                (x112 * Val(1024))) +
               (x113 * Val(2048))) +
              (x114 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:884)
  NondetRegStruct16Array x120 = x93._super;
  Val x121 = x120[0]._super;
  Val x122 = x120[1]._super;
  Val x123 = x120[2]._super;
  Val x124 = x120[3]._super;
  Val x125 = x120[4]._super;
  Val x126 = x120[5]._super;
  Val x127 = x120[6]._super;
  Val x128 = x120[7]._super;
  Val x129 = x120[8]._super;
  Val x130 = x120[9]._super;
  Val x131 = x120[10]._super;
  Val x132 = x120[11]._super;
  Val x133 = x120[12]._super;
  Val x134 = x120[13]._super;
  Val x135 = x120[14]._super;
  Val x136 = x120[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x137 =
      ((((((x121 + (x122 * Val(2))) + (x123 * Val(4))) + (x124 * Val(8))) + (x125 * Val(16))) +
        (x126 * Val(32))) +
       (x127 * Val(64)));
  Val x138 = ((((((x137 + (x128 * Val(128))) + (x129 * Val(256))) + (x130 * Val(512))) +
                (x131 * Val(1024))) +
               (x132 * Val(2048))) +
              (x133 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:886)
  NondetRegStruct16Array x139 = x95._super;
  Val x140 = x139[0]._super;
  Val x141 = x139[1]._super;
  Val x142 = x139[2]._super;
  Val x143 = x139[3]._super;
  Val x144 = x139[4]._super;
  Val x145 = x139[5]._super;
  Val x146 = x139[6]._super;
  Val x147 = x139[7]._super;
  Val x148 = x139[8]._super;
  Val x149 = x139[9]._super;
  Val x150 = x139[10]._super;
  Val x151 = x139[11]._super;
  Val x152 = x139[12]._super;
  Val x153 = x139[13]._super;
  Val x154 = x139[14]._super;
  Val x155 = x139[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x156 =
      ((((((x140 + (x141 * Val(2))) + (x142 * Val(4))) + (x143 * Val(8))) + (x144 * Val(16))) +
        (x145 * Val(32))) +
       (x146 * Val(64)));
  Val x157 = ((((((x156 + (x147 * Val(128))) + (x148 * Val(256))) + (x149 * Val(512))) +
                (x150 * Val(1024))) +
               (x151 * Val(2048))) +
              (x152 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:888)
  NondetRegStruct16Array x158 = x97._super;
  Val x159 = x158[0]._super;
  Val x160 = x158[1]._super;
  Val x161 = x158[2]._super;
  Val x162 = x158[3]._super;
  Val x163 = x158[4]._super;
  Val x164 = x158[5]._super;
  Val x165 = x158[6]._super;
  Val x166 = x158[7]._super;
  Val x167 = x158[8]._super;
  Val x168 = x158[9]._super;
  Val x169 = x158[10]._super;
  Val x170 = x158[11]._super;
  Val x171 = x158[12]._super;
  Val x172 = x158[13]._super;
  Val x173 = x158[14]._super;
  Val x174 = x158[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x175 =
      ((((((x159 + (x160 * Val(2))) + (x161 * Val(4))) + (x162 * Val(8))) + (x163 * Val(16))) +
        (x164 * Val(32))) +
       (x165 * Val(64)));
  Val x176 = ((((((x175 + (x166 * Val(128))) + (x167 * Val(256))) + (x168 * Val(512))) +
                (x169 * Val(1024))) +
               (x170 * Val(2048))) +
              (x171 * Val(4096)));
  WriteMemoryStruct x177 = exec_WriteMemory(
      ctx,
      x99,
      MemDigestStruct{
          ._super =
              Val4Array{
                  (((x119 + (x115 * Val(8192))) + (x116 * Val(16384))) + (x117 * Val(32768))),
                  (((x138 + (x134 * Val(8192))) + (x135 * Val(16384))) + (x136 * Val(32768))),
                  (((x157 + (x153 * Val(8192))) + (x154 * Val(16384))) + (x155 * Val(32768))),
                  (((x176 + (x172 * Val(8192))) + (x173 * Val(16384))) + (x174 * Val(32768)))}},
      LAYOUT_LOOKUP(layout1, _0));
  // xor2(zirgen/circuit/keccak/keccak.zir:114)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:897)
  Val x178 = ((x6 + x102) - ((x6 * Val(2)) * x102));
  Val x179 = ((x7 + x103) - (x28 * x103));
  Val x180 = ((x8 + x104) - ((x8 * Val(2)) * x104));
  Val x181 = ((x9 + x105) - ((x9 * Val(2)) * x105));
  Val x182 = ((x10 + x106) - ((x10 * Val(2)) * x106));
  Val x183 = ((x11 + x107) - ((x11 * Val(2)) * x107));
  Val x184 = ((x12 + x108) - ((x12 * Val(2)) * x108));
  Val x185 = ((x13 + x109) - ((x13 * Val(2)) * x109));
  Val x186 = ((x14 + x110) - ((x14 * Val(2)) * x110));
  Val x187 = ((x15 + x111) - ((x15 * Val(2)) * x111));
  Val x188 = ((x16 + x112) - ((x16 * Val(2)) * x112));
  Val x189 = ((x17 + x113) - ((x17 * Val(2)) * x113));
  Val x190 = ((x18 + x114) - ((x18 * Val(2)) * x114));
  Val x191 = ((x19 + x115) - ((x19 * Val(2)) * x115));
  Val x192 = ((x20 + x116) - ((x20 * Val(2)) * x116));
  Val x193 = ((x21 + x117) - ((x21 * Val(2)) * x117));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:898)
  Val x194 = ((x22 + x121) - ((x22 * Val(2)) * x121));
  Val x195 = ((x23 + x122) - ((x23 * Val(2)) * x122));
  Val x196 = ((x24 + x123) - ((x24 * Val(2)) * x123));
  Val x197 = ((x25 + x124) - ((x25 * Val(2)) * x124));
  Val x198 = ((x26 + x125) - ((x26 * Val(2)) * x125));
  Val x199 = ((x27 + x126) - ((x27 * Val(2)) * x126));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:902)
  Val x200 = ((x35 + x127) - ((x35 * Val(2)) * x127));
  Val x201 = ((x36 + x128) - (x57 * x128));
  Val x202 = ((x37 + x129) - ((x37 * Val(2)) * x129));
  Val x203 = ((x38 + x130) - ((x38 * Val(2)) * x130));
  Val x204 = ((x39 + x131) - ((x39 * Val(2)) * x131));
  Val x205 = ((x40 + x132) - ((x40 * Val(2)) * x132));
  Val x206 = ((x41 + x133) - ((x41 * Val(2)) * x133));
  Val x207 = ((x42 + x134) - ((x42 * Val(2)) * x134));
  Val x208 = ((x43 + x135) - ((x43 * Val(2)) * x135));
  Val x209 = ((x44 + x136) - ((x44 * Val(2)) * x136));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:903)
  Val x210 = ((x45 + x140) - ((x45 * Val(2)) * x140));
  Val x211 = ((x46 + x141) - ((x46 * Val(2)) * x141));
  Val x212 = ((x47 + x142) - ((x47 * Val(2)) * x142));
  Val x213 = ((x48 + x143) - ((x48 * Val(2)) * x143));
  Val x214 = ((x49 + x144) - ((x49 * Val(2)) * x144));
  Val x215 = ((x50 + x145) - ((x50 * Val(2)) * x145));
  Val x216 = ((x51 + x146) - ((x51 * Val(2)) * x146));
  Val x217 = ((x52 + x147) - ((x52 * Val(2)) * x147));
  Val x218 = ((x53 + x148) - ((x53 * Val(2)) * x148));
  Val x219 = ((x54 + x149) - ((x54 * Val(2)) * x149));
  Val x220 = ((x55 + x150) - ((x55 * Val(2)) * x150));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:907)
  Val x221 = ((x64 + x151) - ((x64 * Val(2)) * x151));
  Val x222 = ((x65 + x152) - (x86 * x152));
  Val x223 = ((x66 + x153) - ((x66 * Val(2)) * x153));
  Val x224 = ((x67 + x154) - ((x67 * Val(2)) * x154));
  Val x225 = ((x68 + x155) - ((x68 * Val(2)) * x155));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:908)
  Val x226 = ((x69 + x159) - ((x69 * Val(2)) * x159));
  Val x227 = ((x70 + x160) - ((x70 * Val(2)) * x160));
  Val x228 = ((x71 + x161) - ((x71 * Val(2)) * x161));
  Val x229 = ((x72 + x162) - ((x72 * Val(2)) * x162));
  Val x230 = ((x73 + x163) - ((x73 * Val(2)) * x163));
  Val x231 = ((x74 + x164) - ((x74 * Val(2)) * x164));
  Val x232 = ((x75 + x165) - ((x75 * Val(2)) * x165));
  Val x233 = ((x76 + x166) - ((x76 * Val(2)) * x166));
  Val x234 = ((x77 + x167) - ((x77 * Val(2)) * x167));
  Val x235 = ((x78 + x168) - ((x78 * Val(2)) * x168));
  Val x236 = ((x79 + x169) - ((x79 * Val(2)) * x169));
  Val x237 = ((x80 + x170) - ((x80 * Val(2)) * x170));
  Val x238 = ((x81 + x171) - ((x81 * Val(2)) * x171));
  Val x239 = ((x82 + x172) - ((x82 * Val(2)) * x172));
  Val x240 = ((x83 + x173) - ((x83 * Val(2)) * x173));
  Val x241 = ((x84 + x174) - ((x84 * Val(2)) * x174));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:911)
  Val x242 =
      ((((((x178 + (x179 * Val(2))) + (x180 * Val(4))) + (x181 * Val(8))) + (x182 * Val(16))) +
        (x183 * Val(32))) +
       (x184 * Val(64)));
  Val x243 = ((((((x242 + (x185 * Val(128))) + (x186 * Val(256))) + (x187 * Val(512))) +
                (x188 * Val(1024))) +
               (x189 * Val(2048))) +
              (x190 * Val(4096)));
  Val x244 = ((((((x243 + (x191 * Val(8192))) + (x192 * Val(16384))) + (x193 * Val(32768))) +
                (x194 * Val(65536))) +
               (x195 * Val(131072))) +
              (x196 * Val(262144)));
  Val x245 =
      ((((((x200 + (x201 * Val(2))) + (x202 * Val(4))) + (x203 * Val(8))) + (x204 * Val(16))) +
        (x205 * Val(32))) +
       (x206 * Val(64)));
  Val x246 = ((((((x245 + (x207 * Val(128))) + (x208 * Val(256))) + (x209 * Val(512))) +
                (x210 * Val(1024))) +
               (x211 * Val(2048))) +
              (x212 * Val(4096)));
  Val x247 = ((((((x246 + (x213 * Val(8192))) + (x214 * Val(16384))) + (x215 * Val(32768))) +
                (x216 * Val(65536))) +
               (x217 * Val(131072))) +
              (x218 * Val(262144)));
  Val x248 =
      ((((((x221 + (x222 * Val(2))) + (x223 * Val(4))) + (x224 * Val(8))) + (x225 * Val(16))) +
        (x226 * Val(32))) +
       (x227 * Val(64)));
  Val x249 = ((((((x248 + (x228 * Val(128))) + (x229 * Val(256))) + (x230 * Val(512))) +
                (x231 * Val(1024))) +
               (x232 * Val(2048))) +
              (x233 * Val(4096)));
  Val x250 = ((((((x249 + (x234 * Val(8192))) + (x235 * Val(16384))) + (x236 * Val(32768))) +
                (x237 * Val(65536))) +
               (x238 * Val(131072))) +
              (x239 * Val(262144)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:919)
  RetTupleStruct x251 = exec_RetTuple(
      ctx,
      Val22Array{x6,  x7,  x8,  x9,  x10, x11, x12, x13, x14, x15, x16,
                 x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27},
      Val22Array{x178, x179, x180, x181, x182, x183, x184, x185, x186, x187, x188,
                 x189, x190, x191, x192, x193, x194, x195, x196, x197, x198, x199},
      Val22Array{x200, x201, x202, x203, x204, x205, x206, x207, x208, x209, x210,
                 x211, x212, x213, x214, x215, x216, x217, x218, x219, x220, Val(0)},
      Val24Array{x221,
                 x222,
                 x223,
                 x224,
                 x225,
                 x226,
                 x227,
                 x228,
                 x229,
                 x230,
                 x231,
                 x232,
                 x233,
                 x234,
                 x235,
                 x236,
                 x237,
                 x238,
                 x239,
                 x240,
                 x241,
                 (((x244 + (x197 * Val(524288))) + (x198 * Val(1048576))) + (x199 * Val(2097152))),
                 ((x247 + (x219 * Val(524288))) + (x220 * Val(1048576))),
                 ((x250 + (x240 * Val(524288))) + (x241 * Val(1048576)))},
      Val22Array{x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45,
                 x46, x47, x48, x49, x50, x51, x52, x53, x54, x55, x56},
      Val22Array{x64, x65, x66, x67, x68, x69, x70, x71, x72, x73, x74,
                 x75, x76, x77, x78, x79, x80, x81, x82, x83, x84, x85},
      Val(5),
      Val(16),
      Val(0),
      arg0.blk._super,
      x98,
      LAYOUT_LOOKUP(layout1, _super));
  return x251;
}
RetTupleStruct execAbsorbWord_4__2_(ExecContext& ctx,
                                    RetTupleStruct arg0,
                                    BoundLayout<AbsorbWord_4__2_Layout> layout1) {
  // absorb_word(zirgen/circuit/keccak/keccak.zir:855)
  NondetRegStruct22Array x2 = arg0.arrB;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:862)
  Val x3 = x2[20]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:874)
  ToBits_22_Struct x4 = exec_ToBits_22_(ctx, x3, LAYOUT_LOOKUP(layout1, unpackA));
  NondetRegStruct22Array x5 = x4._super;
  Val x6 = x5[0]._super;
  Val x7 = x5[1]._super;
  Val x8 = x5[2]._super;
  Val x9 = x5[3]._super;
  Val x10 = x5[4]._super;
  Val x11 = x5[5]._super;
  Val x12 = x5[6]._super;
  Val x13 = x5[7]._super;
  Val x14 = x5[8]._super;
  Val x15 = x5[9]._super;
  Val x16 = x5[10]._super;
  Val x17 = x5[11]._super;
  Val x18 = x5[12]._super;
  Val x19 = x5[13]._super;
  Val x20 = x5[14]._super;
  Val x21 = x5[15]._super;
  Val x22 = x5[16]._super;
  Val x23 = x5[17]._super;
  Val x24 = x5[18]._super;
  Val x25 = x5[19]._super;
  Val x26 = x5[20]._super;
  Val x27 = x5[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:875)
  Val x28 = (x7 * Val(2));
  Val x29 =
      ((((((x6 + x28) + (x8 * Val(4))) + (x9 * Val(8))) + (x10 * Val(16))) + (x11 * Val(32))) +
       (x12 * Val(64)));
  Val x30 =
      ((((((x29 + (x13 * Val(128))) + (x14 * Val(256))) + (x15 * Val(512))) + (x16 * Val(1024))) +
        (x17 * Val(2048))) +
       (x18 * Val(4096)));
  Val x31 = ((((((x30 + (x19 * Val(8192))) + (x20 * Val(16384))) + (x21 * Val(32768))) +
               (x22 * Val(65536))) +
              (x23 * Val(131072))) +
             (x24 * Val(262144)));
  EQZ(((((x31 + (x25 * Val(524288))) + (x26 * Val(1048576))) + (x27 * Val(2097152))) - x3),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:875)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:866)
  Val x32 = x2[21]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:876)
  ToBits_22_Struct x33 = exec_ToBits_22_(ctx, x32, LAYOUT_LOOKUP(layout1, unpackE));
  NondetRegStruct22Array x34 = x33._super;
  Val x35 = x34[0]._super;
  Val x36 = x34[1]._super;
  Val x37 = x34[2]._super;
  Val x38 = x34[3]._super;
  Val x39 = x34[4]._super;
  Val x40 = x34[5]._super;
  Val x41 = x34[6]._super;
  Val x42 = x34[7]._super;
  Val x43 = x34[8]._super;
  Val x44 = x34[9]._super;
  Val x45 = x34[10]._super;
  Val x46 = x34[11]._super;
  Val x47 = x34[12]._super;
  Val x48 = x34[13]._super;
  Val x49 = x34[14]._super;
  Val x50 = x34[15]._super;
  Val x51 = x34[16]._super;
  Val x52 = x34[17]._super;
  Val x53 = x34[18]._super;
  Val x54 = x34[19]._super;
  Val x55 = x34[20]._super;
  Val x56 = x34[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:877)
  Val x57 = (x36 * Val(2));
  Val x58 =
      ((((((x35 + x57) + (x37 * Val(4))) + (x38 * Val(8))) + (x39 * Val(16))) + (x40 * Val(32))) +
       (x41 * Val(64)));
  Val x59 =
      ((((((x58 + (x42 * Val(128))) + (x43 * Val(256))) + (x44 * Val(512))) + (x45 * Val(1024))) +
        (x46 * Val(2048))) +
       (x47 * Val(4096)));
  Val x60 = ((((((x59 + (x48 * Val(8192))) + (x49 * Val(16384))) + (x50 * Val(32768))) +
               (x51 * Val(65536))) +
              (x52 * Val(131072))) +
             (x53 * Val(262144)));
  EQZ(((((x60 + (x54 * Val(524288))) + (x55 * Val(1048576))) + (x56 * Val(2097152))) - x32),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:877)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:870)
  Val x61 = arg0.arrC[0]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:878)
  ToBits_22_Struct x62 = exec_ToBits_22_(ctx, x61, LAYOUT_LOOKUP(layout1, unpackF));
  NondetRegStruct22Array x63 = x62._super;
  Val x64 = x63[0]._super;
  Val x65 = x63[1]._super;
  Val x66 = x63[2]._super;
  Val x67 = x63[3]._super;
  Val x68 = x63[4]._super;
  Val x69 = x63[5]._super;
  Val x70 = x63[6]._super;
  Val x71 = x63[7]._super;
  Val x72 = x63[8]._super;
  Val x73 = x63[9]._super;
  Val x74 = x63[10]._super;
  Val x75 = x63[11]._super;
  Val x76 = x63[12]._super;
  Val x77 = x63[13]._super;
  Val x78 = x63[14]._super;
  Val x79 = x63[15]._super;
  Val x80 = x63[16]._super;
  Val x81 = x63[17]._super;
  Val x82 = x63[18]._super;
  Val x83 = x63[19]._super;
  Val x84 = x63[20]._super;
  Val x85 = x63[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:879)
  Val x86 = (x65 * Val(2));
  Val x87 =
      ((((((x64 + x86) + (x66 * Val(4))) + (x67 * Val(8))) + (x68 * Val(16))) + (x69 * Val(32))) +
       (x70 * Val(64)));
  Val x88 =
      ((((((x87 + (x71 * Val(128))) + (x72 * Val(256))) + (x73 * Val(512))) + (x74 * Val(1024))) +
        (x75 * Val(2048))) +
       (x76 * Val(4096)));
  Val x89 = ((((((x88 + (x77 * Val(8192))) + (x78 * Val(16384))) + (x79 * Val(32768))) +
               (x80 * Val(65536))) +
              (x81 * Val(131072))) +
             (x82 * Val(262144)));
  EQZ(((((x89 + (x83 * Val(524288))) + (x84 * Val(1048576))) + (x85 * Val(2097152))) - x61),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:879)");
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:881)
  Val x90 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:882)
  ToBits_16_Struct x91 = exec_ToBits_16_(ctx, x90, LAYOUT_LOOKUP(layout1, unpack_1));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:883)
  Val x92 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:884)
  ToBits_16_Struct x93 = exec_ToBits_16_(ctx, x92, LAYOUT_LOOKUP(layout1, unpack_2));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:885)
  Val x94 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:886)
  ToBits_16_Struct x95 = exec_ToBits_16_(ctx, x94, LAYOUT_LOOKUP(layout1, unpack_3));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:887)
  Val x96 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:888)
  ToBits_16_Struct x97 = exec_ToBits_16_(ctx, x96, LAYOUT_LOOKUP(layout1, unpack_4));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:855)
  Val x98 = arg0.midx._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:889)
  Val x99 = (((x98 + Val(1)) + Val(4)) + Val(10));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:890)
  NondetRegStruct x100 = exec_NondetReg(ctx, inv(x99), LAYOUT_LOOKUP(layout1, invmidx));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:891)
  EQZ(((x100._super * x99) - Val(1)), "absorb_word(zirgen/circuit/keccak/keccak.zir:891)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:882)
  NondetRegStruct16Array x101 = x91._super;
  Val x102 = x101[0]._super;
  Val x103 = x101[1]._super;
  Val x104 = x101[2]._super;
  Val x105 = x101[3]._super;
  Val x106 = x101[4]._super;
  Val x107 = x101[5]._super;
  Val x108 = x101[6]._super;
  Val x109 = x101[7]._super;
  Val x110 = x101[8]._super;
  Val x111 = x101[9]._super;
  Val x112 = x101[10]._super;
  Val x113 = x101[11]._super;
  Val x114 = x101[12]._super;
  Val x115 = x101[13]._super;
  Val x116 = x101[14]._super;
  Val x117 = x101[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x118 =
      ((((((x102 + (x103 * Val(2))) + (x104 * Val(4))) + (x105 * Val(8))) + (x106 * Val(16))) +
        (x107 * Val(32))) +
       (x108 * Val(64)));
  Val x119 = ((((((x118 + (x109 * Val(128))) + (x110 * Val(256))) + (x111 * Val(512))) +
                (x112 * Val(1024))) +
               (x113 * Val(2048))) +
              (x114 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:884)
  NondetRegStruct16Array x120 = x93._super;
  Val x121 = x120[0]._super;
  Val x122 = x120[1]._super;
  Val x123 = x120[2]._super;
  Val x124 = x120[3]._super;
  Val x125 = x120[4]._super;
  Val x126 = x120[5]._super;
  Val x127 = x120[6]._super;
  Val x128 = x120[7]._super;
  Val x129 = x120[8]._super;
  Val x130 = x120[9]._super;
  Val x131 = x120[10]._super;
  Val x132 = x120[11]._super;
  Val x133 = x120[12]._super;
  Val x134 = x120[13]._super;
  Val x135 = x120[14]._super;
  Val x136 = x120[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x137 =
      ((((((x121 + (x122 * Val(2))) + (x123 * Val(4))) + (x124 * Val(8))) + (x125 * Val(16))) +
        (x126 * Val(32))) +
       (x127 * Val(64)));
  Val x138 = ((((((x137 + (x128 * Val(128))) + (x129 * Val(256))) + (x130 * Val(512))) +
                (x131 * Val(1024))) +
               (x132 * Val(2048))) +
              (x133 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:886)
  NondetRegStruct16Array x139 = x95._super;
  Val x140 = x139[0]._super;
  Val x141 = x139[1]._super;
  Val x142 = x139[2]._super;
  Val x143 = x139[3]._super;
  Val x144 = x139[4]._super;
  Val x145 = x139[5]._super;
  Val x146 = x139[6]._super;
  Val x147 = x139[7]._super;
  Val x148 = x139[8]._super;
  Val x149 = x139[9]._super;
  Val x150 = x139[10]._super;
  Val x151 = x139[11]._super;
  Val x152 = x139[12]._super;
  Val x153 = x139[13]._super;
  Val x154 = x139[14]._super;
  Val x155 = x139[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x156 =
      ((((((x140 + (x141 * Val(2))) + (x142 * Val(4))) + (x143 * Val(8))) + (x144 * Val(16))) +
        (x145 * Val(32))) +
       (x146 * Val(64)));
  Val x157 = ((((((x156 + (x147 * Val(128))) + (x148 * Val(256))) + (x149 * Val(512))) +
                (x150 * Val(1024))) +
               (x151 * Val(2048))) +
              (x152 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:888)
  NondetRegStruct16Array x158 = x97._super;
  Val x159 = x158[0]._super;
  Val x160 = x158[1]._super;
  Val x161 = x158[2]._super;
  Val x162 = x158[3]._super;
  Val x163 = x158[4]._super;
  Val x164 = x158[5]._super;
  Val x165 = x158[6]._super;
  Val x166 = x158[7]._super;
  Val x167 = x158[8]._super;
  Val x168 = x158[9]._super;
  Val x169 = x158[10]._super;
  Val x170 = x158[11]._super;
  Val x171 = x158[12]._super;
  Val x172 = x158[13]._super;
  Val x173 = x158[14]._super;
  Val x174 = x158[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x175 =
      ((((((x159 + (x160 * Val(2))) + (x161 * Val(4))) + (x162 * Val(8))) + (x163 * Val(16))) +
        (x164 * Val(32))) +
       (x165 * Val(64)));
  Val x176 = ((((((x175 + (x166 * Val(128))) + (x167 * Val(256))) + (x168 * Val(512))) +
                (x169 * Val(1024))) +
               (x170 * Val(2048))) +
              (x171 * Val(4096)));
  WriteMemoryStruct x177 = exec_WriteMemory(
      ctx,
      x99,
      MemDigestStruct{
          ._super =
              Val4Array{
                  (((x119 + (x115 * Val(8192))) + (x116 * Val(16384))) + (x117 * Val(32768))),
                  (((x138 + (x134 * Val(8192))) + (x135 * Val(16384))) + (x136 * Val(32768))),
                  (((x157 + (x153 * Val(8192))) + (x154 * Val(16384))) + (x155 * Val(32768))),
                  (((x176 + (x172 * Val(8192))) + (x173 * Val(16384))) + (x174 * Val(32768)))}},
      LAYOUT_LOOKUP(layout1, _0));
  // xor2(zirgen/circuit/keccak/keccak.zir:114)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:897)
  Val x178 = ((x6 + x102) - ((x6 * Val(2)) * x102));
  Val x179 = ((x7 + x103) - (x28 * x103));
  Val x180 = ((x8 + x104) - ((x8 * Val(2)) * x104));
  Val x181 = ((x9 + x105) - ((x9 * Val(2)) * x105));
  Val x182 = ((x10 + x106) - ((x10 * Val(2)) * x106));
  Val x183 = ((x11 + x107) - ((x11 * Val(2)) * x107));
  Val x184 = ((x12 + x108) - ((x12 * Val(2)) * x108));
  Val x185 = ((x13 + x109) - ((x13 * Val(2)) * x109));
  Val x186 = ((x14 + x110) - ((x14 * Val(2)) * x110));
  Val x187 = ((x15 + x111) - ((x15 * Val(2)) * x111));
  Val x188 = ((x16 + x112) - ((x16 * Val(2)) * x112));
  Val x189 = ((x17 + x113) - ((x17 * Val(2)) * x113));
  Val x190 = ((x18 + x114) - ((x18 * Val(2)) * x114));
  Val x191 = ((x19 + x115) - ((x19 * Val(2)) * x115));
  Val x192 = ((x20 + x116) - ((x20 * Val(2)) * x116));
  Val x193 = ((x21 + x117) - ((x21 * Val(2)) * x117));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:898)
  Val x194 = ((x22 + x121) - ((x22 * Val(2)) * x121));
  Val x195 = ((x23 + x122) - ((x23 * Val(2)) * x122));
  Val x196 = ((x24 + x123) - ((x24 * Val(2)) * x123));
  Val x197 = ((x25 + x124) - ((x25 * Val(2)) * x124));
  Val x198 = ((x26 + x125) - ((x26 * Val(2)) * x125));
  Val x199 = ((x27 + x126) - ((x27 * Val(2)) * x126));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:902)
  Val x200 = ((x35 + x127) - ((x35 * Val(2)) * x127));
  Val x201 = ((x36 + x128) - (x57 * x128));
  Val x202 = ((x37 + x129) - ((x37 * Val(2)) * x129));
  Val x203 = ((x38 + x130) - ((x38 * Val(2)) * x130));
  Val x204 = ((x39 + x131) - ((x39 * Val(2)) * x131));
  Val x205 = ((x40 + x132) - ((x40 * Val(2)) * x132));
  Val x206 = ((x41 + x133) - ((x41 * Val(2)) * x133));
  Val x207 = ((x42 + x134) - ((x42 * Val(2)) * x134));
  Val x208 = ((x43 + x135) - ((x43 * Val(2)) * x135));
  Val x209 = ((x44 + x136) - ((x44 * Val(2)) * x136));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:903)
  Val x210 = ((x45 + x140) - ((x45 * Val(2)) * x140));
  Val x211 = ((x46 + x141) - ((x46 * Val(2)) * x141));
  Val x212 = ((x47 + x142) - ((x47 * Val(2)) * x142));
  Val x213 = ((x48 + x143) - ((x48 * Val(2)) * x143));
  Val x214 = ((x49 + x144) - ((x49 * Val(2)) * x144));
  Val x215 = ((x50 + x145) - ((x50 * Val(2)) * x145));
  Val x216 = ((x51 + x146) - ((x51 * Val(2)) * x146));
  Val x217 = ((x52 + x147) - ((x52 * Val(2)) * x147));
  Val x218 = ((x53 + x148) - ((x53 * Val(2)) * x148));
  Val x219 = ((x54 + x149) - ((x54 * Val(2)) * x149));
  Val x220 = ((x55 + x150) - ((x55 * Val(2)) * x150));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:907)
  Val x221 = ((x64 + x151) - ((x64 * Val(2)) * x151));
  Val x222 = ((x65 + x152) - (x86 * x152));
  Val x223 = ((x66 + x153) - ((x66 * Val(2)) * x153));
  Val x224 = ((x67 + x154) - ((x67 * Val(2)) * x154));
  Val x225 = ((x68 + x155) - ((x68 * Val(2)) * x155));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:908)
  Val x226 = ((x69 + x159) - ((x69 * Val(2)) * x159));
  Val x227 = ((x70 + x160) - ((x70 * Val(2)) * x160));
  Val x228 = ((x71 + x161) - ((x71 * Val(2)) * x161));
  Val x229 = ((x72 + x162) - ((x72 * Val(2)) * x162));
  Val x230 = ((x73 + x163) - ((x73 * Val(2)) * x163));
  Val x231 = ((x74 + x164) - ((x74 * Val(2)) * x164));
  Val x232 = ((x75 + x165) - ((x75 * Val(2)) * x165));
  Val x233 = ((x76 + x166) - ((x76 * Val(2)) * x166));
  Val x234 = ((x77 + x167) - ((x77 * Val(2)) * x167));
  Val x235 = ((x78 + x168) - ((x78 * Val(2)) * x168));
  Val x236 = ((x79 + x169) - ((x79 * Val(2)) * x169));
  Val x237 = ((x80 + x170) - ((x80 * Val(2)) * x170));
  Val x238 = ((x81 + x171) - ((x81 * Val(2)) * x171));
  Val x239 = ((x82 + x172) - ((x82 * Val(2)) * x172));
  Val x240 = ((x83 + x173) - ((x83 * Val(2)) * x173));
  Val x241 = ((x84 + x174) - ((x84 * Val(2)) * x174));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:911)
  Val x242 =
      ((((((x178 + (x179 * Val(2))) + (x180 * Val(4))) + (x181 * Val(8))) + (x182 * Val(16))) +
        (x183 * Val(32))) +
       (x184 * Val(64)));
  Val x243 = ((((((x242 + (x185 * Val(128))) + (x186 * Val(256))) + (x187 * Val(512))) +
                (x188 * Val(1024))) +
               (x189 * Val(2048))) +
              (x190 * Val(4096)));
  Val x244 = ((((((x243 + (x191 * Val(8192))) + (x192 * Val(16384))) + (x193 * Val(32768))) +
                (x194 * Val(65536))) +
               (x195 * Val(131072))) +
              (x196 * Val(262144)));
  Val x245 =
      ((((((x200 + (x201 * Val(2))) + (x202 * Val(4))) + (x203 * Val(8))) + (x204 * Val(16))) +
        (x205 * Val(32))) +
       (x206 * Val(64)));
  Val x246 = ((((((x245 + (x207 * Val(128))) + (x208 * Val(256))) + (x209 * Val(512))) +
                (x210 * Val(1024))) +
               (x211 * Val(2048))) +
              (x212 * Val(4096)));
  Val x247 = ((((((x246 + (x213 * Val(8192))) + (x214 * Val(16384))) + (x215 * Val(32768))) +
                (x216 * Val(65536))) +
               (x217 * Val(131072))) +
              (x218 * Val(262144)));
  Val x248 =
      ((((((x221 + (x222 * Val(2))) + (x223 * Val(4))) + (x224 * Val(8))) + (x225 * Val(16))) +
        (x226 * Val(32))) +
       (x227 * Val(64)));
  Val x249 = ((((((x248 + (x228 * Val(128))) + (x229 * Val(256))) + (x230 * Val(512))) +
                (x231 * Val(1024))) +
               (x232 * Val(2048))) +
              (x233 * Val(4096)));
  Val x250 = ((((((x249 + (x234 * Val(8192))) + (x235 * Val(16384))) + (x236 * Val(32768))) +
                (x237 * Val(65536))) +
               (x238 * Val(131072))) +
              (x239 * Val(262144)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:919)
  RetTupleStruct x251 = exec_RetTuple(
      ctx,
      Val22Array{x6,  x7,  x8,  x9,  x10, x11, x12, x13, x14, x15, x16,
                 x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27},
      Val22Array{x178, x179, x180, x181, x182, x183, x184, x185, x186, x187, x188,
                 x189, x190, x191, x192, x193, x194, x195, x196, x197, x198, x199},
      Val22Array{x200, x201, x202, x203, x204, x205, x206, x207, x208, x209, x210,
                 x211, x212, x213, x214, x215, x216, x217, x218, x219, x220, Val(0)},
      Val24Array{x221,
                 x222,
                 x223,
                 x224,
                 x225,
                 x226,
                 x227,
                 x228,
                 x229,
                 x230,
                 x231,
                 x232,
                 x233,
                 x234,
                 x235,
                 x236,
                 x237,
                 x238,
                 x239,
                 x240,
                 x241,
                 (((x244 + (x197 * Val(524288))) + (x198 * Val(1048576))) + (x199 * Val(2097152))),
                 ((x247 + (x219 * Val(524288))) + (x220 * Val(1048576))),
                 ((x250 + (x240 * Val(524288))) + (x241 * Val(1048576)))},
      Val22Array{x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45,
                 x46, x47, x48, x49, x50, x51, x52, x53, x54, x55, x56},
      Val22Array{x64, x65, x66, x67, x68, x69, x70, x71, x72, x73, x74,
                 x75, x76, x77, x78, x79, x80, x81, x82, x83, x84, x85},
      Val(6),
      Val(16),
      Val(0),
      arg0.blk._super,
      x98,
      LAYOUT_LOOKUP(layout1, _super));
  return x251;
}
RetTupleStruct execAbsorbWord_0__3_(ExecContext& ctx,
                                    RetTupleStruct arg0,
                                    BoundLayout<AbsorbWord_0__3_Layout> layout1) {
  // absorb_word(zirgen/circuit/keccak/keccak.zir:855)
  NondetRegStruct22Array x2 = arg0.arrC;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:862)
  Val x3 = x2[1]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:874)
  ToBits_22_Struct x4 = exec_ToBits_22_(ctx, x3, LAYOUT_LOOKUP(layout1, unpackA));
  NondetRegStruct22Array x5 = x4._super;
  Val x6 = x5[0]._super;
  Val x7 = x5[1]._super;
  Val x8 = x5[2]._super;
  Val x9 = x5[3]._super;
  Val x10 = x5[4]._super;
  Val x11 = x5[5]._super;
  Val x12 = x5[6]._super;
  Val x13 = x5[7]._super;
  Val x14 = x5[8]._super;
  Val x15 = x5[9]._super;
  Val x16 = x5[10]._super;
  Val x17 = x5[11]._super;
  Val x18 = x5[12]._super;
  Val x19 = x5[13]._super;
  Val x20 = x5[14]._super;
  Val x21 = x5[15]._super;
  Val x22 = x5[16]._super;
  Val x23 = x5[17]._super;
  Val x24 = x5[18]._super;
  Val x25 = x5[19]._super;
  Val x26 = x5[20]._super;
  Val x27 = x5[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:875)
  Val x28 = (x7 * Val(2));
  Val x29 =
      ((((((x6 + x28) + (x8 * Val(4))) + (x9 * Val(8))) + (x10 * Val(16))) + (x11 * Val(32))) +
       (x12 * Val(64)));
  Val x30 =
      ((((((x29 + (x13 * Val(128))) + (x14 * Val(256))) + (x15 * Val(512))) + (x16 * Val(1024))) +
        (x17 * Val(2048))) +
       (x18 * Val(4096)));
  Val x31 = ((((((x30 + (x19 * Val(8192))) + (x20 * Val(16384))) + (x21 * Val(32768))) +
               (x22 * Val(65536))) +
              (x23 * Val(131072))) +
             (x24 * Val(262144)));
  EQZ(((((x31 + (x25 * Val(524288))) + (x26 * Val(1048576))) + (x27 * Val(2097152))) - x3),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:875)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:866)
  Val x32 = x2[2]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:876)
  ToBits_22_Struct x33 = exec_ToBits_22_(ctx, x32, LAYOUT_LOOKUP(layout1, unpackE));
  NondetRegStruct22Array x34 = x33._super;
  Val x35 = x34[0]._super;
  Val x36 = x34[1]._super;
  Val x37 = x34[2]._super;
  Val x38 = x34[3]._super;
  Val x39 = x34[4]._super;
  Val x40 = x34[5]._super;
  Val x41 = x34[6]._super;
  Val x42 = x34[7]._super;
  Val x43 = x34[8]._super;
  Val x44 = x34[9]._super;
  Val x45 = x34[10]._super;
  Val x46 = x34[11]._super;
  Val x47 = x34[12]._super;
  Val x48 = x34[13]._super;
  Val x49 = x34[14]._super;
  Val x50 = x34[15]._super;
  Val x51 = x34[16]._super;
  Val x52 = x34[17]._super;
  Val x53 = x34[18]._super;
  Val x54 = x34[19]._super;
  Val x55 = x34[20]._super;
  Val x56 = x34[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:877)
  Val x57 = (x36 * Val(2));
  Val x58 =
      ((((((x35 + x57) + (x37 * Val(4))) + (x38 * Val(8))) + (x39 * Val(16))) + (x40 * Val(32))) +
       (x41 * Val(64)));
  Val x59 =
      ((((((x58 + (x42 * Val(128))) + (x43 * Val(256))) + (x44 * Val(512))) + (x45 * Val(1024))) +
        (x46 * Val(2048))) +
       (x47 * Val(4096)));
  Val x60 = ((((((x59 + (x48 * Val(8192))) + (x49 * Val(16384))) + (x50 * Val(32768))) +
               (x51 * Val(65536))) +
              (x52 * Val(131072))) +
             (x53 * Val(262144)));
  EQZ(((((x60 + (x54 * Val(524288))) + (x55 * Val(1048576))) + (x56 * Val(2097152))) - x32),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:877)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:870)
  Val x61 = x2[3]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:878)
  ToBits_22_Struct x62 = exec_ToBits_22_(ctx, x61, LAYOUT_LOOKUP(layout1, unpackF));
  NondetRegStruct22Array x63 = x62._super;
  Val x64 = x63[0]._super;
  Val x65 = x63[1]._super;
  Val x66 = x63[2]._super;
  Val x67 = x63[3]._super;
  Val x68 = x63[4]._super;
  Val x69 = x63[5]._super;
  Val x70 = x63[6]._super;
  Val x71 = x63[7]._super;
  Val x72 = x63[8]._super;
  Val x73 = x63[9]._super;
  Val x74 = x63[10]._super;
  Val x75 = x63[11]._super;
  Val x76 = x63[12]._super;
  Val x77 = x63[13]._super;
  Val x78 = x63[14]._super;
  Val x79 = x63[15]._super;
  Val x80 = x63[16]._super;
  Val x81 = x63[17]._super;
  Val x82 = x63[18]._super;
  Val x83 = x63[19]._super;
  Val x84 = x63[20]._super;
  Val x85 = x63[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:879)
  Val x86 = (x65 * Val(2));
  Val x87 =
      ((((((x64 + x86) + (x66 * Val(4))) + (x67 * Val(8))) + (x68 * Val(16))) + (x69 * Val(32))) +
       (x70 * Val(64)));
  Val x88 =
      ((((((x87 + (x71 * Val(128))) + (x72 * Val(256))) + (x73 * Val(512))) + (x74 * Val(1024))) +
        (x75 * Val(2048))) +
       (x76 * Val(4096)));
  Val x89 = ((((((x88 + (x77 * Val(8192))) + (x78 * Val(16384))) + (x79 * Val(32768))) +
               (x80 * Val(65536))) +
              (x81 * Val(131072))) +
             (x82 * Val(262144)));
  EQZ(((((x89 + (x83 * Val(524288))) + (x84 * Val(1048576))) + (x85 * Val(2097152))) - x61),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:879)");
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:881)
  Val x90 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:882)
  ToBits_16_Struct x91 = exec_ToBits_16_(ctx, x90, LAYOUT_LOOKUP(layout1, unpack_1));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:883)
  Val x92 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:884)
  ToBits_16_Struct x93 = exec_ToBits_16_(ctx, x92, LAYOUT_LOOKUP(layout1, unpack_2));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:885)
  Val x94 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:886)
  ToBits_16_Struct x95 = exec_ToBits_16_(ctx, x94, LAYOUT_LOOKUP(layout1, unpack_3));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:887)
  Val x96 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:888)
  ToBits_16_Struct x97 = exec_ToBits_16_(ctx, x96, LAYOUT_LOOKUP(layout1, unpack_4));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:855)
  Val x98 = arg0.midx._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:889)
  Val x99 = ((x98 + Val(1)) + Val(15));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:890)
  NondetRegStruct x100 = exec_NondetReg(ctx, inv(x99), LAYOUT_LOOKUP(layout1, invmidx));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:891)
  EQZ(((x100._super * x99) - Val(1)), "absorb_word(zirgen/circuit/keccak/keccak.zir:891)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:882)
  NondetRegStruct16Array x101 = x91._super;
  Val x102 = x101[0]._super;
  Val x103 = x101[1]._super;
  Val x104 = x101[2]._super;
  Val x105 = x101[3]._super;
  Val x106 = x101[4]._super;
  Val x107 = x101[5]._super;
  Val x108 = x101[6]._super;
  Val x109 = x101[7]._super;
  Val x110 = x101[8]._super;
  Val x111 = x101[9]._super;
  Val x112 = x101[10]._super;
  Val x113 = x101[11]._super;
  Val x114 = x101[12]._super;
  Val x115 = x101[13]._super;
  Val x116 = x101[14]._super;
  Val x117 = x101[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x118 =
      ((((((x102 + (x103 * Val(2))) + (x104 * Val(4))) + (x105 * Val(8))) + (x106 * Val(16))) +
        (x107 * Val(32))) +
       (x108 * Val(64)));
  Val x119 = ((((((x118 + (x109 * Val(128))) + (x110 * Val(256))) + (x111 * Val(512))) +
                (x112 * Val(1024))) +
               (x113 * Val(2048))) +
              (x114 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:884)
  NondetRegStruct16Array x120 = x93._super;
  Val x121 = x120[0]._super;
  Val x122 = x120[1]._super;
  Val x123 = x120[2]._super;
  Val x124 = x120[3]._super;
  Val x125 = x120[4]._super;
  Val x126 = x120[5]._super;
  Val x127 = x120[6]._super;
  Val x128 = x120[7]._super;
  Val x129 = x120[8]._super;
  Val x130 = x120[9]._super;
  Val x131 = x120[10]._super;
  Val x132 = x120[11]._super;
  Val x133 = x120[12]._super;
  Val x134 = x120[13]._super;
  Val x135 = x120[14]._super;
  Val x136 = x120[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x137 =
      ((((((x121 + (x122 * Val(2))) + (x123 * Val(4))) + (x124 * Val(8))) + (x125 * Val(16))) +
        (x126 * Val(32))) +
       (x127 * Val(64)));
  Val x138 = ((((((x137 + (x128 * Val(128))) + (x129 * Val(256))) + (x130 * Val(512))) +
                (x131 * Val(1024))) +
               (x132 * Val(2048))) +
              (x133 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:886)
  NondetRegStruct16Array x139 = x95._super;
  Val x140 = x139[0]._super;
  Val x141 = x139[1]._super;
  Val x142 = x139[2]._super;
  Val x143 = x139[3]._super;
  Val x144 = x139[4]._super;
  Val x145 = x139[5]._super;
  Val x146 = x139[6]._super;
  Val x147 = x139[7]._super;
  Val x148 = x139[8]._super;
  Val x149 = x139[9]._super;
  Val x150 = x139[10]._super;
  Val x151 = x139[11]._super;
  Val x152 = x139[12]._super;
  Val x153 = x139[13]._super;
  Val x154 = x139[14]._super;
  Val x155 = x139[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x156 =
      ((((((x140 + (x141 * Val(2))) + (x142 * Val(4))) + (x143 * Val(8))) + (x144 * Val(16))) +
        (x145 * Val(32))) +
       (x146 * Val(64)));
  Val x157 = ((((((x156 + (x147 * Val(128))) + (x148 * Val(256))) + (x149 * Val(512))) +
                (x150 * Val(1024))) +
               (x151 * Val(2048))) +
              (x152 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:888)
  NondetRegStruct16Array x158 = x97._super;
  Val x159 = x158[0]._super;
  Val x160 = x158[1]._super;
  Val x161 = x158[2]._super;
  Val x162 = x158[3]._super;
  Val x163 = x158[4]._super;
  Val x164 = x158[5]._super;
  Val x165 = x158[6]._super;
  Val x166 = x158[7]._super;
  Val x167 = x158[8]._super;
  Val x168 = x158[9]._super;
  Val x169 = x158[10]._super;
  Val x170 = x158[11]._super;
  Val x171 = x158[12]._super;
  Val x172 = x158[13]._super;
  Val x173 = x158[14]._super;
  Val x174 = x158[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x175 =
      ((((((x159 + (x160 * Val(2))) + (x161 * Val(4))) + (x162 * Val(8))) + (x163 * Val(16))) +
        (x164 * Val(32))) +
       (x165 * Val(64)));
  Val x176 = ((((((x175 + (x166 * Val(128))) + (x167 * Val(256))) + (x168 * Val(512))) +
                (x169 * Val(1024))) +
               (x170 * Val(2048))) +
              (x171 * Val(4096)));
  WriteMemoryStruct x177 = exec_WriteMemory(
      ctx,
      x99,
      MemDigestStruct{
          ._super =
              Val4Array{
                  (((x119 + (x115 * Val(8192))) + (x116 * Val(16384))) + (x117 * Val(32768))),
                  (((x138 + (x134 * Val(8192))) + (x135 * Val(16384))) + (x136 * Val(32768))),
                  (((x157 + (x153 * Val(8192))) + (x154 * Val(16384))) + (x155 * Val(32768))),
                  (((x176 + (x172 * Val(8192))) + (x173 * Val(16384))) + (x174 * Val(32768)))}},
      LAYOUT_LOOKUP(layout1, _0));
  // xor2(zirgen/circuit/keccak/keccak.zir:114)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:897)
  Val x178 = ((x6 + x102) - ((x6 * Val(2)) * x102));
  Val x179 = ((x7 + x103) - (x28 * x103));
  Val x180 = ((x8 + x104) - ((x8 * Val(2)) * x104));
  Val x181 = ((x9 + x105) - ((x9 * Val(2)) * x105));
  Val x182 = ((x10 + x106) - ((x10 * Val(2)) * x106));
  Val x183 = ((x11 + x107) - ((x11 * Val(2)) * x107));
  Val x184 = ((x12 + x108) - ((x12 * Val(2)) * x108));
  Val x185 = ((x13 + x109) - ((x13 * Val(2)) * x109));
  Val x186 = ((x14 + x110) - ((x14 * Val(2)) * x110));
  Val x187 = ((x15 + x111) - ((x15 * Val(2)) * x111));
  Val x188 = ((x16 + x112) - ((x16 * Val(2)) * x112));
  Val x189 = ((x17 + x113) - ((x17 * Val(2)) * x113));
  Val x190 = ((x18 + x114) - ((x18 * Val(2)) * x114));
  Val x191 = ((x19 + x115) - ((x19 * Val(2)) * x115));
  Val x192 = ((x20 + x116) - ((x20 * Val(2)) * x116));
  Val x193 = ((x21 + x117) - ((x21 * Val(2)) * x117));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:898)
  Val x194 = ((x22 + x121) - ((x22 * Val(2)) * x121));
  Val x195 = ((x23 + x122) - ((x23 * Val(2)) * x122));
  Val x196 = ((x24 + x123) - ((x24 * Val(2)) * x123));
  Val x197 = ((x25 + x124) - ((x25 * Val(2)) * x124));
  Val x198 = ((x26 + x125) - ((x26 * Val(2)) * x125));
  Val x199 = ((x27 + x126) - ((x27 * Val(2)) * x126));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:902)
  Val x200 = ((x35 + x127) - ((x35 * Val(2)) * x127));
  Val x201 = ((x36 + x128) - (x57 * x128));
  Val x202 = ((x37 + x129) - ((x37 * Val(2)) * x129));
  Val x203 = ((x38 + x130) - ((x38 * Val(2)) * x130));
  Val x204 = ((x39 + x131) - ((x39 * Val(2)) * x131));
  Val x205 = ((x40 + x132) - ((x40 * Val(2)) * x132));
  Val x206 = ((x41 + x133) - ((x41 * Val(2)) * x133));
  Val x207 = ((x42 + x134) - ((x42 * Val(2)) * x134));
  Val x208 = ((x43 + x135) - ((x43 * Val(2)) * x135));
  Val x209 = ((x44 + x136) - ((x44 * Val(2)) * x136));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:903)
  Val x210 = ((x45 + x140) - ((x45 * Val(2)) * x140));
  Val x211 = ((x46 + x141) - ((x46 * Val(2)) * x141));
  Val x212 = ((x47 + x142) - ((x47 * Val(2)) * x142));
  Val x213 = ((x48 + x143) - ((x48 * Val(2)) * x143));
  Val x214 = ((x49 + x144) - ((x49 * Val(2)) * x144));
  Val x215 = ((x50 + x145) - ((x50 * Val(2)) * x145));
  Val x216 = ((x51 + x146) - ((x51 * Val(2)) * x146));
  Val x217 = ((x52 + x147) - ((x52 * Val(2)) * x147));
  Val x218 = ((x53 + x148) - ((x53 * Val(2)) * x148));
  Val x219 = ((x54 + x149) - ((x54 * Val(2)) * x149));
  Val x220 = ((x55 + x150) - ((x55 * Val(2)) * x150));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:907)
  Val x221 = ((x64 + x151) - ((x64 * Val(2)) * x151));
  Val x222 = ((x65 + x152) - (x86 * x152));
  Val x223 = ((x66 + x153) - ((x66 * Val(2)) * x153));
  Val x224 = ((x67 + x154) - ((x67 * Val(2)) * x154));
  Val x225 = ((x68 + x155) - ((x68 * Val(2)) * x155));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:908)
  Val x226 = ((x69 + x159) - ((x69 * Val(2)) * x159));
  Val x227 = ((x70 + x160) - ((x70 * Val(2)) * x160));
  Val x228 = ((x71 + x161) - ((x71 * Val(2)) * x161));
  Val x229 = ((x72 + x162) - ((x72 * Val(2)) * x162));
  Val x230 = ((x73 + x163) - ((x73 * Val(2)) * x163));
  Val x231 = ((x74 + x164) - ((x74 * Val(2)) * x164));
  Val x232 = ((x75 + x165) - ((x75 * Val(2)) * x165));
  Val x233 = ((x76 + x166) - ((x76 * Val(2)) * x166));
  Val x234 = ((x77 + x167) - ((x77 * Val(2)) * x167));
  Val x235 = ((x78 + x168) - ((x78 * Val(2)) * x168));
  Val x236 = ((x79 + x169) - ((x79 * Val(2)) * x169));
  Val x237 = ((x80 + x170) - ((x80 * Val(2)) * x170));
  Val x238 = ((x81 + x171) - ((x81 * Val(2)) * x171));
  Val x239 = ((x82 + x172) - ((x82 * Val(2)) * x172));
  Val x240 = ((x83 + x173) - ((x83 * Val(2)) * x173));
  Val x241 = ((x84 + x174) - ((x84 * Val(2)) * x174));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:911)
  Val x242 =
      ((((((x178 + (x179 * Val(2))) + (x180 * Val(4))) + (x181 * Val(8))) + (x182 * Val(16))) +
        (x183 * Val(32))) +
       (x184 * Val(64)));
  Val x243 = ((((((x242 + (x185 * Val(128))) + (x186 * Val(256))) + (x187 * Val(512))) +
                (x188 * Val(1024))) +
               (x189 * Val(2048))) +
              (x190 * Val(4096)));
  Val x244 = ((((((x243 + (x191 * Val(8192))) + (x192 * Val(16384))) + (x193 * Val(32768))) +
                (x194 * Val(65536))) +
               (x195 * Val(131072))) +
              (x196 * Val(262144)));
  Val x245 =
      ((((((x200 + (x201 * Val(2))) + (x202 * Val(4))) + (x203 * Val(8))) + (x204 * Val(16))) +
        (x205 * Val(32))) +
       (x206 * Val(64)));
  Val x246 = ((((((x245 + (x207 * Val(128))) + (x208 * Val(256))) + (x209 * Val(512))) +
                (x210 * Val(1024))) +
               (x211 * Val(2048))) +
              (x212 * Val(4096)));
  Val x247 = ((((((x246 + (x213 * Val(8192))) + (x214 * Val(16384))) + (x215 * Val(32768))) +
                (x216 * Val(65536))) +
               (x217 * Val(131072))) +
              (x218 * Val(262144)));
  Val x248 =
      ((((((x221 + (x222 * Val(2))) + (x223 * Val(4))) + (x224 * Val(8))) + (x225 * Val(16))) +
        (x226 * Val(32))) +
       (x227 * Val(64)));
  Val x249 = ((((((x248 + (x228 * Val(128))) + (x229 * Val(256))) + (x230 * Val(512))) +
                (x231 * Val(1024))) +
               (x232 * Val(2048))) +
              (x233 * Val(4096)));
  Val x250 = ((((((x249 + (x234 * Val(8192))) + (x235 * Val(16384))) + (x236 * Val(32768))) +
                (x237 * Val(65536))) +
               (x238 * Val(131072))) +
              (x239 * Val(262144)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:919)
  RetTupleStruct x251 = exec_RetTuple(
      ctx,
      Val22Array{x6,  x7,  x8,  x9,  x10, x11, x12, x13, x14, x15, x16,
                 x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27},
      Val22Array{x178, x179, x180, x181, x182, x183, x184, x185, x186, x187, x188,
                 x189, x190, x191, x192, x193, x194, x195, x196, x197, x198, x199},
      Val22Array{x200, x201, x202, x203, x204, x205, x206, x207, x208, x209, x210,
                 x211, x212, x213, x214, x215, x216, x217, x218, x219, x220, Val(0)},
      Val24Array{x221,
                 x222,
                 x223,
                 x224,
                 x225,
                 x226,
                 x227,
                 x228,
                 x229,
                 x230,
                 x231,
                 x232,
                 x233,
                 x234,
                 x235,
                 x236,
                 x237,
                 x238,
                 x239,
                 x240,
                 x241,
                 (((x244 + (x197 * Val(524288))) + (x198 * Val(1048576))) + (x199 * Val(2097152))),
                 ((x247 + (x219 * Val(524288))) + (x220 * Val(1048576))),
                 ((x250 + (x240 * Val(524288))) + (x241 * Val(1048576)))},
      Val22Array{x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45,
                 x46, x47, x48, x49, x50, x51, x52, x53, x54, x55, x56},
      Val22Array{x64, x65, x66, x67, x68, x69, x70, x71, x72, x73, x74,
                 x75, x76, x77, x78, x79, x80, x81, x82, x83, x84, x85},
      Val(7),
      Val(16),
      Val(0),
      arg0.blk._super,
      x98,
      LAYOUT_LOOKUP(layout1, _super));
  return x251;
}
RetTupleStruct execAbsorbWord_1__3_(ExecContext& ctx,
                                    RetTupleStruct arg0,
                                    BoundLayout<AbsorbWord_1__3_Layout> layout1) {
  // absorb_word(zirgen/circuit/keccak/keccak.zir:855)
  NondetRegStruct22Array x2 = arg0.arrC;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:862)
  Val x3 = x2[4]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:874)
  ToBits_22_Struct x4 = exec_ToBits_22_(ctx, x3, LAYOUT_LOOKUP(layout1, unpackA));
  NondetRegStruct22Array x5 = x4._super;
  Val x6 = x5[0]._super;
  Val x7 = x5[1]._super;
  Val x8 = x5[2]._super;
  Val x9 = x5[3]._super;
  Val x10 = x5[4]._super;
  Val x11 = x5[5]._super;
  Val x12 = x5[6]._super;
  Val x13 = x5[7]._super;
  Val x14 = x5[8]._super;
  Val x15 = x5[9]._super;
  Val x16 = x5[10]._super;
  Val x17 = x5[11]._super;
  Val x18 = x5[12]._super;
  Val x19 = x5[13]._super;
  Val x20 = x5[14]._super;
  Val x21 = x5[15]._super;
  Val x22 = x5[16]._super;
  Val x23 = x5[17]._super;
  Val x24 = x5[18]._super;
  Val x25 = x5[19]._super;
  Val x26 = x5[20]._super;
  Val x27 = x5[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:875)
  Val x28 = (x7 * Val(2));
  Val x29 =
      ((((((x6 + x28) + (x8 * Val(4))) + (x9 * Val(8))) + (x10 * Val(16))) + (x11 * Val(32))) +
       (x12 * Val(64)));
  Val x30 =
      ((((((x29 + (x13 * Val(128))) + (x14 * Val(256))) + (x15 * Val(512))) + (x16 * Val(1024))) +
        (x17 * Val(2048))) +
       (x18 * Val(4096)));
  Val x31 = ((((((x30 + (x19 * Val(8192))) + (x20 * Val(16384))) + (x21 * Val(32768))) +
               (x22 * Val(65536))) +
              (x23 * Val(131072))) +
             (x24 * Val(262144)));
  EQZ(((((x31 + (x25 * Val(524288))) + (x26 * Val(1048576))) + (x27 * Val(2097152))) - x3),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:875)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:866)
  Val x32 = x2[5]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:876)
  ToBits_22_Struct x33 = exec_ToBits_22_(ctx, x32, LAYOUT_LOOKUP(layout1, unpackE));
  NondetRegStruct22Array x34 = x33._super;
  Val x35 = x34[0]._super;
  Val x36 = x34[1]._super;
  Val x37 = x34[2]._super;
  Val x38 = x34[3]._super;
  Val x39 = x34[4]._super;
  Val x40 = x34[5]._super;
  Val x41 = x34[6]._super;
  Val x42 = x34[7]._super;
  Val x43 = x34[8]._super;
  Val x44 = x34[9]._super;
  Val x45 = x34[10]._super;
  Val x46 = x34[11]._super;
  Val x47 = x34[12]._super;
  Val x48 = x34[13]._super;
  Val x49 = x34[14]._super;
  Val x50 = x34[15]._super;
  Val x51 = x34[16]._super;
  Val x52 = x34[17]._super;
  Val x53 = x34[18]._super;
  Val x54 = x34[19]._super;
  Val x55 = x34[20]._super;
  Val x56 = x34[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:877)
  Val x57 = (x36 * Val(2));
  Val x58 =
      ((((((x35 + x57) + (x37 * Val(4))) + (x38 * Val(8))) + (x39 * Val(16))) + (x40 * Val(32))) +
       (x41 * Val(64)));
  Val x59 =
      ((((((x58 + (x42 * Val(128))) + (x43 * Val(256))) + (x44 * Val(512))) + (x45 * Val(1024))) +
        (x46 * Val(2048))) +
       (x47 * Val(4096)));
  Val x60 = ((((((x59 + (x48 * Val(8192))) + (x49 * Val(16384))) + (x50 * Val(32768))) +
               (x51 * Val(65536))) +
              (x52 * Val(131072))) +
             (x53 * Val(262144)));
  EQZ(((((x60 + (x54 * Val(524288))) + (x55 * Val(1048576))) + (x56 * Val(2097152))) - x32),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:877)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:870)
  Val x61 = x2[6]._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:878)
  ToBits_22_Struct x62 = exec_ToBits_22_(ctx, x61, LAYOUT_LOOKUP(layout1, unpackF));
  NondetRegStruct22Array x63 = x62._super;
  Val x64 = x63[0]._super;
  Val x65 = x63[1]._super;
  Val x66 = x63[2]._super;
  Val x67 = x63[3]._super;
  Val x68 = x63[4]._super;
  Val x69 = x63[5]._super;
  Val x70 = x63[6]._super;
  Val x71 = x63[7]._super;
  Val x72 = x63[8]._super;
  Val x73 = x63[9]._super;
  Val x74 = x63[10]._super;
  Val x75 = x63[11]._super;
  Val x76 = x63[12]._super;
  Val x77 = x63[13]._super;
  Val x78 = x63[14]._super;
  Val x79 = x63[15]._super;
  Val x80 = x63[16]._super;
  Val x81 = x63[17]._super;
  Val x82 = x63[18]._super;
  Val x83 = x63[19]._super;
  Val x84 = x63[20]._super;
  Val x85 = x63[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:879)
  Val x86 = (x65 * Val(2));
  Val x87 =
      ((((((x64 + x86) + (x66 * Val(4))) + (x67 * Val(8))) + (x68 * Val(16))) + (x69 * Val(32))) +
       (x70 * Val(64)));
  Val x88 =
      ((((((x87 + (x71 * Val(128))) + (x72 * Val(256))) + (x73 * Val(512))) + (x74 * Val(1024))) +
        (x75 * Val(2048))) +
       (x76 * Val(4096)));
  Val x89 = ((((((x88 + (x77 * Val(8192))) + (x78 * Val(16384))) + (x79 * Val(32768))) +
               (x80 * Val(65536))) +
              (x81 * Val(131072))) +
             (x82 * Val(262144)));
  EQZ(((((x89 + (x83 * Val(524288))) + (x84 * Val(1048576))) + (x85 * Val(2097152))) - x61),
      "absorb_word(zirgen/circuit/keccak/keccak.zir:879)");
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:881)
  Val x90 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:882)
  ToBits_16_Struct x91 = exec_ToBits_16_(ctx, x90, LAYOUT_LOOKUP(layout1, unpack_1));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:883)
  Val x92 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:884)
  ToBits_16_Struct x93 = exec_ToBits_16_(ctx, x92, LAYOUT_LOOKUP(layout1, unpack_2));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:885)
  Val x94 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:886)
  ToBits_16_Struct x95 = exec_ToBits_16_(ctx, x94, LAYOUT_LOOKUP(layout1, unpack_3));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:887)
  Val x96 = INVOKE_EXTERN(ctx, readInput);
  // absorb_word(zirgen/circuit/keccak/keccak.zir:888)
  ToBits_16_Struct x97 = exec_ToBits_16_(ctx, x96, LAYOUT_LOOKUP(layout1, unpack_4));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:855)
  Val x98 = arg0.midx._super;
  // absorb_word(zirgen/circuit/keccak/keccak.zir:889)
  Val x99 = (((x98 + Val(1)) + Val(1)) + Val(15));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:890)
  NondetRegStruct x100 = exec_NondetReg(ctx, inv(x99), LAYOUT_LOOKUP(layout1, invmidx));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:891)
  EQZ(((x100._super * x99) - Val(1)), "absorb_word(zirgen/circuit/keccak/keccak.zir:891)");
  // absorb_word(zirgen/circuit/keccak/keccak.zir:882)
  NondetRegStruct16Array x101 = x91._super;
  Val x102 = x101[0]._super;
  Val x103 = x101[1]._super;
  Val x104 = x101[2]._super;
  Val x105 = x101[3]._super;
  Val x106 = x101[4]._super;
  Val x107 = x101[5]._super;
  Val x108 = x101[6]._super;
  Val x109 = x101[7]._super;
  Val x110 = x101[8]._super;
  Val x111 = x101[9]._super;
  Val x112 = x101[10]._super;
  Val x113 = x101[11]._super;
  Val x114 = x101[12]._super;
  Val x115 = x101[13]._super;
  Val x116 = x101[14]._super;
  Val x117 = x101[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x118 =
      ((((((x102 + (x103 * Val(2))) + (x104 * Val(4))) + (x105 * Val(8))) + (x106 * Val(16))) +
        (x107 * Val(32))) +
       (x108 * Val(64)));
  Val x119 = ((((((x118 + (x109 * Val(128))) + (x110 * Val(256))) + (x111 * Val(512))) +
                (x112 * Val(1024))) +
               (x113 * Val(2048))) +
              (x114 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:884)
  NondetRegStruct16Array x120 = x93._super;
  Val x121 = x120[0]._super;
  Val x122 = x120[1]._super;
  Val x123 = x120[2]._super;
  Val x124 = x120[3]._super;
  Val x125 = x120[4]._super;
  Val x126 = x120[5]._super;
  Val x127 = x120[6]._super;
  Val x128 = x120[7]._super;
  Val x129 = x120[8]._super;
  Val x130 = x120[9]._super;
  Val x131 = x120[10]._super;
  Val x132 = x120[11]._super;
  Val x133 = x120[12]._super;
  Val x134 = x120[13]._super;
  Val x135 = x120[14]._super;
  Val x136 = x120[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x137 =
      ((((((x121 + (x122 * Val(2))) + (x123 * Val(4))) + (x124 * Val(8))) + (x125 * Val(16))) +
        (x126 * Val(32))) +
       (x127 * Val(64)));
  Val x138 = ((((((x137 + (x128 * Val(128))) + (x129 * Val(256))) + (x130 * Val(512))) +
                (x131 * Val(1024))) +
               (x132 * Val(2048))) +
              (x133 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:886)
  NondetRegStruct16Array x139 = x95._super;
  Val x140 = x139[0]._super;
  Val x141 = x139[1]._super;
  Val x142 = x139[2]._super;
  Val x143 = x139[3]._super;
  Val x144 = x139[4]._super;
  Val x145 = x139[5]._super;
  Val x146 = x139[6]._super;
  Val x147 = x139[7]._super;
  Val x148 = x139[8]._super;
  Val x149 = x139[9]._super;
  Val x150 = x139[10]._super;
  Val x151 = x139[11]._super;
  Val x152 = x139[12]._super;
  Val x153 = x139[13]._super;
  Val x154 = x139[14]._super;
  Val x155 = x139[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x156 =
      ((((((x140 + (x141 * Val(2))) + (x142 * Val(4))) + (x143 * Val(8))) + (x144 * Val(16))) +
        (x145 * Val(32))) +
       (x146 * Val(64)));
  Val x157 = ((((((x156 + (x147 * Val(128))) + (x148 * Val(256))) + (x149 * Val(512))) +
                (x150 * Val(1024))) +
               (x151 * Val(2048))) +
              (x152 * Val(4096)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:888)
  NondetRegStruct16Array x158 = x97._super;
  Val x159 = x158[0]._super;
  Val x160 = x158[1]._super;
  Val x161 = x158[2]._super;
  Val x162 = x158[3]._super;
  Val x163 = x158[4]._super;
  Val x164 = x158[5]._super;
  Val x165 = x158[6]._super;
  Val x166 = x158[7]._super;
  Val x167 = x158[8]._super;
  Val x168 = x158[9]._super;
  Val x169 = x158[10]._super;
  Val x170 = x158[11]._super;
  Val x171 = x158[12]._super;
  Val x172 = x158[13]._super;
  Val x173 = x158[14]._super;
  Val x174 = x158[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:892)
  Val x175 =
      ((((((x159 + (x160 * Val(2))) + (x161 * Val(4))) + (x162 * Val(8))) + (x163 * Val(16))) +
        (x164 * Val(32))) +
       (x165 * Val(64)));
  Val x176 = ((((((x175 + (x166 * Val(128))) + (x167 * Val(256))) + (x168 * Val(512))) +
                (x169 * Val(1024))) +
               (x170 * Val(2048))) +
              (x171 * Val(4096)));
  WriteMemoryStruct x177 = exec_WriteMemory(
      ctx,
      x99,
      MemDigestStruct{
          ._super =
              Val4Array{
                  (((x119 + (x115 * Val(8192))) + (x116 * Val(16384))) + (x117 * Val(32768))),
                  (((x138 + (x134 * Val(8192))) + (x135 * Val(16384))) + (x136 * Val(32768))),
                  (((x157 + (x153 * Val(8192))) + (x154 * Val(16384))) + (x155 * Val(32768))),
                  (((x176 + (x172 * Val(8192))) + (x173 * Val(16384))) + (x174 * Val(32768)))}},
      LAYOUT_LOOKUP(layout1, _0));
  // xor2(zirgen/circuit/keccak/keccak.zir:114)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:897)
  Val x178 = ((x6 + x102) - ((x6 * Val(2)) * x102));
  Val x179 = ((x7 + x103) - (x28 * x103));
  Val x180 = ((x8 + x104) - ((x8 * Val(2)) * x104));
  Val x181 = ((x9 + x105) - ((x9 * Val(2)) * x105));
  Val x182 = ((x10 + x106) - ((x10 * Val(2)) * x106));
  Val x183 = ((x11 + x107) - ((x11 * Val(2)) * x107));
  Val x184 = ((x12 + x108) - ((x12 * Val(2)) * x108));
  Val x185 = ((x13 + x109) - ((x13 * Val(2)) * x109));
  Val x186 = ((x14 + x110) - ((x14 * Val(2)) * x110));
  Val x187 = ((x15 + x111) - ((x15 * Val(2)) * x111));
  Val x188 = ((x16 + x112) - ((x16 * Val(2)) * x112));
  Val x189 = ((x17 + x113) - ((x17 * Val(2)) * x113));
  Val x190 = ((x18 + x114) - ((x18 * Val(2)) * x114));
  Val x191 = ((x19 + x115) - ((x19 * Val(2)) * x115));
  Val x192 = ((x20 + x116) - ((x20 * Val(2)) * x116));
  Val x193 = ((x21 + x117) - ((x21 * Val(2)) * x117));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:898)
  Val x194 = ((x22 + x121) - ((x22 * Val(2)) * x121));
  Val x195 = ((x23 + x122) - ((x23 * Val(2)) * x122));
  Val x196 = ((x24 + x123) - ((x24 * Val(2)) * x123));
  Val x197 = ((x25 + x124) - ((x25 * Val(2)) * x124));
  Val x198 = ((x26 + x125) - ((x26 * Val(2)) * x125));
  Val x199 = ((x27 + x126) - ((x27 * Val(2)) * x126));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:902)
  Val x200 = ((x35 + x127) - ((x35 * Val(2)) * x127));
  Val x201 = ((x36 + x128) - (x57 * x128));
  Val x202 = ((x37 + x129) - ((x37 * Val(2)) * x129));
  Val x203 = ((x38 + x130) - ((x38 * Val(2)) * x130));
  Val x204 = ((x39 + x131) - ((x39 * Val(2)) * x131));
  Val x205 = ((x40 + x132) - ((x40 * Val(2)) * x132));
  Val x206 = ((x41 + x133) - ((x41 * Val(2)) * x133));
  Val x207 = ((x42 + x134) - ((x42 * Val(2)) * x134));
  Val x208 = ((x43 + x135) - ((x43 * Val(2)) * x135));
  Val x209 = ((x44 + x136) - ((x44 * Val(2)) * x136));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:903)
  Val x210 = ((x45 + x140) - ((x45 * Val(2)) * x140));
  Val x211 = ((x46 + x141) - ((x46 * Val(2)) * x141));
  Val x212 = ((x47 + x142) - ((x47 * Val(2)) * x142));
  Val x213 = ((x48 + x143) - ((x48 * Val(2)) * x143));
  Val x214 = ((x49 + x144) - ((x49 * Val(2)) * x144));
  Val x215 = ((x50 + x145) - ((x50 * Val(2)) * x145));
  Val x216 = ((x51 + x146) - ((x51 * Val(2)) * x146));
  Val x217 = ((x52 + x147) - ((x52 * Val(2)) * x147));
  Val x218 = ((x53 + x148) - ((x53 * Val(2)) * x148));
  Val x219 = ((x54 + x149) - ((x54 * Val(2)) * x149));
  Val x220 = ((x55 + x150) - ((x55 * Val(2)) * x150));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:907)
  Val x221 = ((x64 + x151) - ((x64 * Val(2)) * x151));
  Val x222 = ((x65 + x152) - (x86 * x152));
  Val x223 = ((x66 + x153) - ((x66 * Val(2)) * x153));
  Val x224 = ((x67 + x154) - ((x67 * Val(2)) * x154));
  Val x225 = ((x68 + x155) - ((x68 * Val(2)) * x155));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:908)
  Val x226 = ((x69 + x159) - ((x69 * Val(2)) * x159));
  Val x227 = ((x70 + x160) - ((x70 * Val(2)) * x160));
  Val x228 = ((x71 + x161) - ((x71 * Val(2)) * x161));
  Val x229 = ((x72 + x162) - ((x72 * Val(2)) * x162));
  Val x230 = ((x73 + x163) - ((x73 * Val(2)) * x163));
  Val x231 = ((x74 + x164) - ((x74 * Val(2)) * x164));
  Val x232 = ((x75 + x165) - ((x75 * Val(2)) * x165));
  Val x233 = ((x76 + x166) - ((x76 * Val(2)) * x166));
  Val x234 = ((x77 + x167) - ((x77 * Val(2)) * x167));
  Val x235 = ((x78 + x168) - ((x78 * Val(2)) * x168));
  Val x236 = ((x79 + x169) - ((x79 * Val(2)) * x169));
  Val x237 = ((x80 + x170) - ((x80 * Val(2)) * x170));
  Val x238 = ((x81 + x171) - ((x81 * Val(2)) * x171));
  Val x239 = ((x82 + x172) - ((x82 * Val(2)) * x172));
  Val x240 = ((x83 + x173) - ((x83 * Val(2)) * x173));
  Val x241 = ((x84 + x174) - ((x84 * Val(2)) * x174));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // absorb_word(zirgen/circuit/keccak/keccak.zir:911)
  Val x242 =
      ((((((x178 + (x179 * Val(2))) + (x180 * Val(4))) + (x181 * Val(8))) + (x182 * Val(16))) +
        (x183 * Val(32))) +
       (x184 * Val(64)));
  Val x243 = ((((((x242 + (x185 * Val(128))) + (x186 * Val(256))) + (x187 * Val(512))) +
                (x188 * Val(1024))) +
               (x189 * Val(2048))) +
              (x190 * Val(4096)));
  Val x244 = ((((((x243 + (x191 * Val(8192))) + (x192 * Val(16384))) + (x193 * Val(32768))) +
                (x194 * Val(65536))) +
               (x195 * Val(131072))) +
              (x196 * Val(262144)));
  Val x245 =
      ((((((x200 + (x201 * Val(2))) + (x202 * Val(4))) + (x203 * Val(8))) + (x204 * Val(16))) +
        (x205 * Val(32))) +
       (x206 * Val(64)));
  Val x246 = ((((((x245 + (x207 * Val(128))) + (x208 * Val(256))) + (x209 * Val(512))) +
                (x210 * Val(1024))) +
               (x211 * Val(2048))) +
              (x212 * Val(4096)));
  Val x247 = ((((((x246 + (x213 * Val(8192))) + (x214 * Val(16384))) + (x215 * Val(32768))) +
                (x216 * Val(65536))) +
               (x217 * Val(131072))) +
              (x218 * Val(262144)));
  Val x248 =
      ((((((x221 + (x222 * Val(2))) + (x223 * Val(4))) + (x224 * Val(8))) + (x225 * Val(16))) +
        (x226 * Val(32))) +
       (x227 * Val(64)));
  Val x249 = ((((((x248 + (x228 * Val(128))) + (x229 * Val(256))) + (x230 * Val(512))) +
                (x231 * Val(1024))) +
               (x232 * Val(2048))) +
              (x233 * Val(4096)));
  Val x250 = ((((((x249 + (x234 * Val(8192))) + (x235 * Val(16384))) + (x236 * Val(32768))) +
                (x237 * Val(65536))) +
               (x238 * Val(131072))) +
              (x239 * Val(262144)));
  // absorb_word(zirgen/circuit/keccak/keccak.zir:919)
  RetTupleStruct x251 = exec_RetTuple(
      ctx,
      Val22Array{x6,  x7,  x8,  x9,  x10, x11, x12, x13, x14, x15, x16,
                 x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27},
      Val22Array{x178, x179, x180, x181, x182, x183, x184, x185, x186, x187, x188,
                 x189, x190, x191, x192, x193, x194, x195, x196, x197, x198, x199},
      Val22Array{x200, x201, x202, x203, x204, x205, x206, x207, x208, x209, x210,
                 x211, x212, x213, x214, x215, x216, x217, x218, x219, x220, Val(0)},
      Val24Array{x221,
                 x222,
                 x223,
                 x224,
                 x225,
                 x226,
                 x227,
                 x228,
                 x229,
                 x230,
                 x231,
                 x232,
                 x233,
                 x234,
                 x235,
                 x236,
                 x237,
                 x238,
                 x239,
                 x240,
                 x241,
                 (((x244 + (x197 * Val(524288))) + (x198 * Val(1048576))) + (x199 * Val(2097152))),
                 ((x247 + (x219 * Val(524288))) + (x220 * Val(1048576))),
                 ((x250 + (x240 * Val(524288))) + (x241 * Val(1048576)))},
      Val22Array{x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45,
                 x46, x47, x48, x49, x50, x51, x52, x53, x54, x55, x56},
      Val22Array{x64, x65, x66, x67, x68, x69, x70, x71, x72, x73, x74,
                 x75, x76, x77, x78, x79, x80, x81, x82, x83, x84, x85},
      Val(8),
      Val(16),
      Val(0),
      arg0.blk._super,
      x98,
      LAYOUT_LOOKUP(layout1, _super));
  return x251;
}
RetTupleStruct execAbsorbMajor2(ExecContext& ctx,
                                RetTupleStruct arg0,
                                BoundLayout<RetTupleLayout> arg1,
                                BoundLayout<AbsorbMajor2Layout> layout2) {
  // absorb_major2(zirgen/circuit/keccak/keccak.zir:1001)
  BoundLayout<AbsorbMajor2_SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // absorb_major2(zirgen/circuit/keccak/keccak.zir:1000)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  OneHot_9_Struct x5 = exec_OneHot_9_(ctx, x4.minor._super, LAYOUT_LOOKUP(layout2, minorOnehot));
  NondetRegStruct9Array x6 = x5._super;
  // absorb_major2(zirgen/circuit/keccak/keccak.zir:1001)
  BoundLayout<AbsorbMajor2Arm8Layout> x7 = LAYOUT_LOOKUP(x3, arm8);
  if (to_size_t(x6[0]._super)) {
    // absorb_major2(zirgen/circuit/keccak/keccak.zir:1002)
    RetTupleStruct x8 = back_RetTuple(ctx, 1, arg1);
    RetTupleStruct x9 = execAbsorbWord_4__1_(ctx, x8, LAYOUT_LOOKUP(x3, arm0));
  }
  if (to_size_t(x6[1]._super)) {
    // absorb_major2(zirgen/circuit/keccak/keccak.zir:1003)
    RetTupleStruct x10 = back_RetTuple(ctx, 2, arg1);
    RetTupleStruct x11 = execAbsorbWord_0__2_(ctx, x10, LAYOUT_LOOKUP(x3, arm1));
  }
  if (to_size_t(x6[2]._super)) {
    // absorb_major2(zirgen/circuit/keccak/keccak.zir:1004)
    RetTupleStruct x12 = back_RetTuple(ctx, 3, arg1);
    RetTupleStruct x13 = execAbsorbWord_1__2_(ctx, x12, LAYOUT_LOOKUP(x3, arm2));
  }
  if (to_size_t(x6[3]._super)) {
    // absorb_major2(zirgen/circuit/keccak/keccak.zir:1005)
    RetTupleStruct x14 = back_RetTuple(ctx, 4, arg1);
    RetTupleStruct x15 = execAbsorbWord_2__2_(ctx, x14, LAYOUT_LOOKUP(x3, arm3));
  }
  if (to_size_t(x6[4]._super)) {
    // absorb_major2(zirgen/circuit/keccak/keccak.zir:1006)
    RetTupleStruct x16 = back_RetTuple(ctx, 5, arg1);
    RetTupleStruct x17 = execAbsorbWord_3__2_(ctx, x16, LAYOUT_LOOKUP(x3, arm4));
  }
  if (to_size_t(x6[5]._super)) {
    // absorb_major2(zirgen/circuit/keccak/keccak.zir:1007)
    RetTupleStruct x18 = back_RetTuple(ctx, 6, arg1);
    RetTupleStruct x19 = execAbsorbWord_4__2_(ctx, x18, LAYOUT_LOOKUP(x3, arm5));
  }
  if (to_size_t(x6[6]._super)) {
    // absorb_major2(zirgen/circuit/keccak/keccak.zir:1008)
    RetTupleStruct x20 = back_RetTuple(ctx, 7, arg1);
    RetTupleStruct x21 = execAbsorbWord_0__3_(ctx, x20, LAYOUT_LOOKUP(x3, arm6));
  }
  if (to_size_t(x6[7]._super)) {
    // absorb_major2(zirgen/circuit/keccak/keccak.zir:1009)
    RetTupleStruct x22 = back_RetTuple(ctx, 8, arg1);
    RetTupleStruct x23 = execAbsorbWord_1__3_(ctx, x22, LAYOUT_LOOKUP(x3, arm7));
  }
  // absorb_major2(zirgen/circuit/keccak/keccak.zir:1001)
  BoundLayout<Reg> x24 = LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x7, _extra0), count), _super);
  if (to_size_t(x6[8]._super)) {
    // absorb_major2(zirgen/circuit/keccak/keccak.zir:1010)
    RetTupleStruct x25 = execAbsorbCopy2(ctx, arg0, arg1, LAYOUT_LOOKUP(x7, _super));
    // absorb_major2(zirgen/circuit/keccak/keccak.zir:1001)
    STORE(x24, Val(0));
    EQZ(LOAD(x24, 0), "absorb_major2(zirgen/circuit/keccak/keccak.zir:1001)");
  }
  RetTupleStruct x26 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x26;
}
ToBits_30_Struct
exec_ToBits_30_(ExecContext& ctx, Val arg0, BoundLayout<ToBits_30_Layout> layout1) {
  // ToBits(zirgen/circuit/keccak/sha256_for_keccak.zir:80)
  NondetRegStruct30Array x2 = map(
      Val30Array{Val(0),  Val(1),  Val(2),  Val(3),  Val(4),  Val(5),  Val(6),  Val(7),
                 Val(8),  Val(9),  Val(10), Val(11), Val(12), Val(13), Val(14), Val(15),
                 Val(16), Val(17), Val(18), Val(19), Val(20), Val(21), Val(22), Val(23),
                 Val(24), Val(25), Val(26), Val(27), Val(28), Val(29)},
      LAYOUT_LOOKUP(layout1, _super),
      std::function([&](Val30Array::value_type x3,
                        BoundLayout<NondetRegLayout30LayoutArray::value_type> x4) {
        // Div(<preamble>:10)
        Val x5 = inv(Val31Array{Val(1),         Val(2),         Val(4),         Val(8),
                                Val(16),        Val(32),        Val(64),        Val(128),
                                Val(256),       Val(512),       Val(1024),      Val(2048),
                                Val(4096),      Val(8192),      Val(16384),     Val(32768),
                                Val(65536),     Val(131072),    Val(262144),    Val(524288),
                                Val(1048576),   Val(2097152),   Val(4194304),   Val(8388608),
                                Val(16777216),  Val(33554432),  Val(67108864),  Val(134217728),
                                Val(268435456), Val(536870912), Val(1073741824)}[to_size_t(x3)]);
        // Div(<preamble>:11)
        EQZ(((x5 * Val31Array{Val(1),         Val(2),         Val(4),         Val(8),
                              Val(16),        Val(32),        Val(64),        Val(128),
                              Val(256),       Val(512),       Val(1024),      Val(2048),
                              Val(4096),      Val(8192),      Val(16384),     Val(32768),
                              Val(65536),     Val(131072),    Val(262144),    Val(524288),
                              Val(1048576),   Val(2097152),   Val(4194304),   Val(8388608),
                              Val(16777216),  Val(33554432),  Val(67108864),  Val(134217728),
                              Val(268435456), Val(536870912), Val(1073741824)}[to_size_t(x3)]) -
             Val(1)),
            "loc(callsite(\x22Div\x22(\x22<preamble>\x22:11:22) at "
            "\x22ToBits\x22(\x22zirgen/circuit/keccak/sha256_for_keccak.zir\x22:80:43)))");
        NondetRegStruct x6 = exec_NondetBitReg(
            ctx,
            (x5 *
             bitAnd(arg0,
                    Val31Array{Val(1),         Val(2),         Val(4),         Val(8),
                               Val(16),        Val(32),        Val(64),        Val(128),
                               Val(256),       Val(512),       Val(1024),      Val(2048),
                               Val(4096),      Val(8192),      Val(16384),     Val(32768),
                               Val(65536),     Val(131072),    Val(262144),    Val(524288),
                               Val(1048576),   Val(2097152),   Val(4194304),   Val(8388608),
                               Val(16777216),  Val(33554432),  Val(67108864),  Val(134217728),
                               Val(268435456), Val(536870912), Val(1073741824)}[to_size_t(x3)])),
            x4);
        return x6;
      }));
  return ToBits_30_Struct{._super = x2};
}
RetTupleStruct execMemPaddingSha256(ExecContext& ctx,
                                    RetTupleStruct arg0,
                                    BoundLayout<MemPaddingSha256Layout> layout1) {
  // mem_padding_sha256(zirgen/circuit/keccak/keccak.zir:1110)
  BoundLayout<MemPaddingSha256_SuperLayout> x2 = LAYOUT_LOOKUP(layout1, _super);
  // mem_padding_sha256(zirgen/circuit/keccak/keccak.zir:1083)
  Val x3 = arg0.rnd._super;
  // mem_padding_sha256(zirgen/circuit/keccak/keccak.zir:1085)
  ToBits_30_Struct x4 = exec_ToBits_30_(ctx, x3, LAYOUT_LOOKUP(layout1, unpackBitlen));
  NondetRegStruct30Array x5 = x4._super;
  Val x6 = x5[8]._super;
  Val x7 = x5[9]._super;
  Val x8 = x5[10]._super;
  Val x9 = x5[11]._super;
  Val x10 = x5[12]._super;
  Val x11 = x5[13]._super;
  Val x12 = x5[14]._super;
  Val x13 = x5[15]._super;
  Val x14 = x5[16]._super;
  Val x15 = x5[17]._super;
  Val x16 = x5[18]._super;
  Val x17 = x5[19]._super;
  Val x18 = x5[20]._super;
  Val x19 = x5[21]._super;
  Val x20 = x5[22]._super;
  Val x21 = x5[23]._super;
  Val x22 = x5[24]._super;
  Val x23 = x5[25]._super;
  Val x24 = x5[26]._super;
  Val x25 = x5[27]._super;
  Val x26 = x5[28]._super;
  Val x27 = x5[29]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // mem_padding_sha256(zirgen/circuit/keccak/keccak.zir:1086)
  Val x28 = (((x5[0]._super + (x5[1]._super * Val(2))) + (x5[2]._super * Val(4))) +
             (x5[3]._super * Val(8)));
  Val x29 =
      ((((x28 + (x5[4]._super * Val(16))) + (x5[5]._super * Val(32))) + (x5[6]._super * Val(64))) +
       (x5[7]._super * Val(128)));
  Val x30 =
      ((((((x29 + (x6 * Val(256))) + (x7 * Val(512))) + (x8 * Val(1024))) + (x9 * Val(2048))) +
        (x10 * Val(4096))) +
       (x11 * Val(8192)));
  Val x31 = ((((((x30 + (x12 * Val(16384))) + (x13 * Val(32768))) + (x14 * Val(65536))) +
               (x15 * Val(131072))) +
              (x16 * Val(262144))) +
             (x17 * Val(524288)));
  Val x32 = ((((((x31 + (x18 * Val(1048576))) + (x19 * Val(2097152))) + (x20 * Val(4194304))) +
               (x21 * Val(8388608))) +
              (x22 * Val(16777216))) +
             (x23 * Val(33554432)));
  EQZ((((((x32 + (x24 * Val(67108864))) + (x25 * Val(134217728))) + (x26 * Val(268435456))) +
        (x27 * Val(536870912))) -
       x3),
      "mem_padding_sha256(zirgen/circuit/keccak/keccak.zir:1086)");
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // mem_padding_sha256(zirgen/circuit/keccak/keccak.zir:1092)
  Val x33 = ((((((x6 + (x7 * Val(2))) + (x8 * Val(4))) + (x9 * Val(8))) + (x10 * Val(16))) +
              (x11 * Val(32))) +
             (x12 * Val(64)));
  // mem_padding_sha256(zirgen/circuit/keccak/keccak.zir:1094)
  Val x34 = ((((((x14 + (x15 * Val(2))) + (x16 * Val(4))) + (x17 * Val(8))) + (x18 * Val(16))) +
              (x19 * Val(32))) +
             (x20 * Val(64)));
  // mem_padding_sha256(zirgen/circuit/keccak/keccak.zir:1096)
  Val x35 = (((x34 + (x21 * Val(128))) * Val(256)) +
             (((((x22 + (x23 * Val(2))) + (x24 * Val(4))) + (x25 * Val(8))) + (x26 * Val(16))) +
              (x27 * Val(32))));
  // mem_padding_sha256(zirgen/circuit/keccak/keccak.zir:1098)
  Val x36 = (arg0.midx._super + Val(1));
  // mem_padding_sha256(zirgen/circuit/keccak/keccak.zir:1083)
  Val x37 = arg0.blk._super;
  // mem_padding_sha256(zirgen/circuit/keccak/keccak.zir:1100)
  NondetRegStruct x38 = exec_NondetReg(ctx, inv(x37), LAYOUT_LOOKUP(layout1, invn));
  // mem_padding_sha256(zirgen/circuit/keccak/keccak.zir:1101)
  NondetRegStruct x39 = exec_Reg(ctx, (x37 * x38._super), LAYOUT_LOOKUP(layout1, prod));
  Val x40 = x39._super;
  // mem_padding_sha256(zirgen/circuit/keccak/keccak.zir:1102)
  Val x41 = (Val(1) - x40);
  EQZ((x37 * x41), "mem_padding_sha256(zirgen/circuit/keccak/keccak.zir:1102)");
  // mem_padding_sha256(zirgen/circuit/keccak/keccak.zir:1104)
  Val x42 = (x36 + Val(1));
  // mem_padding_sha256(zirgen/circuit/keccak/keccak.zir:1105)
  Val x43 = (x37 - Val(1));
  // mem_padding_sha256(zirgen/circuit/keccak/keccak.zir:1106)
  NondetRegStruct x44 = exec_NondetReg(ctx, inv(x43), LAYOUT_LOOKUP(layout1, invnNxt));
  // mem_padding_sha256(zirgen/circuit/keccak/keccak.zir:1107)
  NondetRegStruct x45 = exec_Reg(ctx, (x43 * x44._super), LAYOUT_LOOKUP(layout1, prodNxt));
  Val x46 = x45._super;
  // mem_padding_sha256(zirgen/circuit/keccak/keccak.zir:1108)
  Val x47 = (Val(1) - x46);
  EQZ((x43 * x47), "mem_padding_sha256(zirgen/circuit/keccak/keccak.zir:1108)");
  // mem_padding_sha256(zirgen/circuit/keccak/keccak.zir:1110)
  BoundLayout<MemPaddingSha256Arm0Layout> x48 = LAYOUT_LOOKUP(x2, arm0);
  BoundLayout<MemPaddingSha256Arm1_SuperLayout> x49 = LAYOUT_LOOKUP(x2, arm1);
  // mem_padding_sha256(zirgen/circuit/keccak/keccak.zir:1111)
  BoundLayout<MemPaddingSha256Arm0_SuperLayout> x50 = LAYOUT_LOOKUP(x48, _super);
  // MemDigest(zirgen/circuit/keccak/sha256_for_keccak.zir:7)
  MemDigestStruct x51 = MemDigestStruct{
      ._super = Val4Array{Val(0), Val(0), x35, ((x29 * Val(256)) + (x33 + (x13 * Val(128))))}};
  // mem_padding_sha256(zirgen/circuit/keccak/keccak.zir:1112)
  Val22Array x52 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  Val24Array x53 = Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // mem_padding_sha256(zirgen/circuit/keccak/keccak.zir:1110)
  BoundLayout<Reg> x54 = LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x48, _extra0), count), _super);
  if (to_size_t(x41)) {
    // mem_padding_sha256(zirgen/circuit/keccak/keccak.zir:1111)
    WriteMemoryStruct x55 = exec_WriteMemory(ctx, x36, x51, LAYOUT_LOOKUP(x50, _0));
    // mem_padding_sha256(zirgen/circuit/keccak/keccak.zir:1112)
    RetTupleStruct x56 = exec_RetTuple(ctx,
                                       x52,
                                       x52,
                                       x52,
                                       x53,
                                       x52,
                                       x52,
                                       Val(5),
                                       Val(17),
                                       Val(0),
                                       Val(0),
                                       x36,
                                       LAYOUT_LOOKUP(x50, _super));
    // mem_padding_sha256(zirgen/circuit/keccak/keccak.zir:1110)
    STORE(x54, Val(0));
    EQZ(LOAD(x54, 0), "mem_padding_sha256(zirgen/circuit/keccak/keccak.zir:1110)");
  }
  BoundLayout<MemPaddingSha256Arm1_Super_SuperLayout> x57 = LAYOUT_LOOKUP(x49, _super);
  // MemDigest(zirgen/circuit/keccak/sha256_for_keccak.zir:7)
  // mem_padding_sha256(zirgen/circuit/keccak/keccak.zir:1115)
  MemDigestStruct x58 = MemDigestStruct{._super = Val4Array{Val(0), Val(0), Val(0), Val(0)}};
  // mem_padding_sha256(zirgen/circuit/keccak/keccak.zir:1116)
  BoundLayout<MemPaddingSha256Arm1_SuperArm0_SuperLayout> x59 = LAYOUT_LOOKUP(x57, arm0);
  BoundLayout<MemPaddingSha256Arm1_SuperArm1_SuperLayout> x60 = LAYOUT_LOOKUP(x57, arm1);
  if (to_size_t(x40)) {
    // mem_padding_sha256(zirgen/circuit/keccak/keccak.zir:1115)
    WriteMemoryStruct x61 = exec_WriteMemory(ctx, x36, x58, LAYOUT_LOOKUP(x49, _0));
    if (to_size_t(x47)) {
      // mem_padding_sha256(zirgen/circuit/keccak/keccak.zir:1117)
      WriteMemoryStruct x62 = exec_WriteMemory(ctx, x42, x51, LAYOUT_LOOKUP(x59, _0));
      // mem_padding_sha256(zirgen/circuit/keccak/keccak.zir:1118)
      RetTupleStruct x63 = exec_RetTuple(ctx,
                                         x52,
                                         x52,
                                         x52,
                                         x53,
                                         x52,
                                         x52,
                                         Val(5),
                                         Val(17),
                                         Val(0),
                                         Val(0),
                                         x42,
                                         LAYOUT_LOOKUP(x59, _super));
    }
    if (to_size_t(x46)) {
      // mem_padding_sha256(zirgen/circuit/keccak/keccak.zir:1121)
      WriteMemoryStruct x64 = exec_WriteMemory(ctx, x42, x58, LAYOUT_LOOKUP(x60, _0));
      // mem_padding_sha256(zirgen/circuit/keccak/keccak.zir:1122)
      RetTupleStruct x65 = exec_RetTuple(ctx,
                                         x52,
                                         x52,
                                         x52,
                                         x53,
                                         x52,
                                         x52,
                                         Val(4),
                                         Val(17),
                                         x3,
                                         (x43 - Val(1)),
                                         x42,
                                         LAYOUT_LOOKUP(x60, _super));
    }
    // mem_padding_sha256(zirgen/circuit/keccak/keccak.zir:1116)
    RetTupleStruct x66 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x57, _super));
  }
  // mem_padding_sha256(zirgen/circuit/keccak/keccak.zir:1110)
  RetTupleStruct x67 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x2, _super));
  return x67;
}
ShaOutputStruct
exec_ShaOutput(ExecContext& ctx, Val16Array arg0, BoundLayout<ShaOutputLayout> layout1) {
  // ShaOutput(zirgen/circuit/keccak/keccak.zir:1129)
  ShaOutputValsStruct16Array x2 =
      map(arg0,
          LAYOUT_LOOKUP(layout1, vals),
          std::function([&](Val16Array::value_type x3,
                            BoundLayout<NondetRegLayout16LayoutArray::value_type> x4) {
            NondetRegStruct x5 = exec_Reg(ctx, x3, x4);
            return ShaOutputValsStruct{};
          }));
  return ShaOutputStruct{};
}
OneHot_14_Struct
exec_OneHot_14_(ExecContext& ctx, Val arg0, BoundLayout<OneHot_14_Layout> layout1) {
  // OneHot(zirgen/circuit/keccak/one_hot.zir:7)
  NondetRegStruct14Array x2 =
      map(Val14Array{Val(0),
                     Val(1),
                     Val(2),
                     Val(3),
                     Val(4),
                     Val(5),
                     Val(6),
                     Val(7),
                     Val(8),
                     Val(9),
                     Val(10),
                     Val(11),
                     Val(12),
                     Val(13)},
          LAYOUT_LOOKUP(layout1, _super),
          std::function([&](Val14Array::value_type x3,
                            BoundLayout<NondetRegLayout14LayoutArray::value_type> x4) {
            NondetRegStruct x5 = exec_NondetBitReg(ctx, isz((x3 - arg0)), x4);
            return x5;
          }));
  // OneHot(zirgen/circuit/keccak/one_hot.zir:9)
  Val x6 = x2[1]._super;
  Val x7 = x2[2]._super;
  Val x8 = x2[3]._super;
  Val x9 = x2[4]._super;
  Val x10 = ((((x2[0]._super + x6) + x7) + x8) + x9);
  Val x11 = x2[5]._super;
  Val x12 = x2[6]._super;
  Val x13 = x2[7]._super;
  Val x14 = x2[8]._super;
  Val x15 = x2[9]._super;
  Val x16 = x2[10]._super;
  Val x17 = ((((((x10 + x11) + x12) + x13) + x14) + x15) + x16);
  Val x18 = x2[11]._super;
  Val x19 = x2[12]._super;
  Val x20 = x2[13]._super;
  EQZ(((((x17 + x18) + x19) + x20) - Val(1)), "OneHot(zirgen/circuit/keccak/one_hot.zir:9)");
  // OneHot(zirgen/circuit/keccak/one_hot.zir:11)
  Val x21 = ((((((x6 + (x7 * Val(2))) + (x8 * Val(3))) + (x9 * Val(4))) + (x11 * Val(5))) +
              (x12 * Val(6))) +
             (x13 * Val(7)));
  Val x22 = ((((((x21 + (x14 * Val(8))) + (x15 * Val(9))) + (x16 * Val(10))) + (x18 * Val(11))) +
              (x19 * Val(12))) +
             (x20 * Val(13)));
  EQZ((x22 - arg0), "OneHot(zirgen/circuit/keccak/one_hot.zir:11)");
  return OneHot_14_Struct{._super = x2};
}
ToBits_3_Struct exec_ToBits_3_(ExecContext& ctx, Val arg0, BoundLayout<ToBits_3_Layout> layout1) {
  // ToBits(zirgen/circuit/keccak/sha256_for_keccak.zir:80)
  NondetRegStruct3Array x2 = map(
      Val3Array{Val(0), Val(1), Val(2)},
      LAYOUT_LOOKUP(layout1, _super),
      std::function([&](Val3Array::value_type x3,
                        BoundLayout<NondetRegLayout3LayoutArray::value_type> x4) {
        // Div(<preamble>:10)
        Val x5 = inv(Val31Array{Val(1),         Val(2),         Val(4),         Val(8),
                                Val(16),        Val(32),        Val(64),        Val(128),
                                Val(256),       Val(512),       Val(1024),      Val(2048),
                                Val(4096),      Val(8192),      Val(16384),     Val(32768),
                                Val(65536),     Val(131072),    Val(262144),    Val(524288),
                                Val(1048576),   Val(2097152),   Val(4194304),   Val(8388608),
                                Val(16777216),  Val(33554432),  Val(67108864),  Val(134217728),
                                Val(268435456), Val(536870912), Val(1073741824)}[to_size_t(x3)]);
        // Div(<preamble>:11)
        EQZ(((x5 * Val31Array{Val(1),         Val(2),         Val(4),         Val(8),
                              Val(16),        Val(32),        Val(64),        Val(128),
                              Val(256),       Val(512),       Val(1024),      Val(2048),
                              Val(4096),      Val(8192),      Val(16384),     Val(32768),
                              Val(65536),     Val(131072),    Val(262144),    Val(524288),
                              Val(1048576),   Val(2097152),   Val(4194304),   Val(8388608),
                              Val(16777216),  Val(33554432),  Val(67108864),  Val(134217728),
                              Val(268435456), Val(536870912), Val(1073741824)}[to_size_t(x3)]) -
             Val(1)),
            "loc(callsite(\x22Div\x22(\x22<preamble>\x22:11:22) at "
            "\x22ToBits\x22(\x22zirgen/circuit/keccak/sha256_for_keccak.zir\x22:80:43)))");
        NondetRegStruct x6 = exec_NondetBitReg(
            ctx,
            (x5 *
             bitAnd(arg0,
                    Val31Array{Val(1),         Val(2),         Val(4),         Val(8),
                               Val(16),        Val(32),        Val(64),        Val(128),
                               Val(256),       Val(512),       Val(1024),      Val(2048),
                               Val(4096),      Val(8192),      Val(16384),     Val(32768),
                               Val(65536),     Val(131072),    Val(262144),    Val(524288),
                               Val(1048576),   Val(2097152),   Val(4194304),   Val(8388608),
                               Val(16777216),  Val(33554432),  Val(67108864),  Val(134217728),
                               Val(268435456), Val(536870912), Val(1073741824)}[to_size_t(x3)])),
            x4);
        return x6;
      }));
  return ToBits_3_Struct{._super = x2};
}
RetTupleStruct
execEqualWord_0_(ExecContext& ctx, RetTupleStruct arg0, BoundLayout<EqualWord_0_Layout> layout1) {
  // equal_word(zirgen/circuit/keccak/keccak.zir:1014)
  NondetRegStruct22Array x2 = arg0.arrA;
  Val x3 = x2[0]._super;
  // equal_word(zirgen/circuit/keccak/keccak.zir:1018)
  ToBits_22_Struct x4 = exec_ToBits_22_(ctx, x3, LAYOUT_LOOKUP(layout1, unpackA));
  NondetRegStruct22Array x5 = x4._super;
  Val x6 = x5[0]._super;
  Val x7 = x5[1]._super;
  Val x8 = x5[2]._super;
  Val x9 = x5[3]._super;
  Val x10 = x5[4]._super;
  Val x11 = x5[5]._super;
  Val x12 = x5[6]._super;
  Val x13 = x5[7]._super;
  Val x14 = x5[8]._super;
  Val x15 = x5[9]._super;
  Val x16 = x5[10]._super;
  Val x17 = x5[11]._super;
  Val x18 = x5[12]._super;
  Val x19 = x5[13]._super;
  Val x20 = x5[14]._super;
  Val x21 = x5[15]._super;
  Val x22 = x5[16]._super;
  Val x23 = x5[17]._super;
  Val x24 = x5[18]._super;
  Val x25 = x5[19]._super;
  Val x26 = x5[20]._super;
  Val x27 = x5[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // equal_word(zirgen/circuit/keccak/keccak.zir:1019)
  Val x28 = ((((((x6 + (x7 * Val(2))) + (x8 * Val(4))) + (x9 * Val(8))) + (x10 * Val(16))) +
              (x11 * Val(32))) +
             (x12 * Val(64)));
  Val x29 =
      ((((((x28 + (x13 * Val(128))) + (x14 * Val(256))) + (x15 * Val(512))) + (x16 * Val(1024))) +
        (x17 * Val(2048))) +
       (x18 * Val(4096)));
  Val x30 = ((((((x29 + (x19 * Val(8192))) + (x20 * Val(16384))) + (x21 * Val(32768))) +
               (x22 * Val(65536))) +
              (x23 * Val(131072))) +
             (x24 * Val(262144)));
  EQZ(((((x30 + (x25 * Val(524288))) + (x26 * Val(1048576))) + (x27 * Val(2097152))) - x3),
      "equal_word(zirgen/circuit/keccak/keccak.zir:1019)");
  // equal_word(zirgen/circuit/keccak/keccak.zir:1014)
  Val x31 = x2[1]._super;
  // equal_word(zirgen/circuit/keccak/keccak.zir:1020)
  ToBits_21_Struct x32 = exec_ToBits_21_(ctx, x31, LAYOUT_LOOKUP(layout1, unpackE));
  NondetRegStruct21Array x33 = x32._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // equal_word(zirgen/circuit/keccak/keccak.zir:1021)
  Val x55 = ((((((x34 + (x35 * Val(2))) + (x36 * Val(4))) + (x37 * Val(8))) + (x38 * Val(16))) +
              (x39 * Val(32))) +
             (x40 * Val(64)));
  Val x56 =
      ((((((x55 + (x41 * Val(128))) + (x42 * Val(256))) + (x43 * Val(512))) + (x44 * Val(1024))) +
        (x45 * Val(2048))) +
       (x46 * Val(4096)));
  Val x57 = ((((((x56 + (x47 * Val(8192))) + (x48 * Val(16384))) + (x49 * Val(32768))) +
               (x50 * Val(65536))) +
              (x51 * Val(131072))) +
             (x52 * Val(262144)));
  EQZ((((x57 + (x53 * Val(524288))) + (x54 * Val(1048576))) - x31),
      "equal_word(zirgen/circuit/keccak/keccak.zir:1021)");
  // equal_word(zirgen/circuit/keccak/keccak.zir:1014)
  Val x58 = x2[2]._super;
  // equal_word(zirgen/circuit/keccak/keccak.zir:1022)
  ToBits_21_Struct x59 = exec_ToBits_21_(ctx, x58, LAYOUT_LOOKUP(layout1, unpackF));
  NondetRegStruct21Array x60 = x59._super;
  Val x61 = x60[0]._super;
  Val x62 = x60[1]._super;
  Val x63 = x60[2]._super;
  Val x64 = x60[3]._super;
  Val x65 = x60[4]._super;
  Val x66 = x60[5]._super;
  Val x67 = x60[6]._super;
  Val x68 = x60[7]._super;
  Val x69 = x60[8]._super;
  Val x70 = x60[9]._super;
  Val x71 = x60[10]._super;
  Val x72 = x60[11]._super;
  Val x73 = x60[12]._super;
  Val x74 = x60[13]._super;
  Val x75 = x60[14]._super;
  Val x76 = x60[15]._super;
  Val x77 = x60[16]._super;
  Val x78 = x60[17]._super;
  Val x79 = x60[18]._super;
  Val x80 = x60[19]._super;
  Val x81 = x60[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // equal_word(zirgen/circuit/keccak/keccak.zir:1023)
  Val x82 = ((((((x61 + (x62 * Val(2))) + (x63 * Val(4))) + (x64 * Val(8))) + (x65 * Val(16))) +
              (x66 * Val(32))) +
             (x67 * Val(64)));
  Val x83 =
      ((((((x82 + (x68 * Val(128))) + (x69 * Val(256))) + (x70 * Val(512))) + (x71 * Val(1024))) +
        (x72 * Val(2048))) +
       (x73 * Val(4096)));
  Val x84 = ((((((x83 + (x74 * Val(8192))) + (x75 * Val(16384))) + (x76 * Val(32768))) +
               (x77 * Val(65536))) +
              (x78 * Val(131072))) +
             (x79 * Val(262144)));
  EQZ((((x84 + (x80 * Val(524288))) + (x81 * Val(1048576))) - x58),
      "equal_word(zirgen/circuit/keccak/keccak.zir:1023)");
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // equal_word(zirgen/circuit/keccak/keccak.zir:1025)
  Val x85 = INVOKE_EXTERN(ctx, readInput);
  // equal_word(zirgen/circuit/keccak/keccak.zir:1026)
  ToBits_16_Struct x86 = exec_ToBits_16_(ctx, x85, LAYOUT_LOOKUP(layout1, unpack_1));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // equal_word(zirgen/circuit/keccak/keccak.zir:1027)
  Val x87 = INVOKE_EXTERN(ctx, readInput);
  // equal_word(zirgen/circuit/keccak/keccak.zir:1028)
  ToBits_16_Struct x88 = exec_ToBits_16_(ctx, x87, LAYOUT_LOOKUP(layout1, unpack_2));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // equal_word(zirgen/circuit/keccak/keccak.zir:1029)
  Val x89 = INVOKE_EXTERN(ctx, readInput);
  // equal_word(zirgen/circuit/keccak/keccak.zir:1030)
  ToBits_16_Struct x90 = exec_ToBits_16_(ctx, x89, LAYOUT_LOOKUP(layout1, unpack_3));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // equal_word(zirgen/circuit/keccak/keccak.zir:1031)
  Val x91 = INVOKE_EXTERN(ctx, readInput);
  // equal_word(zirgen/circuit/keccak/keccak.zir:1032)
  ToBits_16_Struct x92 = exec_ToBits_16_(ctx, x91, LAYOUT_LOOKUP(layout1, unpack_4));
  // equal_word(zirgen/circuit/keccak/keccak.zir:1033)
  Val x93 = (arg0.midx._super + Val(1));
  // equal_word(zirgen/circuit/keccak/keccak.zir:1034)
  NondetRegStruct x94 = exec_NondetReg(ctx, inv(x93), LAYOUT_LOOKUP(layout1, invmidx));
  // equal_word(zirgen/circuit/keccak/keccak.zir:1035)
  EQZ(((x94._super * x93) - Val(1)), "equal_word(zirgen/circuit/keccak/keccak.zir:1035)");
  // equal_word(zirgen/circuit/keccak/keccak.zir:1026)
  NondetRegStruct16Array x95 = x86._super;
  Val x96 = x95[0]._super;
  Val x97 = x95[1]._super;
  Val x98 = x95[2]._super;
  Val x99 = x95[3]._super;
  Val x100 = x95[4]._super;
  Val x101 = x95[5]._super;
  Val x102 = x95[6]._super;
  Val x103 = x95[7]._super;
  Val x104 = x95[8]._super;
  Val x105 = x95[9]._super;
  Val x106 = x95[10]._super;
  Val x107 = x95[11]._super;
  Val x108 = x95[12]._super;
  Val x109 = x95[13]._super;
  Val x110 = x95[14]._super;
  Val x111 = x95[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // equal_word(zirgen/circuit/keccak/keccak.zir:1036)
  Val x112 = ((((((x96 + (x97 * Val(2))) + (x98 * Val(4))) + (x99 * Val(8))) + (x100 * Val(16))) +
               (x101 * Val(32))) +
              (x102 * Val(64)));
  Val x113 = ((((((x112 + (x103 * Val(128))) + (x104 * Val(256))) + (x105 * Val(512))) +
                (x106 * Val(1024))) +
               (x107 * Val(2048))) +
              (x108 * Val(4096)));
  // equal_word(zirgen/circuit/keccak/keccak.zir:1028)
  NondetRegStruct16Array x114 = x88._super;
  Val x115 = x114[0]._super;
  Val x116 = x114[1]._super;
  Val x117 = x114[2]._super;
  Val x118 = x114[3]._super;
  Val x119 = x114[4]._super;
  Val x120 = x114[5]._super;
  Val x121 = x114[6]._super;
  Val x122 = x114[7]._super;
  Val x123 = x114[8]._super;
  Val x124 = x114[9]._super;
  Val x125 = x114[10]._super;
  Val x126 = x114[11]._super;
  Val x127 = x114[12]._super;
  Val x128 = x114[13]._super;
  Val x129 = x114[14]._super;
  Val x130 = x114[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // equal_word(zirgen/circuit/keccak/keccak.zir:1036)
  Val x131 =
      ((((((x115 + (x116 * Val(2))) + (x117 * Val(4))) + (x118 * Val(8))) + (x119 * Val(16))) +
        (x120 * Val(32))) +
       (x121 * Val(64)));
  Val x132 = ((((((x131 + (x122 * Val(128))) + (x123 * Val(256))) + (x124 * Val(512))) +
                (x125 * Val(1024))) +
               (x126 * Val(2048))) +
              (x127 * Val(4096)));
  // equal_word(zirgen/circuit/keccak/keccak.zir:1030)
  NondetRegStruct16Array x133 = x90._super;
  Val x134 = x133[0]._super;
  Val x135 = x133[1]._super;
  Val x136 = x133[2]._super;
  Val x137 = x133[3]._super;
  Val x138 = x133[4]._super;
  Val x139 = x133[5]._super;
  Val x140 = x133[6]._super;
  Val x141 = x133[7]._super;
  Val x142 = x133[8]._super;
  Val x143 = x133[9]._super;
  Val x144 = x133[10]._super;
  Val x145 = x133[11]._super;
  Val x146 = x133[12]._super;
  Val x147 = x133[13]._super;
  Val x148 = x133[14]._super;
  Val x149 = x133[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // equal_word(zirgen/circuit/keccak/keccak.zir:1036)
  Val x150 =
      ((((((x134 + (x135 * Val(2))) + (x136 * Val(4))) + (x137 * Val(8))) + (x138 * Val(16))) +
        (x139 * Val(32))) +
       (x140 * Val(64)));
  Val x151 = ((((((x150 + (x141 * Val(128))) + (x142 * Val(256))) + (x143 * Val(512))) +
                (x144 * Val(1024))) +
               (x145 * Val(2048))) +
              (x146 * Val(4096)));
  // equal_word(zirgen/circuit/keccak/keccak.zir:1032)
  NondetRegStruct16Array x152 = x92._super;
  Val x153 = x152[0]._super;
  Val x154 = x152[1]._super;
  Val x155 = x152[2]._super;
  Val x156 = x152[3]._super;
  Val x157 = x152[4]._super;
  Val x158 = x152[5]._super;
  Val x159 = x152[6]._super;
  Val x160 = x152[7]._super;
  Val x161 = x152[8]._super;
  Val x162 = x152[9]._super;
  Val x163 = x152[10]._super;
  Val x164 = x152[11]._super;
  Val x165 = x152[12]._super;
  Val x166 = x152[13]._super;
  Val x167 = x152[14]._super;
  Val x168 = x152[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // equal_word(zirgen/circuit/keccak/keccak.zir:1036)
  Val x169 =
      ((((((x153 + (x154 * Val(2))) + (x155 * Val(4))) + (x156 * Val(8))) + (x157 * Val(16))) +
        (x158 * Val(32))) +
       (x159 * Val(64)));
  Val x170 = ((((((x169 + (x160 * Val(128))) + (x161 * Val(256))) + (x162 * Val(512))) +
                (x163 * Val(1024))) +
               (x164 * Val(2048))) +
              (x165 * Val(4096)));
  WriteMemoryStruct x171 = exec_WriteMemory(
      ctx,
      x93,
      MemDigestStruct{
          ._super =
              Val4Array{
                  (((x113 + (x109 * Val(8192))) + (x110 * Val(16384))) + (x111 * Val(32768))),
                  (((x132 + (x128 * Val(8192))) + (x129 * Val(16384))) + (x130 * Val(32768))),
                  (((x151 + (x147 * Val(8192))) + (x148 * Val(16384))) + (x149 * Val(32768))),
                  (((x170 + (x166 * Val(8192))) + (x167 * Val(16384))) + (x168 * Val(32768)))}},
      LAYOUT_LOOKUP(layout1, _0));
  // equal_word(zirgen/circuit/keccak/keccak.zir:1039)
  EQZ((x6 - x96), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x7 - x97), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x8 - x98), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x9 - x99), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x10 - x100), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x11 - x101), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x12 - x102), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x13 - x103), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x14 - x104), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x15 - x105), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x16 - x106), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x17 - x107), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x18 - x108), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x19 - x109), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x20 - x110), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x21 - x111), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  // equal_word(zirgen/circuit/keccak/keccak.zir:1041)
  EQZ((x22 - x115), "equal_word(zirgen/circuit/keccak/keccak.zir:1041)");
  EQZ((x23 - x116), "equal_word(zirgen/circuit/keccak/keccak.zir:1041)");
  EQZ((x24 - x117), "equal_word(zirgen/circuit/keccak/keccak.zir:1041)");
  EQZ((x25 - x118), "equal_word(zirgen/circuit/keccak/keccak.zir:1041)");
  EQZ((x26 - x119), "equal_word(zirgen/circuit/keccak/keccak.zir:1041)");
  EQZ((x27 - x120), "equal_word(zirgen/circuit/keccak/keccak.zir:1041)");
  // equal_word(zirgen/circuit/keccak/keccak.zir:1043)
  EQZ((x34 - x121), "equal_word(zirgen/circuit/keccak/keccak.zir:1043)");
  EQZ((x35 - x122), "equal_word(zirgen/circuit/keccak/keccak.zir:1043)");
  EQZ((x36 - x123), "equal_word(zirgen/circuit/keccak/keccak.zir:1043)");
  EQZ((x37 - x124), "equal_word(zirgen/circuit/keccak/keccak.zir:1043)");
  EQZ((x38 - x125), "equal_word(zirgen/circuit/keccak/keccak.zir:1043)");
  EQZ((x39 - x126), "equal_word(zirgen/circuit/keccak/keccak.zir:1043)");
  EQZ((x40 - x127), "equal_word(zirgen/circuit/keccak/keccak.zir:1043)");
  EQZ((x41 - x128), "equal_word(zirgen/circuit/keccak/keccak.zir:1043)");
  EQZ((x42 - x129), "equal_word(zirgen/circuit/keccak/keccak.zir:1043)");
  EQZ((x43 - x130), "equal_word(zirgen/circuit/keccak/keccak.zir:1043)");
  // equal_word(zirgen/circuit/keccak/keccak.zir:1045)
  EQZ((x44 - x134), "equal_word(zirgen/circuit/keccak/keccak.zir:1045)");
  EQZ((x45 - x135), "equal_word(zirgen/circuit/keccak/keccak.zir:1045)");
  EQZ((x46 - x136), "equal_word(zirgen/circuit/keccak/keccak.zir:1045)");
  EQZ((x47 - x137), "equal_word(zirgen/circuit/keccak/keccak.zir:1045)");
  EQZ((x48 - x138), "equal_word(zirgen/circuit/keccak/keccak.zir:1045)");
  EQZ((x49 - x139), "equal_word(zirgen/circuit/keccak/keccak.zir:1045)");
  EQZ((x50 - x140), "equal_word(zirgen/circuit/keccak/keccak.zir:1045)");
  EQZ((x51 - x141), "equal_word(zirgen/circuit/keccak/keccak.zir:1045)");
  EQZ((x52 - x142), "equal_word(zirgen/circuit/keccak/keccak.zir:1045)");
  EQZ((x53 - x143), "equal_word(zirgen/circuit/keccak/keccak.zir:1045)");
  EQZ((x54 - x144), "equal_word(zirgen/circuit/keccak/keccak.zir:1045)");
  // equal_word(zirgen/circuit/keccak/keccak.zir:1047)
  EQZ((x61 - x145), "equal_word(zirgen/circuit/keccak/keccak.zir:1047)");
  EQZ((x62 - x146), "equal_word(zirgen/circuit/keccak/keccak.zir:1047)");
  EQZ((x63 - x147), "equal_word(zirgen/circuit/keccak/keccak.zir:1047)");
  EQZ((x64 - x148), "equal_word(zirgen/circuit/keccak/keccak.zir:1047)");
  EQZ((x65 - x149), "equal_word(zirgen/circuit/keccak/keccak.zir:1047)");
  // equal_word(zirgen/circuit/keccak/keccak.zir:1049)
  EQZ((x66 - x153), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x67 - x154), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x68 - x155), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x69 - x156), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x70 - x157), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x71 - x158), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x72 - x159), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x73 - x160), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x74 - x161), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x75 - x162), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x76 - x163), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x77 - x164), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x78 - x165), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x79 - x166), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x80 - x167), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x81 - x168), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  // equal_word(zirgen/circuit/keccak/keccak.zir:1052)
  BoundLayout<EqualWord_0_Arm0Layout> x172 = LAYOUT_LOOKUP(LAYOUT_LOOKUP(layout1, nxt), arm0);
  BoundLayout<Reg> x173 = LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x172, _extra0), count), _super);
  STORE(x173, Val(0));
  EQZ(LOAD(x173, 0), "equal_word(zirgen/circuit/keccak/keccak.zir:1052)");
  BoundLayout<Reg> x174 = LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x172, _extra1), count), _super);
  STORE(x174, Val(0));
  EQZ(LOAD(x174, 0), "equal_word(zirgen/circuit/keccak/keccak.zir:1052)");
  // equal_word(zirgen/circuit/keccak/keccak.zir:1079)
  Val22Array x175 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x176 =
      exec_RetTuple(ctx,
                    x175,
                    x175,
                    x175,
                    Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                    x175,
                    x175,
                    Val(1),
                    Val(17),
                    Val(0),
                    Val(0),
                    x93,
                    LAYOUT_LOOKUP(layout1, _super));
  return x176;
}
RetTupleStruct
execEqualWord_1_(ExecContext& ctx, RetTupleStruct arg0, BoundLayout<EqualWord_1_Layout> layout1) {
  // equal_word(zirgen/circuit/keccak/keccak.zir:1014)
  NondetRegStruct22Array x2 = arg0.arrA;
  Val x3 = x2[3]._super;
  // equal_word(zirgen/circuit/keccak/keccak.zir:1018)
  ToBits_22_Struct x4 = exec_ToBits_22_(ctx, x3, LAYOUT_LOOKUP(layout1, unpackA));
  NondetRegStruct22Array x5 = x4._super;
  Val x6 = x5[0]._super;
  Val x7 = x5[1]._super;
  Val x8 = x5[2]._super;
  Val x9 = x5[3]._super;
  Val x10 = x5[4]._super;
  Val x11 = x5[5]._super;
  Val x12 = x5[6]._super;
  Val x13 = x5[7]._super;
  Val x14 = x5[8]._super;
  Val x15 = x5[9]._super;
  Val x16 = x5[10]._super;
  Val x17 = x5[11]._super;
  Val x18 = x5[12]._super;
  Val x19 = x5[13]._super;
  Val x20 = x5[14]._super;
  Val x21 = x5[15]._super;
  Val x22 = x5[16]._super;
  Val x23 = x5[17]._super;
  Val x24 = x5[18]._super;
  Val x25 = x5[19]._super;
  Val x26 = x5[20]._super;
  Val x27 = x5[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // equal_word(zirgen/circuit/keccak/keccak.zir:1019)
  Val x28 = ((((((x6 + (x7 * Val(2))) + (x8 * Val(4))) + (x9 * Val(8))) + (x10 * Val(16))) +
              (x11 * Val(32))) +
             (x12 * Val(64)));
  Val x29 =
      ((((((x28 + (x13 * Val(128))) + (x14 * Val(256))) + (x15 * Val(512))) + (x16 * Val(1024))) +
        (x17 * Val(2048))) +
       (x18 * Val(4096)));
  Val x30 = ((((((x29 + (x19 * Val(8192))) + (x20 * Val(16384))) + (x21 * Val(32768))) +
               (x22 * Val(65536))) +
              (x23 * Val(131072))) +
             (x24 * Val(262144)));
  EQZ(((((x30 + (x25 * Val(524288))) + (x26 * Val(1048576))) + (x27 * Val(2097152))) - x3),
      "equal_word(zirgen/circuit/keccak/keccak.zir:1019)");
  // equal_word(zirgen/circuit/keccak/keccak.zir:1014)
  Val x31 = x2[4]._super;
  // equal_word(zirgen/circuit/keccak/keccak.zir:1020)
  ToBits_21_Struct x32 = exec_ToBits_21_(ctx, x31, LAYOUT_LOOKUP(layout1, unpackE));
  NondetRegStruct21Array x33 = x32._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // equal_word(zirgen/circuit/keccak/keccak.zir:1021)
  Val x55 = ((((((x34 + (x35 * Val(2))) + (x36 * Val(4))) + (x37 * Val(8))) + (x38 * Val(16))) +
              (x39 * Val(32))) +
             (x40 * Val(64)));
  Val x56 =
      ((((((x55 + (x41 * Val(128))) + (x42 * Val(256))) + (x43 * Val(512))) + (x44 * Val(1024))) +
        (x45 * Val(2048))) +
       (x46 * Val(4096)));
  Val x57 = ((((((x56 + (x47 * Val(8192))) + (x48 * Val(16384))) + (x49 * Val(32768))) +
               (x50 * Val(65536))) +
              (x51 * Val(131072))) +
             (x52 * Val(262144)));
  EQZ((((x57 + (x53 * Val(524288))) + (x54 * Val(1048576))) - x31),
      "equal_word(zirgen/circuit/keccak/keccak.zir:1021)");
  // equal_word(zirgen/circuit/keccak/keccak.zir:1014)
  Val x58 = x2[5]._super;
  // equal_word(zirgen/circuit/keccak/keccak.zir:1022)
  ToBits_21_Struct x59 = exec_ToBits_21_(ctx, x58, LAYOUT_LOOKUP(layout1, unpackF));
  NondetRegStruct21Array x60 = x59._super;
  Val x61 = x60[0]._super;
  Val x62 = x60[1]._super;
  Val x63 = x60[2]._super;
  Val x64 = x60[3]._super;
  Val x65 = x60[4]._super;
  Val x66 = x60[5]._super;
  Val x67 = x60[6]._super;
  Val x68 = x60[7]._super;
  Val x69 = x60[8]._super;
  Val x70 = x60[9]._super;
  Val x71 = x60[10]._super;
  Val x72 = x60[11]._super;
  Val x73 = x60[12]._super;
  Val x74 = x60[13]._super;
  Val x75 = x60[14]._super;
  Val x76 = x60[15]._super;
  Val x77 = x60[16]._super;
  Val x78 = x60[17]._super;
  Val x79 = x60[18]._super;
  Val x80 = x60[19]._super;
  Val x81 = x60[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // equal_word(zirgen/circuit/keccak/keccak.zir:1023)
  Val x82 = ((((((x61 + (x62 * Val(2))) + (x63 * Val(4))) + (x64 * Val(8))) + (x65 * Val(16))) +
              (x66 * Val(32))) +
             (x67 * Val(64)));
  Val x83 =
      ((((((x82 + (x68 * Val(128))) + (x69 * Val(256))) + (x70 * Val(512))) + (x71 * Val(1024))) +
        (x72 * Val(2048))) +
       (x73 * Val(4096)));
  Val x84 = ((((((x83 + (x74 * Val(8192))) + (x75 * Val(16384))) + (x76 * Val(32768))) +
               (x77 * Val(65536))) +
              (x78 * Val(131072))) +
             (x79 * Val(262144)));
  EQZ((((x84 + (x80 * Val(524288))) + (x81 * Val(1048576))) - x58),
      "equal_word(zirgen/circuit/keccak/keccak.zir:1023)");
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // equal_word(zirgen/circuit/keccak/keccak.zir:1025)
  Val x85 = INVOKE_EXTERN(ctx, readInput);
  // equal_word(zirgen/circuit/keccak/keccak.zir:1026)
  ToBits_16_Struct x86 = exec_ToBits_16_(ctx, x85, LAYOUT_LOOKUP(layout1, unpack_1));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // equal_word(zirgen/circuit/keccak/keccak.zir:1027)
  Val x87 = INVOKE_EXTERN(ctx, readInput);
  // equal_word(zirgen/circuit/keccak/keccak.zir:1028)
  ToBits_16_Struct x88 = exec_ToBits_16_(ctx, x87, LAYOUT_LOOKUP(layout1, unpack_2));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // equal_word(zirgen/circuit/keccak/keccak.zir:1029)
  Val x89 = INVOKE_EXTERN(ctx, readInput);
  // equal_word(zirgen/circuit/keccak/keccak.zir:1030)
  ToBits_16_Struct x90 = exec_ToBits_16_(ctx, x89, LAYOUT_LOOKUP(layout1, unpack_3));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // equal_word(zirgen/circuit/keccak/keccak.zir:1031)
  Val x91 = INVOKE_EXTERN(ctx, readInput);
  // equal_word(zirgen/circuit/keccak/keccak.zir:1032)
  ToBits_16_Struct x92 = exec_ToBits_16_(ctx, x91, LAYOUT_LOOKUP(layout1, unpack_4));
  // equal_word(zirgen/circuit/keccak/keccak.zir:1033)
  Val x93 = ((arg0.midx._super + Val(1)) + Val(1));
  // equal_word(zirgen/circuit/keccak/keccak.zir:1034)
  NondetRegStruct x94 = exec_NondetReg(ctx, inv(x93), LAYOUT_LOOKUP(layout1, invmidx));
  // equal_word(zirgen/circuit/keccak/keccak.zir:1035)
  EQZ(((x94._super * x93) - Val(1)), "equal_word(zirgen/circuit/keccak/keccak.zir:1035)");
  // equal_word(zirgen/circuit/keccak/keccak.zir:1026)
  NondetRegStruct16Array x95 = x86._super;
  Val x96 = x95[0]._super;
  Val x97 = x95[1]._super;
  Val x98 = x95[2]._super;
  Val x99 = x95[3]._super;
  Val x100 = x95[4]._super;
  Val x101 = x95[5]._super;
  Val x102 = x95[6]._super;
  Val x103 = x95[7]._super;
  Val x104 = x95[8]._super;
  Val x105 = x95[9]._super;
  Val x106 = x95[10]._super;
  Val x107 = x95[11]._super;
  Val x108 = x95[12]._super;
  Val x109 = x95[13]._super;
  Val x110 = x95[14]._super;
  Val x111 = x95[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // equal_word(zirgen/circuit/keccak/keccak.zir:1036)
  Val x112 = ((((((x96 + (x97 * Val(2))) + (x98 * Val(4))) + (x99 * Val(8))) + (x100 * Val(16))) +
               (x101 * Val(32))) +
              (x102 * Val(64)));
  Val x113 = ((((((x112 + (x103 * Val(128))) + (x104 * Val(256))) + (x105 * Val(512))) +
                (x106 * Val(1024))) +
               (x107 * Val(2048))) +
              (x108 * Val(4096)));
  // equal_word(zirgen/circuit/keccak/keccak.zir:1028)
  NondetRegStruct16Array x114 = x88._super;
  Val x115 = x114[0]._super;
  Val x116 = x114[1]._super;
  Val x117 = x114[2]._super;
  Val x118 = x114[3]._super;
  Val x119 = x114[4]._super;
  Val x120 = x114[5]._super;
  Val x121 = x114[6]._super;
  Val x122 = x114[7]._super;
  Val x123 = x114[8]._super;
  Val x124 = x114[9]._super;
  Val x125 = x114[10]._super;
  Val x126 = x114[11]._super;
  Val x127 = x114[12]._super;
  Val x128 = x114[13]._super;
  Val x129 = x114[14]._super;
  Val x130 = x114[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // equal_word(zirgen/circuit/keccak/keccak.zir:1036)
  Val x131 =
      ((((((x115 + (x116 * Val(2))) + (x117 * Val(4))) + (x118 * Val(8))) + (x119 * Val(16))) +
        (x120 * Val(32))) +
       (x121 * Val(64)));
  Val x132 = ((((((x131 + (x122 * Val(128))) + (x123 * Val(256))) + (x124 * Val(512))) +
                (x125 * Val(1024))) +
               (x126 * Val(2048))) +
              (x127 * Val(4096)));
  // equal_word(zirgen/circuit/keccak/keccak.zir:1030)
  NondetRegStruct16Array x133 = x90._super;
  Val x134 = x133[0]._super;
  Val x135 = x133[1]._super;
  Val x136 = x133[2]._super;
  Val x137 = x133[3]._super;
  Val x138 = x133[4]._super;
  Val x139 = x133[5]._super;
  Val x140 = x133[6]._super;
  Val x141 = x133[7]._super;
  Val x142 = x133[8]._super;
  Val x143 = x133[9]._super;
  Val x144 = x133[10]._super;
  Val x145 = x133[11]._super;
  Val x146 = x133[12]._super;
  Val x147 = x133[13]._super;
  Val x148 = x133[14]._super;
  Val x149 = x133[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // equal_word(zirgen/circuit/keccak/keccak.zir:1036)
  Val x150 =
      ((((((x134 + (x135 * Val(2))) + (x136 * Val(4))) + (x137 * Val(8))) + (x138 * Val(16))) +
        (x139 * Val(32))) +
       (x140 * Val(64)));
  Val x151 = ((((((x150 + (x141 * Val(128))) + (x142 * Val(256))) + (x143 * Val(512))) +
                (x144 * Val(1024))) +
               (x145 * Val(2048))) +
              (x146 * Val(4096)));
  // equal_word(zirgen/circuit/keccak/keccak.zir:1032)
  NondetRegStruct16Array x152 = x92._super;
  Val x153 = x152[0]._super;
  Val x154 = x152[1]._super;
  Val x155 = x152[2]._super;
  Val x156 = x152[3]._super;
  Val x157 = x152[4]._super;
  Val x158 = x152[5]._super;
  Val x159 = x152[6]._super;
  Val x160 = x152[7]._super;
  Val x161 = x152[8]._super;
  Val x162 = x152[9]._super;
  Val x163 = x152[10]._super;
  Val x164 = x152[11]._super;
  Val x165 = x152[12]._super;
  Val x166 = x152[13]._super;
  Val x167 = x152[14]._super;
  Val x168 = x152[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // equal_word(zirgen/circuit/keccak/keccak.zir:1036)
  Val x169 =
      ((((((x153 + (x154 * Val(2))) + (x155 * Val(4))) + (x156 * Val(8))) + (x157 * Val(16))) +
        (x158 * Val(32))) +
       (x159 * Val(64)));
  Val x170 = ((((((x169 + (x160 * Val(128))) + (x161 * Val(256))) + (x162 * Val(512))) +
                (x163 * Val(1024))) +
               (x164 * Val(2048))) +
              (x165 * Val(4096)));
  WriteMemoryStruct x171 = exec_WriteMemory(
      ctx,
      x93,
      MemDigestStruct{
          ._super =
              Val4Array{
                  (((x113 + (x109 * Val(8192))) + (x110 * Val(16384))) + (x111 * Val(32768))),
                  (((x132 + (x128 * Val(8192))) + (x129 * Val(16384))) + (x130 * Val(32768))),
                  (((x151 + (x147 * Val(8192))) + (x148 * Val(16384))) + (x149 * Val(32768))),
                  (((x170 + (x166 * Val(8192))) + (x167 * Val(16384))) + (x168 * Val(32768)))}},
      LAYOUT_LOOKUP(layout1, _0));
  // equal_word(zirgen/circuit/keccak/keccak.zir:1039)
  EQZ((x6 - x96), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x7 - x97), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x8 - x98), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x9 - x99), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x10 - x100), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x11 - x101), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x12 - x102), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x13 - x103), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x14 - x104), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x15 - x105), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x16 - x106), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x17 - x107), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x18 - x108), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x19 - x109), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x20 - x110), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x21 - x111), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  // equal_word(zirgen/circuit/keccak/keccak.zir:1041)
  EQZ((x22 - x115), "equal_word(zirgen/circuit/keccak/keccak.zir:1041)");
  EQZ((x23 - x116), "equal_word(zirgen/circuit/keccak/keccak.zir:1041)");
  EQZ((x24 - x117), "equal_word(zirgen/circuit/keccak/keccak.zir:1041)");
  EQZ((x25 - x118), "equal_word(zirgen/circuit/keccak/keccak.zir:1041)");
  EQZ((x26 - x119), "equal_word(zirgen/circuit/keccak/keccak.zir:1041)");
  EQZ((x27 - x120), "equal_word(zirgen/circuit/keccak/keccak.zir:1041)");
  // equal_word(zirgen/circuit/keccak/keccak.zir:1043)
  EQZ((x34 - x121), "equal_word(zirgen/circuit/keccak/keccak.zir:1043)");
  EQZ((x35 - x122), "equal_word(zirgen/circuit/keccak/keccak.zir:1043)");
  EQZ((x36 - x123), "equal_word(zirgen/circuit/keccak/keccak.zir:1043)");
  EQZ((x37 - x124), "equal_word(zirgen/circuit/keccak/keccak.zir:1043)");
  EQZ((x38 - x125), "equal_word(zirgen/circuit/keccak/keccak.zir:1043)");
  EQZ((x39 - x126), "equal_word(zirgen/circuit/keccak/keccak.zir:1043)");
  EQZ((x40 - x127), "equal_word(zirgen/circuit/keccak/keccak.zir:1043)");
  EQZ((x41 - x128), "equal_word(zirgen/circuit/keccak/keccak.zir:1043)");
  EQZ((x42 - x129), "equal_word(zirgen/circuit/keccak/keccak.zir:1043)");
  EQZ((x43 - x130), "equal_word(zirgen/circuit/keccak/keccak.zir:1043)");
  // equal_word(zirgen/circuit/keccak/keccak.zir:1045)
  EQZ((x44 - x134), "equal_word(zirgen/circuit/keccak/keccak.zir:1045)");
  EQZ((x45 - x135), "equal_word(zirgen/circuit/keccak/keccak.zir:1045)");
  EQZ((x46 - x136), "equal_word(zirgen/circuit/keccak/keccak.zir:1045)");
  EQZ((x47 - x137), "equal_word(zirgen/circuit/keccak/keccak.zir:1045)");
  EQZ((x48 - x138), "equal_word(zirgen/circuit/keccak/keccak.zir:1045)");
  EQZ((x49 - x139), "equal_word(zirgen/circuit/keccak/keccak.zir:1045)");
  EQZ((x50 - x140), "equal_word(zirgen/circuit/keccak/keccak.zir:1045)");
  EQZ((x51 - x141), "equal_word(zirgen/circuit/keccak/keccak.zir:1045)");
  EQZ((x52 - x142), "equal_word(zirgen/circuit/keccak/keccak.zir:1045)");
  EQZ((x53 - x143), "equal_word(zirgen/circuit/keccak/keccak.zir:1045)");
  EQZ((x54 - x144), "equal_word(zirgen/circuit/keccak/keccak.zir:1045)");
  // equal_word(zirgen/circuit/keccak/keccak.zir:1047)
  EQZ((x61 - x145), "equal_word(zirgen/circuit/keccak/keccak.zir:1047)");
  EQZ((x62 - x146), "equal_word(zirgen/circuit/keccak/keccak.zir:1047)");
  EQZ((x63 - x147), "equal_word(zirgen/circuit/keccak/keccak.zir:1047)");
  EQZ((x64 - x148), "equal_word(zirgen/circuit/keccak/keccak.zir:1047)");
  EQZ((x65 - x149), "equal_word(zirgen/circuit/keccak/keccak.zir:1047)");
  // equal_word(zirgen/circuit/keccak/keccak.zir:1049)
  EQZ((x66 - x153), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x67 - x154), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x68 - x155), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x69 - x156), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x70 - x157), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x71 - x158), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x72 - x159), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x73 - x160), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x74 - x161), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x75 - x162), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x76 - x163), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x77 - x164), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x78 - x165), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x79 - x166), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x80 - x167), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x81 - x168), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  // equal_word(zirgen/circuit/keccak/keccak.zir:1052)
  BoundLayout<EqualWord_1_Arm0Layout> x172 = LAYOUT_LOOKUP(LAYOUT_LOOKUP(layout1, nxt), arm0);
  BoundLayout<Reg> x173 = LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x172, _extra0), count), _super);
  STORE(x173, Val(0));
  EQZ(LOAD(x173, 0), "equal_word(zirgen/circuit/keccak/keccak.zir:1052)");
  BoundLayout<Reg> x174 = LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x172, _extra1), count), _super);
  STORE(x174, Val(0));
  EQZ(LOAD(x174, 0), "equal_word(zirgen/circuit/keccak/keccak.zir:1052)");
  // equal_word(zirgen/circuit/keccak/keccak.zir:1079)
  Val22Array x175 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x176 =
      exec_RetTuple(ctx,
                    x175,
                    x175,
                    x175,
                    Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                    x175,
                    x175,
                    Val(2),
                    Val(17),
                    Val(0),
                    Val(0),
                    x93,
                    LAYOUT_LOOKUP(layout1, _super));
  return x176;
}
RetTupleStruct
execEqualWord_2_(ExecContext& ctx, RetTupleStruct arg0, BoundLayout<EqualWord_2_Layout> layout1) {
  // equal_word(zirgen/circuit/keccak/keccak.zir:1014)
  NondetRegStruct22Array x2 = arg0.arrA;
  Val x3 = x2[6]._super;
  // equal_word(zirgen/circuit/keccak/keccak.zir:1018)
  ToBits_22_Struct x4 = exec_ToBits_22_(ctx, x3, LAYOUT_LOOKUP(layout1, unpackA));
  NondetRegStruct22Array x5 = x4._super;
  Val x6 = x5[0]._super;
  Val x7 = x5[1]._super;
  Val x8 = x5[2]._super;
  Val x9 = x5[3]._super;
  Val x10 = x5[4]._super;
  Val x11 = x5[5]._super;
  Val x12 = x5[6]._super;
  Val x13 = x5[7]._super;
  Val x14 = x5[8]._super;
  Val x15 = x5[9]._super;
  Val x16 = x5[10]._super;
  Val x17 = x5[11]._super;
  Val x18 = x5[12]._super;
  Val x19 = x5[13]._super;
  Val x20 = x5[14]._super;
  Val x21 = x5[15]._super;
  Val x22 = x5[16]._super;
  Val x23 = x5[17]._super;
  Val x24 = x5[18]._super;
  Val x25 = x5[19]._super;
  Val x26 = x5[20]._super;
  Val x27 = x5[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // equal_word(zirgen/circuit/keccak/keccak.zir:1019)
  Val x28 = ((((((x6 + (x7 * Val(2))) + (x8 * Val(4))) + (x9 * Val(8))) + (x10 * Val(16))) +
              (x11 * Val(32))) +
             (x12 * Val(64)));
  Val x29 =
      ((((((x28 + (x13 * Val(128))) + (x14 * Val(256))) + (x15 * Val(512))) + (x16 * Val(1024))) +
        (x17 * Val(2048))) +
       (x18 * Val(4096)));
  Val x30 = ((((((x29 + (x19 * Val(8192))) + (x20 * Val(16384))) + (x21 * Val(32768))) +
               (x22 * Val(65536))) +
              (x23 * Val(131072))) +
             (x24 * Val(262144)));
  EQZ(((((x30 + (x25 * Val(524288))) + (x26 * Val(1048576))) + (x27 * Val(2097152))) - x3),
      "equal_word(zirgen/circuit/keccak/keccak.zir:1019)");
  // equal_word(zirgen/circuit/keccak/keccak.zir:1014)
  Val x31 = x2[7]._super;
  // equal_word(zirgen/circuit/keccak/keccak.zir:1020)
  ToBits_21_Struct x32 = exec_ToBits_21_(ctx, x31, LAYOUT_LOOKUP(layout1, unpackE));
  NondetRegStruct21Array x33 = x32._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // equal_word(zirgen/circuit/keccak/keccak.zir:1021)
  Val x55 = ((((((x34 + (x35 * Val(2))) + (x36 * Val(4))) + (x37 * Val(8))) + (x38 * Val(16))) +
              (x39 * Val(32))) +
             (x40 * Val(64)));
  Val x56 =
      ((((((x55 + (x41 * Val(128))) + (x42 * Val(256))) + (x43 * Val(512))) + (x44 * Val(1024))) +
        (x45 * Val(2048))) +
       (x46 * Val(4096)));
  Val x57 = ((((((x56 + (x47 * Val(8192))) + (x48 * Val(16384))) + (x49 * Val(32768))) +
               (x50 * Val(65536))) +
              (x51 * Val(131072))) +
             (x52 * Val(262144)));
  EQZ((((x57 + (x53 * Val(524288))) + (x54 * Val(1048576))) - x31),
      "equal_word(zirgen/circuit/keccak/keccak.zir:1021)");
  // equal_word(zirgen/circuit/keccak/keccak.zir:1014)
  Val x58 = x2[8]._super;
  // equal_word(zirgen/circuit/keccak/keccak.zir:1022)
  ToBits_21_Struct x59 = exec_ToBits_21_(ctx, x58, LAYOUT_LOOKUP(layout1, unpackF));
  NondetRegStruct21Array x60 = x59._super;
  Val x61 = x60[0]._super;
  Val x62 = x60[1]._super;
  Val x63 = x60[2]._super;
  Val x64 = x60[3]._super;
  Val x65 = x60[4]._super;
  Val x66 = x60[5]._super;
  Val x67 = x60[6]._super;
  Val x68 = x60[7]._super;
  Val x69 = x60[8]._super;
  Val x70 = x60[9]._super;
  Val x71 = x60[10]._super;
  Val x72 = x60[11]._super;
  Val x73 = x60[12]._super;
  Val x74 = x60[13]._super;
  Val x75 = x60[14]._super;
  Val x76 = x60[15]._super;
  Val x77 = x60[16]._super;
  Val x78 = x60[17]._super;
  Val x79 = x60[18]._super;
  Val x80 = x60[19]._super;
  Val x81 = x60[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // equal_word(zirgen/circuit/keccak/keccak.zir:1023)
  Val x82 = ((((((x61 + (x62 * Val(2))) + (x63 * Val(4))) + (x64 * Val(8))) + (x65 * Val(16))) +
              (x66 * Val(32))) +
             (x67 * Val(64)));
  Val x83 =
      ((((((x82 + (x68 * Val(128))) + (x69 * Val(256))) + (x70 * Val(512))) + (x71 * Val(1024))) +
        (x72 * Val(2048))) +
       (x73 * Val(4096)));
  Val x84 = ((((((x83 + (x74 * Val(8192))) + (x75 * Val(16384))) + (x76 * Val(32768))) +
               (x77 * Val(65536))) +
              (x78 * Val(131072))) +
             (x79 * Val(262144)));
  EQZ((((x84 + (x80 * Val(524288))) + (x81 * Val(1048576))) - x58),
      "equal_word(zirgen/circuit/keccak/keccak.zir:1023)");
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // equal_word(zirgen/circuit/keccak/keccak.zir:1025)
  Val x85 = INVOKE_EXTERN(ctx, readInput);
  // equal_word(zirgen/circuit/keccak/keccak.zir:1026)
  ToBits_16_Struct x86 = exec_ToBits_16_(ctx, x85, LAYOUT_LOOKUP(layout1, unpack_1));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // equal_word(zirgen/circuit/keccak/keccak.zir:1027)
  Val x87 = INVOKE_EXTERN(ctx, readInput);
  // equal_word(zirgen/circuit/keccak/keccak.zir:1028)
  ToBits_16_Struct x88 = exec_ToBits_16_(ctx, x87, LAYOUT_LOOKUP(layout1, unpack_2));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // equal_word(zirgen/circuit/keccak/keccak.zir:1029)
  Val x89 = INVOKE_EXTERN(ctx, readInput);
  // equal_word(zirgen/circuit/keccak/keccak.zir:1030)
  ToBits_16_Struct x90 = exec_ToBits_16_(ctx, x89, LAYOUT_LOOKUP(layout1, unpack_3));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // equal_word(zirgen/circuit/keccak/keccak.zir:1031)
  Val x91 = INVOKE_EXTERN(ctx, readInput);
  // equal_word(zirgen/circuit/keccak/keccak.zir:1032)
  ToBits_16_Struct x92 = exec_ToBits_16_(ctx, x91, LAYOUT_LOOKUP(layout1, unpack_4));
  // equal_word(zirgen/circuit/keccak/keccak.zir:1033)
  Val x93 = ((arg0.midx._super + Val(1)) + Val(2));
  // equal_word(zirgen/circuit/keccak/keccak.zir:1034)
  NondetRegStruct x94 = exec_NondetReg(ctx, inv(x93), LAYOUT_LOOKUP(layout1, invmidx));
  // equal_word(zirgen/circuit/keccak/keccak.zir:1035)
  EQZ(((x94._super * x93) - Val(1)), "equal_word(zirgen/circuit/keccak/keccak.zir:1035)");
  // equal_word(zirgen/circuit/keccak/keccak.zir:1026)
  NondetRegStruct16Array x95 = x86._super;
  Val x96 = x95[0]._super;
  Val x97 = x95[1]._super;
  Val x98 = x95[2]._super;
  Val x99 = x95[3]._super;
  Val x100 = x95[4]._super;
  Val x101 = x95[5]._super;
  Val x102 = x95[6]._super;
  Val x103 = x95[7]._super;
  Val x104 = x95[8]._super;
  Val x105 = x95[9]._super;
  Val x106 = x95[10]._super;
  Val x107 = x95[11]._super;
  Val x108 = x95[12]._super;
  Val x109 = x95[13]._super;
  Val x110 = x95[14]._super;
  Val x111 = x95[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // equal_word(zirgen/circuit/keccak/keccak.zir:1036)
  Val x112 = ((((((x96 + (x97 * Val(2))) + (x98 * Val(4))) + (x99 * Val(8))) + (x100 * Val(16))) +
               (x101 * Val(32))) +
              (x102 * Val(64)));
  Val x113 = ((((((x112 + (x103 * Val(128))) + (x104 * Val(256))) + (x105 * Val(512))) +
                (x106 * Val(1024))) +
               (x107 * Val(2048))) +
              (x108 * Val(4096)));
  // equal_word(zirgen/circuit/keccak/keccak.zir:1028)
  NondetRegStruct16Array x114 = x88._super;
  Val x115 = x114[0]._super;
  Val x116 = x114[1]._super;
  Val x117 = x114[2]._super;
  Val x118 = x114[3]._super;
  Val x119 = x114[4]._super;
  Val x120 = x114[5]._super;
  Val x121 = x114[6]._super;
  Val x122 = x114[7]._super;
  Val x123 = x114[8]._super;
  Val x124 = x114[9]._super;
  Val x125 = x114[10]._super;
  Val x126 = x114[11]._super;
  Val x127 = x114[12]._super;
  Val x128 = x114[13]._super;
  Val x129 = x114[14]._super;
  Val x130 = x114[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // equal_word(zirgen/circuit/keccak/keccak.zir:1036)
  Val x131 =
      ((((((x115 + (x116 * Val(2))) + (x117 * Val(4))) + (x118 * Val(8))) + (x119 * Val(16))) +
        (x120 * Val(32))) +
       (x121 * Val(64)));
  Val x132 = ((((((x131 + (x122 * Val(128))) + (x123 * Val(256))) + (x124 * Val(512))) +
                (x125 * Val(1024))) +
               (x126 * Val(2048))) +
              (x127 * Val(4096)));
  // equal_word(zirgen/circuit/keccak/keccak.zir:1030)
  NondetRegStruct16Array x133 = x90._super;
  Val x134 = x133[0]._super;
  Val x135 = x133[1]._super;
  Val x136 = x133[2]._super;
  Val x137 = x133[3]._super;
  Val x138 = x133[4]._super;
  Val x139 = x133[5]._super;
  Val x140 = x133[6]._super;
  Val x141 = x133[7]._super;
  Val x142 = x133[8]._super;
  Val x143 = x133[9]._super;
  Val x144 = x133[10]._super;
  Val x145 = x133[11]._super;
  Val x146 = x133[12]._super;
  Val x147 = x133[13]._super;
  Val x148 = x133[14]._super;
  Val x149 = x133[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // equal_word(zirgen/circuit/keccak/keccak.zir:1036)
  Val x150 =
      ((((((x134 + (x135 * Val(2))) + (x136 * Val(4))) + (x137 * Val(8))) + (x138 * Val(16))) +
        (x139 * Val(32))) +
       (x140 * Val(64)));
  Val x151 = ((((((x150 + (x141 * Val(128))) + (x142 * Val(256))) + (x143 * Val(512))) +
                (x144 * Val(1024))) +
               (x145 * Val(2048))) +
              (x146 * Val(4096)));
  // equal_word(zirgen/circuit/keccak/keccak.zir:1032)
  NondetRegStruct16Array x152 = x92._super;
  Val x153 = x152[0]._super;
  Val x154 = x152[1]._super;
  Val x155 = x152[2]._super;
  Val x156 = x152[3]._super;
  Val x157 = x152[4]._super;
  Val x158 = x152[5]._super;
  Val x159 = x152[6]._super;
  Val x160 = x152[7]._super;
  Val x161 = x152[8]._super;
  Val x162 = x152[9]._super;
  Val x163 = x152[10]._super;
  Val x164 = x152[11]._super;
  Val x165 = x152[12]._super;
  Val x166 = x152[13]._super;
  Val x167 = x152[14]._super;
  Val x168 = x152[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // equal_word(zirgen/circuit/keccak/keccak.zir:1036)
  Val x169 =
      ((((((x153 + (x154 * Val(2))) + (x155 * Val(4))) + (x156 * Val(8))) + (x157 * Val(16))) +
        (x158 * Val(32))) +
       (x159 * Val(64)));
  Val x170 = ((((((x169 + (x160 * Val(128))) + (x161 * Val(256))) + (x162 * Val(512))) +
                (x163 * Val(1024))) +
               (x164 * Val(2048))) +
              (x165 * Val(4096)));
  WriteMemoryStruct x171 = exec_WriteMemory(
      ctx,
      x93,
      MemDigestStruct{
          ._super =
              Val4Array{
                  (((x113 + (x109 * Val(8192))) + (x110 * Val(16384))) + (x111 * Val(32768))),
                  (((x132 + (x128 * Val(8192))) + (x129 * Val(16384))) + (x130 * Val(32768))),
                  (((x151 + (x147 * Val(8192))) + (x148 * Val(16384))) + (x149 * Val(32768))),
                  (((x170 + (x166 * Val(8192))) + (x167 * Val(16384))) + (x168 * Val(32768)))}},
      LAYOUT_LOOKUP(layout1, _0));
  // equal_word(zirgen/circuit/keccak/keccak.zir:1039)
  EQZ((x6 - x96), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x7 - x97), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x8 - x98), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x9 - x99), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x10 - x100), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x11 - x101), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x12 - x102), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x13 - x103), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x14 - x104), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x15 - x105), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x16 - x106), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x17 - x107), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x18 - x108), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x19 - x109), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x20 - x110), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x21 - x111), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  // equal_word(zirgen/circuit/keccak/keccak.zir:1041)
  EQZ((x22 - x115), "equal_word(zirgen/circuit/keccak/keccak.zir:1041)");
  EQZ((x23 - x116), "equal_word(zirgen/circuit/keccak/keccak.zir:1041)");
  EQZ((x24 - x117), "equal_word(zirgen/circuit/keccak/keccak.zir:1041)");
  EQZ((x25 - x118), "equal_word(zirgen/circuit/keccak/keccak.zir:1041)");
  EQZ((x26 - x119), "equal_word(zirgen/circuit/keccak/keccak.zir:1041)");
  EQZ((x27 - x120), "equal_word(zirgen/circuit/keccak/keccak.zir:1041)");
  // equal_word(zirgen/circuit/keccak/keccak.zir:1043)
  EQZ((x34 - x121), "equal_word(zirgen/circuit/keccak/keccak.zir:1043)");
  EQZ((x35 - x122), "equal_word(zirgen/circuit/keccak/keccak.zir:1043)");
  EQZ((x36 - x123), "equal_word(zirgen/circuit/keccak/keccak.zir:1043)");
  EQZ((x37 - x124), "equal_word(zirgen/circuit/keccak/keccak.zir:1043)");
  EQZ((x38 - x125), "equal_word(zirgen/circuit/keccak/keccak.zir:1043)");
  EQZ((x39 - x126), "equal_word(zirgen/circuit/keccak/keccak.zir:1043)");
  EQZ((x40 - x127), "equal_word(zirgen/circuit/keccak/keccak.zir:1043)");
  EQZ((x41 - x128), "equal_word(zirgen/circuit/keccak/keccak.zir:1043)");
  EQZ((x42 - x129), "equal_word(zirgen/circuit/keccak/keccak.zir:1043)");
  EQZ((x43 - x130), "equal_word(zirgen/circuit/keccak/keccak.zir:1043)");
  // equal_word(zirgen/circuit/keccak/keccak.zir:1045)
  EQZ((x44 - x134), "equal_word(zirgen/circuit/keccak/keccak.zir:1045)");
  EQZ((x45 - x135), "equal_word(zirgen/circuit/keccak/keccak.zir:1045)");
  EQZ((x46 - x136), "equal_word(zirgen/circuit/keccak/keccak.zir:1045)");
  EQZ((x47 - x137), "equal_word(zirgen/circuit/keccak/keccak.zir:1045)");
  EQZ((x48 - x138), "equal_word(zirgen/circuit/keccak/keccak.zir:1045)");
  EQZ((x49 - x139), "equal_word(zirgen/circuit/keccak/keccak.zir:1045)");
  EQZ((x50 - x140), "equal_word(zirgen/circuit/keccak/keccak.zir:1045)");
  EQZ((x51 - x141), "equal_word(zirgen/circuit/keccak/keccak.zir:1045)");
  EQZ((x52 - x142), "equal_word(zirgen/circuit/keccak/keccak.zir:1045)");
  EQZ((x53 - x143), "equal_word(zirgen/circuit/keccak/keccak.zir:1045)");
  EQZ((x54 - x144), "equal_word(zirgen/circuit/keccak/keccak.zir:1045)");
  // equal_word(zirgen/circuit/keccak/keccak.zir:1047)
  EQZ((x61 - x145), "equal_word(zirgen/circuit/keccak/keccak.zir:1047)");
  EQZ((x62 - x146), "equal_word(zirgen/circuit/keccak/keccak.zir:1047)");
  EQZ((x63 - x147), "equal_word(zirgen/circuit/keccak/keccak.zir:1047)");
  EQZ((x64 - x148), "equal_word(zirgen/circuit/keccak/keccak.zir:1047)");
  EQZ((x65 - x149), "equal_word(zirgen/circuit/keccak/keccak.zir:1047)");
  // equal_word(zirgen/circuit/keccak/keccak.zir:1049)
  EQZ((x66 - x153), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x67 - x154), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x68 - x155), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x69 - x156), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x70 - x157), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x71 - x158), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x72 - x159), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x73 - x160), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x74 - x161), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x75 - x162), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x76 - x163), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x77 - x164), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x78 - x165), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x79 - x166), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x80 - x167), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x81 - x168), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  // equal_word(zirgen/circuit/keccak/keccak.zir:1052)
  BoundLayout<EqualWord_2_Arm0Layout> x172 = LAYOUT_LOOKUP(LAYOUT_LOOKUP(layout1, nxt), arm0);
  BoundLayout<Reg> x173 = LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x172, _extra0), count), _super);
  STORE(x173, Val(0));
  EQZ(LOAD(x173, 0), "equal_word(zirgen/circuit/keccak/keccak.zir:1052)");
  BoundLayout<Reg> x174 = LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x172, _extra1), count), _super);
  STORE(x174, Val(0));
  EQZ(LOAD(x174, 0), "equal_word(zirgen/circuit/keccak/keccak.zir:1052)");
  // equal_word(zirgen/circuit/keccak/keccak.zir:1079)
  Val22Array x175 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x176 =
      exec_RetTuple(ctx,
                    x175,
                    x175,
                    x175,
                    Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                    x175,
                    x175,
                    Val(3),
                    Val(17),
                    Val(0),
                    Val(0),
                    x93,
                    LAYOUT_LOOKUP(layout1, _super));
  return x176;
}
RetTupleStruct
execEqualWord_3_(ExecContext& ctx, RetTupleStruct arg0, BoundLayout<EqualWord_3_Layout> layout1) {
  // equal_word(zirgen/circuit/keccak/keccak.zir:1014)
  NondetRegStruct22Array x2 = arg0.arrA;
  Val x3 = x2[9]._super;
  // equal_word(zirgen/circuit/keccak/keccak.zir:1018)
  ToBits_22_Struct x4 = exec_ToBits_22_(ctx, x3, LAYOUT_LOOKUP(layout1, unpackA));
  NondetRegStruct22Array x5 = x4._super;
  Val x6 = x5[0]._super;
  Val x7 = x5[1]._super;
  Val x8 = x5[2]._super;
  Val x9 = x5[3]._super;
  Val x10 = x5[4]._super;
  Val x11 = x5[5]._super;
  Val x12 = x5[6]._super;
  Val x13 = x5[7]._super;
  Val x14 = x5[8]._super;
  Val x15 = x5[9]._super;
  Val x16 = x5[10]._super;
  Val x17 = x5[11]._super;
  Val x18 = x5[12]._super;
  Val x19 = x5[13]._super;
  Val x20 = x5[14]._super;
  Val x21 = x5[15]._super;
  Val x22 = x5[16]._super;
  Val x23 = x5[17]._super;
  Val x24 = x5[18]._super;
  Val x25 = x5[19]._super;
  Val x26 = x5[20]._super;
  Val x27 = x5[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // equal_word(zirgen/circuit/keccak/keccak.zir:1019)
  Val x28 = ((((((x6 + (x7 * Val(2))) + (x8 * Val(4))) + (x9 * Val(8))) + (x10 * Val(16))) +
              (x11 * Val(32))) +
             (x12 * Val(64)));
  Val x29 =
      ((((((x28 + (x13 * Val(128))) + (x14 * Val(256))) + (x15 * Val(512))) + (x16 * Val(1024))) +
        (x17 * Val(2048))) +
       (x18 * Val(4096)));
  Val x30 = ((((((x29 + (x19 * Val(8192))) + (x20 * Val(16384))) + (x21 * Val(32768))) +
               (x22 * Val(65536))) +
              (x23 * Val(131072))) +
             (x24 * Val(262144)));
  EQZ(((((x30 + (x25 * Val(524288))) + (x26 * Val(1048576))) + (x27 * Val(2097152))) - x3),
      "equal_word(zirgen/circuit/keccak/keccak.zir:1019)");
  // equal_word(zirgen/circuit/keccak/keccak.zir:1014)
  Val x31 = x2[10]._super;
  // equal_word(zirgen/circuit/keccak/keccak.zir:1020)
  ToBits_21_Struct x32 = exec_ToBits_21_(ctx, x31, LAYOUT_LOOKUP(layout1, unpackE));
  NondetRegStruct21Array x33 = x32._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // equal_word(zirgen/circuit/keccak/keccak.zir:1021)
  Val x55 = ((((((x34 + (x35 * Val(2))) + (x36 * Val(4))) + (x37 * Val(8))) + (x38 * Val(16))) +
              (x39 * Val(32))) +
             (x40 * Val(64)));
  Val x56 =
      ((((((x55 + (x41 * Val(128))) + (x42 * Val(256))) + (x43 * Val(512))) + (x44 * Val(1024))) +
        (x45 * Val(2048))) +
       (x46 * Val(4096)));
  Val x57 = ((((((x56 + (x47 * Val(8192))) + (x48 * Val(16384))) + (x49 * Val(32768))) +
               (x50 * Val(65536))) +
              (x51 * Val(131072))) +
             (x52 * Val(262144)));
  EQZ((((x57 + (x53 * Val(524288))) + (x54 * Val(1048576))) - x31),
      "equal_word(zirgen/circuit/keccak/keccak.zir:1021)");
  // equal_word(zirgen/circuit/keccak/keccak.zir:1014)
  Val x58 = x2[11]._super;
  // equal_word(zirgen/circuit/keccak/keccak.zir:1022)
  ToBits_21_Struct x59 = exec_ToBits_21_(ctx, x58, LAYOUT_LOOKUP(layout1, unpackF));
  NondetRegStruct21Array x60 = x59._super;
  Val x61 = x60[0]._super;
  Val x62 = x60[1]._super;
  Val x63 = x60[2]._super;
  Val x64 = x60[3]._super;
  Val x65 = x60[4]._super;
  Val x66 = x60[5]._super;
  Val x67 = x60[6]._super;
  Val x68 = x60[7]._super;
  Val x69 = x60[8]._super;
  Val x70 = x60[9]._super;
  Val x71 = x60[10]._super;
  Val x72 = x60[11]._super;
  Val x73 = x60[12]._super;
  Val x74 = x60[13]._super;
  Val x75 = x60[14]._super;
  Val x76 = x60[15]._super;
  Val x77 = x60[16]._super;
  Val x78 = x60[17]._super;
  Val x79 = x60[18]._super;
  Val x80 = x60[19]._super;
  Val x81 = x60[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // equal_word(zirgen/circuit/keccak/keccak.zir:1023)
  Val x82 = ((((((x61 + (x62 * Val(2))) + (x63 * Val(4))) + (x64 * Val(8))) + (x65 * Val(16))) +
              (x66 * Val(32))) +
             (x67 * Val(64)));
  Val x83 =
      ((((((x82 + (x68 * Val(128))) + (x69 * Val(256))) + (x70 * Val(512))) + (x71 * Val(1024))) +
        (x72 * Val(2048))) +
       (x73 * Val(4096)));
  Val x84 = ((((((x83 + (x74 * Val(8192))) + (x75 * Val(16384))) + (x76 * Val(32768))) +
               (x77 * Val(65536))) +
              (x78 * Val(131072))) +
             (x79 * Val(262144)));
  EQZ((((x84 + (x80 * Val(524288))) + (x81 * Val(1048576))) - x58),
      "equal_word(zirgen/circuit/keccak/keccak.zir:1023)");
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // equal_word(zirgen/circuit/keccak/keccak.zir:1025)
  Val x85 = INVOKE_EXTERN(ctx, readInput);
  // equal_word(zirgen/circuit/keccak/keccak.zir:1026)
  ToBits_16_Struct x86 = exec_ToBits_16_(ctx, x85, LAYOUT_LOOKUP(layout1, unpack_1));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // equal_word(zirgen/circuit/keccak/keccak.zir:1027)
  Val x87 = INVOKE_EXTERN(ctx, readInput);
  // equal_word(zirgen/circuit/keccak/keccak.zir:1028)
  ToBits_16_Struct x88 = exec_ToBits_16_(ctx, x87, LAYOUT_LOOKUP(layout1, unpack_2));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // equal_word(zirgen/circuit/keccak/keccak.zir:1029)
  Val x89 = INVOKE_EXTERN(ctx, readInput);
  // equal_word(zirgen/circuit/keccak/keccak.zir:1030)
  ToBits_16_Struct x90 = exec_ToBits_16_(ctx, x89, LAYOUT_LOOKUP(layout1, unpack_3));
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // equal_word(zirgen/circuit/keccak/keccak.zir:1031)
  Val x91 = INVOKE_EXTERN(ctx, readInput);
  // equal_word(zirgen/circuit/keccak/keccak.zir:1032)
  ToBits_16_Struct x92 = exec_ToBits_16_(ctx, x91, LAYOUT_LOOKUP(layout1, unpack_4));
  // equal_word(zirgen/circuit/keccak/keccak.zir:1033)
  Val x93 = ((arg0.midx._super + Val(1)) + Val(3));
  // equal_word(zirgen/circuit/keccak/keccak.zir:1034)
  NondetRegStruct x94 = exec_NondetReg(ctx, inv(x93), LAYOUT_LOOKUP(layout1, invmidx));
  // equal_word(zirgen/circuit/keccak/keccak.zir:1035)
  EQZ(((x94._super * x93) - Val(1)), "equal_word(zirgen/circuit/keccak/keccak.zir:1035)");
  // equal_word(zirgen/circuit/keccak/keccak.zir:1026)
  NondetRegStruct16Array x95 = x86._super;
  Val x96 = x95[0]._super;
  Val x97 = x95[1]._super;
  Val x98 = x95[2]._super;
  Val x99 = x95[3]._super;
  Val x100 = x95[4]._super;
  Val x101 = x95[5]._super;
  Val x102 = x95[6]._super;
  Val x103 = x95[7]._super;
  Val x104 = x95[8]._super;
  Val x105 = x95[9]._super;
  Val x106 = x95[10]._super;
  Val x107 = x95[11]._super;
  Val x108 = x95[12]._super;
  Val x109 = x95[13]._super;
  Val x110 = x95[14]._super;
  Val x111 = x95[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // equal_word(zirgen/circuit/keccak/keccak.zir:1036)
  Val x112 = ((((((x96 + (x97 * Val(2))) + (x98 * Val(4))) + (x99 * Val(8))) + (x100 * Val(16))) +
               (x101 * Val(32))) +
              (x102 * Val(64)));
  Val x113 = ((((((x112 + (x103 * Val(128))) + (x104 * Val(256))) + (x105 * Val(512))) +
                (x106 * Val(1024))) +
               (x107 * Val(2048))) +
              (x108 * Val(4096)));
  // equal_word(zirgen/circuit/keccak/keccak.zir:1028)
  NondetRegStruct16Array x114 = x88._super;
  Val x115 = x114[0]._super;
  Val x116 = x114[1]._super;
  Val x117 = x114[2]._super;
  Val x118 = x114[3]._super;
  Val x119 = x114[4]._super;
  Val x120 = x114[5]._super;
  Val x121 = x114[6]._super;
  Val x122 = x114[7]._super;
  Val x123 = x114[8]._super;
  Val x124 = x114[9]._super;
  Val x125 = x114[10]._super;
  Val x126 = x114[11]._super;
  Val x127 = x114[12]._super;
  Val x128 = x114[13]._super;
  Val x129 = x114[14]._super;
  Val x130 = x114[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // equal_word(zirgen/circuit/keccak/keccak.zir:1036)
  Val x131 =
      ((((((x115 + (x116 * Val(2))) + (x117 * Val(4))) + (x118 * Val(8))) + (x119 * Val(16))) +
        (x120 * Val(32))) +
       (x121 * Val(64)));
  Val x132 = ((((((x131 + (x122 * Val(128))) + (x123 * Val(256))) + (x124 * Val(512))) +
                (x125 * Val(1024))) +
               (x126 * Val(2048))) +
              (x127 * Val(4096)));
  // equal_word(zirgen/circuit/keccak/keccak.zir:1030)
  NondetRegStruct16Array x133 = x90._super;
  Val x134 = x133[0]._super;
  Val x135 = x133[1]._super;
  Val x136 = x133[2]._super;
  Val x137 = x133[3]._super;
  Val x138 = x133[4]._super;
  Val x139 = x133[5]._super;
  Val x140 = x133[6]._super;
  Val x141 = x133[7]._super;
  Val x142 = x133[8]._super;
  Val x143 = x133[9]._super;
  Val x144 = x133[10]._super;
  Val x145 = x133[11]._super;
  Val x146 = x133[12]._super;
  Val x147 = x133[13]._super;
  Val x148 = x133[14]._super;
  Val x149 = x133[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // equal_word(zirgen/circuit/keccak/keccak.zir:1036)
  Val x150 =
      ((((((x134 + (x135 * Val(2))) + (x136 * Val(4))) + (x137 * Val(8))) + (x138 * Val(16))) +
        (x139 * Val(32))) +
       (x140 * Val(64)));
  Val x151 = ((((((x150 + (x141 * Val(128))) + (x142 * Val(256))) + (x143 * Val(512))) +
                (x144 * Val(1024))) +
               (x145 * Val(2048))) +
              (x146 * Val(4096)));
  // equal_word(zirgen/circuit/keccak/keccak.zir:1032)
  NondetRegStruct16Array x152 = x92._super;
  Val x153 = x152[0]._super;
  Val x154 = x152[1]._super;
  Val x155 = x152[2]._super;
  Val x156 = x152[3]._super;
  Val x157 = x152[4]._super;
  Val x158 = x152[5]._super;
  Val x159 = x152[6]._super;
  Val x160 = x152[7]._super;
  Val x161 = x152[8]._super;
  Val x162 = x152[9]._super;
  Val x163 = x152[10]._super;
  Val x164 = x152[11]._super;
  Val x165 = x152[12]._super;
  Val x166 = x152[13]._super;
  Val x167 = x152[14]._super;
  Val x168 = x152[15]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // equal_word(zirgen/circuit/keccak/keccak.zir:1036)
  Val x169 =
      ((((((x153 + (x154 * Val(2))) + (x155 * Val(4))) + (x156 * Val(8))) + (x157 * Val(16))) +
        (x158 * Val(32))) +
       (x159 * Val(64)));
  Val x170 = ((((((x169 + (x160 * Val(128))) + (x161 * Val(256))) + (x162 * Val(512))) +
                (x163 * Val(1024))) +
               (x164 * Val(2048))) +
              (x165 * Val(4096)));
  WriteMemoryStruct x171 = exec_WriteMemory(
      ctx,
      x93,
      MemDigestStruct{
          ._super =
              Val4Array{
                  (((x113 + (x109 * Val(8192))) + (x110 * Val(16384))) + (x111 * Val(32768))),
                  (((x132 + (x128 * Val(8192))) + (x129 * Val(16384))) + (x130 * Val(32768))),
                  (((x151 + (x147 * Val(8192))) + (x148 * Val(16384))) + (x149 * Val(32768))),
                  (((x170 + (x166 * Val(8192))) + (x167 * Val(16384))) + (x168 * Val(32768)))}},
      LAYOUT_LOOKUP(layout1, _0));
  // equal_word(zirgen/circuit/keccak/keccak.zir:1039)
  EQZ((x6 - x96), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x7 - x97), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x8 - x98), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x9 - x99), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x10 - x100), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x11 - x101), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x12 - x102), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x13 - x103), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x14 - x104), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x15 - x105), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x16 - x106), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x17 - x107), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x18 - x108), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x19 - x109), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x20 - x110), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  EQZ((x21 - x111), "equal_word(zirgen/circuit/keccak/keccak.zir:1039)");
  // equal_word(zirgen/circuit/keccak/keccak.zir:1041)
  EQZ((x22 - x115), "equal_word(zirgen/circuit/keccak/keccak.zir:1041)");
  EQZ((x23 - x116), "equal_word(zirgen/circuit/keccak/keccak.zir:1041)");
  EQZ((x24 - x117), "equal_word(zirgen/circuit/keccak/keccak.zir:1041)");
  EQZ((x25 - x118), "equal_word(zirgen/circuit/keccak/keccak.zir:1041)");
  EQZ((x26 - x119), "equal_word(zirgen/circuit/keccak/keccak.zir:1041)");
  EQZ((x27 - x120), "equal_word(zirgen/circuit/keccak/keccak.zir:1041)");
  // equal_word(zirgen/circuit/keccak/keccak.zir:1043)
  EQZ((x34 - x121), "equal_word(zirgen/circuit/keccak/keccak.zir:1043)");
  EQZ((x35 - x122), "equal_word(zirgen/circuit/keccak/keccak.zir:1043)");
  EQZ((x36 - x123), "equal_word(zirgen/circuit/keccak/keccak.zir:1043)");
  EQZ((x37 - x124), "equal_word(zirgen/circuit/keccak/keccak.zir:1043)");
  EQZ((x38 - x125), "equal_word(zirgen/circuit/keccak/keccak.zir:1043)");
  EQZ((x39 - x126), "equal_word(zirgen/circuit/keccak/keccak.zir:1043)");
  EQZ((x40 - x127), "equal_word(zirgen/circuit/keccak/keccak.zir:1043)");
  EQZ((x41 - x128), "equal_word(zirgen/circuit/keccak/keccak.zir:1043)");
  EQZ((x42 - x129), "equal_word(zirgen/circuit/keccak/keccak.zir:1043)");
  EQZ((x43 - x130), "equal_word(zirgen/circuit/keccak/keccak.zir:1043)");
  // equal_word(zirgen/circuit/keccak/keccak.zir:1045)
  EQZ((x44 - x134), "equal_word(zirgen/circuit/keccak/keccak.zir:1045)");
  EQZ((x45 - x135), "equal_word(zirgen/circuit/keccak/keccak.zir:1045)");
  EQZ((x46 - x136), "equal_word(zirgen/circuit/keccak/keccak.zir:1045)");
  EQZ((x47 - x137), "equal_word(zirgen/circuit/keccak/keccak.zir:1045)");
  EQZ((x48 - x138), "equal_word(zirgen/circuit/keccak/keccak.zir:1045)");
  EQZ((x49 - x139), "equal_word(zirgen/circuit/keccak/keccak.zir:1045)");
  EQZ((x50 - x140), "equal_word(zirgen/circuit/keccak/keccak.zir:1045)");
  EQZ((x51 - x141), "equal_word(zirgen/circuit/keccak/keccak.zir:1045)");
  EQZ((x52 - x142), "equal_word(zirgen/circuit/keccak/keccak.zir:1045)");
  EQZ((x53 - x143), "equal_word(zirgen/circuit/keccak/keccak.zir:1045)");
  EQZ((x54 - x144), "equal_word(zirgen/circuit/keccak/keccak.zir:1045)");
  // equal_word(zirgen/circuit/keccak/keccak.zir:1047)
  EQZ((x61 - x145), "equal_word(zirgen/circuit/keccak/keccak.zir:1047)");
  EQZ((x62 - x146), "equal_word(zirgen/circuit/keccak/keccak.zir:1047)");
  EQZ((x63 - x147), "equal_word(zirgen/circuit/keccak/keccak.zir:1047)");
  EQZ((x64 - x148), "equal_word(zirgen/circuit/keccak/keccak.zir:1047)");
  EQZ((x65 - x149), "equal_word(zirgen/circuit/keccak/keccak.zir:1047)");
  // equal_word(zirgen/circuit/keccak/keccak.zir:1049)
  EQZ((x66 - x153), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x67 - x154), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x68 - x155), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x69 - x156), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x70 - x157), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x71 - x158), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x72 - x159), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x73 - x160), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x74 - x161), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x75 - x162), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x76 - x163), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x77 - x164), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x78 - x165), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x79 - x166), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x80 - x167), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  EQZ((x81 - x168), "equal_word(zirgen/circuit/keccak/keccak.zir:1049)");
  // equal_word(zirgen/circuit/keccak/keccak.zir:1052)
  BoundLayout<EqualWord_3_Arm1_SuperLayout> x172 = LAYOUT_LOOKUP(LAYOUT_LOOKUP(layout1, nxt), arm1);
  // equal_word(zirgen/circuit/keccak/keccak.zir:1065)
  BoundLayout<EqualWord_3_Arm1_Super_SuperLayout> x173 = LAYOUT_LOOKUP(x172, _super);
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // equal_word(zirgen/circuit/keccak/keccak.zir:1054)
  Val x174 = INVOKE_EXTERN(ctx, readInput);
  NondetRegStruct x175 = exec_NondetReg(ctx, x174, LAYOUT_LOOKUP(x172, blk));
  Val x176 = x175._super;
  // equal_word(zirgen/circuit/keccak/keccak.zir:1055)
  NondetRegStruct x177 = exec_NondetReg(ctx, inv(x176), LAYOUT_LOOKUP(x172, invBlk));
  // equal_word(zirgen/circuit/keccak/keccak.zir:1056)
  NondetRegStruct x178 = exec_Reg(ctx, (x176 * x177._super), LAYOUT_LOOKUP(x172, prod));
  Val x179 = x178._super;
  // equal_word(zirgen/circuit/keccak/keccak.zir:1057)
  Val x180 = (Val(1) - x179);
  EQZ((x176 * x180), "equal_word(zirgen/circuit/keccak/keccak.zir:1057)");
  // readInput(zirgen/circuit/keccak/keccak.zir:7)
  // equal_word(zirgen/circuit/keccak/keccak.zir:1059)
  Val x181 = INVOKE_EXTERN(ctx, readInput);
  Val x182 = INVOKE_EXTERN(ctx, readInput);
  Val x183 = INVOKE_EXTERN(ctx, readInput);
  // equal_word(zirgen/circuit/keccak/keccak.zir:1060)
  Val x184 = (x93 + Val(1));
  // equal_word(zirgen/circuit/keccak/keccak.zir:1061)
  NondetRegStruct x185 = exec_NondetReg(ctx, inv(x184), LAYOUT_LOOKUP(x172, invmidxnxt));
  // equal_word(zirgen/circuit/keccak/keccak.zir:1062)
  EQZ(((x185._super * x184) - Val(1)), "equal_word(zirgen/circuit/keccak/keccak.zir:1062)");
  // equal_word(zirgen/circuit/keccak/keccak.zir:1063)
  WriteMemoryStruct x186 =
      exec_WriteMemory(ctx,
                       x184,
                       MemDigestStruct{._super = Val4Array{x176, Val(0), Val(0), Val(0)}},
                       LAYOUT_LOOKUP(x172, _0));
  // equal_word(zirgen/circuit/keccak/keccak.zir:1065)
  BoundLayout<EqualWord_3_Arm1_SuperArm1_SuperLayout> x187 = LAYOUT_LOOKUP(x173, arm1);
  BoundLayout<Reg> x188 = LAYOUT_LOOKUP(
      LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x173, arm0), _extra0), count), _super);
  // equal_word(zirgen/circuit/keccak/keccak.zir:1067)
  Val x189 = (x184 + Val(1));
  // equal_word(zirgen/circuit/keccak/keccak.zir:1072)
  Val x190 = (x189 + Val(1));
  Val5Array x191;
  if (to_size_t(x179)) {
    // equal_word(zirgen/circuit/keccak/keccak.zir:1065)
    STORE(x188, Val(0));
    EQZ(LOAD(x188, 0), "equal_word(zirgen/circuit/keccak/keccak.zir:1065)");
    x191 = Val5Array{Val(0), Val(15), Val(0), x176, x184};
  } else if (to_size_t(x180)) {
    // equal_word(zirgen/circuit/keccak/keccak.zir:1068)
    NondetRegStruct x192 = exec_NondetReg(ctx, inv(x189), LAYOUT_LOOKUP(x187, invmidxNN));
    // equal_word(zirgen/circuit/keccak/keccak.zir:1069)
    EQZ(((x192._super * x189) - Val(1)), "equal_word(zirgen/circuit/keccak/keccak.zir:1069)");
    // equal_word(zirgen/circuit/keccak/keccak.zir:1070)
    WriteMemoryStruct x193 =
        exec_WriteMemory(ctx,
                         x189,
                         MemDigestStruct{._super = Val4Array{Val(128), Val(0), Val(0), Val(0)}},
                         LAYOUT_LOOKUP(x187, _0));
    // equal_word(zirgen/circuit/keccak/keccak.zir:1071)
    NondetRegStruct x194 = exec_NondetReg(
        ctx, (Val(7) - (x190 - bitAnd(x190, Val(4294967288)))), LAYOUT_LOOKUP(x187, nskip));
    Val x195 = x194._super;
    // equal_word(zirgen/circuit/keccak/keccak.zir:1073)
    ToBits_3_Struct x196 = exec_ToBits_3_(ctx, x195, LAYOUT_LOOKUP(x187, unpackNskip));
    NondetRegStruct3Array x197 = x196._super;
    // equal_word(zirgen/circuit/keccak/keccak.zir:1074)
    Val x198 = (((x197[0]._super + (x197[1]._super * Val(2))) + (x197[2]._super * Val(4))) - x195);
    EQZ(x198, "equal_word(zirgen/circuit/keccak/keccak.zir:1074)");
    x191 = Val5Array{Val(4), Val(17), (x189 * Val(64)), x195, x189};
  } else {
    assert(0 && "Reached unreachable mux arm");
  }
  // equal_word(zirgen/circuit/keccak/keccak.zir:1079)
  Val22Array x199 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x200 =
      exec_RetTuple(ctx,
                    x199,
                    x199,
                    x199,
                    Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                    x199,
                    x199,
                    x191[0],
                    x191[1],
                    x191[2],
                    x191[3],
                    x191[4],
                    LAYOUT_LOOKUP(layout1, _super));
  return x200;
}
RetTupleStruct
execSha256init_1_(ExecContext& ctx, RetTupleStruct arg0, BoundLayout<Sha256init_1_Layout> layout1) {
  // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:422)
  BoundLayout<Sha256init_1__SuperLayout> x2 = LAYOUT_LOOKUP(layout1, _super);
  // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:413)
  ToBits_16_Struct x3 = exec_ToBits_16_(ctx, Val(62778), LAYOUT_LOOKUP(layout1, lowA));
  // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:414)
  ToBits_16_Struct x4 = exec_ToBits_16_(ctx, Val(42319), LAYOUT_LOOKUP(layout1, highA));
  // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:413)
  NondetRegStruct16Array x5 = x3._super;
  // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:414)
  NondetRegStruct16Array x6 = x4._super;
  // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:417)
  ToBits_16_Struct x7 = exec_ToBits_16_(ctx, Val(52505), LAYOUT_LOOKUP(layout1, lowE));
  // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:418)
  ToBits_16_Struct x8 = exec_ToBits_16_(ctx, Val(23520), LAYOUT_LOOKUP(layout1, highE));
  // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:417)
  NondetRegStruct16Array x9 = x7._super;
  // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:418)
  NondetRegStruct16Array x10 = x8._super;
  // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:420)
  Val22Array x11 = Val22Array{
      x5[0]._super,  x5[1]._super,  x5[2]._super,  x5[3]._super,  x5[4]._super,  x5[5]._super,
      x5[6]._super,  x5[7]._super,  x5[8]._super,  x5[9]._super,  x5[10]._super, x5[11]._super,
      x5[12]._super, x5[13]._super, x5[14]._super, x5[15]._super, x6[0]._super,  x6[1]._super,
      x6[2]._super,  x6[3]._super,  x6[4]._super,  x6[5]._super};
  Val22Array x12 = Val22Array{
      x6[6]._super,  x6[7]._super,  x6[8]._super,  x6[9]._super,  x6[10]._super, x6[11]._super,
      x6[12]._super, x6[13]._super, x6[14]._super, x6[15]._super, x9[0]._super,  x9[1]._super,
      x9[2]._super,  x9[3]._super,  x9[4]._super,  x9[5]._super,  x9[6]._super,  x9[7]._super,
      x9[8]._super,  x9[9]._super,  x9[10]._super, x9[11]._super};
  Val22Array x13 =
      Val22Array{x9[12]._super,  x9[13]._super,  x9[14]._super,  x9[15]._super,  x10[0]._super,
                 x10[1]._super,  x10[2]._super,  x10[3]._super,  x10[4]._super,  x10[5]._super,
                 x10[6]._super,  x10[7]._super,  x10[8]._super,  x10[9]._super,  x10[10]._super,
                 x10[11]._super, x10[12]._super, x10[13]._super, x10[14]._super, x10[15]._super,
                 Val(0),         Val(0)};
  // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:423)
  Val24Array x14 = Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  Val22Array x15 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:411)
  Val x16 = arg0.midx._super;
  if (to_size_t(Val(1))) {
    // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:423)
    RetTupleStruct x17 = exec_RetTuple(ctx,
                                       x11,
                                       x12,
                                       x13,
                                       x14,
                                       x15,
                                       x15,
                                       Val(6),
                                       Val(17),
                                       Val(0),
                                       Val(0),
                                       x16,
                                       LAYOUT_LOOKUP(x2, arm0));
  }
  if (to_size_t(Val(0))) {
    // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:425)
    RetTupleStruct x18 = exec_RetTuple(ctx,
                                       x11,
                                       x12,
                                       x13,
                                       x14,
                                       x15,
                                       x15,
                                       Val(0),
                                       Val(19),
                                       Val(0),
                                       Val(0),
                                       x16,
                                       LAYOUT_LOOKUP(x2, arm1));
  }
  // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:422)
  RetTupleStruct x19 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x2, _super));
  return x19;
}
RetTupleStruct
execSha256init_2_(ExecContext& ctx, RetTupleStruct arg0, BoundLayout<Sha256init_2_Layout> layout1) {
  BoundLayout<Sha256init_2__SuperLayout> x2 = LAYOUT_LOOKUP(layout1, _super);
  // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:413)
  ToBits_16_Struct x3 = exec_ToBits_16_(ctx, Val(62322), LAYOUT_LOOKUP(layout1, lowA));
  // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:414)
  ToBits_16_Struct x4 = exec_ToBits_16_(ctx, Val(15470), LAYOUT_LOOKUP(layout1, highA));
  // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:413)
  NondetRegStruct16Array x5 = x3._super;
  // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:414)
  NondetRegStruct16Array x6 = x4._super;
  // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:417)
  ToBits_16_Struct x7 = exec_ToBits_16_(ctx, Val(55723), LAYOUT_LOOKUP(layout1, lowE));
  // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:418)
  ToBits_16_Struct x8 = exec_ToBits_16_(ctx, Val(8067), LAYOUT_LOOKUP(layout1, highE));
  // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:417)
  NondetRegStruct16Array x9 = x7._super;
  // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:418)
  NondetRegStruct16Array x10 = x8._super;
  // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:420)
  Val22Array x11 = Val22Array{
      x5[0]._super,  x5[1]._super,  x5[2]._super,  x5[3]._super,  x5[4]._super,  x5[5]._super,
      x5[6]._super,  x5[7]._super,  x5[8]._super,  x5[9]._super,  x5[10]._super, x5[11]._super,
      x5[12]._super, x5[13]._super, x5[14]._super, x5[15]._super, x6[0]._super,  x6[1]._super,
      x6[2]._super,  x6[3]._super,  x6[4]._super,  x6[5]._super};
  Val22Array x12 = Val22Array{
      x6[6]._super,  x6[7]._super,  x6[8]._super,  x6[9]._super,  x6[10]._super, x6[11]._super,
      x6[12]._super, x6[13]._super, x6[14]._super, x6[15]._super, x9[0]._super,  x9[1]._super,
      x9[2]._super,  x9[3]._super,  x9[4]._super,  x9[5]._super,  x9[6]._super,  x9[7]._super,
      x9[8]._super,  x9[9]._super,  x9[10]._super, x9[11]._super};
  Val22Array x13 =
      Val22Array{x9[12]._super,  x9[13]._super,  x9[14]._super,  x9[15]._super,  x10[0]._super,
                 x10[1]._super,  x10[2]._super,  x10[3]._super,  x10[4]._super,  x10[5]._super,
                 x10[6]._super,  x10[7]._super,  x10[8]._super,  x10[9]._super,  x10[10]._super,
                 x10[11]._super, x10[12]._super, x10[13]._super, x10[14]._super, x10[15]._super,
                 Val(0),         Val(0)};
  // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:423)
  Val24Array x14 = Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  Val22Array x15 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:411)
  Val x16 = arg0.midx._super;
  if (to_size_t(Val(1))) {
    // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:423)
    RetTupleStruct x17 = exec_RetTuple(ctx,
                                       x11,
                                       x12,
                                       x13,
                                       x14,
                                       x15,
                                       x15,
                                       Val(7),
                                       Val(17),
                                       Val(0),
                                       Val(0),
                                       x16,
                                       LAYOUT_LOOKUP(x2, arm0));
  }
  if (to_size_t(Val(0))) {
    // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:425)
    RetTupleStruct x18 = exec_RetTuple(ctx,
                                       x11,
                                       x12,
                                       x13,
                                       x14,
                                       x15,
                                       x15,
                                       Val(0),
                                       Val(19),
                                       Val(0),
                                       Val(0),
                                       x16,
                                       LAYOUT_LOOKUP(x2, arm1));
  }
  // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:422)
  RetTupleStruct x19 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x2, _super));
  return x19;
}
RetTupleStruct
execSha256init_3_(ExecContext& ctx, RetTupleStruct arg0, BoundLayout<Sha256init_3_Layout> layout1) {
  BoundLayout<Sha256init_3__SuperLayout> x2 = LAYOUT_LOOKUP(layout1, _super);
  // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:413)
  ToBits_16_Struct x3 = exec_ToBits_16_(ctx, Val(44677), LAYOUT_LOOKUP(layout1, lowA));
  // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:414)
  ToBits_16_Struct x4 = exec_ToBits_16_(ctx, Val(47975), LAYOUT_LOOKUP(layout1, highA));
  // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:413)
  NondetRegStruct16Array x5 = x3._super;
  // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:414)
  NondetRegStruct16Array x6 = x4._super;
  // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:417)
  ToBits_16_Struct x7 = exec_ToBits_16_(ctx, Val(26764), LAYOUT_LOOKUP(layout1, lowE));
  // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:418)
  ToBits_16_Struct x8 = exec_ToBits_16_(ctx, Val(39685), LAYOUT_LOOKUP(layout1, highE));
  // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:417)
  NondetRegStruct16Array x9 = x7._super;
  // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:418)
  NondetRegStruct16Array x10 = x8._super;
  // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:420)
  Val22Array x11 = Val22Array{
      x5[0]._super,  x5[1]._super,  x5[2]._super,  x5[3]._super,  x5[4]._super,  x5[5]._super,
      x5[6]._super,  x5[7]._super,  x5[8]._super,  x5[9]._super,  x5[10]._super, x5[11]._super,
      x5[12]._super, x5[13]._super, x5[14]._super, x5[15]._super, x6[0]._super,  x6[1]._super,
      x6[2]._super,  x6[3]._super,  x6[4]._super,  x6[5]._super};
  Val22Array x12 = Val22Array{
      x6[6]._super,  x6[7]._super,  x6[8]._super,  x6[9]._super,  x6[10]._super, x6[11]._super,
      x6[12]._super, x6[13]._super, x6[14]._super, x6[15]._super, x9[0]._super,  x9[1]._super,
      x9[2]._super,  x9[3]._super,  x9[4]._super,  x9[5]._super,  x9[6]._super,  x9[7]._super,
      x9[8]._super,  x9[9]._super,  x9[10]._super, x9[11]._super};
  Val22Array x13 =
      Val22Array{x9[12]._super,  x9[13]._super,  x9[14]._super,  x9[15]._super,  x10[0]._super,
                 x10[1]._super,  x10[2]._super,  x10[3]._super,  x10[4]._super,  x10[5]._super,
                 x10[6]._super,  x10[7]._super,  x10[8]._super,  x10[9]._super,  x10[10]._super,
                 x10[11]._super, x10[12]._super, x10[13]._super, x10[14]._super, x10[15]._super,
                 Val(0),         Val(0)};
  // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:423)
  Val24Array x14 = Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  Val22Array x15 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:411)
  Val x16 = arg0.midx._super;
  if (to_size_t(Val(1))) {
    // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:423)
    RetTupleStruct x17 = exec_RetTuple(ctx,
                                       x11,
                                       x12,
                                       x13,
                                       x14,
                                       x15,
                                       x15,
                                       Val(8),
                                       Val(17),
                                       Val(0),
                                       Val(0),
                                       x16,
                                       LAYOUT_LOOKUP(x2, arm0));
  }
  if (to_size_t(Val(0))) {
    // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:425)
    RetTupleStruct x18 = exec_RetTuple(ctx,
                                       x11,
                                       x12,
                                       x13,
                                       x14,
                                       x15,
                                       x15,
                                       Val(0),
                                       Val(19),
                                       Val(0),
                                       Val(0),
                                       x16,
                                       LAYOUT_LOOKUP(x2, arm1));
  }
  // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:422)
  RetTupleStruct x19 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x2, _super));
  return x19;
}
RetTupleStruct
execSha256init_4_(ExecContext& ctx, RetTupleStruct arg0, BoundLayout<Sha256init_4_Layout> layout1) {
  BoundLayout<Sha256init_4__SuperLayout> x2 = LAYOUT_LOOKUP(layout1, _super);
  // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:413)
  ToBits_16_Struct x3 = exec_ToBits_16_(ctx, Val(58983), LAYOUT_LOOKUP(layout1, lowA));
  // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:414)
  ToBits_16_Struct x4 = exec_ToBits_16_(ctx, Val(27145), LAYOUT_LOOKUP(layout1, highA));
  // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:413)
  NondetRegStruct16Array x5 = x3._super;
  // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:414)
  NondetRegStruct16Array x6 = x4._super;
  // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:417)
  ToBits_16_Struct x7 = exec_ToBits_16_(ctx, Val(21119), LAYOUT_LOOKUP(layout1, lowE));
  // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:418)
  ToBits_16_Struct x8 = exec_ToBits_16_(ctx, Val(20750), LAYOUT_LOOKUP(layout1, highE));
  // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:417)
  NondetRegStruct16Array x9 = x7._super;
  // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:418)
  NondetRegStruct16Array x10 = x8._super;
  // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:420)
  Val22Array x11 = Val22Array{
      x5[0]._super,  x5[1]._super,  x5[2]._super,  x5[3]._super,  x5[4]._super,  x5[5]._super,
      x5[6]._super,  x5[7]._super,  x5[8]._super,  x5[9]._super,  x5[10]._super, x5[11]._super,
      x5[12]._super, x5[13]._super, x5[14]._super, x5[15]._super, x6[0]._super,  x6[1]._super,
      x6[2]._super,  x6[3]._super,  x6[4]._super,  x6[5]._super};
  Val22Array x12 = Val22Array{
      x6[6]._super,  x6[7]._super,  x6[8]._super,  x6[9]._super,  x6[10]._super, x6[11]._super,
      x6[12]._super, x6[13]._super, x6[14]._super, x6[15]._super, x9[0]._super,  x9[1]._super,
      x9[2]._super,  x9[3]._super,  x9[4]._super,  x9[5]._super,  x9[6]._super,  x9[7]._super,
      x9[8]._super,  x9[9]._super,  x9[10]._super, x9[11]._super};
  Val22Array x13 =
      Val22Array{x9[12]._super,  x9[13]._super,  x9[14]._super,  x9[15]._super,  x10[0]._super,
                 x10[1]._super,  x10[2]._super,  x10[3]._super,  x10[4]._super,  x10[5]._super,
                 x10[6]._super,  x10[7]._super,  x10[8]._super,  x10[9]._super,  x10[10]._super,
                 x10[11]._super, x10[12]._super, x10[13]._super, x10[14]._super, x10[15]._super,
                 Val(0),         Val(0)};
  // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:423)
  Val24Array x14 = Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  Val22Array x15 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:411)
  Val x16 = arg0.midx._super;
  if (to_size_t(Val(0))) {
    // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:423)
    RetTupleStruct x17 = exec_RetTuple(ctx,
                                       x11,
                                       x12,
                                       x13,
                                       x14,
                                       x15,
                                       x15,
                                       Val(9),
                                       Val(17),
                                       Val(0),
                                       Val(0),
                                       x16,
                                       LAYOUT_LOOKUP(x2, arm0));
  }
  if (to_size_t(Val(1))) {
    // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:425)
    RetTupleStruct x18 = exec_RetTuple(ctx,
                                       x11,
                                       x12,
                                       x13,
                                       x14,
                                       x15,
                                       x15,
                                       Val(0),
                                       Val(19),
                                       Val(0),
                                       Val(0),
                                       x16,
                                       LAYOUT_LOOKUP(x2, arm1));
  }
  // sha256init(zirgen/circuit/keccak/sha256_for_keccak.zir:422)
  RetTupleStruct x19 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x2, _super));
  return x19;
}
RetTupleStruct execSha256fini_5_(ExecContext& ctx,
                                 RetTupleStruct arg0,
                                 BoundLayout<RetTupleLayout> arg1,
                                 BoundLayout<Sha256fini_5_Layout> layout2) {
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:443)
  BoundLayout<Sha256fini_5__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:430)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:431)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:432)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:433)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:434)
  RetTupleStruct x8 = back_RetTuple(ctx, 68, arg1);
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:436)
  NondetRegStruct22Array x9 = x7.arrA;
  NondetRegStruct22Array x10 = x7.arrB;
  Pack2Struct x11 = execPack2(
      ctx,
      Val32Array{x9[0]._super,  x9[1]._super,  x9[2]._super,  x9[3]._super,  x9[4]._super,
                 x9[5]._super,  x9[6]._super,  x9[7]._super,  x9[8]._super,  x9[9]._super,
                 x9[10]._super, x9[11]._super, x9[12]._super, x9[13]._super, x9[14]._super,
                 x9[15]._super, x9[16]._super, x9[17]._super, x9[18]._super, x9[19]._super,
                 x9[20]._super, x9[21]._super, x10[0]._super, x10[1]._super, x10[2]._super,
                 x10[3]._super, x10[4]._super, x10[5]._super, x10[6]._super, x10[7]._super,
                 x10[8]._super, x10[9]._super},
      LAYOUT_LOOKUP(layout2, _0));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  NondetRegStruct22Array x12 = x8.arrA;
  NondetRegStruct22Array x13 = x8.arrB;
  Pack2Struct x14 = execPack2(
      ctx,
      Val32Array{x12[0]._super,  x12[1]._super,  x12[2]._super,  x12[3]._super,  x12[4]._super,
                 x12[5]._super,  x12[6]._super,  x12[7]._super,  x12[8]._super,  x12[9]._super,
                 x12[10]._super, x12[11]._super, x12[12]._super, x12[13]._super, x12[14]._super,
                 x12[15]._super, x12[16]._super, x12[17]._super, x12[18]._super, x12[19]._super,
                 x12[20]._super, x12[21]._super, x13[0]._super,  x13[1]._super,  x13[2]._super,
                 x13[3]._super,  x13[4]._super,  x13[5]._super,  x13[6]._super,  x13[7]._super,
                 x13[8]._super,  x13[9]._super},
      LAYOUT_LOOKUP(layout2, _1));
  TwoShortsStruct x15 = x11._super;
  TwoShortsStruct x16 = x14._super;
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:437)
  Concatenate_NondetReg__16__16_Struct x17 = execUnpackWithCarry(
      ctx, (x15.low + x16.low), (x15.high + x16.high), LAYOUT_LOOKUP(layout2, newA));
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:438)
  NondetRegStruct22Array x18 = x7.arrC;
  Pack2Struct x19 = execPack2(
      ctx,
      Val32Array{x10[10]._super, x10[11]._super, x10[12]._super, x10[13]._super, x10[14]._super,
                 x10[15]._super, x10[16]._super, x10[17]._super, x10[18]._super, x10[19]._super,
                 x10[20]._super, x10[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super,  x18[10]._super, x18[11]._super, x18[12]._super,
                 x18[13]._super, x18[14]._super, x18[15]._super, x18[16]._super, x18[17]._super,
                 x18[18]._super, x18[19]._super},
      LAYOUT_LOOKUP(layout2, _2));
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  NondetRegStruct22Array x20 = x8.arrC;
  Pack2Struct x21 = execPack2(
      ctx,
      Val32Array{x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x20[0]._super,  x20[1]._super,  x20[2]._super,
                 x20[3]._super,  x20[4]._super,  x20[5]._super,  x20[6]._super,  x20[7]._super,
                 x20[8]._super,  x20[9]._super,  x20[10]._super, x20[11]._super, x20[12]._super,
                 x20[13]._super, x20[14]._super, x20[15]._super, x20[16]._super, x20[17]._super,
                 x20[18]._super, x20[19]._super},
      LAYOUT_LOOKUP(layout2, _3));
  TwoShortsStruct x22 = x19._super;
  TwoShortsStruct x23 = x21._super;
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:439)
  Concatenate_NondetReg__16__16_Struct x24 = execUnpackWithCarry(
      ctx, (x22.low + x23.low), (x22.high + x23.high), LAYOUT_LOOKUP(layout2, newE));
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:437)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x25 = x17._super;
  Val x26 = x25[0]._super;
  Val x27 = x25[1]._super;
  Val x28 = x25[2]._super;
  Val x29 = x25[3]._super;
  Val x30 = x25[4]._super;
  Val x31 = x25[5]._super;
  Val x32 = x25[6]._super;
  Val x33 = x25[7]._super;
  Val x34 = x25[8]._super;
  Val x35 = x25[9]._super;
  Val x36 = x25[10]._super;
  Val x37 = x25[11]._super;
  Val x38 = x25[12]._super;
  Val x39 = x25[13]._super;
  Val x40 = x25[14]._super;
  Val x41 = x25[15]._super;
  Val x42 = x25[16]._super;
  Val x43 = x25[17]._super;
  Val x44 = x25[18]._super;
  Val x45 = x25[19]._super;
  Val x46 = x25[20]._super;
  Val x47 = x25[21]._super;
  Val x48 = x25[22]._super;
  Val x49 = x25[23]._super;
  Val x50 = x25[24]._super;
  Val x51 = x25[25]._super;
  Val x52 = x25[26]._super;
  Val x53 = x25[27]._super;
  Val x54 = x25[28]._super;
  Val x55 = x25[29]._super;
  Val x56 = x25[30]._super;
  Val x57 = x25[31]._super;
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:439)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x58 = x24._super;
  Val x59 = x58[0]._super;
  Val x60 = x58[1]._super;
  Val x61 = x58[2]._super;
  Val x62 = x58[3]._super;
  Val x63 = x58[4]._super;
  Val x64 = x58[5]._super;
  Val x65 = x58[6]._super;
  Val x66 = x58[7]._super;
  Val x67 = x58[8]._super;
  Val x68 = x58[9]._super;
  Val x69 = x58[10]._super;
  Val x70 = x58[11]._super;
  Val x71 = x58[12]._super;
  Val x72 = x58[13]._super;
  Val x73 = x58[14]._super;
  Val x74 = x58[15]._super;
  Val x75 = x58[16]._super;
  Val x76 = x58[17]._super;
  Val x77 = x58[18]._super;
  Val x78 = x58[19]._super;
  Val x79 = x58[20]._super;
  Val x80 = x58[21]._super;
  Val x81 = x58[22]._super;
  Val x82 = x58[23]._super;
  Val x83 = x58[24]._super;
  Val x84 = x58[25]._super;
  Val x85 = x58[26]._super;
  Val x86 = x58[27]._super;
  Val x87 = x58[28]._super;
  Val x88 = x58[29]._super;
  Val x89 = x58[30]._super;
  Val x90 = x58[31]._super;
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:443)
  BoundLayout<Sha256fini_5_Arm1_SuperLayout> x91 = LAYOUT_LOOKUP(x3, arm1);
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:430)
  NondetRegStruct24Array x92 = x4.arrD;
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:440)
  Val22Array x93 = Val22Array{x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36,
                              x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47};
  Val22Array x94 = Val22Array{x48, x49, x50, x51, x52, x53, x54, x55, x56, x57, x59,
                              x60, x61, x62, x63, x64, x65, x66, x67, x68, x69, x70};
  Val22Array x95 = Val22Array{x71, x72, x73, x74, x75, x76, x77, x78, x79, x80,    x81,
                              x82, x83, x84, x85, x86, x87, x88, x89, x90, Val(0), Val(0)};
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:430)
  Val24Array x96 =
      Val24Array{x92[0]._super,  x92[1]._super,  x92[2]._super,  x92[3]._super,  x92[4]._super,
                 x92[5]._super,  x92[6]._super,  x92[7]._super,  x92[8]._super,  x92[9]._super,
                 x92[10]._super, x92[11]._super, x92[12]._super, x92[13]._super, x92[14]._super,
                 x92[15]._super, x92[16]._super, x92[17]._super, x92[18]._super, x92[19]._super,
                 x92[20]._super, x92[21]._super, x92[22]._super, x92[23]._super};
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:444)
  Val22Array x97 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:430)
  Val x98 = x4.rnd._super;
  Val x99 = x4.blk._super;
  Val x100 = x4.midx._super;
  if (to_size_t(Val(1))) {
    // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:444)
    RetTupleStruct x101 = exec_RetTuple(ctx,
                                        x93,
                                        x94,
                                        x95,
                                        x96,
                                        x97,
                                        x97,
                                        Val(10),
                                        Val(17),
                                        x98,
                                        x99,
                                        x100,
                                        LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:443)
  BoundLayout<Sha256fini_5_Arm1_Super_SuperLayout> x102 = LAYOUT_LOOKUP(x91, _super);
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:447)
  Val x103 = ((x100 + Val(1)) - x99);
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:451)
  BoundLayout<Sha256fini_5_Arm1_SuperArm1_SuperLayout> x104 = LAYOUT_LOOKUP(x102, arm1);
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:455)
  NondetRegStruct22Array x105 = x4.arrA;
  NondetRegStruct22Array x106 = x4.arrB;
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:456)
  NondetRegStruct22Array x107 = x5.arrA;
  NondetRegStruct22Array x108 = x5.arrB;
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:457)
  NondetRegStruct22Array x109 = x6.arrA;
  NondetRegStruct22Array x110 = x6.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:459)
  NondetRegStruct22Array x111 = x4.arrC;
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:460)
  NondetRegStruct22Array x112 = x5.arrC;
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:461)
  NondetRegStruct22Array x113 = x6.arrC;
  if (to_size_t(Val(0))) {
    // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:448)
    NondetRegStruct x114 = exec_NondetReg(ctx, inv(x103), LAYOUT_LOOKUP(x91, invMoreInput));
    // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:449)
    Val x115 = (x103 * x114._super);
    // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:450)
    Val x116 = (Val(1) - x115);
    EQZ((x103 * x116), "sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:450)");
    if (to_size_t(x115)) {
      // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:452)
      RetTupleStruct x117 = exec_RetTuple(ctx,
                                          x93,
                                          x94,
                                          x95,
                                          x96,
                                          x97,
                                          x97,
                                          Val(0),
                                          Val(19),
                                          x98,
                                          x99,
                                          x100,
                                          LAYOUT_LOOKUP(x102, arm0));
    }
    if (to_size_t(x116)) {
      // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:454)
      Pack2Struct x118 = execPack2(ctx,
                                   Val32Array{x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36,
                                              x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,
                                              x48, x49, x50, x51, x52, x53, x54, x55, x56, x57},
                                   LAYOUT_LOOKUP(x104, fa));
      // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:455)
      Pack2Struct x119 =
          execPack2(ctx,
                    Val32Array{x105[0]._super,  x105[1]._super,  x105[2]._super,  x105[3]._super,
                               x105[4]._super,  x105[5]._super,  x105[6]._super,  x105[7]._super,
                               x105[8]._super,  x105[9]._super,  x105[10]._super, x105[11]._super,
                               x105[12]._super, x105[13]._super, x105[14]._super, x105[15]._super,
                               x105[16]._super, x105[17]._super, x105[18]._super, x105[19]._super,
                               x105[20]._super, x105[21]._super, x106[0]._super,  x106[1]._super,
                               x106[2]._super,  x106[3]._super,  x106[4]._super,  x106[5]._super,
                               x106[6]._super,  x106[7]._super,  x106[8]._super,  x106[9]._super},
                    LAYOUT_LOOKUP(x104, fb));
      // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:456)
      Pack2Struct x120 =
          execPack2(ctx,
                    Val32Array{x107[0]._super,  x107[1]._super,  x107[2]._super,  x107[3]._super,
                               x107[4]._super,  x107[5]._super,  x107[6]._super,  x107[7]._super,
                               x107[8]._super,  x107[9]._super,  x107[10]._super, x107[11]._super,
                               x107[12]._super, x107[13]._super, x107[14]._super, x107[15]._super,
                               x107[16]._super, x107[17]._super, x107[18]._super, x107[19]._super,
                               x107[20]._super, x107[21]._super, x108[0]._super,  x108[1]._super,
                               x108[2]._super,  x108[3]._super,  x108[4]._super,  x108[5]._super,
                               x108[6]._super,  x108[7]._super,  x108[8]._super,  x108[9]._super},
                    LAYOUT_LOOKUP(x104, fc));
      // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:457)
      Pack2Struct x121 =
          execPack2(ctx,
                    Val32Array{x109[0]._super,  x109[1]._super,  x109[2]._super,  x109[3]._super,
                               x109[4]._super,  x109[5]._super,  x109[6]._super,  x109[7]._super,
                               x109[8]._super,  x109[9]._super,  x109[10]._super, x109[11]._super,
                               x109[12]._super, x109[13]._super, x109[14]._super, x109[15]._super,
                               x109[16]._super, x109[17]._super, x109[18]._super, x109[19]._super,
                               x109[20]._super, x109[21]._super, x110[0]._super,  x110[1]._super,
                               x110[2]._super,  x110[3]._super,  x110[4]._super,  x110[5]._super,
                               x110[6]._super,  x110[7]._super,  x110[8]._super,  x110[9]._super},
                    LAYOUT_LOOKUP(x104, fd));
      // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:458)
      Pack2Struct x122 = execPack2(ctx,
                                   Val32Array{x59, x60, x61, x62, x63, x64, x65, x66, x67, x68, x69,
                                              x70, x71, x72, x73, x74, x75, x76, x77, x78, x79, x80,
                                              x81, x82, x83, x84, x85, x86, x87, x88, x89, x90},
                                   LAYOUT_LOOKUP(x104, fe));
      // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:459)
      Pack2Struct x123 =
          execPack2(ctx,
                    Val32Array{x106[10]._super, x106[11]._super, x106[12]._super, x106[13]._super,
                               x106[14]._super, x106[15]._super, x106[16]._super, x106[17]._super,
                               x106[18]._super, x106[19]._super, x106[20]._super, x106[21]._super,
                               x111[0]._super,  x111[1]._super,  x111[2]._super,  x111[3]._super,
                               x111[4]._super,  x111[5]._super,  x111[6]._super,  x111[7]._super,
                               x111[8]._super,  x111[9]._super,  x111[10]._super, x111[11]._super,
                               x111[12]._super, x111[13]._super, x111[14]._super, x111[15]._super,
                               x111[16]._super, x111[17]._super, x111[18]._super, x111[19]._super},
                    LAYOUT_LOOKUP(x104, ff));
      // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:460)
      Pack2Struct x124 =
          execPack2(ctx,
                    Val32Array{x108[10]._super, x108[11]._super, x108[12]._super, x108[13]._super,
                               x108[14]._super, x108[15]._super, x108[16]._super, x108[17]._super,
                               x108[18]._super, x108[19]._super, x108[20]._super, x108[21]._super,
                               x112[0]._super,  x112[1]._super,  x112[2]._super,  x112[3]._super,
                               x112[4]._super,  x112[5]._super,  x112[6]._super,  x112[7]._super,
                               x112[8]._super,  x112[9]._super,  x112[10]._super, x112[11]._super,
                               x112[12]._super, x112[13]._super, x112[14]._super, x112[15]._super,
                               x112[16]._super, x112[17]._super, x112[18]._super, x112[19]._super},
                    LAYOUT_LOOKUP(x104, fg));
      // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:461)
      Pack2Struct x125 =
          execPack2(ctx,
                    Val32Array{x110[10]._super, x110[11]._super, x110[12]._super, x110[13]._super,
                               x110[14]._super, x110[15]._super, x110[16]._super, x110[17]._super,
                               x110[18]._super, x110[19]._super, x110[20]._super, x110[21]._super,
                               x113[0]._super,  x113[1]._super,  x113[2]._super,  x113[3]._super,
                               x113[4]._super,  x113[5]._super,  x113[6]._super,  x113[7]._super,
                               x113[8]._super,  x113[9]._super,  x113[10]._super, x113[11]._super,
                               x113[12]._super, x113[13]._super, x113[14]._super, x113[15]._super,
                               x113[16]._super, x113[17]._super, x113[18]._super, x113[19]._super},
                    LAYOUT_LOOKUP(x104, fh));
      // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:465)
      RetTupleStruct x126 = exec_RetTuple(
          ctx,
          Val22Array{x118.high._super, x118.low._super, x119.high._super, x119.low._super,
                     x120.high._super, x120.low._super, x121.high._super, x121.low._super,
                     x122.high._super, x122.low._super, x123.high._super, x123.low._super,
                     x124.high._super, x124.low._super, x125.high._super, x125.low._super,
                     Val(0),           Val(0),          Val(0),           Val(0),
                     Val(0),           Val(0)},
          x97,
          x97,
          Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                     Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                     Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
          x97,
          x97,
          Val(13),
          Val(17),
          Val(0),
          Val(0),
          x100,
          LAYOUT_LOOKUP(x104, _super));
    }
    // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:451)
    RetTupleStruct x127 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x102, _super));
  }
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:443)
  RetTupleStruct x128 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x128;
}
RetTupleStruct execSha256fini_6_(ExecContext& ctx,
                                 RetTupleStruct arg0,
                                 BoundLayout<RetTupleLayout> arg1,
                                 BoundLayout<Sha256fini_6_Layout> layout2) {
  BoundLayout<Sha256fini_6__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:430)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:431)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:432)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:433)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:434)
  RetTupleStruct x8 = back_RetTuple(ctx, 68, arg1);
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:436)
  NondetRegStruct22Array x9 = x7.arrA;
  NondetRegStruct22Array x10 = x7.arrB;
  Pack2Struct x11 = execPack2(
      ctx,
      Val32Array{x9[0]._super,  x9[1]._super,  x9[2]._super,  x9[3]._super,  x9[4]._super,
                 x9[5]._super,  x9[6]._super,  x9[7]._super,  x9[8]._super,  x9[9]._super,
                 x9[10]._super, x9[11]._super, x9[12]._super, x9[13]._super, x9[14]._super,
                 x9[15]._super, x9[16]._super, x9[17]._super, x9[18]._super, x9[19]._super,
                 x9[20]._super, x9[21]._super, x10[0]._super, x10[1]._super, x10[2]._super,
                 x10[3]._super, x10[4]._super, x10[5]._super, x10[6]._super, x10[7]._super,
                 x10[8]._super, x10[9]._super},
      LAYOUT_LOOKUP(layout2, _0));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  NondetRegStruct22Array x12 = x8.arrA;
  NondetRegStruct22Array x13 = x8.arrB;
  Pack2Struct x14 = execPack2(
      ctx,
      Val32Array{x12[0]._super,  x12[1]._super,  x12[2]._super,  x12[3]._super,  x12[4]._super,
                 x12[5]._super,  x12[6]._super,  x12[7]._super,  x12[8]._super,  x12[9]._super,
                 x12[10]._super, x12[11]._super, x12[12]._super, x12[13]._super, x12[14]._super,
                 x12[15]._super, x12[16]._super, x12[17]._super, x12[18]._super, x12[19]._super,
                 x12[20]._super, x12[21]._super, x13[0]._super,  x13[1]._super,  x13[2]._super,
                 x13[3]._super,  x13[4]._super,  x13[5]._super,  x13[6]._super,  x13[7]._super,
                 x13[8]._super,  x13[9]._super},
      LAYOUT_LOOKUP(layout2, _1));
  TwoShortsStruct x15 = x11._super;
  TwoShortsStruct x16 = x14._super;
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:437)
  Concatenate_NondetReg__16__16_Struct x17 = execUnpackWithCarry(
      ctx, (x15.low + x16.low), (x15.high + x16.high), LAYOUT_LOOKUP(layout2, newA));
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:438)
  NondetRegStruct22Array x18 = x7.arrC;
  Pack2Struct x19 = execPack2(
      ctx,
      Val32Array{x10[10]._super, x10[11]._super, x10[12]._super, x10[13]._super, x10[14]._super,
                 x10[15]._super, x10[16]._super, x10[17]._super, x10[18]._super, x10[19]._super,
                 x10[20]._super, x10[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super,  x18[10]._super, x18[11]._super, x18[12]._super,
                 x18[13]._super, x18[14]._super, x18[15]._super, x18[16]._super, x18[17]._super,
                 x18[18]._super, x18[19]._super},
      LAYOUT_LOOKUP(layout2, _2));
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  NondetRegStruct22Array x20 = x8.arrC;
  Pack2Struct x21 = execPack2(
      ctx,
      Val32Array{x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x20[0]._super,  x20[1]._super,  x20[2]._super,
                 x20[3]._super,  x20[4]._super,  x20[5]._super,  x20[6]._super,  x20[7]._super,
                 x20[8]._super,  x20[9]._super,  x20[10]._super, x20[11]._super, x20[12]._super,
                 x20[13]._super, x20[14]._super, x20[15]._super, x20[16]._super, x20[17]._super,
                 x20[18]._super, x20[19]._super},
      LAYOUT_LOOKUP(layout2, _3));
  TwoShortsStruct x22 = x19._super;
  TwoShortsStruct x23 = x21._super;
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:439)
  Concatenate_NondetReg__16__16_Struct x24 = execUnpackWithCarry(
      ctx, (x22.low + x23.low), (x22.high + x23.high), LAYOUT_LOOKUP(layout2, newE));
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:437)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x25 = x17._super;
  Val x26 = x25[0]._super;
  Val x27 = x25[1]._super;
  Val x28 = x25[2]._super;
  Val x29 = x25[3]._super;
  Val x30 = x25[4]._super;
  Val x31 = x25[5]._super;
  Val x32 = x25[6]._super;
  Val x33 = x25[7]._super;
  Val x34 = x25[8]._super;
  Val x35 = x25[9]._super;
  Val x36 = x25[10]._super;
  Val x37 = x25[11]._super;
  Val x38 = x25[12]._super;
  Val x39 = x25[13]._super;
  Val x40 = x25[14]._super;
  Val x41 = x25[15]._super;
  Val x42 = x25[16]._super;
  Val x43 = x25[17]._super;
  Val x44 = x25[18]._super;
  Val x45 = x25[19]._super;
  Val x46 = x25[20]._super;
  Val x47 = x25[21]._super;
  Val x48 = x25[22]._super;
  Val x49 = x25[23]._super;
  Val x50 = x25[24]._super;
  Val x51 = x25[25]._super;
  Val x52 = x25[26]._super;
  Val x53 = x25[27]._super;
  Val x54 = x25[28]._super;
  Val x55 = x25[29]._super;
  Val x56 = x25[30]._super;
  Val x57 = x25[31]._super;
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:439)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x58 = x24._super;
  Val x59 = x58[0]._super;
  Val x60 = x58[1]._super;
  Val x61 = x58[2]._super;
  Val x62 = x58[3]._super;
  Val x63 = x58[4]._super;
  Val x64 = x58[5]._super;
  Val x65 = x58[6]._super;
  Val x66 = x58[7]._super;
  Val x67 = x58[8]._super;
  Val x68 = x58[9]._super;
  Val x69 = x58[10]._super;
  Val x70 = x58[11]._super;
  Val x71 = x58[12]._super;
  Val x72 = x58[13]._super;
  Val x73 = x58[14]._super;
  Val x74 = x58[15]._super;
  Val x75 = x58[16]._super;
  Val x76 = x58[17]._super;
  Val x77 = x58[18]._super;
  Val x78 = x58[19]._super;
  Val x79 = x58[20]._super;
  Val x80 = x58[21]._super;
  Val x81 = x58[22]._super;
  Val x82 = x58[23]._super;
  Val x83 = x58[24]._super;
  Val x84 = x58[25]._super;
  Val x85 = x58[26]._super;
  Val x86 = x58[27]._super;
  Val x87 = x58[28]._super;
  Val x88 = x58[29]._super;
  Val x89 = x58[30]._super;
  Val x90 = x58[31]._super;
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:443)
  BoundLayout<Sha256fini_6_Arm1_SuperLayout> x91 = LAYOUT_LOOKUP(x3, arm1);
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:430)
  NondetRegStruct24Array x92 = x4.arrD;
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:440)
  Val22Array x93 = Val22Array{x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36,
                              x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47};
  Val22Array x94 = Val22Array{x48, x49, x50, x51, x52, x53, x54, x55, x56, x57, x59,
                              x60, x61, x62, x63, x64, x65, x66, x67, x68, x69, x70};
  Val22Array x95 = Val22Array{x71, x72, x73, x74, x75, x76, x77, x78, x79, x80,    x81,
                              x82, x83, x84, x85, x86, x87, x88, x89, x90, Val(0), Val(0)};
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:430)
  Val24Array x96 =
      Val24Array{x92[0]._super,  x92[1]._super,  x92[2]._super,  x92[3]._super,  x92[4]._super,
                 x92[5]._super,  x92[6]._super,  x92[7]._super,  x92[8]._super,  x92[9]._super,
                 x92[10]._super, x92[11]._super, x92[12]._super, x92[13]._super, x92[14]._super,
                 x92[15]._super, x92[16]._super, x92[17]._super, x92[18]._super, x92[19]._super,
                 x92[20]._super, x92[21]._super, x92[22]._super, x92[23]._super};
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:444)
  Val22Array x97 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:430)
  Val x98 = x4.rnd._super;
  Val x99 = x4.blk._super;
  Val x100 = x4.midx._super;
  if (to_size_t(Val(1))) {
    // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:444)
    RetTupleStruct x101 = exec_RetTuple(ctx,
                                        x93,
                                        x94,
                                        x95,
                                        x96,
                                        x97,
                                        x97,
                                        Val(11),
                                        Val(17),
                                        x98,
                                        x99,
                                        x100,
                                        LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:443)
  BoundLayout<Sha256fini_6_Arm1_Super_SuperLayout> x102 = LAYOUT_LOOKUP(x91, _super);
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:447)
  Val x103 = ((x100 + Val(1)) - x99);
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:451)
  BoundLayout<Sha256fini_6_Arm1_SuperArm1_SuperLayout> x104 = LAYOUT_LOOKUP(x102, arm1);
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:455)
  NondetRegStruct22Array x105 = x4.arrA;
  NondetRegStruct22Array x106 = x4.arrB;
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:456)
  NondetRegStruct22Array x107 = x5.arrA;
  NondetRegStruct22Array x108 = x5.arrB;
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:457)
  NondetRegStruct22Array x109 = x6.arrA;
  NondetRegStruct22Array x110 = x6.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:459)
  NondetRegStruct22Array x111 = x4.arrC;
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:460)
  NondetRegStruct22Array x112 = x5.arrC;
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:461)
  NondetRegStruct22Array x113 = x6.arrC;
  if (to_size_t(Val(0))) {
    // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:448)
    NondetRegStruct x114 = exec_NondetReg(ctx, inv(x103), LAYOUT_LOOKUP(x91, invMoreInput));
    // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:449)
    Val x115 = (x103 * x114._super);
    // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:450)
    Val x116 = (Val(1) - x115);
    EQZ((x103 * x116), "sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:450)");
    if (to_size_t(x115)) {
      // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:452)
      RetTupleStruct x117 = exec_RetTuple(ctx,
                                          x93,
                                          x94,
                                          x95,
                                          x96,
                                          x97,
                                          x97,
                                          Val(0),
                                          Val(19),
                                          x98,
                                          x99,
                                          x100,
                                          LAYOUT_LOOKUP(x102, arm0));
    }
    if (to_size_t(x116)) {
      // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:454)
      Pack2Struct x118 = execPack2(ctx,
                                   Val32Array{x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36,
                                              x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,
                                              x48, x49, x50, x51, x52, x53, x54, x55, x56, x57},
                                   LAYOUT_LOOKUP(x104, fa));
      // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:455)
      Pack2Struct x119 =
          execPack2(ctx,
                    Val32Array{x105[0]._super,  x105[1]._super,  x105[2]._super,  x105[3]._super,
                               x105[4]._super,  x105[5]._super,  x105[6]._super,  x105[7]._super,
                               x105[8]._super,  x105[9]._super,  x105[10]._super, x105[11]._super,
                               x105[12]._super, x105[13]._super, x105[14]._super, x105[15]._super,
                               x105[16]._super, x105[17]._super, x105[18]._super, x105[19]._super,
                               x105[20]._super, x105[21]._super, x106[0]._super,  x106[1]._super,
                               x106[2]._super,  x106[3]._super,  x106[4]._super,  x106[5]._super,
                               x106[6]._super,  x106[7]._super,  x106[8]._super,  x106[9]._super},
                    LAYOUT_LOOKUP(x104, fb));
      // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:456)
      Pack2Struct x120 =
          execPack2(ctx,
                    Val32Array{x107[0]._super,  x107[1]._super,  x107[2]._super,  x107[3]._super,
                               x107[4]._super,  x107[5]._super,  x107[6]._super,  x107[7]._super,
                               x107[8]._super,  x107[9]._super,  x107[10]._super, x107[11]._super,
                               x107[12]._super, x107[13]._super, x107[14]._super, x107[15]._super,
                               x107[16]._super, x107[17]._super, x107[18]._super, x107[19]._super,
                               x107[20]._super, x107[21]._super, x108[0]._super,  x108[1]._super,
                               x108[2]._super,  x108[3]._super,  x108[4]._super,  x108[5]._super,
                               x108[6]._super,  x108[7]._super,  x108[8]._super,  x108[9]._super},
                    LAYOUT_LOOKUP(x104, fc));
      // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:457)
      Pack2Struct x121 =
          execPack2(ctx,
                    Val32Array{x109[0]._super,  x109[1]._super,  x109[2]._super,  x109[3]._super,
                               x109[4]._super,  x109[5]._super,  x109[6]._super,  x109[7]._super,
                               x109[8]._super,  x109[9]._super,  x109[10]._super, x109[11]._super,
                               x109[12]._super, x109[13]._super, x109[14]._super, x109[15]._super,
                               x109[16]._super, x109[17]._super, x109[18]._super, x109[19]._super,
                               x109[20]._super, x109[21]._super, x110[0]._super,  x110[1]._super,
                               x110[2]._super,  x110[3]._super,  x110[4]._super,  x110[5]._super,
                               x110[6]._super,  x110[7]._super,  x110[8]._super,  x110[9]._super},
                    LAYOUT_LOOKUP(x104, fd));
      // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:458)
      Pack2Struct x122 = execPack2(ctx,
                                   Val32Array{x59, x60, x61, x62, x63, x64, x65, x66, x67, x68, x69,
                                              x70, x71, x72, x73, x74, x75, x76, x77, x78, x79, x80,
                                              x81, x82, x83, x84, x85, x86, x87, x88, x89, x90},
                                   LAYOUT_LOOKUP(x104, fe));
      // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:459)
      Pack2Struct x123 =
          execPack2(ctx,
                    Val32Array{x106[10]._super, x106[11]._super, x106[12]._super, x106[13]._super,
                               x106[14]._super, x106[15]._super, x106[16]._super, x106[17]._super,
                               x106[18]._super, x106[19]._super, x106[20]._super, x106[21]._super,
                               x111[0]._super,  x111[1]._super,  x111[2]._super,  x111[3]._super,
                               x111[4]._super,  x111[5]._super,  x111[6]._super,  x111[7]._super,
                               x111[8]._super,  x111[9]._super,  x111[10]._super, x111[11]._super,
                               x111[12]._super, x111[13]._super, x111[14]._super, x111[15]._super,
                               x111[16]._super, x111[17]._super, x111[18]._super, x111[19]._super},
                    LAYOUT_LOOKUP(x104, ff));
      // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:460)
      Pack2Struct x124 =
          execPack2(ctx,
                    Val32Array{x108[10]._super, x108[11]._super, x108[12]._super, x108[13]._super,
                               x108[14]._super, x108[15]._super, x108[16]._super, x108[17]._super,
                               x108[18]._super, x108[19]._super, x108[20]._super, x108[21]._super,
                               x112[0]._super,  x112[1]._super,  x112[2]._super,  x112[3]._super,
                               x112[4]._super,  x112[5]._super,  x112[6]._super,  x112[7]._super,
                               x112[8]._super,  x112[9]._super,  x112[10]._super, x112[11]._super,
                               x112[12]._super, x112[13]._super, x112[14]._super, x112[15]._super,
                               x112[16]._super, x112[17]._super, x112[18]._super, x112[19]._super},
                    LAYOUT_LOOKUP(x104, fg));
      // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:461)
      Pack2Struct x125 =
          execPack2(ctx,
                    Val32Array{x110[10]._super, x110[11]._super, x110[12]._super, x110[13]._super,
                               x110[14]._super, x110[15]._super, x110[16]._super, x110[17]._super,
                               x110[18]._super, x110[19]._super, x110[20]._super, x110[21]._super,
                               x113[0]._super,  x113[1]._super,  x113[2]._super,  x113[3]._super,
                               x113[4]._super,  x113[5]._super,  x113[6]._super,  x113[7]._super,
                               x113[8]._super,  x113[9]._super,  x113[10]._super, x113[11]._super,
                               x113[12]._super, x113[13]._super, x113[14]._super, x113[15]._super,
                               x113[16]._super, x113[17]._super, x113[18]._super, x113[19]._super},
                    LAYOUT_LOOKUP(x104, fh));
      // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:465)
      RetTupleStruct x126 = exec_RetTuple(
          ctx,
          Val22Array{x118.high._super, x118.low._super, x119.high._super, x119.low._super,
                     x120.high._super, x120.low._super, x121.high._super, x121.low._super,
                     x122.high._super, x122.low._super, x123.high._super, x123.low._super,
                     x124.high._super, x124.low._super, x125.high._super, x125.low._super,
                     Val(0),           Val(0),          Val(0),           Val(0),
                     Val(0),           Val(0)},
          x97,
          x97,
          Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                     Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                     Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
          x97,
          x97,
          Val(13),
          Val(17),
          Val(0),
          Val(0),
          x100,
          LAYOUT_LOOKUP(x104, _super));
    }
    // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:451)
    RetTupleStruct x127 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x102, _super));
  }
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:443)
  RetTupleStruct x128 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x128;
}
RetTupleStruct execSha256fini_7_(ExecContext& ctx,
                                 RetTupleStruct arg0,
                                 BoundLayout<RetTupleLayout> arg1,
                                 BoundLayout<Sha256fini_7_Layout> layout2) {
  BoundLayout<Sha256fini_7__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:430)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:431)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:432)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:433)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:434)
  RetTupleStruct x8 = back_RetTuple(ctx, 68, arg1);
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:436)
  NondetRegStruct22Array x9 = x7.arrA;
  NondetRegStruct22Array x10 = x7.arrB;
  Pack2Struct x11 = execPack2(
      ctx,
      Val32Array{x9[0]._super,  x9[1]._super,  x9[2]._super,  x9[3]._super,  x9[4]._super,
                 x9[5]._super,  x9[6]._super,  x9[7]._super,  x9[8]._super,  x9[9]._super,
                 x9[10]._super, x9[11]._super, x9[12]._super, x9[13]._super, x9[14]._super,
                 x9[15]._super, x9[16]._super, x9[17]._super, x9[18]._super, x9[19]._super,
                 x9[20]._super, x9[21]._super, x10[0]._super, x10[1]._super, x10[2]._super,
                 x10[3]._super, x10[4]._super, x10[5]._super, x10[6]._super, x10[7]._super,
                 x10[8]._super, x10[9]._super},
      LAYOUT_LOOKUP(layout2, _0));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  NondetRegStruct22Array x12 = x8.arrA;
  NondetRegStruct22Array x13 = x8.arrB;
  Pack2Struct x14 = execPack2(
      ctx,
      Val32Array{x12[0]._super,  x12[1]._super,  x12[2]._super,  x12[3]._super,  x12[4]._super,
                 x12[5]._super,  x12[6]._super,  x12[7]._super,  x12[8]._super,  x12[9]._super,
                 x12[10]._super, x12[11]._super, x12[12]._super, x12[13]._super, x12[14]._super,
                 x12[15]._super, x12[16]._super, x12[17]._super, x12[18]._super, x12[19]._super,
                 x12[20]._super, x12[21]._super, x13[0]._super,  x13[1]._super,  x13[2]._super,
                 x13[3]._super,  x13[4]._super,  x13[5]._super,  x13[6]._super,  x13[7]._super,
                 x13[8]._super,  x13[9]._super},
      LAYOUT_LOOKUP(layout2, _1));
  TwoShortsStruct x15 = x11._super;
  TwoShortsStruct x16 = x14._super;
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:437)
  Concatenate_NondetReg__16__16_Struct x17 = execUnpackWithCarry(
      ctx, (x15.low + x16.low), (x15.high + x16.high), LAYOUT_LOOKUP(layout2, newA));
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:438)
  NondetRegStruct22Array x18 = x7.arrC;
  Pack2Struct x19 = execPack2(
      ctx,
      Val32Array{x10[10]._super, x10[11]._super, x10[12]._super, x10[13]._super, x10[14]._super,
                 x10[15]._super, x10[16]._super, x10[17]._super, x10[18]._super, x10[19]._super,
                 x10[20]._super, x10[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super,  x18[10]._super, x18[11]._super, x18[12]._super,
                 x18[13]._super, x18[14]._super, x18[15]._super, x18[16]._super, x18[17]._super,
                 x18[18]._super, x18[19]._super},
      LAYOUT_LOOKUP(layout2, _2));
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  NondetRegStruct22Array x20 = x8.arrC;
  Pack2Struct x21 = execPack2(
      ctx,
      Val32Array{x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x20[0]._super,  x20[1]._super,  x20[2]._super,
                 x20[3]._super,  x20[4]._super,  x20[5]._super,  x20[6]._super,  x20[7]._super,
                 x20[8]._super,  x20[9]._super,  x20[10]._super, x20[11]._super, x20[12]._super,
                 x20[13]._super, x20[14]._super, x20[15]._super, x20[16]._super, x20[17]._super,
                 x20[18]._super, x20[19]._super},
      LAYOUT_LOOKUP(layout2, _3));
  TwoShortsStruct x22 = x19._super;
  TwoShortsStruct x23 = x21._super;
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:439)
  Concatenate_NondetReg__16__16_Struct x24 = execUnpackWithCarry(
      ctx, (x22.low + x23.low), (x22.high + x23.high), LAYOUT_LOOKUP(layout2, newE));
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:437)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x25 = x17._super;
  Val x26 = x25[0]._super;
  Val x27 = x25[1]._super;
  Val x28 = x25[2]._super;
  Val x29 = x25[3]._super;
  Val x30 = x25[4]._super;
  Val x31 = x25[5]._super;
  Val x32 = x25[6]._super;
  Val x33 = x25[7]._super;
  Val x34 = x25[8]._super;
  Val x35 = x25[9]._super;
  Val x36 = x25[10]._super;
  Val x37 = x25[11]._super;
  Val x38 = x25[12]._super;
  Val x39 = x25[13]._super;
  Val x40 = x25[14]._super;
  Val x41 = x25[15]._super;
  Val x42 = x25[16]._super;
  Val x43 = x25[17]._super;
  Val x44 = x25[18]._super;
  Val x45 = x25[19]._super;
  Val x46 = x25[20]._super;
  Val x47 = x25[21]._super;
  Val x48 = x25[22]._super;
  Val x49 = x25[23]._super;
  Val x50 = x25[24]._super;
  Val x51 = x25[25]._super;
  Val x52 = x25[26]._super;
  Val x53 = x25[27]._super;
  Val x54 = x25[28]._super;
  Val x55 = x25[29]._super;
  Val x56 = x25[30]._super;
  Val x57 = x25[31]._super;
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:439)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x58 = x24._super;
  Val x59 = x58[0]._super;
  Val x60 = x58[1]._super;
  Val x61 = x58[2]._super;
  Val x62 = x58[3]._super;
  Val x63 = x58[4]._super;
  Val x64 = x58[5]._super;
  Val x65 = x58[6]._super;
  Val x66 = x58[7]._super;
  Val x67 = x58[8]._super;
  Val x68 = x58[9]._super;
  Val x69 = x58[10]._super;
  Val x70 = x58[11]._super;
  Val x71 = x58[12]._super;
  Val x72 = x58[13]._super;
  Val x73 = x58[14]._super;
  Val x74 = x58[15]._super;
  Val x75 = x58[16]._super;
  Val x76 = x58[17]._super;
  Val x77 = x58[18]._super;
  Val x78 = x58[19]._super;
  Val x79 = x58[20]._super;
  Val x80 = x58[21]._super;
  Val x81 = x58[22]._super;
  Val x82 = x58[23]._super;
  Val x83 = x58[24]._super;
  Val x84 = x58[25]._super;
  Val x85 = x58[26]._super;
  Val x86 = x58[27]._super;
  Val x87 = x58[28]._super;
  Val x88 = x58[29]._super;
  Val x89 = x58[30]._super;
  Val x90 = x58[31]._super;
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:443)
  BoundLayout<Sha256fini_7_Arm1_SuperLayout> x91 = LAYOUT_LOOKUP(x3, arm1);
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:430)
  NondetRegStruct24Array x92 = x4.arrD;
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:440)
  Val22Array x93 = Val22Array{x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36,
                              x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47};
  Val22Array x94 = Val22Array{x48, x49, x50, x51, x52, x53, x54, x55, x56, x57, x59,
                              x60, x61, x62, x63, x64, x65, x66, x67, x68, x69, x70};
  Val22Array x95 = Val22Array{x71, x72, x73, x74, x75, x76, x77, x78, x79, x80,    x81,
                              x82, x83, x84, x85, x86, x87, x88, x89, x90, Val(0), Val(0)};
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:430)
  Val24Array x96 =
      Val24Array{x92[0]._super,  x92[1]._super,  x92[2]._super,  x92[3]._super,  x92[4]._super,
                 x92[5]._super,  x92[6]._super,  x92[7]._super,  x92[8]._super,  x92[9]._super,
                 x92[10]._super, x92[11]._super, x92[12]._super, x92[13]._super, x92[14]._super,
                 x92[15]._super, x92[16]._super, x92[17]._super, x92[18]._super, x92[19]._super,
                 x92[20]._super, x92[21]._super, x92[22]._super, x92[23]._super};
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:444)
  Val22Array x97 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:430)
  Val x98 = x4.rnd._super;
  Val x99 = x4.blk._super;
  Val x100 = x4.midx._super;
  if (to_size_t(Val(1))) {
    // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:444)
    RetTupleStruct x101 = exec_RetTuple(ctx,
                                        x93,
                                        x94,
                                        x95,
                                        x96,
                                        x97,
                                        x97,
                                        Val(12),
                                        Val(17),
                                        x98,
                                        x99,
                                        x100,
                                        LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:443)
  BoundLayout<Sha256fini_7_Arm1_Super_SuperLayout> x102 = LAYOUT_LOOKUP(x91, _super);
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:447)
  Val x103 = ((x100 + Val(1)) - x99);
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:451)
  BoundLayout<Sha256fini_7_Arm1_SuperArm1_SuperLayout> x104 = LAYOUT_LOOKUP(x102, arm1);
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:455)
  NondetRegStruct22Array x105 = x4.arrA;
  NondetRegStruct22Array x106 = x4.arrB;
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:456)
  NondetRegStruct22Array x107 = x5.arrA;
  NondetRegStruct22Array x108 = x5.arrB;
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:457)
  NondetRegStruct22Array x109 = x6.arrA;
  NondetRegStruct22Array x110 = x6.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:459)
  NondetRegStruct22Array x111 = x4.arrC;
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:460)
  NondetRegStruct22Array x112 = x5.arrC;
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:461)
  NondetRegStruct22Array x113 = x6.arrC;
  if (to_size_t(Val(0))) {
    // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:448)
    NondetRegStruct x114 = exec_NondetReg(ctx, inv(x103), LAYOUT_LOOKUP(x91, invMoreInput));
    // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:449)
    Val x115 = (x103 * x114._super);
    // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:450)
    Val x116 = (Val(1) - x115);
    EQZ((x103 * x116), "sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:450)");
    if (to_size_t(x115)) {
      // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:452)
      RetTupleStruct x117 = exec_RetTuple(ctx,
                                          x93,
                                          x94,
                                          x95,
                                          x96,
                                          x97,
                                          x97,
                                          Val(0),
                                          Val(19),
                                          x98,
                                          x99,
                                          x100,
                                          LAYOUT_LOOKUP(x102, arm0));
    }
    if (to_size_t(x116)) {
      // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:454)
      Pack2Struct x118 = execPack2(ctx,
                                   Val32Array{x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36,
                                              x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,
                                              x48, x49, x50, x51, x52, x53, x54, x55, x56, x57},
                                   LAYOUT_LOOKUP(x104, fa));
      // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:455)
      Pack2Struct x119 =
          execPack2(ctx,
                    Val32Array{x105[0]._super,  x105[1]._super,  x105[2]._super,  x105[3]._super,
                               x105[4]._super,  x105[5]._super,  x105[6]._super,  x105[7]._super,
                               x105[8]._super,  x105[9]._super,  x105[10]._super, x105[11]._super,
                               x105[12]._super, x105[13]._super, x105[14]._super, x105[15]._super,
                               x105[16]._super, x105[17]._super, x105[18]._super, x105[19]._super,
                               x105[20]._super, x105[21]._super, x106[0]._super,  x106[1]._super,
                               x106[2]._super,  x106[3]._super,  x106[4]._super,  x106[5]._super,
                               x106[6]._super,  x106[7]._super,  x106[8]._super,  x106[9]._super},
                    LAYOUT_LOOKUP(x104, fb));
      // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:456)
      Pack2Struct x120 =
          execPack2(ctx,
                    Val32Array{x107[0]._super,  x107[1]._super,  x107[2]._super,  x107[3]._super,
                               x107[4]._super,  x107[5]._super,  x107[6]._super,  x107[7]._super,
                               x107[8]._super,  x107[9]._super,  x107[10]._super, x107[11]._super,
                               x107[12]._super, x107[13]._super, x107[14]._super, x107[15]._super,
                               x107[16]._super, x107[17]._super, x107[18]._super, x107[19]._super,
                               x107[20]._super, x107[21]._super, x108[0]._super,  x108[1]._super,
                               x108[2]._super,  x108[3]._super,  x108[4]._super,  x108[5]._super,
                               x108[6]._super,  x108[7]._super,  x108[8]._super,  x108[9]._super},
                    LAYOUT_LOOKUP(x104, fc));
      // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:457)
      Pack2Struct x121 =
          execPack2(ctx,
                    Val32Array{x109[0]._super,  x109[1]._super,  x109[2]._super,  x109[3]._super,
                               x109[4]._super,  x109[5]._super,  x109[6]._super,  x109[7]._super,
                               x109[8]._super,  x109[9]._super,  x109[10]._super, x109[11]._super,
                               x109[12]._super, x109[13]._super, x109[14]._super, x109[15]._super,
                               x109[16]._super, x109[17]._super, x109[18]._super, x109[19]._super,
                               x109[20]._super, x109[21]._super, x110[0]._super,  x110[1]._super,
                               x110[2]._super,  x110[3]._super,  x110[4]._super,  x110[5]._super,
                               x110[6]._super,  x110[7]._super,  x110[8]._super,  x110[9]._super},
                    LAYOUT_LOOKUP(x104, fd));
      // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:458)
      Pack2Struct x122 = execPack2(ctx,
                                   Val32Array{x59, x60, x61, x62, x63, x64, x65, x66, x67, x68, x69,
                                              x70, x71, x72, x73, x74, x75, x76, x77, x78, x79, x80,
                                              x81, x82, x83, x84, x85, x86, x87, x88, x89, x90},
                                   LAYOUT_LOOKUP(x104, fe));
      // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:459)
      Pack2Struct x123 =
          execPack2(ctx,
                    Val32Array{x106[10]._super, x106[11]._super, x106[12]._super, x106[13]._super,
                               x106[14]._super, x106[15]._super, x106[16]._super, x106[17]._super,
                               x106[18]._super, x106[19]._super, x106[20]._super, x106[21]._super,
                               x111[0]._super,  x111[1]._super,  x111[2]._super,  x111[3]._super,
                               x111[4]._super,  x111[5]._super,  x111[6]._super,  x111[7]._super,
                               x111[8]._super,  x111[9]._super,  x111[10]._super, x111[11]._super,
                               x111[12]._super, x111[13]._super, x111[14]._super, x111[15]._super,
                               x111[16]._super, x111[17]._super, x111[18]._super, x111[19]._super},
                    LAYOUT_LOOKUP(x104, ff));
      // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:460)
      Pack2Struct x124 =
          execPack2(ctx,
                    Val32Array{x108[10]._super, x108[11]._super, x108[12]._super, x108[13]._super,
                               x108[14]._super, x108[15]._super, x108[16]._super, x108[17]._super,
                               x108[18]._super, x108[19]._super, x108[20]._super, x108[21]._super,
                               x112[0]._super,  x112[1]._super,  x112[2]._super,  x112[3]._super,
                               x112[4]._super,  x112[5]._super,  x112[6]._super,  x112[7]._super,
                               x112[8]._super,  x112[9]._super,  x112[10]._super, x112[11]._super,
                               x112[12]._super, x112[13]._super, x112[14]._super, x112[15]._super,
                               x112[16]._super, x112[17]._super, x112[18]._super, x112[19]._super},
                    LAYOUT_LOOKUP(x104, fg));
      // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:461)
      Pack2Struct x125 =
          execPack2(ctx,
                    Val32Array{x110[10]._super, x110[11]._super, x110[12]._super, x110[13]._super,
                               x110[14]._super, x110[15]._super, x110[16]._super, x110[17]._super,
                               x110[18]._super, x110[19]._super, x110[20]._super, x110[21]._super,
                               x113[0]._super,  x113[1]._super,  x113[2]._super,  x113[3]._super,
                               x113[4]._super,  x113[5]._super,  x113[6]._super,  x113[7]._super,
                               x113[8]._super,  x113[9]._super,  x113[10]._super, x113[11]._super,
                               x113[12]._super, x113[13]._super, x113[14]._super, x113[15]._super,
                               x113[16]._super, x113[17]._super, x113[18]._super, x113[19]._super},
                    LAYOUT_LOOKUP(x104, fh));
      // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:465)
      RetTupleStruct x126 = exec_RetTuple(
          ctx,
          Val22Array{x118.high._super, x118.low._super, x119.high._super, x119.low._super,
                     x120.high._super, x120.low._super, x121.high._super, x121.low._super,
                     x122.high._super, x122.low._super, x123.high._super, x123.low._super,
                     x124.high._super, x124.low._super, x125.high._super, x125.low._super,
                     Val(0),           Val(0),          Val(0),           Val(0),
                     Val(0),           Val(0)},
          x97,
          x97,
          Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                     Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                     Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
          x97,
          x97,
          Val(13),
          Val(17),
          Val(0),
          Val(0),
          x100,
          LAYOUT_LOOKUP(x104, _super));
    }
    // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:451)
    RetTupleStruct x127 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x102, _super));
  }
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:443)
  RetTupleStruct x128 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x128;
}
RetTupleStruct execSha256fini_8_(ExecContext& ctx,
                                 RetTupleStruct arg0,
                                 BoundLayout<RetTupleLayout> arg1,
                                 BoundLayout<Sha256fini_8_Layout> layout2) {
  BoundLayout<Sha256fini_8__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:430)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:431)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:432)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:433)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:434)
  RetTupleStruct x8 = back_RetTuple(ctx, 68, arg1);
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:436)
  NondetRegStruct22Array x9 = x7.arrA;
  NondetRegStruct22Array x10 = x7.arrB;
  Pack2Struct x11 = execPack2(
      ctx,
      Val32Array{x9[0]._super,  x9[1]._super,  x9[2]._super,  x9[3]._super,  x9[4]._super,
                 x9[5]._super,  x9[6]._super,  x9[7]._super,  x9[8]._super,  x9[9]._super,
                 x9[10]._super, x9[11]._super, x9[12]._super, x9[13]._super, x9[14]._super,
                 x9[15]._super, x9[16]._super, x9[17]._super, x9[18]._super, x9[19]._super,
                 x9[20]._super, x9[21]._super, x10[0]._super, x10[1]._super, x10[2]._super,
                 x10[3]._super, x10[4]._super, x10[5]._super, x10[6]._super, x10[7]._super,
                 x10[8]._super, x10[9]._super},
      LAYOUT_LOOKUP(layout2, _0));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  NondetRegStruct22Array x12 = x8.arrA;
  NondetRegStruct22Array x13 = x8.arrB;
  Pack2Struct x14 = execPack2(
      ctx,
      Val32Array{x12[0]._super,  x12[1]._super,  x12[2]._super,  x12[3]._super,  x12[4]._super,
                 x12[5]._super,  x12[6]._super,  x12[7]._super,  x12[8]._super,  x12[9]._super,
                 x12[10]._super, x12[11]._super, x12[12]._super, x12[13]._super, x12[14]._super,
                 x12[15]._super, x12[16]._super, x12[17]._super, x12[18]._super, x12[19]._super,
                 x12[20]._super, x12[21]._super, x13[0]._super,  x13[1]._super,  x13[2]._super,
                 x13[3]._super,  x13[4]._super,  x13[5]._super,  x13[6]._super,  x13[7]._super,
                 x13[8]._super,  x13[9]._super},
      LAYOUT_LOOKUP(layout2, _1));
  TwoShortsStruct x15 = x11._super;
  TwoShortsStruct x16 = x14._super;
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:437)
  Concatenate_NondetReg__16__16_Struct x17 = execUnpackWithCarry(
      ctx, (x15.low + x16.low), (x15.high + x16.high), LAYOUT_LOOKUP(layout2, newA));
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:438)
  NondetRegStruct22Array x18 = x7.arrC;
  Pack2Struct x19 = execPack2(
      ctx,
      Val32Array{x10[10]._super, x10[11]._super, x10[12]._super, x10[13]._super, x10[14]._super,
                 x10[15]._super, x10[16]._super, x10[17]._super, x10[18]._super, x10[19]._super,
                 x10[20]._super, x10[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super,  x18[10]._super, x18[11]._super, x18[12]._super,
                 x18[13]._super, x18[14]._super, x18[15]._super, x18[16]._super, x18[17]._super,
                 x18[18]._super, x18[19]._super},
      LAYOUT_LOOKUP(layout2, _2));
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  NondetRegStruct22Array x20 = x8.arrC;
  Pack2Struct x21 = execPack2(
      ctx,
      Val32Array{x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x20[0]._super,  x20[1]._super,  x20[2]._super,
                 x20[3]._super,  x20[4]._super,  x20[5]._super,  x20[6]._super,  x20[7]._super,
                 x20[8]._super,  x20[9]._super,  x20[10]._super, x20[11]._super, x20[12]._super,
                 x20[13]._super, x20[14]._super, x20[15]._super, x20[16]._super, x20[17]._super,
                 x20[18]._super, x20[19]._super},
      LAYOUT_LOOKUP(layout2, _3));
  TwoShortsStruct x22 = x19._super;
  TwoShortsStruct x23 = x21._super;
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:439)
  Concatenate_NondetReg__16__16_Struct x24 = execUnpackWithCarry(
      ctx, (x22.low + x23.low), (x22.high + x23.high), LAYOUT_LOOKUP(layout2, newE));
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:437)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x25 = x17._super;
  Val x26 = x25[0]._super;
  Val x27 = x25[1]._super;
  Val x28 = x25[2]._super;
  Val x29 = x25[3]._super;
  Val x30 = x25[4]._super;
  Val x31 = x25[5]._super;
  Val x32 = x25[6]._super;
  Val x33 = x25[7]._super;
  Val x34 = x25[8]._super;
  Val x35 = x25[9]._super;
  Val x36 = x25[10]._super;
  Val x37 = x25[11]._super;
  Val x38 = x25[12]._super;
  Val x39 = x25[13]._super;
  Val x40 = x25[14]._super;
  Val x41 = x25[15]._super;
  Val x42 = x25[16]._super;
  Val x43 = x25[17]._super;
  Val x44 = x25[18]._super;
  Val x45 = x25[19]._super;
  Val x46 = x25[20]._super;
  Val x47 = x25[21]._super;
  Val x48 = x25[22]._super;
  Val x49 = x25[23]._super;
  Val x50 = x25[24]._super;
  Val x51 = x25[25]._super;
  Val x52 = x25[26]._super;
  Val x53 = x25[27]._super;
  Val x54 = x25[28]._super;
  Val x55 = x25[29]._super;
  Val x56 = x25[30]._super;
  Val x57 = x25[31]._super;
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:439)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x58 = x24._super;
  Val x59 = x58[0]._super;
  Val x60 = x58[1]._super;
  Val x61 = x58[2]._super;
  Val x62 = x58[3]._super;
  Val x63 = x58[4]._super;
  Val x64 = x58[5]._super;
  Val x65 = x58[6]._super;
  Val x66 = x58[7]._super;
  Val x67 = x58[8]._super;
  Val x68 = x58[9]._super;
  Val x69 = x58[10]._super;
  Val x70 = x58[11]._super;
  Val x71 = x58[12]._super;
  Val x72 = x58[13]._super;
  Val x73 = x58[14]._super;
  Val x74 = x58[15]._super;
  Val x75 = x58[16]._super;
  Val x76 = x58[17]._super;
  Val x77 = x58[18]._super;
  Val x78 = x58[19]._super;
  Val x79 = x58[20]._super;
  Val x80 = x58[21]._super;
  Val x81 = x58[22]._super;
  Val x82 = x58[23]._super;
  Val x83 = x58[24]._super;
  Val x84 = x58[25]._super;
  Val x85 = x58[26]._super;
  Val x86 = x58[27]._super;
  Val x87 = x58[28]._super;
  Val x88 = x58[29]._super;
  Val x89 = x58[30]._super;
  Val x90 = x58[31]._super;
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:443)
  BoundLayout<Sha256fini_8_Arm1_SuperLayout> x91 = LAYOUT_LOOKUP(x3, arm1);
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:430)
  NondetRegStruct24Array x92 = x4.arrD;
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:440)
  Val22Array x93 = Val22Array{x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36,
                              x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47};
  Val22Array x94 = Val22Array{x48, x49, x50, x51, x52, x53, x54, x55, x56, x57, x59,
                              x60, x61, x62, x63, x64, x65, x66, x67, x68, x69, x70};
  Val22Array x95 = Val22Array{x71, x72, x73, x74, x75, x76, x77, x78, x79, x80,    x81,
                              x82, x83, x84, x85, x86, x87, x88, x89, x90, Val(0), Val(0)};
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:430)
  Val24Array x96 =
      Val24Array{x92[0]._super,  x92[1]._super,  x92[2]._super,  x92[3]._super,  x92[4]._super,
                 x92[5]._super,  x92[6]._super,  x92[7]._super,  x92[8]._super,  x92[9]._super,
                 x92[10]._super, x92[11]._super, x92[12]._super, x92[13]._super, x92[14]._super,
                 x92[15]._super, x92[16]._super, x92[17]._super, x92[18]._super, x92[19]._super,
                 x92[20]._super, x92[21]._super, x92[22]._super, x92[23]._super};
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:444)
  Val22Array x97 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:430)
  Val x98 = x4.rnd._super;
  Val x99 = x4.blk._super;
  Val x100 = x4.midx._super;
  if (to_size_t(Val(0))) {
    // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:444)
    RetTupleStruct x101 = exec_RetTuple(ctx,
                                        x93,
                                        x94,
                                        x95,
                                        x96,
                                        x97,
                                        x97,
                                        Val(13),
                                        Val(17),
                                        x98,
                                        x99,
                                        x100,
                                        LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:443)
  BoundLayout<Sha256fini_8_Arm1_Super_SuperLayout> x102 = LAYOUT_LOOKUP(x91, _super);
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:447)
  Val x103 = ((x100 + Val(1)) - x99);
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:451)
  BoundLayout<Sha256fini_8_Arm1_SuperArm1_SuperLayout> x104 = LAYOUT_LOOKUP(x102, arm1);
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:455)
  NondetRegStruct22Array x105 = x4.arrA;
  NondetRegStruct22Array x106 = x4.arrB;
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:456)
  NondetRegStruct22Array x107 = x5.arrA;
  NondetRegStruct22Array x108 = x5.arrB;
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:457)
  NondetRegStruct22Array x109 = x6.arrA;
  NondetRegStruct22Array x110 = x6.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:459)
  NondetRegStruct22Array x111 = x4.arrC;
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:460)
  NondetRegStruct22Array x112 = x5.arrC;
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:461)
  NondetRegStruct22Array x113 = x6.arrC;
  if (to_size_t(Val(1))) {
    // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:448)
    NondetRegStruct x114 = exec_NondetReg(ctx, inv(x103), LAYOUT_LOOKUP(x91, invMoreInput));
    // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:449)
    Val x115 = (x103 * x114._super);
    // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:450)
    Val x116 = (Val(1) - x115);
    EQZ((x103 * x116), "sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:450)");
    if (to_size_t(x115)) {
      // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:452)
      RetTupleStruct x117 = exec_RetTuple(ctx,
                                          x93,
                                          x94,
                                          x95,
                                          x96,
                                          x97,
                                          x97,
                                          Val(0),
                                          Val(19),
                                          x98,
                                          x99,
                                          x100,
                                          LAYOUT_LOOKUP(x102, arm0));
    }
    if (to_size_t(x116)) {
      // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:454)
      Pack2Struct x118 = execPack2(ctx,
                                   Val32Array{x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36,
                                              x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,
                                              x48, x49, x50, x51, x52, x53, x54, x55, x56, x57},
                                   LAYOUT_LOOKUP(x104, fa));
      // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:455)
      Pack2Struct x119 =
          execPack2(ctx,
                    Val32Array{x105[0]._super,  x105[1]._super,  x105[2]._super,  x105[3]._super,
                               x105[4]._super,  x105[5]._super,  x105[6]._super,  x105[7]._super,
                               x105[8]._super,  x105[9]._super,  x105[10]._super, x105[11]._super,
                               x105[12]._super, x105[13]._super, x105[14]._super, x105[15]._super,
                               x105[16]._super, x105[17]._super, x105[18]._super, x105[19]._super,
                               x105[20]._super, x105[21]._super, x106[0]._super,  x106[1]._super,
                               x106[2]._super,  x106[3]._super,  x106[4]._super,  x106[5]._super,
                               x106[6]._super,  x106[7]._super,  x106[8]._super,  x106[9]._super},
                    LAYOUT_LOOKUP(x104, fb));
      // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:456)
      Pack2Struct x120 =
          execPack2(ctx,
                    Val32Array{x107[0]._super,  x107[1]._super,  x107[2]._super,  x107[3]._super,
                               x107[4]._super,  x107[5]._super,  x107[6]._super,  x107[7]._super,
                               x107[8]._super,  x107[9]._super,  x107[10]._super, x107[11]._super,
                               x107[12]._super, x107[13]._super, x107[14]._super, x107[15]._super,
                               x107[16]._super, x107[17]._super, x107[18]._super, x107[19]._super,
                               x107[20]._super, x107[21]._super, x108[0]._super,  x108[1]._super,
                               x108[2]._super,  x108[3]._super,  x108[4]._super,  x108[5]._super,
                               x108[6]._super,  x108[7]._super,  x108[8]._super,  x108[9]._super},
                    LAYOUT_LOOKUP(x104, fc));
      // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:457)
      Pack2Struct x121 =
          execPack2(ctx,
                    Val32Array{x109[0]._super,  x109[1]._super,  x109[2]._super,  x109[3]._super,
                               x109[4]._super,  x109[5]._super,  x109[6]._super,  x109[7]._super,
                               x109[8]._super,  x109[9]._super,  x109[10]._super, x109[11]._super,
                               x109[12]._super, x109[13]._super, x109[14]._super, x109[15]._super,
                               x109[16]._super, x109[17]._super, x109[18]._super, x109[19]._super,
                               x109[20]._super, x109[21]._super, x110[0]._super,  x110[1]._super,
                               x110[2]._super,  x110[3]._super,  x110[4]._super,  x110[5]._super,
                               x110[6]._super,  x110[7]._super,  x110[8]._super,  x110[9]._super},
                    LAYOUT_LOOKUP(x104, fd));
      // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:458)
      Pack2Struct x122 = execPack2(ctx,
                                   Val32Array{x59, x60, x61, x62, x63, x64, x65, x66, x67, x68, x69,
                                              x70, x71, x72, x73, x74, x75, x76, x77, x78, x79, x80,
                                              x81, x82, x83, x84, x85, x86, x87, x88, x89, x90},
                                   LAYOUT_LOOKUP(x104, fe));
      // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:459)
      Pack2Struct x123 =
          execPack2(ctx,
                    Val32Array{x106[10]._super, x106[11]._super, x106[12]._super, x106[13]._super,
                               x106[14]._super, x106[15]._super, x106[16]._super, x106[17]._super,
                               x106[18]._super, x106[19]._super, x106[20]._super, x106[21]._super,
                               x111[0]._super,  x111[1]._super,  x111[2]._super,  x111[3]._super,
                               x111[4]._super,  x111[5]._super,  x111[6]._super,  x111[7]._super,
                               x111[8]._super,  x111[9]._super,  x111[10]._super, x111[11]._super,
                               x111[12]._super, x111[13]._super, x111[14]._super, x111[15]._super,
                               x111[16]._super, x111[17]._super, x111[18]._super, x111[19]._super},
                    LAYOUT_LOOKUP(x104, ff));
      // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:460)
      Pack2Struct x124 =
          execPack2(ctx,
                    Val32Array{x108[10]._super, x108[11]._super, x108[12]._super, x108[13]._super,
                               x108[14]._super, x108[15]._super, x108[16]._super, x108[17]._super,
                               x108[18]._super, x108[19]._super, x108[20]._super, x108[21]._super,
                               x112[0]._super,  x112[1]._super,  x112[2]._super,  x112[3]._super,
                               x112[4]._super,  x112[5]._super,  x112[6]._super,  x112[7]._super,
                               x112[8]._super,  x112[9]._super,  x112[10]._super, x112[11]._super,
                               x112[12]._super, x112[13]._super, x112[14]._super, x112[15]._super,
                               x112[16]._super, x112[17]._super, x112[18]._super, x112[19]._super},
                    LAYOUT_LOOKUP(x104, fg));
      // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:461)
      Pack2Struct x125 =
          execPack2(ctx,
                    Val32Array{x110[10]._super, x110[11]._super, x110[12]._super, x110[13]._super,
                               x110[14]._super, x110[15]._super, x110[16]._super, x110[17]._super,
                               x110[18]._super, x110[19]._super, x110[20]._super, x110[21]._super,
                               x113[0]._super,  x113[1]._super,  x113[2]._super,  x113[3]._super,
                               x113[4]._super,  x113[5]._super,  x113[6]._super,  x113[7]._super,
                               x113[8]._super,  x113[9]._super,  x113[10]._super, x113[11]._super,
                               x113[12]._super, x113[13]._super, x113[14]._super, x113[15]._super,
                               x113[16]._super, x113[17]._super, x113[18]._super, x113[19]._super},
                    LAYOUT_LOOKUP(x104, fh));
      // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:465)
      RetTupleStruct x126 = exec_RetTuple(
          ctx,
          Val22Array{x118.high._super, x118.low._super, x119.high._super, x119.low._super,
                     x120.high._super, x120.low._super, x121.high._super, x121.low._super,
                     x122.high._super, x122.low._super, x123.high._super, x123.low._super,
                     x124.high._super, x124.low._super, x125.high._super, x125.low._super,
                     Val(0),           Val(0),          Val(0),           Val(0),
                     Val(0),           Val(0)},
          x97,
          x97,
          Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                     Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                     Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
          x97,
          x97,
          Val(13),
          Val(17),
          Val(0),
          Val(0),
          x100,
          LAYOUT_LOOKUP(x104, _super));
    }
    // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:451)
    RetTupleStruct x127 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x102, _super));
  }
  // sha256fini(zirgen/circuit/keccak/sha256_for_keccak.zir:443)
  RetTupleStruct x128 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x128;
}
RetTupleStruct execSetupMajor(ExecContext& ctx,
                              RetTupleStruct arg0,
                              BoundLayout<RetTupleLayout> arg1,
                              BoundLayout<SetupMajorLayout> layout2,
                              GlobalBuf global3) {
  // setup_major(zirgen/circuit/keccak/keccak.zir:1132)
  BoundLayout<_globalLayout> x4 = BIND_LAYOUT(kLayoutGlobal, global3);
  // setup_major(zirgen/circuit/keccak/keccak.zir:1134)
  BoundLayout<SetupMajor_SuperLayout> x5 = LAYOUT_LOOKUP(layout2, _super);
  // setup_major(zirgen/circuit/keccak/keccak.zir:1133)
  RetTupleStruct x6 = back_RetTuple(ctx, 1, arg1);
  OneHot_14_Struct x7 = exec_OneHot_14_(ctx, x6.minor._super, LAYOUT_LOOKUP(layout2, minorOnehot));
  NondetRegStruct14Array x8 = x7._super;
  // setup_major(zirgen/circuit/keccak/keccak.zir:1134)
  BoundLayout<SetupMajorArm4Layout> x9 = LAYOUT_LOOKUP(x5, arm4);
  BoundLayout<SetupMajorArm5Layout> x10 = LAYOUT_LOOKUP(x5, arm5);
  BoundLayout<SetupMajorArm6Layout> x11 = LAYOUT_LOOKUP(x5, arm6);
  BoundLayout<SetupMajorArm7Layout> x12 = LAYOUT_LOOKUP(x5, arm7);
  BoundLayout<SetupMajorArm8Layout> x13 = LAYOUT_LOOKUP(x5, arm8);
  BoundLayout<SetupMajorArm9Layout> x14 = LAYOUT_LOOKUP(x5, arm9);
  BoundLayout<SetupMajorArm10Layout> x15 = LAYOUT_LOOKUP(x5, arm10);
  BoundLayout<SetupMajorArm11Layout> x16 = LAYOUT_LOOKUP(x5, arm11);
  BoundLayout<SetupMajorArm12Layout> x17 = LAYOUT_LOOKUP(x5, arm12);
  BoundLayout<SetupMajorArm13Layout> x18 = LAYOUT_LOOKUP(x5, arm13);
  if (to_size_t(x8[0]._super)) {
    // setup_major(zirgen/circuit/keccak/keccak.zir:1135)
    RetTupleStruct x19 = back_RetTuple(ctx, 1, arg1);
    RetTupleStruct x20 = execEqualWord_0_(ctx, x19, LAYOUT_LOOKUP(x5, arm0));
  }
  if (to_size_t(x8[1]._super)) {
    // setup_major(zirgen/circuit/keccak/keccak.zir:1136)
    RetTupleStruct x21 = back_RetTuple(ctx, 2, arg1);
    RetTupleStruct x22 = execEqualWord_1_(ctx, x21, LAYOUT_LOOKUP(x5, arm1));
  }
  if (to_size_t(x8[2]._super)) {
    // setup_major(zirgen/circuit/keccak/keccak.zir:1137)
    RetTupleStruct x23 = back_RetTuple(ctx, 3, arg1);
    RetTupleStruct x24 = execEqualWord_2_(ctx, x23, LAYOUT_LOOKUP(x5, arm2));
  }
  if (to_size_t(x8[3]._super)) {
    // setup_major(zirgen/circuit/keccak/keccak.zir:1138)
    RetTupleStruct x25 = back_RetTuple(ctx, 4, arg1);
    RetTupleStruct x26 = execEqualWord_3_(ctx, x25, LAYOUT_LOOKUP(x5, arm3));
  }
  // setup_major(zirgen/circuit/keccak/keccak.zir:1134)
  BoundLayout<Reg> x27 = LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x9, _extra0), count), _super);
  if (to_size_t(x8[4]._super)) {
    // setup_major(zirgen/circuit/keccak/keccak.zir:1139)
    RetTupleStruct x28 = back_RetTuple(ctx, 1, arg1);
    RetTupleStruct x29 = execMemPaddingSha256(ctx, x28, LAYOUT_LOOKUP(x9, _super));
    // setup_major(zirgen/circuit/keccak/keccak.zir:1134)
    STORE(x27, Val(0));
    EQZ(LOAD(x27, 0), "setup_major(zirgen/circuit/keccak/keccak.zir:1134)");
  }
  BoundLayout<Reg> x30 = LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x10, _extra0), count), _super);
  BoundLayout<Reg> x31 = LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x10, _extra1), count), _super);
  BoundLayout<Reg> x32 = LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x10, _extra2), count), _super);
  if (to_size_t(x8[5]._super)) {
    // setup_major(zirgen/circuit/keccak/keccak.zir:1140)
    RetTupleStruct x33 = back_RetTuple(ctx, 1, arg1);
    RetTupleStruct x34 = execSha256init_1_(ctx, x33, LAYOUT_LOOKUP(x10, _super));
    // setup_major(zirgen/circuit/keccak/keccak.zir:1134)
    STORE(x30, Val(0));
    EQZ(LOAD(x30, 0), "setup_major(zirgen/circuit/keccak/keccak.zir:1134)");
    STORE(x31, Val(0));
    EQZ(LOAD(x31, 0), "setup_major(zirgen/circuit/keccak/keccak.zir:1134)");
    STORE(x32, Val(0));
    EQZ(LOAD(x32, 0), "setup_major(zirgen/circuit/keccak/keccak.zir:1134)");
  }
  BoundLayout<Reg> x35 = LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x11, _extra0), count), _super);
  BoundLayout<Reg> x36 = LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x11, _extra1), count), _super);
  BoundLayout<Reg> x37 = LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x11, _extra2), count), _super);
  if (to_size_t(x8[6]._super)) {
    // setup_major(zirgen/circuit/keccak/keccak.zir:1141)
    RetTupleStruct x38 = back_RetTuple(ctx, 1, arg1);
    RetTupleStruct x39 = execSha256init_2_(ctx, x38, LAYOUT_LOOKUP(x11, _super));
    // setup_major(zirgen/circuit/keccak/keccak.zir:1134)
    STORE(x35, Val(0));
    EQZ(LOAD(x35, 0), "setup_major(zirgen/circuit/keccak/keccak.zir:1134)");
    STORE(x36, Val(0));
    EQZ(LOAD(x36, 0), "setup_major(zirgen/circuit/keccak/keccak.zir:1134)");
    STORE(x37, Val(0));
    EQZ(LOAD(x37, 0), "setup_major(zirgen/circuit/keccak/keccak.zir:1134)");
  }
  BoundLayout<Reg> x40 = LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x12, _extra0), count), _super);
  BoundLayout<Reg> x41 = LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x12, _extra1), count), _super);
  BoundLayout<Reg> x42 = LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x12, _extra2), count), _super);
  if (to_size_t(x8[7]._super)) {
    // setup_major(zirgen/circuit/keccak/keccak.zir:1142)
    RetTupleStruct x43 = back_RetTuple(ctx, 1, arg1);
    RetTupleStruct x44 = execSha256init_3_(ctx, x43, LAYOUT_LOOKUP(x12, _super));
    // setup_major(zirgen/circuit/keccak/keccak.zir:1134)
    STORE(x40, Val(0));
    EQZ(LOAD(x40, 0), "setup_major(zirgen/circuit/keccak/keccak.zir:1134)");
    STORE(x41, Val(0));
    EQZ(LOAD(x41, 0), "setup_major(zirgen/circuit/keccak/keccak.zir:1134)");
    STORE(x42, Val(0));
    EQZ(LOAD(x42, 0), "setup_major(zirgen/circuit/keccak/keccak.zir:1134)");
  }
  BoundLayout<Reg> x45 = LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x13, _extra0), count), _super);
  BoundLayout<Reg> x46 = LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x13, _extra1), count), _super);
  BoundLayout<Reg> x47 = LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x13, _extra2), count), _super);
  if (to_size_t(x8[8]._super)) {
    // setup_major(zirgen/circuit/keccak/keccak.zir:1143)
    RetTupleStruct x48 = back_RetTuple(ctx, 1, arg1);
    RetTupleStruct x49 = execSha256init_4_(ctx, x48, LAYOUT_LOOKUP(x13, _super));
    // setup_major(zirgen/circuit/keccak/keccak.zir:1134)
    STORE(x45, Val(0));
    EQZ(LOAD(x45, 0), "setup_major(zirgen/circuit/keccak/keccak.zir:1134)");
    STORE(x46, Val(0));
    EQZ(LOAD(x46, 0), "setup_major(zirgen/circuit/keccak/keccak.zir:1134)");
    STORE(x47, Val(0));
    EQZ(LOAD(x47, 0), "setup_major(zirgen/circuit/keccak/keccak.zir:1134)");
  }
  BoundLayout<Reg> x50 = LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x14, _extra0), count), _super);
  BoundLayout<Reg> x51 = LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x14, _extra1), count), _super);
  BoundLayout<Reg> x52 = LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x14, _extra2), count), _super);
  if (to_size_t(x8[9]._super)) {
    // setup_major(zirgen/circuit/keccak/keccak.zir:1144)
    RetTupleStruct x53 = back_RetTuple(ctx, 0, arg1);
    RetTupleStruct x54 = execSha256fini_5_(ctx, x53, arg1, LAYOUT_LOOKUP(x14, _super));
    // setup_major(zirgen/circuit/keccak/keccak.zir:1134)
    STORE(x50, Val(0));
    EQZ(LOAD(x50, 0), "setup_major(zirgen/circuit/keccak/keccak.zir:1134)");
    STORE(x51, Val(0));
    EQZ(LOAD(x51, 0), "setup_major(zirgen/circuit/keccak/keccak.zir:1134)");
    STORE(x52, Val(0));
    EQZ(LOAD(x52, 0), "setup_major(zirgen/circuit/keccak/keccak.zir:1134)");
  }
  BoundLayout<Reg> x55 = LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x15, _extra0), count), _super);
  BoundLayout<Reg> x56 = LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x15, _extra1), count), _super);
  BoundLayout<Reg> x57 = LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x15, _extra2), count), _super);
  if (to_size_t(x8[10]._super)) {
    // setup_major(zirgen/circuit/keccak/keccak.zir:1145)
    RetTupleStruct x58 = back_RetTuple(ctx, 0, arg1);
    RetTupleStruct x59 = execSha256fini_6_(ctx, x58, arg1, LAYOUT_LOOKUP(x15, _super));
    // setup_major(zirgen/circuit/keccak/keccak.zir:1134)
    STORE(x55, Val(0));
    EQZ(LOAD(x55, 0), "setup_major(zirgen/circuit/keccak/keccak.zir:1134)");
    STORE(x56, Val(0));
    EQZ(LOAD(x56, 0), "setup_major(zirgen/circuit/keccak/keccak.zir:1134)");
    STORE(x57, Val(0));
    EQZ(LOAD(x57, 0), "setup_major(zirgen/circuit/keccak/keccak.zir:1134)");
  }
  BoundLayout<Reg> x60 = LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x16, _extra0), count), _super);
  BoundLayout<Reg> x61 = LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x16, _extra1), count), _super);
  BoundLayout<Reg> x62 = LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x16, _extra2), count), _super);
  if (to_size_t(x8[11]._super)) {
    // setup_major(zirgen/circuit/keccak/keccak.zir:1146)
    RetTupleStruct x63 = back_RetTuple(ctx, 0, arg1);
    RetTupleStruct x64 = execSha256fini_7_(ctx, x63, arg1, LAYOUT_LOOKUP(x16, _super));
    // setup_major(zirgen/circuit/keccak/keccak.zir:1134)
    STORE(x60, Val(0));
    EQZ(LOAD(x60, 0), "setup_major(zirgen/circuit/keccak/keccak.zir:1134)");
    STORE(x61, Val(0));
    EQZ(LOAD(x61, 0), "setup_major(zirgen/circuit/keccak/keccak.zir:1134)");
    STORE(x62, Val(0));
    EQZ(LOAD(x62, 0), "setup_major(zirgen/circuit/keccak/keccak.zir:1134)");
  }
  BoundLayout<Reg> x65 = LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x17, _extra0), count), _super);
  BoundLayout<Reg> x66 = LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x17, _extra1), count), _super);
  BoundLayout<Reg> x67 = LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x17, _extra2), count), _super);
  if (to_size_t(x8[12]._super)) {
    // setup_major(zirgen/circuit/keccak/keccak.zir:1147)
    RetTupleStruct x68 = back_RetTuple(ctx, 0, arg1);
    RetTupleStruct x69 = execSha256fini_8_(ctx, x68, arg1, LAYOUT_LOOKUP(x17, _super));
    // setup_major(zirgen/circuit/keccak/keccak.zir:1134)
    STORE(x65, Val(0));
    EQZ(LOAD(x65, 0), "setup_major(zirgen/circuit/keccak/keccak.zir:1134)");
    STORE(x66, Val(0));
    EQZ(LOAD(x66, 0), "setup_major(zirgen/circuit/keccak/keccak.zir:1134)");
    STORE(x67, Val(0));
    EQZ(LOAD(x67, 0), "setup_major(zirgen/circuit/keccak/keccak.zir:1134)");
  }
  // setup_major(zirgen/circuit/keccak/keccak.zir:1155)
  Val22Array x70 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // setup_major(zirgen/circuit/keccak/keccak.zir:1134)
  BoundLayout<Reg> x71 = LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x18, _extra0), count), _super);
  BoundLayout<Reg> x72 = LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x18, _extra1), count), _super);
  BoundLayout<Reg> x73 = LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x18, _extra2), count), _super);
  if (to_size_t(x8[13]._super)) {
    // setup_major(zirgen/circuit/keccak/keccak.zir:1148)
    RetTupleStruct x74 = back_RetTuple(ctx, 1, arg1);
    NondetRegStruct22Array x75 = x74.arrA;
    // setup_major(zirgen/circuit/keccak/keccak.zir:1149)
    Val x76 = x75[0]._super;
    Val x77 = x75[1]._super;
    Val x78 = x75[2]._super;
    Val x79 = x75[3]._super;
    Val x80 = x75[4]._super;
    Val x81 = x75[5]._super;
    Val x82 = x75[6]._super;
    Val x83 = x75[7]._super;
    Val x84 = x75[8]._super;
    Val x85 = x75[9]._super;
    Val x86 = x75[10]._super;
    Val x87 = x75[11]._super;
    Val x88 = x75[12]._super;
    Val x89 = x75[13]._super;
    Val x90 = x75[14]._super;
    Val x91 = x75[15]._super;
    ShaOutputStruct x92 = exec_ShaOutput(
        ctx,
        Val16Array{x76, x77, x78, x79, x80, x81, x82, x83, x84, x85, x86, x87, x88, x89, x90, x91},
        LAYOUT_LOOKUP(x4, output));
    // Log(<preamble>:16)
    // setup_major(zirgen/circuit/keccak/keccak.zir:1150)
    INVOKE_EXTERN(
        ctx,
        log,
        "sha256output: %x,%x %x,%x %x,%x %x,%x %x,%x %x,%x %x,%x %x,%x",
        std::initializer_list<Val>{
            x76, x77, x78, x79, x80, x81, x82, x83, x84, x85, x86, x87, x88, x89, x90, x91});
    // setup_major(zirgen/circuit/keccak/keccak.zir:1155)
    RetTupleStruct x93 = back_RetTuple(ctx, 1, arg1);
    NondetRegStruct22Array x94 = x93.arrA;
    RetTupleStruct x95 = exec_RetTuple(
        ctx,
        Val22Array{x94[0]._super,  x94[1]._super,  x94[2]._super,  x94[3]._super,  x94[4]._super,
                   x94[5]._super,  x94[6]._super,  x94[7]._super,  x94[8]._super,  x94[9]._super,
                   x94[10]._super, x94[11]._super, x94[12]._super, x94[13]._super, x94[14]._super,
                   x94[15]._super, x94[16]._super, x94[17]._super, x94[18]._super, x94[19]._super,
                   x94[20]._super, x94[21]._super},
        x70,
        x70,
        Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                   Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                   Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
        x70,
        x70,
        Val(13),
        Val(17),
        Val(0),
        Val(0),
        Val(0),
        LAYOUT_LOOKUP(x18, _super));
    // setup_major(zirgen/circuit/keccak/keccak.zir:1134)
    STORE(x71, Val(0));
    EQZ(LOAD(x71, 0), "setup_major(zirgen/circuit/keccak/keccak.zir:1134)");
    STORE(x72, Val(0));
    EQZ(LOAD(x72, 0), "setup_major(zirgen/circuit/keccak/keccak.zir:1134)");
    STORE(x73, Val(0));
    EQZ(LOAD(x73, 0), "setup_major(zirgen/circuit/keccak/keccak.zir:1134)");
  }
  RetTupleStruct x96 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x5, _super));
  return x96;
}
OneHot_23_Struct
exec_OneHot_23_(ExecContext& ctx, Val arg0, BoundLayout<OneHot_23_Layout> layout1) {
  // OneHot(zirgen/circuit/keccak/one_hot.zir:7)
  NondetRegStruct23Array x2 =
      map(Val23Array{Val(0),  Val(1),  Val(2),  Val(3),  Val(4),  Val(5),  Val(6),  Val(7),
                     Val(8),  Val(9),  Val(10), Val(11), Val(12), Val(13), Val(14), Val(15),
                     Val(16), Val(17), Val(18), Val(19), Val(20), Val(21), Val(22)},
          LAYOUT_LOOKUP(layout1, _super),
          std::function([&](Val23Array::value_type x3,
                            BoundLayout<NondetRegLayout23LayoutArray::value_type> x4) {
            NondetRegStruct x5 = exec_NondetBitReg(ctx, isz((x3 - arg0)), x4);
            return x5;
          }));
  // OneHot(zirgen/circuit/keccak/one_hot.zir:9)
  Val x6 = x2[1]._super;
  Val x7 = x2[2]._super;
  Val x8 = x2[3]._super;
  Val x9 = x2[4]._super;
  Val x10 = ((((x2[0]._super + x6) + x7) + x8) + x9);
  Val x11 = x2[5]._super;
  Val x12 = x2[6]._super;
  Val x13 = x2[7]._super;
  Val x14 = x2[8]._super;
  Val x15 = x2[9]._super;
  Val x16 = x2[10]._super;
  Val x17 = ((((((x10 + x11) + x12) + x13) + x14) + x15) + x16);
  Val x18 = x2[11]._super;
  Val x19 = x2[12]._super;
  Val x20 = x2[13]._super;
  Val x21 = x2[14]._super;
  Val x22 = x2[15]._super;
  Val x23 = x2[16]._super;
  Val x24 = ((((((x17 + x18) + x19) + x20) + x21) + x22) + x23);
  Val x25 = x2[17]._super;
  Val x26 = x2[18]._super;
  Val x27 = x2[19]._super;
  Val x28 = x2[20]._super;
  Val x29 = x2[21]._super;
  Val x30 = x2[22]._super;
  Val x31 = ((((((x24 + x25) + x26) + x27) + x28) + x29) + x30);
  EQZ((x31 - Val(1)), "OneHot(zirgen/circuit/keccak/one_hot.zir:9)");
  // OneHot(zirgen/circuit/keccak/one_hot.zir:11)
  Val x32 = ((((((x6 + (x7 * Val(2))) + (x8 * Val(3))) + (x9 * Val(4))) + (x11 * Val(5))) +
              (x12 * Val(6))) +
             (x13 * Val(7)));
  Val x33 = ((((((x32 + (x14 * Val(8))) + (x15 * Val(9))) + (x16 * Val(10))) + (x18 * Val(11))) +
              (x19 * Val(12))) +
             (x20 * Val(13)));
  Val x34 = ((((((x33 + (x21 * Val(14))) + (x22 * Val(15))) + (x23 * Val(16))) + (x25 * Val(17))) +
              (x26 * Val(18))) +
             (x27 * Val(19)));
  EQZ(((((x34 + (x28 * Val(20))) + (x29 * Val(21))) + (x30 * Val(22))) - arg0),
      "OneHot(zirgen/circuit/keccak/one_hot.zir:11)");
  return OneHot_23_Struct{._super = x2};
}
OneHot_4_Struct exec_OneHot_4_(ExecContext& ctx, Val arg0, BoundLayout<OneHot_4_Layout> layout1) {
  // OneHot(zirgen/circuit/keccak/one_hot.zir:7)
  NondetRegStruct4Array x2 =
      map(Val4Array{Val(0), Val(1), Val(2), Val(3)},
          LAYOUT_LOOKUP(layout1, _super),
          std::function([&](Val4Array::value_type x3,
                            BoundLayout<NondetRegLayout4LayoutArray::value_type> x4) {
            NondetRegStruct x5 = exec_NondetBitReg(ctx, isz((x3 - arg0)), x4);
            return x5;
          }));
  // OneHot(zirgen/circuit/keccak/one_hot.zir:9)
  Val x6 = x2[1]._super;
  Val x7 = x2[2]._super;
  Val x8 = x2[3]._super;
  Val x9 = ((((x2[0]._super + x6) + x7) + x8) - Val(1));
  EQZ(x9, "OneHot(zirgen/circuit/keccak/one_hot.zir:9)");
  // OneHot(zirgen/circuit/keccak/one_hot.zir:11)
  EQZ((((x6 + (x7 * Val(2))) + (x8 * Val(3))) - arg0),
      "OneHot(zirgen/circuit/keccak/one_hot.zir:11)");
  return OneHot_4_Struct{._super = x2};
}
FromBits_22_Struct execXor5wordsResult_0__0_(ExecContext& ctx,
                                             RetTupleStruct arg0,
                                             BoundLayout<Xor5wordsResult_0__0_Layout> layout1) {
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:161)
  NondetRegStruct22Array x2 = arg0.arrA;
  Val x3 = x2[0]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:165)
  ToBits_22_Struct x4 = exec_ToBits_22_(ctx, x3, LAYOUT_LOOKUP(layout1, unpackA));
  NondetRegStruct22Array x5 = x4._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:166)
  Val x6 = (((x5[0]._super + (x5[1]._super * Val(2))) + (x5[2]._super * Val(4))) +
            (x5[3]._super * Val(8)));
  Val x7 =
      ((((x6 + (x5[4]._super * Val(16))) + (x5[5]._super * Val(32))) + (x5[6]._super * Val(64))) +
       (x5[7]._super * Val(128)));
  Val x8 = ((((x7 + (x5[8]._super * Val(256))) + (x5[9]._super * Val(512))) +
             (x5[10]._super * Val(1024))) +
            (x5[11]._super * Val(2048)));
  Val x9 = ((((x8 + (x5[12]._super * Val(4096))) + (x5[13]._super * Val(8192))) +
             (x5[14]._super * Val(16384))) +
            (x5[15]._super * Val(32768)));
  Val x10 = ((((x9 + (x5[16]._super * Val(65536))) + (x5[17]._super * Val(131072))) +
              (x5[18]._super * Val(262144))) +
             (x5[19]._super * Val(524288)));
  EQZ((((x10 + (x5[20]._super * Val(1048576))) + (x5[21]._super * Val(2097152))) - x3),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:166)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:169)
  Val x11 = x2[15]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:171)
  ToBits_22_Struct x12 = exec_ToBits_22_(ctx, x11, LAYOUT_LOOKUP(layout1, unpackB));
  NondetRegStruct22Array x13 = x12._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:172)
  Val x14 = (((x13[0]._super + (x13[1]._super * Val(2))) + (x13[2]._super * Val(4))) +
             (x13[3]._super * Val(8)));
  Val x15 = ((((x14 + (x13[4]._super * Val(16))) + (x13[5]._super * Val(32))) +
              (x13[6]._super * Val(64))) +
             (x13[7]._super * Val(128)));
  Val x16 = ((((x15 + (x13[8]._super * Val(256))) + (x13[9]._super * Val(512))) +
              (x13[10]._super * Val(1024))) +
             (x13[11]._super * Val(2048)));
  Val x17 = ((((x16 + (x13[12]._super * Val(4096))) + (x13[13]._super * Val(8192))) +
              (x13[14]._super * Val(16384))) +
             (x13[15]._super * Val(32768)));
  Val x18 = ((((x17 + (x13[16]._super * Val(65536))) + (x13[17]._super * Val(131072))) +
              (x13[18]._super * Val(262144))) +
             (x13[19]._super * Val(524288)));
  EQZ((((x18 + (x13[20]._super * Val(1048576))) + (x13[21]._super * Val(2097152))) - x11),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:172)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:175)
  Val x19 = arg0.arrB[8]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:177)
  ToBits_22_Struct x20 = exec_ToBits_22_(ctx, x19, LAYOUT_LOOKUP(layout1, unpackC));
  NondetRegStruct22Array x21 = x20._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:178)
  Val x22 = (((x21[0]._super + (x21[1]._super * Val(2))) + (x21[2]._super * Val(4))) +
             (x21[3]._super * Val(8)));
  Val x23 = ((((x22 + (x21[4]._super * Val(16))) + (x21[5]._super * Val(32))) +
              (x21[6]._super * Val(64))) +
             (x21[7]._super * Val(128)));
  Val x24 = ((((x23 + (x21[8]._super * Val(256))) + (x21[9]._super * Val(512))) +
              (x21[10]._super * Val(1024))) +
             (x21[11]._super * Val(2048)));
  Val x25 = ((((x24 + (x21[12]._super * Val(4096))) + (x21[13]._super * Val(8192))) +
              (x21[14]._super * Val(16384))) +
             (x21[15]._super * Val(32768)));
  Val x26 = ((((x25 + (x21[16]._super * Val(65536))) + (x21[17]._super * Val(131072))) +
              (x21[18]._super * Val(262144))) +
             (x21[19]._super * Val(524288)));
  EQZ((((x26 + (x21[20]._super * Val(1048576))) + (x21[21]._super * Val(2097152))) - x19),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:178)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:161)
  NondetRegStruct22Array x27 = arg0.arrC;
  Val x28 = x27[1]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:181)
  ToBits_22_Struct x29 = exec_ToBits_22_(ctx, x28, LAYOUT_LOOKUP(layout1, unpackD));
  NondetRegStruct22Array x30 = x29._super;
  Val x31 = x30[0]._super;
  Val x32 = x30[1]._super;
  Val x33 = x30[2]._super;
  Val x34 = x30[3]._super;
  Val x35 = x30[4]._super;
  Val x36 = x30[5]._super;
  Val x37 = x30[6]._super;
  Val x38 = x30[7]._super;
  Val x39 = x30[8]._super;
  Val x40 = x30[9]._super;
  Val x41 = x30[10]._super;
  Val x42 = x30[11]._super;
  Val x43 = x30[12]._super;
  Val x44 = x30[13]._super;
  Val x45 = x30[14]._super;
  Val x46 = x30[15]._super;
  Val x47 = x30[16]._super;
  Val x48 = x30[17]._super;
  Val x49 = x30[18]._super;
  Val x50 = x30[19]._super;
  Val x51 = x30[20]._super;
  Val x52 = x30[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:182)
  Val x53 = ((((((x31 + (x32 * Val(2))) + (x33 * Val(4))) + (x34 * Val(8))) + (x35 * Val(16))) +
              (x36 * Val(32))) +
             (x37 * Val(64)));
  Val x54 =
      ((((((x53 + (x38 * Val(128))) + (x39 * Val(256))) + (x40 * Val(512))) + (x41 * Val(1024))) +
        (x42 * Val(2048))) +
       (x43 * Val(4096)));
  Val x55 = ((((((x54 + (x44 * Val(8192))) + (x45 * Val(16384))) + (x46 * Val(32768))) +
               (x47 * Val(65536))) +
              (x48 * Val(131072))) +
             (x49 * Val(262144)));
  EQZ(((((x55 + (x50 * Val(524288))) + (x51 * Val(1048576))) + (x52 * Val(2097152))) - x28),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:182)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:185)
  Val x56 = x27[16]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:187)
  ToBits_22_Struct x57 = exec_ToBits_22_(ctx, x56, LAYOUT_LOOKUP(layout1, unpackE));
  NondetRegStruct22Array x58 = x57._super;
  Val x59 = x58[0]._super;
  Val x60 = x58[1]._super;
  Val x61 = x58[2]._super;
  Val x62 = x58[3]._super;
  Val x63 = x58[4]._super;
  Val x64 = x58[5]._super;
  Val x65 = x58[6]._super;
  Val x66 = x58[7]._super;
  Val x67 = x58[8]._super;
  Val x68 = x58[9]._super;
  Val x69 = x58[10]._super;
  Val x70 = x58[11]._super;
  Val x71 = x58[12]._super;
  Val x72 = x58[13]._super;
  Val x73 = x58[14]._super;
  Val x74 = x58[15]._super;
  Val x75 = x58[16]._super;
  Val x76 = x58[17]._super;
  Val x77 = x58[18]._super;
  Val x78 = x58[19]._super;
  Val x79 = x58[20]._super;
  Val x80 = x58[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:188)
  Val x81 = ((((((x59 + (x60 * Val(2))) + (x61 * Val(4))) + (x62 * Val(8))) + (x63 * Val(16))) +
              (x64 * Val(32))) +
             (x65 * Val(64)));
  Val x82 =
      ((((((x81 + (x66 * Val(128))) + (x67 * Val(256))) + (x68 * Val(512))) + (x69 * Val(1024))) +
        (x70 * Val(2048))) +
       (x71 * Val(4096)));
  Val x83 = ((((((x82 + (x72 * Val(8192))) + (x73 * Val(16384))) + (x74 * Val(32768))) +
               (x75 * Val(65536))) +
              (x76 * Val(131072))) +
             (x77 * Val(262144)));
  EQZ(((((x83 + (x78 * Val(524288))) + (x79 * Val(1048576))) + (x80 * Val(2097152))) - x56),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:188)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  NondetRegStruct22Array x84 =
      map(Val22Array{Val(0),  Val(1),  Val(2),  Val(3),  Val(4),  Val(5),  Val(6),  Val(7),
                     Val(8),  Val(9),  Val(10), Val(11), Val(12), Val(13), Val(14), Val(15),
                     Val(16), Val(17), Val(18), Val(19), Val(20), Val(21)},
          LAYOUT_LOOKUP(layout1, xorAbc),
          std::function([&](Val22Array::value_type x85,
                            BoundLayout<NondetRegLayout22LayoutArray::value_type> x86) {
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:165)
            Val x87 = x5[to_size_t(x85)]._super;
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:171)
            Val x88 = x13[to_size_t(x85)]._super;
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:177)
            Val x89 = x21[to_size_t(x85)]._super;
            // xor3(zirgen/circuit/keccak/keccak.zir:110)
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:191)
            Val x90 = ((x87 * x88) + ((Val(1) - x87) * (Val(1) - x88)));
            NondetRegStruct x91 =
                exec_Reg(ctx, ((x90 * x89) + ((Val(1) - x90) * (Val(1) - x89))), x86);
            return x91;
          }));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x92 = x84[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x93 = ((x92 * x31) + ((Val(1) - x92) * (Val(1) - x31)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x94 = x84[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x95 = ((x94 * x32) + ((Val(1) - x94) * (Val(1) - x32)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x96 = x84[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x97 = ((x96 * x33) + ((Val(1) - x96) * (Val(1) - x33)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x98 = x84[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x99 = ((x98 * x34) + ((Val(1) - x98) * (Val(1) - x34)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x100 = x84[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x101 = ((x100 * x35) + ((Val(1) - x100) * (Val(1) - x35)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x102 = x84[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x103 = ((x102 * x36) + ((Val(1) - x102) * (Val(1) - x36)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x104 = x84[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x105 = ((x104 * x37) + ((Val(1) - x104) * (Val(1) - x37)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x106 = x84[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x107 = ((x106 * x38) + ((Val(1) - x106) * (Val(1) - x38)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x108 = x84[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x109 = ((x108 * x39) + ((Val(1) - x108) * (Val(1) - x39)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x110 = x84[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x111 = ((x110 * x40) + ((Val(1) - x110) * (Val(1) - x40)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x112 = x84[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x113 = ((x112 * x41) + ((Val(1) - x112) * (Val(1) - x41)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x114 = x84[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x115 = ((x114 * x42) + ((Val(1) - x114) * (Val(1) - x42)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x116 = x84[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x117 = ((x116 * x43) + ((Val(1) - x116) * (Val(1) - x43)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x118 = x84[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x119 = ((x118 * x44) + ((Val(1) - x118) * (Val(1) - x44)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x120 = x84[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x121 = ((x120 * x45) + ((Val(1) - x120) * (Val(1) - x45)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x122 = x84[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x123 = ((x122 * x46) + ((Val(1) - x122) * (Val(1) - x46)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x124 = x84[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x125 = ((x124 * x47) + ((Val(1) - x124) * (Val(1) - x47)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x126 = x84[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x127 = ((x126 * x48) + ((Val(1) - x126) * (Val(1) - x48)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x128 = x84[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x129 = ((x128 * x49) + ((Val(1) - x128) * (Val(1) - x49)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x130 = x84[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x131 = ((x130 * x50) + ((Val(1) - x130) * (Val(1) - x50)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x132 = x84[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x133 = ((x132 * x51) + ((Val(1) - x132) * (Val(1) - x51)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x134 = x84[21]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x135 = ((x134 * x52) + ((Val(1) - x134) * (Val(1) - x52)));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:196)
  Val x136 = (((x93 * x59) + ((Val(1) - x93) * (Val(1) - x59))) +
              (((x95 * x60) + ((Val(1) - x95) * (Val(1) - x60))) * Val(2)));
  Val x137 = ((x136 + (((x97 * x61) + ((Val(1) - x97) * (Val(1) - x61))) * Val(4))) +
              (((x99 * x62) + ((Val(1) - x99) * (Val(1) - x62))) * Val(8)));
  Val x138 = ((x137 + (((x101 * x63) + ((Val(1) - x101) * (Val(1) - x63))) * Val(16))) +
              (((x103 * x64) + ((Val(1) - x103) * (Val(1) - x64))) * Val(32)));
  Val x139 = ((x138 + (((x105 * x65) + ((Val(1) - x105) * (Val(1) - x65))) * Val(64))) +
              (((x107 * x66) + ((Val(1) - x107) * (Val(1) - x66))) * Val(128)));
  Val x140 = ((x139 + (((x109 * x67) + ((Val(1) - x109) * (Val(1) - x67))) * Val(256))) +
              (((x111 * x68) + ((Val(1) - x111) * (Val(1) - x68))) * Val(512)));
  Val x141 = ((x140 + (((x113 * x69) + ((Val(1) - x113) * (Val(1) - x69))) * Val(1024))) +
              (((x115 * x70) + ((Val(1) - x115) * (Val(1) - x70))) * Val(2048)));
  Val x142 = ((x141 + (((x117 * x71) + ((Val(1) - x117) * (Val(1) - x71))) * Val(4096))) +
              (((x119 * x72) + ((Val(1) - x119) * (Val(1) - x72))) * Val(8192)));
  Val x143 = ((x142 + (((x121 * x73) + ((Val(1) - x121) * (Val(1) - x73))) * Val(16384))) +
              (((x123 * x74) + ((Val(1) - x123) * (Val(1) - x74))) * Val(32768)));
  Val x144 = ((x143 + (((x125 * x75) + ((Val(1) - x125) * (Val(1) - x75))) * Val(65536))) +
              (((x127 * x76) + ((Val(1) - x127) * (Val(1) - x76))) * Val(131072)));
  Val x145 = ((x144 + (((x129 * x77) + ((Val(1) - x129) * (Val(1) - x77))) * Val(262144))) +
              (((x131 * x78) + ((Val(1) - x131) * (Val(1) - x78))) * Val(524288)));
  Val x146 = ((x145 + (((x133 * x79) + ((Val(1) - x133) * (Val(1) - x79))) * Val(1048576))) +
              (((x135 * x80) + ((Val(1) - x135) * (Val(1) - x80))) * Val(2097152)));
  return FromBits_22_Struct{._super = x146};
}
RetTupleStruct execXor5wordsMinor0_0_(ExecContext& ctx,
                                      RetTupleStruct arg0,
                                      BoundLayout<Xor5wordsMinor0_0_Layout> layout1) {
  // xor5words_minor0(zirgen/circuit/keccak/keccak.zir:200)
  FromBits_22_Struct x2 = execXor5wordsResult_0__0_(ctx, arg0, LAYOUT_LOOKUP(layout1, _0));
  NondetRegStruct x3 = exec_Reg(ctx, x2._super, LAYOUT_LOOKUP(layout1, result));
  // xor5words_minor0(zirgen/circuit/keccak/keccak.zir:202)
  Val22Array x4 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                             Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                             Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x5 =
      exec_RetTuple(ctx,
                    x4,
                    x4,
                    x4,
                    Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),    Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),    Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), x3._super, Val(0)},
                    x4,
                    x4,
                    Val(1),
                    Val(0),
                    arg0.rnd._super,
                    arg0.blk._super,
                    arg0.midx._super,
                    LAYOUT_LOOKUP(layout1, _super));
  return x5;
}
FromBits_21_Struct execXor5wordsResult_0__1_(ExecContext& ctx,
                                             RetTupleStruct arg0,
                                             BoundLayout<Xor5wordsResult_0__1_Layout> layout1) {
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:161)
  NondetRegStruct22Array x2 = arg0.arrA;
  Val x3 = x2[1]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:165)
  ToBits_21_Struct x4 = exec_ToBits_21_(ctx, x3, LAYOUT_LOOKUP(layout1, unpackA));
  NondetRegStruct21Array x5 = x4._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:166)
  Val x6 = (((x5[0]._super + (x5[1]._super * Val(2))) + (x5[2]._super * Val(4))) +
            (x5[3]._super * Val(8)));
  Val x7 =
      ((((x6 + (x5[4]._super * Val(16))) + (x5[5]._super * Val(32))) + (x5[6]._super * Val(64))) +
       (x5[7]._super * Val(128)));
  Val x8 = ((((x7 + (x5[8]._super * Val(256))) + (x5[9]._super * Val(512))) +
             (x5[10]._super * Val(1024))) +
            (x5[11]._super * Val(2048)));
  Val x9 = ((((x8 + (x5[12]._super * Val(4096))) + (x5[13]._super * Val(8192))) +
             (x5[14]._super * Val(16384))) +
            (x5[15]._super * Val(32768)));
  Val x10 = ((((x9 + (x5[16]._super * Val(65536))) + (x5[17]._super * Val(131072))) +
              (x5[18]._super * Val(262144))) +
             (x5[19]._super * Val(524288)));
  EQZ(((x10 + (x5[20]._super * Val(1048576))) - x3),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:166)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:169)
  Val x11 = x2[16]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:171)
  ToBits_21_Struct x12 = exec_ToBits_21_(ctx, x11, LAYOUT_LOOKUP(layout1, unpackB));
  NondetRegStruct21Array x13 = x12._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:172)
  Val x14 = (((x13[0]._super + (x13[1]._super * Val(2))) + (x13[2]._super * Val(4))) +
             (x13[3]._super * Val(8)));
  Val x15 = ((((x14 + (x13[4]._super * Val(16))) + (x13[5]._super * Val(32))) +
              (x13[6]._super * Val(64))) +
             (x13[7]._super * Val(128)));
  Val x16 = ((((x15 + (x13[8]._super * Val(256))) + (x13[9]._super * Val(512))) +
              (x13[10]._super * Val(1024))) +
             (x13[11]._super * Val(2048)));
  Val x17 = ((((x16 + (x13[12]._super * Val(4096))) + (x13[13]._super * Val(8192))) +
              (x13[14]._super * Val(16384))) +
             (x13[15]._super * Val(32768)));
  Val x18 = ((((x17 + (x13[16]._super * Val(65536))) + (x13[17]._super * Val(131072))) +
              (x13[18]._super * Val(262144))) +
             (x13[19]._super * Val(524288)));
  EQZ(((x18 + (x13[20]._super * Val(1048576))) - x11),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:172)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:175)
  Val x19 = arg0.arrB[9]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:177)
  ToBits_21_Struct x20 = exec_ToBits_21_(ctx, x19, LAYOUT_LOOKUP(layout1, unpackC));
  NondetRegStruct21Array x21 = x20._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:178)
  Val x22 = (((x21[0]._super + (x21[1]._super * Val(2))) + (x21[2]._super * Val(4))) +
             (x21[3]._super * Val(8)));
  Val x23 = ((((x22 + (x21[4]._super * Val(16))) + (x21[5]._super * Val(32))) +
              (x21[6]._super * Val(64))) +
             (x21[7]._super * Val(128)));
  Val x24 = ((((x23 + (x21[8]._super * Val(256))) + (x21[9]._super * Val(512))) +
              (x21[10]._super * Val(1024))) +
             (x21[11]._super * Val(2048)));
  Val x25 = ((((x24 + (x21[12]._super * Val(4096))) + (x21[13]._super * Val(8192))) +
              (x21[14]._super * Val(16384))) +
             (x21[15]._super * Val(32768)));
  Val x26 = ((((x25 + (x21[16]._super * Val(65536))) + (x21[17]._super * Val(131072))) +
              (x21[18]._super * Val(262144))) +
             (x21[19]._super * Val(524288)));
  EQZ(((x26 + (x21[20]._super * Val(1048576))) - x19),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:178)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:161)
  NondetRegStruct22Array x27 = arg0.arrC;
  Val x28 = x27[2]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:181)
  ToBits_21_Struct x29 = exec_ToBits_21_(ctx, x28, LAYOUT_LOOKUP(layout1, unpackD));
  NondetRegStruct21Array x30 = x29._super;
  Val x31 = x30[0]._super;
  Val x32 = x30[1]._super;
  Val x33 = x30[2]._super;
  Val x34 = x30[3]._super;
  Val x35 = x30[4]._super;
  Val x36 = x30[5]._super;
  Val x37 = x30[6]._super;
  Val x38 = x30[7]._super;
  Val x39 = x30[8]._super;
  Val x40 = x30[9]._super;
  Val x41 = x30[10]._super;
  Val x42 = x30[11]._super;
  Val x43 = x30[12]._super;
  Val x44 = x30[13]._super;
  Val x45 = x30[14]._super;
  Val x46 = x30[15]._super;
  Val x47 = x30[16]._super;
  Val x48 = x30[17]._super;
  Val x49 = x30[18]._super;
  Val x50 = x30[19]._super;
  Val x51 = x30[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:182)
  Val x52 = ((((((x31 + (x32 * Val(2))) + (x33 * Val(4))) + (x34 * Val(8))) + (x35 * Val(16))) +
              (x36 * Val(32))) +
             (x37 * Val(64)));
  Val x53 =
      ((((((x52 + (x38 * Val(128))) + (x39 * Val(256))) + (x40 * Val(512))) + (x41 * Val(1024))) +
        (x42 * Val(2048))) +
       (x43 * Val(4096)));
  Val x54 = ((((((x53 + (x44 * Val(8192))) + (x45 * Val(16384))) + (x46 * Val(32768))) +
               (x47 * Val(65536))) +
              (x48 * Val(131072))) +
             (x49 * Val(262144)));
  EQZ((((x54 + (x50 * Val(524288))) + (x51 * Val(1048576))) - x28),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:182)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:185)
  Val x55 = x27[17]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:187)
  ToBits_21_Struct x56 = exec_ToBits_21_(ctx, x55, LAYOUT_LOOKUP(layout1, unpackE));
  NondetRegStruct21Array x57 = x56._super;
  Val x58 = x57[0]._super;
  Val x59 = x57[1]._super;
  Val x60 = x57[2]._super;
  Val x61 = x57[3]._super;
  Val x62 = x57[4]._super;
  Val x63 = x57[5]._super;
  Val x64 = x57[6]._super;
  Val x65 = x57[7]._super;
  Val x66 = x57[8]._super;
  Val x67 = x57[9]._super;
  Val x68 = x57[10]._super;
  Val x69 = x57[11]._super;
  Val x70 = x57[12]._super;
  Val x71 = x57[13]._super;
  Val x72 = x57[14]._super;
  Val x73 = x57[15]._super;
  Val x74 = x57[16]._super;
  Val x75 = x57[17]._super;
  Val x76 = x57[18]._super;
  Val x77 = x57[19]._super;
  Val x78 = x57[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:188)
  Val x79 = ((((((x58 + (x59 * Val(2))) + (x60 * Val(4))) + (x61 * Val(8))) + (x62 * Val(16))) +
              (x63 * Val(32))) +
             (x64 * Val(64)));
  Val x80 =
      ((((((x79 + (x65 * Val(128))) + (x66 * Val(256))) + (x67 * Val(512))) + (x68 * Val(1024))) +
        (x69 * Val(2048))) +
       (x70 * Val(4096)));
  Val x81 = ((((((x80 + (x71 * Val(8192))) + (x72 * Val(16384))) + (x73 * Val(32768))) +
               (x74 * Val(65536))) +
              (x75 * Val(131072))) +
             (x76 * Val(262144)));
  EQZ((((x81 + (x77 * Val(524288))) + (x78 * Val(1048576))) - x55),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:188)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  NondetRegStruct21Array x82 =
      map(Val21Array{Val(0),  Val(1),  Val(2),  Val(3),  Val(4),  Val(5),  Val(6),
                     Val(7),  Val(8),  Val(9),  Val(10), Val(11), Val(12), Val(13),
                     Val(14), Val(15), Val(16), Val(17), Val(18), Val(19), Val(20)},
          LAYOUT_LOOKUP(layout1, xorAbc),
          std::function([&](Val21Array::value_type x83,
                            BoundLayout<NondetRegLayout21LayoutArray::value_type> x84) {
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:165)
            Val x85 = x5[to_size_t(x83)]._super;
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:171)
            Val x86 = x13[to_size_t(x83)]._super;
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:177)
            Val x87 = x21[to_size_t(x83)]._super;
            // xor3(zirgen/circuit/keccak/keccak.zir:110)
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:191)
            Val x88 = ((x85 * x86) + ((Val(1) - x85) * (Val(1) - x86)));
            NondetRegStruct x89 =
                exec_Reg(ctx, ((x88 * x87) + ((Val(1) - x88) * (Val(1) - x87))), x84);
            return x89;
          }));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x90 = x82[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x91 = ((x90 * x31) + ((Val(1) - x90) * (Val(1) - x31)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x92 = x82[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x93 = ((x92 * x32) + ((Val(1) - x92) * (Val(1) - x32)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x94 = x82[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x95 = ((x94 * x33) + ((Val(1) - x94) * (Val(1) - x33)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x96 = x82[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x97 = ((x96 * x34) + ((Val(1) - x96) * (Val(1) - x34)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x98 = x82[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x99 = ((x98 * x35) + ((Val(1) - x98) * (Val(1) - x35)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x100 = x82[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x101 = ((x100 * x36) + ((Val(1) - x100) * (Val(1) - x36)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x102 = x82[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x103 = ((x102 * x37) + ((Val(1) - x102) * (Val(1) - x37)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x104 = x82[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x105 = ((x104 * x38) + ((Val(1) - x104) * (Val(1) - x38)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x106 = x82[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x107 = ((x106 * x39) + ((Val(1) - x106) * (Val(1) - x39)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x108 = x82[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x109 = ((x108 * x40) + ((Val(1) - x108) * (Val(1) - x40)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x110 = x82[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x111 = ((x110 * x41) + ((Val(1) - x110) * (Val(1) - x41)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x112 = x82[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x113 = ((x112 * x42) + ((Val(1) - x112) * (Val(1) - x42)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x114 = x82[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x115 = ((x114 * x43) + ((Val(1) - x114) * (Val(1) - x43)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x116 = x82[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x117 = ((x116 * x44) + ((Val(1) - x116) * (Val(1) - x44)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x118 = x82[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x119 = ((x118 * x45) + ((Val(1) - x118) * (Val(1) - x45)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x120 = x82[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x121 = ((x120 * x46) + ((Val(1) - x120) * (Val(1) - x46)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x122 = x82[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x123 = ((x122 * x47) + ((Val(1) - x122) * (Val(1) - x47)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x124 = x82[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x125 = ((x124 * x48) + ((Val(1) - x124) * (Val(1) - x48)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x126 = x82[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x127 = ((x126 * x49) + ((Val(1) - x126) * (Val(1) - x49)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x128 = x82[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x129 = ((x128 * x50) + ((Val(1) - x128) * (Val(1) - x50)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x130 = x82[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x131 = ((x130 * x51) + ((Val(1) - x130) * (Val(1) - x51)));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:196)
  Val x132 = (((x91 * x58) + ((Val(1) - x91) * (Val(1) - x58))) +
              (((x93 * x59) + ((Val(1) - x93) * (Val(1) - x59))) * Val(2)));
  Val x133 = ((x132 + (((x95 * x60) + ((Val(1) - x95) * (Val(1) - x60))) * Val(4))) +
              (((x97 * x61) + ((Val(1) - x97) * (Val(1) - x61))) * Val(8)));
  Val x134 = ((x133 + (((x99 * x62) + ((Val(1) - x99) * (Val(1) - x62))) * Val(16))) +
              (((x101 * x63) + ((Val(1) - x101) * (Val(1) - x63))) * Val(32)));
  Val x135 = ((x134 + (((x103 * x64) + ((Val(1) - x103) * (Val(1) - x64))) * Val(64))) +
              (((x105 * x65) + ((Val(1) - x105) * (Val(1) - x65))) * Val(128)));
  Val x136 = ((x135 + (((x107 * x66) + ((Val(1) - x107) * (Val(1) - x66))) * Val(256))) +
              (((x109 * x67) + ((Val(1) - x109) * (Val(1) - x67))) * Val(512)));
  Val x137 = ((x136 + (((x111 * x68) + ((Val(1) - x111) * (Val(1) - x68))) * Val(1024))) +
              (((x113 * x69) + ((Val(1) - x113) * (Val(1) - x69))) * Val(2048)));
  Val x138 = ((x137 + (((x115 * x70) + ((Val(1) - x115) * (Val(1) - x70))) * Val(4096))) +
              (((x117 * x71) + ((Val(1) - x117) * (Val(1) - x71))) * Val(8192)));
  Val x139 = ((x138 + (((x119 * x72) + ((Val(1) - x119) * (Val(1) - x72))) * Val(16384))) +
              (((x121 * x73) + ((Val(1) - x121) * (Val(1) - x73))) * Val(32768)));
  Val x140 = ((x139 + (((x123 * x74) + ((Val(1) - x123) * (Val(1) - x74))) * Val(65536))) +
              (((x125 * x75) + ((Val(1) - x125) * (Val(1) - x75))) * Val(131072)));
  Val x141 = ((x140 + (((x127 * x76) + ((Val(1) - x127) * (Val(1) - x76))) * Val(262144))) +
              (((x129 * x77) + ((Val(1) - x129) * (Val(1) - x77))) * Val(524288)));
  return FromBits_21_Struct{
      ._super = (x141 + (((x131 * x78) + ((Val(1) - x131) * (Val(1) - x78))) * Val(1048576)))};
}
RetTupleStruct execXor5wordsMinor1_0_(ExecContext& ctx,
                                      RetTupleStruct arg0,
                                      BoundLayout<RetTupleLayout> arg1,
                                      BoundLayout<Xor5wordsMinor1_0_Layout> layout2) {
  // xor5words_minor1(zirgen/circuit/keccak/keccak.zir:207)
  RetTupleStruct x3 = back_RetTuple(ctx, 1, arg1);
  // xor5words_minor1(zirgen/circuit/keccak/keccak.zir:208)
  RetTupleStruct x4 = back_RetTuple(ctx, 2, arg1);
  // xor5words_minor1(zirgen/circuit/keccak/keccak.zir:209)
  FromBits_21_Struct x5 = execXor5wordsResult_0__1_(ctx, x4, LAYOUT_LOOKUP(layout2, _0));
  NondetRegStruct x6 = exec_Reg(ctx, x5._super, LAYOUT_LOOKUP(layout2, result));
  // xor5words_minor1(zirgen/circuit/keccak/keccak.zir:212)
  Val22Array x7 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                             Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                             Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x8 =
      exec_RetTuple(ctx,
                    Val22Array{Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), x3.arrD[22]._super},
                    Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),   Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),   Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), x6._super},
                    x7,
                    Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                    x7,
                    x7,
                    Val(2),
                    Val(0),
                    x3.rnd._super,
                    x3.blk._super,
                    x3.midx._super,
                    LAYOUT_LOOKUP(layout2, _super));
  return x8;
}
FromBits_21_Struct execXor5wordsResult_0__2_(ExecContext& ctx,
                                             RetTupleStruct arg0,
                                             BoundLayout<Xor5wordsResult_0__2_Layout> layout1) {
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:161)
  NondetRegStruct22Array x2 = arg0.arrA;
  Val x3 = x2[2]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:165)
  ToBits_21_Struct x4 = exec_ToBits_21_(ctx, x3, LAYOUT_LOOKUP(layout1, unpackA));
  NondetRegStruct21Array x5 = x4._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:166)
  Val x6 = (((x5[0]._super + (x5[1]._super * Val(2))) + (x5[2]._super * Val(4))) +
            (x5[3]._super * Val(8)));
  Val x7 =
      ((((x6 + (x5[4]._super * Val(16))) + (x5[5]._super * Val(32))) + (x5[6]._super * Val(64))) +
       (x5[7]._super * Val(128)));
  Val x8 = ((((x7 + (x5[8]._super * Val(256))) + (x5[9]._super * Val(512))) +
             (x5[10]._super * Val(1024))) +
            (x5[11]._super * Val(2048)));
  Val x9 = ((((x8 + (x5[12]._super * Val(4096))) + (x5[13]._super * Val(8192))) +
             (x5[14]._super * Val(16384))) +
            (x5[15]._super * Val(32768)));
  Val x10 = ((((x9 + (x5[16]._super * Val(65536))) + (x5[17]._super * Val(131072))) +
              (x5[18]._super * Val(262144))) +
             (x5[19]._super * Val(524288)));
  EQZ(((x10 + (x5[20]._super * Val(1048576))) - x3),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:166)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:169)
  Val x11 = x2[17]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:171)
  ToBits_21_Struct x12 = exec_ToBits_21_(ctx, x11, LAYOUT_LOOKUP(layout1, unpackB));
  NondetRegStruct21Array x13 = x12._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:172)
  Val x14 = (((x13[0]._super + (x13[1]._super * Val(2))) + (x13[2]._super * Val(4))) +
             (x13[3]._super * Val(8)));
  Val x15 = ((((x14 + (x13[4]._super * Val(16))) + (x13[5]._super * Val(32))) +
              (x13[6]._super * Val(64))) +
             (x13[7]._super * Val(128)));
  Val x16 = ((((x15 + (x13[8]._super * Val(256))) + (x13[9]._super * Val(512))) +
              (x13[10]._super * Val(1024))) +
             (x13[11]._super * Val(2048)));
  Val x17 = ((((x16 + (x13[12]._super * Val(4096))) + (x13[13]._super * Val(8192))) +
              (x13[14]._super * Val(16384))) +
             (x13[15]._super * Val(32768)));
  Val x18 = ((((x17 + (x13[16]._super * Val(65536))) + (x13[17]._super * Val(131072))) +
              (x13[18]._super * Val(262144))) +
             (x13[19]._super * Val(524288)));
  EQZ(((x18 + (x13[20]._super * Val(1048576))) - x11),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:172)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:175)
  Val x19 = arg0.arrB[10]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:177)
  ToBits_21_Struct x20 = exec_ToBits_21_(ctx, x19, LAYOUT_LOOKUP(layout1, unpackC));
  NondetRegStruct21Array x21 = x20._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:178)
  Val x22 = (((x21[0]._super + (x21[1]._super * Val(2))) + (x21[2]._super * Val(4))) +
             (x21[3]._super * Val(8)));
  Val x23 = ((((x22 + (x21[4]._super * Val(16))) + (x21[5]._super * Val(32))) +
              (x21[6]._super * Val(64))) +
             (x21[7]._super * Val(128)));
  Val x24 = ((((x23 + (x21[8]._super * Val(256))) + (x21[9]._super * Val(512))) +
              (x21[10]._super * Val(1024))) +
             (x21[11]._super * Val(2048)));
  Val x25 = ((((x24 + (x21[12]._super * Val(4096))) + (x21[13]._super * Val(8192))) +
              (x21[14]._super * Val(16384))) +
             (x21[15]._super * Val(32768)));
  Val x26 = ((((x25 + (x21[16]._super * Val(65536))) + (x21[17]._super * Val(131072))) +
              (x21[18]._super * Val(262144))) +
             (x21[19]._super * Val(524288)));
  EQZ(((x26 + (x21[20]._super * Val(1048576))) - x19),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:178)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:161)
  NondetRegStruct22Array x27 = arg0.arrC;
  Val x28 = x27[3]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:181)
  ToBits_21_Struct x29 = exec_ToBits_21_(ctx, x28, LAYOUT_LOOKUP(layout1, unpackD));
  NondetRegStruct21Array x30 = x29._super;
  Val x31 = x30[0]._super;
  Val x32 = x30[1]._super;
  Val x33 = x30[2]._super;
  Val x34 = x30[3]._super;
  Val x35 = x30[4]._super;
  Val x36 = x30[5]._super;
  Val x37 = x30[6]._super;
  Val x38 = x30[7]._super;
  Val x39 = x30[8]._super;
  Val x40 = x30[9]._super;
  Val x41 = x30[10]._super;
  Val x42 = x30[11]._super;
  Val x43 = x30[12]._super;
  Val x44 = x30[13]._super;
  Val x45 = x30[14]._super;
  Val x46 = x30[15]._super;
  Val x47 = x30[16]._super;
  Val x48 = x30[17]._super;
  Val x49 = x30[18]._super;
  Val x50 = x30[19]._super;
  Val x51 = x30[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:182)
  Val x52 = ((((((x31 + (x32 * Val(2))) + (x33 * Val(4))) + (x34 * Val(8))) + (x35 * Val(16))) +
              (x36 * Val(32))) +
             (x37 * Val(64)));
  Val x53 =
      ((((((x52 + (x38 * Val(128))) + (x39 * Val(256))) + (x40 * Val(512))) + (x41 * Val(1024))) +
        (x42 * Val(2048))) +
       (x43 * Val(4096)));
  Val x54 = ((((((x53 + (x44 * Val(8192))) + (x45 * Val(16384))) + (x46 * Val(32768))) +
               (x47 * Val(65536))) +
              (x48 * Val(131072))) +
             (x49 * Val(262144)));
  EQZ((((x54 + (x50 * Val(524288))) + (x51 * Val(1048576))) - x28),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:182)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:185)
  Val x55 = x27[18]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:187)
  ToBits_21_Struct x56 = exec_ToBits_21_(ctx, x55, LAYOUT_LOOKUP(layout1, unpackE));
  NondetRegStruct21Array x57 = x56._super;
  Val x58 = x57[0]._super;
  Val x59 = x57[1]._super;
  Val x60 = x57[2]._super;
  Val x61 = x57[3]._super;
  Val x62 = x57[4]._super;
  Val x63 = x57[5]._super;
  Val x64 = x57[6]._super;
  Val x65 = x57[7]._super;
  Val x66 = x57[8]._super;
  Val x67 = x57[9]._super;
  Val x68 = x57[10]._super;
  Val x69 = x57[11]._super;
  Val x70 = x57[12]._super;
  Val x71 = x57[13]._super;
  Val x72 = x57[14]._super;
  Val x73 = x57[15]._super;
  Val x74 = x57[16]._super;
  Val x75 = x57[17]._super;
  Val x76 = x57[18]._super;
  Val x77 = x57[19]._super;
  Val x78 = x57[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:188)
  Val x79 = ((((((x58 + (x59 * Val(2))) + (x60 * Val(4))) + (x61 * Val(8))) + (x62 * Val(16))) +
              (x63 * Val(32))) +
             (x64 * Val(64)));
  Val x80 =
      ((((((x79 + (x65 * Val(128))) + (x66 * Val(256))) + (x67 * Val(512))) + (x68 * Val(1024))) +
        (x69 * Val(2048))) +
       (x70 * Val(4096)));
  Val x81 = ((((((x80 + (x71 * Val(8192))) + (x72 * Val(16384))) + (x73 * Val(32768))) +
               (x74 * Val(65536))) +
              (x75 * Val(131072))) +
             (x76 * Val(262144)));
  EQZ((((x81 + (x77 * Val(524288))) + (x78 * Val(1048576))) - x55),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:188)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  NondetRegStruct21Array x82 =
      map(Val21Array{Val(0),  Val(1),  Val(2),  Val(3),  Val(4),  Val(5),  Val(6),
                     Val(7),  Val(8),  Val(9),  Val(10), Val(11), Val(12), Val(13),
                     Val(14), Val(15), Val(16), Val(17), Val(18), Val(19), Val(20)},
          LAYOUT_LOOKUP(layout1, xorAbc),
          std::function([&](Val21Array::value_type x83,
                            BoundLayout<NondetRegLayout21LayoutArray::value_type> x84) {
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:165)
            Val x85 = x5[to_size_t(x83)]._super;
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:171)
            Val x86 = x13[to_size_t(x83)]._super;
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:177)
            Val x87 = x21[to_size_t(x83)]._super;
            // xor3(zirgen/circuit/keccak/keccak.zir:110)
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:191)
            Val x88 = ((x85 * x86) + ((Val(1) - x85) * (Val(1) - x86)));
            NondetRegStruct x89 =
                exec_Reg(ctx, ((x88 * x87) + ((Val(1) - x88) * (Val(1) - x87))), x84);
            return x89;
          }));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x90 = x82[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x91 = ((x90 * x31) + ((Val(1) - x90) * (Val(1) - x31)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x92 = x82[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x93 = ((x92 * x32) + ((Val(1) - x92) * (Val(1) - x32)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x94 = x82[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x95 = ((x94 * x33) + ((Val(1) - x94) * (Val(1) - x33)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x96 = x82[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x97 = ((x96 * x34) + ((Val(1) - x96) * (Val(1) - x34)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x98 = x82[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x99 = ((x98 * x35) + ((Val(1) - x98) * (Val(1) - x35)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x100 = x82[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x101 = ((x100 * x36) + ((Val(1) - x100) * (Val(1) - x36)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x102 = x82[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x103 = ((x102 * x37) + ((Val(1) - x102) * (Val(1) - x37)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x104 = x82[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x105 = ((x104 * x38) + ((Val(1) - x104) * (Val(1) - x38)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x106 = x82[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x107 = ((x106 * x39) + ((Val(1) - x106) * (Val(1) - x39)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x108 = x82[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x109 = ((x108 * x40) + ((Val(1) - x108) * (Val(1) - x40)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x110 = x82[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x111 = ((x110 * x41) + ((Val(1) - x110) * (Val(1) - x41)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x112 = x82[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x113 = ((x112 * x42) + ((Val(1) - x112) * (Val(1) - x42)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x114 = x82[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x115 = ((x114 * x43) + ((Val(1) - x114) * (Val(1) - x43)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x116 = x82[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x117 = ((x116 * x44) + ((Val(1) - x116) * (Val(1) - x44)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x118 = x82[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x119 = ((x118 * x45) + ((Val(1) - x118) * (Val(1) - x45)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x120 = x82[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x121 = ((x120 * x46) + ((Val(1) - x120) * (Val(1) - x46)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x122 = x82[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x123 = ((x122 * x47) + ((Val(1) - x122) * (Val(1) - x47)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x124 = x82[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x125 = ((x124 * x48) + ((Val(1) - x124) * (Val(1) - x48)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x126 = x82[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x127 = ((x126 * x49) + ((Val(1) - x126) * (Val(1) - x49)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x128 = x82[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x129 = ((x128 * x50) + ((Val(1) - x128) * (Val(1) - x50)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x130 = x82[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x131 = ((x130 * x51) + ((Val(1) - x130) * (Val(1) - x51)));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:196)
  Val x132 = (((x91 * x58) + ((Val(1) - x91) * (Val(1) - x58))) +
              (((x93 * x59) + ((Val(1) - x93) * (Val(1) - x59))) * Val(2)));
  Val x133 = ((x132 + (((x95 * x60) + ((Val(1) - x95) * (Val(1) - x60))) * Val(4))) +
              (((x97 * x61) + ((Val(1) - x97) * (Val(1) - x61))) * Val(8)));
  Val x134 = ((x133 + (((x99 * x62) + ((Val(1) - x99) * (Val(1) - x62))) * Val(16))) +
              (((x101 * x63) + ((Val(1) - x101) * (Val(1) - x63))) * Val(32)));
  Val x135 = ((x134 + (((x103 * x64) + ((Val(1) - x103) * (Val(1) - x64))) * Val(64))) +
              (((x105 * x65) + ((Val(1) - x105) * (Val(1) - x65))) * Val(128)));
  Val x136 = ((x135 + (((x107 * x66) + ((Val(1) - x107) * (Val(1) - x66))) * Val(256))) +
              (((x109 * x67) + ((Val(1) - x109) * (Val(1) - x67))) * Val(512)));
  Val x137 = ((x136 + (((x111 * x68) + ((Val(1) - x111) * (Val(1) - x68))) * Val(1024))) +
              (((x113 * x69) + ((Val(1) - x113) * (Val(1) - x69))) * Val(2048)));
  Val x138 = ((x137 + (((x115 * x70) + ((Val(1) - x115) * (Val(1) - x70))) * Val(4096))) +
              (((x117 * x71) + ((Val(1) - x117) * (Val(1) - x71))) * Val(8192)));
  Val x139 = ((x138 + (((x119 * x72) + ((Val(1) - x119) * (Val(1) - x72))) * Val(16384))) +
              (((x121 * x73) + ((Val(1) - x121) * (Val(1) - x73))) * Val(32768)));
  Val x140 = ((x139 + (((x123 * x74) + ((Val(1) - x123) * (Val(1) - x74))) * Val(65536))) +
              (((x125 * x75) + ((Val(1) - x125) * (Val(1) - x75))) * Val(131072)));
  Val x141 = ((x140 + (((x127 * x76) + ((Val(1) - x127) * (Val(1) - x76))) * Val(262144))) +
              (((x129 * x77) + ((Val(1) - x129) * (Val(1) - x77))) * Val(524288)));
  return FromBits_21_Struct{
      ._super = (x141 + (((x131 * x78) + ((Val(1) - x131) * (Val(1) - x78))) * Val(1048576)))};
}
RetTupleStruct execXor5wordsMinor2_0_(ExecContext& ctx,
                                      RetTupleStruct arg0,
                                      BoundLayout<RetTupleLayout> arg1,
                                      BoundLayout<Xor5wordsMinor2_0_Layout> layout2) {
  // xor5words_minor2(zirgen/circuit/keccak/keccak.zir:217)
  RetTupleStruct x3 = back_RetTuple(ctx, 1, arg1);
  // xor5words_minor2(zirgen/circuit/keccak/keccak.zir:218)
  RetTupleStruct x4 = back_RetTuple(ctx, 3, arg1);
  // xor5words_minor2(zirgen/circuit/keccak/keccak.zir:219)
  FromBits_21_Struct x5 = execXor5wordsResult_0__2_(ctx, x4, LAYOUT_LOOKUP(layout2, _0));
  NondetRegStruct x6 = exec_Reg(ctx, x5._super, LAYOUT_LOOKUP(layout2, result));
  // xor5words_minor2(zirgen/circuit/keccak/keccak.zir:223)
  Val22Array x7 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                             Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                             Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x8 =
      exec_RetTuple(ctx,
                    Val22Array{Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), x3.arrA[21]._super},
                    Val22Array{Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), x3.arrB[21]._super},
                    Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),   Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),   Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), x6._super},
                    Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                    x7,
                    x7,
                    Val(3),
                    Val(0),
                    x3.rnd._super,
                    x3.blk._super,
                    x3.midx._super,
                    LAYOUT_LOOKUP(layout2, _super));
  return x8;
}
RetTupleStruct execXor5wordsMinor3_0_(ExecContext& ctx,
                                      RetTupleStruct arg0,
                                      BoundLayout<RetTupleLayout> arg1,
                                      BoundLayout<Xor5wordsMinor3_0_Layout> layout2) {
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:228)
  RetTupleStruct x3 = back_RetTuple(ctx, 1, arg1);
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:229)
  RetTupleStruct x4 = back_RetTuple(ctx, 4, arg1);
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:230)
  Val22Array x5 = Val22Array{Val(0),  Val(1),  Val(2),  Val(3),  Val(4),  Val(5),  Val(6),  Val(7),
                             Val(8),  Val(9),  Val(10), Val(11), Val(12), Val(13), Val(14), Val(15),
                             Val(16), Val(17), Val(18), Val(19), Val(20), Val(21)};
  NondetRegStruct22Array x6 =
      map(x5,
          LAYOUT_LOOKUP(layout2, inpA),
          std::function([&](Val22Array::value_type x7,
                            BoundLayout<NondetRegLayout22LayoutArray::value_type> x8) {
            NondetRegStruct x9 = exec_Reg(ctx, x4.arrA[to_size_t(x7)]._super, x8);
            return x9;
          }));
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:231)
  NondetRegStruct22Array x10 =
      map(x5,
          LAYOUT_LOOKUP(layout2, inpB),
          std::function([&](Val22Array::value_type x11,
                            BoundLayout<NondetRegLayout22LayoutArray::value_type> x12) {
            NondetRegStruct x13 = exec_Reg(ctx, x4.arrB[to_size_t(x11)]._super, x12);
            return x13;
          }));
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:232)
  NondetRegStruct22Array x14 =
      map(x5,
          LAYOUT_LOOKUP(layout2, inpC),
          std::function([&](Val22Array::value_type x15,
                            BoundLayout<NondetRegLayout22LayoutArray::value_type> x16) {
            NondetRegStruct x17 = exec_Reg(ctx, x4.arrC[to_size_t(x15)]._super, x16);
            return x17;
          }));
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:233)
  NondetRegStruct9Array x18 =
      map(Val9Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5), Val(6), Val(7), Val(8)},
          LAYOUT_LOOKUP(layout2, tmp_1),
          std::function([&](Val9Array::value_type x19,
                            BoundLayout<NondetRegLayout9LayoutArray::value_type> x20) {
            NondetRegStruct x21 = exec_Reg(ctx, x4.arrD[to_size_t(x19)]._super, x20);
            return x21;
          }));
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:234)
  NondetRegStruct x22 = exec_Reg(ctx, x3.arrA[21]._super, LAYOUT_LOOKUP(layout2, _0));
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:235)
  NondetRegStruct x23 = exec_Reg(ctx, x3.arrB[21]._super, LAYOUT_LOOKUP(layout2, _1));
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:236)
  NondetRegStruct x24 = exec_Reg(ctx, x3.arrC[21]._super, LAYOUT_LOOKUP(layout2, _2));
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:238)
  Val22Array x25 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x26 = exec_RetTuple(
      ctx,
      Val22Array{x6[0]._super,  x6[1]._super,  x6[2]._super,  x6[3]._super,  x6[4]._super,
                 x6[5]._super,  x6[6]._super,  x6[7]._super,  x6[8]._super,  x6[9]._super,
                 x6[10]._super, x6[11]._super, x6[12]._super, x6[13]._super, x6[14]._super,
                 x6[15]._super, x6[16]._super, x6[17]._super, x6[18]._super, x6[19]._super,
                 x6[20]._super, x6[21]._super},
      Val22Array{x10[0]._super,  x10[1]._super,  x10[2]._super,  x10[3]._super,  x10[4]._super,
                 x10[5]._super,  x10[6]._super,  x10[7]._super,  x10[8]._super,  x10[9]._super,
                 x10[10]._super, x10[11]._super, x10[12]._super, x10[13]._super, x10[14]._super,
                 x10[15]._super, x10[16]._super, x10[17]._super, x10[18]._super, x10[19]._super,
                 x10[20]._super, x10[21]._super},
      Val22Array{x14[0]._super,  x14[1]._super,  x14[2]._super,  x14[3]._super,  x14[4]._super,
                 x14[5]._super,  x14[6]._super,  x14[7]._super,  x14[8]._super,  x14[9]._super,
                 x14[10]._super, x14[11]._super, x14[12]._super, x14[13]._super, x14[14]._super,
                 x14[15]._super, x14[16]._super, x14[17]._super, x14[18]._super, x14[19]._super,
                 x14[20]._super, x14[21]._super},
      Val24Array{x18[0]._super, x18[1]._super, x18[2]._super, x18[3]._super, x18[4]._super,
                 x18[5]._super, x18[6]._super, x18[7]._super, x18[8]._super, x22._super,
                 x23._super,    x24._super,    Val(0),        Val(0),        Val(0),
                 Val(0),        Val(0),        Val(0),        Val(0),        Val(0),
                 Val(0),        Val(0),        Val(0),        Val(0)},
      x25,
      x25,
      Val(0),
      Val(1),
      x3.rnd._super,
      x3.blk._super,
      x3.midx._super,
      LAYOUT_LOOKUP(layout2, _super));
  return x26;
}
RetTupleStruct execXor5wordsMajor_0_(ExecContext& ctx,
                                     RetTupleStruct arg0,
                                     BoundLayout<RetTupleLayout> arg1,
                                     BoundLayout<Xor5wordsMajor_0_Layout> layout2) {
  // xor5words_major(zirgen/circuit/keccak/keccak.zir:244)
  BoundLayout<Xor5wordsMajor_0__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // xor5words_major(zirgen/circuit/keccak/keccak.zir:243)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  OneHot_4_Struct x5 = exec_OneHot_4_(ctx, x4.minor._super, LAYOUT_LOOKUP(layout2, minorOnehot));
  NondetRegStruct4Array x6 = x5._super;
  if (to_size_t(x6[0]._super)) {
    // xor5words_major(zirgen/circuit/keccak/keccak.zir:245)
    RetTupleStruct x7 = back_RetTuple(ctx, 1, arg1);
    RetTupleStruct x8 = execXor5wordsMinor0_0_(ctx, x7, LAYOUT_LOOKUP(x3, arm0));
  }
  if (to_size_t(x6[1]._super)) {
    // xor5words_major(zirgen/circuit/keccak/keccak.zir:246)
    RetTupleStruct x9 = execXor5wordsMinor1_0_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm1));
  }
  if (to_size_t(x6[2]._super)) {
    // xor5words_major(zirgen/circuit/keccak/keccak.zir:247)
    RetTupleStruct x10 = execXor5wordsMinor2_0_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm2));
  }
  if (to_size_t(x6[3]._super)) {
    // xor5words_major(zirgen/circuit/keccak/keccak.zir:248)
    RetTupleStruct x11 = execXor5wordsMinor3_0_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm3));
  }
  // xor5words_major(zirgen/circuit/keccak/keccak.zir:244)
  RetTupleStruct x12 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x12;
}
FromBits_22_Struct execXor5wordsResult_1__0_(ExecContext& ctx,
                                             RetTupleStruct arg0,
                                             BoundLayout<Xor5wordsResult_1__0_Layout> layout1) {
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:161)
  NondetRegStruct22Array x2 = arg0.arrA;
  Val x3 = x2[3]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:165)
  ToBits_22_Struct x4 = exec_ToBits_22_(ctx, x3, LAYOUT_LOOKUP(layout1, unpackA));
  NondetRegStruct22Array x5 = x4._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:166)
  Val x6 = (((x5[0]._super + (x5[1]._super * Val(2))) + (x5[2]._super * Val(4))) +
            (x5[3]._super * Val(8)));
  Val x7 =
      ((((x6 + (x5[4]._super * Val(16))) + (x5[5]._super * Val(32))) + (x5[6]._super * Val(64))) +
       (x5[7]._super * Val(128)));
  Val x8 = ((((x7 + (x5[8]._super * Val(256))) + (x5[9]._super * Val(512))) +
             (x5[10]._super * Val(1024))) +
            (x5[11]._super * Val(2048)));
  Val x9 = ((((x8 + (x5[12]._super * Val(4096))) + (x5[13]._super * Val(8192))) +
             (x5[14]._super * Val(16384))) +
            (x5[15]._super * Val(32768)));
  Val x10 = ((((x9 + (x5[16]._super * Val(65536))) + (x5[17]._super * Val(131072))) +
              (x5[18]._super * Val(262144))) +
             (x5[19]._super * Val(524288)));
  EQZ((((x10 + (x5[20]._super * Val(1048576))) + (x5[21]._super * Val(2097152))) - x3),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:166)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:169)
  Val x11 = x2[18]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:171)
  ToBits_22_Struct x12 = exec_ToBits_22_(ctx, x11, LAYOUT_LOOKUP(layout1, unpackB));
  NondetRegStruct22Array x13 = x12._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:172)
  Val x14 = (((x13[0]._super + (x13[1]._super * Val(2))) + (x13[2]._super * Val(4))) +
             (x13[3]._super * Val(8)));
  Val x15 = ((((x14 + (x13[4]._super * Val(16))) + (x13[5]._super * Val(32))) +
              (x13[6]._super * Val(64))) +
             (x13[7]._super * Val(128)));
  Val x16 = ((((x15 + (x13[8]._super * Val(256))) + (x13[9]._super * Val(512))) +
              (x13[10]._super * Val(1024))) +
             (x13[11]._super * Val(2048)));
  Val x17 = ((((x16 + (x13[12]._super * Val(4096))) + (x13[13]._super * Val(8192))) +
              (x13[14]._super * Val(16384))) +
             (x13[15]._super * Val(32768)));
  Val x18 = ((((x17 + (x13[16]._super * Val(65536))) + (x13[17]._super * Val(131072))) +
              (x13[18]._super * Val(262144))) +
             (x13[19]._super * Val(524288)));
  EQZ((((x18 + (x13[20]._super * Val(1048576))) + (x13[21]._super * Val(2097152))) - x11),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:172)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:175)
  Val x19 = arg0.arrB[11]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:177)
  ToBits_22_Struct x20 = exec_ToBits_22_(ctx, x19, LAYOUT_LOOKUP(layout1, unpackC));
  NondetRegStruct22Array x21 = x20._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:178)
  Val x22 = (((x21[0]._super + (x21[1]._super * Val(2))) + (x21[2]._super * Val(4))) +
             (x21[3]._super * Val(8)));
  Val x23 = ((((x22 + (x21[4]._super * Val(16))) + (x21[5]._super * Val(32))) +
              (x21[6]._super * Val(64))) +
             (x21[7]._super * Val(128)));
  Val x24 = ((((x23 + (x21[8]._super * Val(256))) + (x21[9]._super * Val(512))) +
              (x21[10]._super * Val(1024))) +
             (x21[11]._super * Val(2048)));
  Val x25 = ((((x24 + (x21[12]._super * Val(4096))) + (x21[13]._super * Val(8192))) +
              (x21[14]._super * Val(16384))) +
             (x21[15]._super * Val(32768)));
  Val x26 = ((((x25 + (x21[16]._super * Val(65536))) + (x21[17]._super * Val(131072))) +
              (x21[18]._super * Val(262144))) +
             (x21[19]._super * Val(524288)));
  EQZ((((x26 + (x21[20]._super * Val(1048576))) + (x21[21]._super * Val(2097152))) - x19),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:178)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:161)
  NondetRegStruct22Array x27 = arg0.arrC;
  Val x28 = x27[4]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:181)
  ToBits_22_Struct x29 = exec_ToBits_22_(ctx, x28, LAYOUT_LOOKUP(layout1, unpackD));
  NondetRegStruct22Array x30 = x29._super;
  Val x31 = x30[0]._super;
  Val x32 = x30[1]._super;
  Val x33 = x30[2]._super;
  Val x34 = x30[3]._super;
  Val x35 = x30[4]._super;
  Val x36 = x30[5]._super;
  Val x37 = x30[6]._super;
  Val x38 = x30[7]._super;
  Val x39 = x30[8]._super;
  Val x40 = x30[9]._super;
  Val x41 = x30[10]._super;
  Val x42 = x30[11]._super;
  Val x43 = x30[12]._super;
  Val x44 = x30[13]._super;
  Val x45 = x30[14]._super;
  Val x46 = x30[15]._super;
  Val x47 = x30[16]._super;
  Val x48 = x30[17]._super;
  Val x49 = x30[18]._super;
  Val x50 = x30[19]._super;
  Val x51 = x30[20]._super;
  Val x52 = x30[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:182)
  Val x53 = ((((((x31 + (x32 * Val(2))) + (x33 * Val(4))) + (x34 * Val(8))) + (x35 * Val(16))) +
              (x36 * Val(32))) +
             (x37 * Val(64)));
  Val x54 =
      ((((((x53 + (x38 * Val(128))) + (x39 * Val(256))) + (x40 * Val(512))) + (x41 * Val(1024))) +
        (x42 * Val(2048))) +
       (x43 * Val(4096)));
  Val x55 = ((((((x54 + (x44 * Val(8192))) + (x45 * Val(16384))) + (x46 * Val(32768))) +
               (x47 * Val(65536))) +
              (x48 * Val(131072))) +
             (x49 * Val(262144)));
  EQZ(((((x55 + (x50 * Val(524288))) + (x51 * Val(1048576))) + (x52 * Val(2097152))) - x28),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:182)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:185)
  Val x56 = x27[19]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:187)
  ToBits_22_Struct x57 = exec_ToBits_22_(ctx, x56, LAYOUT_LOOKUP(layout1, unpackE));
  NondetRegStruct22Array x58 = x57._super;
  Val x59 = x58[0]._super;
  Val x60 = x58[1]._super;
  Val x61 = x58[2]._super;
  Val x62 = x58[3]._super;
  Val x63 = x58[4]._super;
  Val x64 = x58[5]._super;
  Val x65 = x58[6]._super;
  Val x66 = x58[7]._super;
  Val x67 = x58[8]._super;
  Val x68 = x58[9]._super;
  Val x69 = x58[10]._super;
  Val x70 = x58[11]._super;
  Val x71 = x58[12]._super;
  Val x72 = x58[13]._super;
  Val x73 = x58[14]._super;
  Val x74 = x58[15]._super;
  Val x75 = x58[16]._super;
  Val x76 = x58[17]._super;
  Val x77 = x58[18]._super;
  Val x78 = x58[19]._super;
  Val x79 = x58[20]._super;
  Val x80 = x58[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:188)
  Val x81 = ((((((x59 + (x60 * Val(2))) + (x61 * Val(4))) + (x62 * Val(8))) + (x63 * Val(16))) +
              (x64 * Val(32))) +
             (x65 * Val(64)));
  Val x82 =
      ((((((x81 + (x66 * Val(128))) + (x67 * Val(256))) + (x68 * Val(512))) + (x69 * Val(1024))) +
        (x70 * Val(2048))) +
       (x71 * Val(4096)));
  Val x83 = ((((((x82 + (x72 * Val(8192))) + (x73 * Val(16384))) + (x74 * Val(32768))) +
               (x75 * Val(65536))) +
              (x76 * Val(131072))) +
             (x77 * Val(262144)));
  EQZ(((((x83 + (x78 * Val(524288))) + (x79 * Val(1048576))) + (x80 * Val(2097152))) - x56),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:188)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  NondetRegStruct22Array x84 =
      map(Val22Array{Val(0),  Val(1),  Val(2),  Val(3),  Val(4),  Val(5),  Val(6),  Val(7),
                     Val(8),  Val(9),  Val(10), Val(11), Val(12), Val(13), Val(14), Val(15),
                     Val(16), Val(17), Val(18), Val(19), Val(20), Val(21)},
          LAYOUT_LOOKUP(layout1, xorAbc),
          std::function([&](Val22Array::value_type x85,
                            BoundLayout<NondetRegLayout22LayoutArray::value_type> x86) {
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:165)
            Val x87 = x5[to_size_t(x85)]._super;
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:171)
            Val x88 = x13[to_size_t(x85)]._super;
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:177)
            Val x89 = x21[to_size_t(x85)]._super;
            // xor3(zirgen/circuit/keccak/keccak.zir:110)
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:191)
            Val x90 = ((x87 * x88) + ((Val(1) - x87) * (Val(1) - x88)));
            NondetRegStruct x91 =
                exec_Reg(ctx, ((x90 * x89) + ((Val(1) - x90) * (Val(1) - x89))), x86);
            return x91;
          }));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x92 = x84[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x93 = ((x92 * x31) + ((Val(1) - x92) * (Val(1) - x31)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x94 = x84[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x95 = ((x94 * x32) + ((Val(1) - x94) * (Val(1) - x32)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x96 = x84[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x97 = ((x96 * x33) + ((Val(1) - x96) * (Val(1) - x33)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x98 = x84[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x99 = ((x98 * x34) + ((Val(1) - x98) * (Val(1) - x34)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x100 = x84[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x101 = ((x100 * x35) + ((Val(1) - x100) * (Val(1) - x35)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x102 = x84[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x103 = ((x102 * x36) + ((Val(1) - x102) * (Val(1) - x36)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x104 = x84[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x105 = ((x104 * x37) + ((Val(1) - x104) * (Val(1) - x37)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x106 = x84[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x107 = ((x106 * x38) + ((Val(1) - x106) * (Val(1) - x38)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x108 = x84[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x109 = ((x108 * x39) + ((Val(1) - x108) * (Val(1) - x39)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x110 = x84[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x111 = ((x110 * x40) + ((Val(1) - x110) * (Val(1) - x40)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x112 = x84[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x113 = ((x112 * x41) + ((Val(1) - x112) * (Val(1) - x41)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x114 = x84[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x115 = ((x114 * x42) + ((Val(1) - x114) * (Val(1) - x42)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x116 = x84[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x117 = ((x116 * x43) + ((Val(1) - x116) * (Val(1) - x43)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x118 = x84[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x119 = ((x118 * x44) + ((Val(1) - x118) * (Val(1) - x44)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x120 = x84[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x121 = ((x120 * x45) + ((Val(1) - x120) * (Val(1) - x45)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x122 = x84[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x123 = ((x122 * x46) + ((Val(1) - x122) * (Val(1) - x46)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x124 = x84[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x125 = ((x124 * x47) + ((Val(1) - x124) * (Val(1) - x47)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x126 = x84[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x127 = ((x126 * x48) + ((Val(1) - x126) * (Val(1) - x48)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x128 = x84[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x129 = ((x128 * x49) + ((Val(1) - x128) * (Val(1) - x49)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x130 = x84[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x131 = ((x130 * x50) + ((Val(1) - x130) * (Val(1) - x50)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x132 = x84[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x133 = ((x132 * x51) + ((Val(1) - x132) * (Val(1) - x51)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x134 = x84[21]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x135 = ((x134 * x52) + ((Val(1) - x134) * (Val(1) - x52)));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:196)
  Val x136 = (((x93 * x59) + ((Val(1) - x93) * (Val(1) - x59))) +
              (((x95 * x60) + ((Val(1) - x95) * (Val(1) - x60))) * Val(2)));
  Val x137 = ((x136 + (((x97 * x61) + ((Val(1) - x97) * (Val(1) - x61))) * Val(4))) +
              (((x99 * x62) + ((Val(1) - x99) * (Val(1) - x62))) * Val(8)));
  Val x138 = ((x137 + (((x101 * x63) + ((Val(1) - x101) * (Val(1) - x63))) * Val(16))) +
              (((x103 * x64) + ((Val(1) - x103) * (Val(1) - x64))) * Val(32)));
  Val x139 = ((x138 + (((x105 * x65) + ((Val(1) - x105) * (Val(1) - x65))) * Val(64))) +
              (((x107 * x66) + ((Val(1) - x107) * (Val(1) - x66))) * Val(128)));
  Val x140 = ((x139 + (((x109 * x67) + ((Val(1) - x109) * (Val(1) - x67))) * Val(256))) +
              (((x111 * x68) + ((Val(1) - x111) * (Val(1) - x68))) * Val(512)));
  Val x141 = ((x140 + (((x113 * x69) + ((Val(1) - x113) * (Val(1) - x69))) * Val(1024))) +
              (((x115 * x70) + ((Val(1) - x115) * (Val(1) - x70))) * Val(2048)));
  Val x142 = ((x141 + (((x117 * x71) + ((Val(1) - x117) * (Val(1) - x71))) * Val(4096))) +
              (((x119 * x72) + ((Val(1) - x119) * (Val(1) - x72))) * Val(8192)));
  Val x143 = ((x142 + (((x121 * x73) + ((Val(1) - x121) * (Val(1) - x73))) * Val(16384))) +
              (((x123 * x74) + ((Val(1) - x123) * (Val(1) - x74))) * Val(32768)));
  Val x144 = ((x143 + (((x125 * x75) + ((Val(1) - x125) * (Val(1) - x75))) * Val(65536))) +
              (((x127 * x76) + ((Val(1) - x127) * (Val(1) - x76))) * Val(131072)));
  Val x145 = ((x144 + (((x129 * x77) + ((Val(1) - x129) * (Val(1) - x77))) * Val(262144))) +
              (((x131 * x78) + ((Val(1) - x131) * (Val(1) - x78))) * Val(524288)));
  Val x146 = ((x145 + (((x133 * x79) + ((Val(1) - x133) * (Val(1) - x79))) * Val(1048576))) +
              (((x135 * x80) + ((Val(1) - x135) * (Val(1) - x80))) * Val(2097152)));
  return FromBits_22_Struct{._super = x146};
}
RetTupleStruct execXor5wordsMinor0_1_(ExecContext& ctx,
                                      RetTupleStruct arg0,
                                      BoundLayout<Xor5wordsMinor0_1_Layout> layout1) {
  // xor5words_minor0(zirgen/circuit/keccak/keccak.zir:200)
  FromBits_22_Struct x2 = execXor5wordsResult_1__0_(ctx, arg0, LAYOUT_LOOKUP(layout1, _0));
  NondetRegStruct x3 = exec_Reg(ctx, x2._super, LAYOUT_LOOKUP(layout1, result));
  // xor5words_minor0(zirgen/circuit/keccak/keccak.zir:202)
  Val22Array x4 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                             Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                             Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x5 =
      exec_RetTuple(ctx,
                    x4,
                    x4,
                    x4,
                    Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),    Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),    Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), x3._super, Val(0)},
                    x4,
                    x4,
                    Val(1),
                    Val(1),
                    arg0.rnd._super,
                    arg0.blk._super,
                    arg0.midx._super,
                    LAYOUT_LOOKUP(layout1, _super));
  return x5;
}
FromBits_21_Struct execXor5wordsResult_1__1_(ExecContext& ctx,
                                             RetTupleStruct arg0,
                                             BoundLayout<Xor5wordsResult_1__1_Layout> layout1) {
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:161)
  NondetRegStruct22Array x2 = arg0.arrA;
  Val x3 = x2[4]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:165)
  ToBits_21_Struct x4 = exec_ToBits_21_(ctx, x3, LAYOUT_LOOKUP(layout1, unpackA));
  NondetRegStruct21Array x5 = x4._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:166)
  Val x6 = (((x5[0]._super + (x5[1]._super * Val(2))) + (x5[2]._super * Val(4))) +
            (x5[3]._super * Val(8)));
  Val x7 =
      ((((x6 + (x5[4]._super * Val(16))) + (x5[5]._super * Val(32))) + (x5[6]._super * Val(64))) +
       (x5[7]._super * Val(128)));
  Val x8 = ((((x7 + (x5[8]._super * Val(256))) + (x5[9]._super * Val(512))) +
             (x5[10]._super * Val(1024))) +
            (x5[11]._super * Val(2048)));
  Val x9 = ((((x8 + (x5[12]._super * Val(4096))) + (x5[13]._super * Val(8192))) +
             (x5[14]._super * Val(16384))) +
            (x5[15]._super * Val(32768)));
  Val x10 = ((((x9 + (x5[16]._super * Val(65536))) + (x5[17]._super * Val(131072))) +
              (x5[18]._super * Val(262144))) +
             (x5[19]._super * Val(524288)));
  EQZ(((x10 + (x5[20]._super * Val(1048576))) - x3),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:166)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:169)
  Val x11 = x2[19]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:171)
  ToBits_21_Struct x12 = exec_ToBits_21_(ctx, x11, LAYOUT_LOOKUP(layout1, unpackB));
  NondetRegStruct21Array x13 = x12._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:172)
  Val x14 = (((x13[0]._super + (x13[1]._super * Val(2))) + (x13[2]._super * Val(4))) +
             (x13[3]._super * Val(8)));
  Val x15 = ((((x14 + (x13[4]._super * Val(16))) + (x13[5]._super * Val(32))) +
              (x13[6]._super * Val(64))) +
             (x13[7]._super * Val(128)));
  Val x16 = ((((x15 + (x13[8]._super * Val(256))) + (x13[9]._super * Val(512))) +
              (x13[10]._super * Val(1024))) +
             (x13[11]._super * Val(2048)));
  Val x17 = ((((x16 + (x13[12]._super * Val(4096))) + (x13[13]._super * Val(8192))) +
              (x13[14]._super * Val(16384))) +
             (x13[15]._super * Val(32768)));
  Val x18 = ((((x17 + (x13[16]._super * Val(65536))) + (x13[17]._super * Val(131072))) +
              (x13[18]._super * Val(262144))) +
             (x13[19]._super * Val(524288)));
  EQZ(((x18 + (x13[20]._super * Val(1048576))) - x11),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:172)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:175)
  Val x19 = arg0.arrB[12]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:177)
  ToBits_21_Struct x20 = exec_ToBits_21_(ctx, x19, LAYOUT_LOOKUP(layout1, unpackC));
  NondetRegStruct21Array x21 = x20._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:178)
  Val x22 = (((x21[0]._super + (x21[1]._super * Val(2))) + (x21[2]._super * Val(4))) +
             (x21[3]._super * Val(8)));
  Val x23 = ((((x22 + (x21[4]._super * Val(16))) + (x21[5]._super * Val(32))) +
              (x21[6]._super * Val(64))) +
             (x21[7]._super * Val(128)));
  Val x24 = ((((x23 + (x21[8]._super * Val(256))) + (x21[9]._super * Val(512))) +
              (x21[10]._super * Val(1024))) +
             (x21[11]._super * Val(2048)));
  Val x25 = ((((x24 + (x21[12]._super * Val(4096))) + (x21[13]._super * Val(8192))) +
              (x21[14]._super * Val(16384))) +
             (x21[15]._super * Val(32768)));
  Val x26 = ((((x25 + (x21[16]._super * Val(65536))) + (x21[17]._super * Val(131072))) +
              (x21[18]._super * Val(262144))) +
             (x21[19]._super * Val(524288)));
  EQZ(((x26 + (x21[20]._super * Val(1048576))) - x19),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:178)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:161)
  NondetRegStruct22Array x27 = arg0.arrC;
  Val x28 = x27[5]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:181)
  ToBits_21_Struct x29 = exec_ToBits_21_(ctx, x28, LAYOUT_LOOKUP(layout1, unpackD));
  NondetRegStruct21Array x30 = x29._super;
  Val x31 = x30[0]._super;
  Val x32 = x30[1]._super;
  Val x33 = x30[2]._super;
  Val x34 = x30[3]._super;
  Val x35 = x30[4]._super;
  Val x36 = x30[5]._super;
  Val x37 = x30[6]._super;
  Val x38 = x30[7]._super;
  Val x39 = x30[8]._super;
  Val x40 = x30[9]._super;
  Val x41 = x30[10]._super;
  Val x42 = x30[11]._super;
  Val x43 = x30[12]._super;
  Val x44 = x30[13]._super;
  Val x45 = x30[14]._super;
  Val x46 = x30[15]._super;
  Val x47 = x30[16]._super;
  Val x48 = x30[17]._super;
  Val x49 = x30[18]._super;
  Val x50 = x30[19]._super;
  Val x51 = x30[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:182)
  Val x52 = ((((((x31 + (x32 * Val(2))) + (x33 * Val(4))) + (x34 * Val(8))) + (x35 * Val(16))) +
              (x36 * Val(32))) +
             (x37 * Val(64)));
  Val x53 =
      ((((((x52 + (x38 * Val(128))) + (x39 * Val(256))) + (x40 * Val(512))) + (x41 * Val(1024))) +
        (x42 * Val(2048))) +
       (x43 * Val(4096)));
  Val x54 = ((((((x53 + (x44 * Val(8192))) + (x45 * Val(16384))) + (x46 * Val(32768))) +
               (x47 * Val(65536))) +
              (x48 * Val(131072))) +
             (x49 * Val(262144)));
  EQZ((((x54 + (x50 * Val(524288))) + (x51 * Val(1048576))) - x28),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:182)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:185)
  Val x55 = x27[20]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:187)
  ToBits_21_Struct x56 = exec_ToBits_21_(ctx, x55, LAYOUT_LOOKUP(layout1, unpackE));
  NondetRegStruct21Array x57 = x56._super;
  Val x58 = x57[0]._super;
  Val x59 = x57[1]._super;
  Val x60 = x57[2]._super;
  Val x61 = x57[3]._super;
  Val x62 = x57[4]._super;
  Val x63 = x57[5]._super;
  Val x64 = x57[6]._super;
  Val x65 = x57[7]._super;
  Val x66 = x57[8]._super;
  Val x67 = x57[9]._super;
  Val x68 = x57[10]._super;
  Val x69 = x57[11]._super;
  Val x70 = x57[12]._super;
  Val x71 = x57[13]._super;
  Val x72 = x57[14]._super;
  Val x73 = x57[15]._super;
  Val x74 = x57[16]._super;
  Val x75 = x57[17]._super;
  Val x76 = x57[18]._super;
  Val x77 = x57[19]._super;
  Val x78 = x57[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:188)
  Val x79 = ((((((x58 + (x59 * Val(2))) + (x60 * Val(4))) + (x61 * Val(8))) + (x62 * Val(16))) +
              (x63 * Val(32))) +
             (x64 * Val(64)));
  Val x80 =
      ((((((x79 + (x65 * Val(128))) + (x66 * Val(256))) + (x67 * Val(512))) + (x68 * Val(1024))) +
        (x69 * Val(2048))) +
       (x70 * Val(4096)));
  Val x81 = ((((((x80 + (x71 * Val(8192))) + (x72 * Val(16384))) + (x73 * Val(32768))) +
               (x74 * Val(65536))) +
              (x75 * Val(131072))) +
             (x76 * Val(262144)));
  EQZ((((x81 + (x77 * Val(524288))) + (x78 * Val(1048576))) - x55),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:188)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  NondetRegStruct21Array x82 =
      map(Val21Array{Val(0),  Val(1),  Val(2),  Val(3),  Val(4),  Val(5),  Val(6),
                     Val(7),  Val(8),  Val(9),  Val(10), Val(11), Val(12), Val(13),
                     Val(14), Val(15), Val(16), Val(17), Val(18), Val(19), Val(20)},
          LAYOUT_LOOKUP(layout1, xorAbc),
          std::function([&](Val21Array::value_type x83,
                            BoundLayout<NondetRegLayout21LayoutArray::value_type> x84) {
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:165)
            Val x85 = x5[to_size_t(x83)]._super;
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:171)
            Val x86 = x13[to_size_t(x83)]._super;
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:177)
            Val x87 = x21[to_size_t(x83)]._super;
            // xor3(zirgen/circuit/keccak/keccak.zir:110)
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:191)
            Val x88 = ((x85 * x86) + ((Val(1) - x85) * (Val(1) - x86)));
            NondetRegStruct x89 =
                exec_Reg(ctx, ((x88 * x87) + ((Val(1) - x88) * (Val(1) - x87))), x84);
            return x89;
          }));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x90 = x82[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x91 = ((x90 * x31) + ((Val(1) - x90) * (Val(1) - x31)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x92 = x82[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x93 = ((x92 * x32) + ((Val(1) - x92) * (Val(1) - x32)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x94 = x82[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x95 = ((x94 * x33) + ((Val(1) - x94) * (Val(1) - x33)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x96 = x82[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x97 = ((x96 * x34) + ((Val(1) - x96) * (Val(1) - x34)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x98 = x82[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x99 = ((x98 * x35) + ((Val(1) - x98) * (Val(1) - x35)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x100 = x82[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x101 = ((x100 * x36) + ((Val(1) - x100) * (Val(1) - x36)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x102 = x82[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x103 = ((x102 * x37) + ((Val(1) - x102) * (Val(1) - x37)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x104 = x82[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x105 = ((x104 * x38) + ((Val(1) - x104) * (Val(1) - x38)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x106 = x82[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x107 = ((x106 * x39) + ((Val(1) - x106) * (Val(1) - x39)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x108 = x82[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x109 = ((x108 * x40) + ((Val(1) - x108) * (Val(1) - x40)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x110 = x82[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x111 = ((x110 * x41) + ((Val(1) - x110) * (Val(1) - x41)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x112 = x82[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x113 = ((x112 * x42) + ((Val(1) - x112) * (Val(1) - x42)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x114 = x82[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x115 = ((x114 * x43) + ((Val(1) - x114) * (Val(1) - x43)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x116 = x82[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x117 = ((x116 * x44) + ((Val(1) - x116) * (Val(1) - x44)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x118 = x82[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x119 = ((x118 * x45) + ((Val(1) - x118) * (Val(1) - x45)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x120 = x82[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x121 = ((x120 * x46) + ((Val(1) - x120) * (Val(1) - x46)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x122 = x82[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x123 = ((x122 * x47) + ((Val(1) - x122) * (Val(1) - x47)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x124 = x82[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x125 = ((x124 * x48) + ((Val(1) - x124) * (Val(1) - x48)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x126 = x82[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x127 = ((x126 * x49) + ((Val(1) - x126) * (Val(1) - x49)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x128 = x82[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x129 = ((x128 * x50) + ((Val(1) - x128) * (Val(1) - x50)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x130 = x82[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x131 = ((x130 * x51) + ((Val(1) - x130) * (Val(1) - x51)));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:196)
  Val x132 = (((x91 * x58) + ((Val(1) - x91) * (Val(1) - x58))) +
              (((x93 * x59) + ((Val(1) - x93) * (Val(1) - x59))) * Val(2)));
  Val x133 = ((x132 + (((x95 * x60) + ((Val(1) - x95) * (Val(1) - x60))) * Val(4))) +
              (((x97 * x61) + ((Val(1) - x97) * (Val(1) - x61))) * Val(8)));
  Val x134 = ((x133 + (((x99 * x62) + ((Val(1) - x99) * (Val(1) - x62))) * Val(16))) +
              (((x101 * x63) + ((Val(1) - x101) * (Val(1) - x63))) * Val(32)));
  Val x135 = ((x134 + (((x103 * x64) + ((Val(1) - x103) * (Val(1) - x64))) * Val(64))) +
              (((x105 * x65) + ((Val(1) - x105) * (Val(1) - x65))) * Val(128)));
  Val x136 = ((x135 + (((x107 * x66) + ((Val(1) - x107) * (Val(1) - x66))) * Val(256))) +
              (((x109 * x67) + ((Val(1) - x109) * (Val(1) - x67))) * Val(512)));
  Val x137 = ((x136 + (((x111 * x68) + ((Val(1) - x111) * (Val(1) - x68))) * Val(1024))) +
              (((x113 * x69) + ((Val(1) - x113) * (Val(1) - x69))) * Val(2048)));
  Val x138 = ((x137 + (((x115 * x70) + ((Val(1) - x115) * (Val(1) - x70))) * Val(4096))) +
              (((x117 * x71) + ((Val(1) - x117) * (Val(1) - x71))) * Val(8192)));
  Val x139 = ((x138 + (((x119 * x72) + ((Val(1) - x119) * (Val(1) - x72))) * Val(16384))) +
              (((x121 * x73) + ((Val(1) - x121) * (Val(1) - x73))) * Val(32768)));
  Val x140 = ((x139 + (((x123 * x74) + ((Val(1) - x123) * (Val(1) - x74))) * Val(65536))) +
              (((x125 * x75) + ((Val(1) - x125) * (Val(1) - x75))) * Val(131072)));
  Val x141 = ((x140 + (((x127 * x76) + ((Val(1) - x127) * (Val(1) - x76))) * Val(262144))) +
              (((x129 * x77) + ((Val(1) - x129) * (Val(1) - x77))) * Val(524288)));
  return FromBits_21_Struct{
      ._super = (x141 + (((x131 * x78) + ((Val(1) - x131) * (Val(1) - x78))) * Val(1048576)))};
}
RetTupleStruct execXor5wordsMinor1_1_(ExecContext& ctx,
                                      RetTupleStruct arg0,
                                      BoundLayout<RetTupleLayout> arg1,
                                      BoundLayout<Xor5wordsMinor1_1_Layout> layout2) {
  // xor5words_minor1(zirgen/circuit/keccak/keccak.zir:207)
  RetTupleStruct x3 = back_RetTuple(ctx, 1, arg1);
  // xor5words_minor1(zirgen/circuit/keccak/keccak.zir:208)
  RetTupleStruct x4 = back_RetTuple(ctx, 2, arg1);
  // xor5words_minor1(zirgen/circuit/keccak/keccak.zir:209)
  FromBits_21_Struct x5 = execXor5wordsResult_1__1_(ctx, x4, LAYOUT_LOOKUP(layout2, _0));
  NondetRegStruct x6 = exec_Reg(ctx, x5._super, LAYOUT_LOOKUP(layout2, result));
  // xor5words_minor1(zirgen/circuit/keccak/keccak.zir:212)
  Val22Array x7 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                             Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                             Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x8 =
      exec_RetTuple(ctx,
                    Val22Array{Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), x3.arrD[22]._super},
                    Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),   Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),   Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), x6._super},
                    x7,
                    Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                    x7,
                    x7,
                    Val(2),
                    Val(1),
                    x3.rnd._super,
                    x3.blk._super,
                    x3.midx._super,
                    LAYOUT_LOOKUP(layout2, _super));
  return x8;
}
FromBits_21_Struct execXor5wordsResult_1__2_(ExecContext& ctx,
                                             RetTupleStruct arg0,
                                             BoundLayout<Xor5wordsResult_1__2_Layout> layout1) {
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:161)
  NondetRegStruct22Array x2 = arg0.arrA;
  Val x3 = x2[5]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:165)
  ToBits_21_Struct x4 = exec_ToBits_21_(ctx, x3, LAYOUT_LOOKUP(layout1, unpackA));
  NondetRegStruct21Array x5 = x4._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:166)
  Val x6 = (((x5[0]._super + (x5[1]._super * Val(2))) + (x5[2]._super * Val(4))) +
            (x5[3]._super * Val(8)));
  Val x7 =
      ((((x6 + (x5[4]._super * Val(16))) + (x5[5]._super * Val(32))) + (x5[6]._super * Val(64))) +
       (x5[7]._super * Val(128)));
  Val x8 = ((((x7 + (x5[8]._super * Val(256))) + (x5[9]._super * Val(512))) +
             (x5[10]._super * Val(1024))) +
            (x5[11]._super * Val(2048)));
  Val x9 = ((((x8 + (x5[12]._super * Val(4096))) + (x5[13]._super * Val(8192))) +
             (x5[14]._super * Val(16384))) +
            (x5[15]._super * Val(32768)));
  Val x10 = ((((x9 + (x5[16]._super * Val(65536))) + (x5[17]._super * Val(131072))) +
              (x5[18]._super * Val(262144))) +
             (x5[19]._super * Val(524288)));
  EQZ(((x10 + (x5[20]._super * Val(1048576))) - x3),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:166)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:169)
  Val x11 = x2[20]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:171)
  ToBits_21_Struct x12 = exec_ToBits_21_(ctx, x11, LAYOUT_LOOKUP(layout1, unpackB));
  NondetRegStruct21Array x13 = x12._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:172)
  Val x14 = (((x13[0]._super + (x13[1]._super * Val(2))) + (x13[2]._super * Val(4))) +
             (x13[3]._super * Val(8)));
  Val x15 = ((((x14 + (x13[4]._super * Val(16))) + (x13[5]._super * Val(32))) +
              (x13[6]._super * Val(64))) +
             (x13[7]._super * Val(128)));
  Val x16 = ((((x15 + (x13[8]._super * Val(256))) + (x13[9]._super * Val(512))) +
              (x13[10]._super * Val(1024))) +
             (x13[11]._super * Val(2048)));
  Val x17 = ((((x16 + (x13[12]._super * Val(4096))) + (x13[13]._super * Val(8192))) +
              (x13[14]._super * Val(16384))) +
             (x13[15]._super * Val(32768)));
  Val x18 = ((((x17 + (x13[16]._super * Val(65536))) + (x13[17]._super * Val(131072))) +
              (x13[18]._super * Val(262144))) +
             (x13[19]._super * Val(524288)));
  EQZ(((x18 + (x13[20]._super * Val(1048576))) - x11),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:172)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:175)
  Val x19 = arg0.arrB[13]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:177)
  ToBits_21_Struct x20 = exec_ToBits_21_(ctx, x19, LAYOUT_LOOKUP(layout1, unpackC));
  NondetRegStruct21Array x21 = x20._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:178)
  Val x22 = (((x21[0]._super + (x21[1]._super * Val(2))) + (x21[2]._super * Val(4))) +
             (x21[3]._super * Val(8)));
  Val x23 = ((((x22 + (x21[4]._super * Val(16))) + (x21[5]._super * Val(32))) +
              (x21[6]._super * Val(64))) +
             (x21[7]._super * Val(128)));
  Val x24 = ((((x23 + (x21[8]._super * Val(256))) + (x21[9]._super * Val(512))) +
              (x21[10]._super * Val(1024))) +
             (x21[11]._super * Val(2048)));
  Val x25 = ((((x24 + (x21[12]._super * Val(4096))) + (x21[13]._super * Val(8192))) +
              (x21[14]._super * Val(16384))) +
             (x21[15]._super * Val(32768)));
  Val x26 = ((((x25 + (x21[16]._super * Val(65536))) + (x21[17]._super * Val(131072))) +
              (x21[18]._super * Val(262144))) +
             (x21[19]._super * Val(524288)));
  EQZ(((x26 + (x21[20]._super * Val(1048576))) - x19),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:178)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:161)
  NondetRegStruct22Array x27 = arg0.arrC;
  Val x28 = x27[6]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:181)
  ToBits_21_Struct x29 = exec_ToBits_21_(ctx, x28, LAYOUT_LOOKUP(layout1, unpackD));
  NondetRegStruct21Array x30 = x29._super;
  Val x31 = x30[0]._super;
  Val x32 = x30[1]._super;
  Val x33 = x30[2]._super;
  Val x34 = x30[3]._super;
  Val x35 = x30[4]._super;
  Val x36 = x30[5]._super;
  Val x37 = x30[6]._super;
  Val x38 = x30[7]._super;
  Val x39 = x30[8]._super;
  Val x40 = x30[9]._super;
  Val x41 = x30[10]._super;
  Val x42 = x30[11]._super;
  Val x43 = x30[12]._super;
  Val x44 = x30[13]._super;
  Val x45 = x30[14]._super;
  Val x46 = x30[15]._super;
  Val x47 = x30[16]._super;
  Val x48 = x30[17]._super;
  Val x49 = x30[18]._super;
  Val x50 = x30[19]._super;
  Val x51 = x30[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:182)
  Val x52 = ((((((x31 + (x32 * Val(2))) + (x33 * Val(4))) + (x34 * Val(8))) + (x35 * Val(16))) +
              (x36 * Val(32))) +
             (x37 * Val(64)));
  Val x53 =
      ((((((x52 + (x38 * Val(128))) + (x39 * Val(256))) + (x40 * Val(512))) + (x41 * Val(1024))) +
        (x42 * Val(2048))) +
       (x43 * Val(4096)));
  Val x54 = ((((((x53 + (x44 * Val(8192))) + (x45 * Val(16384))) + (x46 * Val(32768))) +
               (x47 * Val(65536))) +
              (x48 * Val(131072))) +
             (x49 * Val(262144)));
  EQZ((((x54 + (x50 * Val(524288))) + (x51 * Val(1048576))) - x28),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:182)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:185)
  Val x55 = x27[21]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:187)
  ToBits_21_Struct x56 = exec_ToBits_21_(ctx, x55, LAYOUT_LOOKUP(layout1, unpackE));
  NondetRegStruct21Array x57 = x56._super;
  Val x58 = x57[0]._super;
  Val x59 = x57[1]._super;
  Val x60 = x57[2]._super;
  Val x61 = x57[3]._super;
  Val x62 = x57[4]._super;
  Val x63 = x57[5]._super;
  Val x64 = x57[6]._super;
  Val x65 = x57[7]._super;
  Val x66 = x57[8]._super;
  Val x67 = x57[9]._super;
  Val x68 = x57[10]._super;
  Val x69 = x57[11]._super;
  Val x70 = x57[12]._super;
  Val x71 = x57[13]._super;
  Val x72 = x57[14]._super;
  Val x73 = x57[15]._super;
  Val x74 = x57[16]._super;
  Val x75 = x57[17]._super;
  Val x76 = x57[18]._super;
  Val x77 = x57[19]._super;
  Val x78 = x57[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:188)
  Val x79 = ((((((x58 + (x59 * Val(2))) + (x60 * Val(4))) + (x61 * Val(8))) + (x62 * Val(16))) +
              (x63 * Val(32))) +
             (x64 * Val(64)));
  Val x80 =
      ((((((x79 + (x65 * Val(128))) + (x66 * Val(256))) + (x67 * Val(512))) + (x68 * Val(1024))) +
        (x69 * Val(2048))) +
       (x70 * Val(4096)));
  Val x81 = ((((((x80 + (x71 * Val(8192))) + (x72 * Val(16384))) + (x73 * Val(32768))) +
               (x74 * Val(65536))) +
              (x75 * Val(131072))) +
             (x76 * Val(262144)));
  EQZ((((x81 + (x77 * Val(524288))) + (x78 * Val(1048576))) - x55),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:188)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  NondetRegStruct21Array x82 =
      map(Val21Array{Val(0),  Val(1),  Val(2),  Val(3),  Val(4),  Val(5),  Val(6),
                     Val(7),  Val(8),  Val(9),  Val(10), Val(11), Val(12), Val(13),
                     Val(14), Val(15), Val(16), Val(17), Val(18), Val(19), Val(20)},
          LAYOUT_LOOKUP(layout1, xorAbc),
          std::function([&](Val21Array::value_type x83,
                            BoundLayout<NondetRegLayout21LayoutArray::value_type> x84) {
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:165)
            Val x85 = x5[to_size_t(x83)]._super;
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:171)
            Val x86 = x13[to_size_t(x83)]._super;
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:177)
            Val x87 = x21[to_size_t(x83)]._super;
            // xor3(zirgen/circuit/keccak/keccak.zir:110)
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:191)
            Val x88 = ((x85 * x86) + ((Val(1) - x85) * (Val(1) - x86)));
            NondetRegStruct x89 =
                exec_Reg(ctx, ((x88 * x87) + ((Val(1) - x88) * (Val(1) - x87))), x84);
            return x89;
          }));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x90 = x82[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x91 = ((x90 * x31) + ((Val(1) - x90) * (Val(1) - x31)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x92 = x82[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x93 = ((x92 * x32) + ((Val(1) - x92) * (Val(1) - x32)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x94 = x82[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x95 = ((x94 * x33) + ((Val(1) - x94) * (Val(1) - x33)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x96 = x82[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x97 = ((x96 * x34) + ((Val(1) - x96) * (Val(1) - x34)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x98 = x82[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x99 = ((x98 * x35) + ((Val(1) - x98) * (Val(1) - x35)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x100 = x82[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x101 = ((x100 * x36) + ((Val(1) - x100) * (Val(1) - x36)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x102 = x82[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x103 = ((x102 * x37) + ((Val(1) - x102) * (Val(1) - x37)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x104 = x82[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x105 = ((x104 * x38) + ((Val(1) - x104) * (Val(1) - x38)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x106 = x82[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x107 = ((x106 * x39) + ((Val(1) - x106) * (Val(1) - x39)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x108 = x82[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x109 = ((x108 * x40) + ((Val(1) - x108) * (Val(1) - x40)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x110 = x82[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x111 = ((x110 * x41) + ((Val(1) - x110) * (Val(1) - x41)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x112 = x82[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x113 = ((x112 * x42) + ((Val(1) - x112) * (Val(1) - x42)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x114 = x82[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x115 = ((x114 * x43) + ((Val(1) - x114) * (Val(1) - x43)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x116 = x82[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x117 = ((x116 * x44) + ((Val(1) - x116) * (Val(1) - x44)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x118 = x82[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x119 = ((x118 * x45) + ((Val(1) - x118) * (Val(1) - x45)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x120 = x82[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x121 = ((x120 * x46) + ((Val(1) - x120) * (Val(1) - x46)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x122 = x82[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x123 = ((x122 * x47) + ((Val(1) - x122) * (Val(1) - x47)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x124 = x82[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x125 = ((x124 * x48) + ((Val(1) - x124) * (Val(1) - x48)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x126 = x82[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x127 = ((x126 * x49) + ((Val(1) - x126) * (Val(1) - x49)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x128 = x82[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x129 = ((x128 * x50) + ((Val(1) - x128) * (Val(1) - x50)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x130 = x82[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x131 = ((x130 * x51) + ((Val(1) - x130) * (Val(1) - x51)));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:196)
  Val x132 = (((x91 * x58) + ((Val(1) - x91) * (Val(1) - x58))) +
              (((x93 * x59) + ((Val(1) - x93) * (Val(1) - x59))) * Val(2)));
  Val x133 = ((x132 + (((x95 * x60) + ((Val(1) - x95) * (Val(1) - x60))) * Val(4))) +
              (((x97 * x61) + ((Val(1) - x97) * (Val(1) - x61))) * Val(8)));
  Val x134 = ((x133 + (((x99 * x62) + ((Val(1) - x99) * (Val(1) - x62))) * Val(16))) +
              (((x101 * x63) + ((Val(1) - x101) * (Val(1) - x63))) * Val(32)));
  Val x135 = ((x134 + (((x103 * x64) + ((Val(1) - x103) * (Val(1) - x64))) * Val(64))) +
              (((x105 * x65) + ((Val(1) - x105) * (Val(1) - x65))) * Val(128)));
  Val x136 = ((x135 + (((x107 * x66) + ((Val(1) - x107) * (Val(1) - x66))) * Val(256))) +
              (((x109 * x67) + ((Val(1) - x109) * (Val(1) - x67))) * Val(512)));
  Val x137 = ((x136 + (((x111 * x68) + ((Val(1) - x111) * (Val(1) - x68))) * Val(1024))) +
              (((x113 * x69) + ((Val(1) - x113) * (Val(1) - x69))) * Val(2048)));
  Val x138 = ((x137 + (((x115 * x70) + ((Val(1) - x115) * (Val(1) - x70))) * Val(4096))) +
              (((x117 * x71) + ((Val(1) - x117) * (Val(1) - x71))) * Val(8192)));
  Val x139 = ((x138 + (((x119 * x72) + ((Val(1) - x119) * (Val(1) - x72))) * Val(16384))) +
              (((x121 * x73) + ((Val(1) - x121) * (Val(1) - x73))) * Val(32768)));
  Val x140 = ((x139 + (((x123 * x74) + ((Val(1) - x123) * (Val(1) - x74))) * Val(65536))) +
              (((x125 * x75) + ((Val(1) - x125) * (Val(1) - x75))) * Val(131072)));
  Val x141 = ((x140 + (((x127 * x76) + ((Val(1) - x127) * (Val(1) - x76))) * Val(262144))) +
              (((x129 * x77) + ((Val(1) - x129) * (Val(1) - x77))) * Val(524288)));
  return FromBits_21_Struct{
      ._super = (x141 + (((x131 * x78) + ((Val(1) - x131) * (Val(1) - x78))) * Val(1048576)))};
}
RetTupleStruct execXor5wordsMinor2_1_(ExecContext& ctx,
                                      RetTupleStruct arg0,
                                      BoundLayout<RetTupleLayout> arg1,
                                      BoundLayout<Xor5wordsMinor2_1_Layout> layout2) {
  // xor5words_minor2(zirgen/circuit/keccak/keccak.zir:217)
  RetTupleStruct x3 = back_RetTuple(ctx, 1, arg1);
  // xor5words_minor2(zirgen/circuit/keccak/keccak.zir:218)
  RetTupleStruct x4 = back_RetTuple(ctx, 3, arg1);
  // xor5words_minor2(zirgen/circuit/keccak/keccak.zir:219)
  FromBits_21_Struct x5 = execXor5wordsResult_1__2_(ctx, x4, LAYOUT_LOOKUP(layout2, _0));
  NondetRegStruct x6 = exec_Reg(ctx, x5._super, LAYOUT_LOOKUP(layout2, result));
  // xor5words_minor2(zirgen/circuit/keccak/keccak.zir:223)
  Val22Array x7 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                             Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                             Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x8 =
      exec_RetTuple(ctx,
                    Val22Array{Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), x3.arrA[21]._super},
                    Val22Array{Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), x3.arrB[21]._super},
                    Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),   Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),   Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), x6._super},
                    Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                    x7,
                    x7,
                    Val(3),
                    Val(1),
                    x3.rnd._super,
                    x3.blk._super,
                    x3.midx._super,
                    LAYOUT_LOOKUP(layout2, _super));
  return x8;
}
RetTupleStruct execXor5wordsMinor3_1_(ExecContext& ctx,
                                      RetTupleStruct arg0,
                                      BoundLayout<RetTupleLayout> arg1,
                                      BoundLayout<Xor5wordsMinor3_1_Layout> layout2) {
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:228)
  RetTupleStruct x3 = back_RetTuple(ctx, 1, arg1);
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:229)
  RetTupleStruct x4 = back_RetTuple(ctx, 4, arg1);
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:230)
  Val22Array x5 = Val22Array{Val(0),  Val(1),  Val(2),  Val(3),  Val(4),  Val(5),  Val(6),  Val(7),
                             Val(8),  Val(9),  Val(10), Val(11), Val(12), Val(13), Val(14), Val(15),
                             Val(16), Val(17), Val(18), Val(19), Val(20), Val(21)};
  NondetRegStruct22Array x6 =
      map(x5,
          LAYOUT_LOOKUP(layout2, inpA),
          std::function([&](Val22Array::value_type x7,
                            BoundLayout<NondetRegLayout22LayoutArray::value_type> x8) {
            NondetRegStruct x9 = exec_Reg(ctx, x4.arrA[to_size_t(x7)]._super, x8);
            return x9;
          }));
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:231)
  NondetRegStruct22Array x10 =
      map(x5,
          LAYOUT_LOOKUP(layout2, inpB),
          std::function([&](Val22Array::value_type x11,
                            BoundLayout<NondetRegLayout22LayoutArray::value_type> x12) {
            NondetRegStruct x13 = exec_Reg(ctx, x4.arrB[to_size_t(x11)]._super, x12);
            return x13;
          }));
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:232)
  NondetRegStruct22Array x14 =
      map(x5,
          LAYOUT_LOOKUP(layout2, inpC),
          std::function([&](Val22Array::value_type x15,
                            BoundLayout<NondetRegLayout22LayoutArray::value_type> x16) {
            NondetRegStruct x17 = exec_Reg(ctx, x4.arrC[to_size_t(x15)]._super, x16);
            return x17;
          }));
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:233)
  NondetRegStruct12Array x18 =
      map(Val12Array{Val(0),
                     Val(1),
                     Val(2),
                     Val(3),
                     Val(4),
                     Val(5),
                     Val(6),
                     Val(7),
                     Val(8),
                     Val(9),
                     Val(10),
                     Val(11)},
          LAYOUT_LOOKUP(layout2, tmp_1),
          std::function([&](Val12Array::value_type x19,
                            BoundLayout<NondetRegLayout12LayoutArray::value_type> x20) {
            NondetRegStruct x21 = exec_Reg(ctx, x4.arrD[to_size_t(x19)]._super, x20);
            return x21;
          }));
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:234)
  NondetRegStruct x22 = exec_Reg(ctx, x3.arrA[21]._super, LAYOUT_LOOKUP(layout2, _0));
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:235)
  NondetRegStruct x23 = exec_Reg(ctx, x3.arrB[21]._super, LAYOUT_LOOKUP(layout2, _1));
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:236)
  NondetRegStruct x24 = exec_Reg(ctx, x3.arrC[21]._super, LAYOUT_LOOKUP(layout2, _2));
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:238)
  Val22Array x25 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x26 = exec_RetTuple(
      ctx,
      Val22Array{x6[0]._super,  x6[1]._super,  x6[2]._super,  x6[3]._super,  x6[4]._super,
                 x6[5]._super,  x6[6]._super,  x6[7]._super,  x6[8]._super,  x6[9]._super,
                 x6[10]._super, x6[11]._super, x6[12]._super, x6[13]._super, x6[14]._super,
                 x6[15]._super, x6[16]._super, x6[17]._super, x6[18]._super, x6[19]._super,
                 x6[20]._super, x6[21]._super},
      Val22Array{x10[0]._super,  x10[1]._super,  x10[2]._super,  x10[3]._super,  x10[4]._super,
                 x10[5]._super,  x10[6]._super,  x10[7]._super,  x10[8]._super,  x10[9]._super,
                 x10[10]._super, x10[11]._super, x10[12]._super, x10[13]._super, x10[14]._super,
                 x10[15]._super, x10[16]._super, x10[17]._super, x10[18]._super, x10[19]._super,
                 x10[20]._super, x10[21]._super},
      Val22Array{x14[0]._super,  x14[1]._super,  x14[2]._super,  x14[3]._super,  x14[4]._super,
                 x14[5]._super,  x14[6]._super,  x14[7]._super,  x14[8]._super,  x14[9]._super,
                 x14[10]._super, x14[11]._super, x14[12]._super, x14[13]._super, x14[14]._super,
                 x14[15]._super, x14[16]._super, x14[17]._super, x14[18]._super, x14[19]._super,
                 x14[20]._super, x14[21]._super},
      Val24Array{x18[0]._super,  x18[1]._super,  x18[2]._super, x18[3]._super, x18[4]._super,
                 x18[5]._super,  x18[6]._super,  x18[7]._super, x18[8]._super, x18[9]._super,
                 x18[10]._super, x18[11]._super, x22._super,    x23._super,    x24._super,
                 Val(0),         Val(0),         Val(0),        Val(0),        Val(0),
                 Val(0),         Val(0),         Val(0),        Val(0)},
      x25,
      x25,
      Val(0),
      Val(2),
      x3.rnd._super,
      x3.blk._super,
      x3.midx._super,
      LAYOUT_LOOKUP(layout2, _super));
  return x26;
}
RetTupleStruct execXor5wordsMajor_1_(ExecContext& ctx,
                                     RetTupleStruct arg0,
                                     BoundLayout<RetTupleLayout> arg1,
                                     BoundLayout<Xor5wordsMajor_1_Layout> layout2) {
  // xor5words_major(zirgen/circuit/keccak/keccak.zir:244)
  BoundLayout<Xor5wordsMajor_1__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // xor5words_major(zirgen/circuit/keccak/keccak.zir:243)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  OneHot_4_Struct x5 = exec_OneHot_4_(ctx, x4.minor._super, LAYOUT_LOOKUP(layout2, minorOnehot));
  NondetRegStruct4Array x6 = x5._super;
  if (to_size_t(x6[0]._super)) {
    // xor5words_major(zirgen/circuit/keccak/keccak.zir:245)
    RetTupleStruct x7 = back_RetTuple(ctx, 1, arg1);
    RetTupleStruct x8 = execXor5wordsMinor0_1_(ctx, x7, LAYOUT_LOOKUP(x3, arm0));
  }
  if (to_size_t(x6[1]._super)) {
    // xor5words_major(zirgen/circuit/keccak/keccak.zir:246)
    RetTupleStruct x9 = execXor5wordsMinor1_1_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm1));
  }
  if (to_size_t(x6[2]._super)) {
    // xor5words_major(zirgen/circuit/keccak/keccak.zir:247)
    RetTupleStruct x10 = execXor5wordsMinor2_1_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm2));
  }
  if (to_size_t(x6[3]._super)) {
    // xor5words_major(zirgen/circuit/keccak/keccak.zir:248)
    RetTupleStruct x11 = execXor5wordsMinor3_1_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm3));
  }
  // xor5words_major(zirgen/circuit/keccak/keccak.zir:244)
  RetTupleStruct x12 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x12;
}
FromBits_22_Struct execXor5wordsResult_2__0_(ExecContext& ctx,
                                             RetTupleStruct arg0,
                                             BoundLayout<Xor5wordsResult_2__0_Layout> layout1) {
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:161)
  NondetRegStruct22Array x2 = arg0.arrA;
  Val x3 = x2[6]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:165)
  ToBits_22_Struct x4 = exec_ToBits_22_(ctx, x3, LAYOUT_LOOKUP(layout1, unpackA));
  NondetRegStruct22Array x5 = x4._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:166)
  Val x6 = (((x5[0]._super + (x5[1]._super * Val(2))) + (x5[2]._super * Val(4))) +
            (x5[3]._super * Val(8)));
  Val x7 =
      ((((x6 + (x5[4]._super * Val(16))) + (x5[5]._super * Val(32))) + (x5[6]._super * Val(64))) +
       (x5[7]._super * Val(128)));
  Val x8 = ((((x7 + (x5[8]._super * Val(256))) + (x5[9]._super * Val(512))) +
             (x5[10]._super * Val(1024))) +
            (x5[11]._super * Val(2048)));
  Val x9 = ((((x8 + (x5[12]._super * Val(4096))) + (x5[13]._super * Val(8192))) +
             (x5[14]._super * Val(16384))) +
            (x5[15]._super * Val(32768)));
  Val x10 = ((((x9 + (x5[16]._super * Val(65536))) + (x5[17]._super * Val(131072))) +
              (x5[18]._super * Val(262144))) +
             (x5[19]._super * Val(524288)));
  EQZ((((x10 + (x5[20]._super * Val(1048576))) + (x5[21]._super * Val(2097152))) - x3),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:166)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:169)
  Val x11 = x2[21]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:171)
  ToBits_22_Struct x12 = exec_ToBits_22_(ctx, x11, LAYOUT_LOOKUP(layout1, unpackB));
  NondetRegStruct22Array x13 = x12._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:172)
  Val x14 = (((x13[0]._super + (x13[1]._super * Val(2))) + (x13[2]._super * Val(4))) +
             (x13[3]._super * Val(8)));
  Val x15 = ((((x14 + (x13[4]._super * Val(16))) + (x13[5]._super * Val(32))) +
              (x13[6]._super * Val(64))) +
             (x13[7]._super * Val(128)));
  Val x16 = ((((x15 + (x13[8]._super * Val(256))) + (x13[9]._super * Val(512))) +
              (x13[10]._super * Val(1024))) +
             (x13[11]._super * Val(2048)));
  Val x17 = ((((x16 + (x13[12]._super * Val(4096))) + (x13[13]._super * Val(8192))) +
              (x13[14]._super * Val(16384))) +
             (x13[15]._super * Val(32768)));
  Val x18 = ((((x17 + (x13[16]._super * Val(65536))) + (x13[17]._super * Val(131072))) +
              (x13[18]._super * Val(262144))) +
             (x13[19]._super * Val(524288)));
  EQZ((((x18 + (x13[20]._super * Val(1048576))) + (x13[21]._super * Val(2097152))) - x11),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:172)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:175)
  Val x19 = arg0.arrB[14]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:177)
  ToBits_22_Struct x20 = exec_ToBits_22_(ctx, x19, LAYOUT_LOOKUP(layout1, unpackC));
  NondetRegStruct22Array x21 = x20._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:178)
  Val x22 = (((x21[0]._super + (x21[1]._super * Val(2))) + (x21[2]._super * Val(4))) +
             (x21[3]._super * Val(8)));
  Val x23 = ((((x22 + (x21[4]._super * Val(16))) + (x21[5]._super * Val(32))) +
              (x21[6]._super * Val(64))) +
             (x21[7]._super * Val(128)));
  Val x24 = ((((x23 + (x21[8]._super * Val(256))) + (x21[9]._super * Val(512))) +
              (x21[10]._super * Val(1024))) +
             (x21[11]._super * Val(2048)));
  Val x25 = ((((x24 + (x21[12]._super * Val(4096))) + (x21[13]._super * Val(8192))) +
              (x21[14]._super * Val(16384))) +
             (x21[15]._super * Val(32768)));
  Val x26 = ((((x25 + (x21[16]._super * Val(65536))) + (x21[17]._super * Val(131072))) +
              (x21[18]._super * Val(262144))) +
             (x21[19]._super * Val(524288)));
  EQZ((((x26 + (x21[20]._super * Val(1048576))) + (x21[21]._super * Val(2097152))) - x19),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:178)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:161)
  Val x27 = arg0.arrC[7]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:181)
  ToBits_22_Struct x28 = exec_ToBits_22_(ctx, x27, LAYOUT_LOOKUP(layout1, unpackD));
  NondetRegStruct22Array x29 = x28._super;
  Val x30 = x29[0]._super;
  Val x31 = x29[1]._super;
  Val x32 = x29[2]._super;
  Val x33 = x29[3]._super;
  Val x34 = x29[4]._super;
  Val x35 = x29[5]._super;
  Val x36 = x29[6]._super;
  Val x37 = x29[7]._super;
  Val x38 = x29[8]._super;
  Val x39 = x29[9]._super;
  Val x40 = x29[10]._super;
  Val x41 = x29[11]._super;
  Val x42 = x29[12]._super;
  Val x43 = x29[13]._super;
  Val x44 = x29[14]._super;
  Val x45 = x29[15]._super;
  Val x46 = x29[16]._super;
  Val x47 = x29[17]._super;
  Val x48 = x29[18]._super;
  Val x49 = x29[19]._super;
  Val x50 = x29[20]._super;
  Val x51 = x29[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:182)
  Val x52 = ((((((x30 + (x31 * Val(2))) + (x32 * Val(4))) + (x33 * Val(8))) + (x34 * Val(16))) +
              (x35 * Val(32))) +
             (x36 * Val(64)));
  Val x53 =
      ((((((x52 + (x37 * Val(128))) + (x38 * Val(256))) + (x39 * Val(512))) + (x40 * Val(1024))) +
        (x41 * Val(2048))) +
       (x42 * Val(4096)));
  Val x54 = ((((((x53 + (x43 * Val(8192))) + (x44 * Val(16384))) + (x45 * Val(32768))) +
               (x46 * Val(65536))) +
              (x47 * Val(131072))) +
             (x48 * Val(262144)));
  EQZ(((((x54 + (x49 * Val(524288))) + (x50 * Val(1048576))) + (x51 * Val(2097152))) - x27),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:182)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:185)
  Val x55 = arg0.arrD[0]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:187)
  ToBits_22_Struct x56 = exec_ToBits_22_(ctx, x55, LAYOUT_LOOKUP(layout1, unpackE));
  NondetRegStruct22Array x57 = x56._super;
  Val x58 = x57[0]._super;
  Val x59 = x57[1]._super;
  Val x60 = x57[2]._super;
  Val x61 = x57[3]._super;
  Val x62 = x57[4]._super;
  Val x63 = x57[5]._super;
  Val x64 = x57[6]._super;
  Val x65 = x57[7]._super;
  Val x66 = x57[8]._super;
  Val x67 = x57[9]._super;
  Val x68 = x57[10]._super;
  Val x69 = x57[11]._super;
  Val x70 = x57[12]._super;
  Val x71 = x57[13]._super;
  Val x72 = x57[14]._super;
  Val x73 = x57[15]._super;
  Val x74 = x57[16]._super;
  Val x75 = x57[17]._super;
  Val x76 = x57[18]._super;
  Val x77 = x57[19]._super;
  Val x78 = x57[20]._super;
  Val x79 = x57[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:188)
  Val x80 = ((((((x58 + (x59 * Val(2))) + (x60 * Val(4))) + (x61 * Val(8))) + (x62 * Val(16))) +
              (x63 * Val(32))) +
             (x64 * Val(64)));
  Val x81 =
      ((((((x80 + (x65 * Val(128))) + (x66 * Val(256))) + (x67 * Val(512))) + (x68 * Val(1024))) +
        (x69 * Val(2048))) +
       (x70 * Val(4096)));
  Val x82 = ((((((x81 + (x71 * Val(8192))) + (x72 * Val(16384))) + (x73 * Val(32768))) +
               (x74 * Val(65536))) +
              (x75 * Val(131072))) +
             (x76 * Val(262144)));
  EQZ(((((x82 + (x77 * Val(524288))) + (x78 * Val(1048576))) + (x79 * Val(2097152))) - x55),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:188)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  NondetRegStruct22Array x83 =
      map(Val22Array{Val(0),  Val(1),  Val(2),  Val(3),  Val(4),  Val(5),  Val(6),  Val(7),
                     Val(8),  Val(9),  Val(10), Val(11), Val(12), Val(13), Val(14), Val(15),
                     Val(16), Val(17), Val(18), Val(19), Val(20), Val(21)},
          LAYOUT_LOOKUP(layout1, xorAbc),
          std::function([&](Val22Array::value_type x84,
                            BoundLayout<NondetRegLayout22LayoutArray::value_type> x85) {
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:165)
            Val x86 = x5[to_size_t(x84)]._super;
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:171)
            Val x87 = x13[to_size_t(x84)]._super;
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:177)
            Val x88 = x21[to_size_t(x84)]._super;
            // xor3(zirgen/circuit/keccak/keccak.zir:110)
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:191)
            Val x89 = ((x86 * x87) + ((Val(1) - x86) * (Val(1) - x87)));
            NondetRegStruct x90 =
                exec_Reg(ctx, ((x89 * x88) + ((Val(1) - x89) * (Val(1) - x88))), x85);
            return x90;
          }));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x91 = x83[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x92 = ((x91 * x30) + ((Val(1) - x91) * (Val(1) - x30)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x93 = x83[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x94 = ((x93 * x31) + ((Val(1) - x93) * (Val(1) - x31)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x95 = x83[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x96 = ((x95 * x32) + ((Val(1) - x95) * (Val(1) - x32)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x97 = x83[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x98 = ((x97 * x33) + ((Val(1) - x97) * (Val(1) - x33)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x99 = x83[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x100 = ((x99 * x34) + ((Val(1) - x99) * (Val(1) - x34)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x101 = x83[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x102 = ((x101 * x35) + ((Val(1) - x101) * (Val(1) - x35)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x103 = x83[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x104 = ((x103 * x36) + ((Val(1) - x103) * (Val(1) - x36)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x105 = x83[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x106 = ((x105 * x37) + ((Val(1) - x105) * (Val(1) - x37)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x107 = x83[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x108 = ((x107 * x38) + ((Val(1) - x107) * (Val(1) - x38)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x109 = x83[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x110 = ((x109 * x39) + ((Val(1) - x109) * (Val(1) - x39)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x111 = x83[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x112 = ((x111 * x40) + ((Val(1) - x111) * (Val(1) - x40)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x113 = x83[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x114 = ((x113 * x41) + ((Val(1) - x113) * (Val(1) - x41)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x115 = x83[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x116 = ((x115 * x42) + ((Val(1) - x115) * (Val(1) - x42)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x117 = x83[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x118 = ((x117 * x43) + ((Val(1) - x117) * (Val(1) - x43)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x119 = x83[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x120 = ((x119 * x44) + ((Val(1) - x119) * (Val(1) - x44)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x121 = x83[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x122 = ((x121 * x45) + ((Val(1) - x121) * (Val(1) - x45)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x123 = x83[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x124 = ((x123 * x46) + ((Val(1) - x123) * (Val(1) - x46)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x125 = x83[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x126 = ((x125 * x47) + ((Val(1) - x125) * (Val(1) - x47)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x127 = x83[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x128 = ((x127 * x48) + ((Val(1) - x127) * (Val(1) - x48)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x129 = x83[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x130 = ((x129 * x49) + ((Val(1) - x129) * (Val(1) - x49)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x131 = x83[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x132 = ((x131 * x50) + ((Val(1) - x131) * (Val(1) - x50)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x133 = x83[21]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x134 = ((x133 * x51) + ((Val(1) - x133) * (Val(1) - x51)));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:196)
  Val x135 = (((x92 * x58) + ((Val(1) - x92) * (Val(1) - x58))) +
              (((x94 * x59) + ((Val(1) - x94) * (Val(1) - x59))) * Val(2)));
  Val x136 = ((x135 + (((x96 * x60) + ((Val(1) - x96) * (Val(1) - x60))) * Val(4))) +
              (((x98 * x61) + ((Val(1) - x98) * (Val(1) - x61))) * Val(8)));
  Val x137 = ((x136 + (((x100 * x62) + ((Val(1) - x100) * (Val(1) - x62))) * Val(16))) +
              (((x102 * x63) + ((Val(1) - x102) * (Val(1) - x63))) * Val(32)));
  Val x138 = ((x137 + (((x104 * x64) + ((Val(1) - x104) * (Val(1) - x64))) * Val(64))) +
              (((x106 * x65) + ((Val(1) - x106) * (Val(1) - x65))) * Val(128)));
  Val x139 = ((x138 + (((x108 * x66) + ((Val(1) - x108) * (Val(1) - x66))) * Val(256))) +
              (((x110 * x67) + ((Val(1) - x110) * (Val(1) - x67))) * Val(512)));
  Val x140 = ((x139 + (((x112 * x68) + ((Val(1) - x112) * (Val(1) - x68))) * Val(1024))) +
              (((x114 * x69) + ((Val(1) - x114) * (Val(1) - x69))) * Val(2048)));
  Val x141 = ((x140 + (((x116 * x70) + ((Val(1) - x116) * (Val(1) - x70))) * Val(4096))) +
              (((x118 * x71) + ((Val(1) - x118) * (Val(1) - x71))) * Val(8192)));
  Val x142 = ((x141 + (((x120 * x72) + ((Val(1) - x120) * (Val(1) - x72))) * Val(16384))) +
              (((x122 * x73) + ((Val(1) - x122) * (Val(1) - x73))) * Val(32768)));
  Val x143 = ((x142 + (((x124 * x74) + ((Val(1) - x124) * (Val(1) - x74))) * Val(65536))) +
              (((x126 * x75) + ((Val(1) - x126) * (Val(1) - x75))) * Val(131072)));
  Val x144 = ((x143 + (((x128 * x76) + ((Val(1) - x128) * (Val(1) - x76))) * Val(262144))) +
              (((x130 * x77) + ((Val(1) - x130) * (Val(1) - x77))) * Val(524288)));
  Val x145 = ((x144 + (((x132 * x78) + ((Val(1) - x132) * (Val(1) - x78))) * Val(1048576))) +
              (((x134 * x79) + ((Val(1) - x134) * (Val(1) - x79))) * Val(2097152)));
  return FromBits_22_Struct{._super = x145};
}
RetTupleStruct execXor5wordsMinor0_2_(ExecContext& ctx,
                                      RetTupleStruct arg0,
                                      BoundLayout<Xor5wordsMinor0_2_Layout> layout1) {
  // xor5words_minor0(zirgen/circuit/keccak/keccak.zir:200)
  FromBits_22_Struct x2 = execXor5wordsResult_2__0_(ctx, arg0, LAYOUT_LOOKUP(layout1, _0));
  NondetRegStruct x3 = exec_Reg(ctx, x2._super, LAYOUT_LOOKUP(layout1, result));
  // xor5words_minor0(zirgen/circuit/keccak/keccak.zir:202)
  Val22Array x4 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                             Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                             Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x5 =
      exec_RetTuple(ctx,
                    x4,
                    x4,
                    x4,
                    Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),    Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),    Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), x3._super, Val(0)},
                    x4,
                    x4,
                    Val(1),
                    Val(2),
                    arg0.rnd._super,
                    arg0.blk._super,
                    arg0.midx._super,
                    LAYOUT_LOOKUP(layout1, _super));
  return x5;
}
FromBits_21_Struct execXor5wordsResult_2__1_(ExecContext& ctx,
                                             RetTupleStruct arg0,
                                             BoundLayout<Xor5wordsResult_2__1_Layout> layout1) {
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:161)
  Val x2 = arg0.arrA[7]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:165)
  ToBits_21_Struct x3 = exec_ToBits_21_(ctx, x2, LAYOUT_LOOKUP(layout1, unpackA));
  NondetRegStruct21Array x4 = x3._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:166)
  Val x5 = (((x4[0]._super + (x4[1]._super * Val(2))) + (x4[2]._super * Val(4))) +
            (x4[3]._super * Val(8)));
  Val x6 =
      ((((x5 + (x4[4]._super * Val(16))) + (x4[5]._super * Val(32))) + (x4[6]._super * Val(64))) +
       (x4[7]._super * Val(128)));
  Val x7 = ((((x6 + (x4[8]._super * Val(256))) + (x4[9]._super * Val(512))) +
             (x4[10]._super * Val(1024))) +
            (x4[11]._super * Val(2048)));
  Val x8 = ((((x7 + (x4[12]._super * Val(4096))) + (x4[13]._super * Val(8192))) +
             (x4[14]._super * Val(16384))) +
            (x4[15]._super * Val(32768)));
  Val x9 = ((((x8 + (x4[16]._super * Val(65536))) + (x4[17]._super * Val(131072))) +
             (x4[18]._super * Val(262144))) +
            (x4[19]._super * Val(524288)));
  EQZ(((x9 + (x4[20]._super * Val(1048576))) - x2),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:166)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:161)
  NondetRegStruct22Array x10 = arg0.arrB;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:169)
  Val x11 = x10[0]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:171)
  ToBits_21_Struct x12 = exec_ToBits_21_(ctx, x11, LAYOUT_LOOKUP(layout1, unpackB));
  NondetRegStruct21Array x13 = x12._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:172)
  Val x14 = (((x13[0]._super + (x13[1]._super * Val(2))) + (x13[2]._super * Val(4))) +
             (x13[3]._super * Val(8)));
  Val x15 = ((((x14 + (x13[4]._super * Val(16))) + (x13[5]._super * Val(32))) +
              (x13[6]._super * Val(64))) +
             (x13[7]._super * Val(128)));
  Val x16 = ((((x15 + (x13[8]._super * Val(256))) + (x13[9]._super * Val(512))) +
              (x13[10]._super * Val(1024))) +
             (x13[11]._super * Val(2048)));
  Val x17 = ((((x16 + (x13[12]._super * Val(4096))) + (x13[13]._super * Val(8192))) +
              (x13[14]._super * Val(16384))) +
             (x13[15]._super * Val(32768)));
  Val x18 = ((((x17 + (x13[16]._super * Val(65536))) + (x13[17]._super * Val(131072))) +
              (x13[18]._super * Val(262144))) +
             (x13[19]._super * Val(524288)));
  EQZ(((x18 + (x13[20]._super * Val(1048576))) - x11),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:172)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:175)
  Val x19 = x10[15]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:177)
  ToBits_21_Struct x20 = exec_ToBits_21_(ctx, x19, LAYOUT_LOOKUP(layout1, unpackC));
  NondetRegStruct21Array x21 = x20._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:178)
  Val x22 = (((x21[0]._super + (x21[1]._super * Val(2))) + (x21[2]._super * Val(4))) +
             (x21[3]._super * Val(8)));
  Val x23 = ((((x22 + (x21[4]._super * Val(16))) + (x21[5]._super * Val(32))) +
              (x21[6]._super * Val(64))) +
             (x21[7]._super * Val(128)));
  Val x24 = ((((x23 + (x21[8]._super * Val(256))) + (x21[9]._super * Val(512))) +
              (x21[10]._super * Val(1024))) +
             (x21[11]._super * Val(2048)));
  Val x25 = ((((x24 + (x21[12]._super * Val(4096))) + (x21[13]._super * Val(8192))) +
              (x21[14]._super * Val(16384))) +
             (x21[15]._super * Val(32768)));
  Val x26 = ((((x25 + (x21[16]._super * Val(65536))) + (x21[17]._super * Val(131072))) +
              (x21[18]._super * Val(262144))) +
             (x21[19]._super * Val(524288)));
  EQZ(((x26 + (x21[20]._super * Val(1048576))) - x19),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:178)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:161)
  Val x27 = arg0.arrC[8]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:181)
  ToBits_21_Struct x28 = exec_ToBits_21_(ctx, x27, LAYOUT_LOOKUP(layout1, unpackD));
  NondetRegStruct21Array x29 = x28._super;
  Val x30 = x29[0]._super;
  Val x31 = x29[1]._super;
  Val x32 = x29[2]._super;
  Val x33 = x29[3]._super;
  Val x34 = x29[4]._super;
  Val x35 = x29[5]._super;
  Val x36 = x29[6]._super;
  Val x37 = x29[7]._super;
  Val x38 = x29[8]._super;
  Val x39 = x29[9]._super;
  Val x40 = x29[10]._super;
  Val x41 = x29[11]._super;
  Val x42 = x29[12]._super;
  Val x43 = x29[13]._super;
  Val x44 = x29[14]._super;
  Val x45 = x29[15]._super;
  Val x46 = x29[16]._super;
  Val x47 = x29[17]._super;
  Val x48 = x29[18]._super;
  Val x49 = x29[19]._super;
  Val x50 = x29[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:182)
  Val x51 = ((((((x30 + (x31 * Val(2))) + (x32 * Val(4))) + (x33 * Val(8))) + (x34 * Val(16))) +
              (x35 * Val(32))) +
             (x36 * Val(64)));
  Val x52 =
      ((((((x51 + (x37 * Val(128))) + (x38 * Val(256))) + (x39 * Val(512))) + (x40 * Val(1024))) +
        (x41 * Val(2048))) +
       (x42 * Val(4096)));
  Val x53 = ((((((x52 + (x43 * Val(8192))) + (x44 * Val(16384))) + (x45 * Val(32768))) +
               (x46 * Val(65536))) +
              (x47 * Val(131072))) +
             (x48 * Val(262144)));
  EQZ((((x53 + (x49 * Val(524288))) + (x50 * Val(1048576))) - x27),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:182)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:185)
  Val x54 = arg0.arrD[1]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:187)
  ToBits_21_Struct x55 = exec_ToBits_21_(ctx, x54, LAYOUT_LOOKUP(layout1, unpackE));
  NondetRegStruct21Array x56 = x55._super;
  Val x57 = x56[0]._super;
  Val x58 = x56[1]._super;
  Val x59 = x56[2]._super;
  Val x60 = x56[3]._super;
  Val x61 = x56[4]._super;
  Val x62 = x56[5]._super;
  Val x63 = x56[6]._super;
  Val x64 = x56[7]._super;
  Val x65 = x56[8]._super;
  Val x66 = x56[9]._super;
  Val x67 = x56[10]._super;
  Val x68 = x56[11]._super;
  Val x69 = x56[12]._super;
  Val x70 = x56[13]._super;
  Val x71 = x56[14]._super;
  Val x72 = x56[15]._super;
  Val x73 = x56[16]._super;
  Val x74 = x56[17]._super;
  Val x75 = x56[18]._super;
  Val x76 = x56[19]._super;
  Val x77 = x56[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:188)
  Val x78 = ((((((x57 + (x58 * Val(2))) + (x59 * Val(4))) + (x60 * Val(8))) + (x61 * Val(16))) +
              (x62 * Val(32))) +
             (x63 * Val(64)));
  Val x79 =
      ((((((x78 + (x64 * Val(128))) + (x65 * Val(256))) + (x66 * Val(512))) + (x67 * Val(1024))) +
        (x68 * Val(2048))) +
       (x69 * Val(4096)));
  Val x80 = ((((((x79 + (x70 * Val(8192))) + (x71 * Val(16384))) + (x72 * Val(32768))) +
               (x73 * Val(65536))) +
              (x74 * Val(131072))) +
             (x75 * Val(262144)));
  EQZ((((x80 + (x76 * Val(524288))) + (x77 * Val(1048576))) - x54),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:188)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  NondetRegStruct21Array x81 =
      map(Val21Array{Val(0),  Val(1),  Val(2),  Val(3),  Val(4),  Val(5),  Val(6),
                     Val(7),  Val(8),  Val(9),  Val(10), Val(11), Val(12), Val(13),
                     Val(14), Val(15), Val(16), Val(17), Val(18), Val(19), Val(20)},
          LAYOUT_LOOKUP(layout1, xorAbc),
          std::function([&](Val21Array::value_type x82,
                            BoundLayout<NondetRegLayout21LayoutArray::value_type> x83) {
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:165)
            Val x84 = x4[to_size_t(x82)]._super;
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:171)
            Val x85 = x13[to_size_t(x82)]._super;
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:177)
            Val x86 = x21[to_size_t(x82)]._super;
            // xor3(zirgen/circuit/keccak/keccak.zir:110)
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:191)
            Val x87 = ((x84 * x85) + ((Val(1) - x84) * (Val(1) - x85)));
            NondetRegStruct x88 =
                exec_Reg(ctx, ((x87 * x86) + ((Val(1) - x87) * (Val(1) - x86))), x83);
            return x88;
          }));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x89 = x81[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x90 = ((x89 * x30) + ((Val(1) - x89) * (Val(1) - x30)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x91 = x81[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x92 = ((x91 * x31) + ((Val(1) - x91) * (Val(1) - x31)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x93 = x81[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x94 = ((x93 * x32) + ((Val(1) - x93) * (Val(1) - x32)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x95 = x81[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x96 = ((x95 * x33) + ((Val(1) - x95) * (Val(1) - x33)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x97 = x81[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x98 = ((x97 * x34) + ((Val(1) - x97) * (Val(1) - x34)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x99 = x81[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x100 = ((x99 * x35) + ((Val(1) - x99) * (Val(1) - x35)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x101 = x81[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x102 = ((x101 * x36) + ((Val(1) - x101) * (Val(1) - x36)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x103 = x81[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x104 = ((x103 * x37) + ((Val(1) - x103) * (Val(1) - x37)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x105 = x81[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x106 = ((x105 * x38) + ((Val(1) - x105) * (Val(1) - x38)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x107 = x81[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x108 = ((x107 * x39) + ((Val(1) - x107) * (Val(1) - x39)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x109 = x81[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x110 = ((x109 * x40) + ((Val(1) - x109) * (Val(1) - x40)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x111 = x81[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x112 = ((x111 * x41) + ((Val(1) - x111) * (Val(1) - x41)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x113 = x81[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x114 = ((x113 * x42) + ((Val(1) - x113) * (Val(1) - x42)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x115 = x81[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x116 = ((x115 * x43) + ((Val(1) - x115) * (Val(1) - x43)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x117 = x81[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x118 = ((x117 * x44) + ((Val(1) - x117) * (Val(1) - x44)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x119 = x81[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x120 = ((x119 * x45) + ((Val(1) - x119) * (Val(1) - x45)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x121 = x81[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x122 = ((x121 * x46) + ((Val(1) - x121) * (Val(1) - x46)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x123 = x81[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x124 = ((x123 * x47) + ((Val(1) - x123) * (Val(1) - x47)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x125 = x81[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x126 = ((x125 * x48) + ((Val(1) - x125) * (Val(1) - x48)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x127 = x81[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x128 = ((x127 * x49) + ((Val(1) - x127) * (Val(1) - x49)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x129 = x81[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x130 = ((x129 * x50) + ((Val(1) - x129) * (Val(1) - x50)));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:196)
  Val x131 = (((x90 * x57) + ((Val(1) - x90) * (Val(1) - x57))) +
              (((x92 * x58) + ((Val(1) - x92) * (Val(1) - x58))) * Val(2)));
  Val x132 = ((x131 + (((x94 * x59) + ((Val(1) - x94) * (Val(1) - x59))) * Val(4))) +
              (((x96 * x60) + ((Val(1) - x96) * (Val(1) - x60))) * Val(8)));
  Val x133 = ((x132 + (((x98 * x61) + ((Val(1) - x98) * (Val(1) - x61))) * Val(16))) +
              (((x100 * x62) + ((Val(1) - x100) * (Val(1) - x62))) * Val(32)));
  Val x134 = ((x133 + (((x102 * x63) + ((Val(1) - x102) * (Val(1) - x63))) * Val(64))) +
              (((x104 * x64) + ((Val(1) - x104) * (Val(1) - x64))) * Val(128)));
  Val x135 = ((x134 + (((x106 * x65) + ((Val(1) - x106) * (Val(1) - x65))) * Val(256))) +
              (((x108 * x66) + ((Val(1) - x108) * (Val(1) - x66))) * Val(512)));
  Val x136 = ((x135 + (((x110 * x67) + ((Val(1) - x110) * (Val(1) - x67))) * Val(1024))) +
              (((x112 * x68) + ((Val(1) - x112) * (Val(1) - x68))) * Val(2048)));
  Val x137 = ((x136 + (((x114 * x69) + ((Val(1) - x114) * (Val(1) - x69))) * Val(4096))) +
              (((x116 * x70) + ((Val(1) - x116) * (Val(1) - x70))) * Val(8192)));
  Val x138 = ((x137 + (((x118 * x71) + ((Val(1) - x118) * (Val(1) - x71))) * Val(16384))) +
              (((x120 * x72) + ((Val(1) - x120) * (Val(1) - x72))) * Val(32768)));
  Val x139 = ((x138 + (((x122 * x73) + ((Val(1) - x122) * (Val(1) - x73))) * Val(65536))) +
              (((x124 * x74) + ((Val(1) - x124) * (Val(1) - x74))) * Val(131072)));
  Val x140 = ((x139 + (((x126 * x75) + ((Val(1) - x126) * (Val(1) - x75))) * Val(262144))) +
              (((x128 * x76) + ((Val(1) - x128) * (Val(1) - x76))) * Val(524288)));
  return FromBits_21_Struct{
      ._super = (x140 + (((x130 * x77) + ((Val(1) - x130) * (Val(1) - x77))) * Val(1048576)))};
}
RetTupleStruct execXor5wordsMinor1_2_(ExecContext& ctx,
                                      RetTupleStruct arg0,
                                      BoundLayout<RetTupleLayout> arg1,
                                      BoundLayout<Xor5wordsMinor1_2_Layout> layout2) {
  // xor5words_minor1(zirgen/circuit/keccak/keccak.zir:207)
  RetTupleStruct x3 = back_RetTuple(ctx, 1, arg1);
  // xor5words_minor1(zirgen/circuit/keccak/keccak.zir:208)
  RetTupleStruct x4 = back_RetTuple(ctx, 2, arg1);
  // xor5words_minor1(zirgen/circuit/keccak/keccak.zir:209)
  FromBits_21_Struct x5 = execXor5wordsResult_2__1_(ctx, x4, LAYOUT_LOOKUP(layout2, _0));
  NondetRegStruct x6 = exec_Reg(ctx, x5._super, LAYOUT_LOOKUP(layout2, result));
  // xor5words_minor1(zirgen/circuit/keccak/keccak.zir:212)
  Val22Array x7 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                             Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                             Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x8 =
      exec_RetTuple(ctx,
                    Val22Array{Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), x3.arrD[22]._super},
                    Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),   Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),   Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), x6._super},
                    x7,
                    Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                    x7,
                    x7,
                    Val(2),
                    Val(2),
                    x3.rnd._super,
                    x3.blk._super,
                    x3.midx._super,
                    LAYOUT_LOOKUP(layout2, _super));
  return x8;
}
FromBits_21_Struct execXor5wordsResult_2__2_(ExecContext& ctx,
                                             RetTupleStruct arg0,
                                             BoundLayout<Xor5wordsResult_2__2_Layout> layout1) {
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:161)
  Val x2 = arg0.arrA[8]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:165)
  ToBits_21_Struct x3 = exec_ToBits_21_(ctx, x2, LAYOUT_LOOKUP(layout1, unpackA));
  NondetRegStruct21Array x4 = x3._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:166)
  Val x5 = (((x4[0]._super + (x4[1]._super * Val(2))) + (x4[2]._super * Val(4))) +
            (x4[3]._super * Val(8)));
  Val x6 =
      ((((x5 + (x4[4]._super * Val(16))) + (x4[5]._super * Val(32))) + (x4[6]._super * Val(64))) +
       (x4[7]._super * Val(128)));
  Val x7 = ((((x6 + (x4[8]._super * Val(256))) + (x4[9]._super * Val(512))) +
             (x4[10]._super * Val(1024))) +
            (x4[11]._super * Val(2048)));
  Val x8 = ((((x7 + (x4[12]._super * Val(4096))) + (x4[13]._super * Val(8192))) +
             (x4[14]._super * Val(16384))) +
            (x4[15]._super * Val(32768)));
  Val x9 = ((((x8 + (x4[16]._super * Val(65536))) + (x4[17]._super * Val(131072))) +
             (x4[18]._super * Val(262144))) +
            (x4[19]._super * Val(524288)));
  EQZ(((x9 + (x4[20]._super * Val(1048576))) - x2),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:166)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:161)
  NondetRegStruct22Array x10 = arg0.arrB;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:169)
  Val x11 = x10[1]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:171)
  ToBits_21_Struct x12 = exec_ToBits_21_(ctx, x11, LAYOUT_LOOKUP(layout1, unpackB));
  NondetRegStruct21Array x13 = x12._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:172)
  Val x14 = (((x13[0]._super + (x13[1]._super * Val(2))) + (x13[2]._super * Val(4))) +
             (x13[3]._super * Val(8)));
  Val x15 = ((((x14 + (x13[4]._super * Val(16))) + (x13[5]._super * Val(32))) +
              (x13[6]._super * Val(64))) +
             (x13[7]._super * Val(128)));
  Val x16 = ((((x15 + (x13[8]._super * Val(256))) + (x13[9]._super * Val(512))) +
              (x13[10]._super * Val(1024))) +
             (x13[11]._super * Val(2048)));
  Val x17 = ((((x16 + (x13[12]._super * Val(4096))) + (x13[13]._super * Val(8192))) +
              (x13[14]._super * Val(16384))) +
             (x13[15]._super * Val(32768)));
  Val x18 = ((((x17 + (x13[16]._super * Val(65536))) + (x13[17]._super * Val(131072))) +
              (x13[18]._super * Val(262144))) +
             (x13[19]._super * Val(524288)));
  EQZ(((x18 + (x13[20]._super * Val(1048576))) - x11),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:172)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:175)
  Val x19 = x10[16]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:177)
  ToBits_21_Struct x20 = exec_ToBits_21_(ctx, x19, LAYOUT_LOOKUP(layout1, unpackC));
  NondetRegStruct21Array x21 = x20._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:178)
  Val x22 = (((x21[0]._super + (x21[1]._super * Val(2))) + (x21[2]._super * Val(4))) +
             (x21[3]._super * Val(8)));
  Val x23 = ((((x22 + (x21[4]._super * Val(16))) + (x21[5]._super * Val(32))) +
              (x21[6]._super * Val(64))) +
             (x21[7]._super * Val(128)));
  Val x24 = ((((x23 + (x21[8]._super * Val(256))) + (x21[9]._super * Val(512))) +
              (x21[10]._super * Val(1024))) +
             (x21[11]._super * Val(2048)));
  Val x25 = ((((x24 + (x21[12]._super * Val(4096))) + (x21[13]._super * Val(8192))) +
              (x21[14]._super * Val(16384))) +
             (x21[15]._super * Val(32768)));
  Val x26 = ((((x25 + (x21[16]._super * Val(65536))) + (x21[17]._super * Val(131072))) +
              (x21[18]._super * Val(262144))) +
             (x21[19]._super * Val(524288)));
  EQZ(((x26 + (x21[20]._super * Val(1048576))) - x19),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:178)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:161)
  Val x27 = arg0.arrC[9]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:181)
  ToBits_21_Struct x28 = exec_ToBits_21_(ctx, x27, LAYOUT_LOOKUP(layout1, unpackD));
  NondetRegStruct21Array x29 = x28._super;
  Val x30 = x29[0]._super;
  Val x31 = x29[1]._super;
  Val x32 = x29[2]._super;
  Val x33 = x29[3]._super;
  Val x34 = x29[4]._super;
  Val x35 = x29[5]._super;
  Val x36 = x29[6]._super;
  Val x37 = x29[7]._super;
  Val x38 = x29[8]._super;
  Val x39 = x29[9]._super;
  Val x40 = x29[10]._super;
  Val x41 = x29[11]._super;
  Val x42 = x29[12]._super;
  Val x43 = x29[13]._super;
  Val x44 = x29[14]._super;
  Val x45 = x29[15]._super;
  Val x46 = x29[16]._super;
  Val x47 = x29[17]._super;
  Val x48 = x29[18]._super;
  Val x49 = x29[19]._super;
  Val x50 = x29[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:182)
  Val x51 = ((((((x30 + (x31 * Val(2))) + (x32 * Val(4))) + (x33 * Val(8))) + (x34 * Val(16))) +
              (x35 * Val(32))) +
             (x36 * Val(64)));
  Val x52 =
      ((((((x51 + (x37 * Val(128))) + (x38 * Val(256))) + (x39 * Val(512))) + (x40 * Val(1024))) +
        (x41 * Val(2048))) +
       (x42 * Val(4096)));
  Val x53 = ((((((x52 + (x43 * Val(8192))) + (x44 * Val(16384))) + (x45 * Val(32768))) +
               (x46 * Val(65536))) +
              (x47 * Val(131072))) +
             (x48 * Val(262144)));
  EQZ((((x53 + (x49 * Val(524288))) + (x50 * Val(1048576))) - x27),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:182)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:185)
  Val x54 = arg0.arrD[2]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:187)
  ToBits_21_Struct x55 = exec_ToBits_21_(ctx, x54, LAYOUT_LOOKUP(layout1, unpackE));
  NondetRegStruct21Array x56 = x55._super;
  Val x57 = x56[0]._super;
  Val x58 = x56[1]._super;
  Val x59 = x56[2]._super;
  Val x60 = x56[3]._super;
  Val x61 = x56[4]._super;
  Val x62 = x56[5]._super;
  Val x63 = x56[6]._super;
  Val x64 = x56[7]._super;
  Val x65 = x56[8]._super;
  Val x66 = x56[9]._super;
  Val x67 = x56[10]._super;
  Val x68 = x56[11]._super;
  Val x69 = x56[12]._super;
  Val x70 = x56[13]._super;
  Val x71 = x56[14]._super;
  Val x72 = x56[15]._super;
  Val x73 = x56[16]._super;
  Val x74 = x56[17]._super;
  Val x75 = x56[18]._super;
  Val x76 = x56[19]._super;
  Val x77 = x56[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:188)
  Val x78 = ((((((x57 + (x58 * Val(2))) + (x59 * Val(4))) + (x60 * Val(8))) + (x61 * Val(16))) +
              (x62 * Val(32))) +
             (x63 * Val(64)));
  Val x79 =
      ((((((x78 + (x64 * Val(128))) + (x65 * Val(256))) + (x66 * Val(512))) + (x67 * Val(1024))) +
        (x68 * Val(2048))) +
       (x69 * Val(4096)));
  Val x80 = ((((((x79 + (x70 * Val(8192))) + (x71 * Val(16384))) + (x72 * Val(32768))) +
               (x73 * Val(65536))) +
              (x74 * Val(131072))) +
             (x75 * Val(262144)));
  EQZ((((x80 + (x76 * Val(524288))) + (x77 * Val(1048576))) - x54),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:188)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  NondetRegStruct21Array x81 =
      map(Val21Array{Val(0),  Val(1),  Val(2),  Val(3),  Val(4),  Val(5),  Val(6),
                     Val(7),  Val(8),  Val(9),  Val(10), Val(11), Val(12), Val(13),
                     Val(14), Val(15), Val(16), Val(17), Val(18), Val(19), Val(20)},
          LAYOUT_LOOKUP(layout1, xorAbc),
          std::function([&](Val21Array::value_type x82,
                            BoundLayout<NondetRegLayout21LayoutArray::value_type> x83) {
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:165)
            Val x84 = x4[to_size_t(x82)]._super;
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:171)
            Val x85 = x13[to_size_t(x82)]._super;
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:177)
            Val x86 = x21[to_size_t(x82)]._super;
            // xor3(zirgen/circuit/keccak/keccak.zir:110)
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:191)
            Val x87 = ((x84 * x85) + ((Val(1) - x84) * (Val(1) - x85)));
            NondetRegStruct x88 =
                exec_Reg(ctx, ((x87 * x86) + ((Val(1) - x87) * (Val(1) - x86))), x83);
            return x88;
          }));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x89 = x81[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x90 = ((x89 * x30) + ((Val(1) - x89) * (Val(1) - x30)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x91 = x81[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x92 = ((x91 * x31) + ((Val(1) - x91) * (Val(1) - x31)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x93 = x81[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x94 = ((x93 * x32) + ((Val(1) - x93) * (Val(1) - x32)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x95 = x81[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x96 = ((x95 * x33) + ((Val(1) - x95) * (Val(1) - x33)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x97 = x81[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x98 = ((x97 * x34) + ((Val(1) - x97) * (Val(1) - x34)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x99 = x81[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x100 = ((x99 * x35) + ((Val(1) - x99) * (Val(1) - x35)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x101 = x81[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x102 = ((x101 * x36) + ((Val(1) - x101) * (Val(1) - x36)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x103 = x81[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x104 = ((x103 * x37) + ((Val(1) - x103) * (Val(1) - x37)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x105 = x81[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x106 = ((x105 * x38) + ((Val(1) - x105) * (Val(1) - x38)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x107 = x81[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x108 = ((x107 * x39) + ((Val(1) - x107) * (Val(1) - x39)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x109 = x81[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x110 = ((x109 * x40) + ((Val(1) - x109) * (Val(1) - x40)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x111 = x81[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x112 = ((x111 * x41) + ((Val(1) - x111) * (Val(1) - x41)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x113 = x81[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x114 = ((x113 * x42) + ((Val(1) - x113) * (Val(1) - x42)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x115 = x81[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x116 = ((x115 * x43) + ((Val(1) - x115) * (Val(1) - x43)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x117 = x81[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x118 = ((x117 * x44) + ((Val(1) - x117) * (Val(1) - x44)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x119 = x81[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x120 = ((x119 * x45) + ((Val(1) - x119) * (Val(1) - x45)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x121 = x81[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x122 = ((x121 * x46) + ((Val(1) - x121) * (Val(1) - x46)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x123 = x81[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x124 = ((x123 * x47) + ((Val(1) - x123) * (Val(1) - x47)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x125 = x81[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x126 = ((x125 * x48) + ((Val(1) - x125) * (Val(1) - x48)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x127 = x81[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x128 = ((x127 * x49) + ((Val(1) - x127) * (Val(1) - x49)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x129 = x81[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x130 = ((x129 * x50) + ((Val(1) - x129) * (Val(1) - x50)));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:196)
  Val x131 = (((x90 * x57) + ((Val(1) - x90) * (Val(1) - x57))) +
              (((x92 * x58) + ((Val(1) - x92) * (Val(1) - x58))) * Val(2)));
  Val x132 = ((x131 + (((x94 * x59) + ((Val(1) - x94) * (Val(1) - x59))) * Val(4))) +
              (((x96 * x60) + ((Val(1) - x96) * (Val(1) - x60))) * Val(8)));
  Val x133 = ((x132 + (((x98 * x61) + ((Val(1) - x98) * (Val(1) - x61))) * Val(16))) +
              (((x100 * x62) + ((Val(1) - x100) * (Val(1) - x62))) * Val(32)));
  Val x134 = ((x133 + (((x102 * x63) + ((Val(1) - x102) * (Val(1) - x63))) * Val(64))) +
              (((x104 * x64) + ((Val(1) - x104) * (Val(1) - x64))) * Val(128)));
  Val x135 = ((x134 + (((x106 * x65) + ((Val(1) - x106) * (Val(1) - x65))) * Val(256))) +
              (((x108 * x66) + ((Val(1) - x108) * (Val(1) - x66))) * Val(512)));
  Val x136 = ((x135 + (((x110 * x67) + ((Val(1) - x110) * (Val(1) - x67))) * Val(1024))) +
              (((x112 * x68) + ((Val(1) - x112) * (Val(1) - x68))) * Val(2048)));
  Val x137 = ((x136 + (((x114 * x69) + ((Val(1) - x114) * (Val(1) - x69))) * Val(4096))) +
              (((x116 * x70) + ((Val(1) - x116) * (Val(1) - x70))) * Val(8192)));
  Val x138 = ((x137 + (((x118 * x71) + ((Val(1) - x118) * (Val(1) - x71))) * Val(16384))) +
              (((x120 * x72) + ((Val(1) - x120) * (Val(1) - x72))) * Val(32768)));
  Val x139 = ((x138 + (((x122 * x73) + ((Val(1) - x122) * (Val(1) - x73))) * Val(65536))) +
              (((x124 * x74) + ((Val(1) - x124) * (Val(1) - x74))) * Val(131072)));
  Val x140 = ((x139 + (((x126 * x75) + ((Val(1) - x126) * (Val(1) - x75))) * Val(262144))) +
              (((x128 * x76) + ((Val(1) - x128) * (Val(1) - x76))) * Val(524288)));
  return FromBits_21_Struct{
      ._super = (x140 + (((x130 * x77) + ((Val(1) - x130) * (Val(1) - x77))) * Val(1048576)))};
}
RetTupleStruct execXor5wordsMinor2_2_(ExecContext& ctx,
                                      RetTupleStruct arg0,
                                      BoundLayout<RetTupleLayout> arg1,
                                      BoundLayout<Xor5wordsMinor2_2_Layout> layout2) {
  // xor5words_minor2(zirgen/circuit/keccak/keccak.zir:217)
  RetTupleStruct x3 = back_RetTuple(ctx, 1, arg1);
  // xor5words_minor2(zirgen/circuit/keccak/keccak.zir:218)
  RetTupleStruct x4 = back_RetTuple(ctx, 3, arg1);
  // xor5words_minor2(zirgen/circuit/keccak/keccak.zir:219)
  FromBits_21_Struct x5 = execXor5wordsResult_2__2_(ctx, x4, LAYOUT_LOOKUP(layout2, _0));
  NondetRegStruct x6 = exec_Reg(ctx, x5._super, LAYOUT_LOOKUP(layout2, result));
  // xor5words_minor2(zirgen/circuit/keccak/keccak.zir:223)
  Val22Array x7 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                             Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                             Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x8 =
      exec_RetTuple(ctx,
                    Val22Array{Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), x3.arrA[21]._super},
                    Val22Array{Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), x3.arrB[21]._super},
                    Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),   Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),   Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), x6._super},
                    Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                    x7,
                    x7,
                    Val(3),
                    Val(2),
                    x3.rnd._super,
                    x3.blk._super,
                    x3.midx._super,
                    LAYOUT_LOOKUP(layout2, _super));
  return x8;
}
RetTupleStruct execXor5wordsMinor3_2_(ExecContext& ctx,
                                      RetTupleStruct arg0,
                                      BoundLayout<RetTupleLayout> arg1,
                                      BoundLayout<Xor5wordsMinor3_2_Layout> layout2) {
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:228)
  RetTupleStruct x3 = back_RetTuple(ctx, 1, arg1);
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:229)
  RetTupleStruct x4 = back_RetTuple(ctx, 4, arg1);
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:230)
  Val22Array x5 = Val22Array{Val(0),  Val(1),  Val(2),  Val(3),  Val(4),  Val(5),  Val(6),  Val(7),
                             Val(8),  Val(9),  Val(10), Val(11), Val(12), Val(13), Val(14), Val(15),
                             Val(16), Val(17), Val(18), Val(19), Val(20), Val(21)};
  NondetRegStruct22Array x6 =
      map(x5,
          LAYOUT_LOOKUP(layout2, inpA),
          std::function([&](Val22Array::value_type x7,
                            BoundLayout<NondetRegLayout22LayoutArray::value_type> x8) {
            NondetRegStruct x9 = exec_Reg(ctx, x4.arrA[to_size_t(x7)]._super, x8);
            return x9;
          }));
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:231)
  NondetRegStruct22Array x10 =
      map(x5,
          LAYOUT_LOOKUP(layout2, inpB),
          std::function([&](Val22Array::value_type x11,
                            BoundLayout<NondetRegLayout22LayoutArray::value_type> x12) {
            NondetRegStruct x13 = exec_Reg(ctx, x4.arrB[to_size_t(x11)]._super, x12);
            return x13;
          }));
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:232)
  NondetRegStruct22Array x14 =
      map(x5,
          LAYOUT_LOOKUP(layout2, inpC),
          std::function([&](Val22Array::value_type x15,
                            BoundLayout<NondetRegLayout22LayoutArray::value_type> x16) {
            NondetRegStruct x17 = exec_Reg(ctx, x4.arrC[to_size_t(x15)]._super, x16);
            return x17;
          }));
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:233)
  NondetRegStruct15Array x18 =
      map(Val15Array{Val(0),
                     Val(1),
                     Val(2),
                     Val(3),
                     Val(4),
                     Val(5),
                     Val(6),
                     Val(7),
                     Val(8),
                     Val(9),
                     Val(10),
                     Val(11),
                     Val(12),
                     Val(13),
                     Val(14)},
          LAYOUT_LOOKUP(layout2, tmp_1),
          std::function([&](Val15Array::value_type x19,
                            BoundLayout<NondetRegLayout15LayoutArray::value_type> x20) {
            NondetRegStruct x21 = exec_Reg(ctx, x4.arrD[to_size_t(x19)]._super, x20);
            return x21;
          }));
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:234)
  NondetRegStruct x22 = exec_Reg(ctx, x3.arrA[21]._super, LAYOUT_LOOKUP(layout2, _0));
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:235)
  NondetRegStruct x23 = exec_Reg(ctx, x3.arrB[21]._super, LAYOUT_LOOKUP(layout2, _1));
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:236)
  NondetRegStruct x24 = exec_Reg(ctx, x3.arrC[21]._super, LAYOUT_LOOKUP(layout2, _2));
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:238)
  Val22Array x25 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x26 = exec_RetTuple(
      ctx,
      Val22Array{x6[0]._super,  x6[1]._super,  x6[2]._super,  x6[3]._super,  x6[4]._super,
                 x6[5]._super,  x6[6]._super,  x6[7]._super,  x6[8]._super,  x6[9]._super,
                 x6[10]._super, x6[11]._super, x6[12]._super, x6[13]._super, x6[14]._super,
                 x6[15]._super, x6[16]._super, x6[17]._super, x6[18]._super, x6[19]._super,
                 x6[20]._super, x6[21]._super},
      Val22Array{x10[0]._super,  x10[1]._super,  x10[2]._super,  x10[3]._super,  x10[4]._super,
                 x10[5]._super,  x10[6]._super,  x10[7]._super,  x10[8]._super,  x10[9]._super,
                 x10[10]._super, x10[11]._super, x10[12]._super, x10[13]._super, x10[14]._super,
                 x10[15]._super, x10[16]._super, x10[17]._super, x10[18]._super, x10[19]._super,
                 x10[20]._super, x10[21]._super},
      Val22Array{x14[0]._super,  x14[1]._super,  x14[2]._super,  x14[3]._super,  x14[4]._super,
                 x14[5]._super,  x14[6]._super,  x14[7]._super,  x14[8]._super,  x14[9]._super,
                 x14[10]._super, x14[11]._super, x14[12]._super, x14[13]._super, x14[14]._super,
                 x14[15]._super, x14[16]._super, x14[17]._super, x14[18]._super, x14[19]._super,
                 x14[20]._super, x14[21]._super},
      Val24Array{x18[0]._super,  x18[1]._super,  x18[2]._super,  x18[3]._super,  x18[4]._super,
                 x18[5]._super,  x18[6]._super,  x18[7]._super,  x18[8]._super,  x18[9]._super,
                 x18[10]._super, x18[11]._super, x18[12]._super, x18[13]._super, x18[14]._super,
                 x22._super,     x23._super,     x24._super,     Val(0),         Val(0),
                 Val(0),         Val(0),         Val(0),         Val(0)},
      x25,
      x25,
      Val(0),
      Val(3),
      x3.rnd._super,
      x3.blk._super,
      x3.midx._super,
      LAYOUT_LOOKUP(layout2, _super));
  return x26;
}
RetTupleStruct execXor5wordsMajor_2_(ExecContext& ctx,
                                     RetTupleStruct arg0,
                                     BoundLayout<RetTupleLayout> arg1,
                                     BoundLayout<Xor5wordsMajor_2_Layout> layout2) {
  // xor5words_major(zirgen/circuit/keccak/keccak.zir:244)
  BoundLayout<Xor5wordsMajor_2__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // xor5words_major(zirgen/circuit/keccak/keccak.zir:243)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  OneHot_4_Struct x5 = exec_OneHot_4_(ctx, x4.minor._super, LAYOUT_LOOKUP(layout2, minorOnehot));
  NondetRegStruct4Array x6 = x5._super;
  if (to_size_t(x6[0]._super)) {
    // xor5words_major(zirgen/circuit/keccak/keccak.zir:245)
    RetTupleStruct x7 = back_RetTuple(ctx, 1, arg1);
    RetTupleStruct x8 = execXor5wordsMinor0_2_(ctx, x7, LAYOUT_LOOKUP(x3, arm0));
  }
  if (to_size_t(x6[1]._super)) {
    // xor5words_major(zirgen/circuit/keccak/keccak.zir:246)
    RetTupleStruct x9 = execXor5wordsMinor1_2_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm1));
  }
  if (to_size_t(x6[2]._super)) {
    // xor5words_major(zirgen/circuit/keccak/keccak.zir:247)
    RetTupleStruct x10 = execXor5wordsMinor2_2_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm2));
  }
  if (to_size_t(x6[3]._super)) {
    // xor5words_major(zirgen/circuit/keccak/keccak.zir:248)
    RetTupleStruct x11 = execXor5wordsMinor3_2_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm3));
  }
  // xor5words_major(zirgen/circuit/keccak/keccak.zir:244)
  RetTupleStruct x12 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x12;
}
FromBits_22_Struct execXor5wordsResult_3__0_(ExecContext& ctx,
                                             RetTupleStruct arg0,
                                             BoundLayout<Xor5wordsResult_3__0_Layout> layout1) {
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:161)
  Val x2 = arg0.arrA[9]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:165)
  ToBits_22_Struct x3 = exec_ToBits_22_(ctx, x2, LAYOUT_LOOKUP(layout1, unpackA));
  NondetRegStruct22Array x4 = x3._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:166)
  Val x5 = (((x4[0]._super + (x4[1]._super * Val(2))) + (x4[2]._super * Val(4))) +
            (x4[3]._super * Val(8)));
  Val x6 =
      ((((x5 + (x4[4]._super * Val(16))) + (x4[5]._super * Val(32))) + (x4[6]._super * Val(64))) +
       (x4[7]._super * Val(128)));
  Val x7 = ((((x6 + (x4[8]._super * Val(256))) + (x4[9]._super * Val(512))) +
             (x4[10]._super * Val(1024))) +
            (x4[11]._super * Val(2048)));
  Val x8 = ((((x7 + (x4[12]._super * Val(4096))) + (x4[13]._super * Val(8192))) +
             (x4[14]._super * Val(16384))) +
            (x4[15]._super * Val(32768)));
  Val x9 = ((((x8 + (x4[16]._super * Val(65536))) + (x4[17]._super * Val(131072))) +
             (x4[18]._super * Val(262144))) +
            (x4[19]._super * Val(524288)));
  EQZ((((x9 + (x4[20]._super * Val(1048576))) + (x4[21]._super * Val(2097152))) - x2),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:166)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:161)
  NondetRegStruct22Array x10 = arg0.arrB;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:169)
  Val x11 = x10[2]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:171)
  ToBits_22_Struct x12 = exec_ToBits_22_(ctx, x11, LAYOUT_LOOKUP(layout1, unpackB));
  NondetRegStruct22Array x13 = x12._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:172)
  Val x14 = (((x13[0]._super + (x13[1]._super * Val(2))) + (x13[2]._super * Val(4))) +
             (x13[3]._super * Val(8)));
  Val x15 = ((((x14 + (x13[4]._super * Val(16))) + (x13[5]._super * Val(32))) +
              (x13[6]._super * Val(64))) +
             (x13[7]._super * Val(128)));
  Val x16 = ((((x15 + (x13[8]._super * Val(256))) + (x13[9]._super * Val(512))) +
              (x13[10]._super * Val(1024))) +
             (x13[11]._super * Val(2048)));
  Val x17 = ((((x16 + (x13[12]._super * Val(4096))) + (x13[13]._super * Val(8192))) +
              (x13[14]._super * Val(16384))) +
             (x13[15]._super * Val(32768)));
  Val x18 = ((((x17 + (x13[16]._super * Val(65536))) + (x13[17]._super * Val(131072))) +
              (x13[18]._super * Val(262144))) +
             (x13[19]._super * Val(524288)));
  EQZ((((x18 + (x13[20]._super * Val(1048576))) + (x13[21]._super * Val(2097152))) - x11),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:172)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:175)
  Val x19 = x10[17]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:177)
  ToBits_22_Struct x20 = exec_ToBits_22_(ctx, x19, LAYOUT_LOOKUP(layout1, unpackC));
  NondetRegStruct22Array x21 = x20._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:178)
  Val x22 = (((x21[0]._super + (x21[1]._super * Val(2))) + (x21[2]._super * Val(4))) +
             (x21[3]._super * Val(8)));
  Val x23 = ((((x22 + (x21[4]._super * Val(16))) + (x21[5]._super * Val(32))) +
              (x21[6]._super * Val(64))) +
             (x21[7]._super * Val(128)));
  Val x24 = ((((x23 + (x21[8]._super * Val(256))) + (x21[9]._super * Val(512))) +
              (x21[10]._super * Val(1024))) +
             (x21[11]._super * Val(2048)));
  Val x25 = ((((x24 + (x21[12]._super * Val(4096))) + (x21[13]._super * Val(8192))) +
              (x21[14]._super * Val(16384))) +
             (x21[15]._super * Val(32768)));
  Val x26 = ((((x25 + (x21[16]._super * Val(65536))) + (x21[17]._super * Val(131072))) +
              (x21[18]._super * Val(262144))) +
             (x21[19]._super * Val(524288)));
  EQZ((((x26 + (x21[20]._super * Val(1048576))) + (x21[21]._super * Val(2097152))) - x19),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:178)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:161)
  Val x27 = arg0.arrC[10]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:181)
  ToBits_22_Struct x28 = exec_ToBits_22_(ctx, x27, LAYOUT_LOOKUP(layout1, unpackD));
  NondetRegStruct22Array x29 = x28._super;
  Val x30 = x29[0]._super;
  Val x31 = x29[1]._super;
  Val x32 = x29[2]._super;
  Val x33 = x29[3]._super;
  Val x34 = x29[4]._super;
  Val x35 = x29[5]._super;
  Val x36 = x29[6]._super;
  Val x37 = x29[7]._super;
  Val x38 = x29[8]._super;
  Val x39 = x29[9]._super;
  Val x40 = x29[10]._super;
  Val x41 = x29[11]._super;
  Val x42 = x29[12]._super;
  Val x43 = x29[13]._super;
  Val x44 = x29[14]._super;
  Val x45 = x29[15]._super;
  Val x46 = x29[16]._super;
  Val x47 = x29[17]._super;
  Val x48 = x29[18]._super;
  Val x49 = x29[19]._super;
  Val x50 = x29[20]._super;
  Val x51 = x29[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:182)
  Val x52 = ((((((x30 + (x31 * Val(2))) + (x32 * Val(4))) + (x33 * Val(8))) + (x34 * Val(16))) +
              (x35 * Val(32))) +
             (x36 * Val(64)));
  Val x53 =
      ((((((x52 + (x37 * Val(128))) + (x38 * Val(256))) + (x39 * Val(512))) + (x40 * Val(1024))) +
        (x41 * Val(2048))) +
       (x42 * Val(4096)));
  Val x54 = ((((((x53 + (x43 * Val(8192))) + (x44 * Val(16384))) + (x45 * Val(32768))) +
               (x46 * Val(65536))) +
              (x47 * Val(131072))) +
             (x48 * Val(262144)));
  EQZ(((((x54 + (x49 * Val(524288))) + (x50 * Val(1048576))) + (x51 * Val(2097152))) - x27),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:182)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:185)
  Val x55 = arg0.arrD[3]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:187)
  ToBits_22_Struct x56 = exec_ToBits_22_(ctx, x55, LAYOUT_LOOKUP(layout1, unpackE));
  NondetRegStruct22Array x57 = x56._super;
  Val x58 = x57[0]._super;
  Val x59 = x57[1]._super;
  Val x60 = x57[2]._super;
  Val x61 = x57[3]._super;
  Val x62 = x57[4]._super;
  Val x63 = x57[5]._super;
  Val x64 = x57[6]._super;
  Val x65 = x57[7]._super;
  Val x66 = x57[8]._super;
  Val x67 = x57[9]._super;
  Val x68 = x57[10]._super;
  Val x69 = x57[11]._super;
  Val x70 = x57[12]._super;
  Val x71 = x57[13]._super;
  Val x72 = x57[14]._super;
  Val x73 = x57[15]._super;
  Val x74 = x57[16]._super;
  Val x75 = x57[17]._super;
  Val x76 = x57[18]._super;
  Val x77 = x57[19]._super;
  Val x78 = x57[20]._super;
  Val x79 = x57[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:188)
  Val x80 = ((((((x58 + (x59 * Val(2))) + (x60 * Val(4))) + (x61 * Val(8))) + (x62 * Val(16))) +
              (x63 * Val(32))) +
             (x64 * Val(64)));
  Val x81 =
      ((((((x80 + (x65 * Val(128))) + (x66 * Val(256))) + (x67 * Val(512))) + (x68 * Val(1024))) +
        (x69 * Val(2048))) +
       (x70 * Val(4096)));
  Val x82 = ((((((x81 + (x71 * Val(8192))) + (x72 * Val(16384))) + (x73 * Val(32768))) +
               (x74 * Val(65536))) +
              (x75 * Val(131072))) +
             (x76 * Val(262144)));
  EQZ(((((x82 + (x77 * Val(524288))) + (x78 * Val(1048576))) + (x79 * Val(2097152))) - x55),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:188)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  NondetRegStruct22Array x83 =
      map(Val22Array{Val(0),  Val(1),  Val(2),  Val(3),  Val(4),  Val(5),  Val(6),  Val(7),
                     Val(8),  Val(9),  Val(10), Val(11), Val(12), Val(13), Val(14), Val(15),
                     Val(16), Val(17), Val(18), Val(19), Val(20), Val(21)},
          LAYOUT_LOOKUP(layout1, xorAbc),
          std::function([&](Val22Array::value_type x84,
                            BoundLayout<NondetRegLayout22LayoutArray::value_type> x85) {
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:165)
            Val x86 = x4[to_size_t(x84)]._super;
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:171)
            Val x87 = x13[to_size_t(x84)]._super;
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:177)
            Val x88 = x21[to_size_t(x84)]._super;
            // xor3(zirgen/circuit/keccak/keccak.zir:110)
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:191)
            Val x89 = ((x86 * x87) + ((Val(1) - x86) * (Val(1) - x87)));
            NondetRegStruct x90 =
                exec_Reg(ctx, ((x89 * x88) + ((Val(1) - x89) * (Val(1) - x88))), x85);
            return x90;
          }));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x91 = x83[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x92 = ((x91 * x30) + ((Val(1) - x91) * (Val(1) - x30)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x93 = x83[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x94 = ((x93 * x31) + ((Val(1) - x93) * (Val(1) - x31)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x95 = x83[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x96 = ((x95 * x32) + ((Val(1) - x95) * (Val(1) - x32)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x97 = x83[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x98 = ((x97 * x33) + ((Val(1) - x97) * (Val(1) - x33)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x99 = x83[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x100 = ((x99 * x34) + ((Val(1) - x99) * (Val(1) - x34)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x101 = x83[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x102 = ((x101 * x35) + ((Val(1) - x101) * (Val(1) - x35)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x103 = x83[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x104 = ((x103 * x36) + ((Val(1) - x103) * (Val(1) - x36)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x105 = x83[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x106 = ((x105 * x37) + ((Val(1) - x105) * (Val(1) - x37)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x107 = x83[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x108 = ((x107 * x38) + ((Val(1) - x107) * (Val(1) - x38)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x109 = x83[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x110 = ((x109 * x39) + ((Val(1) - x109) * (Val(1) - x39)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x111 = x83[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x112 = ((x111 * x40) + ((Val(1) - x111) * (Val(1) - x40)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x113 = x83[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x114 = ((x113 * x41) + ((Val(1) - x113) * (Val(1) - x41)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x115 = x83[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x116 = ((x115 * x42) + ((Val(1) - x115) * (Val(1) - x42)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x117 = x83[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x118 = ((x117 * x43) + ((Val(1) - x117) * (Val(1) - x43)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x119 = x83[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x120 = ((x119 * x44) + ((Val(1) - x119) * (Val(1) - x44)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x121 = x83[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x122 = ((x121 * x45) + ((Val(1) - x121) * (Val(1) - x45)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x123 = x83[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x124 = ((x123 * x46) + ((Val(1) - x123) * (Val(1) - x46)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x125 = x83[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x126 = ((x125 * x47) + ((Val(1) - x125) * (Val(1) - x47)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x127 = x83[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x128 = ((x127 * x48) + ((Val(1) - x127) * (Val(1) - x48)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x129 = x83[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x130 = ((x129 * x49) + ((Val(1) - x129) * (Val(1) - x49)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x131 = x83[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x132 = ((x131 * x50) + ((Val(1) - x131) * (Val(1) - x50)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x133 = x83[21]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x134 = ((x133 * x51) + ((Val(1) - x133) * (Val(1) - x51)));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:196)
  Val x135 = (((x92 * x58) + ((Val(1) - x92) * (Val(1) - x58))) +
              (((x94 * x59) + ((Val(1) - x94) * (Val(1) - x59))) * Val(2)));
  Val x136 = ((x135 + (((x96 * x60) + ((Val(1) - x96) * (Val(1) - x60))) * Val(4))) +
              (((x98 * x61) + ((Val(1) - x98) * (Val(1) - x61))) * Val(8)));
  Val x137 = ((x136 + (((x100 * x62) + ((Val(1) - x100) * (Val(1) - x62))) * Val(16))) +
              (((x102 * x63) + ((Val(1) - x102) * (Val(1) - x63))) * Val(32)));
  Val x138 = ((x137 + (((x104 * x64) + ((Val(1) - x104) * (Val(1) - x64))) * Val(64))) +
              (((x106 * x65) + ((Val(1) - x106) * (Val(1) - x65))) * Val(128)));
  Val x139 = ((x138 + (((x108 * x66) + ((Val(1) - x108) * (Val(1) - x66))) * Val(256))) +
              (((x110 * x67) + ((Val(1) - x110) * (Val(1) - x67))) * Val(512)));
  Val x140 = ((x139 + (((x112 * x68) + ((Val(1) - x112) * (Val(1) - x68))) * Val(1024))) +
              (((x114 * x69) + ((Val(1) - x114) * (Val(1) - x69))) * Val(2048)));
  Val x141 = ((x140 + (((x116 * x70) + ((Val(1) - x116) * (Val(1) - x70))) * Val(4096))) +
              (((x118 * x71) + ((Val(1) - x118) * (Val(1) - x71))) * Val(8192)));
  Val x142 = ((x141 + (((x120 * x72) + ((Val(1) - x120) * (Val(1) - x72))) * Val(16384))) +
              (((x122 * x73) + ((Val(1) - x122) * (Val(1) - x73))) * Val(32768)));
  Val x143 = ((x142 + (((x124 * x74) + ((Val(1) - x124) * (Val(1) - x74))) * Val(65536))) +
              (((x126 * x75) + ((Val(1) - x126) * (Val(1) - x75))) * Val(131072)));
  Val x144 = ((x143 + (((x128 * x76) + ((Val(1) - x128) * (Val(1) - x76))) * Val(262144))) +
              (((x130 * x77) + ((Val(1) - x130) * (Val(1) - x77))) * Val(524288)));
  Val x145 = ((x144 + (((x132 * x78) + ((Val(1) - x132) * (Val(1) - x78))) * Val(1048576))) +
              (((x134 * x79) + ((Val(1) - x134) * (Val(1) - x79))) * Val(2097152)));
  return FromBits_22_Struct{._super = x145};
}
RetTupleStruct execXor5wordsMinor0_3_(ExecContext& ctx,
                                      RetTupleStruct arg0,
                                      BoundLayout<Xor5wordsMinor0_3_Layout> layout1) {
  // xor5words_minor0(zirgen/circuit/keccak/keccak.zir:200)
  FromBits_22_Struct x2 = execXor5wordsResult_3__0_(ctx, arg0, LAYOUT_LOOKUP(layout1, _0));
  NondetRegStruct x3 = exec_Reg(ctx, x2._super, LAYOUT_LOOKUP(layout1, result));
  // xor5words_minor0(zirgen/circuit/keccak/keccak.zir:202)
  Val22Array x4 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                             Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                             Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x5 =
      exec_RetTuple(ctx,
                    x4,
                    x4,
                    x4,
                    Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),    Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),    Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), x3._super, Val(0)},
                    x4,
                    x4,
                    Val(1),
                    Val(3),
                    arg0.rnd._super,
                    arg0.blk._super,
                    arg0.midx._super,
                    LAYOUT_LOOKUP(layout1, _super));
  return x5;
}
FromBits_21_Struct execXor5wordsResult_3__1_(ExecContext& ctx,
                                             RetTupleStruct arg0,
                                             BoundLayout<Xor5wordsResult_3__1_Layout> layout1) {
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:161)
  Val x2 = arg0.arrA[10]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:165)
  ToBits_21_Struct x3 = exec_ToBits_21_(ctx, x2, LAYOUT_LOOKUP(layout1, unpackA));
  NondetRegStruct21Array x4 = x3._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:166)
  Val x5 = (((x4[0]._super + (x4[1]._super * Val(2))) + (x4[2]._super * Val(4))) +
            (x4[3]._super * Val(8)));
  Val x6 =
      ((((x5 + (x4[4]._super * Val(16))) + (x4[5]._super * Val(32))) + (x4[6]._super * Val(64))) +
       (x4[7]._super * Val(128)));
  Val x7 = ((((x6 + (x4[8]._super * Val(256))) + (x4[9]._super * Val(512))) +
             (x4[10]._super * Val(1024))) +
            (x4[11]._super * Val(2048)));
  Val x8 = ((((x7 + (x4[12]._super * Val(4096))) + (x4[13]._super * Val(8192))) +
             (x4[14]._super * Val(16384))) +
            (x4[15]._super * Val(32768)));
  Val x9 = ((((x8 + (x4[16]._super * Val(65536))) + (x4[17]._super * Val(131072))) +
             (x4[18]._super * Val(262144))) +
            (x4[19]._super * Val(524288)));
  EQZ(((x9 + (x4[20]._super * Val(1048576))) - x2),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:166)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:161)
  NondetRegStruct22Array x10 = arg0.arrB;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:169)
  Val x11 = x10[3]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:171)
  ToBits_21_Struct x12 = exec_ToBits_21_(ctx, x11, LAYOUT_LOOKUP(layout1, unpackB));
  NondetRegStruct21Array x13 = x12._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:172)
  Val x14 = (((x13[0]._super + (x13[1]._super * Val(2))) + (x13[2]._super * Val(4))) +
             (x13[3]._super * Val(8)));
  Val x15 = ((((x14 + (x13[4]._super * Val(16))) + (x13[5]._super * Val(32))) +
              (x13[6]._super * Val(64))) +
             (x13[7]._super * Val(128)));
  Val x16 = ((((x15 + (x13[8]._super * Val(256))) + (x13[9]._super * Val(512))) +
              (x13[10]._super * Val(1024))) +
             (x13[11]._super * Val(2048)));
  Val x17 = ((((x16 + (x13[12]._super * Val(4096))) + (x13[13]._super * Val(8192))) +
              (x13[14]._super * Val(16384))) +
             (x13[15]._super * Val(32768)));
  Val x18 = ((((x17 + (x13[16]._super * Val(65536))) + (x13[17]._super * Val(131072))) +
              (x13[18]._super * Val(262144))) +
             (x13[19]._super * Val(524288)));
  EQZ(((x18 + (x13[20]._super * Val(1048576))) - x11),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:172)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:175)
  Val x19 = x10[18]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:177)
  ToBits_21_Struct x20 = exec_ToBits_21_(ctx, x19, LAYOUT_LOOKUP(layout1, unpackC));
  NondetRegStruct21Array x21 = x20._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:178)
  Val x22 = (((x21[0]._super + (x21[1]._super * Val(2))) + (x21[2]._super * Val(4))) +
             (x21[3]._super * Val(8)));
  Val x23 = ((((x22 + (x21[4]._super * Val(16))) + (x21[5]._super * Val(32))) +
              (x21[6]._super * Val(64))) +
             (x21[7]._super * Val(128)));
  Val x24 = ((((x23 + (x21[8]._super * Val(256))) + (x21[9]._super * Val(512))) +
              (x21[10]._super * Val(1024))) +
             (x21[11]._super * Val(2048)));
  Val x25 = ((((x24 + (x21[12]._super * Val(4096))) + (x21[13]._super * Val(8192))) +
              (x21[14]._super * Val(16384))) +
             (x21[15]._super * Val(32768)));
  Val x26 = ((((x25 + (x21[16]._super * Val(65536))) + (x21[17]._super * Val(131072))) +
              (x21[18]._super * Val(262144))) +
             (x21[19]._super * Val(524288)));
  EQZ(((x26 + (x21[20]._super * Val(1048576))) - x19),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:178)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:161)
  Val x27 = arg0.arrC[11]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:181)
  ToBits_21_Struct x28 = exec_ToBits_21_(ctx, x27, LAYOUT_LOOKUP(layout1, unpackD));
  NondetRegStruct21Array x29 = x28._super;
  Val x30 = x29[0]._super;
  Val x31 = x29[1]._super;
  Val x32 = x29[2]._super;
  Val x33 = x29[3]._super;
  Val x34 = x29[4]._super;
  Val x35 = x29[5]._super;
  Val x36 = x29[6]._super;
  Val x37 = x29[7]._super;
  Val x38 = x29[8]._super;
  Val x39 = x29[9]._super;
  Val x40 = x29[10]._super;
  Val x41 = x29[11]._super;
  Val x42 = x29[12]._super;
  Val x43 = x29[13]._super;
  Val x44 = x29[14]._super;
  Val x45 = x29[15]._super;
  Val x46 = x29[16]._super;
  Val x47 = x29[17]._super;
  Val x48 = x29[18]._super;
  Val x49 = x29[19]._super;
  Val x50 = x29[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:182)
  Val x51 = ((((((x30 + (x31 * Val(2))) + (x32 * Val(4))) + (x33 * Val(8))) + (x34 * Val(16))) +
              (x35 * Val(32))) +
             (x36 * Val(64)));
  Val x52 =
      ((((((x51 + (x37 * Val(128))) + (x38 * Val(256))) + (x39 * Val(512))) + (x40 * Val(1024))) +
        (x41 * Val(2048))) +
       (x42 * Val(4096)));
  Val x53 = ((((((x52 + (x43 * Val(8192))) + (x44 * Val(16384))) + (x45 * Val(32768))) +
               (x46 * Val(65536))) +
              (x47 * Val(131072))) +
             (x48 * Val(262144)));
  EQZ((((x53 + (x49 * Val(524288))) + (x50 * Val(1048576))) - x27),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:182)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:185)
  Val x54 = arg0.arrD[4]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:187)
  ToBits_21_Struct x55 = exec_ToBits_21_(ctx, x54, LAYOUT_LOOKUP(layout1, unpackE));
  NondetRegStruct21Array x56 = x55._super;
  Val x57 = x56[0]._super;
  Val x58 = x56[1]._super;
  Val x59 = x56[2]._super;
  Val x60 = x56[3]._super;
  Val x61 = x56[4]._super;
  Val x62 = x56[5]._super;
  Val x63 = x56[6]._super;
  Val x64 = x56[7]._super;
  Val x65 = x56[8]._super;
  Val x66 = x56[9]._super;
  Val x67 = x56[10]._super;
  Val x68 = x56[11]._super;
  Val x69 = x56[12]._super;
  Val x70 = x56[13]._super;
  Val x71 = x56[14]._super;
  Val x72 = x56[15]._super;
  Val x73 = x56[16]._super;
  Val x74 = x56[17]._super;
  Val x75 = x56[18]._super;
  Val x76 = x56[19]._super;
  Val x77 = x56[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:188)
  Val x78 = ((((((x57 + (x58 * Val(2))) + (x59 * Val(4))) + (x60 * Val(8))) + (x61 * Val(16))) +
              (x62 * Val(32))) +
             (x63 * Val(64)));
  Val x79 =
      ((((((x78 + (x64 * Val(128))) + (x65 * Val(256))) + (x66 * Val(512))) + (x67 * Val(1024))) +
        (x68 * Val(2048))) +
       (x69 * Val(4096)));
  Val x80 = ((((((x79 + (x70 * Val(8192))) + (x71 * Val(16384))) + (x72 * Val(32768))) +
               (x73 * Val(65536))) +
              (x74 * Val(131072))) +
             (x75 * Val(262144)));
  EQZ((((x80 + (x76 * Val(524288))) + (x77 * Val(1048576))) - x54),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:188)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  NondetRegStruct21Array x81 =
      map(Val21Array{Val(0),  Val(1),  Val(2),  Val(3),  Val(4),  Val(5),  Val(6),
                     Val(7),  Val(8),  Val(9),  Val(10), Val(11), Val(12), Val(13),
                     Val(14), Val(15), Val(16), Val(17), Val(18), Val(19), Val(20)},
          LAYOUT_LOOKUP(layout1, xorAbc),
          std::function([&](Val21Array::value_type x82,
                            BoundLayout<NondetRegLayout21LayoutArray::value_type> x83) {
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:165)
            Val x84 = x4[to_size_t(x82)]._super;
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:171)
            Val x85 = x13[to_size_t(x82)]._super;
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:177)
            Val x86 = x21[to_size_t(x82)]._super;
            // xor3(zirgen/circuit/keccak/keccak.zir:110)
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:191)
            Val x87 = ((x84 * x85) + ((Val(1) - x84) * (Val(1) - x85)));
            NondetRegStruct x88 =
                exec_Reg(ctx, ((x87 * x86) + ((Val(1) - x87) * (Val(1) - x86))), x83);
            return x88;
          }));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x89 = x81[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x90 = ((x89 * x30) + ((Val(1) - x89) * (Val(1) - x30)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x91 = x81[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x92 = ((x91 * x31) + ((Val(1) - x91) * (Val(1) - x31)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x93 = x81[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x94 = ((x93 * x32) + ((Val(1) - x93) * (Val(1) - x32)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x95 = x81[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x96 = ((x95 * x33) + ((Val(1) - x95) * (Val(1) - x33)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x97 = x81[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x98 = ((x97 * x34) + ((Val(1) - x97) * (Val(1) - x34)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x99 = x81[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x100 = ((x99 * x35) + ((Val(1) - x99) * (Val(1) - x35)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x101 = x81[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x102 = ((x101 * x36) + ((Val(1) - x101) * (Val(1) - x36)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x103 = x81[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x104 = ((x103 * x37) + ((Val(1) - x103) * (Val(1) - x37)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x105 = x81[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x106 = ((x105 * x38) + ((Val(1) - x105) * (Val(1) - x38)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x107 = x81[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x108 = ((x107 * x39) + ((Val(1) - x107) * (Val(1) - x39)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x109 = x81[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x110 = ((x109 * x40) + ((Val(1) - x109) * (Val(1) - x40)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x111 = x81[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x112 = ((x111 * x41) + ((Val(1) - x111) * (Val(1) - x41)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x113 = x81[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x114 = ((x113 * x42) + ((Val(1) - x113) * (Val(1) - x42)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x115 = x81[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x116 = ((x115 * x43) + ((Val(1) - x115) * (Val(1) - x43)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x117 = x81[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x118 = ((x117 * x44) + ((Val(1) - x117) * (Val(1) - x44)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x119 = x81[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x120 = ((x119 * x45) + ((Val(1) - x119) * (Val(1) - x45)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x121 = x81[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x122 = ((x121 * x46) + ((Val(1) - x121) * (Val(1) - x46)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x123 = x81[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x124 = ((x123 * x47) + ((Val(1) - x123) * (Val(1) - x47)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x125 = x81[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x126 = ((x125 * x48) + ((Val(1) - x125) * (Val(1) - x48)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x127 = x81[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x128 = ((x127 * x49) + ((Val(1) - x127) * (Val(1) - x49)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x129 = x81[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x130 = ((x129 * x50) + ((Val(1) - x129) * (Val(1) - x50)));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:196)
  Val x131 = (((x90 * x57) + ((Val(1) - x90) * (Val(1) - x57))) +
              (((x92 * x58) + ((Val(1) - x92) * (Val(1) - x58))) * Val(2)));
  Val x132 = ((x131 + (((x94 * x59) + ((Val(1) - x94) * (Val(1) - x59))) * Val(4))) +
              (((x96 * x60) + ((Val(1) - x96) * (Val(1) - x60))) * Val(8)));
  Val x133 = ((x132 + (((x98 * x61) + ((Val(1) - x98) * (Val(1) - x61))) * Val(16))) +
              (((x100 * x62) + ((Val(1) - x100) * (Val(1) - x62))) * Val(32)));
  Val x134 = ((x133 + (((x102 * x63) + ((Val(1) - x102) * (Val(1) - x63))) * Val(64))) +
              (((x104 * x64) + ((Val(1) - x104) * (Val(1) - x64))) * Val(128)));
  Val x135 = ((x134 + (((x106 * x65) + ((Val(1) - x106) * (Val(1) - x65))) * Val(256))) +
              (((x108 * x66) + ((Val(1) - x108) * (Val(1) - x66))) * Val(512)));
  Val x136 = ((x135 + (((x110 * x67) + ((Val(1) - x110) * (Val(1) - x67))) * Val(1024))) +
              (((x112 * x68) + ((Val(1) - x112) * (Val(1) - x68))) * Val(2048)));
  Val x137 = ((x136 + (((x114 * x69) + ((Val(1) - x114) * (Val(1) - x69))) * Val(4096))) +
              (((x116 * x70) + ((Val(1) - x116) * (Val(1) - x70))) * Val(8192)));
  Val x138 = ((x137 + (((x118 * x71) + ((Val(1) - x118) * (Val(1) - x71))) * Val(16384))) +
              (((x120 * x72) + ((Val(1) - x120) * (Val(1) - x72))) * Val(32768)));
  Val x139 = ((x138 + (((x122 * x73) + ((Val(1) - x122) * (Val(1) - x73))) * Val(65536))) +
              (((x124 * x74) + ((Val(1) - x124) * (Val(1) - x74))) * Val(131072)));
  Val x140 = ((x139 + (((x126 * x75) + ((Val(1) - x126) * (Val(1) - x75))) * Val(262144))) +
              (((x128 * x76) + ((Val(1) - x128) * (Val(1) - x76))) * Val(524288)));
  return FromBits_21_Struct{
      ._super = (x140 + (((x130 * x77) + ((Val(1) - x130) * (Val(1) - x77))) * Val(1048576)))};
}
RetTupleStruct execXor5wordsMinor1_3_(ExecContext& ctx,
                                      RetTupleStruct arg0,
                                      BoundLayout<RetTupleLayout> arg1,
                                      BoundLayout<Xor5wordsMinor1_3_Layout> layout2) {
  // xor5words_minor1(zirgen/circuit/keccak/keccak.zir:207)
  RetTupleStruct x3 = back_RetTuple(ctx, 1, arg1);
  // xor5words_minor1(zirgen/circuit/keccak/keccak.zir:208)
  RetTupleStruct x4 = back_RetTuple(ctx, 2, arg1);
  // xor5words_minor1(zirgen/circuit/keccak/keccak.zir:209)
  FromBits_21_Struct x5 = execXor5wordsResult_3__1_(ctx, x4, LAYOUT_LOOKUP(layout2, _0));
  NondetRegStruct x6 = exec_Reg(ctx, x5._super, LAYOUT_LOOKUP(layout2, result));
  // xor5words_minor1(zirgen/circuit/keccak/keccak.zir:212)
  Val22Array x7 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                             Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                             Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x8 =
      exec_RetTuple(ctx,
                    Val22Array{Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), x3.arrD[22]._super},
                    Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),   Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),   Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), x6._super},
                    x7,
                    Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                    x7,
                    x7,
                    Val(2),
                    Val(3),
                    x3.rnd._super,
                    x3.blk._super,
                    x3.midx._super,
                    LAYOUT_LOOKUP(layout2, _super));
  return x8;
}
FromBits_21_Struct execXor5wordsResult_3__2_(ExecContext& ctx,
                                             RetTupleStruct arg0,
                                             BoundLayout<Xor5wordsResult_3__2_Layout> layout1) {
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:161)
  Val x2 = arg0.arrA[11]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:165)
  ToBits_21_Struct x3 = exec_ToBits_21_(ctx, x2, LAYOUT_LOOKUP(layout1, unpackA));
  NondetRegStruct21Array x4 = x3._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:166)
  Val x5 = (((x4[0]._super + (x4[1]._super * Val(2))) + (x4[2]._super * Val(4))) +
            (x4[3]._super * Val(8)));
  Val x6 =
      ((((x5 + (x4[4]._super * Val(16))) + (x4[5]._super * Val(32))) + (x4[6]._super * Val(64))) +
       (x4[7]._super * Val(128)));
  Val x7 = ((((x6 + (x4[8]._super * Val(256))) + (x4[9]._super * Val(512))) +
             (x4[10]._super * Val(1024))) +
            (x4[11]._super * Val(2048)));
  Val x8 = ((((x7 + (x4[12]._super * Val(4096))) + (x4[13]._super * Val(8192))) +
             (x4[14]._super * Val(16384))) +
            (x4[15]._super * Val(32768)));
  Val x9 = ((((x8 + (x4[16]._super * Val(65536))) + (x4[17]._super * Val(131072))) +
             (x4[18]._super * Val(262144))) +
            (x4[19]._super * Val(524288)));
  EQZ(((x9 + (x4[20]._super * Val(1048576))) - x2),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:166)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:161)
  NondetRegStruct22Array x10 = arg0.arrB;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:169)
  Val x11 = x10[4]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:171)
  ToBits_21_Struct x12 = exec_ToBits_21_(ctx, x11, LAYOUT_LOOKUP(layout1, unpackB));
  NondetRegStruct21Array x13 = x12._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:172)
  Val x14 = (((x13[0]._super + (x13[1]._super * Val(2))) + (x13[2]._super * Val(4))) +
             (x13[3]._super * Val(8)));
  Val x15 = ((((x14 + (x13[4]._super * Val(16))) + (x13[5]._super * Val(32))) +
              (x13[6]._super * Val(64))) +
             (x13[7]._super * Val(128)));
  Val x16 = ((((x15 + (x13[8]._super * Val(256))) + (x13[9]._super * Val(512))) +
              (x13[10]._super * Val(1024))) +
             (x13[11]._super * Val(2048)));
  Val x17 = ((((x16 + (x13[12]._super * Val(4096))) + (x13[13]._super * Val(8192))) +
              (x13[14]._super * Val(16384))) +
             (x13[15]._super * Val(32768)));
  Val x18 = ((((x17 + (x13[16]._super * Val(65536))) + (x13[17]._super * Val(131072))) +
              (x13[18]._super * Val(262144))) +
             (x13[19]._super * Val(524288)));
  EQZ(((x18 + (x13[20]._super * Val(1048576))) - x11),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:172)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:175)
  Val x19 = x10[19]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:177)
  ToBits_21_Struct x20 = exec_ToBits_21_(ctx, x19, LAYOUT_LOOKUP(layout1, unpackC));
  NondetRegStruct21Array x21 = x20._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:178)
  Val x22 = (((x21[0]._super + (x21[1]._super * Val(2))) + (x21[2]._super * Val(4))) +
             (x21[3]._super * Val(8)));
  Val x23 = ((((x22 + (x21[4]._super * Val(16))) + (x21[5]._super * Val(32))) +
              (x21[6]._super * Val(64))) +
             (x21[7]._super * Val(128)));
  Val x24 = ((((x23 + (x21[8]._super * Val(256))) + (x21[9]._super * Val(512))) +
              (x21[10]._super * Val(1024))) +
             (x21[11]._super * Val(2048)));
  Val x25 = ((((x24 + (x21[12]._super * Val(4096))) + (x21[13]._super * Val(8192))) +
              (x21[14]._super * Val(16384))) +
             (x21[15]._super * Val(32768)));
  Val x26 = ((((x25 + (x21[16]._super * Val(65536))) + (x21[17]._super * Val(131072))) +
              (x21[18]._super * Val(262144))) +
             (x21[19]._super * Val(524288)));
  EQZ(((x26 + (x21[20]._super * Val(1048576))) - x19),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:178)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:161)
  Val x27 = arg0.arrC[12]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:181)
  ToBits_21_Struct x28 = exec_ToBits_21_(ctx, x27, LAYOUT_LOOKUP(layout1, unpackD));
  NondetRegStruct21Array x29 = x28._super;
  Val x30 = x29[0]._super;
  Val x31 = x29[1]._super;
  Val x32 = x29[2]._super;
  Val x33 = x29[3]._super;
  Val x34 = x29[4]._super;
  Val x35 = x29[5]._super;
  Val x36 = x29[6]._super;
  Val x37 = x29[7]._super;
  Val x38 = x29[8]._super;
  Val x39 = x29[9]._super;
  Val x40 = x29[10]._super;
  Val x41 = x29[11]._super;
  Val x42 = x29[12]._super;
  Val x43 = x29[13]._super;
  Val x44 = x29[14]._super;
  Val x45 = x29[15]._super;
  Val x46 = x29[16]._super;
  Val x47 = x29[17]._super;
  Val x48 = x29[18]._super;
  Val x49 = x29[19]._super;
  Val x50 = x29[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:182)
  Val x51 = ((((((x30 + (x31 * Val(2))) + (x32 * Val(4))) + (x33 * Val(8))) + (x34 * Val(16))) +
              (x35 * Val(32))) +
             (x36 * Val(64)));
  Val x52 =
      ((((((x51 + (x37 * Val(128))) + (x38 * Val(256))) + (x39 * Val(512))) + (x40 * Val(1024))) +
        (x41 * Val(2048))) +
       (x42 * Val(4096)));
  Val x53 = ((((((x52 + (x43 * Val(8192))) + (x44 * Val(16384))) + (x45 * Val(32768))) +
               (x46 * Val(65536))) +
              (x47 * Val(131072))) +
             (x48 * Val(262144)));
  EQZ((((x53 + (x49 * Val(524288))) + (x50 * Val(1048576))) - x27),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:182)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:185)
  Val x54 = arg0.arrD[5]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:187)
  ToBits_21_Struct x55 = exec_ToBits_21_(ctx, x54, LAYOUT_LOOKUP(layout1, unpackE));
  NondetRegStruct21Array x56 = x55._super;
  Val x57 = x56[0]._super;
  Val x58 = x56[1]._super;
  Val x59 = x56[2]._super;
  Val x60 = x56[3]._super;
  Val x61 = x56[4]._super;
  Val x62 = x56[5]._super;
  Val x63 = x56[6]._super;
  Val x64 = x56[7]._super;
  Val x65 = x56[8]._super;
  Val x66 = x56[9]._super;
  Val x67 = x56[10]._super;
  Val x68 = x56[11]._super;
  Val x69 = x56[12]._super;
  Val x70 = x56[13]._super;
  Val x71 = x56[14]._super;
  Val x72 = x56[15]._super;
  Val x73 = x56[16]._super;
  Val x74 = x56[17]._super;
  Val x75 = x56[18]._super;
  Val x76 = x56[19]._super;
  Val x77 = x56[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:188)
  Val x78 = ((((((x57 + (x58 * Val(2))) + (x59 * Val(4))) + (x60 * Val(8))) + (x61 * Val(16))) +
              (x62 * Val(32))) +
             (x63 * Val(64)));
  Val x79 =
      ((((((x78 + (x64 * Val(128))) + (x65 * Val(256))) + (x66 * Val(512))) + (x67 * Val(1024))) +
        (x68 * Val(2048))) +
       (x69 * Val(4096)));
  Val x80 = ((((((x79 + (x70 * Val(8192))) + (x71 * Val(16384))) + (x72 * Val(32768))) +
               (x73 * Val(65536))) +
              (x74 * Val(131072))) +
             (x75 * Val(262144)));
  EQZ((((x80 + (x76 * Val(524288))) + (x77 * Val(1048576))) - x54),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:188)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  NondetRegStruct21Array x81 =
      map(Val21Array{Val(0),  Val(1),  Val(2),  Val(3),  Val(4),  Val(5),  Val(6),
                     Val(7),  Val(8),  Val(9),  Val(10), Val(11), Val(12), Val(13),
                     Val(14), Val(15), Val(16), Val(17), Val(18), Val(19), Val(20)},
          LAYOUT_LOOKUP(layout1, xorAbc),
          std::function([&](Val21Array::value_type x82,
                            BoundLayout<NondetRegLayout21LayoutArray::value_type> x83) {
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:165)
            Val x84 = x4[to_size_t(x82)]._super;
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:171)
            Val x85 = x13[to_size_t(x82)]._super;
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:177)
            Val x86 = x21[to_size_t(x82)]._super;
            // xor3(zirgen/circuit/keccak/keccak.zir:110)
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:191)
            Val x87 = ((x84 * x85) + ((Val(1) - x84) * (Val(1) - x85)));
            NondetRegStruct x88 =
                exec_Reg(ctx, ((x87 * x86) + ((Val(1) - x87) * (Val(1) - x86))), x83);
            return x88;
          }));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x89 = x81[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x90 = ((x89 * x30) + ((Val(1) - x89) * (Val(1) - x30)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x91 = x81[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x92 = ((x91 * x31) + ((Val(1) - x91) * (Val(1) - x31)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x93 = x81[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x94 = ((x93 * x32) + ((Val(1) - x93) * (Val(1) - x32)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x95 = x81[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x96 = ((x95 * x33) + ((Val(1) - x95) * (Val(1) - x33)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x97 = x81[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x98 = ((x97 * x34) + ((Val(1) - x97) * (Val(1) - x34)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x99 = x81[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x100 = ((x99 * x35) + ((Val(1) - x99) * (Val(1) - x35)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x101 = x81[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x102 = ((x101 * x36) + ((Val(1) - x101) * (Val(1) - x36)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x103 = x81[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x104 = ((x103 * x37) + ((Val(1) - x103) * (Val(1) - x37)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x105 = x81[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x106 = ((x105 * x38) + ((Val(1) - x105) * (Val(1) - x38)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x107 = x81[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x108 = ((x107 * x39) + ((Val(1) - x107) * (Val(1) - x39)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x109 = x81[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x110 = ((x109 * x40) + ((Val(1) - x109) * (Val(1) - x40)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x111 = x81[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x112 = ((x111 * x41) + ((Val(1) - x111) * (Val(1) - x41)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x113 = x81[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x114 = ((x113 * x42) + ((Val(1) - x113) * (Val(1) - x42)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x115 = x81[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x116 = ((x115 * x43) + ((Val(1) - x115) * (Val(1) - x43)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x117 = x81[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x118 = ((x117 * x44) + ((Val(1) - x117) * (Val(1) - x44)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x119 = x81[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x120 = ((x119 * x45) + ((Val(1) - x119) * (Val(1) - x45)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x121 = x81[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x122 = ((x121 * x46) + ((Val(1) - x121) * (Val(1) - x46)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x123 = x81[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x124 = ((x123 * x47) + ((Val(1) - x123) * (Val(1) - x47)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x125 = x81[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x126 = ((x125 * x48) + ((Val(1) - x125) * (Val(1) - x48)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x127 = x81[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x128 = ((x127 * x49) + ((Val(1) - x127) * (Val(1) - x49)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x129 = x81[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x130 = ((x129 * x50) + ((Val(1) - x129) * (Val(1) - x50)));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:196)
  Val x131 = (((x90 * x57) + ((Val(1) - x90) * (Val(1) - x57))) +
              (((x92 * x58) + ((Val(1) - x92) * (Val(1) - x58))) * Val(2)));
  Val x132 = ((x131 + (((x94 * x59) + ((Val(1) - x94) * (Val(1) - x59))) * Val(4))) +
              (((x96 * x60) + ((Val(1) - x96) * (Val(1) - x60))) * Val(8)));
  Val x133 = ((x132 + (((x98 * x61) + ((Val(1) - x98) * (Val(1) - x61))) * Val(16))) +
              (((x100 * x62) + ((Val(1) - x100) * (Val(1) - x62))) * Val(32)));
  Val x134 = ((x133 + (((x102 * x63) + ((Val(1) - x102) * (Val(1) - x63))) * Val(64))) +
              (((x104 * x64) + ((Val(1) - x104) * (Val(1) - x64))) * Val(128)));
  Val x135 = ((x134 + (((x106 * x65) + ((Val(1) - x106) * (Val(1) - x65))) * Val(256))) +
              (((x108 * x66) + ((Val(1) - x108) * (Val(1) - x66))) * Val(512)));
  Val x136 = ((x135 + (((x110 * x67) + ((Val(1) - x110) * (Val(1) - x67))) * Val(1024))) +
              (((x112 * x68) + ((Val(1) - x112) * (Val(1) - x68))) * Val(2048)));
  Val x137 = ((x136 + (((x114 * x69) + ((Val(1) - x114) * (Val(1) - x69))) * Val(4096))) +
              (((x116 * x70) + ((Val(1) - x116) * (Val(1) - x70))) * Val(8192)));
  Val x138 = ((x137 + (((x118 * x71) + ((Val(1) - x118) * (Val(1) - x71))) * Val(16384))) +
              (((x120 * x72) + ((Val(1) - x120) * (Val(1) - x72))) * Val(32768)));
  Val x139 = ((x138 + (((x122 * x73) + ((Val(1) - x122) * (Val(1) - x73))) * Val(65536))) +
              (((x124 * x74) + ((Val(1) - x124) * (Val(1) - x74))) * Val(131072)));
  Val x140 = ((x139 + (((x126 * x75) + ((Val(1) - x126) * (Val(1) - x75))) * Val(262144))) +
              (((x128 * x76) + ((Val(1) - x128) * (Val(1) - x76))) * Val(524288)));
  return FromBits_21_Struct{
      ._super = (x140 + (((x130 * x77) + ((Val(1) - x130) * (Val(1) - x77))) * Val(1048576)))};
}
RetTupleStruct execXor5wordsMinor2_3_(ExecContext& ctx,
                                      RetTupleStruct arg0,
                                      BoundLayout<RetTupleLayout> arg1,
                                      BoundLayout<Xor5wordsMinor2_3_Layout> layout2) {
  // xor5words_minor2(zirgen/circuit/keccak/keccak.zir:217)
  RetTupleStruct x3 = back_RetTuple(ctx, 1, arg1);
  // xor5words_minor2(zirgen/circuit/keccak/keccak.zir:218)
  RetTupleStruct x4 = back_RetTuple(ctx, 3, arg1);
  // xor5words_minor2(zirgen/circuit/keccak/keccak.zir:219)
  FromBits_21_Struct x5 = execXor5wordsResult_3__2_(ctx, x4, LAYOUT_LOOKUP(layout2, _0));
  NondetRegStruct x6 = exec_Reg(ctx, x5._super, LAYOUT_LOOKUP(layout2, result));
  // xor5words_minor2(zirgen/circuit/keccak/keccak.zir:223)
  Val22Array x7 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                             Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                             Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x8 =
      exec_RetTuple(ctx,
                    Val22Array{Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), x3.arrA[21]._super},
                    Val22Array{Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), x3.arrB[21]._super},
                    Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),   Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),   Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), x6._super},
                    Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                    x7,
                    x7,
                    Val(3),
                    Val(3),
                    x3.rnd._super,
                    x3.blk._super,
                    x3.midx._super,
                    LAYOUT_LOOKUP(layout2, _super));
  return x8;
}
RetTupleStruct execXor5wordsMinor3_3_(ExecContext& ctx,
                                      RetTupleStruct arg0,
                                      BoundLayout<RetTupleLayout> arg1,
                                      BoundLayout<Xor5wordsMinor3_3_Layout> layout2) {
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:228)
  RetTupleStruct x3 = back_RetTuple(ctx, 1, arg1);
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:229)
  RetTupleStruct x4 = back_RetTuple(ctx, 4, arg1);
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:230)
  Val22Array x5 = Val22Array{Val(0),  Val(1),  Val(2),  Val(3),  Val(4),  Val(5),  Val(6),  Val(7),
                             Val(8),  Val(9),  Val(10), Val(11), Val(12), Val(13), Val(14), Val(15),
                             Val(16), Val(17), Val(18), Val(19), Val(20), Val(21)};
  NondetRegStruct22Array x6 =
      map(x5,
          LAYOUT_LOOKUP(layout2, inpA),
          std::function([&](Val22Array::value_type x7,
                            BoundLayout<NondetRegLayout22LayoutArray::value_type> x8) {
            NondetRegStruct x9 = exec_Reg(ctx, x4.arrA[to_size_t(x7)]._super, x8);
            return x9;
          }));
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:231)
  NondetRegStruct22Array x10 =
      map(x5,
          LAYOUT_LOOKUP(layout2, inpB),
          std::function([&](Val22Array::value_type x11,
                            BoundLayout<NondetRegLayout22LayoutArray::value_type> x12) {
            NondetRegStruct x13 = exec_Reg(ctx, x4.arrB[to_size_t(x11)]._super, x12);
            return x13;
          }));
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:232)
  NondetRegStruct22Array x14 =
      map(x5,
          LAYOUT_LOOKUP(layout2, inpC),
          std::function([&](Val22Array::value_type x15,
                            BoundLayout<NondetRegLayout22LayoutArray::value_type> x16) {
            NondetRegStruct x17 = exec_Reg(ctx, x4.arrC[to_size_t(x15)]._super, x16);
            return x17;
          }));
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:233)
  NondetRegStruct18Array x18 =
      map(Val18Array{Val(0),
                     Val(1),
                     Val(2),
                     Val(3),
                     Val(4),
                     Val(5),
                     Val(6),
                     Val(7),
                     Val(8),
                     Val(9),
                     Val(10),
                     Val(11),
                     Val(12),
                     Val(13),
                     Val(14),
                     Val(15),
                     Val(16),
                     Val(17)},
          LAYOUT_LOOKUP(layout2, tmp_1),
          std::function([&](Val18Array::value_type x19,
                            BoundLayout<NondetRegLayout18LayoutArray::value_type> x20) {
            NondetRegStruct x21 = exec_Reg(ctx, x4.arrD[to_size_t(x19)]._super, x20);
            return x21;
          }));
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:234)
  NondetRegStruct x22 = exec_Reg(ctx, x3.arrA[21]._super, LAYOUT_LOOKUP(layout2, _0));
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:235)
  NondetRegStruct x23 = exec_Reg(ctx, x3.arrB[21]._super, LAYOUT_LOOKUP(layout2, _1));
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:236)
  NondetRegStruct x24 = exec_Reg(ctx, x3.arrC[21]._super, LAYOUT_LOOKUP(layout2, _2));
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:238)
  Val22Array x25 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x26 = exec_RetTuple(
      ctx,
      Val22Array{x6[0]._super,  x6[1]._super,  x6[2]._super,  x6[3]._super,  x6[4]._super,
                 x6[5]._super,  x6[6]._super,  x6[7]._super,  x6[8]._super,  x6[9]._super,
                 x6[10]._super, x6[11]._super, x6[12]._super, x6[13]._super, x6[14]._super,
                 x6[15]._super, x6[16]._super, x6[17]._super, x6[18]._super, x6[19]._super,
                 x6[20]._super, x6[21]._super},
      Val22Array{x10[0]._super,  x10[1]._super,  x10[2]._super,  x10[3]._super,  x10[4]._super,
                 x10[5]._super,  x10[6]._super,  x10[7]._super,  x10[8]._super,  x10[9]._super,
                 x10[10]._super, x10[11]._super, x10[12]._super, x10[13]._super, x10[14]._super,
                 x10[15]._super, x10[16]._super, x10[17]._super, x10[18]._super, x10[19]._super,
                 x10[20]._super, x10[21]._super},
      Val22Array{x14[0]._super,  x14[1]._super,  x14[2]._super,  x14[3]._super,  x14[4]._super,
                 x14[5]._super,  x14[6]._super,  x14[7]._super,  x14[8]._super,  x14[9]._super,
                 x14[10]._super, x14[11]._super, x14[12]._super, x14[13]._super, x14[14]._super,
                 x14[15]._super, x14[16]._super, x14[17]._super, x14[18]._super, x14[19]._super,
                 x14[20]._super, x14[21]._super},
      Val24Array{x18[0]._super,  x18[1]._super,  x18[2]._super,  x18[3]._super,  x18[4]._super,
                 x18[5]._super,  x18[6]._super,  x18[7]._super,  x18[8]._super,  x18[9]._super,
                 x18[10]._super, x18[11]._super, x18[12]._super, x18[13]._super, x18[14]._super,
                 x18[15]._super, x18[16]._super, x18[17]._super, x22._super,     x23._super,
                 x24._super,     Val(0),         Val(0),         Val(0)},
      x25,
      x25,
      Val(0),
      Val(4),
      x3.rnd._super,
      x3.blk._super,
      x3.midx._super,
      LAYOUT_LOOKUP(layout2, _super));
  return x26;
}
RetTupleStruct execXor5wordsMajor_3_(ExecContext& ctx,
                                     RetTupleStruct arg0,
                                     BoundLayout<RetTupleLayout> arg1,
                                     BoundLayout<Xor5wordsMajor_3_Layout> layout2) {
  // xor5words_major(zirgen/circuit/keccak/keccak.zir:244)
  BoundLayout<Xor5wordsMajor_3__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // xor5words_major(zirgen/circuit/keccak/keccak.zir:243)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  OneHot_4_Struct x5 = exec_OneHot_4_(ctx, x4.minor._super, LAYOUT_LOOKUP(layout2, minorOnehot));
  NondetRegStruct4Array x6 = x5._super;
  if (to_size_t(x6[0]._super)) {
    // xor5words_major(zirgen/circuit/keccak/keccak.zir:245)
    RetTupleStruct x7 = back_RetTuple(ctx, 1, arg1);
    RetTupleStruct x8 = execXor5wordsMinor0_3_(ctx, x7, LAYOUT_LOOKUP(x3, arm0));
  }
  if (to_size_t(x6[1]._super)) {
    // xor5words_major(zirgen/circuit/keccak/keccak.zir:246)
    RetTupleStruct x9 = execXor5wordsMinor1_3_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm1));
  }
  if (to_size_t(x6[2]._super)) {
    // xor5words_major(zirgen/circuit/keccak/keccak.zir:247)
    RetTupleStruct x10 = execXor5wordsMinor2_3_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm2));
  }
  if (to_size_t(x6[3]._super)) {
    // xor5words_major(zirgen/circuit/keccak/keccak.zir:248)
    RetTupleStruct x11 = execXor5wordsMinor3_3_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm3));
  }
  // xor5words_major(zirgen/circuit/keccak/keccak.zir:244)
  RetTupleStruct x12 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x12;
}
FromBits_22_Struct execXor5wordsResult_4__0_(ExecContext& ctx,
                                             RetTupleStruct arg0,
                                             BoundLayout<Xor5wordsResult_4__0_Layout> layout1) {
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:161)
  Val x2 = arg0.arrA[12]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:165)
  ToBits_22_Struct x3 = exec_ToBits_22_(ctx, x2, LAYOUT_LOOKUP(layout1, unpackA));
  NondetRegStruct22Array x4 = x3._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:166)
  Val x5 = (((x4[0]._super + (x4[1]._super * Val(2))) + (x4[2]._super * Val(4))) +
            (x4[3]._super * Val(8)));
  Val x6 =
      ((((x5 + (x4[4]._super * Val(16))) + (x4[5]._super * Val(32))) + (x4[6]._super * Val(64))) +
       (x4[7]._super * Val(128)));
  Val x7 = ((((x6 + (x4[8]._super * Val(256))) + (x4[9]._super * Val(512))) +
             (x4[10]._super * Val(1024))) +
            (x4[11]._super * Val(2048)));
  Val x8 = ((((x7 + (x4[12]._super * Val(4096))) + (x4[13]._super * Val(8192))) +
             (x4[14]._super * Val(16384))) +
            (x4[15]._super * Val(32768)));
  Val x9 = ((((x8 + (x4[16]._super * Val(65536))) + (x4[17]._super * Val(131072))) +
             (x4[18]._super * Val(262144))) +
            (x4[19]._super * Val(524288)));
  EQZ((((x9 + (x4[20]._super * Val(1048576))) + (x4[21]._super * Val(2097152))) - x2),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:166)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:161)
  NondetRegStruct22Array x10 = arg0.arrB;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:169)
  Val x11 = x10[5]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:171)
  ToBits_22_Struct x12 = exec_ToBits_22_(ctx, x11, LAYOUT_LOOKUP(layout1, unpackB));
  NondetRegStruct22Array x13 = x12._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:172)
  Val x14 = (((x13[0]._super + (x13[1]._super * Val(2))) + (x13[2]._super * Val(4))) +
             (x13[3]._super * Val(8)));
  Val x15 = ((((x14 + (x13[4]._super * Val(16))) + (x13[5]._super * Val(32))) +
              (x13[6]._super * Val(64))) +
             (x13[7]._super * Val(128)));
  Val x16 = ((((x15 + (x13[8]._super * Val(256))) + (x13[9]._super * Val(512))) +
              (x13[10]._super * Val(1024))) +
             (x13[11]._super * Val(2048)));
  Val x17 = ((((x16 + (x13[12]._super * Val(4096))) + (x13[13]._super * Val(8192))) +
              (x13[14]._super * Val(16384))) +
             (x13[15]._super * Val(32768)));
  Val x18 = ((((x17 + (x13[16]._super * Val(65536))) + (x13[17]._super * Val(131072))) +
              (x13[18]._super * Val(262144))) +
             (x13[19]._super * Val(524288)));
  EQZ((((x18 + (x13[20]._super * Val(1048576))) + (x13[21]._super * Val(2097152))) - x11),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:172)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:175)
  Val x19 = x10[20]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:177)
  ToBits_22_Struct x20 = exec_ToBits_22_(ctx, x19, LAYOUT_LOOKUP(layout1, unpackC));
  NondetRegStruct22Array x21 = x20._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:178)
  Val x22 = (((x21[0]._super + (x21[1]._super * Val(2))) + (x21[2]._super * Val(4))) +
             (x21[3]._super * Val(8)));
  Val x23 = ((((x22 + (x21[4]._super * Val(16))) + (x21[5]._super * Val(32))) +
              (x21[6]._super * Val(64))) +
             (x21[7]._super * Val(128)));
  Val x24 = ((((x23 + (x21[8]._super * Val(256))) + (x21[9]._super * Val(512))) +
              (x21[10]._super * Val(1024))) +
             (x21[11]._super * Val(2048)));
  Val x25 = ((((x24 + (x21[12]._super * Val(4096))) + (x21[13]._super * Val(8192))) +
              (x21[14]._super * Val(16384))) +
             (x21[15]._super * Val(32768)));
  Val x26 = ((((x25 + (x21[16]._super * Val(65536))) + (x21[17]._super * Val(131072))) +
              (x21[18]._super * Val(262144))) +
             (x21[19]._super * Val(524288)));
  EQZ((((x26 + (x21[20]._super * Val(1048576))) + (x21[21]._super * Val(2097152))) - x19),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:178)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:161)
  Val x27 = arg0.arrC[13]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:181)
  ToBits_22_Struct x28 = exec_ToBits_22_(ctx, x27, LAYOUT_LOOKUP(layout1, unpackD));
  NondetRegStruct22Array x29 = x28._super;
  Val x30 = x29[0]._super;
  Val x31 = x29[1]._super;
  Val x32 = x29[2]._super;
  Val x33 = x29[3]._super;
  Val x34 = x29[4]._super;
  Val x35 = x29[5]._super;
  Val x36 = x29[6]._super;
  Val x37 = x29[7]._super;
  Val x38 = x29[8]._super;
  Val x39 = x29[9]._super;
  Val x40 = x29[10]._super;
  Val x41 = x29[11]._super;
  Val x42 = x29[12]._super;
  Val x43 = x29[13]._super;
  Val x44 = x29[14]._super;
  Val x45 = x29[15]._super;
  Val x46 = x29[16]._super;
  Val x47 = x29[17]._super;
  Val x48 = x29[18]._super;
  Val x49 = x29[19]._super;
  Val x50 = x29[20]._super;
  Val x51 = x29[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:182)
  Val x52 = ((((((x30 + (x31 * Val(2))) + (x32 * Val(4))) + (x33 * Val(8))) + (x34 * Val(16))) +
              (x35 * Val(32))) +
             (x36 * Val(64)));
  Val x53 =
      ((((((x52 + (x37 * Val(128))) + (x38 * Val(256))) + (x39 * Val(512))) + (x40 * Val(1024))) +
        (x41 * Val(2048))) +
       (x42 * Val(4096)));
  Val x54 = ((((((x53 + (x43 * Val(8192))) + (x44 * Val(16384))) + (x45 * Val(32768))) +
               (x46 * Val(65536))) +
              (x47 * Val(131072))) +
             (x48 * Val(262144)));
  EQZ(((((x54 + (x49 * Val(524288))) + (x50 * Val(1048576))) + (x51 * Val(2097152))) - x27),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:182)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:185)
  Val x55 = arg0.arrD[6]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:187)
  ToBits_22_Struct x56 = exec_ToBits_22_(ctx, x55, LAYOUT_LOOKUP(layout1, unpackE));
  NondetRegStruct22Array x57 = x56._super;
  Val x58 = x57[0]._super;
  Val x59 = x57[1]._super;
  Val x60 = x57[2]._super;
  Val x61 = x57[3]._super;
  Val x62 = x57[4]._super;
  Val x63 = x57[5]._super;
  Val x64 = x57[6]._super;
  Val x65 = x57[7]._super;
  Val x66 = x57[8]._super;
  Val x67 = x57[9]._super;
  Val x68 = x57[10]._super;
  Val x69 = x57[11]._super;
  Val x70 = x57[12]._super;
  Val x71 = x57[13]._super;
  Val x72 = x57[14]._super;
  Val x73 = x57[15]._super;
  Val x74 = x57[16]._super;
  Val x75 = x57[17]._super;
  Val x76 = x57[18]._super;
  Val x77 = x57[19]._super;
  Val x78 = x57[20]._super;
  Val x79 = x57[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:188)
  Val x80 = ((((((x58 + (x59 * Val(2))) + (x60 * Val(4))) + (x61 * Val(8))) + (x62 * Val(16))) +
              (x63 * Val(32))) +
             (x64 * Val(64)));
  Val x81 =
      ((((((x80 + (x65 * Val(128))) + (x66 * Val(256))) + (x67 * Val(512))) + (x68 * Val(1024))) +
        (x69 * Val(2048))) +
       (x70 * Val(4096)));
  Val x82 = ((((((x81 + (x71 * Val(8192))) + (x72 * Val(16384))) + (x73 * Val(32768))) +
               (x74 * Val(65536))) +
              (x75 * Val(131072))) +
             (x76 * Val(262144)));
  EQZ(((((x82 + (x77 * Val(524288))) + (x78 * Val(1048576))) + (x79 * Val(2097152))) - x55),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:188)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  NondetRegStruct22Array x83 =
      map(Val22Array{Val(0),  Val(1),  Val(2),  Val(3),  Val(4),  Val(5),  Val(6),  Val(7),
                     Val(8),  Val(9),  Val(10), Val(11), Val(12), Val(13), Val(14), Val(15),
                     Val(16), Val(17), Val(18), Val(19), Val(20), Val(21)},
          LAYOUT_LOOKUP(layout1, xorAbc),
          std::function([&](Val22Array::value_type x84,
                            BoundLayout<NondetRegLayout22LayoutArray::value_type> x85) {
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:165)
            Val x86 = x4[to_size_t(x84)]._super;
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:171)
            Val x87 = x13[to_size_t(x84)]._super;
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:177)
            Val x88 = x21[to_size_t(x84)]._super;
            // xor3(zirgen/circuit/keccak/keccak.zir:110)
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:191)
            Val x89 = ((x86 * x87) + ((Val(1) - x86) * (Val(1) - x87)));
            NondetRegStruct x90 =
                exec_Reg(ctx, ((x89 * x88) + ((Val(1) - x89) * (Val(1) - x88))), x85);
            return x90;
          }));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x91 = x83[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x92 = ((x91 * x30) + ((Val(1) - x91) * (Val(1) - x30)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x93 = x83[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x94 = ((x93 * x31) + ((Val(1) - x93) * (Val(1) - x31)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x95 = x83[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x96 = ((x95 * x32) + ((Val(1) - x95) * (Val(1) - x32)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x97 = x83[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x98 = ((x97 * x33) + ((Val(1) - x97) * (Val(1) - x33)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x99 = x83[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x100 = ((x99 * x34) + ((Val(1) - x99) * (Val(1) - x34)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x101 = x83[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x102 = ((x101 * x35) + ((Val(1) - x101) * (Val(1) - x35)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x103 = x83[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x104 = ((x103 * x36) + ((Val(1) - x103) * (Val(1) - x36)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x105 = x83[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x106 = ((x105 * x37) + ((Val(1) - x105) * (Val(1) - x37)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x107 = x83[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x108 = ((x107 * x38) + ((Val(1) - x107) * (Val(1) - x38)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x109 = x83[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x110 = ((x109 * x39) + ((Val(1) - x109) * (Val(1) - x39)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x111 = x83[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x112 = ((x111 * x40) + ((Val(1) - x111) * (Val(1) - x40)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x113 = x83[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x114 = ((x113 * x41) + ((Val(1) - x113) * (Val(1) - x41)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x115 = x83[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x116 = ((x115 * x42) + ((Val(1) - x115) * (Val(1) - x42)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x117 = x83[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x118 = ((x117 * x43) + ((Val(1) - x117) * (Val(1) - x43)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x119 = x83[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x120 = ((x119 * x44) + ((Val(1) - x119) * (Val(1) - x44)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x121 = x83[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x122 = ((x121 * x45) + ((Val(1) - x121) * (Val(1) - x45)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x123 = x83[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x124 = ((x123 * x46) + ((Val(1) - x123) * (Val(1) - x46)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x125 = x83[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x126 = ((x125 * x47) + ((Val(1) - x125) * (Val(1) - x47)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x127 = x83[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x128 = ((x127 * x48) + ((Val(1) - x127) * (Val(1) - x48)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x129 = x83[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x130 = ((x129 * x49) + ((Val(1) - x129) * (Val(1) - x49)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x131 = x83[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x132 = ((x131 * x50) + ((Val(1) - x131) * (Val(1) - x50)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x133 = x83[21]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x134 = ((x133 * x51) + ((Val(1) - x133) * (Val(1) - x51)));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:196)
  Val x135 = (((x92 * x58) + ((Val(1) - x92) * (Val(1) - x58))) +
              (((x94 * x59) + ((Val(1) - x94) * (Val(1) - x59))) * Val(2)));
  Val x136 = ((x135 + (((x96 * x60) + ((Val(1) - x96) * (Val(1) - x60))) * Val(4))) +
              (((x98 * x61) + ((Val(1) - x98) * (Val(1) - x61))) * Val(8)));
  Val x137 = ((x136 + (((x100 * x62) + ((Val(1) - x100) * (Val(1) - x62))) * Val(16))) +
              (((x102 * x63) + ((Val(1) - x102) * (Val(1) - x63))) * Val(32)));
  Val x138 = ((x137 + (((x104 * x64) + ((Val(1) - x104) * (Val(1) - x64))) * Val(64))) +
              (((x106 * x65) + ((Val(1) - x106) * (Val(1) - x65))) * Val(128)));
  Val x139 = ((x138 + (((x108 * x66) + ((Val(1) - x108) * (Val(1) - x66))) * Val(256))) +
              (((x110 * x67) + ((Val(1) - x110) * (Val(1) - x67))) * Val(512)));
  Val x140 = ((x139 + (((x112 * x68) + ((Val(1) - x112) * (Val(1) - x68))) * Val(1024))) +
              (((x114 * x69) + ((Val(1) - x114) * (Val(1) - x69))) * Val(2048)));
  Val x141 = ((x140 + (((x116 * x70) + ((Val(1) - x116) * (Val(1) - x70))) * Val(4096))) +
              (((x118 * x71) + ((Val(1) - x118) * (Val(1) - x71))) * Val(8192)));
  Val x142 = ((x141 + (((x120 * x72) + ((Val(1) - x120) * (Val(1) - x72))) * Val(16384))) +
              (((x122 * x73) + ((Val(1) - x122) * (Val(1) - x73))) * Val(32768)));
  Val x143 = ((x142 + (((x124 * x74) + ((Val(1) - x124) * (Val(1) - x74))) * Val(65536))) +
              (((x126 * x75) + ((Val(1) - x126) * (Val(1) - x75))) * Val(131072)));
  Val x144 = ((x143 + (((x128 * x76) + ((Val(1) - x128) * (Val(1) - x76))) * Val(262144))) +
              (((x130 * x77) + ((Val(1) - x130) * (Val(1) - x77))) * Val(524288)));
  Val x145 = ((x144 + (((x132 * x78) + ((Val(1) - x132) * (Val(1) - x78))) * Val(1048576))) +
              (((x134 * x79) + ((Val(1) - x134) * (Val(1) - x79))) * Val(2097152)));
  return FromBits_22_Struct{._super = x145};
}
RetTupleStruct execXor5wordsMinor0_4_(ExecContext& ctx,
                                      RetTupleStruct arg0,
                                      BoundLayout<Xor5wordsMinor0_4_Layout> layout1) {
  // xor5words_minor0(zirgen/circuit/keccak/keccak.zir:200)
  FromBits_22_Struct x2 = execXor5wordsResult_4__0_(ctx, arg0, LAYOUT_LOOKUP(layout1, _0));
  NondetRegStruct x3 = exec_Reg(ctx, x2._super, LAYOUT_LOOKUP(layout1, result));
  // xor5words_minor0(zirgen/circuit/keccak/keccak.zir:202)
  Val22Array x4 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                             Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                             Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x5 =
      exec_RetTuple(ctx,
                    x4,
                    x4,
                    x4,
                    Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),    Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),    Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), x3._super, Val(0)},
                    x4,
                    x4,
                    Val(1),
                    Val(4),
                    arg0.rnd._super,
                    arg0.blk._super,
                    arg0.midx._super,
                    LAYOUT_LOOKUP(layout1, _super));
  return x5;
}
FromBits_21_Struct execXor5wordsResult_4__1_(ExecContext& ctx,
                                             RetTupleStruct arg0,
                                             BoundLayout<Xor5wordsResult_4__1_Layout> layout1) {
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:161)
  Val x2 = arg0.arrA[13]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:165)
  ToBits_21_Struct x3 = exec_ToBits_21_(ctx, x2, LAYOUT_LOOKUP(layout1, unpackA));
  NondetRegStruct21Array x4 = x3._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:166)
  Val x5 = (((x4[0]._super + (x4[1]._super * Val(2))) + (x4[2]._super * Val(4))) +
            (x4[3]._super * Val(8)));
  Val x6 =
      ((((x5 + (x4[4]._super * Val(16))) + (x4[5]._super * Val(32))) + (x4[6]._super * Val(64))) +
       (x4[7]._super * Val(128)));
  Val x7 = ((((x6 + (x4[8]._super * Val(256))) + (x4[9]._super * Val(512))) +
             (x4[10]._super * Val(1024))) +
            (x4[11]._super * Val(2048)));
  Val x8 = ((((x7 + (x4[12]._super * Val(4096))) + (x4[13]._super * Val(8192))) +
             (x4[14]._super * Val(16384))) +
            (x4[15]._super * Val(32768)));
  Val x9 = ((((x8 + (x4[16]._super * Val(65536))) + (x4[17]._super * Val(131072))) +
             (x4[18]._super * Val(262144))) +
            (x4[19]._super * Val(524288)));
  EQZ(((x9 + (x4[20]._super * Val(1048576))) - x2),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:166)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:161)
  NondetRegStruct22Array x10 = arg0.arrB;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:169)
  Val x11 = x10[6]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:171)
  ToBits_21_Struct x12 = exec_ToBits_21_(ctx, x11, LAYOUT_LOOKUP(layout1, unpackB));
  NondetRegStruct21Array x13 = x12._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:172)
  Val x14 = (((x13[0]._super + (x13[1]._super * Val(2))) + (x13[2]._super * Val(4))) +
             (x13[3]._super * Val(8)));
  Val x15 = ((((x14 + (x13[4]._super * Val(16))) + (x13[5]._super * Val(32))) +
              (x13[6]._super * Val(64))) +
             (x13[7]._super * Val(128)));
  Val x16 = ((((x15 + (x13[8]._super * Val(256))) + (x13[9]._super * Val(512))) +
              (x13[10]._super * Val(1024))) +
             (x13[11]._super * Val(2048)));
  Val x17 = ((((x16 + (x13[12]._super * Val(4096))) + (x13[13]._super * Val(8192))) +
              (x13[14]._super * Val(16384))) +
             (x13[15]._super * Val(32768)));
  Val x18 = ((((x17 + (x13[16]._super * Val(65536))) + (x13[17]._super * Val(131072))) +
              (x13[18]._super * Val(262144))) +
             (x13[19]._super * Val(524288)));
  EQZ(((x18 + (x13[20]._super * Val(1048576))) - x11),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:172)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:175)
  Val x19 = x10[21]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:177)
  ToBits_21_Struct x20 = exec_ToBits_21_(ctx, x19, LAYOUT_LOOKUP(layout1, unpackC));
  NondetRegStruct21Array x21 = x20._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:178)
  Val x22 = (((x21[0]._super + (x21[1]._super * Val(2))) + (x21[2]._super * Val(4))) +
             (x21[3]._super * Val(8)));
  Val x23 = ((((x22 + (x21[4]._super * Val(16))) + (x21[5]._super * Val(32))) +
              (x21[6]._super * Val(64))) +
             (x21[7]._super * Val(128)));
  Val x24 = ((((x23 + (x21[8]._super * Val(256))) + (x21[9]._super * Val(512))) +
              (x21[10]._super * Val(1024))) +
             (x21[11]._super * Val(2048)));
  Val x25 = ((((x24 + (x21[12]._super * Val(4096))) + (x21[13]._super * Val(8192))) +
              (x21[14]._super * Val(16384))) +
             (x21[15]._super * Val(32768)));
  Val x26 = ((((x25 + (x21[16]._super * Val(65536))) + (x21[17]._super * Val(131072))) +
              (x21[18]._super * Val(262144))) +
             (x21[19]._super * Val(524288)));
  EQZ(((x26 + (x21[20]._super * Val(1048576))) - x19),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:178)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:161)
  Val x27 = arg0.arrC[14]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:181)
  ToBits_21_Struct x28 = exec_ToBits_21_(ctx, x27, LAYOUT_LOOKUP(layout1, unpackD));
  NondetRegStruct21Array x29 = x28._super;
  Val x30 = x29[0]._super;
  Val x31 = x29[1]._super;
  Val x32 = x29[2]._super;
  Val x33 = x29[3]._super;
  Val x34 = x29[4]._super;
  Val x35 = x29[5]._super;
  Val x36 = x29[6]._super;
  Val x37 = x29[7]._super;
  Val x38 = x29[8]._super;
  Val x39 = x29[9]._super;
  Val x40 = x29[10]._super;
  Val x41 = x29[11]._super;
  Val x42 = x29[12]._super;
  Val x43 = x29[13]._super;
  Val x44 = x29[14]._super;
  Val x45 = x29[15]._super;
  Val x46 = x29[16]._super;
  Val x47 = x29[17]._super;
  Val x48 = x29[18]._super;
  Val x49 = x29[19]._super;
  Val x50 = x29[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:182)
  Val x51 = ((((((x30 + (x31 * Val(2))) + (x32 * Val(4))) + (x33 * Val(8))) + (x34 * Val(16))) +
              (x35 * Val(32))) +
             (x36 * Val(64)));
  Val x52 =
      ((((((x51 + (x37 * Val(128))) + (x38 * Val(256))) + (x39 * Val(512))) + (x40 * Val(1024))) +
        (x41 * Val(2048))) +
       (x42 * Val(4096)));
  Val x53 = ((((((x52 + (x43 * Val(8192))) + (x44 * Val(16384))) + (x45 * Val(32768))) +
               (x46 * Val(65536))) +
              (x47 * Val(131072))) +
             (x48 * Val(262144)));
  EQZ((((x53 + (x49 * Val(524288))) + (x50 * Val(1048576))) - x27),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:182)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:185)
  Val x54 = arg0.arrD[7]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:187)
  ToBits_21_Struct x55 = exec_ToBits_21_(ctx, x54, LAYOUT_LOOKUP(layout1, unpackE));
  NondetRegStruct21Array x56 = x55._super;
  Val x57 = x56[0]._super;
  Val x58 = x56[1]._super;
  Val x59 = x56[2]._super;
  Val x60 = x56[3]._super;
  Val x61 = x56[4]._super;
  Val x62 = x56[5]._super;
  Val x63 = x56[6]._super;
  Val x64 = x56[7]._super;
  Val x65 = x56[8]._super;
  Val x66 = x56[9]._super;
  Val x67 = x56[10]._super;
  Val x68 = x56[11]._super;
  Val x69 = x56[12]._super;
  Val x70 = x56[13]._super;
  Val x71 = x56[14]._super;
  Val x72 = x56[15]._super;
  Val x73 = x56[16]._super;
  Val x74 = x56[17]._super;
  Val x75 = x56[18]._super;
  Val x76 = x56[19]._super;
  Val x77 = x56[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:188)
  Val x78 = ((((((x57 + (x58 * Val(2))) + (x59 * Val(4))) + (x60 * Val(8))) + (x61 * Val(16))) +
              (x62 * Val(32))) +
             (x63 * Val(64)));
  Val x79 =
      ((((((x78 + (x64 * Val(128))) + (x65 * Val(256))) + (x66 * Val(512))) + (x67 * Val(1024))) +
        (x68 * Val(2048))) +
       (x69 * Val(4096)));
  Val x80 = ((((((x79 + (x70 * Val(8192))) + (x71 * Val(16384))) + (x72 * Val(32768))) +
               (x73 * Val(65536))) +
              (x74 * Val(131072))) +
             (x75 * Val(262144)));
  EQZ((((x80 + (x76 * Val(524288))) + (x77 * Val(1048576))) - x54),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:188)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  NondetRegStruct21Array x81 =
      map(Val21Array{Val(0),  Val(1),  Val(2),  Val(3),  Val(4),  Val(5),  Val(6),
                     Val(7),  Val(8),  Val(9),  Val(10), Val(11), Val(12), Val(13),
                     Val(14), Val(15), Val(16), Val(17), Val(18), Val(19), Val(20)},
          LAYOUT_LOOKUP(layout1, xorAbc),
          std::function([&](Val21Array::value_type x82,
                            BoundLayout<NondetRegLayout21LayoutArray::value_type> x83) {
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:165)
            Val x84 = x4[to_size_t(x82)]._super;
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:171)
            Val x85 = x13[to_size_t(x82)]._super;
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:177)
            Val x86 = x21[to_size_t(x82)]._super;
            // xor3(zirgen/circuit/keccak/keccak.zir:110)
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:191)
            Val x87 = ((x84 * x85) + ((Val(1) - x84) * (Val(1) - x85)));
            NondetRegStruct x88 =
                exec_Reg(ctx, ((x87 * x86) + ((Val(1) - x87) * (Val(1) - x86))), x83);
            return x88;
          }));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x89 = x81[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x90 = ((x89 * x30) + ((Val(1) - x89) * (Val(1) - x30)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x91 = x81[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x92 = ((x91 * x31) + ((Val(1) - x91) * (Val(1) - x31)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x93 = x81[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x94 = ((x93 * x32) + ((Val(1) - x93) * (Val(1) - x32)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x95 = x81[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x96 = ((x95 * x33) + ((Val(1) - x95) * (Val(1) - x33)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x97 = x81[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x98 = ((x97 * x34) + ((Val(1) - x97) * (Val(1) - x34)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x99 = x81[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x100 = ((x99 * x35) + ((Val(1) - x99) * (Val(1) - x35)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x101 = x81[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x102 = ((x101 * x36) + ((Val(1) - x101) * (Val(1) - x36)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x103 = x81[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x104 = ((x103 * x37) + ((Val(1) - x103) * (Val(1) - x37)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x105 = x81[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x106 = ((x105 * x38) + ((Val(1) - x105) * (Val(1) - x38)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x107 = x81[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x108 = ((x107 * x39) + ((Val(1) - x107) * (Val(1) - x39)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x109 = x81[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x110 = ((x109 * x40) + ((Val(1) - x109) * (Val(1) - x40)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x111 = x81[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x112 = ((x111 * x41) + ((Val(1) - x111) * (Val(1) - x41)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x113 = x81[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x114 = ((x113 * x42) + ((Val(1) - x113) * (Val(1) - x42)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x115 = x81[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x116 = ((x115 * x43) + ((Val(1) - x115) * (Val(1) - x43)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x117 = x81[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x118 = ((x117 * x44) + ((Val(1) - x117) * (Val(1) - x44)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x119 = x81[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x120 = ((x119 * x45) + ((Val(1) - x119) * (Val(1) - x45)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x121 = x81[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x122 = ((x121 * x46) + ((Val(1) - x121) * (Val(1) - x46)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x123 = x81[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x124 = ((x123 * x47) + ((Val(1) - x123) * (Val(1) - x47)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x125 = x81[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x126 = ((x125 * x48) + ((Val(1) - x125) * (Val(1) - x48)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x127 = x81[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x128 = ((x127 * x49) + ((Val(1) - x127) * (Val(1) - x49)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x129 = x81[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x130 = ((x129 * x50) + ((Val(1) - x129) * (Val(1) - x50)));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:196)
  Val x131 = (((x90 * x57) + ((Val(1) - x90) * (Val(1) - x57))) +
              (((x92 * x58) + ((Val(1) - x92) * (Val(1) - x58))) * Val(2)));
  Val x132 = ((x131 + (((x94 * x59) + ((Val(1) - x94) * (Val(1) - x59))) * Val(4))) +
              (((x96 * x60) + ((Val(1) - x96) * (Val(1) - x60))) * Val(8)));
  Val x133 = ((x132 + (((x98 * x61) + ((Val(1) - x98) * (Val(1) - x61))) * Val(16))) +
              (((x100 * x62) + ((Val(1) - x100) * (Val(1) - x62))) * Val(32)));
  Val x134 = ((x133 + (((x102 * x63) + ((Val(1) - x102) * (Val(1) - x63))) * Val(64))) +
              (((x104 * x64) + ((Val(1) - x104) * (Val(1) - x64))) * Val(128)));
  Val x135 = ((x134 + (((x106 * x65) + ((Val(1) - x106) * (Val(1) - x65))) * Val(256))) +
              (((x108 * x66) + ((Val(1) - x108) * (Val(1) - x66))) * Val(512)));
  Val x136 = ((x135 + (((x110 * x67) + ((Val(1) - x110) * (Val(1) - x67))) * Val(1024))) +
              (((x112 * x68) + ((Val(1) - x112) * (Val(1) - x68))) * Val(2048)));
  Val x137 = ((x136 + (((x114 * x69) + ((Val(1) - x114) * (Val(1) - x69))) * Val(4096))) +
              (((x116 * x70) + ((Val(1) - x116) * (Val(1) - x70))) * Val(8192)));
  Val x138 = ((x137 + (((x118 * x71) + ((Val(1) - x118) * (Val(1) - x71))) * Val(16384))) +
              (((x120 * x72) + ((Val(1) - x120) * (Val(1) - x72))) * Val(32768)));
  Val x139 = ((x138 + (((x122 * x73) + ((Val(1) - x122) * (Val(1) - x73))) * Val(65536))) +
              (((x124 * x74) + ((Val(1) - x124) * (Val(1) - x74))) * Val(131072)));
  Val x140 = ((x139 + (((x126 * x75) + ((Val(1) - x126) * (Val(1) - x75))) * Val(262144))) +
              (((x128 * x76) + ((Val(1) - x128) * (Val(1) - x76))) * Val(524288)));
  return FromBits_21_Struct{
      ._super = (x140 + (((x130 * x77) + ((Val(1) - x130) * (Val(1) - x77))) * Val(1048576)))};
}
RetTupleStruct execXor5wordsMinor1_4_(ExecContext& ctx,
                                      RetTupleStruct arg0,
                                      BoundLayout<RetTupleLayout> arg1,
                                      BoundLayout<Xor5wordsMinor1_4_Layout> layout2) {
  // xor5words_minor1(zirgen/circuit/keccak/keccak.zir:207)
  RetTupleStruct x3 = back_RetTuple(ctx, 1, arg1);
  // xor5words_minor1(zirgen/circuit/keccak/keccak.zir:208)
  RetTupleStruct x4 = back_RetTuple(ctx, 2, arg1);
  // xor5words_minor1(zirgen/circuit/keccak/keccak.zir:209)
  FromBits_21_Struct x5 = execXor5wordsResult_4__1_(ctx, x4, LAYOUT_LOOKUP(layout2, _0));
  NondetRegStruct x6 = exec_Reg(ctx, x5._super, LAYOUT_LOOKUP(layout2, result));
  // xor5words_minor1(zirgen/circuit/keccak/keccak.zir:212)
  Val22Array x7 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                             Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                             Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x8 =
      exec_RetTuple(ctx,
                    Val22Array{Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), x3.arrD[22]._super},
                    Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),   Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),   Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), x6._super},
                    x7,
                    Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                    x7,
                    x7,
                    Val(2),
                    Val(4),
                    x3.rnd._super,
                    x3.blk._super,
                    x3.midx._super,
                    LAYOUT_LOOKUP(layout2, _super));
  return x8;
}
FromBits_21_Struct execXor5wordsResult_4__2_(ExecContext& ctx,
                                             RetTupleStruct arg0,
                                             BoundLayout<Xor5wordsResult_4__2_Layout> layout1) {
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:161)
  Val x2 = arg0.arrA[14]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:165)
  ToBits_21_Struct x3 = exec_ToBits_21_(ctx, x2, LAYOUT_LOOKUP(layout1, unpackA));
  NondetRegStruct21Array x4 = x3._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:166)
  Val x5 = (((x4[0]._super + (x4[1]._super * Val(2))) + (x4[2]._super * Val(4))) +
            (x4[3]._super * Val(8)));
  Val x6 =
      ((((x5 + (x4[4]._super * Val(16))) + (x4[5]._super * Val(32))) + (x4[6]._super * Val(64))) +
       (x4[7]._super * Val(128)));
  Val x7 = ((((x6 + (x4[8]._super * Val(256))) + (x4[9]._super * Val(512))) +
             (x4[10]._super * Val(1024))) +
            (x4[11]._super * Val(2048)));
  Val x8 = ((((x7 + (x4[12]._super * Val(4096))) + (x4[13]._super * Val(8192))) +
             (x4[14]._super * Val(16384))) +
            (x4[15]._super * Val(32768)));
  Val x9 = ((((x8 + (x4[16]._super * Val(65536))) + (x4[17]._super * Val(131072))) +
             (x4[18]._super * Val(262144))) +
            (x4[19]._super * Val(524288)));
  EQZ(((x9 + (x4[20]._super * Val(1048576))) - x2),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:166)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:169)
  Val x10 = arg0.arrB[7]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:171)
  ToBits_21_Struct x11 = exec_ToBits_21_(ctx, x10, LAYOUT_LOOKUP(layout1, unpackB));
  NondetRegStruct21Array x12 = x11._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:172)
  Val x13 = (((x12[0]._super + (x12[1]._super * Val(2))) + (x12[2]._super * Val(4))) +
             (x12[3]._super * Val(8)));
  Val x14 = ((((x13 + (x12[4]._super * Val(16))) + (x12[5]._super * Val(32))) +
              (x12[6]._super * Val(64))) +
             (x12[7]._super * Val(128)));
  Val x15 = ((((x14 + (x12[8]._super * Val(256))) + (x12[9]._super * Val(512))) +
              (x12[10]._super * Val(1024))) +
             (x12[11]._super * Val(2048)));
  Val x16 = ((((x15 + (x12[12]._super * Val(4096))) + (x12[13]._super * Val(8192))) +
              (x12[14]._super * Val(16384))) +
             (x12[15]._super * Val(32768)));
  Val x17 = ((((x16 + (x12[16]._super * Val(65536))) + (x12[17]._super * Val(131072))) +
              (x12[18]._super * Val(262144))) +
             (x12[19]._super * Val(524288)));
  EQZ(((x17 + (x12[20]._super * Val(1048576))) - x10),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:172)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:161)
  NondetRegStruct22Array x18 = arg0.arrC;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:175)
  Val x19 = x18[0]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:177)
  ToBits_21_Struct x20 = exec_ToBits_21_(ctx, x19, LAYOUT_LOOKUP(layout1, unpackC));
  NondetRegStruct21Array x21 = x20._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:178)
  Val x22 = (((x21[0]._super + (x21[1]._super * Val(2))) + (x21[2]._super * Val(4))) +
             (x21[3]._super * Val(8)));
  Val x23 = ((((x22 + (x21[4]._super * Val(16))) + (x21[5]._super * Val(32))) +
              (x21[6]._super * Val(64))) +
             (x21[7]._super * Val(128)));
  Val x24 = ((((x23 + (x21[8]._super * Val(256))) + (x21[9]._super * Val(512))) +
              (x21[10]._super * Val(1024))) +
             (x21[11]._super * Val(2048)));
  Val x25 = ((((x24 + (x21[12]._super * Val(4096))) + (x21[13]._super * Val(8192))) +
              (x21[14]._super * Val(16384))) +
             (x21[15]._super * Val(32768)));
  Val x26 = ((((x25 + (x21[16]._super * Val(65536))) + (x21[17]._super * Val(131072))) +
              (x21[18]._super * Val(262144))) +
             (x21[19]._super * Val(524288)));
  EQZ(((x26 + (x21[20]._super * Val(1048576))) - x19),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:178)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:161)
  Val x27 = x18[15]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:181)
  ToBits_21_Struct x28 = exec_ToBits_21_(ctx, x27, LAYOUT_LOOKUP(layout1, unpackD));
  NondetRegStruct21Array x29 = x28._super;
  Val x30 = x29[0]._super;
  Val x31 = x29[1]._super;
  Val x32 = x29[2]._super;
  Val x33 = x29[3]._super;
  Val x34 = x29[4]._super;
  Val x35 = x29[5]._super;
  Val x36 = x29[6]._super;
  Val x37 = x29[7]._super;
  Val x38 = x29[8]._super;
  Val x39 = x29[9]._super;
  Val x40 = x29[10]._super;
  Val x41 = x29[11]._super;
  Val x42 = x29[12]._super;
  Val x43 = x29[13]._super;
  Val x44 = x29[14]._super;
  Val x45 = x29[15]._super;
  Val x46 = x29[16]._super;
  Val x47 = x29[17]._super;
  Val x48 = x29[18]._super;
  Val x49 = x29[19]._super;
  Val x50 = x29[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:182)
  Val x51 = ((((((x30 + (x31 * Val(2))) + (x32 * Val(4))) + (x33 * Val(8))) + (x34 * Val(16))) +
              (x35 * Val(32))) +
             (x36 * Val(64)));
  Val x52 =
      ((((((x51 + (x37 * Val(128))) + (x38 * Val(256))) + (x39 * Val(512))) + (x40 * Val(1024))) +
        (x41 * Val(2048))) +
       (x42 * Val(4096)));
  Val x53 = ((((((x52 + (x43 * Val(8192))) + (x44 * Val(16384))) + (x45 * Val(32768))) +
               (x46 * Val(65536))) +
              (x47 * Val(131072))) +
             (x48 * Val(262144)));
  EQZ((((x53 + (x49 * Val(524288))) + (x50 * Val(1048576))) - x27),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:182)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:185)
  Val x54 = arg0.arrD[8]._super;
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:187)
  ToBits_21_Struct x55 = exec_ToBits_21_(ctx, x54, LAYOUT_LOOKUP(layout1, unpackE));
  NondetRegStruct21Array x56 = x55._super;
  Val x57 = x56[0]._super;
  Val x58 = x56[1]._super;
  Val x59 = x56[2]._super;
  Val x60 = x56[3]._super;
  Val x61 = x56[4]._super;
  Val x62 = x56[5]._super;
  Val x63 = x56[6]._super;
  Val x64 = x56[7]._super;
  Val x65 = x56[8]._super;
  Val x66 = x56[9]._super;
  Val x67 = x56[10]._super;
  Val x68 = x56[11]._super;
  Val x69 = x56[12]._super;
  Val x70 = x56[13]._super;
  Val x71 = x56[14]._super;
  Val x72 = x56[15]._super;
  Val x73 = x56[16]._super;
  Val x74 = x56[17]._super;
  Val x75 = x56[18]._super;
  Val x76 = x56[19]._super;
  Val x77 = x56[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:188)
  Val x78 = ((((((x57 + (x58 * Val(2))) + (x59 * Val(4))) + (x60 * Val(8))) + (x61 * Val(16))) +
              (x62 * Val(32))) +
             (x63 * Val(64)));
  Val x79 =
      ((((((x78 + (x64 * Val(128))) + (x65 * Val(256))) + (x66 * Val(512))) + (x67 * Val(1024))) +
        (x68 * Val(2048))) +
       (x69 * Val(4096)));
  Val x80 = ((((((x79 + (x70 * Val(8192))) + (x71 * Val(16384))) + (x72 * Val(32768))) +
               (x73 * Val(65536))) +
              (x74 * Val(131072))) +
             (x75 * Val(262144)));
  EQZ((((x80 + (x76 * Val(524288))) + (x77 * Val(1048576))) - x54),
      "xor5words_result(zirgen/circuit/keccak/keccak.zir:188)");
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  NondetRegStruct21Array x81 =
      map(Val21Array{Val(0),  Val(1),  Val(2),  Val(3),  Val(4),  Val(5),  Val(6),
                     Val(7),  Val(8),  Val(9),  Val(10), Val(11), Val(12), Val(13),
                     Val(14), Val(15), Val(16), Val(17), Val(18), Val(19), Val(20)},
          LAYOUT_LOOKUP(layout1, xorAbc),
          std::function([&](Val21Array::value_type x82,
                            BoundLayout<NondetRegLayout21LayoutArray::value_type> x83) {
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:165)
            Val x84 = x4[to_size_t(x82)]._super;
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:171)
            Val x85 = x12[to_size_t(x82)]._super;
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:177)
            Val x86 = x21[to_size_t(x82)]._super;
            // xor3(zirgen/circuit/keccak/keccak.zir:110)
            // xor5words_result(zirgen/circuit/keccak/keccak.zir:191)
            Val x87 = ((x84 * x85) + ((Val(1) - x84) * (Val(1) - x85)));
            NondetRegStruct x88 =
                exec_Reg(ctx, ((x87 * x86) + ((Val(1) - x87) * (Val(1) - x86))), x83);
            return x88;
          }));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x89 = x81[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x90 = ((x89 * x30) + ((Val(1) - x89) * (Val(1) - x30)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x91 = x81[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x92 = ((x91 * x31) + ((Val(1) - x91) * (Val(1) - x31)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x93 = x81[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x94 = ((x93 * x32) + ((Val(1) - x93) * (Val(1) - x32)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x95 = x81[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x96 = ((x95 * x33) + ((Val(1) - x95) * (Val(1) - x33)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x97 = x81[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x98 = ((x97 * x34) + ((Val(1) - x97) * (Val(1) - x34)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x99 = x81[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x100 = ((x99 * x35) + ((Val(1) - x99) * (Val(1) - x35)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x101 = x81[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x102 = ((x101 * x36) + ((Val(1) - x101) * (Val(1) - x36)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x103 = x81[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x104 = ((x103 * x37) + ((Val(1) - x103) * (Val(1) - x37)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x105 = x81[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x106 = ((x105 * x38) + ((Val(1) - x105) * (Val(1) - x38)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x107 = x81[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x108 = ((x107 * x39) + ((Val(1) - x107) * (Val(1) - x39)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x109 = x81[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x110 = ((x109 * x40) + ((Val(1) - x109) * (Val(1) - x40)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x111 = x81[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x112 = ((x111 * x41) + ((Val(1) - x111) * (Val(1) - x41)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x113 = x81[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x114 = ((x113 * x42) + ((Val(1) - x113) * (Val(1) - x42)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x115 = x81[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x116 = ((x115 * x43) + ((Val(1) - x115) * (Val(1) - x43)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x117 = x81[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x118 = ((x117 * x44) + ((Val(1) - x117) * (Val(1) - x44)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x119 = x81[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x120 = ((x119 * x45) + ((Val(1) - x119) * (Val(1) - x45)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x121 = x81[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x122 = ((x121 * x46) + ((Val(1) - x121) * (Val(1) - x46)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x123 = x81[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x124 = ((x123 * x47) + ((Val(1) - x123) * (Val(1) - x47)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x125 = x81[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x126 = ((x125 * x48) + ((Val(1) - x125) * (Val(1) - x48)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x127 = x81[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x128 = ((x127 * x49) + ((Val(1) - x127) * (Val(1) - x49)));
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:190)
  Val x129 = x81[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:194)
  Val x130 = ((x129 * x50) + ((Val(1) - x129) * (Val(1) - x50)));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // xor5words_result(zirgen/circuit/keccak/keccak.zir:196)
  Val x131 = (((x90 * x57) + ((Val(1) - x90) * (Val(1) - x57))) +
              (((x92 * x58) + ((Val(1) - x92) * (Val(1) - x58))) * Val(2)));
  Val x132 = ((x131 + (((x94 * x59) + ((Val(1) - x94) * (Val(1) - x59))) * Val(4))) +
              (((x96 * x60) + ((Val(1) - x96) * (Val(1) - x60))) * Val(8)));
  Val x133 = ((x132 + (((x98 * x61) + ((Val(1) - x98) * (Val(1) - x61))) * Val(16))) +
              (((x100 * x62) + ((Val(1) - x100) * (Val(1) - x62))) * Val(32)));
  Val x134 = ((x133 + (((x102 * x63) + ((Val(1) - x102) * (Val(1) - x63))) * Val(64))) +
              (((x104 * x64) + ((Val(1) - x104) * (Val(1) - x64))) * Val(128)));
  Val x135 = ((x134 + (((x106 * x65) + ((Val(1) - x106) * (Val(1) - x65))) * Val(256))) +
              (((x108 * x66) + ((Val(1) - x108) * (Val(1) - x66))) * Val(512)));
  Val x136 = ((x135 + (((x110 * x67) + ((Val(1) - x110) * (Val(1) - x67))) * Val(1024))) +
              (((x112 * x68) + ((Val(1) - x112) * (Val(1) - x68))) * Val(2048)));
  Val x137 = ((x136 + (((x114 * x69) + ((Val(1) - x114) * (Val(1) - x69))) * Val(4096))) +
              (((x116 * x70) + ((Val(1) - x116) * (Val(1) - x70))) * Val(8192)));
  Val x138 = ((x137 + (((x118 * x71) + ((Val(1) - x118) * (Val(1) - x71))) * Val(16384))) +
              (((x120 * x72) + ((Val(1) - x120) * (Val(1) - x72))) * Val(32768)));
  Val x139 = ((x138 + (((x122 * x73) + ((Val(1) - x122) * (Val(1) - x73))) * Val(65536))) +
              (((x124 * x74) + ((Val(1) - x124) * (Val(1) - x74))) * Val(131072)));
  Val x140 = ((x139 + (((x126 * x75) + ((Val(1) - x126) * (Val(1) - x75))) * Val(262144))) +
              (((x128 * x76) + ((Val(1) - x128) * (Val(1) - x76))) * Val(524288)));
  return FromBits_21_Struct{
      ._super = (x140 + (((x130 * x77) + ((Val(1) - x130) * (Val(1) - x77))) * Val(1048576)))};
}
RetTupleStruct execXor5wordsMinor2_4_(ExecContext& ctx,
                                      RetTupleStruct arg0,
                                      BoundLayout<RetTupleLayout> arg1,
                                      BoundLayout<Xor5wordsMinor2_4_Layout> layout2) {
  // xor5words_minor2(zirgen/circuit/keccak/keccak.zir:217)
  RetTupleStruct x3 = back_RetTuple(ctx, 1, arg1);
  // xor5words_minor2(zirgen/circuit/keccak/keccak.zir:218)
  RetTupleStruct x4 = back_RetTuple(ctx, 3, arg1);
  // xor5words_minor2(zirgen/circuit/keccak/keccak.zir:219)
  FromBits_21_Struct x5 = execXor5wordsResult_4__2_(ctx, x4, LAYOUT_LOOKUP(layout2, _0));
  NondetRegStruct x6 = exec_Reg(ctx, x5._super, LAYOUT_LOOKUP(layout2, result));
  // xor5words_minor2(zirgen/circuit/keccak/keccak.zir:223)
  Val22Array x7 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                             Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                             Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x8 =
      exec_RetTuple(ctx,
                    Val22Array{Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), x3.arrA[21]._super},
                    Val22Array{Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), Val(0),
                               Val(0), x3.arrB[21]._super},
                    Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),   Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),   Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), x6._super},
                    Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                    x7,
                    x7,
                    Val(3),
                    Val(4),
                    x3.rnd._super,
                    x3.blk._super,
                    x3.midx._super,
                    LAYOUT_LOOKUP(layout2, _super));
  return x8;
}
RetTupleStruct execXor5wordsMinor3_4_(ExecContext& ctx,
                                      RetTupleStruct arg0,
                                      BoundLayout<RetTupleLayout> arg1,
                                      BoundLayout<Xor5wordsMinor3_4_Layout> layout2) {
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:228)
  RetTupleStruct x3 = back_RetTuple(ctx, 1, arg1);
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:229)
  RetTupleStruct x4 = back_RetTuple(ctx, 4, arg1);
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:230)
  Val22Array x5 = Val22Array{Val(0),  Val(1),  Val(2),  Val(3),  Val(4),  Val(5),  Val(6),  Val(7),
                             Val(8),  Val(9),  Val(10), Val(11), Val(12), Val(13), Val(14), Val(15),
                             Val(16), Val(17), Val(18), Val(19), Val(20), Val(21)};
  NondetRegStruct22Array x6 =
      map(x5,
          LAYOUT_LOOKUP(layout2, inpA),
          std::function([&](Val22Array::value_type x7,
                            BoundLayout<NondetRegLayout22LayoutArray::value_type> x8) {
            NondetRegStruct x9 = exec_Reg(ctx, x4.arrA[to_size_t(x7)]._super, x8);
            return x9;
          }));
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:231)
  NondetRegStruct22Array x10 =
      map(x5,
          LAYOUT_LOOKUP(layout2, inpB),
          std::function([&](Val22Array::value_type x11,
                            BoundLayout<NondetRegLayout22LayoutArray::value_type> x12) {
            NondetRegStruct x13 = exec_Reg(ctx, x4.arrB[to_size_t(x11)]._super, x12);
            return x13;
          }));
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:232)
  NondetRegStruct22Array x14 =
      map(x5,
          LAYOUT_LOOKUP(layout2, inpC),
          std::function([&](Val22Array::value_type x15,
                            BoundLayout<NondetRegLayout22LayoutArray::value_type> x16) {
            NondetRegStruct x17 = exec_Reg(ctx, x4.arrC[to_size_t(x15)]._super, x16);
            return x17;
          }));
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:233)
  NondetRegStruct21Array x18 =
      map(Val21Array{Val(0),  Val(1),  Val(2),  Val(3),  Val(4),  Val(5),  Val(6),
                     Val(7),  Val(8),  Val(9),  Val(10), Val(11), Val(12), Val(13),
                     Val(14), Val(15), Val(16), Val(17), Val(18), Val(19), Val(20)},
          LAYOUT_LOOKUP(layout2, tmp_1),
          std::function([&](Val21Array::value_type x19,
                            BoundLayout<NondetRegLayout21LayoutArray::value_type> x20) {
            NondetRegStruct x21 = exec_Reg(ctx, x4.arrD[to_size_t(x19)]._super, x20);
            return x21;
          }));
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:234)
  NondetRegStruct x22 = exec_Reg(ctx, x3.arrA[21]._super, LAYOUT_LOOKUP(layout2, _0));
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:235)
  NondetRegStruct x23 = exec_Reg(ctx, x3.arrB[21]._super, LAYOUT_LOOKUP(layout2, _1));
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:236)
  NondetRegStruct x24 = exec_Reg(ctx, x3.arrC[21]._super, LAYOUT_LOOKUP(layout2, _2));
  // xor5words_minor3(zirgen/circuit/keccak/keccak.zir:238)
  Val22Array x25 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x26 = exec_RetTuple(
      ctx,
      Val22Array{x6[0]._super,  x6[1]._super,  x6[2]._super,  x6[3]._super,  x6[4]._super,
                 x6[5]._super,  x6[6]._super,  x6[7]._super,  x6[8]._super,  x6[9]._super,
                 x6[10]._super, x6[11]._super, x6[12]._super, x6[13]._super, x6[14]._super,
                 x6[15]._super, x6[16]._super, x6[17]._super, x6[18]._super, x6[19]._super,
                 x6[20]._super, x6[21]._super},
      Val22Array{x10[0]._super,  x10[1]._super,  x10[2]._super,  x10[3]._super,  x10[4]._super,
                 x10[5]._super,  x10[6]._super,  x10[7]._super,  x10[8]._super,  x10[9]._super,
                 x10[10]._super, x10[11]._super, x10[12]._super, x10[13]._super, x10[14]._super,
                 x10[15]._super, x10[16]._super, x10[17]._super, x10[18]._super, x10[19]._super,
                 x10[20]._super, x10[21]._super},
      Val22Array{x14[0]._super,  x14[1]._super,  x14[2]._super,  x14[3]._super,  x14[4]._super,
                 x14[5]._super,  x14[6]._super,  x14[7]._super,  x14[8]._super,  x14[9]._super,
                 x14[10]._super, x14[11]._super, x14[12]._super, x14[13]._super, x14[14]._super,
                 x14[15]._super, x14[16]._super, x14[17]._super, x14[18]._super, x14[19]._super,
                 x14[20]._super, x14[21]._super},
      Val24Array{x18[0]._super,  x18[1]._super,  x18[2]._super,  x18[3]._super,  x18[4]._super,
                 x18[5]._super,  x18[6]._super,  x18[7]._super,  x18[8]._super,  x18[9]._super,
                 x18[10]._super, x18[11]._super, x18[12]._super, x18[13]._super, x18[14]._super,
                 x18[15]._super, x18[16]._super, x18[17]._super, x18[18]._super, x18[19]._super,
                 x18[20]._super, x22._super,     x23._super,     x24._super},
      x25,
      x25,
      Val(0),
      Val(5),
      x3.rnd._super,
      x3.blk._super,
      x3.midx._super,
      LAYOUT_LOOKUP(layout2, _super));
  return x26;
}
RetTupleStruct execXor5wordsMajor_4_(ExecContext& ctx,
                                     RetTupleStruct arg0,
                                     BoundLayout<RetTupleLayout> arg1,
                                     BoundLayout<Xor5wordsMajor_4_Layout> layout2) {
  // xor5words_major(zirgen/circuit/keccak/keccak.zir:244)
  BoundLayout<Xor5wordsMajor_4__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // xor5words_major(zirgen/circuit/keccak/keccak.zir:243)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  OneHot_4_Struct x5 = exec_OneHot_4_(ctx, x4.minor._super, LAYOUT_LOOKUP(layout2, minorOnehot));
  NondetRegStruct4Array x6 = x5._super;
  if (to_size_t(x6[0]._super)) {
    // xor5words_major(zirgen/circuit/keccak/keccak.zir:245)
    RetTupleStruct x7 = back_RetTuple(ctx, 1, arg1);
    RetTupleStruct x8 = execXor5wordsMinor0_4_(ctx, x7, LAYOUT_LOOKUP(x3, arm0));
  }
  if (to_size_t(x6[1]._super)) {
    // xor5words_major(zirgen/circuit/keccak/keccak.zir:246)
    RetTupleStruct x9 = execXor5wordsMinor1_4_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm1));
  }
  if (to_size_t(x6[2]._super)) {
    // xor5words_major(zirgen/circuit/keccak/keccak.zir:247)
    RetTupleStruct x10 = execXor5wordsMinor2_4_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm2));
  }
  if (to_size_t(x6[3]._super)) {
    // xor5words_major(zirgen/circuit/keccak/keccak.zir:248)
    RetTupleStruct x11 = execXor5wordsMinor3_4_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm3));
  }
  // xor5words_major(zirgen/circuit/keccak/keccak.zir:244)
  RetTupleStruct x12 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x12;
}
RetTupleStruct execRhoMinor0_0__0_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<RhoMinor0_0__0_Layout> layout2) {
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  RetTupleStruct x3 = back_RetTuple(ctx, 1, arg1);
  NondetRegStruct24Array x4 = x3.arrD;
  Val x5 = x4[21]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:257)
  ToBits_22_Struct x6 = exec_ToBits_22_(ctx, x5, LAYOUT_LOOKUP(layout2, unpackM1));
  NondetRegStruct22Array x7 = x6._super;
  Val x8 = x7[0]._super;
  Val x9 = x7[1]._super;
  Val x10 = x7[2]._super;
  Val x11 = x7[3]._super;
  Val x12 = x7[4]._super;
  Val x13 = x7[5]._super;
  Val x14 = x7[6]._super;
  Val x15 = x7[7]._super;
  Val x16 = x7[8]._super;
  Val x17 = x7[9]._super;
  Val x18 = x7[10]._super;
  Val x19 = x7[11]._super;
  Val x20 = x7[12]._super;
  Val x21 = x7[13]._super;
  Val x22 = x7[14]._super;
  Val x23 = x7[15]._super;
  Val x24 = x7[16]._super;
  Val x25 = x7[17]._super;
  Val x26 = x7[18]._super;
  Val x27 = x7[19]._super;
  Val x28 = x7[20]._super;
  Val x29 = x7[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:258)
  Val x30 = ((((((x8 + (x9 * Val(2))) + (x10 * Val(4))) + (x11 * Val(8))) + (x12 * Val(16))) +
              (x13 * Val(32))) +
             (x14 * Val(64)));
  Val x31 =
      ((((((x30 + (x15 * Val(128))) + (x16 * Val(256))) + (x17 * Val(512))) + (x18 * Val(1024))) +
        (x19 * Val(2048))) +
       (x20 * Val(4096)));
  Val x32 = ((((((x31 + (x21 * Val(8192))) + (x22 * Val(16384))) + (x23 * Val(32768))) +
               (x24 * Val(65536))) +
              (x25 * Val(131072))) +
             (x26 * Val(262144)));
  EQZ(((((x32 + (x27 * Val(524288))) + (x28 * Val(1048576))) + (x29 * Val(2097152))) - x5),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:258)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x33 = x4[22]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:261)
  ToBits_21_Struct x34 = exec_ToBits_21_(ctx, x33, LAYOUT_LOOKUP(layout2, unpackM2));
  NondetRegStruct21Array x35 = x34._super;
  Val x36 = x35[0]._super;
  Val x37 = x35[1]._super;
  Val x38 = x35[2]._super;
  Val x39 = x35[3]._super;
  Val x40 = x35[4]._super;
  Val x41 = x35[5]._super;
  Val x42 = x35[6]._super;
  Val x43 = x35[7]._super;
  Val x44 = x35[8]._super;
  Val x45 = x35[9]._super;
  Val x46 = x35[10]._super;
  Val x47 = x35[11]._super;
  Val x48 = x35[12]._super;
  Val x49 = x35[13]._super;
  Val x50 = x35[14]._super;
  Val x51 = x35[15]._super;
  Val x52 = x35[16]._super;
  Val x53 = x35[17]._super;
  Val x54 = x35[18]._super;
  Val x55 = x35[19]._super;
  Val x56 = x35[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:262)
  Val x57 = ((((((x36 + (x37 * Val(2))) + (x38 * Val(4))) + (x39 * Val(8))) + (x40 * Val(16))) +
              (x41 * Val(32))) +
             (x42 * Val(64)));
  Val x58 =
      ((((((x57 + (x43 * Val(128))) + (x44 * Val(256))) + (x45 * Val(512))) + (x46 * Val(1024))) +
        (x47 * Val(2048))) +
       (x48 * Val(4096)));
  Val x59 = ((((((x58 + (x49 * Val(8192))) + (x50 * Val(16384))) + (x51 * Val(32768))) +
               (x52 * Val(65536))) +
              (x53 * Val(131072))) +
             (x54 * Val(262144)));
  EQZ((((x59 + (x55 * Val(524288))) + (x56 * Val(1048576))) - x33),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:262)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x60 = x4[23]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:266)
  ToBits_21_Struct x61 = exec_ToBits_21_(ctx, x60, LAYOUT_LOOKUP(layout2, unpackM3));
  NondetRegStruct21Array x62 = x61._super;
  Val x63 = x62[0]._super;
  Val x64 = x62[1]._super;
  Val x65 = x62[2]._super;
  Val x66 = x62[3]._super;
  Val x67 = x62[4]._super;
  Val x68 = x62[5]._super;
  Val x69 = x62[6]._super;
  Val x70 = x62[7]._super;
  Val x71 = x62[8]._super;
  Val x72 = x62[9]._super;
  Val x73 = x62[10]._super;
  Val x74 = x62[11]._super;
  Val x75 = x62[12]._super;
  Val x76 = x62[13]._super;
  Val x77 = x62[14]._super;
  Val x78 = x62[15]._super;
  Val x79 = x62[16]._super;
  Val x80 = x62[17]._super;
  Val x81 = x62[18]._super;
  Val x82 = x62[19]._super;
  Val x83 = x62[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:267)
  Val x84 = ((((((x63 + (x64 * Val(2))) + (x65 * Val(4))) + (x66 * Val(8))) + (x67 * Val(16))) +
              (x68 * Val(32))) +
             (x69 * Val(64)));
  Val x85 =
      ((((((x84 + (x70 * Val(128))) + (x71 * Val(256))) + (x72 * Val(512))) + (x73 * Val(1024))) +
        (x74 * Val(2048))) +
       (x75 * Val(4096)));
  Val x86 = ((((((x85 + (x76 * Val(8192))) + (x77 * Val(16384))) + (x78 * Val(32768))) +
               (x79 * Val(65536))) +
              (x80 * Val(131072))) +
             (x81 * Val(262144)));
  EQZ((((x86 + (x82 * Val(524288))) + (x83 * Val(1048576))) - x60),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:267)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x87 = x4[12]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:271)
  ToBits_22_Struct x88 = exec_ToBits_22_(ctx, x87, LAYOUT_LOOKUP(layout2, unpackP1));
  NondetRegStruct22Array x89 = x88._super;
  Val x90 = x89[0]._super;
  Val x91 = x89[1]._super;
  Val x92 = x89[2]._super;
  Val x93 = x89[3]._super;
  Val x94 = x89[4]._super;
  Val x95 = x89[5]._super;
  Val x96 = x89[6]._super;
  Val x97 = x89[7]._super;
  Val x98 = x89[8]._super;
  Val x99 = x89[9]._super;
  Val x100 = x89[10]._super;
  Val x101 = x89[11]._super;
  Val x102 = x89[12]._super;
  Val x103 = x89[13]._super;
  Val x104 = x89[14]._super;
  Val x105 = x89[15]._super;
  Val x106 = x89[16]._super;
  Val x107 = x89[17]._super;
  Val x108 = x89[18]._super;
  Val x109 = x89[19]._super;
  Val x110 = x89[20]._super;
  Val x111 = x89[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:272)
  Val x112 = ((((((x90 + (x91 * Val(2))) + (x92 * Val(4))) + (x93 * Val(8))) + (x94 * Val(16))) +
               (x95 * Val(32))) +
              (x96 * Val(64)));
  Val x113 =
      ((((((x112 + (x97 * Val(128))) + (x98 * Val(256))) + (x99 * Val(512))) + (x100 * Val(1024))) +
        (x101 * Val(2048))) +
       (x102 * Val(4096)));
  Val x114 = ((((((x113 + (x103 * Val(8192))) + (x104 * Val(16384))) + (x105 * Val(32768))) +
                (x106 * Val(65536))) +
               (x107 * Val(131072))) +
              (x108 * Val(262144)));
  EQZ(((((x114 + (x109 * Val(524288))) + (x110 * Val(1048576))) + (x111 * Val(2097152))) - x87),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:272)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x115 = x4[13]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:275)
  ToBits_21_Struct x116 = exec_ToBits_21_(ctx, x115, LAYOUT_LOOKUP(layout2, unpackP2));
  NondetRegStruct21Array x117 = x116._super;
  Val x118 = x117[0]._super;
  Val x119 = x117[1]._super;
  Val x120 = x117[2]._super;
  Val x121 = x117[3]._super;
  Val x122 = x117[4]._super;
  Val x123 = x117[5]._super;
  Val x124 = x117[6]._super;
  Val x125 = x117[7]._super;
  Val x126 = x117[8]._super;
  Val x127 = x117[9]._super;
  Val x128 = x117[10]._super;
  Val x129 = x117[11]._super;
  Val x130 = x117[12]._super;
  Val x131 = x117[13]._super;
  Val x132 = x117[14]._super;
  Val x133 = x117[15]._super;
  Val x134 = x117[16]._super;
  Val x135 = x117[17]._super;
  Val x136 = x117[18]._super;
  Val x137 = x117[19]._super;
  Val x138 = x117[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:276)
  Val x139 =
      ((((((x118 + (x119 * Val(2))) + (x120 * Val(4))) + (x121 * Val(8))) + (x122 * Val(16))) +
        (x123 * Val(32))) +
       (x124 * Val(64)));
  Val x140 = ((((((x139 + (x125 * Val(128))) + (x126 * Val(256))) + (x127 * Val(512))) +
                (x128 * Val(1024))) +
               (x129 * Val(2048))) +
              (x130 * Val(4096)));
  Val x141 = ((((((x140 + (x131 * Val(8192))) + (x132 * Val(16384))) + (x133 * Val(32768))) +
                (x134 * Val(65536))) +
               (x135 * Val(131072))) +
              (x136 * Val(262144)));
  EQZ((((x141 + (x137 * Val(524288))) + (x138 * Val(1048576))) - x115),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:276)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x142 = x4[14]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:279)
  ToBits_21_Struct x143 = exec_ToBits_21_(ctx, x142, LAYOUT_LOOKUP(layout2, unpackP3));
  NondetRegStruct21Array x144 = x143._super;
  Val x145 = x144[0]._super;
  Val x146 = x144[1]._super;
  Val x147 = x144[2]._super;
  Val x148 = x144[3]._super;
  Val x149 = x144[4]._super;
  Val x150 = x144[5]._super;
  Val x151 = x144[6]._super;
  Val x152 = x144[7]._super;
  Val x153 = x144[8]._super;
  Val x154 = x144[9]._super;
  Val x155 = x144[10]._super;
  Val x156 = x144[11]._super;
  Val x157 = x144[12]._super;
  Val x158 = x144[13]._super;
  Val x159 = x144[14]._super;
  Val x160 = x144[15]._super;
  Val x161 = x144[16]._super;
  Val x162 = x144[17]._super;
  Val x163 = x144[18]._super;
  Val x164 = x144[19]._super;
  Val x165 = x144[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:280)
  Val x166 =
      ((((((x145 + (x146 * Val(2))) + (x147 * Val(4))) + (x148 * Val(8))) + (x149 * Val(16))) +
        (x150 * Val(32))) +
       (x151 * Val(64)));
  Val x167 = ((((((x166 + (x152 * Val(128))) + (x153 * Val(256))) + (x154 * Val(512))) +
                (x155 * Val(1024))) +
               (x156 * Val(2048))) +
              (x157 * Val(4096)));
  Val x168 = ((((((x167 + (x158 * Val(8192))) + (x159 * Val(16384))) + (x160 * Val(32768))) +
                (x161 * Val(65536))) +
               (x162 * Val(131072))) +
              (x163 * Val(262144)));
  EQZ((((x168 + (x164 * Val(524288))) + (x165 * Val(1048576))) - x142),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:280)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:287)
  RetTupleStruct x169 =
      exec_RetTuple(ctx,
                    Val22Array{x165, x90,  x91,  x92,  x93,  x94,  x95,  x96,  x97,  x98,  x99,
                               x100, x101, x102, x103, x104, x105, x106, x107, x108, x109, x110},
                    Val22Array{x111, x118, x119, x120, x121, x122, x123, x124, x125, x126, x127,
                               x128, x129, x130, x131, x132, x133, x134, x135, x136, x137, Val(0)},
                    Val22Array{x138, x145, x146, x147, x148, x149, x150, x151, x152, x153, x154,
                               x155, x156, x157, x158, x159, x160, x161, x162, x163, x164, Val(0)},
                    Val24Array{x8,  x9,  x10, x11, x12, x13, x14, x15, x16, x17, x18,    x19,
                               x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, Val(0), Val(0)},
                    Val22Array{x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46,
                               x47, x48, x49, x50, x51, x52, x53, x54, x55, x56, Val(0)},
                    Val22Array{x63, x64, x65, x66, x67, x68, x69, x70, x71, x72, x73,
                               x74, x75, x76, x77, x78, x79, x80, x81, x82, x83, Val(0)},
                    Val(1),
                    Val(5),
                    x3.rnd._super,
                    x3.blk._super,
                    x3.midx._super,
                    LAYOUT_LOOKUP(layout2, _super));
  return x169;
}
RetTupleStruct execRhoMinor1_0__0_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<RhoMinor1_0__0_Layout> layout2) {
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:341)
  BoundLayout<RhoMinor1_0__0__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:292)
  RetTupleStruct x4 = back_RetTuple(ctx, 2, arg1);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  RetTupleStruct x5 = back_RetTuple(ctx, 1, arg1);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:292)
  NondetRegStruct22Array x6 = x4.arrA;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:297)
  Val x7 = x6[0]._super;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:304)
  ToBits_22_Struct x8 = exec_ToBits_22_(ctx, x7, LAYOUT_LOOKUP(layout2, unpackXy1));
  NondetRegStruct22Array x9 = x8._super;
  Val x10 = x9[0]._super;
  Val x11 = x9[1]._super;
  Val x12 = x9[2]._super;
  Val x13 = x9[3]._super;
  Val x14 = x9[4]._super;
  Val x15 = x9[5]._super;
  Val x16 = x9[6]._super;
  Val x17 = x9[7]._super;
  Val x18 = x9[8]._super;
  Val x19 = x9[9]._super;
  Val x20 = x9[10]._super;
  Val x21 = x9[11]._super;
  Val x22 = x9[12]._super;
  Val x23 = x9[13]._super;
  Val x24 = x9[14]._super;
  Val x25 = x9[15]._super;
  Val x26 = x9[16]._super;
  Val x27 = x9[17]._super;
  Val x28 = x9[18]._super;
  Val x29 = x9[19]._super;
  Val x30 = x9[20]._super;
  Val x31 = x9[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:305)
  Val x32 = ((((((x10 + (x11 * Val(2))) + (x12 * Val(4))) + (x13 * Val(8))) + (x14 * Val(16))) +
              (x15 * Val(32))) +
             (x16 * Val(64)));
  Val x33 =
      ((((((x32 + (x17 * Val(128))) + (x18 * Val(256))) + (x19 * Val(512))) + (x20 * Val(1024))) +
        (x21 * Val(2048))) +
       (x22 * Val(4096)));
  Val x34 = ((((((x33 + (x23 * Val(8192))) + (x24 * Val(16384))) + (x25 * Val(32768))) +
               (x26 * Val(65536))) +
              (x27 * Val(131072))) +
             (x28 * Val(262144)));
  EQZ(((((x34 + (x29 * Val(524288))) + (x30 * Val(1048576))) + (x31 * Val(2097152))) - x7),
      "rho_minor1(zirgen/circuit/keccak/keccak.zir:305)");
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:309)
  Val x35 = x6[1]._super;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:316)
  ToBits_21_Struct x36 = exec_ToBits_21_(ctx, x35, LAYOUT_LOOKUP(layout2, unpackXy2));
  NondetRegStruct21Array x37 = x36._super;
  Val x38 = x37[0]._super;
  Val x39 = x37[1]._super;
  Val x40 = x37[2]._super;
  Val x41 = x37[3]._super;
  Val x42 = x37[4]._super;
  Val x43 = x37[5]._super;
  Val x44 = x37[6]._super;
  Val x45 = x37[7]._super;
  Val x46 = x37[8]._super;
  Val x47 = x37[9]._super;
  Val x48 = x37[10]._super;
  Val x49 = x37[11]._super;
  Val x50 = x37[12]._super;
  Val x51 = x37[13]._super;
  Val x52 = x37[14]._super;
  Val x53 = x37[15]._super;
  Val x54 = x37[16]._super;
  Val x55 = x37[17]._super;
  Val x56 = x37[18]._super;
  Val x57 = x37[19]._super;
  Val x58 = x37[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:317)
  Val x59 = ((((((x38 + (x39 * Val(2))) + (x40 * Val(4))) + (x41 * Val(8))) + (x42 * Val(16))) +
              (x43 * Val(32))) +
             (x44 * Val(64)));
  Val x60 =
      ((((((x59 + (x45 * Val(128))) + (x46 * Val(256))) + (x47 * Val(512))) + (x48 * Val(1024))) +
        (x49 * Val(2048))) +
       (x50 * Val(4096)));
  Val x61 = ((((((x60 + (x51 * Val(8192))) + (x52 * Val(16384))) + (x53 * Val(32768))) +
               (x54 * Val(65536))) +
              (x55 * Val(131072))) +
             (x56 * Val(262144)));
  EQZ((((x61 + (x57 * Val(524288))) + (x58 * Val(1048576))) - x35),
      "rho_minor1(zirgen/circuit/keccak/keccak.zir:317)");
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:321)
  Val x62 = x6[2]._super;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:328)
  ToBits_21_Struct x63 = exec_ToBits_21_(ctx, x62, LAYOUT_LOOKUP(layout2, unpackXy3));
  NondetRegStruct21Array x64 = x63._super;
  Val x65 = x64[0]._super;
  Val x66 = x64[1]._super;
  Val x67 = x64[2]._super;
  Val x68 = x64[3]._super;
  Val x69 = x64[4]._super;
  Val x70 = x64[5]._super;
  Val x71 = x64[6]._super;
  Val x72 = x64[7]._super;
  Val x73 = x64[8]._super;
  Val x74 = x64[9]._super;
  Val x75 = x64[10]._super;
  Val x76 = x64[11]._super;
  Val x77 = x64[12]._super;
  Val x78 = x64[13]._super;
  Val x79 = x64[14]._super;
  Val x80 = x64[15]._super;
  Val x81 = x64[16]._super;
  Val x82 = x64[17]._super;
  Val x83 = x64[18]._super;
  Val x84 = x64[19]._super;
  Val x85 = x64[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:329)
  Val x86 = ((((((x65 + (x66 * Val(2))) + (x67 * Val(4))) + (x68 * Val(8))) + (x69 * Val(16))) +
              (x70 * Val(32))) +
             (x71 * Val(64)));
  Val x87 =
      ((((((x86 + (x72 * Val(128))) + (x73 * Val(256))) + (x74 * Val(512))) + (x75 * Val(1024))) +
        (x76 * Val(2048))) +
       (x77 * Val(4096)));
  Val x88 = ((((((x87 + (x78 * Val(8192))) + (x79 * Val(16384))) + (x80 * Val(32768))) +
               (x81 * Val(65536))) +
              (x82 * Val(131072))) +
             (x83 * Val(262144)));
  EQZ((((x88 + (x84 * Val(524288))) + (x85 * Val(1048576))) - x62),
      "rho_minor1(zirgen/circuit/keccak/keccak.zir:329)");
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  NondetRegStruct22Array x89 = x5.arrA;
  NondetRegStruct24Array x90 = x5.arrD;
  Val x91 = x89[0]._super;
  Val x92 = x90[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x93 = ((x10 * x91) + ((Val(1) - x10) * (Val(1) - x91)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x94 = x89[1]._super;
  Val x95 = x90[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x96 = ((x11 * x94) + ((Val(1) - x11) * (Val(1) - x94)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x97 = x89[2]._super;
  Val x98 = x90[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x99 = ((x12 * x97) + ((Val(1) - x12) * (Val(1) - x97)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x100 = x89[3]._super;
  Val x101 = x90[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x102 = ((x13 * x100) + ((Val(1) - x13) * (Val(1) - x100)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x103 = x89[4]._super;
  Val x104 = x90[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x105 = ((x14 * x103) + ((Val(1) - x14) * (Val(1) - x103)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x106 = x89[5]._super;
  Val x107 = x90[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x108 = ((x15 * x106) + ((Val(1) - x15) * (Val(1) - x106)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x109 = x89[6]._super;
  Val x110 = x90[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x111 = ((x16 * x109) + ((Val(1) - x16) * (Val(1) - x109)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x112 = x89[7]._super;
  Val x113 = x90[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x114 = ((x17 * x112) + ((Val(1) - x17) * (Val(1) - x112)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x115 = x89[8]._super;
  Val x116 = x90[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x117 = ((x18 * x115) + ((Val(1) - x18) * (Val(1) - x115)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x118 = x89[9]._super;
  Val x119 = x90[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x120 = ((x19 * x118) + ((Val(1) - x19) * (Val(1) - x118)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x121 = x89[10]._super;
  Val x122 = x90[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x123 = ((x20 * x121) + ((Val(1) - x20) * (Val(1) - x121)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x124 = x89[11]._super;
  Val x125 = x90[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x126 = ((x21 * x124) + ((Val(1) - x21) * (Val(1) - x124)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x127 = x89[12]._super;
  Val x128 = x90[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x129 = ((x22 * x127) + ((Val(1) - x22) * (Val(1) - x127)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x130 = x89[13]._super;
  Val x131 = x90[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x132 = ((x23 * x130) + ((Val(1) - x23) * (Val(1) - x130)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x133 = x89[14]._super;
  Val x134 = x90[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x135 = ((x24 * x133) + ((Val(1) - x24) * (Val(1) - x133)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x136 = x89[15]._super;
  Val x137 = x90[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x138 = ((x25 * x136) + ((Val(1) - x25) * (Val(1) - x136)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x139 = x89[16]._super;
  Val x140 = x90[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x141 = ((x26 * x139) + ((Val(1) - x26) * (Val(1) - x139)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x142 = x89[17]._super;
  Val x143 = x90[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x144 = ((x27 * x142) + ((Val(1) - x27) * (Val(1) - x142)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x145 = x89[18]._super;
  Val x146 = x90[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x147 = ((x28 * x145) + ((Val(1) - x28) * (Val(1) - x145)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x148 = x89[19]._super;
  Val x149 = x90[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x150 = ((x29 * x148) + ((Val(1) - x29) * (Val(1) - x148)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x151 = x89[20]._super;
  Val x152 = x90[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x153 = ((x30 * x151) + ((Val(1) - x30) * (Val(1) - x151)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x154 = x89[21]._super;
  Val x155 = x90[21]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x156 = ((x31 * x154) + ((Val(1) - x31) * (Val(1) - x154)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  NondetRegStruct22Array x157 = x5.arrB;
  NondetRegStruct22Array x158 = x5.arrE;
  Val x159 = x157[0]._super;
  Val x160 = x158[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x161 = ((x38 * x159) + ((Val(1) - x38) * (Val(1) - x159)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x162 = x157[1]._super;
  Val x163 = x158[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x164 = ((x39 * x162) + ((Val(1) - x39) * (Val(1) - x162)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x165 = x157[2]._super;
  Val x166 = x158[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x167 = ((x40 * x165) + ((Val(1) - x40) * (Val(1) - x165)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x168 = x157[3]._super;
  Val x169 = x158[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x170 = ((x41 * x168) + ((Val(1) - x41) * (Val(1) - x168)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x171 = x157[4]._super;
  Val x172 = x158[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x173 = ((x42 * x171) + ((Val(1) - x42) * (Val(1) - x171)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x174 = x157[5]._super;
  Val x175 = x158[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x176 = ((x43 * x174) + ((Val(1) - x43) * (Val(1) - x174)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x177 = x157[6]._super;
  Val x178 = x158[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x179 = ((x44 * x177) + ((Val(1) - x44) * (Val(1) - x177)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x180 = x157[7]._super;
  Val x181 = x158[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x182 = ((x45 * x180) + ((Val(1) - x45) * (Val(1) - x180)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x183 = x157[8]._super;
  Val x184 = x158[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x185 = ((x46 * x183) + ((Val(1) - x46) * (Val(1) - x183)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x186 = x157[9]._super;
  Val x187 = x158[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x188 = ((x47 * x186) + ((Val(1) - x47) * (Val(1) - x186)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x189 = x157[10]._super;
  Val x190 = x158[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x191 = ((x48 * x189) + ((Val(1) - x48) * (Val(1) - x189)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x192 = x157[11]._super;
  Val x193 = x158[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x194 = ((x49 * x192) + ((Val(1) - x49) * (Val(1) - x192)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x195 = x157[12]._super;
  Val x196 = x158[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x197 = ((x50 * x195) + ((Val(1) - x50) * (Val(1) - x195)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x198 = x157[13]._super;
  Val x199 = x158[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x200 = ((x51 * x198) + ((Val(1) - x51) * (Val(1) - x198)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x201 = x157[14]._super;
  Val x202 = x158[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x203 = ((x52 * x201) + ((Val(1) - x52) * (Val(1) - x201)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x204 = x157[15]._super;
  Val x205 = x158[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x206 = ((x53 * x204) + ((Val(1) - x53) * (Val(1) - x204)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x207 = x157[16]._super;
  Val x208 = x158[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x209 = ((x54 * x207) + ((Val(1) - x54) * (Val(1) - x207)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x210 = x157[17]._super;
  Val x211 = x158[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x212 = ((x55 * x210) + ((Val(1) - x55) * (Val(1) - x210)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x213 = x157[18]._super;
  Val x214 = x158[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x215 = ((x56 * x213) + ((Val(1) - x56) * (Val(1) - x213)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x216 = x157[19]._super;
  Val x217 = x158[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x218 = ((x57 * x216) + ((Val(1) - x57) * (Val(1) - x216)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x219 = x157[20]._super;
  Val x220 = x158[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x221 = ((x58 * x219) + ((Val(1) - x58) * (Val(1) - x219)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  NondetRegStruct22Array x222 = x5.arrC;
  NondetRegStruct22Array x223 = x5.arrF;
  Val x224 = x222[0]._super;
  Val x225 = x223[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x226 = ((x65 * x224) + ((Val(1) - x65) * (Val(1) - x224)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x227 = x222[1]._super;
  Val x228 = x223[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x229 = ((x66 * x227) + ((Val(1) - x66) * (Val(1) - x227)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x230 = x222[2]._super;
  Val x231 = x223[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x232 = ((x67 * x230) + ((Val(1) - x67) * (Val(1) - x230)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x233 = x222[3]._super;
  Val x234 = x223[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x235 = ((x68 * x233) + ((Val(1) - x68) * (Val(1) - x233)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x236 = x222[4]._super;
  Val x237 = x223[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x238 = ((x69 * x236) + ((Val(1) - x69) * (Val(1) - x236)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x239 = x222[5]._super;
  Val x240 = x223[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x241 = ((x70 * x239) + ((Val(1) - x70) * (Val(1) - x239)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x242 = x222[6]._super;
  Val x243 = x223[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x244 = ((x71 * x242) + ((Val(1) - x71) * (Val(1) - x242)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x245 = x222[7]._super;
  Val x246 = x223[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x247 = ((x72 * x245) + ((Val(1) - x72) * (Val(1) - x245)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x248 = x222[8]._super;
  Val x249 = x223[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x250 = ((x73 * x248) + ((Val(1) - x73) * (Val(1) - x248)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x251 = x222[9]._super;
  Val x252 = x223[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x253 = ((x74 * x251) + ((Val(1) - x74) * (Val(1) - x251)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x254 = x222[10]._super;
  Val x255 = x223[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x256 = ((x75 * x254) + ((Val(1) - x75) * (Val(1) - x254)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x257 = x222[11]._super;
  Val x258 = x223[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x259 = ((x76 * x257) + ((Val(1) - x76) * (Val(1) - x257)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x260 = x222[12]._super;
  Val x261 = x223[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x262 = ((x77 * x260) + ((Val(1) - x77) * (Val(1) - x260)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x263 = x222[13]._super;
  Val x264 = x223[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x265 = ((x78 * x263) + ((Val(1) - x78) * (Val(1) - x263)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x266 = x222[14]._super;
  Val x267 = x223[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x268 = ((x79 * x266) + ((Val(1) - x79) * (Val(1) - x266)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x269 = x222[15]._super;
  Val x270 = x223[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x271 = ((x80 * x269) + ((Val(1) - x80) * (Val(1) - x269)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x272 = x222[16]._super;
  Val x273 = x223[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x274 = ((x81 * x272) + ((Val(1) - x81) * (Val(1) - x272)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x275 = x222[17]._super;
  Val x276 = x223[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x277 = ((x82 * x275) + ((Val(1) - x82) * (Val(1) - x275)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x278 = x222[18]._super;
  Val x279 = x223[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x280 = ((x83 * x278) + ((Val(1) - x83) * (Val(1) - x278)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x281 = x222[19]._super;
  Val x282 = x223[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x283 = ((x84 * x281) + ((Val(1) - x84) * (Val(1) - x281)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x284 = x222[20]._super;
  Val x285 = x223[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x286 = ((x85 * x284) + ((Val(1) - x85) * (Val(1) - x284)));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:336)
  Val x287 = (((x93 * x92) + ((Val(1) - x93) * (Val(1) - x92))) +
              (((x96 * x95) + ((Val(1) - x96) * (Val(1) - x95))) * Val(2)));
  Val x288 = ((x287 + (((x99 * x98) + ((Val(1) - x99) * (Val(1) - x98))) * Val(4))) +
              (((x102 * x101) + ((Val(1) - x102) * (Val(1) - x101))) * Val(8)));
  Val x289 = ((x288 + (((x105 * x104) + ((Val(1) - x105) * (Val(1) - x104))) * Val(16))) +
              (((x108 * x107) + ((Val(1) - x108) * (Val(1) - x107))) * Val(32)));
  Val x290 = ((x289 + (((x111 * x110) + ((Val(1) - x111) * (Val(1) - x110))) * Val(64))) +
              (((x114 * x113) + ((Val(1) - x114) * (Val(1) - x113))) * Val(128)));
  Val x291 = ((x290 + (((x117 * x116) + ((Val(1) - x117) * (Val(1) - x116))) * Val(256))) +
              (((x120 * x119) + ((Val(1) - x120) * (Val(1) - x119))) * Val(512)));
  Val x292 = ((x291 + (((x123 * x122) + ((Val(1) - x123) * (Val(1) - x122))) * Val(1024))) +
              (((x126 * x125) + ((Val(1) - x126) * (Val(1) - x125))) * Val(2048)));
  Val x293 = ((x292 + (((x129 * x128) + ((Val(1) - x129) * (Val(1) - x128))) * Val(4096))) +
              (((x132 * x131) + ((Val(1) - x132) * (Val(1) - x131))) * Val(8192)));
  Val x294 = ((x293 + (((x135 * x134) + ((Val(1) - x135) * (Val(1) - x134))) * Val(16384))) +
              (((x138 * x137) + ((Val(1) - x138) * (Val(1) - x137))) * Val(32768)));
  Val x295 = ((x294 + (((x141 * x140) + ((Val(1) - x141) * (Val(1) - x140))) * Val(65536))) +
              (((x144 * x143) + ((Val(1) - x144) * (Val(1) - x143))) * Val(131072)));
  Val x296 = ((x295 + (((x147 * x146) + ((Val(1) - x147) * (Val(1) - x146))) * Val(262144))) +
              (((x150 * x149) + ((Val(1) - x150) * (Val(1) - x149))) * Val(524288)));
  Val x297 = ((x296 + (((x153 * x152) + ((Val(1) - x153) * (Val(1) - x152))) * Val(1048576))) +
              (((x156 * x155) + ((Val(1) - x156) * (Val(1) - x155))) * Val(2097152)));
  NondetRegStruct x298 = exec_Reg(ctx, x297, LAYOUT_LOOKUP(layout2, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:337)
  Val x299 = (((x161 * x160) + ((Val(1) - x161) * (Val(1) - x160))) +
              (((x164 * x163) + ((Val(1) - x164) * (Val(1) - x163))) * Val(2)));
  Val x300 = ((x299 + (((x167 * x166) + ((Val(1) - x167) * (Val(1) - x166))) * Val(4))) +
              (((x170 * x169) + ((Val(1) - x170) * (Val(1) - x169))) * Val(8)));
  Val x301 = ((x300 + (((x173 * x172) + ((Val(1) - x173) * (Val(1) - x172))) * Val(16))) +
              (((x176 * x175) + ((Val(1) - x176) * (Val(1) - x175))) * Val(32)));
  Val x302 = ((x301 + (((x179 * x178) + ((Val(1) - x179) * (Val(1) - x178))) * Val(64))) +
              (((x182 * x181) + ((Val(1) - x182) * (Val(1) - x181))) * Val(128)));
  Val x303 = ((x302 + (((x185 * x184) + ((Val(1) - x185) * (Val(1) - x184))) * Val(256))) +
              (((x188 * x187) + ((Val(1) - x188) * (Val(1) - x187))) * Val(512)));
  Val x304 = ((x303 + (((x191 * x190) + ((Val(1) - x191) * (Val(1) - x190))) * Val(1024))) +
              (((x194 * x193) + ((Val(1) - x194) * (Val(1) - x193))) * Val(2048)));
  Val x305 = ((x304 + (((x197 * x196) + ((Val(1) - x197) * (Val(1) - x196))) * Val(4096))) +
              (((x200 * x199) + ((Val(1) - x200) * (Val(1) - x199))) * Val(8192)));
  Val x306 = ((x305 + (((x203 * x202) + ((Val(1) - x203) * (Val(1) - x202))) * Val(16384))) +
              (((x206 * x205) + ((Val(1) - x206) * (Val(1) - x205))) * Val(32768)));
  Val x307 = ((x306 + (((x209 * x208) + ((Val(1) - x209) * (Val(1) - x208))) * Val(65536))) +
              (((x212 * x211) + ((Val(1) - x212) * (Val(1) - x211))) * Val(131072)));
  Val x308 = ((x307 + (((x215 * x214) + ((Val(1) - x215) * (Val(1) - x214))) * Val(262144))) +
              (((x218 * x217) + ((Val(1) - x218) * (Val(1) - x217))) * Val(524288)));
  NondetRegStruct x309 =
      exec_Reg(ctx,
               (x308 + (((x221 * x220) + ((Val(1) - x221) * (Val(1) - x220))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _1));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:338)
  Val x310 = (((x226 * x225) + ((Val(1) - x226) * (Val(1) - x225))) +
              (((x229 * x228) + ((Val(1) - x229) * (Val(1) - x228))) * Val(2)));
  Val x311 = ((x310 + (((x232 * x231) + ((Val(1) - x232) * (Val(1) - x231))) * Val(4))) +
              (((x235 * x234) + ((Val(1) - x235) * (Val(1) - x234))) * Val(8)));
  Val x312 = ((x311 + (((x238 * x237) + ((Val(1) - x238) * (Val(1) - x237))) * Val(16))) +
              (((x241 * x240) + ((Val(1) - x241) * (Val(1) - x240))) * Val(32)));
  Val x313 = ((x312 + (((x244 * x243) + ((Val(1) - x244) * (Val(1) - x243))) * Val(64))) +
              (((x247 * x246) + ((Val(1) - x247) * (Val(1) - x246))) * Val(128)));
  Val x314 = ((x313 + (((x250 * x249) + ((Val(1) - x250) * (Val(1) - x249))) * Val(256))) +
              (((x253 * x252) + ((Val(1) - x253) * (Val(1) - x252))) * Val(512)));
  Val x315 = ((x314 + (((x256 * x255) + ((Val(1) - x256) * (Val(1) - x255))) * Val(1024))) +
              (((x259 * x258) + ((Val(1) - x259) * (Val(1) - x258))) * Val(2048)));
  Val x316 = ((x315 + (((x262 * x261) + ((Val(1) - x262) * (Val(1) - x261))) * Val(4096))) +
              (((x265 * x264) + ((Val(1) - x265) * (Val(1) - x264))) * Val(8192)));
  Val x317 = ((x316 + (((x268 * x267) + ((Val(1) - x268) * (Val(1) - x267))) * Val(16384))) +
              (((x271 * x270) + ((Val(1) - x271) * (Val(1) - x270))) * Val(32768)));
  Val x318 = ((x317 + (((x274 * x273) + ((Val(1) - x274) * (Val(1) - x273))) * Val(65536))) +
              (((x277 * x276) + ((Val(1) - x277) * (Val(1) - x276))) * Val(131072)));
  Val x319 = ((x318 + (((x280 * x279) + ((Val(1) - x280) * (Val(1) - x279))) * Val(262144))) +
              (((x283 * x282) + ((Val(1) - x283) * (Val(1) - x282))) * Val(524288)));
  NondetRegStruct x320 =
      exec_Reg(ctx,
               (x319 + (((x286 * x285) + ((Val(1) - x286) * (Val(1) - x285))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _2));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:341)
  BoundLayout<RhoMinor1_0__0_Arm1_SuperLayout> x321 = LAYOUT_LOOKUP(x3, arm1);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:342)
  Val22Array x322 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  Val24Array x323 = Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:339)
  Val22Array x324 =
      Val22Array{x298._super, x309._super, x320._super, Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0)};
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x325 = x5.rnd._super;
  Val x326 = x5.blk._super;
  Val x327 = x5.midx._super;
  if (to_size_t(Val(0))) {
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:342)
    RetTupleStruct x328 = exec_RetTuple(ctx,
                                        x322,
                                        x322,
                                        x322,
                                        x323,
                                        x322,
                                        x324,
                                        Val(8),
                                        Val(5),
                                        x325,
                                        x326,
                                        x327,
                                        LAYOUT_LOOKUP(x3, arm0));
  }
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:292)
  NondetRegStruct24Array x329 = x4.arrD;
  Val x330 = x329[9]._super;
  Val x331 = x329[10]._super;
  Val x332 = x329[11]._super;
  if (to_size_t(Val(1))) {
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:345)
    ToBits_22_Struct x333 = exec_ToBits_22_(ctx, x330, LAYOUT_LOOKUP(x321, unpackM1));
    NondetRegStruct22Array x334 = x333._super;
    Val x335 = x334[0]._super;
    Val x336 = x334[1]._super;
    Val x337 = x334[2]._super;
    Val x338 = x334[3]._super;
    Val x339 = x334[4]._super;
    Val x340 = x334[5]._super;
    Val x341 = x334[6]._super;
    Val x342 = x334[7]._super;
    Val x343 = x334[8]._super;
    Val x344 = x334[9]._super;
    Val x345 = x334[10]._super;
    Val x346 = x334[11]._super;
    Val x347 = x334[12]._super;
    Val x348 = x334[13]._super;
    Val x349 = x334[14]._super;
    Val x350 = x334[15]._super;
    Val x351 = x334[16]._super;
    Val x352 = x334[17]._super;
    Val x353 = x334[18]._super;
    Val x354 = x334[19]._super;
    Val x355 = x334[20]._super;
    Val x356 = x334[21]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:346)
    Val x357 =
        ((((((x335 + (x336 * Val(2))) + (x337 * Val(4))) + (x338 * Val(8))) + (x339 * Val(16))) +
          (x340 * Val(32))) +
         (x341 * Val(64)));
    Val x358 = ((((((x357 + (x342 * Val(128))) + (x343 * Val(256))) + (x344 * Val(512))) +
                  (x345 * Val(1024))) +
                 (x346 * Val(2048))) +
                (x347 * Val(4096)));
    Val x359 = ((((((x358 + (x348 * Val(8192))) + (x349 * Val(16384))) + (x350 * Val(32768))) +
                  (x351 * Val(65536))) +
                 (x352 * Val(131072))) +
                (x353 * Val(262144)));
    EQZ(((((x359 + (x354 * Val(524288))) + (x355 * Val(1048576))) + (x356 * Val(2097152))) - x330),
        "rho_minor1(zirgen/circuit/keccak/keccak.zir:346)");
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:349)
    ToBits_21_Struct x360 = exec_ToBits_21_(ctx, x331, LAYOUT_LOOKUP(x321, unpackM2));
    NondetRegStruct21Array x361 = x360._super;
    Val x362 = x361[0]._super;
    Val x363 = x361[1]._super;
    Val x364 = x361[2]._super;
    Val x365 = x361[3]._super;
    Val x366 = x361[4]._super;
    Val x367 = x361[5]._super;
    Val x368 = x361[6]._super;
    Val x369 = x361[7]._super;
    Val x370 = x361[8]._super;
    Val x371 = x361[9]._super;
    Val x372 = x361[10]._super;
    Val x373 = x361[11]._super;
    Val x374 = x361[12]._super;
    Val x375 = x361[13]._super;
    Val x376 = x361[14]._super;
    Val x377 = x361[15]._super;
    Val x378 = x361[16]._super;
    Val x379 = x361[17]._super;
    Val x380 = x361[18]._super;
    Val x381 = x361[19]._super;
    Val x382 = x361[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:350)
    Val x383 =
        ((((((x362 + (x363 * Val(2))) + (x364 * Val(4))) + (x365 * Val(8))) + (x366 * Val(16))) +
          (x367 * Val(32))) +
         (x368 * Val(64)));
    Val x384 = ((((((x383 + (x369 * Val(128))) + (x370 * Val(256))) + (x371 * Val(512))) +
                  (x372 * Val(1024))) +
                 (x373 * Val(2048))) +
                (x374 * Val(4096)));
    Val x385 = ((((((x384 + (x375 * Val(8192))) + (x376 * Val(16384))) + (x377 * Val(32768))) +
                  (x378 * Val(65536))) +
                 (x379 * Val(131072))) +
                (x380 * Val(262144)));
    EQZ((((x385 + (x381 * Val(524288))) + (x382 * Val(1048576))) - x331),
        "rho_minor1(zirgen/circuit/keccak/keccak.zir:350)");
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:354)
    ToBits_21_Struct x386 = exec_ToBits_21_(ctx, x332, LAYOUT_LOOKUP(x321, unpackM3));
    NondetRegStruct21Array x387 = x386._super;
    Val x388 = x387[0]._super;
    Val x389 = x387[1]._super;
    Val x390 = x387[2]._super;
    Val x391 = x387[3]._super;
    Val x392 = x387[4]._super;
    Val x393 = x387[5]._super;
    Val x394 = x387[6]._super;
    Val x395 = x387[7]._super;
    Val x396 = x387[8]._super;
    Val x397 = x387[9]._super;
    Val x398 = x387[10]._super;
    Val x399 = x387[11]._super;
    Val x400 = x387[12]._super;
    Val x401 = x387[13]._super;
    Val x402 = x387[14]._super;
    Val x403 = x387[15]._super;
    Val x404 = x387[16]._super;
    Val x405 = x387[17]._super;
    Val x406 = x387[18]._super;
    Val x407 = x387[19]._super;
    Val x408 = x387[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:355)
    Val x409 =
        ((((((x388 + (x389 * Val(2))) + (x390 * Val(4))) + (x391 * Val(8))) + (x392 * Val(16))) +
          (x393 * Val(32))) +
         (x394 * Val(64)));
    Val x410 = ((((((x409 + (x395 * Val(128))) + (x396 * Val(256))) + (x397 * Val(512))) +
                  (x398 * Val(1024))) +
                 (x399 * Val(2048))) +
                (x400 * Val(4096)));
    Val x411 = ((((((x410 + (x401 * Val(8192))) + (x402 * Val(16384))) + (x403 * Val(32768))) +
                  (x404 * Val(65536))) +
                 (x405 * Val(131072))) +
                (x406 * Val(262144)));
    EQZ((((x411 + (x407 * Val(524288))) + (x408 * Val(1048576))) - x332),
        "rho_minor1(zirgen/circuit/keccak/keccak.zir:355)");
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:358)
    RetTupleStruct x412 = exec_RetTuple(
        ctx,
        Val22Array{x335, x336, x337, x338, x339, x340, x341, x342, x343, x344, x345,
                   x346, x347, x348, x349, x350, x351, x352, x353, x354, x355, x356},
        Val22Array{x362, x363, x364, x365, x366, x367, x368, x369, x370, x371, x372,
                   x373, x374, x375, x376, x377, x378, x379, x380, x381, x382, Val(0)},
        Val22Array{x388, x389, x390, x391, x392, x393, x394, x395, x396, x397, x398,
                   x399, x400, x401, x402, x403, x404, x405, x406, x407, x408, Val(0)},
        x323,
        x322,
        x324,
        Val(2),
        Val(5),
        x325,
        x326,
        x327,
        LAYOUT_LOOKUP(x321, _super));
  }
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:341)
  RetTupleStruct x413 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x413;
}
RetTupleStruct execRhoMinor2_0__0_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<RhoMinor2_0__0_Layout> layout2) {
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:364)
  RetTupleStruct x3 = back_RetTuple(ctx, 3, arg1);
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:364)
  NondetRegStruct24Array x5 = x3.arrD;
  Val x6 = x5[15]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:368)
  ToBits_22_Struct x7 = exec_ToBits_22_(ctx, x6, LAYOUT_LOOKUP(layout2, unpackP1));
  NondetRegStruct22Array x8 = x7._super;
  Val x9 = x8[0]._super;
  Val x10 = x8[1]._super;
  Val x11 = x8[2]._super;
  Val x12 = x8[3]._super;
  Val x13 = x8[4]._super;
  Val x14 = x8[5]._super;
  Val x15 = x8[6]._super;
  Val x16 = x8[7]._super;
  Val x17 = x8[8]._super;
  Val x18 = x8[9]._super;
  Val x19 = x8[10]._super;
  Val x20 = x8[11]._super;
  Val x21 = x8[12]._super;
  Val x22 = x8[13]._super;
  Val x23 = x8[14]._super;
  Val x24 = x8[15]._super;
  Val x25 = x8[16]._super;
  Val x26 = x8[17]._super;
  Val x27 = x8[18]._super;
  Val x28 = x8[19]._super;
  Val x29 = x8[20]._super;
  Val x30 = x8[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:369)
  Val x31 = ((((((x9 + (x10 * Val(2))) + (x11 * Val(4))) + (x12 * Val(8))) + (x13 * Val(16))) +
              (x14 * Val(32))) +
             (x15 * Val(64)));
  Val x32 =
      ((((((x31 + (x16 * Val(128))) + (x17 * Val(256))) + (x18 * Val(512))) + (x19 * Val(1024))) +
        (x20 * Val(2048))) +
       (x21 * Val(4096)));
  Val x33 = ((((((x32 + (x22 * Val(8192))) + (x23 * Val(16384))) + (x24 * Val(32768))) +
               (x25 * Val(65536))) +
              (x26 * Val(131072))) +
             (x27 * Val(262144)));
  EQZ(((((x33 + (x28 * Val(524288))) + (x29 * Val(1048576))) + (x30 * Val(2097152))) - x6),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:369)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:364)
  Val x34 = x5[16]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:372)
  ToBits_21_Struct x35 = exec_ToBits_21_(ctx, x34, LAYOUT_LOOKUP(layout2, unpackP2));
  NondetRegStruct21Array x36 = x35._super;
  Val x37 = x36[0]._super;
  Val x38 = x36[1]._super;
  Val x39 = x36[2]._super;
  Val x40 = x36[3]._super;
  Val x41 = x36[4]._super;
  Val x42 = x36[5]._super;
  Val x43 = x36[6]._super;
  Val x44 = x36[7]._super;
  Val x45 = x36[8]._super;
  Val x46 = x36[9]._super;
  Val x47 = x36[10]._super;
  Val x48 = x36[11]._super;
  Val x49 = x36[12]._super;
  Val x50 = x36[13]._super;
  Val x51 = x36[14]._super;
  Val x52 = x36[15]._super;
  Val x53 = x36[16]._super;
  Val x54 = x36[17]._super;
  Val x55 = x36[18]._super;
  Val x56 = x36[19]._super;
  Val x57 = x36[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:373)
  Val x58 = ((((((x37 + (x38 * Val(2))) + (x39 * Val(4))) + (x40 * Val(8))) + (x41 * Val(16))) +
              (x42 * Val(32))) +
             (x43 * Val(64)));
  Val x59 =
      ((((((x58 + (x44 * Val(128))) + (x45 * Val(256))) + (x46 * Val(512))) + (x47 * Val(1024))) +
        (x48 * Val(2048))) +
       (x49 * Val(4096)));
  Val x60 = ((((((x59 + (x50 * Val(8192))) + (x51 * Val(16384))) + (x52 * Val(32768))) +
               (x53 * Val(65536))) +
              (x54 * Val(131072))) +
             (x55 * Val(262144)));
  EQZ((((x60 + (x56 * Val(524288))) + (x57 * Val(1048576))) - x34),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:373)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:364)
  Val x61 = x5[17]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:376)
  ToBits_21_Struct x62 = exec_ToBits_21_(ctx, x61, LAYOUT_LOOKUP(layout2, unpackP3));
  NondetRegStruct21Array x63 = x62._super;
  Val x64 = x63[0]._super;
  Val x65 = x63[1]._super;
  Val x66 = x63[2]._super;
  Val x67 = x63[3]._super;
  Val x68 = x63[4]._super;
  Val x69 = x63[5]._super;
  Val x70 = x63[6]._super;
  Val x71 = x63[7]._super;
  Val x72 = x63[8]._super;
  Val x73 = x63[9]._super;
  Val x74 = x63[10]._super;
  Val x75 = x63[11]._super;
  Val x76 = x63[12]._super;
  Val x77 = x63[13]._super;
  Val x78 = x63[14]._super;
  Val x79 = x63[15]._super;
  Val x80 = x63[16]._super;
  Val x81 = x63[17]._super;
  Val x82 = x63[18]._super;
  Val x83 = x63[19]._super;
  Val x84 = x63[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:377)
  Val x85 = ((((((x64 + (x65 * Val(2))) + (x66 * Val(4))) + (x67 * Val(8))) + (x68 * Val(16))) +
              (x69 * Val(32))) +
             (x70 * Val(64)));
  Val x86 =
      ((((((x85 + (x71 * Val(128))) + (x72 * Val(256))) + (x73 * Val(512))) + (x74 * Val(1024))) +
        (x75 * Val(2048))) +
       (x76 * Val(4096)));
  Val x87 = ((((((x86 + (x77 * Val(8192))) + (x78 * Val(16384))) + (x79 * Val(32768))) +
               (x80 * Val(65536))) +
              (x81 * Val(131072))) +
             (x82 * Val(262144)));
  EQZ((((x87 + (x83 * Val(524288))) + (x84 * Val(1048576))) - x61),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:377)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:364)
  NondetRegStruct22Array x88 = x3.arrA;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:383)
  Val x89 = x88[3]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:390)
  ToBits_22_Struct x90 = exec_ToBits_22_(ctx, x89, LAYOUT_LOOKUP(layout2, unpackXy1));
  NondetRegStruct22Array x91 = x90._super;
  Val x92 = x91[0]._super;
  Val x93 = x91[1]._super;
  Val x94 = x91[2]._super;
  Val x95 = x91[3]._super;
  Val x96 = x91[4]._super;
  Val x97 = x91[5]._super;
  Val x98 = x91[6]._super;
  Val x99 = x91[7]._super;
  Val x100 = x91[8]._super;
  Val x101 = x91[9]._super;
  Val x102 = x91[10]._super;
  Val x103 = x91[11]._super;
  Val x104 = x91[12]._super;
  Val x105 = x91[13]._super;
  Val x106 = x91[14]._super;
  Val x107 = x91[15]._super;
  Val x108 = x91[16]._super;
  Val x109 = x91[17]._super;
  Val x110 = x91[18]._super;
  Val x111 = x91[19]._super;
  Val x112 = x91[20]._super;
  Val x113 = x91[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:391)
  Val x114 = ((((((x92 + (x93 * Val(2))) + (x94 * Val(4))) + (x95 * Val(8))) + (x96 * Val(16))) +
               (x97 * Val(32))) +
              (x98 * Val(64)));
  Val x115 = ((((((x114 + (x99 * Val(128))) + (x100 * Val(256))) + (x101 * Val(512))) +
                (x102 * Val(1024))) +
               (x103 * Val(2048))) +
              (x104 * Val(4096)));
  Val x116 = ((((((x115 + (x105 * Val(8192))) + (x106 * Val(16384))) + (x107 * Val(32768))) +
                (x108 * Val(65536))) +
               (x109 * Val(131072))) +
              (x110 * Val(262144)));
  EQZ(((((x116 + (x111 * Val(524288))) + (x112 * Val(1048576))) + (x113 * Val(2097152))) - x89),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:391)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:395)
  Val x117 = x88[4]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:402)
  ToBits_21_Struct x118 = exec_ToBits_21_(ctx, x117, LAYOUT_LOOKUP(layout2, unpackXy2));
  NondetRegStruct21Array x119 = x118._super;
  Val x120 = x119[0]._super;
  Val x121 = x119[1]._super;
  Val x122 = x119[2]._super;
  Val x123 = x119[3]._super;
  Val x124 = x119[4]._super;
  Val x125 = x119[5]._super;
  Val x126 = x119[6]._super;
  Val x127 = x119[7]._super;
  Val x128 = x119[8]._super;
  Val x129 = x119[9]._super;
  Val x130 = x119[10]._super;
  Val x131 = x119[11]._super;
  Val x132 = x119[12]._super;
  Val x133 = x119[13]._super;
  Val x134 = x119[14]._super;
  Val x135 = x119[15]._super;
  Val x136 = x119[16]._super;
  Val x137 = x119[17]._super;
  Val x138 = x119[18]._super;
  Val x139 = x119[19]._super;
  Val x140 = x119[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:403)
  Val x141 =
      ((((((x120 + (x121 * Val(2))) + (x122 * Val(4))) + (x123 * Val(8))) + (x124 * Val(16))) +
        (x125 * Val(32))) +
       (x126 * Val(64)));
  Val x142 = ((((((x141 + (x127 * Val(128))) + (x128 * Val(256))) + (x129 * Val(512))) +
                (x130 * Val(1024))) +
               (x131 * Val(2048))) +
              (x132 * Val(4096)));
  Val x143 = ((((((x142 + (x133 * Val(8192))) + (x134 * Val(16384))) + (x135 * Val(32768))) +
                (x136 * Val(65536))) +
               (x137 * Val(131072))) +
              (x138 * Val(262144)));
  EQZ((((x143 + (x139 * Val(524288))) + (x140 * Val(1048576))) - x117),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:403)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:407)
  Val x144 = x88[5]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:414)
  ToBits_21_Struct x145 = exec_ToBits_21_(ctx, x144, LAYOUT_LOOKUP(layout2, unpackXy3));
  NondetRegStruct21Array x146 = x145._super;
  Val x147 = x146[0]._super;
  Val x148 = x146[1]._super;
  Val x149 = x146[2]._super;
  Val x150 = x146[3]._super;
  Val x151 = x146[4]._super;
  Val x152 = x146[5]._super;
  Val x153 = x146[6]._super;
  Val x154 = x146[7]._super;
  Val x155 = x146[8]._super;
  Val x156 = x146[9]._super;
  Val x157 = x146[10]._super;
  Val x158 = x146[11]._super;
  Val x159 = x146[12]._super;
  Val x160 = x146[13]._super;
  Val x161 = x146[14]._super;
  Val x162 = x146[15]._super;
  Val x163 = x146[16]._super;
  Val x164 = x146[17]._super;
  Val x165 = x146[18]._super;
  Val x166 = x146[19]._super;
  Val x167 = x146[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:415)
  Val x168 =
      ((((((x147 + (x148 * Val(2))) + (x149 * Val(4))) + (x150 * Val(8))) + (x151 * Val(16))) +
        (x152 * Val(32))) +
       (x153 * Val(64)));
  Val x169 = ((((((x168 + (x154 * Val(128))) + (x155 * Val(256))) + (x156 * Val(512))) +
                (x157 * Val(1024))) +
               (x158 * Val(2048))) +
              (x159 * Val(4096)));
  Val x170 = ((((((x169 + (x160 * Val(8192))) + (x161 * Val(16384))) + (x162 * Val(32768))) +
                (x163 * Val(65536))) +
               (x164 * Val(131072))) +
              (x165 * Val(262144)));
  EQZ((((x170 + (x166 * Val(524288))) + (x167 * Val(1048576))) - x144),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:415)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  NondetRegStruct22Array x171 = x4.arrA;
  Val x172 = x171[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x173 = ((x92 * x172) + ((Val(1) - x92) * (Val(1) - x172)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x174 = x171[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x175 = ((x93 * x174) + ((Val(1) - x93) * (Val(1) - x174)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x176 = x171[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x177 = ((x94 * x176) + ((Val(1) - x94) * (Val(1) - x176)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x178 = x171[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x179 = ((x95 * x178) + ((Val(1) - x95) * (Val(1) - x178)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x180 = x171[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x181 = ((x96 * x180) + ((Val(1) - x96) * (Val(1) - x180)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x182 = x171[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x183 = ((x97 * x182) + ((Val(1) - x97) * (Val(1) - x182)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x184 = x171[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x185 = ((x98 * x184) + ((Val(1) - x98) * (Val(1) - x184)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x186 = x171[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x187 = ((x99 * x186) + ((Val(1) - x99) * (Val(1) - x186)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x188 = x171[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x189 = ((x100 * x188) + ((Val(1) - x100) * (Val(1) - x188)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x190 = x171[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x191 = ((x101 * x190) + ((Val(1) - x101) * (Val(1) - x190)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x192 = x171[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x193 = ((x102 * x192) + ((Val(1) - x102) * (Val(1) - x192)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x194 = x171[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x195 = ((x103 * x194) + ((Val(1) - x103) * (Val(1) - x194)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x196 = x171[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x197 = ((x104 * x196) + ((Val(1) - x104) * (Val(1) - x196)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x198 = x171[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x199 = ((x105 * x198) + ((Val(1) - x105) * (Val(1) - x198)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x200 = x171[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x201 = ((x106 * x200) + ((Val(1) - x106) * (Val(1) - x200)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x202 = x171[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x203 = ((x107 * x202) + ((Val(1) - x107) * (Val(1) - x202)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x204 = x171[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x205 = ((x108 * x204) + ((Val(1) - x108) * (Val(1) - x204)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x206 = x171[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x207 = ((x109 * x206) + ((Val(1) - x109) * (Val(1) - x206)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x208 = x171[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x209 = ((x110 * x208) + ((Val(1) - x110) * (Val(1) - x208)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x210 = x171[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x211 = ((x111 * x210) + ((Val(1) - x111) * (Val(1) - x210)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x212 = x171[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x213 = ((x112 * x212) + ((Val(1) - x112) * (Val(1) - x212)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x214 = x171[21]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x215 = ((x113 * x214) + ((Val(1) - x113) * (Val(1) - x214)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  NondetRegStruct22Array x216 = x4.arrB;
  Val x217 = x216[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x218 = ((x120 * x217) + ((Val(1) - x120) * (Val(1) - x217)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x219 = x216[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x220 = ((x121 * x219) + ((Val(1) - x121) * (Val(1) - x219)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x221 = x216[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x222 = ((x122 * x221) + ((Val(1) - x122) * (Val(1) - x221)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x223 = x216[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x224 = ((x123 * x223) + ((Val(1) - x123) * (Val(1) - x223)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x225 = x216[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x226 = ((x124 * x225) + ((Val(1) - x124) * (Val(1) - x225)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x227 = x216[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x228 = ((x125 * x227) + ((Val(1) - x125) * (Val(1) - x227)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x229 = x216[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x230 = ((x126 * x229) + ((Val(1) - x126) * (Val(1) - x229)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x231 = x216[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x232 = ((x127 * x231) + ((Val(1) - x127) * (Val(1) - x231)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x233 = x216[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x234 = ((x128 * x233) + ((Val(1) - x128) * (Val(1) - x233)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x235 = x216[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x236 = ((x129 * x235) + ((Val(1) - x129) * (Val(1) - x235)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x237 = x216[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x238 = ((x130 * x237) + ((Val(1) - x130) * (Val(1) - x237)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x239 = x216[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x240 = ((x131 * x239) + ((Val(1) - x131) * (Val(1) - x239)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x241 = x216[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x242 = ((x132 * x241) + ((Val(1) - x132) * (Val(1) - x241)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x243 = x216[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x244 = ((x133 * x243) + ((Val(1) - x133) * (Val(1) - x243)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x245 = x216[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x246 = ((x134 * x245) + ((Val(1) - x134) * (Val(1) - x245)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x247 = x216[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x248 = ((x135 * x247) + ((Val(1) - x135) * (Val(1) - x247)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x249 = x216[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x250 = ((x136 * x249) + ((Val(1) - x136) * (Val(1) - x249)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x251 = x216[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x252 = ((x137 * x251) + ((Val(1) - x137) * (Val(1) - x251)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x253 = x216[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x254 = ((x138 * x253) + ((Val(1) - x138) * (Val(1) - x253)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x255 = x216[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x256 = ((x139 * x255) + ((Val(1) - x139) * (Val(1) - x255)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x257 = x216[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x258 = ((x140 * x257) + ((Val(1) - x140) * (Val(1) - x257)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  NondetRegStruct22Array x259 = x4.arrC;
  Val x260 = x259[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x261 = ((x147 * x260) + ((Val(1) - x147) * (Val(1) - x260)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x262 = x259[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x263 = ((x148 * x262) + ((Val(1) - x148) * (Val(1) - x262)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x264 = x259[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x265 = ((x149 * x264) + ((Val(1) - x149) * (Val(1) - x264)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x266 = x259[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x267 = ((x150 * x266) + ((Val(1) - x150) * (Val(1) - x266)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x268 = x259[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x269 = ((x151 * x268) + ((Val(1) - x151) * (Val(1) - x268)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x270 = x259[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x271 = ((x152 * x270) + ((Val(1) - x152) * (Val(1) - x270)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x272 = x259[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x273 = ((x153 * x272) + ((Val(1) - x153) * (Val(1) - x272)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x274 = x259[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x275 = ((x154 * x274) + ((Val(1) - x154) * (Val(1) - x274)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x276 = x259[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x277 = ((x155 * x276) + ((Val(1) - x155) * (Val(1) - x276)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x278 = x259[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x279 = ((x156 * x278) + ((Val(1) - x156) * (Val(1) - x278)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x280 = x259[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x281 = ((x157 * x280) + ((Val(1) - x157) * (Val(1) - x280)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x282 = x259[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x283 = ((x158 * x282) + ((Val(1) - x158) * (Val(1) - x282)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x284 = x259[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x285 = ((x159 * x284) + ((Val(1) - x159) * (Val(1) - x284)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x286 = x259[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x287 = ((x160 * x286) + ((Val(1) - x160) * (Val(1) - x286)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x288 = x259[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x289 = ((x161 * x288) + ((Val(1) - x161) * (Val(1) - x288)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x290 = x259[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x291 = ((x162 * x290) + ((Val(1) - x162) * (Val(1) - x290)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x292 = x259[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x293 = ((x163 * x292) + ((Val(1) - x163) * (Val(1) - x292)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x294 = x259[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x295 = ((x164 * x294) + ((Val(1) - x164) * (Val(1) - x294)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x296 = x259[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x297 = ((x165 * x296) + ((Val(1) - x165) * (Val(1) - x296)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x298 = x259[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x299 = ((x166 * x298) + ((Val(1) - x166) * (Val(1) - x298)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x300 = x259[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x301 = ((x167 * x300) + ((Val(1) - x167) * (Val(1) - x300)));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:422)
  Val x302 = (((x301 * x83) + ((Val(1) - x301) * (Val(1) - x83))) +
              (((x173 * x84) + ((Val(1) - x173) * (Val(1) - x84))) * Val(2)));
  Val x303 = ((x302 + (((x175 * x9) + ((Val(1) - x175) * (Val(1) - x9))) * Val(4))) +
              (((x177 * x10) + ((Val(1) - x177) * (Val(1) - x10))) * Val(8)));
  Val x304 = ((x303 + (((x179 * x11) + ((Val(1) - x179) * (Val(1) - x11))) * Val(16))) +
              (((x181 * x12) + ((Val(1) - x181) * (Val(1) - x12))) * Val(32)));
  Val x305 = ((x304 + (((x183 * x13) + ((Val(1) - x183) * (Val(1) - x13))) * Val(64))) +
              (((x185 * x14) + ((Val(1) - x185) * (Val(1) - x14))) * Val(128)));
  Val x306 = ((x305 + (((x187 * x15) + ((Val(1) - x187) * (Val(1) - x15))) * Val(256))) +
              (((x189 * x16) + ((Val(1) - x189) * (Val(1) - x16))) * Val(512)));
  Val x307 = ((x306 + (((x191 * x17) + ((Val(1) - x191) * (Val(1) - x17))) * Val(1024))) +
              (((x193 * x18) + ((Val(1) - x193) * (Val(1) - x18))) * Val(2048)));
  Val x308 = ((x307 + (((x195 * x19) + ((Val(1) - x195) * (Val(1) - x19))) * Val(4096))) +
              (((x197 * x20) + ((Val(1) - x197) * (Val(1) - x20))) * Val(8192)));
  Val x309 = ((x308 + (((x199 * x21) + ((Val(1) - x199) * (Val(1) - x21))) * Val(16384))) +
              (((x201 * x22) + ((Val(1) - x201) * (Val(1) - x22))) * Val(32768)));
  Val x310 = ((x309 + (((x203 * x23) + ((Val(1) - x203) * (Val(1) - x23))) * Val(65536))) +
              (((x205 * x24) + ((Val(1) - x205) * (Val(1) - x24))) * Val(131072)));
  Val x311 = ((x310 + (((x207 * x25) + ((Val(1) - x207) * (Val(1) - x25))) * Val(262144))) +
              (((x209 * x26) + ((Val(1) - x209) * (Val(1) - x26))) * Val(524288)));
  Val x312 = ((x311 + (((x211 * x27) + ((Val(1) - x211) * (Val(1) - x27))) * Val(1048576))) +
              (((x213 * x28) + ((Val(1) - x213) * (Val(1) - x28))) * Val(2097152)));
  NondetRegStruct x313 = exec_Reg(ctx, x312, LAYOUT_LOOKUP(layout2, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:423)
  Val x314 = (((x215 * x29) + ((Val(1) - x215) * (Val(1) - x29))) +
              (((x218 * x30) + ((Val(1) - x218) * (Val(1) - x30))) * Val(2)));
  Val x315 = ((x314 + (((x220 * x37) + ((Val(1) - x220) * (Val(1) - x37))) * Val(4))) +
              (((x222 * x38) + ((Val(1) - x222) * (Val(1) - x38))) * Val(8)));
  Val x316 = ((x315 + (((x224 * x39) + ((Val(1) - x224) * (Val(1) - x39))) * Val(16))) +
              (((x226 * x40) + ((Val(1) - x226) * (Val(1) - x40))) * Val(32)));
  Val x317 = ((x316 + (((x228 * x41) + ((Val(1) - x228) * (Val(1) - x41))) * Val(64))) +
              (((x230 * x42) + ((Val(1) - x230) * (Val(1) - x42))) * Val(128)));
  Val x318 = ((x317 + (((x232 * x43) + ((Val(1) - x232) * (Val(1) - x43))) * Val(256))) +
              (((x234 * x44) + ((Val(1) - x234) * (Val(1) - x44))) * Val(512)));
  Val x319 = ((x318 + (((x236 * x45) + ((Val(1) - x236) * (Val(1) - x45))) * Val(1024))) +
              (((x238 * x46) + ((Val(1) - x238) * (Val(1) - x46))) * Val(2048)));
  Val x320 = ((x319 + (((x240 * x47) + ((Val(1) - x240) * (Val(1) - x47))) * Val(4096))) +
              (((x242 * x48) + ((Val(1) - x242) * (Val(1) - x48))) * Val(8192)));
  Val x321 = ((x320 + (((x244 * x49) + ((Val(1) - x244) * (Val(1) - x49))) * Val(16384))) +
              (((x246 * x50) + ((Val(1) - x246) * (Val(1) - x50))) * Val(32768)));
  Val x322 = ((x321 + (((x248 * x51) + ((Val(1) - x248) * (Val(1) - x51))) * Val(65536))) +
              (((x250 * x52) + ((Val(1) - x250) * (Val(1) - x52))) * Val(131072)));
  Val x323 = ((x322 + (((x252 * x53) + ((Val(1) - x252) * (Val(1) - x53))) * Val(262144))) +
              (((x254 * x54) + ((Val(1) - x254) * (Val(1) - x54))) * Val(524288)));
  NondetRegStruct x324 =
      exec_Reg(ctx,
               (x323 + (((x256 * x55) + ((Val(1) - x256) * (Val(1) - x55))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _1));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:424)
  Val x325 = (((x258 * x56) + ((Val(1) - x258) * (Val(1) - x56))) +
              (((x261 * x57) + ((Val(1) - x261) * (Val(1) - x57))) * Val(2)));
  Val x326 = ((x325 + (((x263 * x64) + ((Val(1) - x263) * (Val(1) - x64))) * Val(4))) +
              (((x265 * x65) + ((Val(1) - x265) * (Val(1) - x65))) * Val(8)));
  Val x327 = ((x326 + (((x267 * x66) + ((Val(1) - x267) * (Val(1) - x66))) * Val(16))) +
              (((x269 * x67) + ((Val(1) - x269) * (Val(1) - x67))) * Val(32)));
  Val x328 = ((x327 + (((x271 * x68) + ((Val(1) - x271) * (Val(1) - x68))) * Val(64))) +
              (((x273 * x69) + ((Val(1) - x273) * (Val(1) - x69))) * Val(128)));
  Val x329 = ((x328 + (((x275 * x70) + ((Val(1) - x275) * (Val(1) - x70))) * Val(256))) +
              (((x277 * x71) + ((Val(1) - x277) * (Val(1) - x71))) * Val(512)));
  Val x330 = ((x329 + (((x279 * x72) + ((Val(1) - x279) * (Val(1) - x72))) * Val(1024))) +
              (((x281 * x73) + ((Val(1) - x281) * (Val(1) - x73))) * Val(2048)));
  Val x331 = ((x330 + (((x283 * x74) + ((Val(1) - x283) * (Val(1) - x74))) * Val(4096))) +
              (((x285 * x75) + ((Val(1) - x285) * (Val(1) - x75))) * Val(8192)));
  Val x332 = ((x331 + (((x287 * x76) + ((Val(1) - x287) * (Val(1) - x76))) * Val(16384))) +
              (((x289 * x77) + ((Val(1) - x289) * (Val(1) - x77))) * Val(32768)));
  Val x333 = ((x332 + (((x291 * x78) + ((Val(1) - x291) * (Val(1) - x78))) * Val(65536))) +
              (((x293 * x79) + ((Val(1) - x293) * (Val(1) - x79))) * Val(131072)));
  Val x334 = ((x333 + (((x295 * x80) + ((Val(1) - x295) * (Val(1) - x80))) * Val(262144))) +
              (((x297 * x81) + ((Val(1) - x297) * (Val(1) - x81))) * Val(524288)));
  NondetRegStruct x335 =
      exec_Reg(ctx,
               (x334 + (((x299 * x82) + ((Val(1) - x299) * (Val(1) - x82))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _2));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:427)
  Val22Array x336 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x337 = exec_RetTuple(
      ctx,
      x336,
      x336,
      x336,
      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
      x336,
      Val22Array{x313._super, x324._super, x335._super, Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0)},
      Val(3),
      Val(5),
      x4.rnd._super,
      x4.blk._super,
      x4.midx._super,
      LAYOUT_LOOKUP(layout2, _super));
  return x337;
}
RetTupleStruct execRhoMinor0_2__0_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<RhoMinor0_2__0_Layout> layout2) {
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  RetTupleStruct x3 = back_RetTuple(ctx, 4, arg1);
  NondetRegStruct24Array x4 = x3.arrD;
  Val x5 = x4[12]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:257)
  ToBits_22_Struct x6 = exec_ToBits_22_(ctx, x5, LAYOUT_LOOKUP(layout2, unpackM1));
  NondetRegStruct22Array x7 = x6._super;
  Val x8 = x7[0]._super;
  Val x9 = x7[1]._super;
  Val x10 = x7[2]._super;
  Val x11 = x7[3]._super;
  Val x12 = x7[4]._super;
  Val x13 = x7[5]._super;
  Val x14 = x7[6]._super;
  Val x15 = x7[7]._super;
  Val x16 = x7[8]._super;
  Val x17 = x7[9]._super;
  Val x18 = x7[10]._super;
  Val x19 = x7[11]._super;
  Val x20 = x7[12]._super;
  Val x21 = x7[13]._super;
  Val x22 = x7[14]._super;
  Val x23 = x7[15]._super;
  Val x24 = x7[16]._super;
  Val x25 = x7[17]._super;
  Val x26 = x7[18]._super;
  Val x27 = x7[19]._super;
  Val x28 = x7[20]._super;
  Val x29 = x7[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:258)
  Val x30 = ((((((x8 + (x9 * Val(2))) + (x10 * Val(4))) + (x11 * Val(8))) + (x12 * Val(16))) +
              (x13 * Val(32))) +
             (x14 * Val(64)));
  Val x31 =
      ((((((x30 + (x15 * Val(128))) + (x16 * Val(256))) + (x17 * Val(512))) + (x18 * Val(1024))) +
        (x19 * Val(2048))) +
       (x20 * Val(4096)));
  Val x32 = ((((((x31 + (x21 * Val(8192))) + (x22 * Val(16384))) + (x23 * Val(32768))) +
               (x24 * Val(65536))) +
              (x25 * Val(131072))) +
             (x26 * Val(262144)));
  EQZ(((((x32 + (x27 * Val(524288))) + (x28 * Val(1048576))) + (x29 * Val(2097152))) - x5),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:258)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x33 = x4[13]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:261)
  ToBits_21_Struct x34 = exec_ToBits_21_(ctx, x33, LAYOUT_LOOKUP(layout2, unpackM2));
  NondetRegStruct21Array x35 = x34._super;
  Val x36 = x35[0]._super;
  Val x37 = x35[1]._super;
  Val x38 = x35[2]._super;
  Val x39 = x35[3]._super;
  Val x40 = x35[4]._super;
  Val x41 = x35[5]._super;
  Val x42 = x35[6]._super;
  Val x43 = x35[7]._super;
  Val x44 = x35[8]._super;
  Val x45 = x35[9]._super;
  Val x46 = x35[10]._super;
  Val x47 = x35[11]._super;
  Val x48 = x35[12]._super;
  Val x49 = x35[13]._super;
  Val x50 = x35[14]._super;
  Val x51 = x35[15]._super;
  Val x52 = x35[16]._super;
  Val x53 = x35[17]._super;
  Val x54 = x35[18]._super;
  Val x55 = x35[19]._super;
  Val x56 = x35[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:262)
  Val x57 = ((((((x36 + (x37 * Val(2))) + (x38 * Val(4))) + (x39 * Val(8))) + (x40 * Val(16))) +
              (x41 * Val(32))) +
             (x42 * Val(64)));
  Val x58 =
      ((((((x57 + (x43 * Val(128))) + (x44 * Val(256))) + (x45 * Val(512))) + (x46 * Val(1024))) +
        (x47 * Val(2048))) +
       (x48 * Val(4096)));
  Val x59 = ((((((x58 + (x49 * Val(8192))) + (x50 * Val(16384))) + (x51 * Val(32768))) +
               (x52 * Val(65536))) +
              (x53 * Val(131072))) +
             (x54 * Val(262144)));
  EQZ((((x59 + (x55 * Val(524288))) + (x56 * Val(1048576))) - x33),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:262)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x60 = x4[14]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:266)
  ToBits_21_Struct x61 = exec_ToBits_21_(ctx, x60, LAYOUT_LOOKUP(layout2, unpackM3));
  NondetRegStruct21Array x62 = x61._super;
  Val x63 = x62[0]._super;
  Val x64 = x62[1]._super;
  Val x65 = x62[2]._super;
  Val x66 = x62[3]._super;
  Val x67 = x62[4]._super;
  Val x68 = x62[5]._super;
  Val x69 = x62[6]._super;
  Val x70 = x62[7]._super;
  Val x71 = x62[8]._super;
  Val x72 = x62[9]._super;
  Val x73 = x62[10]._super;
  Val x74 = x62[11]._super;
  Val x75 = x62[12]._super;
  Val x76 = x62[13]._super;
  Val x77 = x62[14]._super;
  Val x78 = x62[15]._super;
  Val x79 = x62[16]._super;
  Val x80 = x62[17]._super;
  Val x81 = x62[18]._super;
  Val x82 = x62[19]._super;
  Val x83 = x62[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:267)
  Val x84 = ((((((x63 + (x64 * Val(2))) + (x65 * Val(4))) + (x66 * Val(8))) + (x67 * Val(16))) +
              (x68 * Val(32))) +
             (x69 * Val(64)));
  Val x85 =
      ((((((x84 + (x70 * Val(128))) + (x71 * Val(256))) + (x72 * Val(512))) + (x73 * Val(1024))) +
        (x74 * Val(2048))) +
       (x75 * Val(4096)));
  Val x86 = ((((((x85 + (x76 * Val(8192))) + (x77 * Val(16384))) + (x78 * Val(32768))) +
               (x79 * Val(65536))) +
              (x80 * Val(131072))) +
             (x81 * Val(262144)));
  EQZ((((x86 + (x82 * Val(524288))) + (x83 * Val(1048576))) - x60),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:267)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x87 = x4[18]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:271)
  ToBits_22_Struct x88 = exec_ToBits_22_(ctx, x87, LAYOUT_LOOKUP(layout2, unpackP1));
  NondetRegStruct22Array x89 = x88._super;
  Val x90 = x89[0]._super;
  Val x91 = x89[1]._super;
  Val x92 = x89[2]._super;
  Val x93 = x89[3]._super;
  Val x94 = x89[4]._super;
  Val x95 = x89[5]._super;
  Val x96 = x89[6]._super;
  Val x97 = x89[7]._super;
  Val x98 = x89[8]._super;
  Val x99 = x89[9]._super;
  Val x100 = x89[10]._super;
  Val x101 = x89[11]._super;
  Val x102 = x89[12]._super;
  Val x103 = x89[13]._super;
  Val x104 = x89[14]._super;
  Val x105 = x89[15]._super;
  Val x106 = x89[16]._super;
  Val x107 = x89[17]._super;
  Val x108 = x89[18]._super;
  Val x109 = x89[19]._super;
  Val x110 = x89[20]._super;
  Val x111 = x89[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:272)
  Val x112 = ((((((x90 + (x91 * Val(2))) + (x92 * Val(4))) + (x93 * Val(8))) + (x94 * Val(16))) +
               (x95 * Val(32))) +
              (x96 * Val(64)));
  Val x113 =
      ((((((x112 + (x97 * Val(128))) + (x98 * Val(256))) + (x99 * Val(512))) + (x100 * Val(1024))) +
        (x101 * Val(2048))) +
       (x102 * Val(4096)));
  Val x114 = ((((((x113 + (x103 * Val(8192))) + (x104 * Val(16384))) + (x105 * Val(32768))) +
                (x106 * Val(65536))) +
               (x107 * Val(131072))) +
              (x108 * Val(262144)));
  EQZ(((((x114 + (x109 * Val(524288))) + (x110 * Val(1048576))) + (x111 * Val(2097152))) - x87),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:272)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x115 = x4[19]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:275)
  ToBits_21_Struct x116 = exec_ToBits_21_(ctx, x115, LAYOUT_LOOKUP(layout2, unpackP2));
  NondetRegStruct21Array x117 = x116._super;
  Val x118 = x117[0]._super;
  Val x119 = x117[1]._super;
  Val x120 = x117[2]._super;
  Val x121 = x117[3]._super;
  Val x122 = x117[4]._super;
  Val x123 = x117[5]._super;
  Val x124 = x117[6]._super;
  Val x125 = x117[7]._super;
  Val x126 = x117[8]._super;
  Val x127 = x117[9]._super;
  Val x128 = x117[10]._super;
  Val x129 = x117[11]._super;
  Val x130 = x117[12]._super;
  Val x131 = x117[13]._super;
  Val x132 = x117[14]._super;
  Val x133 = x117[15]._super;
  Val x134 = x117[16]._super;
  Val x135 = x117[17]._super;
  Val x136 = x117[18]._super;
  Val x137 = x117[19]._super;
  Val x138 = x117[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:276)
  Val x139 =
      ((((((x118 + (x119 * Val(2))) + (x120 * Val(4))) + (x121 * Val(8))) + (x122 * Val(16))) +
        (x123 * Val(32))) +
       (x124 * Val(64)));
  Val x140 = ((((((x139 + (x125 * Val(128))) + (x126 * Val(256))) + (x127 * Val(512))) +
                (x128 * Val(1024))) +
               (x129 * Val(2048))) +
              (x130 * Val(4096)));
  Val x141 = ((((((x140 + (x131 * Val(8192))) + (x132 * Val(16384))) + (x133 * Val(32768))) +
                (x134 * Val(65536))) +
               (x135 * Val(131072))) +
              (x136 * Val(262144)));
  EQZ((((x141 + (x137 * Val(524288))) + (x138 * Val(1048576))) - x115),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:276)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x142 = x4[20]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:279)
  ToBits_21_Struct x143 = exec_ToBits_21_(ctx, x142, LAYOUT_LOOKUP(layout2, unpackP3));
  NondetRegStruct21Array x144 = x143._super;
  Val x145 = x144[0]._super;
  Val x146 = x144[1]._super;
  Val x147 = x144[2]._super;
  Val x148 = x144[3]._super;
  Val x149 = x144[4]._super;
  Val x150 = x144[5]._super;
  Val x151 = x144[6]._super;
  Val x152 = x144[7]._super;
  Val x153 = x144[8]._super;
  Val x154 = x144[9]._super;
  Val x155 = x144[10]._super;
  Val x156 = x144[11]._super;
  Val x157 = x144[12]._super;
  Val x158 = x144[13]._super;
  Val x159 = x144[14]._super;
  Val x160 = x144[15]._super;
  Val x161 = x144[16]._super;
  Val x162 = x144[17]._super;
  Val x163 = x144[18]._super;
  Val x164 = x144[19]._super;
  Val x165 = x144[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:280)
  Val x166 =
      ((((((x145 + (x146 * Val(2))) + (x147 * Val(4))) + (x148 * Val(8))) + (x149 * Val(16))) +
        (x150 * Val(32))) +
       (x151 * Val(64)));
  Val x167 = ((((((x166 + (x152 * Val(128))) + (x153 * Val(256))) + (x154 * Val(512))) +
                (x155 * Val(1024))) +
               (x156 * Val(2048))) +
              (x157 * Val(4096)));
  Val x168 = ((((((x167 + (x158 * Val(8192))) + (x159 * Val(16384))) + (x160 * Val(32768))) +
                (x161 * Val(65536))) +
               (x162 * Val(131072))) +
              (x163 * Val(262144)));
  EQZ((((x168 + (x164 * Val(524288))) + (x165 * Val(1048576))) - x142),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:280)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:287)
  RetTupleStruct x169 =
      exec_RetTuple(ctx,
                    Val22Array{x165, x90,  x91,  x92,  x93,  x94,  x95,  x96,  x97,  x98,  x99,
                               x100, x101, x102, x103, x104, x105, x106, x107, x108, x109, x110},
                    Val22Array{x111, x118, x119, x120, x121, x122, x123, x124, x125, x126, x127,
                               x128, x129, x130, x131, x132, x133, x134, x135, x136, x137, Val(0)},
                    Val22Array{x138, x145, x146, x147, x148, x149, x150, x151, x152, x153, x154,
                               x155, x156, x157, x158, x159, x160, x161, x162, x163, x164, Val(0)},
                    Val24Array{x8,  x9,  x10, x11, x12, x13, x14, x15, x16, x17, x18,    x19,
                               x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, Val(0), Val(0)},
                    Val22Array{x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46,
                               x47, x48, x49, x50, x51, x52, x53, x54, x55, x56, Val(0)},
                    Val22Array{x63, x64, x65, x66, x67, x68, x69, x70, x71, x72, x73,
                               x74, x75, x76, x77, x78, x79, x80, x81, x82, x83, Val(0)},
                    Val(4),
                    Val(5),
                    x3.rnd._super,
                    x3.blk._super,
                    x3.midx._super,
                    LAYOUT_LOOKUP(layout2, _super));
  return x169;
}
RetTupleStruct execRhoMinor1_2__0_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<RhoMinor1_2__0_Layout> layout2) {
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:341)
  BoundLayout<RhoMinor1_2__0__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:292)
  RetTupleStruct x4 = back_RetTuple(ctx, 5, arg1);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  RetTupleStruct x5 = back_RetTuple(ctx, 1, arg1);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:292)
  NondetRegStruct22Array x6 = x4.arrA;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:297)
  Val x7 = x6[6]._super;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:304)
  ToBits_22_Struct x8 = exec_ToBits_22_(ctx, x7, LAYOUT_LOOKUP(layout2, unpackXy1));
  NondetRegStruct22Array x9 = x8._super;
  Val x10 = x9[0]._super;
  Val x11 = x9[1]._super;
  Val x12 = x9[2]._super;
  Val x13 = x9[3]._super;
  Val x14 = x9[4]._super;
  Val x15 = x9[5]._super;
  Val x16 = x9[6]._super;
  Val x17 = x9[7]._super;
  Val x18 = x9[8]._super;
  Val x19 = x9[9]._super;
  Val x20 = x9[10]._super;
  Val x21 = x9[11]._super;
  Val x22 = x9[12]._super;
  Val x23 = x9[13]._super;
  Val x24 = x9[14]._super;
  Val x25 = x9[15]._super;
  Val x26 = x9[16]._super;
  Val x27 = x9[17]._super;
  Val x28 = x9[18]._super;
  Val x29 = x9[19]._super;
  Val x30 = x9[20]._super;
  Val x31 = x9[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:305)
  Val x32 = ((((((x10 + (x11 * Val(2))) + (x12 * Val(4))) + (x13 * Val(8))) + (x14 * Val(16))) +
              (x15 * Val(32))) +
             (x16 * Val(64)));
  Val x33 =
      ((((((x32 + (x17 * Val(128))) + (x18 * Val(256))) + (x19 * Val(512))) + (x20 * Val(1024))) +
        (x21 * Val(2048))) +
       (x22 * Val(4096)));
  Val x34 = ((((((x33 + (x23 * Val(8192))) + (x24 * Val(16384))) + (x25 * Val(32768))) +
               (x26 * Val(65536))) +
              (x27 * Val(131072))) +
             (x28 * Val(262144)));
  EQZ(((((x34 + (x29 * Val(524288))) + (x30 * Val(1048576))) + (x31 * Val(2097152))) - x7),
      "rho_minor1(zirgen/circuit/keccak/keccak.zir:305)");
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:309)
  Val x35 = x6[7]._super;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:316)
  ToBits_21_Struct x36 = exec_ToBits_21_(ctx, x35, LAYOUT_LOOKUP(layout2, unpackXy2));
  NondetRegStruct21Array x37 = x36._super;
  Val x38 = x37[0]._super;
  Val x39 = x37[1]._super;
  Val x40 = x37[2]._super;
  Val x41 = x37[3]._super;
  Val x42 = x37[4]._super;
  Val x43 = x37[5]._super;
  Val x44 = x37[6]._super;
  Val x45 = x37[7]._super;
  Val x46 = x37[8]._super;
  Val x47 = x37[9]._super;
  Val x48 = x37[10]._super;
  Val x49 = x37[11]._super;
  Val x50 = x37[12]._super;
  Val x51 = x37[13]._super;
  Val x52 = x37[14]._super;
  Val x53 = x37[15]._super;
  Val x54 = x37[16]._super;
  Val x55 = x37[17]._super;
  Val x56 = x37[18]._super;
  Val x57 = x37[19]._super;
  Val x58 = x37[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:317)
  Val x59 = ((((((x38 + (x39 * Val(2))) + (x40 * Val(4))) + (x41 * Val(8))) + (x42 * Val(16))) +
              (x43 * Val(32))) +
             (x44 * Val(64)));
  Val x60 =
      ((((((x59 + (x45 * Val(128))) + (x46 * Val(256))) + (x47 * Val(512))) + (x48 * Val(1024))) +
        (x49 * Val(2048))) +
       (x50 * Val(4096)));
  Val x61 = ((((((x60 + (x51 * Val(8192))) + (x52 * Val(16384))) + (x53 * Val(32768))) +
               (x54 * Val(65536))) +
              (x55 * Val(131072))) +
             (x56 * Val(262144)));
  EQZ((((x61 + (x57 * Val(524288))) + (x58 * Val(1048576))) - x35),
      "rho_minor1(zirgen/circuit/keccak/keccak.zir:317)");
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:321)
  Val x62 = x6[8]._super;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:328)
  ToBits_21_Struct x63 = exec_ToBits_21_(ctx, x62, LAYOUT_LOOKUP(layout2, unpackXy3));
  NondetRegStruct21Array x64 = x63._super;
  Val x65 = x64[0]._super;
  Val x66 = x64[1]._super;
  Val x67 = x64[2]._super;
  Val x68 = x64[3]._super;
  Val x69 = x64[4]._super;
  Val x70 = x64[5]._super;
  Val x71 = x64[6]._super;
  Val x72 = x64[7]._super;
  Val x73 = x64[8]._super;
  Val x74 = x64[9]._super;
  Val x75 = x64[10]._super;
  Val x76 = x64[11]._super;
  Val x77 = x64[12]._super;
  Val x78 = x64[13]._super;
  Val x79 = x64[14]._super;
  Val x80 = x64[15]._super;
  Val x81 = x64[16]._super;
  Val x82 = x64[17]._super;
  Val x83 = x64[18]._super;
  Val x84 = x64[19]._super;
  Val x85 = x64[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:329)
  Val x86 = ((((((x65 + (x66 * Val(2))) + (x67 * Val(4))) + (x68 * Val(8))) + (x69 * Val(16))) +
              (x70 * Val(32))) +
             (x71 * Val(64)));
  Val x87 =
      ((((((x86 + (x72 * Val(128))) + (x73 * Val(256))) + (x74 * Val(512))) + (x75 * Val(1024))) +
        (x76 * Val(2048))) +
       (x77 * Val(4096)));
  Val x88 = ((((((x87 + (x78 * Val(8192))) + (x79 * Val(16384))) + (x80 * Val(32768))) +
               (x81 * Val(65536))) +
              (x82 * Val(131072))) +
             (x83 * Val(262144)));
  EQZ((((x88 + (x84 * Val(524288))) + (x85 * Val(1048576))) - x62),
      "rho_minor1(zirgen/circuit/keccak/keccak.zir:329)");
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  NondetRegStruct22Array x89 = x5.arrA;
  NondetRegStruct24Array x90 = x5.arrD;
  Val x91 = x89[0]._super;
  Val x92 = x90[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x93 = ((x10 * x91) + ((Val(1) - x10) * (Val(1) - x91)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x94 = x89[1]._super;
  Val x95 = x90[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x96 = ((x11 * x94) + ((Val(1) - x11) * (Val(1) - x94)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x97 = x89[2]._super;
  Val x98 = x90[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x99 = ((x12 * x97) + ((Val(1) - x12) * (Val(1) - x97)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x100 = x89[3]._super;
  Val x101 = x90[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x102 = ((x13 * x100) + ((Val(1) - x13) * (Val(1) - x100)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x103 = x89[4]._super;
  Val x104 = x90[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x105 = ((x14 * x103) + ((Val(1) - x14) * (Val(1) - x103)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x106 = x89[5]._super;
  Val x107 = x90[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x108 = ((x15 * x106) + ((Val(1) - x15) * (Val(1) - x106)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x109 = x89[6]._super;
  Val x110 = x90[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x111 = ((x16 * x109) + ((Val(1) - x16) * (Val(1) - x109)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x112 = x89[7]._super;
  Val x113 = x90[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x114 = ((x17 * x112) + ((Val(1) - x17) * (Val(1) - x112)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x115 = x89[8]._super;
  Val x116 = x90[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x117 = ((x18 * x115) + ((Val(1) - x18) * (Val(1) - x115)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x118 = x89[9]._super;
  Val x119 = x90[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x120 = ((x19 * x118) + ((Val(1) - x19) * (Val(1) - x118)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x121 = x89[10]._super;
  Val x122 = x90[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x123 = ((x20 * x121) + ((Val(1) - x20) * (Val(1) - x121)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x124 = x89[11]._super;
  Val x125 = x90[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x126 = ((x21 * x124) + ((Val(1) - x21) * (Val(1) - x124)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x127 = x89[12]._super;
  Val x128 = x90[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x129 = ((x22 * x127) + ((Val(1) - x22) * (Val(1) - x127)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x130 = x89[13]._super;
  Val x131 = x90[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x132 = ((x23 * x130) + ((Val(1) - x23) * (Val(1) - x130)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x133 = x89[14]._super;
  Val x134 = x90[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x135 = ((x24 * x133) + ((Val(1) - x24) * (Val(1) - x133)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x136 = x89[15]._super;
  Val x137 = x90[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x138 = ((x25 * x136) + ((Val(1) - x25) * (Val(1) - x136)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x139 = x89[16]._super;
  Val x140 = x90[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x141 = ((x26 * x139) + ((Val(1) - x26) * (Val(1) - x139)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x142 = x89[17]._super;
  Val x143 = x90[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x144 = ((x27 * x142) + ((Val(1) - x27) * (Val(1) - x142)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x145 = x89[18]._super;
  Val x146 = x90[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x147 = ((x28 * x145) + ((Val(1) - x28) * (Val(1) - x145)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x148 = x89[19]._super;
  Val x149 = x90[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x150 = ((x29 * x148) + ((Val(1) - x29) * (Val(1) - x148)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x151 = x89[20]._super;
  Val x152 = x90[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x153 = ((x30 * x151) + ((Val(1) - x30) * (Val(1) - x151)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x154 = x89[21]._super;
  Val x155 = x90[21]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x156 = ((x31 * x154) + ((Val(1) - x31) * (Val(1) - x154)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  NondetRegStruct22Array x157 = x5.arrB;
  NondetRegStruct22Array x158 = x5.arrE;
  Val x159 = x157[0]._super;
  Val x160 = x158[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x161 = ((x38 * x159) + ((Val(1) - x38) * (Val(1) - x159)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x162 = x157[1]._super;
  Val x163 = x158[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x164 = ((x39 * x162) + ((Val(1) - x39) * (Val(1) - x162)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x165 = x157[2]._super;
  Val x166 = x158[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x167 = ((x40 * x165) + ((Val(1) - x40) * (Val(1) - x165)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x168 = x157[3]._super;
  Val x169 = x158[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x170 = ((x41 * x168) + ((Val(1) - x41) * (Val(1) - x168)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x171 = x157[4]._super;
  Val x172 = x158[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x173 = ((x42 * x171) + ((Val(1) - x42) * (Val(1) - x171)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x174 = x157[5]._super;
  Val x175 = x158[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x176 = ((x43 * x174) + ((Val(1) - x43) * (Val(1) - x174)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x177 = x157[6]._super;
  Val x178 = x158[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x179 = ((x44 * x177) + ((Val(1) - x44) * (Val(1) - x177)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x180 = x157[7]._super;
  Val x181 = x158[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x182 = ((x45 * x180) + ((Val(1) - x45) * (Val(1) - x180)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x183 = x157[8]._super;
  Val x184 = x158[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x185 = ((x46 * x183) + ((Val(1) - x46) * (Val(1) - x183)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x186 = x157[9]._super;
  Val x187 = x158[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x188 = ((x47 * x186) + ((Val(1) - x47) * (Val(1) - x186)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x189 = x157[10]._super;
  Val x190 = x158[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x191 = ((x48 * x189) + ((Val(1) - x48) * (Val(1) - x189)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x192 = x157[11]._super;
  Val x193 = x158[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x194 = ((x49 * x192) + ((Val(1) - x49) * (Val(1) - x192)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x195 = x157[12]._super;
  Val x196 = x158[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x197 = ((x50 * x195) + ((Val(1) - x50) * (Val(1) - x195)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x198 = x157[13]._super;
  Val x199 = x158[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x200 = ((x51 * x198) + ((Val(1) - x51) * (Val(1) - x198)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x201 = x157[14]._super;
  Val x202 = x158[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x203 = ((x52 * x201) + ((Val(1) - x52) * (Val(1) - x201)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x204 = x157[15]._super;
  Val x205 = x158[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x206 = ((x53 * x204) + ((Val(1) - x53) * (Val(1) - x204)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x207 = x157[16]._super;
  Val x208 = x158[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x209 = ((x54 * x207) + ((Val(1) - x54) * (Val(1) - x207)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x210 = x157[17]._super;
  Val x211 = x158[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x212 = ((x55 * x210) + ((Val(1) - x55) * (Val(1) - x210)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x213 = x157[18]._super;
  Val x214 = x158[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x215 = ((x56 * x213) + ((Val(1) - x56) * (Val(1) - x213)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x216 = x157[19]._super;
  Val x217 = x158[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x218 = ((x57 * x216) + ((Val(1) - x57) * (Val(1) - x216)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x219 = x157[20]._super;
  Val x220 = x158[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x221 = ((x58 * x219) + ((Val(1) - x58) * (Val(1) - x219)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  NondetRegStruct22Array x222 = x5.arrC;
  NondetRegStruct22Array x223 = x5.arrF;
  Val x224 = x222[0]._super;
  Val x225 = x223[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x226 = ((x65 * x224) + ((Val(1) - x65) * (Val(1) - x224)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x227 = x222[1]._super;
  Val x228 = x223[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x229 = ((x66 * x227) + ((Val(1) - x66) * (Val(1) - x227)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x230 = x222[2]._super;
  Val x231 = x223[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x232 = ((x67 * x230) + ((Val(1) - x67) * (Val(1) - x230)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x233 = x222[3]._super;
  Val x234 = x223[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x235 = ((x68 * x233) + ((Val(1) - x68) * (Val(1) - x233)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x236 = x222[4]._super;
  Val x237 = x223[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x238 = ((x69 * x236) + ((Val(1) - x69) * (Val(1) - x236)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x239 = x222[5]._super;
  Val x240 = x223[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x241 = ((x70 * x239) + ((Val(1) - x70) * (Val(1) - x239)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x242 = x222[6]._super;
  Val x243 = x223[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x244 = ((x71 * x242) + ((Val(1) - x71) * (Val(1) - x242)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x245 = x222[7]._super;
  Val x246 = x223[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x247 = ((x72 * x245) + ((Val(1) - x72) * (Val(1) - x245)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x248 = x222[8]._super;
  Val x249 = x223[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x250 = ((x73 * x248) + ((Val(1) - x73) * (Val(1) - x248)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x251 = x222[9]._super;
  Val x252 = x223[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x253 = ((x74 * x251) + ((Val(1) - x74) * (Val(1) - x251)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x254 = x222[10]._super;
  Val x255 = x223[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x256 = ((x75 * x254) + ((Val(1) - x75) * (Val(1) - x254)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x257 = x222[11]._super;
  Val x258 = x223[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x259 = ((x76 * x257) + ((Val(1) - x76) * (Val(1) - x257)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x260 = x222[12]._super;
  Val x261 = x223[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x262 = ((x77 * x260) + ((Val(1) - x77) * (Val(1) - x260)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x263 = x222[13]._super;
  Val x264 = x223[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x265 = ((x78 * x263) + ((Val(1) - x78) * (Val(1) - x263)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x266 = x222[14]._super;
  Val x267 = x223[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x268 = ((x79 * x266) + ((Val(1) - x79) * (Val(1) - x266)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x269 = x222[15]._super;
  Val x270 = x223[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x271 = ((x80 * x269) + ((Val(1) - x80) * (Val(1) - x269)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x272 = x222[16]._super;
  Val x273 = x223[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x274 = ((x81 * x272) + ((Val(1) - x81) * (Val(1) - x272)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x275 = x222[17]._super;
  Val x276 = x223[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x277 = ((x82 * x275) + ((Val(1) - x82) * (Val(1) - x275)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x278 = x222[18]._super;
  Val x279 = x223[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x280 = ((x83 * x278) + ((Val(1) - x83) * (Val(1) - x278)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x281 = x222[19]._super;
  Val x282 = x223[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x283 = ((x84 * x281) + ((Val(1) - x84) * (Val(1) - x281)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x284 = x222[20]._super;
  Val x285 = x223[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x286 = ((x85 * x284) + ((Val(1) - x85) * (Val(1) - x284)));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:336)
  Val x287 = (((x99 * x98) + ((Val(1) - x99) * (Val(1) - x98))) +
              (((x102 * x101) + ((Val(1) - x102) * (Val(1) - x101))) * Val(2)));
  Val x288 = ((x287 + (((x105 * x104) + ((Val(1) - x105) * (Val(1) - x104))) * Val(4))) +
              (((x108 * x107) + ((Val(1) - x108) * (Val(1) - x107))) * Val(8)));
  Val x289 = ((x288 + (((x111 * x110) + ((Val(1) - x111) * (Val(1) - x110))) * Val(16))) +
              (((x114 * x113) + ((Val(1) - x114) * (Val(1) - x113))) * Val(32)));
  Val x290 = ((x289 + (((x117 * x116) + ((Val(1) - x117) * (Val(1) - x116))) * Val(64))) +
              (((x120 * x119) + ((Val(1) - x120) * (Val(1) - x119))) * Val(128)));
  Val x291 = ((x290 + (((x123 * x122) + ((Val(1) - x123) * (Val(1) - x122))) * Val(256))) +
              (((x126 * x125) + ((Val(1) - x126) * (Val(1) - x125))) * Val(512)));
  Val x292 = ((x291 + (((x129 * x128) + ((Val(1) - x129) * (Val(1) - x128))) * Val(1024))) +
              (((x132 * x131) + ((Val(1) - x132) * (Val(1) - x131))) * Val(2048)));
  Val x293 = ((x292 + (((x135 * x134) + ((Val(1) - x135) * (Val(1) - x134))) * Val(4096))) +
              (((x138 * x137) + ((Val(1) - x138) * (Val(1) - x137))) * Val(8192)));
  Val x294 = ((x293 + (((x141 * x140) + ((Val(1) - x141) * (Val(1) - x140))) * Val(16384))) +
              (((x144 * x143) + ((Val(1) - x144) * (Val(1) - x143))) * Val(32768)));
  Val x295 = ((x294 + (((x147 * x146) + ((Val(1) - x147) * (Val(1) - x146))) * Val(65536))) +
              (((x150 * x149) + ((Val(1) - x150) * (Val(1) - x149))) * Val(131072)));
  Val x296 = ((x295 + (((x153 * x152) + ((Val(1) - x153) * (Val(1) - x152))) * Val(262144))) +
              (((x156 * x155) + ((Val(1) - x156) * (Val(1) - x155))) * Val(524288)));
  Val x297 = ((x296 + (((x161 * x160) + ((Val(1) - x161) * (Val(1) - x160))) * Val(1048576))) +
              (((x164 * x163) + ((Val(1) - x164) * (Val(1) - x163))) * Val(2097152)));
  NondetRegStruct x298 = exec_Reg(ctx, x297, LAYOUT_LOOKUP(layout2, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:337)
  Val x299 = (((x167 * x166) + ((Val(1) - x167) * (Val(1) - x166))) +
              (((x170 * x169) + ((Val(1) - x170) * (Val(1) - x169))) * Val(2)));
  Val x300 = ((x299 + (((x173 * x172) + ((Val(1) - x173) * (Val(1) - x172))) * Val(4))) +
              (((x176 * x175) + ((Val(1) - x176) * (Val(1) - x175))) * Val(8)));
  Val x301 = ((x300 + (((x179 * x178) + ((Val(1) - x179) * (Val(1) - x178))) * Val(16))) +
              (((x182 * x181) + ((Val(1) - x182) * (Val(1) - x181))) * Val(32)));
  Val x302 = ((x301 + (((x185 * x184) + ((Val(1) - x185) * (Val(1) - x184))) * Val(64))) +
              (((x188 * x187) + ((Val(1) - x188) * (Val(1) - x187))) * Val(128)));
  Val x303 = ((x302 + (((x191 * x190) + ((Val(1) - x191) * (Val(1) - x190))) * Val(256))) +
              (((x194 * x193) + ((Val(1) - x194) * (Val(1) - x193))) * Val(512)));
  Val x304 = ((x303 + (((x197 * x196) + ((Val(1) - x197) * (Val(1) - x196))) * Val(1024))) +
              (((x200 * x199) + ((Val(1) - x200) * (Val(1) - x199))) * Val(2048)));
  Val x305 = ((x304 + (((x203 * x202) + ((Val(1) - x203) * (Val(1) - x202))) * Val(4096))) +
              (((x206 * x205) + ((Val(1) - x206) * (Val(1) - x205))) * Val(8192)));
  Val x306 = ((x305 + (((x209 * x208) + ((Val(1) - x209) * (Val(1) - x208))) * Val(16384))) +
              (((x212 * x211) + ((Val(1) - x212) * (Val(1) - x211))) * Val(32768)));
  Val x307 = ((x306 + (((x215 * x214) + ((Val(1) - x215) * (Val(1) - x214))) * Val(65536))) +
              (((x218 * x217) + ((Val(1) - x218) * (Val(1) - x217))) * Val(131072)));
  Val x308 = ((x307 + (((x221 * x220) + ((Val(1) - x221) * (Val(1) - x220))) * Val(262144))) +
              (((x226 * x225) + ((Val(1) - x226) * (Val(1) - x225))) * Val(524288)));
  NondetRegStruct x309 =
      exec_Reg(ctx,
               (x308 + (((x229 * x228) + ((Val(1) - x229) * (Val(1) - x228))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _1));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:338)
  Val x310 = (((x232 * x231) + ((Val(1) - x232) * (Val(1) - x231))) +
              (((x235 * x234) + ((Val(1) - x235) * (Val(1) - x234))) * Val(2)));
  Val x311 = ((x310 + (((x238 * x237) + ((Val(1) - x238) * (Val(1) - x237))) * Val(4))) +
              (((x241 * x240) + ((Val(1) - x241) * (Val(1) - x240))) * Val(8)));
  Val x312 = ((x311 + (((x244 * x243) + ((Val(1) - x244) * (Val(1) - x243))) * Val(16))) +
              (((x247 * x246) + ((Val(1) - x247) * (Val(1) - x246))) * Val(32)));
  Val x313 = ((x312 + (((x250 * x249) + ((Val(1) - x250) * (Val(1) - x249))) * Val(64))) +
              (((x253 * x252) + ((Val(1) - x253) * (Val(1) - x252))) * Val(128)));
  Val x314 = ((x313 + (((x256 * x255) + ((Val(1) - x256) * (Val(1) - x255))) * Val(256))) +
              (((x259 * x258) + ((Val(1) - x259) * (Val(1) - x258))) * Val(512)));
  Val x315 = ((x314 + (((x262 * x261) + ((Val(1) - x262) * (Val(1) - x261))) * Val(1024))) +
              (((x265 * x264) + ((Val(1) - x265) * (Val(1) - x264))) * Val(2048)));
  Val x316 = ((x315 + (((x268 * x267) + ((Val(1) - x268) * (Val(1) - x267))) * Val(4096))) +
              (((x271 * x270) + ((Val(1) - x271) * (Val(1) - x270))) * Val(8192)));
  Val x317 = ((x316 + (((x274 * x273) + ((Val(1) - x274) * (Val(1) - x273))) * Val(16384))) +
              (((x277 * x276) + ((Val(1) - x277) * (Val(1) - x276))) * Val(32768)));
  Val x318 = ((x317 + (((x280 * x279) + ((Val(1) - x280) * (Val(1) - x279))) * Val(65536))) +
              (((x283 * x282) + ((Val(1) - x283) * (Val(1) - x282))) * Val(131072)));
  Val x319 = ((x318 + (((x286 * x285) + ((Val(1) - x286) * (Val(1) - x285))) * Val(262144))) +
              (((x93 * x92) + ((Val(1) - x93) * (Val(1) - x92))) * Val(524288)));
  NondetRegStruct x320 =
      exec_Reg(ctx,
               (x319 + (((x96 * x95) + ((Val(1) - x96) * (Val(1) - x95))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _2));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:341)
  BoundLayout<RhoMinor1_2__0_Arm1_SuperLayout> x321 = LAYOUT_LOOKUP(x3, arm1);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:342)
  Val22Array x322 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  Val24Array x323 = Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:339)
  Val22Array x324 =
      Val22Array{x298._super, x309._super, x320._super, Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0)};
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x325 = x5.rnd._super;
  Val x326 = x5.blk._super;
  Val x327 = x5.midx._super;
  if (to_size_t(Val(0))) {
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:342)
    RetTupleStruct x328 = exec_RetTuple(ctx,
                                        x322,
                                        x322,
                                        x322,
                                        x323,
                                        x322,
                                        x324,
                                        Val(8),
                                        Val(5),
                                        x325,
                                        x326,
                                        x327,
                                        LAYOUT_LOOKUP(x3, arm0));
  }
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:292)
  NondetRegStruct24Array x329 = x4.arrD;
  Val x330 = x329[15]._super;
  Val x331 = x329[16]._super;
  Val x332 = x329[17]._super;
  if (to_size_t(Val(1))) {
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:345)
    ToBits_22_Struct x333 = exec_ToBits_22_(ctx, x330, LAYOUT_LOOKUP(x321, unpackM1));
    NondetRegStruct22Array x334 = x333._super;
    Val x335 = x334[0]._super;
    Val x336 = x334[1]._super;
    Val x337 = x334[2]._super;
    Val x338 = x334[3]._super;
    Val x339 = x334[4]._super;
    Val x340 = x334[5]._super;
    Val x341 = x334[6]._super;
    Val x342 = x334[7]._super;
    Val x343 = x334[8]._super;
    Val x344 = x334[9]._super;
    Val x345 = x334[10]._super;
    Val x346 = x334[11]._super;
    Val x347 = x334[12]._super;
    Val x348 = x334[13]._super;
    Val x349 = x334[14]._super;
    Val x350 = x334[15]._super;
    Val x351 = x334[16]._super;
    Val x352 = x334[17]._super;
    Val x353 = x334[18]._super;
    Val x354 = x334[19]._super;
    Val x355 = x334[20]._super;
    Val x356 = x334[21]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:346)
    Val x357 =
        ((((((x335 + (x336 * Val(2))) + (x337 * Val(4))) + (x338 * Val(8))) + (x339 * Val(16))) +
          (x340 * Val(32))) +
         (x341 * Val(64)));
    Val x358 = ((((((x357 + (x342 * Val(128))) + (x343 * Val(256))) + (x344 * Val(512))) +
                  (x345 * Val(1024))) +
                 (x346 * Val(2048))) +
                (x347 * Val(4096)));
    Val x359 = ((((((x358 + (x348 * Val(8192))) + (x349 * Val(16384))) + (x350 * Val(32768))) +
                  (x351 * Val(65536))) +
                 (x352 * Val(131072))) +
                (x353 * Val(262144)));
    EQZ(((((x359 + (x354 * Val(524288))) + (x355 * Val(1048576))) + (x356 * Val(2097152))) - x330),
        "rho_minor1(zirgen/circuit/keccak/keccak.zir:346)");
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:349)
    ToBits_21_Struct x360 = exec_ToBits_21_(ctx, x331, LAYOUT_LOOKUP(x321, unpackM2));
    NondetRegStruct21Array x361 = x360._super;
    Val x362 = x361[0]._super;
    Val x363 = x361[1]._super;
    Val x364 = x361[2]._super;
    Val x365 = x361[3]._super;
    Val x366 = x361[4]._super;
    Val x367 = x361[5]._super;
    Val x368 = x361[6]._super;
    Val x369 = x361[7]._super;
    Val x370 = x361[8]._super;
    Val x371 = x361[9]._super;
    Val x372 = x361[10]._super;
    Val x373 = x361[11]._super;
    Val x374 = x361[12]._super;
    Val x375 = x361[13]._super;
    Val x376 = x361[14]._super;
    Val x377 = x361[15]._super;
    Val x378 = x361[16]._super;
    Val x379 = x361[17]._super;
    Val x380 = x361[18]._super;
    Val x381 = x361[19]._super;
    Val x382 = x361[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:350)
    Val x383 =
        ((((((x362 + (x363 * Val(2))) + (x364 * Val(4))) + (x365 * Val(8))) + (x366 * Val(16))) +
          (x367 * Val(32))) +
         (x368 * Val(64)));
    Val x384 = ((((((x383 + (x369 * Val(128))) + (x370 * Val(256))) + (x371 * Val(512))) +
                  (x372 * Val(1024))) +
                 (x373 * Val(2048))) +
                (x374 * Val(4096)));
    Val x385 = ((((((x384 + (x375 * Val(8192))) + (x376 * Val(16384))) + (x377 * Val(32768))) +
                  (x378 * Val(65536))) +
                 (x379 * Val(131072))) +
                (x380 * Val(262144)));
    EQZ((((x385 + (x381 * Val(524288))) + (x382 * Val(1048576))) - x331),
        "rho_minor1(zirgen/circuit/keccak/keccak.zir:350)");
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:354)
    ToBits_21_Struct x386 = exec_ToBits_21_(ctx, x332, LAYOUT_LOOKUP(x321, unpackM3));
    NondetRegStruct21Array x387 = x386._super;
    Val x388 = x387[0]._super;
    Val x389 = x387[1]._super;
    Val x390 = x387[2]._super;
    Val x391 = x387[3]._super;
    Val x392 = x387[4]._super;
    Val x393 = x387[5]._super;
    Val x394 = x387[6]._super;
    Val x395 = x387[7]._super;
    Val x396 = x387[8]._super;
    Val x397 = x387[9]._super;
    Val x398 = x387[10]._super;
    Val x399 = x387[11]._super;
    Val x400 = x387[12]._super;
    Val x401 = x387[13]._super;
    Val x402 = x387[14]._super;
    Val x403 = x387[15]._super;
    Val x404 = x387[16]._super;
    Val x405 = x387[17]._super;
    Val x406 = x387[18]._super;
    Val x407 = x387[19]._super;
    Val x408 = x387[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:355)
    Val x409 =
        ((((((x388 + (x389 * Val(2))) + (x390 * Val(4))) + (x391 * Val(8))) + (x392 * Val(16))) +
          (x393 * Val(32))) +
         (x394 * Val(64)));
    Val x410 = ((((((x409 + (x395 * Val(128))) + (x396 * Val(256))) + (x397 * Val(512))) +
                  (x398 * Val(1024))) +
                 (x399 * Val(2048))) +
                (x400 * Val(4096)));
    Val x411 = ((((((x410 + (x401 * Val(8192))) + (x402 * Val(16384))) + (x403 * Val(32768))) +
                  (x404 * Val(65536))) +
                 (x405 * Val(131072))) +
                (x406 * Val(262144)));
    EQZ((((x411 + (x407 * Val(524288))) + (x408 * Val(1048576))) - x332),
        "rho_minor1(zirgen/circuit/keccak/keccak.zir:355)");
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:358)
    RetTupleStruct x412 = exec_RetTuple(
        ctx,
        Val22Array{x335, x336, x337, x338, x339, x340, x341, x342, x343, x344, x345,
                   x346, x347, x348, x349, x350, x351, x352, x353, x354, x355, x356},
        Val22Array{x362, x363, x364, x365, x366, x367, x368, x369, x370, x371, x372,
                   x373, x374, x375, x376, x377, x378, x379, x380, x381, x382, Val(0)},
        Val22Array{x388, x389, x390, x391, x392, x393, x394, x395, x396, x397, x398,
                   x399, x400, x401, x402, x403, x404, x405, x406, x407, x408, Val(0)},
        x323,
        x322,
        x324,
        Val(5),
        Val(5),
        x325,
        x326,
        x327,
        LAYOUT_LOOKUP(x321, _super));
  }
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:341)
  RetTupleStruct x413 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x413;
}
RetTupleStruct execRhoMinor2_2__0_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<RhoMinor2_2__0_Layout> layout2) {
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:364)
  RetTupleStruct x3 = back_RetTuple(ctx, 6, arg1);
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:364)
  NondetRegStruct24Array x5 = x3.arrD;
  Val x6 = x5[21]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:368)
  ToBits_22_Struct x7 = exec_ToBits_22_(ctx, x6, LAYOUT_LOOKUP(layout2, unpackP1));
  NondetRegStruct22Array x8 = x7._super;
  Val x9 = x8[0]._super;
  Val x10 = x8[1]._super;
  Val x11 = x8[2]._super;
  Val x12 = x8[3]._super;
  Val x13 = x8[4]._super;
  Val x14 = x8[5]._super;
  Val x15 = x8[6]._super;
  Val x16 = x8[7]._super;
  Val x17 = x8[8]._super;
  Val x18 = x8[9]._super;
  Val x19 = x8[10]._super;
  Val x20 = x8[11]._super;
  Val x21 = x8[12]._super;
  Val x22 = x8[13]._super;
  Val x23 = x8[14]._super;
  Val x24 = x8[15]._super;
  Val x25 = x8[16]._super;
  Val x26 = x8[17]._super;
  Val x27 = x8[18]._super;
  Val x28 = x8[19]._super;
  Val x29 = x8[20]._super;
  Val x30 = x8[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:369)
  Val x31 = ((((((x9 + (x10 * Val(2))) + (x11 * Val(4))) + (x12 * Val(8))) + (x13 * Val(16))) +
              (x14 * Val(32))) +
             (x15 * Val(64)));
  Val x32 =
      ((((((x31 + (x16 * Val(128))) + (x17 * Val(256))) + (x18 * Val(512))) + (x19 * Val(1024))) +
        (x20 * Val(2048))) +
       (x21 * Val(4096)));
  Val x33 = ((((((x32 + (x22 * Val(8192))) + (x23 * Val(16384))) + (x24 * Val(32768))) +
               (x25 * Val(65536))) +
              (x26 * Val(131072))) +
             (x27 * Val(262144)));
  EQZ(((((x33 + (x28 * Val(524288))) + (x29 * Val(1048576))) + (x30 * Val(2097152))) - x6),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:369)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:364)
  Val x34 = x5[22]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:372)
  ToBits_21_Struct x35 = exec_ToBits_21_(ctx, x34, LAYOUT_LOOKUP(layout2, unpackP2));
  NondetRegStruct21Array x36 = x35._super;
  Val x37 = x36[0]._super;
  Val x38 = x36[1]._super;
  Val x39 = x36[2]._super;
  Val x40 = x36[3]._super;
  Val x41 = x36[4]._super;
  Val x42 = x36[5]._super;
  Val x43 = x36[6]._super;
  Val x44 = x36[7]._super;
  Val x45 = x36[8]._super;
  Val x46 = x36[9]._super;
  Val x47 = x36[10]._super;
  Val x48 = x36[11]._super;
  Val x49 = x36[12]._super;
  Val x50 = x36[13]._super;
  Val x51 = x36[14]._super;
  Val x52 = x36[15]._super;
  Val x53 = x36[16]._super;
  Val x54 = x36[17]._super;
  Val x55 = x36[18]._super;
  Val x56 = x36[19]._super;
  Val x57 = x36[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:373)
  Val x58 = ((((((x37 + (x38 * Val(2))) + (x39 * Val(4))) + (x40 * Val(8))) + (x41 * Val(16))) +
              (x42 * Val(32))) +
             (x43 * Val(64)));
  Val x59 =
      ((((((x58 + (x44 * Val(128))) + (x45 * Val(256))) + (x46 * Val(512))) + (x47 * Val(1024))) +
        (x48 * Val(2048))) +
       (x49 * Val(4096)));
  Val x60 = ((((((x59 + (x50 * Val(8192))) + (x51 * Val(16384))) + (x52 * Val(32768))) +
               (x53 * Val(65536))) +
              (x54 * Val(131072))) +
             (x55 * Val(262144)));
  EQZ((((x60 + (x56 * Val(524288))) + (x57 * Val(1048576))) - x34),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:373)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:364)
  Val x61 = x5[23]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:376)
  ToBits_21_Struct x62 = exec_ToBits_21_(ctx, x61, LAYOUT_LOOKUP(layout2, unpackP3));
  NondetRegStruct21Array x63 = x62._super;
  Val x64 = x63[0]._super;
  Val x65 = x63[1]._super;
  Val x66 = x63[2]._super;
  Val x67 = x63[3]._super;
  Val x68 = x63[4]._super;
  Val x69 = x63[5]._super;
  Val x70 = x63[6]._super;
  Val x71 = x63[7]._super;
  Val x72 = x63[8]._super;
  Val x73 = x63[9]._super;
  Val x74 = x63[10]._super;
  Val x75 = x63[11]._super;
  Val x76 = x63[12]._super;
  Val x77 = x63[13]._super;
  Val x78 = x63[14]._super;
  Val x79 = x63[15]._super;
  Val x80 = x63[16]._super;
  Val x81 = x63[17]._super;
  Val x82 = x63[18]._super;
  Val x83 = x63[19]._super;
  Val x84 = x63[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:377)
  Val x85 = ((((((x64 + (x65 * Val(2))) + (x66 * Val(4))) + (x67 * Val(8))) + (x68 * Val(16))) +
              (x69 * Val(32))) +
             (x70 * Val(64)));
  Val x86 =
      ((((((x85 + (x71 * Val(128))) + (x72 * Val(256))) + (x73 * Val(512))) + (x74 * Val(1024))) +
        (x75 * Val(2048))) +
       (x76 * Val(4096)));
  Val x87 = ((((((x86 + (x77 * Val(8192))) + (x78 * Val(16384))) + (x79 * Val(32768))) +
               (x80 * Val(65536))) +
              (x81 * Val(131072))) +
             (x82 * Val(262144)));
  EQZ((((x87 + (x83 * Val(524288))) + (x84 * Val(1048576))) - x61),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:377)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:364)
  NondetRegStruct22Array x88 = x3.arrA;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:383)
  Val x89 = x88[9]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:390)
  ToBits_22_Struct x90 = exec_ToBits_22_(ctx, x89, LAYOUT_LOOKUP(layout2, unpackXy1));
  NondetRegStruct22Array x91 = x90._super;
  Val x92 = x91[0]._super;
  Val x93 = x91[1]._super;
  Val x94 = x91[2]._super;
  Val x95 = x91[3]._super;
  Val x96 = x91[4]._super;
  Val x97 = x91[5]._super;
  Val x98 = x91[6]._super;
  Val x99 = x91[7]._super;
  Val x100 = x91[8]._super;
  Val x101 = x91[9]._super;
  Val x102 = x91[10]._super;
  Val x103 = x91[11]._super;
  Val x104 = x91[12]._super;
  Val x105 = x91[13]._super;
  Val x106 = x91[14]._super;
  Val x107 = x91[15]._super;
  Val x108 = x91[16]._super;
  Val x109 = x91[17]._super;
  Val x110 = x91[18]._super;
  Val x111 = x91[19]._super;
  Val x112 = x91[20]._super;
  Val x113 = x91[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:391)
  Val x114 = ((((((x92 + (x93 * Val(2))) + (x94 * Val(4))) + (x95 * Val(8))) + (x96 * Val(16))) +
               (x97 * Val(32))) +
              (x98 * Val(64)));
  Val x115 = ((((((x114 + (x99 * Val(128))) + (x100 * Val(256))) + (x101 * Val(512))) +
                (x102 * Val(1024))) +
               (x103 * Val(2048))) +
              (x104 * Val(4096)));
  Val x116 = ((((((x115 + (x105 * Val(8192))) + (x106 * Val(16384))) + (x107 * Val(32768))) +
                (x108 * Val(65536))) +
               (x109 * Val(131072))) +
              (x110 * Val(262144)));
  EQZ(((((x116 + (x111 * Val(524288))) + (x112 * Val(1048576))) + (x113 * Val(2097152))) - x89),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:391)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:395)
  Val x117 = x88[10]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:402)
  ToBits_21_Struct x118 = exec_ToBits_21_(ctx, x117, LAYOUT_LOOKUP(layout2, unpackXy2));
  NondetRegStruct21Array x119 = x118._super;
  Val x120 = x119[0]._super;
  Val x121 = x119[1]._super;
  Val x122 = x119[2]._super;
  Val x123 = x119[3]._super;
  Val x124 = x119[4]._super;
  Val x125 = x119[5]._super;
  Val x126 = x119[6]._super;
  Val x127 = x119[7]._super;
  Val x128 = x119[8]._super;
  Val x129 = x119[9]._super;
  Val x130 = x119[10]._super;
  Val x131 = x119[11]._super;
  Val x132 = x119[12]._super;
  Val x133 = x119[13]._super;
  Val x134 = x119[14]._super;
  Val x135 = x119[15]._super;
  Val x136 = x119[16]._super;
  Val x137 = x119[17]._super;
  Val x138 = x119[18]._super;
  Val x139 = x119[19]._super;
  Val x140 = x119[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:403)
  Val x141 =
      ((((((x120 + (x121 * Val(2))) + (x122 * Val(4))) + (x123 * Val(8))) + (x124 * Val(16))) +
        (x125 * Val(32))) +
       (x126 * Val(64)));
  Val x142 = ((((((x141 + (x127 * Val(128))) + (x128 * Val(256))) + (x129 * Val(512))) +
                (x130 * Val(1024))) +
               (x131 * Val(2048))) +
              (x132 * Val(4096)));
  Val x143 = ((((((x142 + (x133 * Val(8192))) + (x134 * Val(16384))) + (x135 * Val(32768))) +
                (x136 * Val(65536))) +
               (x137 * Val(131072))) +
              (x138 * Val(262144)));
  EQZ((((x143 + (x139 * Val(524288))) + (x140 * Val(1048576))) - x117),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:403)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:407)
  Val x144 = x88[11]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:414)
  ToBits_21_Struct x145 = exec_ToBits_21_(ctx, x144, LAYOUT_LOOKUP(layout2, unpackXy3));
  NondetRegStruct21Array x146 = x145._super;
  Val x147 = x146[0]._super;
  Val x148 = x146[1]._super;
  Val x149 = x146[2]._super;
  Val x150 = x146[3]._super;
  Val x151 = x146[4]._super;
  Val x152 = x146[5]._super;
  Val x153 = x146[6]._super;
  Val x154 = x146[7]._super;
  Val x155 = x146[8]._super;
  Val x156 = x146[9]._super;
  Val x157 = x146[10]._super;
  Val x158 = x146[11]._super;
  Val x159 = x146[12]._super;
  Val x160 = x146[13]._super;
  Val x161 = x146[14]._super;
  Val x162 = x146[15]._super;
  Val x163 = x146[16]._super;
  Val x164 = x146[17]._super;
  Val x165 = x146[18]._super;
  Val x166 = x146[19]._super;
  Val x167 = x146[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:415)
  Val x168 =
      ((((((x147 + (x148 * Val(2))) + (x149 * Val(4))) + (x150 * Val(8))) + (x151 * Val(16))) +
        (x152 * Val(32))) +
       (x153 * Val(64)));
  Val x169 = ((((((x168 + (x154 * Val(128))) + (x155 * Val(256))) + (x156 * Val(512))) +
                (x157 * Val(1024))) +
               (x158 * Val(2048))) +
              (x159 * Val(4096)));
  Val x170 = ((((((x169 + (x160 * Val(8192))) + (x161 * Val(16384))) + (x162 * Val(32768))) +
                (x163 * Val(65536))) +
               (x164 * Val(131072))) +
              (x165 * Val(262144)));
  EQZ((((x170 + (x166 * Val(524288))) + (x167 * Val(1048576))) - x144),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:415)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  NondetRegStruct22Array x171 = x4.arrA;
  Val x172 = x171[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x173 = ((x92 * x172) + ((Val(1) - x92) * (Val(1) - x172)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x174 = x171[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x175 = ((x93 * x174) + ((Val(1) - x93) * (Val(1) - x174)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x176 = x171[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x177 = ((x94 * x176) + ((Val(1) - x94) * (Val(1) - x176)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x178 = x171[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x179 = ((x95 * x178) + ((Val(1) - x95) * (Val(1) - x178)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x180 = x171[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x181 = ((x96 * x180) + ((Val(1) - x96) * (Val(1) - x180)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x182 = x171[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x183 = ((x97 * x182) + ((Val(1) - x97) * (Val(1) - x182)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x184 = x171[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x185 = ((x98 * x184) + ((Val(1) - x98) * (Val(1) - x184)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x186 = x171[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x187 = ((x99 * x186) + ((Val(1) - x99) * (Val(1) - x186)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x188 = x171[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x189 = ((x100 * x188) + ((Val(1) - x100) * (Val(1) - x188)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x190 = x171[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x191 = ((x101 * x190) + ((Val(1) - x101) * (Val(1) - x190)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x192 = x171[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x193 = ((x102 * x192) + ((Val(1) - x102) * (Val(1) - x192)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x194 = x171[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x195 = ((x103 * x194) + ((Val(1) - x103) * (Val(1) - x194)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x196 = x171[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x197 = ((x104 * x196) + ((Val(1) - x104) * (Val(1) - x196)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x198 = x171[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x199 = ((x105 * x198) + ((Val(1) - x105) * (Val(1) - x198)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x200 = x171[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x201 = ((x106 * x200) + ((Val(1) - x106) * (Val(1) - x200)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x202 = x171[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x203 = ((x107 * x202) + ((Val(1) - x107) * (Val(1) - x202)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x204 = x171[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x205 = ((x108 * x204) + ((Val(1) - x108) * (Val(1) - x204)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x206 = x171[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x207 = ((x109 * x206) + ((Val(1) - x109) * (Val(1) - x206)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x208 = x171[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x209 = ((x110 * x208) + ((Val(1) - x110) * (Val(1) - x208)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x210 = x171[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x211 = ((x111 * x210) + ((Val(1) - x111) * (Val(1) - x210)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x212 = x171[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x213 = ((x112 * x212) + ((Val(1) - x112) * (Val(1) - x212)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x214 = x171[21]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x215 = ((x113 * x214) + ((Val(1) - x113) * (Val(1) - x214)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  NondetRegStruct22Array x216 = x4.arrB;
  Val x217 = x216[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x218 = ((x120 * x217) + ((Val(1) - x120) * (Val(1) - x217)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x219 = x216[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x220 = ((x121 * x219) + ((Val(1) - x121) * (Val(1) - x219)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x221 = x216[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x222 = ((x122 * x221) + ((Val(1) - x122) * (Val(1) - x221)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x223 = x216[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x224 = ((x123 * x223) + ((Val(1) - x123) * (Val(1) - x223)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x225 = x216[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x226 = ((x124 * x225) + ((Val(1) - x124) * (Val(1) - x225)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x227 = x216[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x228 = ((x125 * x227) + ((Val(1) - x125) * (Val(1) - x227)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x229 = x216[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x230 = ((x126 * x229) + ((Val(1) - x126) * (Val(1) - x229)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x231 = x216[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x232 = ((x127 * x231) + ((Val(1) - x127) * (Val(1) - x231)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x233 = x216[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x234 = ((x128 * x233) + ((Val(1) - x128) * (Val(1) - x233)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x235 = x216[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x236 = ((x129 * x235) + ((Val(1) - x129) * (Val(1) - x235)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x237 = x216[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x238 = ((x130 * x237) + ((Val(1) - x130) * (Val(1) - x237)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x239 = x216[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x240 = ((x131 * x239) + ((Val(1) - x131) * (Val(1) - x239)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x241 = x216[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x242 = ((x132 * x241) + ((Val(1) - x132) * (Val(1) - x241)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x243 = x216[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x244 = ((x133 * x243) + ((Val(1) - x133) * (Val(1) - x243)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x245 = x216[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x246 = ((x134 * x245) + ((Val(1) - x134) * (Val(1) - x245)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x247 = x216[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x248 = ((x135 * x247) + ((Val(1) - x135) * (Val(1) - x247)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x249 = x216[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x250 = ((x136 * x249) + ((Val(1) - x136) * (Val(1) - x249)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x251 = x216[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x252 = ((x137 * x251) + ((Val(1) - x137) * (Val(1) - x251)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x253 = x216[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x254 = ((x138 * x253) + ((Val(1) - x138) * (Val(1) - x253)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x255 = x216[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x256 = ((x139 * x255) + ((Val(1) - x139) * (Val(1) - x255)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x257 = x216[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x258 = ((x140 * x257) + ((Val(1) - x140) * (Val(1) - x257)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  NondetRegStruct22Array x259 = x4.arrC;
  Val x260 = x259[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x261 = ((x147 * x260) + ((Val(1) - x147) * (Val(1) - x260)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x262 = x259[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x263 = ((x148 * x262) + ((Val(1) - x148) * (Val(1) - x262)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x264 = x259[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x265 = ((x149 * x264) + ((Val(1) - x149) * (Val(1) - x264)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x266 = x259[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x267 = ((x150 * x266) + ((Val(1) - x150) * (Val(1) - x266)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x268 = x259[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x269 = ((x151 * x268) + ((Val(1) - x151) * (Val(1) - x268)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x270 = x259[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x271 = ((x152 * x270) + ((Val(1) - x152) * (Val(1) - x270)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x272 = x259[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x273 = ((x153 * x272) + ((Val(1) - x153) * (Val(1) - x272)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x274 = x259[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x275 = ((x154 * x274) + ((Val(1) - x154) * (Val(1) - x274)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x276 = x259[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x277 = ((x155 * x276) + ((Val(1) - x155) * (Val(1) - x276)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x278 = x259[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x279 = ((x156 * x278) + ((Val(1) - x156) * (Val(1) - x278)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x280 = x259[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x281 = ((x157 * x280) + ((Val(1) - x157) * (Val(1) - x280)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x282 = x259[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x283 = ((x158 * x282) + ((Val(1) - x158) * (Val(1) - x282)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x284 = x259[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x285 = ((x159 * x284) + ((Val(1) - x159) * (Val(1) - x284)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x286 = x259[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x287 = ((x160 * x286) + ((Val(1) - x160) * (Val(1) - x286)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x288 = x259[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x289 = ((x161 * x288) + ((Val(1) - x161) * (Val(1) - x288)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x290 = x259[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x291 = ((x162 * x290) + ((Val(1) - x162) * (Val(1) - x290)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x292 = x259[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x293 = ((x163 * x292) + ((Val(1) - x163) * (Val(1) - x292)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x294 = x259[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x295 = ((x164 * x294) + ((Val(1) - x164) * (Val(1) - x294)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x296 = x259[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x297 = ((x165 * x296) + ((Val(1) - x165) * (Val(1) - x296)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x298 = x259[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x299 = ((x166 * x298) + ((Val(1) - x166) * (Val(1) - x298)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x300 = x259[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x301 = ((x167 * x300) + ((Val(1) - x167) * (Val(1) - x300)));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:422)
  Val x302 = (((x246 * x50) + ((Val(1) - x246) * (Val(1) - x50))) +
              (((x248 * x51) + ((Val(1) - x248) * (Val(1) - x51))) * Val(2)));
  Val x303 = ((x302 + (((x250 * x52) + ((Val(1) - x250) * (Val(1) - x52))) * Val(4))) +
              (((x252 * x53) + ((Val(1) - x252) * (Val(1) - x53))) * Val(8)));
  Val x304 = ((x303 + (((x254 * x54) + ((Val(1) - x254) * (Val(1) - x54))) * Val(16))) +
              (((x256 * x55) + ((Val(1) - x256) * (Val(1) - x55))) * Val(32)));
  Val x305 = ((x304 + (((x258 * x56) + ((Val(1) - x258) * (Val(1) - x56))) * Val(64))) +
              (((x261 * x57) + ((Val(1) - x261) * (Val(1) - x57))) * Val(128)));
  Val x306 = ((x305 + (((x263 * x64) + ((Val(1) - x263) * (Val(1) - x64))) * Val(256))) +
              (((x265 * x65) + ((Val(1) - x265) * (Val(1) - x65))) * Val(512)));
  Val x307 = ((x306 + (((x267 * x66) + ((Val(1) - x267) * (Val(1) - x66))) * Val(1024))) +
              (((x269 * x67) + ((Val(1) - x269) * (Val(1) - x67))) * Val(2048)));
  Val x308 = ((x307 + (((x271 * x68) + ((Val(1) - x271) * (Val(1) - x68))) * Val(4096))) +
              (((x273 * x69) + ((Val(1) - x273) * (Val(1) - x69))) * Val(8192)));
  Val x309 = ((x308 + (((x275 * x70) + ((Val(1) - x275) * (Val(1) - x70))) * Val(16384))) +
              (((x277 * x71) + ((Val(1) - x277) * (Val(1) - x71))) * Val(32768)));
  Val x310 = ((x309 + (((x279 * x72) + ((Val(1) - x279) * (Val(1) - x72))) * Val(65536))) +
              (((x281 * x73) + ((Val(1) - x281) * (Val(1) - x73))) * Val(131072)));
  Val x311 = ((x310 + (((x283 * x74) + ((Val(1) - x283) * (Val(1) - x74))) * Val(262144))) +
              (((x285 * x75) + ((Val(1) - x285) * (Val(1) - x75))) * Val(524288)));
  Val x312 = ((x311 + (((x287 * x76) + ((Val(1) - x287) * (Val(1) - x76))) * Val(1048576))) +
              (((x289 * x77) + ((Val(1) - x289) * (Val(1) - x77))) * Val(2097152)));
  NondetRegStruct x313 = exec_Reg(ctx, x312, LAYOUT_LOOKUP(layout2, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:423)
  Val x314 = (((x291 * x78) + ((Val(1) - x291) * (Val(1) - x78))) +
              (((x293 * x79) + ((Val(1) - x293) * (Val(1) - x79))) * Val(2)));
  Val x315 = ((x314 + (((x295 * x80) + ((Val(1) - x295) * (Val(1) - x80))) * Val(4))) +
              (((x297 * x81) + ((Val(1) - x297) * (Val(1) - x81))) * Val(8)));
  Val x316 = ((x315 + (((x299 * x82) + ((Val(1) - x299) * (Val(1) - x82))) * Val(16))) +
              (((x301 * x83) + ((Val(1) - x301) * (Val(1) - x83))) * Val(32)));
  Val x317 = ((x316 + (((x173 * x84) + ((Val(1) - x173) * (Val(1) - x84))) * Val(64))) +
              (((x175 * x9) + ((Val(1) - x175) * (Val(1) - x9))) * Val(128)));
  Val x318 = ((x317 + (((x177 * x10) + ((Val(1) - x177) * (Val(1) - x10))) * Val(256))) +
              (((x179 * x11) + ((Val(1) - x179) * (Val(1) - x11))) * Val(512)));
  Val x319 = ((x318 + (((x181 * x12) + ((Val(1) - x181) * (Val(1) - x12))) * Val(1024))) +
              (((x183 * x13) + ((Val(1) - x183) * (Val(1) - x13))) * Val(2048)));
  Val x320 = ((x319 + (((x185 * x14) + ((Val(1) - x185) * (Val(1) - x14))) * Val(4096))) +
              (((x187 * x15) + ((Val(1) - x187) * (Val(1) - x15))) * Val(8192)));
  Val x321 = ((x320 + (((x189 * x16) + ((Val(1) - x189) * (Val(1) - x16))) * Val(16384))) +
              (((x191 * x17) + ((Val(1) - x191) * (Val(1) - x17))) * Val(32768)));
  Val x322 = ((x321 + (((x193 * x18) + ((Val(1) - x193) * (Val(1) - x18))) * Val(65536))) +
              (((x195 * x19) + ((Val(1) - x195) * (Val(1) - x19))) * Val(131072)));
  Val x323 = ((x322 + (((x197 * x20) + ((Val(1) - x197) * (Val(1) - x20))) * Val(262144))) +
              (((x199 * x21) + ((Val(1) - x199) * (Val(1) - x21))) * Val(524288)));
  NondetRegStruct x324 =
      exec_Reg(ctx,
               (x323 + (((x201 * x22) + ((Val(1) - x201) * (Val(1) - x22))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _1));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:424)
  Val x325 = (((x203 * x23) + ((Val(1) - x203) * (Val(1) - x23))) +
              (((x205 * x24) + ((Val(1) - x205) * (Val(1) - x24))) * Val(2)));
  Val x326 = ((x325 + (((x207 * x25) + ((Val(1) - x207) * (Val(1) - x25))) * Val(4))) +
              (((x209 * x26) + ((Val(1) - x209) * (Val(1) - x26))) * Val(8)));
  Val x327 = ((x326 + (((x211 * x27) + ((Val(1) - x211) * (Val(1) - x27))) * Val(16))) +
              (((x213 * x28) + ((Val(1) - x213) * (Val(1) - x28))) * Val(32)));
  Val x328 = ((x327 + (((x215 * x29) + ((Val(1) - x215) * (Val(1) - x29))) * Val(64))) +
              (((x218 * x30) + ((Val(1) - x218) * (Val(1) - x30))) * Val(128)));
  Val x329 = ((x328 + (((x220 * x37) + ((Val(1) - x220) * (Val(1) - x37))) * Val(256))) +
              (((x222 * x38) + ((Val(1) - x222) * (Val(1) - x38))) * Val(512)));
  Val x330 = ((x329 + (((x224 * x39) + ((Val(1) - x224) * (Val(1) - x39))) * Val(1024))) +
              (((x226 * x40) + ((Val(1) - x226) * (Val(1) - x40))) * Val(2048)));
  Val x331 = ((x330 + (((x228 * x41) + ((Val(1) - x228) * (Val(1) - x41))) * Val(4096))) +
              (((x230 * x42) + ((Val(1) - x230) * (Val(1) - x42))) * Val(8192)));
  Val x332 = ((x331 + (((x232 * x43) + ((Val(1) - x232) * (Val(1) - x43))) * Val(16384))) +
              (((x234 * x44) + ((Val(1) - x234) * (Val(1) - x44))) * Val(32768)));
  Val x333 = ((x332 + (((x236 * x45) + ((Val(1) - x236) * (Val(1) - x45))) * Val(65536))) +
              (((x238 * x46) + ((Val(1) - x238) * (Val(1) - x46))) * Val(131072)));
  Val x334 = ((x333 + (((x240 * x47) + ((Val(1) - x240) * (Val(1) - x47))) * Val(262144))) +
              (((x242 * x48) + ((Val(1) - x242) * (Val(1) - x48))) * Val(524288)));
  NondetRegStruct x335 =
      exec_Reg(ctx,
               (x334 + (((x244 * x49) + ((Val(1) - x244) * (Val(1) - x49))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _2));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:427)
  Val22Array x336 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x337 = exec_RetTuple(
      ctx,
      x336,
      x336,
      x336,
      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
      x336,
      Val22Array{x313._super, x324._super, x335._super, Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0)},
      Val(6),
      Val(5),
      x4.rnd._super,
      x4.blk._super,
      x4.midx._super,
      LAYOUT_LOOKUP(layout2, _super));
  return x337;
}
RetTupleStruct execRhoMinor0_4__0_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<RhoMinor0_4__0_Layout> layout2) {
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  RetTupleStruct x3 = back_RetTuple(ctx, 7, arg1);
  NondetRegStruct24Array x4 = x3.arrD;
  Val x5 = x4[18]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:257)
  ToBits_22_Struct x6 = exec_ToBits_22_(ctx, x5, LAYOUT_LOOKUP(layout2, unpackM1));
  NondetRegStruct22Array x7 = x6._super;
  Val x8 = x7[0]._super;
  Val x9 = x7[1]._super;
  Val x10 = x7[2]._super;
  Val x11 = x7[3]._super;
  Val x12 = x7[4]._super;
  Val x13 = x7[5]._super;
  Val x14 = x7[6]._super;
  Val x15 = x7[7]._super;
  Val x16 = x7[8]._super;
  Val x17 = x7[9]._super;
  Val x18 = x7[10]._super;
  Val x19 = x7[11]._super;
  Val x20 = x7[12]._super;
  Val x21 = x7[13]._super;
  Val x22 = x7[14]._super;
  Val x23 = x7[15]._super;
  Val x24 = x7[16]._super;
  Val x25 = x7[17]._super;
  Val x26 = x7[18]._super;
  Val x27 = x7[19]._super;
  Val x28 = x7[20]._super;
  Val x29 = x7[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:258)
  Val x30 = ((((((x8 + (x9 * Val(2))) + (x10 * Val(4))) + (x11 * Val(8))) + (x12 * Val(16))) +
              (x13 * Val(32))) +
             (x14 * Val(64)));
  Val x31 =
      ((((((x30 + (x15 * Val(128))) + (x16 * Val(256))) + (x17 * Val(512))) + (x18 * Val(1024))) +
        (x19 * Val(2048))) +
       (x20 * Val(4096)));
  Val x32 = ((((((x31 + (x21 * Val(8192))) + (x22 * Val(16384))) + (x23 * Val(32768))) +
               (x24 * Val(65536))) +
              (x25 * Val(131072))) +
             (x26 * Val(262144)));
  EQZ(((((x32 + (x27 * Val(524288))) + (x28 * Val(1048576))) + (x29 * Val(2097152))) - x5),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:258)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x33 = x4[19]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:261)
  ToBits_21_Struct x34 = exec_ToBits_21_(ctx, x33, LAYOUT_LOOKUP(layout2, unpackM2));
  NondetRegStruct21Array x35 = x34._super;
  Val x36 = x35[0]._super;
  Val x37 = x35[1]._super;
  Val x38 = x35[2]._super;
  Val x39 = x35[3]._super;
  Val x40 = x35[4]._super;
  Val x41 = x35[5]._super;
  Val x42 = x35[6]._super;
  Val x43 = x35[7]._super;
  Val x44 = x35[8]._super;
  Val x45 = x35[9]._super;
  Val x46 = x35[10]._super;
  Val x47 = x35[11]._super;
  Val x48 = x35[12]._super;
  Val x49 = x35[13]._super;
  Val x50 = x35[14]._super;
  Val x51 = x35[15]._super;
  Val x52 = x35[16]._super;
  Val x53 = x35[17]._super;
  Val x54 = x35[18]._super;
  Val x55 = x35[19]._super;
  Val x56 = x35[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:262)
  Val x57 = ((((((x36 + (x37 * Val(2))) + (x38 * Val(4))) + (x39 * Val(8))) + (x40 * Val(16))) +
              (x41 * Val(32))) +
             (x42 * Val(64)));
  Val x58 =
      ((((((x57 + (x43 * Val(128))) + (x44 * Val(256))) + (x45 * Val(512))) + (x46 * Val(1024))) +
        (x47 * Val(2048))) +
       (x48 * Val(4096)));
  Val x59 = ((((((x58 + (x49 * Val(8192))) + (x50 * Val(16384))) + (x51 * Val(32768))) +
               (x52 * Val(65536))) +
              (x53 * Val(131072))) +
             (x54 * Val(262144)));
  EQZ((((x59 + (x55 * Val(524288))) + (x56 * Val(1048576))) - x33),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:262)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x60 = x4[20]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:266)
  ToBits_21_Struct x61 = exec_ToBits_21_(ctx, x60, LAYOUT_LOOKUP(layout2, unpackM3));
  NondetRegStruct21Array x62 = x61._super;
  Val x63 = x62[0]._super;
  Val x64 = x62[1]._super;
  Val x65 = x62[2]._super;
  Val x66 = x62[3]._super;
  Val x67 = x62[4]._super;
  Val x68 = x62[5]._super;
  Val x69 = x62[6]._super;
  Val x70 = x62[7]._super;
  Val x71 = x62[8]._super;
  Val x72 = x62[9]._super;
  Val x73 = x62[10]._super;
  Val x74 = x62[11]._super;
  Val x75 = x62[12]._super;
  Val x76 = x62[13]._super;
  Val x77 = x62[14]._super;
  Val x78 = x62[15]._super;
  Val x79 = x62[16]._super;
  Val x80 = x62[17]._super;
  Val x81 = x62[18]._super;
  Val x82 = x62[19]._super;
  Val x83 = x62[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:267)
  Val x84 = ((((((x63 + (x64 * Val(2))) + (x65 * Val(4))) + (x66 * Val(8))) + (x67 * Val(16))) +
              (x68 * Val(32))) +
             (x69 * Val(64)));
  Val x85 =
      ((((((x84 + (x70 * Val(128))) + (x71 * Val(256))) + (x72 * Val(512))) + (x73 * Val(1024))) +
        (x74 * Val(2048))) +
       (x75 * Val(4096)));
  Val x86 = ((((((x85 + (x76 * Val(8192))) + (x77 * Val(16384))) + (x78 * Val(32768))) +
               (x79 * Val(65536))) +
              (x80 * Val(131072))) +
             (x81 * Val(262144)));
  EQZ((((x86 + (x82 * Val(524288))) + (x83 * Val(1048576))) - x60),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:267)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x87 = x4[9]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:271)
  ToBits_22_Struct x88 = exec_ToBits_22_(ctx, x87, LAYOUT_LOOKUP(layout2, unpackP1));
  NondetRegStruct22Array x89 = x88._super;
  Val x90 = x89[0]._super;
  Val x91 = x89[1]._super;
  Val x92 = x89[2]._super;
  Val x93 = x89[3]._super;
  Val x94 = x89[4]._super;
  Val x95 = x89[5]._super;
  Val x96 = x89[6]._super;
  Val x97 = x89[7]._super;
  Val x98 = x89[8]._super;
  Val x99 = x89[9]._super;
  Val x100 = x89[10]._super;
  Val x101 = x89[11]._super;
  Val x102 = x89[12]._super;
  Val x103 = x89[13]._super;
  Val x104 = x89[14]._super;
  Val x105 = x89[15]._super;
  Val x106 = x89[16]._super;
  Val x107 = x89[17]._super;
  Val x108 = x89[18]._super;
  Val x109 = x89[19]._super;
  Val x110 = x89[20]._super;
  Val x111 = x89[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:272)
  Val x112 = ((((((x90 + (x91 * Val(2))) + (x92 * Val(4))) + (x93 * Val(8))) + (x94 * Val(16))) +
               (x95 * Val(32))) +
              (x96 * Val(64)));
  Val x113 =
      ((((((x112 + (x97 * Val(128))) + (x98 * Val(256))) + (x99 * Val(512))) + (x100 * Val(1024))) +
        (x101 * Val(2048))) +
       (x102 * Val(4096)));
  Val x114 = ((((((x113 + (x103 * Val(8192))) + (x104 * Val(16384))) + (x105 * Val(32768))) +
                (x106 * Val(65536))) +
               (x107 * Val(131072))) +
              (x108 * Val(262144)));
  EQZ(((((x114 + (x109 * Val(524288))) + (x110 * Val(1048576))) + (x111 * Val(2097152))) - x87),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:272)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x115 = x4[10]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:275)
  ToBits_21_Struct x116 = exec_ToBits_21_(ctx, x115, LAYOUT_LOOKUP(layout2, unpackP2));
  NondetRegStruct21Array x117 = x116._super;
  Val x118 = x117[0]._super;
  Val x119 = x117[1]._super;
  Val x120 = x117[2]._super;
  Val x121 = x117[3]._super;
  Val x122 = x117[4]._super;
  Val x123 = x117[5]._super;
  Val x124 = x117[6]._super;
  Val x125 = x117[7]._super;
  Val x126 = x117[8]._super;
  Val x127 = x117[9]._super;
  Val x128 = x117[10]._super;
  Val x129 = x117[11]._super;
  Val x130 = x117[12]._super;
  Val x131 = x117[13]._super;
  Val x132 = x117[14]._super;
  Val x133 = x117[15]._super;
  Val x134 = x117[16]._super;
  Val x135 = x117[17]._super;
  Val x136 = x117[18]._super;
  Val x137 = x117[19]._super;
  Val x138 = x117[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:276)
  Val x139 =
      ((((((x118 + (x119 * Val(2))) + (x120 * Val(4))) + (x121 * Val(8))) + (x122 * Val(16))) +
        (x123 * Val(32))) +
       (x124 * Val(64)));
  Val x140 = ((((((x139 + (x125 * Val(128))) + (x126 * Val(256))) + (x127 * Val(512))) +
                (x128 * Val(1024))) +
               (x129 * Val(2048))) +
              (x130 * Val(4096)));
  Val x141 = ((((((x140 + (x131 * Val(8192))) + (x132 * Val(16384))) + (x133 * Val(32768))) +
                (x134 * Val(65536))) +
               (x135 * Val(131072))) +
              (x136 * Val(262144)));
  EQZ((((x141 + (x137 * Val(524288))) + (x138 * Val(1048576))) - x115),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:276)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x142 = x4[11]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:279)
  ToBits_21_Struct x143 = exec_ToBits_21_(ctx, x142, LAYOUT_LOOKUP(layout2, unpackP3));
  NondetRegStruct21Array x144 = x143._super;
  Val x145 = x144[0]._super;
  Val x146 = x144[1]._super;
  Val x147 = x144[2]._super;
  Val x148 = x144[3]._super;
  Val x149 = x144[4]._super;
  Val x150 = x144[5]._super;
  Val x151 = x144[6]._super;
  Val x152 = x144[7]._super;
  Val x153 = x144[8]._super;
  Val x154 = x144[9]._super;
  Val x155 = x144[10]._super;
  Val x156 = x144[11]._super;
  Val x157 = x144[12]._super;
  Val x158 = x144[13]._super;
  Val x159 = x144[14]._super;
  Val x160 = x144[15]._super;
  Val x161 = x144[16]._super;
  Val x162 = x144[17]._super;
  Val x163 = x144[18]._super;
  Val x164 = x144[19]._super;
  Val x165 = x144[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:280)
  Val x166 =
      ((((((x145 + (x146 * Val(2))) + (x147 * Val(4))) + (x148 * Val(8))) + (x149 * Val(16))) +
        (x150 * Val(32))) +
       (x151 * Val(64)));
  Val x167 = ((((((x166 + (x152 * Val(128))) + (x153 * Val(256))) + (x154 * Val(512))) +
                (x155 * Val(1024))) +
               (x156 * Val(2048))) +
              (x157 * Val(4096)));
  Val x168 = ((((((x167 + (x158 * Val(8192))) + (x159 * Val(16384))) + (x160 * Val(32768))) +
                (x161 * Val(65536))) +
               (x162 * Val(131072))) +
              (x163 * Val(262144)));
  EQZ((((x168 + (x164 * Val(524288))) + (x165 * Val(1048576))) - x142),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:280)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:287)
  RetTupleStruct x169 =
      exec_RetTuple(ctx,
                    Val22Array{x165, x90,  x91,  x92,  x93,  x94,  x95,  x96,  x97,  x98,  x99,
                               x100, x101, x102, x103, x104, x105, x106, x107, x108, x109, x110},
                    Val22Array{x111, x118, x119, x120, x121, x122, x123, x124, x125, x126, x127,
                               x128, x129, x130, x131, x132, x133, x134, x135, x136, x137, Val(0)},
                    Val22Array{x138, x145, x146, x147, x148, x149, x150, x151, x152, x153, x154,
                               x155, x156, x157, x158, x159, x160, x161, x162, x163, x164, Val(0)},
                    Val24Array{x8,  x9,  x10, x11, x12, x13, x14, x15, x16, x17, x18,    x19,
                               x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, Val(0), Val(0)},
                    Val22Array{x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46,
                               x47, x48, x49, x50, x51, x52, x53, x54, x55, x56, Val(0)},
                    Val22Array{x63, x64, x65, x66, x67, x68, x69, x70, x71, x72, x73,
                               x74, x75, x76, x77, x78, x79, x80, x81, x82, x83, Val(0)},
                    Val(7),
                    Val(5),
                    x3.rnd._super,
                    x3.blk._super,
                    x3.midx._super,
                    LAYOUT_LOOKUP(layout2, _super));
  return x169;
}
RetTupleStruct execRhoMinor1_4__0_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<RhoMinor1_4__0_Layout> layout2) {
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:341)
  BoundLayout<RhoMinor1_4__0__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:292)
  RetTupleStruct x4 = back_RetTuple(ctx, 8, arg1);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  RetTupleStruct x5 = back_RetTuple(ctx, 1, arg1);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:292)
  NondetRegStruct22Array x6 = x4.arrA;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:297)
  Val x7 = x6[12]._super;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:304)
  ToBits_22_Struct x8 = exec_ToBits_22_(ctx, x7, LAYOUT_LOOKUP(layout2, unpackXy1));
  NondetRegStruct22Array x9 = x8._super;
  Val x10 = x9[0]._super;
  Val x11 = x9[1]._super;
  Val x12 = x9[2]._super;
  Val x13 = x9[3]._super;
  Val x14 = x9[4]._super;
  Val x15 = x9[5]._super;
  Val x16 = x9[6]._super;
  Val x17 = x9[7]._super;
  Val x18 = x9[8]._super;
  Val x19 = x9[9]._super;
  Val x20 = x9[10]._super;
  Val x21 = x9[11]._super;
  Val x22 = x9[12]._super;
  Val x23 = x9[13]._super;
  Val x24 = x9[14]._super;
  Val x25 = x9[15]._super;
  Val x26 = x9[16]._super;
  Val x27 = x9[17]._super;
  Val x28 = x9[18]._super;
  Val x29 = x9[19]._super;
  Val x30 = x9[20]._super;
  Val x31 = x9[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:305)
  Val x32 = ((((((x10 + (x11 * Val(2))) + (x12 * Val(4))) + (x13 * Val(8))) + (x14 * Val(16))) +
              (x15 * Val(32))) +
             (x16 * Val(64)));
  Val x33 =
      ((((((x32 + (x17 * Val(128))) + (x18 * Val(256))) + (x19 * Val(512))) + (x20 * Val(1024))) +
        (x21 * Val(2048))) +
       (x22 * Val(4096)));
  Val x34 = ((((((x33 + (x23 * Val(8192))) + (x24 * Val(16384))) + (x25 * Val(32768))) +
               (x26 * Val(65536))) +
              (x27 * Val(131072))) +
             (x28 * Val(262144)));
  EQZ(((((x34 + (x29 * Val(524288))) + (x30 * Val(1048576))) + (x31 * Val(2097152))) - x7),
      "rho_minor1(zirgen/circuit/keccak/keccak.zir:305)");
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:309)
  Val x35 = x6[13]._super;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:316)
  ToBits_21_Struct x36 = exec_ToBits_21_(ctx, x35, LAYOUT_LOOKUP(layout2, unpackXy2));
  NondetRegStruct21Array x37 = x36._super;
  Val x38 = x37[0]._super;
  Val x39 = x37[1]._super;
  Val x40 = x37[2]._super;
  Val x41 = x37[3]._super;
  Val x42 = x37[4]._super;
  Val x43 = x37[5]._super;
  Val x44 = x37[6]._super;
  Val x45 = x37[7]._super;
  Val x46 = x37[8]._super;
  Val x47 = x37[9]._super;
  Val x48 = x37[10]._super;
  Val x49 = x37[11]._super;
  Val x50 = x37[12]._super;
  Val x51 = x37[13]._super;
  Val x52 = x37[14]._super;
  Val x53 = x37[15]._super;
  Val x54 = x37[16]._super;
  Val x55 = x37[17]._super;
  Val x56 = x37[18]._super;
  Val x57 = x37[19]._super;
  Val x58 = x37[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:317)
  Val x59 = ((((((x38 + (x39 * Val(2))) + (x40 * Val(4))) + (x41 * Val(8))) + (x42 * Val(16))) +
              (x43 * Val(32))) +
             (x44 * Val(64)));
  Val x60 =
      ((((((x59 + (x45 * Val(128))) + (x46 * Val(256))) + (x47 * Val(512))) + (x48 * Val(1024))) +
        (x49 * Val(2048))) +
       (x50 * Val(4096)));
  Val x61 = ((((((x60 + (x51 * Val(8192))) + (x52 * Val(16384))) + (x53 * Val(32768))) +
               (x54 * Val(65536))) +
              (x55 * Val(131072))) +
             (x56 * Val(262144)));
  EQZ((((x61 + (x57 * Val(524288))) + (x58 * Val(1048576))) - x35),
      "rho_minor1(zirgen/circuit/keccak/keccak.zir:317)");
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:321)
  Val x62 = x6[14]._super;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:328)
  ToBits_21_Struct x63 = exec_ToBits_21_(ctx, x62, LAYOUT_LOOKUP(layout2, unpackXy3));
  NondetRegStruct21Array x64 = x63._super;
  Val x65 = x64[0]._super;
  Val x66 = x64[1]._super;
  Val x67 = x64[2]._super;
  Val x68 = x64[3]._super;
  Val x69 = x64[4]._super;
  Val x70 = x64[5]._super;
  Val x71 = x64[6]._super;
  Val x72 = x64[7]._super;
  Val x73 = x64[8]._super;
  Val x74 = x64[9]._super;
  Val x75 = x64[10]._super;
  Val x76 = x64[11]._super;
  Val x77 = x64[12]._super;
  Val x78 = x64[13]._super;
  Val x79 = x64[14]._super;
  Val x80 = x64[15]._super;
  Val x81 = x64[16]._super;
  Val x82 = x64[17]._super;
  Val x83 = x64[18]._super;
  Val x84 = x64[19]._super;
  Val x85 = x64[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:329)
  Val x86 = ((((((x65 + (x66 * Val(2))) + (x67 * Val(4))) + (x68 * Val(8))) + (x69 * Val(16))) +
              (x70 * Val(32))) +
             (x71 * Val(64)));
  Val x87 =
      ((((((x86 + (x72 * Val(128))) + (x73 * Val(256))) + (x74 * Val(512))) + (x75 * Val(1024))) +
        (x76 * Val(2048))) +
       (x77 * Val(4096)));
  Val x88 = ((((((x87 + (x78 * Val(8192))) + (x79 * Val(16384))) + (x80 * Val(32768))) +
               (x81 * Val(65536))) +
              (x82 * Val(131072))) +
             (x83 * Val(262144)));
  EQZ((((x88 + (x84 * Val(524288))) + (x85 * Val(1048576))) - x62),
      "rho_minor1(zirgen/circuit/keccak/keccak.zir:329)");
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  NondetRegStruct22Array x89 = x5.arrA;
  NondetRegStruct24Array x90 = x5.arrD;
  Val x91 = x89[0]._super;
  Val x92 = x90[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x93 = ((x10 * x91) + ((Val(1) - x10) * (Val(1) - x91)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x94 = x89[1]._super;
  Val x95 = x90[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x96 = ((x11 * x94) + ((Val(1) - x11) * (Val(1) - x94)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x97 = x89[2]._super;
  Val x98 = x90[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x99 = ((x12 * x97) + ((Val(1) - x12) * (Val(1) - x97)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x100 = x89[3]._super;
  Val x101 = x90[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x102 = ((x13 * x100) + ((Val(1) - x13) * (Val(1) - x100)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x103 = x89[4]._super;
  Val x104 = x90[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x105 = ((x14 * x103) + ((Val(1) - x14) * (Val(1) - x103)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x106 = x89[5]._super;
  Val x107 = x90[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x108 = ((x15 * x106) + ((Val(1) - x15) * (Val(1) - x106)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x109 = x89[6]._super;
  Val x110 = x90[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x111 = ((x16 * x109) + ((Val(1) - x16) * (Val(1) - x109)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x112 = x89[7]._super;
  Val x113 = x90[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x114 = ((x17 * x112) + ((Val(1) - x17) * (Val(1) - x112)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x115 = x89[8]._super;
  Val x116 = x90[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x117 = ((x18 * x115) + ((Val(1) - x18) * (Val(1) - x115)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x118 = x89[9]._super;
  Val x119 = x90[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x120 = ((x19 * x118) + ((Val(1) - x19) * (Val(1) - x118)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x121 = x89[10]._super;
  Val x122 = x90[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x123 = ((x20 * x121) + ((Val(1) - x20) * (Val(1) - x121)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x124 = x89[11]._super;
  Val x125 = x90[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x126 = ((x21 * x124) + ((Val(1) - x21) * (Val(1) - x124)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x127 = x89[12]._super;
  Val x128 = x90[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x129 = ((x22 * x127) + ((Val(1) - x22) * (Val(1) - x127)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x130 = x89[13]._super;
  Val x131 = x90[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x132 = ((x23 * x130) + ((Val(1) - x23) * (Val(1) - x130)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x133 = x89[14]._super;
  Val x134 = x90[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x135 = ((x24 * x133) + ((Val(1) - x24) * (Val(1) - x133)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x136 = x89[15]._super;
  Val x137 = x90[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x138 = ((x25 * x136) + ((Val(1) - x25) * (Val(1) - x136)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x139 = x89[16]._super;
  Val x140 = x90[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x141 = ((x26 * x139) + ((Val(1) - x26) * (Val(1) - x139)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x142 = x89[17]._super;
  Val x143 = x90[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x144 = ((x27 * x142) + ((Val(1) - x27) * (Val(1) - x142)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x145 = x89[18]._super;
  Val x146 = x90[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x147 = ((x28 * x145) + ((Val(1) - x28) * (Val(1) - x145)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x148 = x89[19]._super;
  Val x149 = x90[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x150 = ((x29 * x148) + ((Val(1) - x29) * (Val(1) - x148)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x151 = x89[20]._super;
  Val x152 = x90[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x153 = ((x30 * x151) + ((Val(1) - x30) * (Val(1) - x151)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x154 = x89[21]._super;
  Val x155 = x90[21]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x156 = ((x31 * x154) + ((Val(1) - x31) * (Val(1) - x154)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  NondetRegStruct22Array x157 = x5.arrB;
  NondetRegStruct22Array x158 = x5.arrE;
  Val x159 = x157[0]._super;
  Val x160 = x158[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x161 = ((x38 * x159) + ((Val(1) - x38) * (Val(1) - x159)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x162 = x157[1]._super;
  Val x163 = x158[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x164 = ((x39 * x162) + ((Val(1) - x39) * (Val(1) - x162)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x165 = x157[2]._super;
  Val x166 = x158[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x167 = ((x40 * x165) + ((Val(1) - x40) * (Val(1) - x165)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x168 = x157[3]._super;
  Val x169 = x158[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x170 = ((x41 * x168) + ((Val(1) - x41) * (Val(1) - x168)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x171 = x157[4]._super;
  Val x172 = x158[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x173 = ((x42 * x171) + ((Val(1) - x42) * (Val(1) - x171)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x174 = x157[5]._super;
  Val x175 = x158[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x176 = ((x43 * x174) + ((Val(1) - x43) * (Val(1) - x174)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x177 = x157[6]._super;
  Val x178 = x158[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x179 = ((x44 * x177) + ((Val(1) - x44) * (Val(1) - x177)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x180 = x157[7]._super;
  Val x181 = x158[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x182 = ((x45 * x180) + ((Val(1) - x45) * (Val(1) - x180)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x183 = x157[8]._super;
  Val x184 = x158[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x185 = ((x46 * x183) + ((Val(1) - x46) * (Val(1) - x183)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x186 = x157[9]._super;
  Val x187 = x158[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x188 = ((x47 * x186) + ((Val(1) - x47) * (Val(1) - x186)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x189 = x157[10]._super;
  Val x190 = x158[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x191 = ((x48 * x189) + ((Val(1) - x48) * (Val(1) - x189)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x192 = x157[11]._super;
  Val x193 = x158[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x194 = ((x49 * x192) + ((Val(1) - x49) * (Val(1) - x192)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x195 = x157[12]._super;
  Val x196 = x158[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x197 = ((x50 * x195) + ((Val(1) - x50) * (Val(1) - x195)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x198 = x157[13]._super;
  Val x199 = x158[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x200 = ((x51 * x198) + ((Val(1) - x51) * (Val(1) - x198)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x201 = x157[14]._super;
  Val x202 = x158[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x203 = ((x52 * x201) + ((Val(1) - x52) * (Val(1) - x201)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x204 = x157[15]._super;
  Val x205 = x158[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x206 = ((x53 * x204) + ((Val(1) - x53) * (Val(1) - x204)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x207 = x157[16]._super;
  Val x208 = x158[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x209 = ((x54 * x207) + ((Val(1) - x54) * (Val(1) - x207)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x210 = x157[17]._super;
  Val x211 = x158[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x212 = ((x55 * x210) + ((Val(1) - x55) * (Val(1) - x210)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x213 = x157[18]._super;
  Val x214 = x158[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x215 = ((x56 * x213) + ((Val(1) - x56) * (Val(1) - x213)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x216 = x157[19]._super;
  Val x217 = x158[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x218 = ((x57 * x216) + ((Val(1) - x57) * (Val(1) - x216)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x219 = x157[20]._super;
  Val x220 = x158[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x221 = ((x58 * x219) + ((Val(1) - x58) * (Val(1) - x219)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  NondetRegStruct22Array x222 = x5.arrC;
  NondetRegStruct22Array x223 = x5.arrF;
  Val x224 = x222[0]._super;
  Val x225 = x223[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x226 = ((x65 * x224) + ((Val(1) - x65) * (Val(1) - x224)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x227 = x222[1]._super;
  Val x228 = x223[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x229 = ((x66 * x227) + ((Val(1) - x66) * (Val(1) - x227)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x230 = x222[2]._super;
  Val x231 = x223[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x232 = ((x67 * x230) + ((Val(1) - x67) * (Val(1) - x230)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x233 = x222[3]._super;
  Val x234 = x223[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x235 = ((x68 * x233) + ((Val(1) - x68) * (Val(1) - x233)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x236 = x222[4]._super;
  Val x237 = x223[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x238 = ((x69 * x236) + ((Val(1) - x69) * (Val(1) - x236)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x239 = x222[5]._super;
  Val x240 = x223[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x241 = ((x70 * x239) + ((Val(1) - x70) * (Val(1) - x239)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x242 = x222[6]._super;
  Val x243 = x223[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x244 = ((x71 * x242) + ((Val(1) - x71) * (Val(1) - x242)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x245 = x222[7]._super;
  Val x246 = x223[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x247 = ((x72 * x245) + ((Val(1) - x72) * (Val(1) - x245)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x248 = x222[8]._super;
  Val x249 = x223[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x250 = ((x73 * x248) + ((Val(1) - x73) * (Val(1) - x248)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x251 = x222[9]._super;
  Val x252 = x223[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x253 = ((x74 * x251) + ((Val(1) - x74) * (Val(1) - x251)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x254 = x222[10]._super;
  Val x255 = x223[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x256 = ((x75 * x254) + ((Val(1) - x75) * (Val(1) - x254)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x257 = x222[11]._super;
  Val x258 = x223[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x259 = ((x76 * x257) + ((Val(1) - x76) * (Val(1) - x257)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x260 = x222[12]._super;
  Val x261 = x223[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x262 = ((x77 * x260) + ((Val(1) - x77) * (Val(1) - x260)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x263 = x222[13]._super;
  Val x264 = x223[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x265 = ((x78 * x263) + ((Val(1) - x78) * (Val(1) - x263)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x266 = x222[14]._super;
  Val x267 = x223[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x268 = ((x79 * x266) + ((Val(1) - x79) * (Val(1) - x266)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x269 = x222[15]._super;
  Val x270 = x223[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x271 = ((x80 * x269) + ((Val(1) - x80) * (Val(1) - x269)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x272 = x222[16]._super;
  Val x273 = x223[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x274 = ((x81 * x272) + ((Val(1) - x81) * (Val(1) - x272)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x275 = x222[17]._super;
  Val x276 = x223[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x277 = ((x82 * x275) + ((Val(1) - x82) * (Val(1) - x275)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x278 = x222[18]._super;
  Val x279 = x223[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x280 = ((x83 * x278) + ((Val(1) - x83) * (Val(1) - x278)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x281 = x222[19]._super;
  Val x282 = x223[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x283 = ((x84 * x281) + ((Val(1) - x84) * (Val(1) - x281)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x284 = x222[20]._super;
  Val x285 = x223[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x286 = ((x85 * x284) + ((Val(1) - x85) * (Val(1) - x284)));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:336)
  Val x287 = (((x206 * x205) + ((Val(1) - x206) * (Val(1) - x205))) +
              (((x209 * x208) + ((Val(1) - x209) * (Val(1) - x208))) * Val(2)));
  Val x288 = ((x287 + (((x212 * x211) + ((Val(1) - x212) * (Val(1) - x211))) * Val(4))) +
              (((x215 * x214) + ((Val(1) - x215) * (Val(1) - x214))) * Val(8)));
  Val x289 = ((x288 + (((x218 * x217) + ((Val(1) - x218) * (Val(1) - x217))) * Val(16))) +
              (((x221 * x220) + ((Val(1) - x221) * (Val(1) - x220))) * Val(32)));
  Val x290 = ((x289 + (((x226 * x225) + ((Val(1) - x226) * (Val(1) - x225))) * Val(64))) +
              (((x229 * x228) + ((Val(1) - x229) * (Val(1) - x228))) * Val(128)));
  Val x291 = ((x290 + (((x232 * x231) + ((Val(1) - x232) * (Val(1) - x231))) * Val(256))) +
              (((x235 * x234) + ((Val(1) - x235) * (Val(1) - x234))) * Val(512)));
  Val x292 = ((x291 + (((x238 * x237) + ((Val(1) - x238) * (Val(1) - x237))) * Val(1024))) +
              (((x241 * x240) + ((Val(1) - x241) * (Val(1) - x240))) * Val(2048)));
  Val x293 = ((x292 + (((x244 * x243) + ((Val(1) - x244) * (Val(1) - x243))) * Val(4096))) +
              (((x247 * x246) + ((Val(1) - x247) * (Val(1) - x246))) * Val(8192)));
  Val x294 = ((x293 + (((x250 * x249) + ((Val(1) - x250) * (Val(1) - x249))) * Val(16384))) +
              (((x253 * x252) + ((Val(1) - x253) * (Val(1) - x252))) * Val(32768)));
  Val x295 = ((x294 + (((x256 * x255) + ((Val(1) - x256) * (Val(1) - x255))) * Val(65536))) +
              (((x259 * x258) + ((Val(1) - x259) * (Val(1) - x258))) * Val(131072)));
  Val x296 = ((x295 + (((x262 * x261) + ((Val(1) - x262) * (Val(1) - x261))) * Val(262144))) +
              (((x265 * x264) + ((Val(1) - x265) * (Val(1) - x264))) * Val(524288)));
  Val x297 = ((x296 + (((x268 * x267) + ((Val(1) - x268) * (Val(1) - x267))) * Val(1048576))) +
              (((x271 * x270) + ((Val(1) - x271) * (Val(1) - x270))) * Val(2097152)));
  NondetRegStruct x298 = exec_Reg(ctx, x297, LAYOUT_LOOKUP(layout2, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:337)
  Val x299 = (((x274 * x273) + ((Val(1) - x274) * (Val(1) - x273))) +
              (((x277 * x276) + ((Val(1) - x277) * (Val(1) - x276))) * Val(2)));
  Val x300 = ((x299 + (((x280 * x279) + ((Val(1) - x280) * (Val(1) - x279))) * Val(4))) +
              (((x283 * x282) + ((Val(1) - x283) * (Val(1) - x282))) * Val(8)));
  Val x301 = ((x300 + (((x286 * x285) + ((Val(1) - x286) * (Val(1) - x285))) * Val(16))) +
              (((x93 * x92) + ((Val(1) - x93) * (Val(1) - x92))) * Val(32)));
  Val x302 = ((x301 + (((x96 * x95) + ((Val(1) - x96) * (Val(1) - x95))) * Val(64))) +
              (((x99 * x98) + ((Val(1) - x99) * (Val(1) - x98))) * Val(128)));
  Val x303 = ((x302 + (((x102 * x101) + ((Val(1) - x102) * (Val(1) - x101))) * Val(256))) +
              (((x105 * x104) + ((Val(1) - x105) * (Val(1) - x104))) * Val(512)));
  Val x304 = ((x303 + (((x108 * x107) + ((Val(1) - x108) * (Val(1) - x107))) * Val(1024))) +
              (((x111 * x110) + ((Val(1) - x111) * (Val(1) - x110))) * Val(2048)));
  Val x305 = ((x304 + (((x114 * x113) + ((Val(1) - x114) * (Val(1) - x113))) * Val(4096))) +
              (((x117 * x116) + ((Val(1) - x117) * (Val(1) - x116))) * Val(8192)));
  Val x306 = ((x305 + (((x120 * x119) + ((Val(1) - x120) * (Val(1) - x119))) * Val(16384))) +
              (((x123 * x122) + ((Val(1) - x123) * (Val(1) - x122))) * Val(32768)));
  Val x307 = ((x306 + (((x126 * x125) + ((Val(1) - x126) * (Val(1) - x125))) * Val(65536))) +
              (((x129 * x128) + ((Val(1) - x129) * (Val(1) - x128))) * Val(131072)));
  Val x308 = ((x307 + (((x132 * x131) + ((Val(1) - x132) * (Val(1) - x131))) * Val(262144))) +
              (((x135 * x134) + ((Val(1) - x135) * (Val(1) - x134))) * Val(524288)));
  NondetRegStruct x309 =
      exec_Reg(ctx,
               (x308 + (((x138 * x137) + ((Val(1) - x138) * (Val(1) - x137))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _1));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:338)
  Val x310 = (((x141 * x140) + ((Val(1) - x141) * (Val(1) - x140))) +
              (((x144 * x143) + ((Val(1) - x144) * (Val(1) - x143))) * Val(2)));
  Val x311 = ((x310 + (((x147 * x146) + ((Val(1) - x147) * (Val(1) - x146))) * Val(4))) +
              (((x150 * x149) + ((Val(1) - x150) * (Val(1) - x149))) * Val(8)));
  Val x312 = ((x311 + (((x153 * x152) + ((Val(1) - x153) * (Val(1) - x152))) * Val(16))) +
              (((x156 * x155) + ((Val(1) - x156) * (Val(1) - x155))) * Val(32)));
  Val x313 = ((x312 + (((x161 * x160) + ((Val(1) - x161) * (Val(1) - x160))) * Val(64))) +
              (((x164 * x163) + ((Val(1) - x164) * (Val(1) - x163))) * Val(128)));
  Val x314 = ((x313 + (((x167 * x166) + ((Val(1) - x167) * (Val(1) - x166))) * Val(256))) +
              (((x170 * x169) + ((Val(1) - x170) * (Val(1) - x169))) * Val(512)));
  Val x315 = ((x314 + (((x173 * x172) + ((Val(1) - x173) * (Val(1) - x172))) * Val(1024))) +
              (((x176 * x175) + ((Val(1) - x176) * (Val(1) - x175))) * Val(2048)));
  Val x316 = ((x315 + (((x179 * x178) + ((Val(1) - x179) * (Val(1) - x178))) * Val(4096))) +
              (((x182 * x181) + ((Val(1) - x182) * (Val(1) - x181))) * Val(8192)));
  Val x317 = ((x316 + (((x185 * x184) + ((Val(1) - x185) * (Val(1) - x184))) * Val(16384))) +
              (((x188 * x187) + ((Val(1) - x188) * (Val(1) - x187))) * Val(32768)));
  Val x318 = ((x317 + (((x191 * x190) + ((Val(1) - x191) * (Val(1) - x190))) * Val(65536))) +
              (((x194 * x193) + ((Val(1) - x194) * (Val(1) - x193))) * Val(131072)));
  Val x319 = ((x318 + (((x197 * x196) + ((Val(1) - x197) * (Val(1) - x196))) * Val(262144))) +
              (((x200 * x199) + ((Val(1) - x200) * (Val(1) - x199))) * Val(524288)));
  NondetRegStruct x320 =
      exec_Reg(ctx,
               (x319 + (((x203 * x202) + ((Val(1) - x203) * (Val(1) - x202))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _2));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:341)
  BoundLayout<RhoMinor1_4__0_Arm1_SuperLayout> x321 = LAYOUT_LOOKUP(x3, arm1);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:342)
  Val22Array x322 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  Val24Array x323 = Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:339)
  Val22Array x324 =
      Val22Array{x298._super, x309._super, x320._super, Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0)};
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x325 = x5.rnd._super;
  Val x326 = x5.blk._super;
  Val x327 = x5.midx._super;
  if (to_size_t(Val(1))) {
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:342)
    RetTupleStruct x328 = exec_RetTuple(ctx,
                                        x322,
                                        x322,
                                        x322,
                                        x323,
                                        x322,
                                        x324,
                                        Val(8),
                                        Val(5),
                                        x325,
                                        x326,
                                        x327,
                                        LAYOUT_LOOKUP(x3, arm0));
  }
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:292)
  NondetRegStruct24Array x329 = x4.arrD;
  Val x330 = x329[21]._super;
  Val x331 = x329[22]._super;
  Val x332 = x329[23]._super;
  if (to_size_t(Val(0))) {
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:345)
    ToBits_22_Struct x333 = exec_ToBits_22_(ctx, x330, LAYOUT_LOOKUP(x321, unpackM1));
    NondetRegStruct22Array x334 = x333._super;
    Val x335 = x334[0]._super;
    Val x336 = x334[1]._super;
    Val x337 = x334[2]._super;
    Val x338 = x334[3]._super;
    Val x339 = x334[4]._super;
    Val x340 = x334[5]._super;
    Val x341 = x334[6]._super;
    Val x342 = x334[7]._super;
    Val x343 = x334[8]._super;
    Val x344 = x334[9]._super;
    Val x345 = x334[10]._super;
    Val x346 = x334[11]._super;
    Val x347 = x334[12]._super;
    Val x348 = x334[13]._super;
    Val x349 = x334[14]._super;
    Val x350 = x334[15]._super;
    Val x351 = x334[16]._super;
    Val x352 = x334[17]._super;
    Val x353 = x334[18]._super;
    Val x354 = x334[19]._super;
    Val x355 = x334[20]._super;
    Val x356 = x334[21]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:346)
    Val x357 =
        ((((((x335 + (x336 * Val(2))) + (x337 * Val(4))) + (x338 * Val(8))) + (x339 * Val(16))) +
          (x340 * Val(32))) +
         (x341 * Val(64)));
    Val x358 = ((((((x357 + (x342 * Val(128))) + (x343 * Val(256))) + (x344 * Val(512))) +
                  (x345 * Val(1024))) +
                 (x346 * Val(2048))) +
                (x347 * Val(4096)));
    Val x359 = ((((((x358 + (x348 * Val(8192))) + (x349 * Val(16384))) + (x350 * Val(32768))) +
                  (x351 * Val(65536))) +
                 (x352 * Val(131072))) +
                (x353 * Val(262144)));
    EQZ(((((x359 + (x354 * Val(524288))) + (x355 * Val(1048576))) + (x356 * Val(2097152))) - x330),
        "rho_minor1(zirgen/circuit/keccak/keccak.zir:346)");
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:349)
    ToBits_21_Struct x360 = exec_ToBits_21_(ctx, x331, LAYOUT_LOOKUP(x321, unpackM2));
    NondetRegStruct21Array x361 = x360._super;
    Val x362 = x361[0]._super;
    Val x363 = x361[1]._super;
    Val x364 = x361[2]._super;
    Val x365 = x361[3]._super;
    Val x366 = x361[4]._super;
    Val x367 = x361[5]._super;
    Val x368 = x361[6]._super;
    Val x369 = x361[7]._super;
    Val x370 = x361[8]._super;
    Val x371 = x361[9]._super;
    Val x372 = x361[10]._super;
    Val x373 = x361[11]._super;
    Val x374 = x361[12]._super;
    Val x375 = x361[13]._super;
    Val x376 = x361[14]._super;
    Val x377 = x361[15]._super;
    Val x378 = x361[16]._super;
    Val x379 = x361[17]._super;
    Val x380 = x361[18]._super;
    Val x381 = x361[19]._super;
    Val x382 = x361[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:350)
    Val x383 =
        ((((((x362 + (x363 * Val(2))) + (x364 * Val(4))) + (x365 * Val(8))) + (x366 * Val(16))) +
          (x367 * Val(32))) +
         (x368 * Val(64)));
    Val x384 = ((((((x383 + (x369 * Val(128))) + (x370 * Val(256))) + (x371 * Val(512))) +
                  (x372 * Val(1024))) +
                 (x373 * Val(2048))) +
                (x374 * Val(4096)));
    Val x385 = ((((((x384 + (x375 * Val(8192))) + (x376 * Val(16384))) + (x377 * Val(32768))) +
                  (x378 * Val(65536))) +
                 (x379 * Val(131072))) +
                (x380 * Val(262144)));
    EQZ((((x385 + (x381 * Val(524288))) + (x382 * Val(1048576))) - x331),
        "rho_minor1(zirgen/circuit/keccak/keccak.zir:350)");
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:354)
    ToBits_21_Struct x386 = exec_ToBits_21_(ctx, x332, LAYOUT_LOOKUP(x321, unpackM3));
    NondetRegStruct21Array x387 = x386._super;
    Val x388 = x387[0]._super;
    Val x389 = x387[1]._super;
    Val x390 = x387[2]._super;
    Val x391 = x387[3]._super;
    Val x392 = x387[4]._super;
    Val x393 = x387[5]._super;
    Val x394 = x387[6]._super;
    Val x395 = x387[7]._super;
    Val x396 = x387[8]._super;
    Val x397 = x387[9]._super;
    Val x398 = x387[10]._super;
    Val x399 = x387[11]._super;
    Val x400 = x387[12]._super;
    Val x401 = x387[13]._super;
    Val x402 = x387[14]._super;
    Val x403 = x387[15]._super;
    Val x404 = x387[16]._super;
    Val x405 = x387[17]._super;
    Val x406 = x387[18]._super;
    Val x407 = x387[19]._super;
    Val x408 = x387[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:355)
    Val x409 =
        ((((((x388 + (x389 * Val(2))) + (x390 * Val(4))) + (x391 * Val(8))) + (x392 * Val(16))) +
          (x393 * Val(32))) +
         (x394 * Val(64)));
    Val x410 = ((((((x409 + (x395 * Val(128))) + (x396 * Val(256))) + (x397 * Val(512))) +
                  (x398 * Val(1024))) +
                 (x399 * Val(2048))) +
                (x400 * Val(4096)));
    Val x411 = ((((((x410 + (x401 * Val(8192))) + (x402 * Val(16384))) + (x403 * Val(32768))) +
                  (x404 * Val(65536))) +
                 (x405 * Val(131072))) +
                (x406 * Val(262144)));
    EQZ((((x411 + (x407 * Val(524288))) + (x408 * Val(1048576))) - x332),
        "rho_minor1(zirgen/circuit/keccak/keccak.zir:355)");
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:358)
    RetTupleStruct x412 = exec_RetTuple(
        ctx,
        Val22Array{x335, x336, x337, x338, x339, x340, x341, x342, x343, x344, x345,
                   x346, x347, x348, x349, x350, x351, x352, x353, x354, x355, x356},
        Val22Array{x362, x363, x364, x365, x366, x367, x368, x369, x370, x371, x372,
                   x373, x374, x375, x376, x377, x378, x379, x380, x381, x382, Val(0)},
        Val22Array{x388, x389, x390, x391, x392, x393, x394, x395, x396, x397, x398,
                   x399, x400, x401, x402, x403, x404, x405, x406, x407, x408, Val(0)},
        x323,
        x322,
        x324,
        Val(8),
        Val(5),
        x325,
        x326,
        x327,
        LAYOUT_LOOKUP(x321, _super));
  }
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:341)
  RetTupleStruct x413 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x413;
}
RetTupleStruct execRhoMinor3_0_(ExecContext& ctx,
                                RetTupleStruct arg0,
                                BoundLayout<RetTupleLayout> arg1,
                                BoundLayout<RhoMinor3_0__SuperLayout> layout2) {
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:432)
  RetTupleStruct x3 = back_RetTuple(ctx, 1, arg1);
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:433)
  RetTupleStruct x4 = back_RetTuple(ctx, 3, arg1);
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:434)
  RetTupleStruct x5 = back_RetTuple(ctx, 4, arg1);
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:435)
  RetTupleStruct x6 = back_RetTuple(ctx, 6, arg1);
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:436)
  RetTupleStruct x7 = back_RetTuple(ctx, 7, arg1);
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:437)
  RetTupleStruct x8 = back_RetTuple(ctx, 9, arg1);
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:439)
  BoundLayout<RhoMinor3_0_Arm1_SuperLayout> x9 = LAYOUT_LOOKUP(layout2, arm1);
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:436)
  NondetRegStruct22Array x10 = x7.arrF;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:435)
  NondetRegStruct22Array x11 = x6.arrF;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:444)
  Val x12 = x10[0]._super;
  Val x13 = x10[1]._super;
  Val x14 = x10[2]._super;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:445)
  Val x15 = x11[0]._super;
  Val x16 = x11[1]._super;
  Val x17 = x11[2]._super;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:434)
  NondetRegStruct22Array x18 = x5.arrF;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:446)
  Val x19 = x18[0]._super;
  Val x20 = x18[1]._super;
  Val x21 = x18[2]._super;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:433)
  NondetRegStruct22Array x22 = x4.arrF;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:447)
  Val x23 = x22[0]._super;
  Val x24 = x22[1]._super;
  Val x25 = x22[2]._super;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:432)
  NondetRegStruct22Array x26 = x3.arrF;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:448)
  Val x27 = x26[0]._super;
  Val x28 = x26[1]._super;
  Val x29 = x26[2]._super;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:437)
  NondetRegStruct22Array x30 = x8.arrA;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:449)
  Val x31 = x30[15]._super;
  Val x32 = x30[16]._super;
  Val x33 = x30[17]._super;
  Val x34 = x30[18]._super;
  Val x35 = x30[19]._super;
  Val x36 = x30[20]._super;
  Val x37 = x30[21]._super;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:437)
  NondetRegStruct22Array x38 = x8.arrB;
  NondetRegStruct22Array x39 = x8.arrC;
  NondetRegStruct24Array x40 = x8.arrD;
  Val x41 = x38[0]._super;
  Val x42 = x38[1]._super;
  Val x43 = x38[2]._super;
  Val x44 = x38[3]._super;
  Val x45 = x38[4]._super;
  Val x46 = x38[5]._super;
  Val x47 = x38[6]._super;
  Val x48 = x38[7]._super;
  Val x49 = x38[8]._super;
  Val x50 = x38[9]._super;
  Val x51 = x38[10]._super;
  Val x52 = x38[11]._super;
  Val x53 = x38[12]._super;
  Val x54 = x38[13]._super;
  Val x55 = x38[14]._super;
  Val x56 = x38[15]._super;
  Val x57 = x38[16]._super;
  Val x58 = x38[17]._super;
  Val x59 = x38[18]._super;
  Val x60 = x38[19]._super;
  Val x61 = x38[20]._super;
  Val x62 = x38[21]._super;
  Val22Array x63 = Val22Array{x41, x42, x43, x44, x45, x46, x47, x48, x49, x50, x51,
                              x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62};
  Val x64 = x39[0]._super;
  Val x65 = x39[1]._super;
  Val x66 = x39[2]._super;
  Val x67 = x39[3]._super;
  Val x68 = x39[4]._super;
  Val x69 = x39[5]._super;
  Val x70 = x39[6]._super;
  Val x71 = x39[7]._super;
  Val x72 = x39[8]._super;
  Val x73 = x39[9]._super;
  Val x74 = x39[10]._super;
  Val x75 = x39[11]._super;
  Val x76 = x39[12]._super;
  Val x77 = x39[13]._super;
  Val x78 = x39[14]._super;
  Val x79 = x39[15]._super;
  Val x80 = x39[16]._super;
  Val x81 = x39[17]._super;
  Val x82 = x39[18]._super;
  Val x83 = x39[19]._super;
  Val x84 = x39[20]._super;
  Val x85 = x39[21]._super;
  Val22Array x86 = Val22Array{x64, x65, x66, x67, x68, x69, x70, x71, x72, x73, x74,
                              x75, x76, x77, x78, x79, x80, x81, x82, x83, x84, x85};
  Val24Array x87 =
      Val24Array{x40[0]._super,  x40[1]._super,  x40[2]._super,  x40[3]._super,  x40[4]._super,
                 x40[5]._super,  x40[6]._super,  x40[7]._super,  x40[8]._super,  x40[9]._super,
                 x40[10]._super, x40[11]._super, x40[12]._super, x40[13]._super, x40[14]._super,
                 x40[15]._super, x40[16]._super, x40[17]._super, x40[18]._super, x40[19]._super,
                 x40[20]._super, x40[21]._super, x40[22]._super, x40[23]._super};
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:451)
  Val22Array x88 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:432)
  Val x89 = x3.rnd._super;
  Val x90 = x3.blk._super;
  Val x91 = x3.midx._super;
  if (to_size_t(Val(1))) {
    // rho_minor3(zirgen/circuit/keccak/keccak.zir:450)
    RetTupleStruct x92 =
        exec_RetTuple(ctx,
                      Val22Array{x12, x13, x14, x15, x16, x17, x19, x20, x21, x23, x24,
                                 x25, x27, x28, x29, x31, x32, x33, x34, x35, x36, x37},
                      x63,
                      x86,
                      x87,
                      x88,
                      x88,
                      Val(0),
                      Val(6),
                      x89,
                      x90,
                      x91,
                      LAYOUT_LOOKUP(layout2, arm0));
  }
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:453)
  BoundLayout<RhoMinor3_0_Arm1Arm1_SuperLayout> x93 = LAYOUT_LOOKUP(x9, arm1);
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:457)
  Val x94 = x30[0]._super;
  Val x95 = x30[1]._super;
  Val x96 = x30[2]._super;
  Val x97 = x30[3]._super;
  Val x98 = x30[4]._super;
  Val x99 = x30[5]._super;
  Val x100 = x30[6]._super;
  Val x101 = x30[7]._super;
  Val x102 = x30[8]._super;
  Val x103 = x30[9]._super;
  Val x104 = x30[10]._super;
  Val x105 = x30[11]._super;
  Val x106 = x30[12]._super;
  Val x107 = x30[13]._super;
  Val x108 = x30[14]._super;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:465)
  BoundLayout<RhoMinor3_0_Arm1Arm1Arm1_SuperLayout> x109 = LAYOUT_LOOKUP(x93, arm1);
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:437)
  Val22Array x110 = Val22Array{x94,  x95,  x96,  x97,  x98, x99, x100, x101, x102, x103, x104,
                               x105, x106, x107, x108, x31, x32, x33,  x34,  x35,  x36,  x37};
  if (to_size_t(Val(0))) {
    if (to_size_t(Val(0))) {
      // rho_minor3(zirgen/circuit/keccak/keccak.zir:462)
      RetTupleStruct x111 =
          exec_RetTuple(ctx,
                        Val22Array{x94,  x95,  x96,  x97,  x98, x99, x100, x101, x102, x103, x104,
                                   x105, x106, x107, x108, x12, x13, x14,  x15,  x16,  x17,  x19},
                        Val22Array{x20, x21, x23, x24, x25, x27, x28, x29, x49, x50, x51,
                                   x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62},
                        x86,
                        x87,
                        x88,
                        x88,
                        Val(0),
                        Val(7),
                        x89,
                        x90,
                        x91,
                        LAYOUT_LOOKUP(x9, arm0));
    }
    if (to_size_t(Val(1))) {
      if (to_size_t(Val(0))) {
        // rho_minor3(zirgen/circuit/keccak/keccak.zir:474)
        RetTupleStruct x112 =
            exec_RetTuple(ctx,
                          x110,
                          Val22Array{x41, x42, x43, x44, x45, x46, x47, x48, x12, x13, x14,
                                     x15, x16, x17, x19, x20, x21, x23, x24, x25, x27, x28},
                          Val22Array{x29, x65, x66, x67, x68, x69, x70, x71, x72, x73, x74,
                                     x75, x76, x77, x78, x79, x80, x81, x82, x83, x84, x85},
                          x87,
                          x88,
                          x88,
                          Val(0),
                          Val(8),
                          x89,
                          x90,
                          x91,
                          LAYOUT_LOOKUP(x93, arm0));
      }
      if (to_size_t(Val(1))) {
        if (to_size_t(Val(0))) {
          // rho_minor3(zirgen/circuit/keccak/keccak.zir:485)
          RetTupleStruct x113 =
              exec_RetTuple(ctx,
                            x110,
                            x63,
                            Val22Array{x64, x12, x13, x14, x15, x16, x17, x19, x20, x21, x23,
                                       x24, x25, x27, x28, x29, x80, x81, x82, x83, x84, x85},
                            x87,
                            x88,
                            x88,
                            Val(0),
                            Val(9),
                            x89,
                            x90,
                            x91,
                            LAYOUT_LOOKUP(x109, arm0));
        }
        if (to_size_t(Val(1))) {
          // rho_minor3(zirgen/circuit/keccak/keccak.zir:522)
          RetTupleStruct x114 = exec_RetTuple(
              ctx,
              Val22Array{x94, x95, x96, x34, x35,  x36,  x55,  x56, x57, x74, x75,
                         x76, x27, x28, x29, x103, x104, x105, x46, x47, x48, x49},
              Val22Array{x50, x51, x68, x69, x70, x19, x20, x21, x97, x98, x99,
                         x37, x41, x42, x58, x59, x60, x77, x78, x79, x12, x13},
              Val22Array{x14, x106, x107, x108, x31, x32,  x33,  x52,  x53, x54, x71,
                         x72, x73,  x23,  x24,  x25, x100, x101, x102, x43, x44, x45},
              Val24Array{x61,    x62,    x64,    x65,    x66,    x67,    x15,    x16,
                         x17,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                         Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
              x88,
              x88,
              Val(0),
              Val(10),
              x89,
              x90,
              x91,
              LAYOUT_LOOKUP(x109, arm1));
        }
        // rho_minor3(zirgen/circuit/keccak/keccak.zir:477)
        RetTupleStruct x115 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x109, _super));
      }
      // rho_minor3(zirgen/circuit/keccak/keccak.zir:465)
      RetTupleStruct x116 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x93, _super));
    }
    // rho_minor3(zirgen/circuit/keccak/keccak.zir:453)
    RetTupleStruct x117 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x9, _super));
  }
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:439)
  RetTupleStruct x118 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(layout2, _super));
  return x118;
}
RetTupleStruct execRhoMajor_0_(ExecContext& ctx,
                               RetTupleStruct arg0,
                               BoundLayout<RetTupleLayout> arg1,
                               BoundLayout<RhoMajor_0_Layout> layout2) {
  // rho_major(zirgen/circuit/keccak/keccak.zir:529)
  BoundLayout<RhoMajor_0__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // rho_major(zirgen/circuit/keccak/keccak.zir:528)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  OneHot_9_Struct x5 = exec_OneHot_9_(ctx, x4.minor._super, LAYOUT_LOOKUP(layout2, minorOnehot));
  NondetRegStruct9Array x6 = x5._super;
  if (to_size_t(x6[0]._super)) {
    // rho_major(zirgen/circuit/keccak/keccak.zir:530)
    RetTupleStruct x7 = execRhoMinor0_0__0_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm0));
  }
  if (to_size_t(x6[1]._super)) {
    // rho_major(zirgen/circuit/keccak/keccak.zir:531)
    RetTupleStruct x8 = execRhoMinor1_0__0_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm1));
  }
  if (to_size_t(x6[2]._super)) {
    // rho_major(zirgen/circuit/keccak/keccak.zir:532)
    RetTupleStruct x9 = execRhoMinor2_0__0_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm2));
  }
  if (to_size_t(x6[3]._super)) {
    // rho_major(zirgen/circuit/keccak/keccak.zir:533)
    RetTupleStruct x10 = execRhoMinor0_2__0_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm3));
  }
  if (to_size_t(x6[4]._super)) {
    // rho_major(zirgen/circuit/keccak/keccak.zir:534)
    RetTupleStruct x11 = execRhoMinor1_2__0_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm4));
  }
  if (to_size_t(x6[5]._super)) {
    // rho_major(zirgen/circuit/keccak/keccak.zir:535)
    RetTupleStruct x12 = execRhoMinor2_2__0_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm5));
  }
  if (to_size_t(x6[6]._super)) {
    // rho_major(zirgen/circuit/keccak/keccak.zir:536)
    RetTupleStruct x13 = execRhoMinor0_4__0_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm6));
  }
  if (to_size_t(x6[7]._super)) {
    // rho_major(zirgen/circuit/keccak/keccak.zir:537)
    RetTupleStruct x14 = execRhoMinor1_4__0_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm7));
  }
  if (to_size_t(x6[8]._super)) {
    // rho_major(zirgen/circuit/keccak/keccak.zir:538)
    RetTupleStruct x15 = execRhoMinor3_0_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm8));
  }
  // rho_major(zirgen/circuit/keccak/keccak.zir:529)
  RetTupleStruct x16 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x16;
}
RetTupleStruct execRhoMinor0_0__1_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<RhoMinor0_0__1_Layout> layout2) {
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  RetTupleStruct x3 = back_RetTuple(ctx, 1, arg1);
  NondetRegStruct24Array x4 = x3.arrD;
  Val x5 = x4[21]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:257)
  ToBits_22_Struct x6 = exec_ToBits_22_(ctx, x5, LAYOUT_LOOKUP(layout2, unpackM1));
  NondetRegStruct22Array x7 = x6._super;
  Val x8 = x7[0]._super;
  Val x9 = x7[1]._super;
  Val x10 = x7[2]._super;
  Val x11 = x7[3]._super;
  Val x12 = x7[4]._super;
  Val x13 = x7[5]._super;
  Val x14 = x7[6]._super;
  Val x15 = x7[7]._super;
  Val x16 = x7[8]._super;
  Val x17 = x7[9]._super;
  Val x18 = x7[10]._super;
  Val x19 = x7[11]._super;
  Val x20 = x7[12]._super;
  Val x21 = x7[13]._super;
  Val x22 = x7[14]._super;
  Val x23 = x7[15]._super;
  Val x24 = x7[16]._super;
  Val x25 = x7[17]._super;
  Val x26 = x7[18]._super;
  Val x27 = x7[19]._super;
  Val x28 = x7[20]._super;
  Val x29 = x7[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:258)
  Val x30 = ((((((x8 + (x9 * Val(2))) + (x10 * Val(4))) + (x11 * Val(8))) + (x12 * Val(16))) +
              (x13 * Val(32))) +
             (x14 * Val(64)));
  Val x31 =
      ((((((x30 + (x15 * Val(128))) + (x16 * Val(256))) + (x17 * Val(512))) + (x18 * Val(1024))) +
        (x19 * Val(2048))) +
       (x20 * Val(4096)));
  Val x32 = ((((((x31 + (x21 * Val(8192))) + (x22 * Val(16384))) + (x23 * Val(32768))) +
               (x24 * Val(65536))) +
              (x25 * Val(131072))) +
             (x26 * Val(262144)));
  EQZ(((((x32 + (x27 * Val(524288))) + (x28 * Val(1048576))) + (x29 * Val(2097152))) - x5),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:258)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x33 = x4[22]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:261)
  ToBits_21_Struct x34 = exec_ToBits_21_(ctx, x33, LAYOUT_LOOKUP(layout2, unpackM2));
  NondetRegStruct21Array x35 = x34._super;
  Val x36 = x35[0]._super;
  Val x37 = x35[1]._super;
  Val x38 = x35[2]._super;
  Val x39 = x35[3]._super;
  Val x40 = x35[4]._super;
  Val x41 = x35[5]._super;
  Val x42 = x35[6]._super;
  Val x43 = x35[7]._super;
  Val x44 = x35[8]._super;
  Val x45 = x35[9]._super;
  Val x46 = x35[10]._super;
  Val x47 = x35[11]._super;
  Val x48 = x35[12]._super;
  Val x49 = x35[13]._super;
  Val x50 = x35[14]._super;
  Val x51 = x35[15]._super;
  Val x52 = x35[16]._super;
  Val x53 = x35[17]._super;
  Val x54 = x35[18]._super;
  Val x55 = x35[19]._super;
  Val x56 = x35[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:262)
  Val x57 = ((((((x36 + (x37 * Val(2))) + (x38 * Val(4))) + (x39 * Val(8))) + (x40 * Val(16))) +
              (x41 * Val(32))) +
             (x42 * Val(64)));
  Val x58 =
      ((((((x57 + (x43 * Val(128))) + (x44 * Val(256))) + (x45 * Val(512))) + (x46 * Val(1024))) +
        (x47 * Val(2048))) +
       (x48 * Val(4096)));
  Val x59 = ((((((x58 + (x49 * Val(8192))) + (x50 * Val(16384))) + (x51 * Val(32768))) +
               (x52 * Val(65536))) +
              (x53 * Val(131072))) +
             (x54 * Val(262144)));
  EQZ((((x59 + (x55 * Val(524288))) + (x56 * Val(1048576))) - x33),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:262)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x60 = x4[23]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:266)
  ToBits_21_Struct x61 = exec_ToBits_21_(ctx, x60, LAYOUT_LOOKUP(layout2, unpackM3));
  NondetRegStruct21Array x62 = x61._super;
  Val x63 = x62[0]._super;
  Val x64 = x62[1]._super;
  Val x65 = x62[2]._super;
  Val x66 = x62[3]._super;
  Val x67 = x62[4]._super;
  Val x68 = x62[5]._super;
  Val x69 = x62[6]._super;
  Val x70 = x62[7]._super;
  Val x71 = x62[8]._super;
  Val x72 = x62[9]._super;
  Val x73 = x62[10]._super;
  Val x74 = x62[11]._super;
  Val x75 = x62[12]._super;
  Val x76 = x62[13]._super;
  Val x77 = x62[14]._super;
  Val x78 = x62[15]._super;
  Val x79 = x62[16]._super;
  Val x80 = x62[17]._super;
  Val x81 = x62[18]._super;
  Val x82 = x62[19]._super;
  Val x83 = x62[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:267)
  Val x84 = ((((((x63 + (x64 * Val(2))) + (x65 * Val(4))) + (x66 * Val(8))) + (x67 * Val(16))) +
              (x68 * Val(32))) +
             (x69 * Val(64)));
  Val x85 =
      ((((((x84 + (x70 * Val(128))) + (x71 * Val(256))) + (x72 * Val(512))) + (x73 * Val(1024))) +
        (x74 * Val(2048))) +
       (x75 * Val(4096)));
  Val x86 = ((((((x85 + (x76 * Val(8192))) + (x77 * Val(16384))) + (x78 * Val(32768))) +
               (x79 * Val(65536))) +
              (x80 * Val(131072))) +
             (x81 * Val(262144)));
  EQZ((((x86 + (x82 * Val(524288))) + (x83 * Val(1048576))) - x60),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:267)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x87 = x4[12]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:271)
  ToBits_22_Struct x88 = exec_ToBits_22_(ctx, x87, LAYOUT_LOOKUP(layout2, unpackP1));
  NondetRegStruct22Array x89 = x88._super;
  Val x90 = x89[0]._super;
  Val x91 = x89[1]._super;
  Val x92 = x89[2]._super;
  Val x93 = x89[3]._super;
  Val x94 = x89[4]._super;
  Val x95 = x89[5]._super;
  Val x96 = x89[6]._super;
  Val x97 = x89[7]._super;
  Val x98 = x89[8]._super;
  Val x99 = x89[9]._super;
  Val x100 = x89[10]._super;
  Val x101 = x89[11]._super;
  Val x102 = x89[12]._super;
  Val x103 = x89[13]._super;
  Val x104 = x89[14]._super;
  Val x105 = x89[15]._super;
  Val x106 = x89[16]._super;
  Val x107 = x89[17]._super;
  Val x108 = x89[18]._super;
  Val x109 = x89[19]._super;
  Val x110 = x89[20]._super;
  Val x111 = x89[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:272)
  Val x112 = ((((((x90 + (x91 * Val(2))) + (x92 * Val(4))) + (x93 * Val(8))) + (x94 * Val(16))) +
               (x95 * Val(32))) +
              (x96 * Val(64)));
  Val x113 =
      ((((((x112 + (x97 * Val(128))) + (x98 * Val(256))) + (x99 * Val(512))) + (x100 * Val(1024))) +
        (x101 * Val(2048))) +
       (x102 * Val(4096)));
  Val x114 = ((((((x113 + (x103 * Val(8192))) + (x104 * Val(16384))) + (x105 * Val(32768))) +
                (x106 * Val(65536))) +
               (x107 * Val(131072))) +
              (x108 * Val(262144)));
  EQZ(((((x114 + (x109 * Val(524288))) + (x110 * Val(1048576))) + (x111 * Val(2097152))) - x87),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:272)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x115 = x4[13]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:275)
  ToBits_21_Struct x116 = exec_ToBits_21_(ctx, x115, LAYOUT_LOOKUP(layout2, unpackP2));
  NondetRegStruct21Array x117 = x116._super;
  Val x118 = x117[0]._super;
  Val x119 = x117[1]._super;
  Val x120 = x117[2]._super;
  Val x121 = x117[3]._super;
  Val x122 = x117[4]._super;
  Val x123 = x117[5]._super;
  Val x124 = x117[6]._super;
  Val x125 = x117[7]._super;
  Val x126 = x117[8]._super;
  Val x127 = x117[9]._super;
  Val x128 = x117[10]._super;
  Val x129 = x117[11]._super;
  Val x130 = x117[12]._super;
  Val x131 = x117[13]._super;
  Val x132 = x117[14]._super;
  Val x133 = x117[15]._super;
  Val x134 = x117[16]._super;
  Val x135 = x117[17]._super;
  Val x136 = x117[18]._super;
  Val x137 = x117[19]._super;
  Val x138 = x117[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:276)
  Val x139 =
      ((((((x118 + (x119 * Val(2))) + (x120 * Val(4))) + (x121 * Val(8))) + (x122 * Val(16))) +
        (x123 * Val(32))) +
       (x124 * Val(64)));
  Val x140 = ((((((x139 + (x125 * Val(128))) + (x126 * Val(256))) + (x127 * Val(512))) +
                (x128 * Val(1024))) +
               (x129 * Val(2048))) +
              (x130 * Val(4096)));
  Val x141 = ((((((x140 + (x131 * Val(8192))) + (x132 * Val(16384))) + (x133 * Val(32768))) +
                (x134 * Val(65536))) +
               (x135 * Val(131072))) +
              (x136 * Val(262144)));
  EQZ((((x141 + (x137 * Val(524288))) + (x138 * Val(1048576))) - x115),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:276)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x142 = x4[14]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:279)
  ToBits_21_Struct x143 = exec_ToBits_21_(ctx, x142, LAYOUT_LOOKUP(layout2, unpackP3));
  NondetRegStruct21Array x144 = x143._super;
  Val x145 = x144[0]._super;
  Val x146 = x144[1]._super;
  Val x147 = x144[2]._super;
  Val x148 = x144[3]._super;
  Val x149 = x144[4]._super;
  Val x150 = x144[5]._super;
  Val x151 = x144[6]._super;
  Val x152 = x144[7]._super;
  Val x153 = x144[8]._super;
  Val x154 = x144[9]._super;
  Val x155 = x144[10]._super;
  Val x156 = x144[11]._super;
  Val x157 = x144[12]._super;
  Val x158 = x144[13]._super;
  Val x159 = x144[14]._super;
  Val x160 = x144[15]._super;
  Val x161 = x144[16]._super;
  Val x162 = x144[17]._super;
  Val x163 = x144[18]._super;
  Val x164 = x144[19]._super;
  Val x165 = x144[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:280)
  Val x166 =
      ((((((x145 + (x146 * Val(2))) + (x147 * Val(4))) + (x148 * Val(8))) + (x149 * Val(16))) +
        (x150 * Val(32))) +
       (x151 * Val(64)));
  Val x167 = ((((((x166 + (x152 * Val(128))) + (x153 * Val(256))) + (x154 * Val(512))) +
                (x155 * Val(1024))) +
               (x156 * Val(2048))) +
              (x157 * Val(4096)));
  Val x168 = ((((((x167 + (x158 * Val(8192))) + (x159 * Val(16384))) + (x160 * Val(32768))) +
                (x161 * Val(65536))) +
               (x162 * Val(131072))) +
              (x163 * Val(262144)));
  EQZ((((x168 + (x164 * Val(524288))) + (x165 * Val(1048576))) - x142),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:280)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:287)
  RetTupleStruct x169 =
      exec_RetTuple(ctx,
                    Val22Array{x165, x90,  x91,  x92,  x93,  x94,  x95,  x96,  x97,  x98,  x99,
                               x100, x101, x102, x103, x104, x105, x106, x107, x108, x109, x110},
                    Val22Array{x111, x118, x119, x120, x121, x122, x123, x124, x125, x126, x127,
                               x128, x129, x130, x131, x132, x133, x134, x135, x136, x137, Val(0)},
                    Val22Array{x138, x145, x146, x147, x148, x149, x150, x151, x152, x153, x154,
                               x155, x156, x157, x158, x159, x160, x161, x162, x163, x164, Val(0)},
                    Val24Array{x8,  x9,  x10, x11, x12, x13, x14, x15, x16, x17, x18,    x19,
                               x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, Val(0), Val(0)},
                    Val22Array{x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46,
                               x47, x48, x49, x50, x51, x52, x53, x54, x55, x56, Val(0)},
                    Val22Array{x63, x64, x65, x66, x67, x68, x69, x70, x71, x72, x73,
                               x74, x75, x76, x77, x78, x79, x80, x81, x82, x83, Val(0)},
                    Val(1),
                    Val(6),
                    x3.rnd._super,
                    x3.blk._super,
                    x3.midx._super,
                    LAYOUT_LOOKUP(layout2, _super));
  return x169;
}
RetTupleStruct execRhoMinor1_0__1_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<RhoMinor1_0__1_Layout> layout2) {
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:341)
  BoundLayout<RhoMinor1_0__1__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:292)
  RetTupleStruct x4 = back_RetTuple(ctx, 2, arg1);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  RetTupleStruct x5 = back_RetTuple(ctx, 1, arg1);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:292)
  NondetRegStruct22Array x6 = x4.arrA;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:297)
  Val x7 = x6[15]._super;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:304)
  ToBits_22_Struct x8 = exec_ToBits_22_(ctx, x7, LAYOUT_LOOKUP(layout2, unpackXy1));
  NondetRegStruct22Array x9 = x8._super;
  Val x10 = x9[0]._super;
  Val x11 = x9[1]._super;
  Val x12 = x9[2]._super;
  Val x13 = x9[3]._super;
  Val x14 = x9[4]._super;
  Val x15 = x9[5]._super;
  Val x16 = x9[6]._super;
  Val x17 = x9[7]._super;
  Val x18 = x9[8]._super;
  Val x19 = x9[9]._super;
  Val x20 = x9[10]._super;
  Val x21 = x9[11]._super;
  Val x22 = x9[12]._super;
  Val x23 = x9[13]._super;
  Val x24 = x9[14]._super;
  Val x25 = x9[15]._super;
  Val x26 = x9[16]._super;
  Val x27 = x9[17]._super;
  Val x28 = x9[18]._super;
  Val x29 = x9[19]._super;
  Val x30 = x9[20]._super;
  Val x31 = x9[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:305)
  Val x32 = ((((((x10 + (x11 * Val(2))) + (x12 * Val(4))) + (x13 * Val(8))) + (x14 * Val(16))) +
              (x15 * Val(32))) +
             (x16 * Val(64)));
  Val x33 =
      ((((((x32 + (x17 * Val(128))) + (x18 * Val(256))) + (x19 * Val(512))) + (x20 * Val(1024))) +
        (x21 * Val(2048))) +
       (x22 * Val(4096)));
  Val x34 = ((((((x33 + (x23 * Val(8192))) + (x24 * Val(16384))) + (x25 * Val(32768))) +
               (x26 * Val(65536))) +
              (x27 * Val(131072))) +
             (x28 * Val(262144)));
  EQZ(((((x34 + (x29 * Val(524288))) + (x30 * Val(1048576))) + (x31 * Val(2097152))) - x7),
      "rho_minor1(zirgen/circuit/keccak/keccak.zir:305)");
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:309)
  Val x35 = x6[16]._super;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:316)
  ToBits_21_Struct x36 = exec_ToBits_21_(ctx, x35, LAYOUT_LOOKUP(layout2, unpackXy2));
  NondetRegStruct21Array x37 = x36._super;
  Val x38 = x37[0]._super;
  Val x39 = x37[1]._super;
  Val x40 = x37[2]._super;
  Val x41 = x37[3]._super;
  Val x42 = x37[4]._super;
  Val x43 = x37[5]._super;
  Val x44 = x37[6]._super;
  Val x45 = x37[7]._super;
  Val x46 = x37[8]._super;
  Val x47 = x37[9]._super;
  Val x48 = x37[10]._super;
  Val x49 = x37[11]._super;
  Val x50 = x37[12]._super;
  Val x51 = x37[13]._super;
  Val x52 = x37[14]._super;
  Val x53 = x37[15]._super;
  Val x54 = x37[16]._super;
  Val x55 = x37[17]._super;
  Val x56 = x37[18]._super;
  Val x57 = x37[19]._super;
  Val x58 = x37[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:317)
  Val x59 = ((((((x38 + (x39 * Val(2))) + (x40 * Val(4))) + (x41 * Val(8))) + (x42 * Val(16))) +
              (x43 * Val(32))) +
             (x44 * Val(64)));
  Val x60 =
      ((((((x59 + (x45 * Val(128))) + (x46 * Val(256))) + (x47 * Val(512))) + (x48 * Val(1024))) +
        (x49 * Val(2048))) +
       (x50 * Val(4096)));
  Val x61 = ((((((x60 + (x51 * Val(8192))) + (x52 * Val(16384))) + (x53 * Val(32768))) +
               (x54 * Val(65536))) +
              (x55 * Val(131072))) +
             (x56 * Val(262144)));
  EQZ((((x61 + (x57 * Val(524288))) + (x58 * Val(1048576))) - x35),
      "rho_minor1(zirgen/circuit/keccak/keccak.zir:317)");
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:321)
  Val x62 = x6[17]._super;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:328)
  ToBits_21_Struct x63 = exec_ToBits_21_(ctx, x62, LAYOUT_LOOKUP(layout2, unpackXy3));
  NondetRegStruct21Array x64 = x63._super;
  Val x65 = x64[0]._super;
  Val x66 = x64[1]._super;
  Val x67 = x64[2]._super;
  Val x68 = x64[3]._super;
  Val x69 = x64[4]._super;
  Val x70 = x64[5]._super;
  Val x71 = x64[6]._super;
  Val x72 = x64[7]._super;
  Val x73 = x64[8]._super;
  Val x74 = x64[9]._super;
  Val x75 = x64[10]._super;
  Val x76 = x64[11]._super;
  Val x77 = x64[12]._super;
  Val x78 = x64[13]._super;
  Val x79 = x64[14]._super;
  Val x80 = x64[15]._super;
  Val x81 = x64[16]._super;
  Val x82 = x64[17]._super;
  Val x83 = x64[18]._super;
  Val x84 = x64[19]._super;
  Val x85 = x64[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:329)
  Val x86 = ((((((x65 + (x66 * Val(2))) + (x67 * Val(4))) + (x68 * Val(8))) + (x69 * Val(16))) +
              (x70 * Val(32))) +
             (x71 * Val(64)));
  Val x87 =
      ((((((x86 + (x72 * Val(128))) + (x73 * Val(256))) + (x74 * Val(512))) + (x75 * Val(1024))) +
        (x76 * Val(2048))) +
       (x77 * Val(4096)));
  Val x88 = ((((((x87 + (x78 * Val(8192))) + (x79 * Val(16384))) + (x80 * Val(32768))) +
               (x81 * Val(65536))) +
              (x82 * Val(131072))) +
             (x83 * Val(262144)));
  EQZ((((x88 + (x84 * Val(524288))) + (x85 * Val(1048576))) - x62),
      "rho_minor1(zirgen/circuit/keccak/keccak.zir:329)");
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  NondetRegStruct22Array x89 = x5.arrA;
  NondetRegStruct24Array x90 = x5.arrD;
  Val x91 = x89[0]._super;
  Val x92 = x90[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x93 = ((x10 * x91) + ((Val(1) - x10) * (Val(1) - x91)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x94 = x89[1]._super;
  Val x95 = x90[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x96 = ((x11 * x94) + ((Val(1) - x11) * (Val(1) - x94)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x97 = x89[2]._super;
  Val x98 = x90[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x99 = ((x12 * x97) + ((Val(1) - x12) * (Val(1) - x97)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x100 = x89[3]._super;
  Val x101 = x90[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x102 = ((x13 * x100) + ((Val(1) - x13) * (Val(1) - x100)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x103 = x89[4]._super;
  Val x104 = x90[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x105 = ((x14 * x103) + ((Val(1) - x14) * (Val(1) - x103)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x106 = x89[5]._super;
  Val x107 = x90[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x108 = ((x15 * x106) + ((Val(1) - x15) * (Val(1) - x106)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x109 = x89[6]._super;
  Val x110 = x90[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x111 = ((x16 * x109) + ((Val(1) - x16) * (Val(1) - x109)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x112 = x89[7]._super;
  Val x113 = x90[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x114 = ((x17 * x112) + ((Val(1) - x17) * (Val(1) - x112)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x115 = x89[8]._super;
  Val x116 = x90[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x117 = ((x18 * x115) + ((Val(1) - x18) * (Val(1) - x115)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x118 = x89[9]._super;
  Val x119 = x90[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x120 = ((x19 * x118) + ((Val(1) - x19) * (Val(1) - x118)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x121 = x89[10]._super;
  Val x122 = x90[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x123 = ((x20 * x121) + ((Val(1) - x20) * (Val(1) - x121)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x124 = x89[11]._super;
  Val x125 = x90[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x126 = ((x21 * x124) + ((Val(1) - x21) * (Val(1) - x124)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x127 = x89[12]._super;
  Val x128 = x90[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x129 = ((x22 * x127) + ((Val(1) - x22) * (Val(1) - x127)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x130 = x89[13]._super;
  Val x131 = x90[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x132 = ((x23 * x130) + ((Val(1) - x23) * (Val(1) - x130)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x133 = x89[14]._super;
  Val x134 = x90[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x135 = ((x24 * x133) + ((Val(1) - x24) * (Val(1) - x133)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x136 = x89[15]._super;
  Val x137 = x90[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x138 = ((x25 * x136) + ((Val(1) - x25) * (Val(1) - x136)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x139 = x89[16]._super;
  Val x140 = x90[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x141 = ((x26 * x139) + ((Val(1) - x26) * (Val(1) - x139)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x142 = x89[17]._super;
  Val x143 = x90[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x144 = ((x27 * x142) + ((Val(1) - x27) * (Val(1) - x142)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x145 = x89[18]._super;
  Val x146 = x90[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x147 = ((x28 * x145) + ((Val(1) - x28) * (Val(1) - x145)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x148 = x89[19]._super;
  Val x149 = x90[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x150 = ((x29 * x148) + ((Val(1) - x29) * (Val(1) - x148)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x151 = x89[20]._super;
  Val x152 = x90[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x153 = ((x30 * x151) + ((Val(1) - x30) * (Val(1) - x151)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x154 = x89[21]._super;
  Val x155 = x90[21]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x156 = ((x31 * x154) + ((Val(1) - x31) * (Val(1) - x154)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  NondetRegStruct22Array x157 = x5.arrB;
  NondetRegStruct22Array x158 = x5.arrE;
  Val x159 = x157[0]._super;
  Val x160 = x158[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x161 = ((x38 * x159) + ((Val(1) - x38) * (Val(1) - x159)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x162 = x157[1]._super;
  Val x163 = x158[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x164 = ((x39 * x162) + ((Val(1) - x39) * (Val(1) - x162)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x165 = x157[2]._super;
  Val x166 = x158[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x167 = ((x40 * x165) + ((Val(1) - x40) * (Val(1) - x165)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x168 = x157[3]._super;
  Val x169 = x158[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x170 = ((x41 * x168) + ((Val(1) - x41) * (Val(1) - x168)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x171 = x157[4]._super;
  Val x172 = x158[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x173 = ((x42 * x171) + ((Val(1) - x42) * (Val(1) - x171)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x174 = x157[5]._super;
  Val x175 = x158[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x176 = ((x43 * x174) + ((Val(1) - x43) * (Val(1) - x174)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x177 = x157[6]._super;
  Val x178 = x158[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x179 = ((x44 * x177) + ((Val(1) - x44) * (Val(1) - x177)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x180 = x157[7]._super;
  Val x181 = x158[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x182 = ((x45 * x180) + ((Val(1) - x45) * (Val(1) - x180)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x183 = x157[8]._super;
  Val x184 = x158[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x185 = ((x46 * x183) + ((Val(1) - x46) * (Val(1) - x183)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x186 = x157[9]._super;
  Val x187 = x158[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x188 = ((x47 * x186) + ((Val(1) - x47) * (Val(1) - x186)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x189 = x157[10]._super;
  Val x190 = x158[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x191 = ((x48 * x189) + ((Val(1) - x48) * (Val(1) - x189)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x192 = x157[11]._super;
  Val x193 = x158[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x194 = ((x49 * x192) + ((Val(1) - x49) * (Val(1) - x192)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x195 = x157[12]._super;
  Val x196 = x158[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x197 = ((x50 * x195) + ((Val(1) - x50) * (Val(1) - x195)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x198 = x157[13]._super;
  Val x199 = x158[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x200 = ((x51 * x198) + ((Val(1) - x51) * (Val(1) - x198)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x201 = x157[14]._super;
  Val x202 = x158[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x203 = ((x52 * x201) + ((Val(1) - x52) * (Val(1) - x201)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x204 = x157[15]._super;
  Val x205 = x158[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x206 = ((x53 * x204) + ((Val(1) - x53) * (Val(1) - x204)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x207 = x157[16]._super;
  Val x208 = x158[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x209 = ((x54 * x207) + ((Val(1) - x54) * (Val(1) - x207)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x210 = x157[17]._super;
  Val x211 = x158[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x212 = ((x55 * x210) + ((Val(1) - x55) * (Val(1) - x210)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x213 = x157[18]._super;
  Val x214 = x158[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x215 = ((x56 * x213) + ((Val(1) - x56) * (Val(1) - x213)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x216 = x157[19]._super;
  Val x217 = x158[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x218 = ((x57 * x216) + ((Val(1) - x57) * (Val(1) - x216)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x219 = x157[20]._super;
  Val x220 = x158[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x221 = ((x58 * x219) + ((Val(1) - x58) * (Val(1) - x219)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  NondetRegStruct22Array x222 = x5.arrC;
  NondetRegStruct22Array x223 = x5.arrF;
  Val x224 = x222[0]._super;
  Val x225 = x223[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x226 = ((x65 * x224) + ((Val(1) - x65) * (Val(1) - x224)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x227 = x222[1]._super;
  Val x228 = x223[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x229 = ((x66 * x227) + ((Val(1) - x66) * (Val(1) - x227)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x230 = x222[2]._super;
  Val x231 = x223[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x232 = ((x67 * x230) + ((Val(1) - x67) * (Val(1) - x230)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x233 = x222[3]._super;
  Val x234 = x223[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x235 = ((x68 * x233) + ((Val(1) - x68) * (Val(1) - x233)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x236 = x222[4]._super;
  Val x237 = x223[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x238 = ((x69 * x236) + ((Val(1) - x69) * (Val(1) - x236)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x239 = x222[5]._super;
  Val x240 = x223[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x241 = ((x70 * x239) + ((Val(1) - x70) * (Val(1) - x239)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x242 = x222[6]._super;
  Val x243 = x223[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x244 = ((x71 * x242) + ((Val(1) - x71) * (Val(1) - x242)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x245 = x222[7]._super;
  Val x246 = x223[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x247 = ((x72 * x245) + ((Val(1) - x72) * (Val(1) - x245)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x248 = x222[8]._super;
  Val x249 = x223[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x250 = ((x73 * x248) + ((Val(1) - x73) * (Val(1) - x248)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x251 = x222[9]._super;
  Val x252 = x223[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x253 = ((x74 * x251) + ((Val(1) - x74) * (Val(1) - x251)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x254 = x222[10]._super;
  Val x255 = x223[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x256 = ((x75 * x254) + ((Val(1) - x75) * (Val(1) - x254)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x257 = x222[11]._super;
  Val x258 = x223[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x259 = ((x76 * x257) + ((Val(1) - x76) * (Val(1) - x257)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x260 = x222[12]._super;
  Val x261 = x223[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x262 = ((x77 * x260) + ((Val(1) - x77) * (Val(1) - x260)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x263 = x222[13]._super;
  Val x264 = x223[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x265 = ((x78 * x263) + ((Val(1) - x78) * (Val(1) - x263)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x266 = x222[14]._super;
  Val x267 = x223[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x268 = ((x79 * x266) + ((Val(1) - x79) * (Val(1) - x266)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x269 = x222[15]._super;
  Val x270 = x223[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x271 = ((x80 * x269) + ((Val(1) - x80) * (Val(1) - x269)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x272 = x222[16]._super;
  Val x273 = x223[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x274 = ((x81 * x272) + ((Val(1) - x81) * (Val(1) - x272)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x275 = x222[17]._super;
  Val x276 = x223[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x277 = ((x82 * x275) + ((Val(1) - x82) * (Val(1) - x275)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x278 = x222[18]._super;
  Val x279 = x223[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x280 = ((x83 * x278) + ((Val(1) - x83) * (Val(1) - x278)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x281 = x222[19]._super;
  Val x282 = x223[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x283 = ((x84 * x281) + ((Val(1) - x84) * (Val(1) - x281)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x284 = x222[20]._super;
  Val x285 = x223[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x286 = ((x85 * x284) + ((Val(1) - x85) * (Val(1) - x284)));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:336)
  Val x287 = (((x179 * x178) + ((Val(1) - x179) * (Val(1) - x178))) +
              (((x182 * x181) + ((Val(1) - x182) * (Val(1) - x181))) * Val(2)));
  Val x288 = ((x287 + (((x185 * x184) + ((Val(1) - x185) * (Val(1) - x184))) * Val(4))) +
              (((x188 * x187) + ((Val(1) - x188) * (Val(1) - x187))) * Val(8)));
  Val x289 = ((x288 + (((x191 * x190) + ((Val(1) - x191) * (Val(1) - x190))) * Val(16))) +
              (((x194 * x193) + ((Val(1) - x194) * (Val(1) - x193))) * Val(32)));
  Val x290 = ((x289 + (((x197 * x196) + ((Val(1) - x197) * (Val(1) - x196))) * Val(64))) +
              (((x200 * x199) + ((Val(1) - x200) * (Val(1) - x199))) * Val(128)));
  Val x291 = ((x290 + (((x203 * x202) + ((Val(1) - x203) * (Val(1) - x202))) * Val(256))) +
              (((x206 * x205) + ((Val(1) - x206) * (Val(1) - x205))) * Val(512)));
  Val x292 = ((x291 + (((x209 * x208) + ((Val(1) - x209) * (Val(1) - x208))) * Val(1024))) +
              (((x212 * x211) + ((Val(1) - x212) * (Val(1) - x211))) * Val(2048)));
  Val x293 = ((x292 + (((x215 * x214) + ((Val(1) - x215) * (Val(1) - x214))) * Val(4096))) +
              (((x218 * x217) + ((Val(1) - x218) * (Val(1) - x217))) * Val(8192)));
  Val x294 = ((x293 + (((x221 * x220) + ((Val(1) - x221) * (Val(1) - x220))) * Val(16384))) +
              (((x226 * x225) + ((Val(1) - x226) * (Val(1) - x225))) * Val(32768)));
  Val x295 = ((x294 + (((x229 * x228) + ((Val(1) - x229) * (Val(1) - x228))) * Val(65536))) +
              (((x232 * x231) + ((Val(1) - x232) * (Val(1) - x231))) * Val(131072)));
  Val x296 = ((x295 + (((x235 * x234) + ((Val(1) - x235) * (Val(1) - x234))) * Val(262144))) +
              (((x238 * x237) + ((Val(1) - x238) * (Val(1) - x237))) * Val(524288)));
  Val x297 = ((x296 + (((x241 * x240) + ((Val(1) - x241) * (Val(1) - x240))) * Val(1048576))) +
              (((x244 * x243) + ((Val(1) - x244) * (Val(1) - x243))) * Val(2097152)));
  NondetRegStruct x298 = exec_Reg(ctx, x297, LAYOUT_LOOKUP(layout2, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:337)
  Val x299 = (((x247 * x246) + ((Val(1) - x247) * (Val(1) - x246))) +
              (((x250 * x249) + ((Val(1) - x250) * (Val(1) - x249))) * Val(2)));
  Val x300 = ((x299 + (((x253 * x252) + ((Val(1) - x253) * (Val(1) - x252))) * Val(4))) +
              (((x256 * x255) + ((Val(1) - x256) * (Val(1) - x255))) * Val(8)));
  Val x301 = ((x300 + (((x259 * x258) + ((Val(1) - x259) * (Val(1) - x258))) * Val(16))) +
              (((x262 * x261) + ((Val(1) - x262) * (Val(1) - x261))) * Val(32)));
  Val x302 = ((x301 + (((x265 * x264) + ((Val(1) - x265) * (Val(1) - x264))) * Val(64))) +
              (((x268 * x267) + ((Val(1) - x268) * (Val(1) - x267))) * Val(128)));
  Val x303 = ((x302 + (((x271 * x270) + ((Val(1) - x271) * (Val(1) - x270))) * Val(256))) +
              (((x274 * x273) + ((Val(1) - x274) * (Val(1) - x273))) * Val(512)));
  Val x304 = ((x303 + (((x277 * x276) + ((Val(1) - x277) * (Val(1) - x276))) * Val(1024))) +
              (((x280 * x279) + ((Val(1) - x280) * (Val(1) - x279))) * Val(2048)));
  Val x305 = ((x304 + (((x283 * x282) + ((Val(1) - x283) * (Val(1) - x282))) * Val(4096))) +
              (((x286 * x285) + ((Val(1) - x286) * (Val(1) - x285))) * Val(8192)));
  Val x306 = ((x305 + (((x93 * x92) + ((Val(1) - x93) * (Val(1) - x92))) * Val(16384))) +
              (((x96 * x95) + ((Val(1) - x96) * (Val(1) - x95))) * Val(32768)));
  Val x307 = ((x306 + (((x99 * x98) + ((Val(1) - x99) * (Val(1) - x98))) * Val(65536))) +
              (((x102 * x101) + ((Val(1) - x102) * (Val(1) - x101))) * Val(131072)));
  Val x308 = ((x307 + (((x105 * x104) + ((Val(1) - x105) * (Val(1) - x104))) * Val(262144))) +
              (((x108 * x107) + ((Val(1) - x108) * (Val(1) - x107))) * Val(524288)));
  NondetRegStruct x309 =
      exec_Reg(ctx,
               (x308 + (((x111 * x110) + ((Val(1) - x111) * (Val(1) - x110))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _1));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:338)
  Val x310 = (((x114 * x113) + ((Val(1) - x114) * (Val(1) - x113))) +
              (((x117 * x116) + ((Val(1) - x117) * (Val(1) - x116))) * Val(2)));
  Val x311 = ((x310 + (((x120 * x119) + ((Val(1) - x120) * (Val(1) - x119))) * Val(4))) +
              (((x123 * x122) + ((Val(1) - x123) * (Val(1) - x122))) * Val(8)));
  Val x312 = ((x311 + (((x126 * x125) + ((Val(1) - x126) * (Val(1) - x125))) * Val(16))) +
              (((x129 * x128) + ((Val(1) - x129) * (Val(1) - x128))) * Val(32)));
  Val x313 = ((x312 + (((x132 * x131) + ((Val(1) - x132) * (Val(1) - x131))) * Val(64))) +
              (((x135 * x134) + ((Val(1) - x135) * (Val(1) - x134))) * Val(128)));
  Val x314 = ((x313 + (((x138 * x137) + ((Val(1) - x138) * (Val(1) - x137))) * Val(256))) +
              (((x141 * x140) + ((Val(1) - x141) * (Val(1) - x140))) * Val(512)));
  Val x315 = ((x314 + (((x144 * x143) + ((Val(1) - x144) * (Val(1) - x143))) * Val(1024))) +
              (((x147 * x146) + ((Val(1) - x147) * (Val(1) - x146))) * Val(2048)));
  Val x316 = ((x315 + (((x150 * x149) + ((Val(1) - x150) * (Val(1) - x149))) * Val(4096))) +
              (((x153 * x152) + ((Val(1) - x153) * (Val(1) - x152))) * Val(8192)));
  Val x317 = ((x316 + (((x156 * x155) + ((Val(1) - x156) * (Val(1) - x155))) * Val(16384))) +
              (((x161 * x160) + ((Val(1) - x161) * (Val(1) - x160))) * Val(32768)));
  Val x318 = ((x317 + (((x164 * x163) + ((Val(1) - x164) * (Val(1) - x163))) * Val(65536))) +
              (((x167 * x166) + ((Val(1) - x167) * (Val(1) - x166))) * Val(131072)));
  Val x319 = ((x318 + (((x170 * x169) + ((Val(1) - x170) * (Val(1) - x169))) * Val(262144))) +
              (((x173 * x172) + ((Val(1) - x173) * (Val(1) - x172))) * Val(524288)));
  NondetRegStruct x320 =
      exec_Reg(ctx,
               (x319 + (((x176 * x175) + ((Val(1) - x176) * (Val(1) - x175))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _2));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:341)
  BoundLayout<RhoMinor1_0__1_Arm1_SuperLayout> x321 = LAYOUT_LOOKUP(x3, arm1);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:342)
  Val22Array x322 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  Val24Array x323 = Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:339)
  Val22Array x324 =
      Val22Array{x298._super, x309._super, x320._super, Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0)};
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x325 = x5.rnd._super;
  Val x326 = x5.blk._super;
  Val x327 = x5.midx._super;
  if (to_size_t(Val(0))) {
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:342)
    RetTupleStruct x328 = exec_RetTuple(ctx,
                                        x322,
                                        x322,
                                        x322,
                                        x323,
                                        x322,
                                        x324,
                                        Val(8),
                                        Val(6),
                                        x325,
                                        x326,
                                        x327,
                                        LAYOUT_LOOKUP(x3, arm0));
  }
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:292)
  NondetRegStruct24Array x329 = x4.arrD;
  Val x330 = x329[9]._super;
  Val x331 = x329[10]._super;
  Val x332 = x329[11]._super;
  if (to_size_t(Val(1))) {
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:345)
    ToBits_22_Struct x333 = exec_ToBits_22_(ctx, x330, LAYOUT_LOOKUP(x321, unpackM1));
    NondetRegStruct22Array x334 = x333._super;
    Val x335 = x334[0]._super;
    Val x336 = x334[1]._super;
    Val x337 = x334[2]._super;
    Val x338 = x334[3]._super;
    Val x339 = x334[4]._super;
    Val x340 = x334[5]._super;
    Val x341 = x334[6]._super;
    Val x342 = x334[7]._super;
    Val x343 = x334[8]._super;
    Val x344 = x334[9]._super;
    Val x345 = x334[10]._super;
    Val x346 = x334[11]._super;
    Val x347 = x334[12]._super;
    Val x348 = x334[13]._super;
    Val x349 = x334[14]._super;
    Val x350 = x334[15]._super;
    Val x351 = x334[16]._super;
    Val x352 = x334[17]._super;
    Val x353 = x334[18]._super;
    Val x354 = x334[19]._super;
    Val x355 = x334[20]._super;
    Val x356 = x334[21]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:346)
    Val x357 =
        ((((((x335 + (x336 * Val(2))) + (x337 * Val(4))) + (x338 * Val(8))) + (x339 * Val(16))) +
          (x340 * Val(32))) +
         (x341 * Val(64)));
    Val x358 = ((((((x357 + (x342 * Val(128))) + (x343 * Val(256))) + (x344 * Val(512))) +
                  (x345 * Val(1024))) +
                 (x346 * Val(2048))) +
                (x347 * Val(4096)));
    Val x359 = ((((((x358 + (x348 * Val(8192))) + (x349 * Val(16384))) + (x350 * Val(32768))) +
                  (x351 * Val(65536))) +
                 (x352 * Val(131072))) +
                (x353 * Val(262144)));
    EQZ(((((x359 + (x354 * Val(524288))) + (x355 * Val(1048576))) + (x356 * Val(2097152))) - x330),
        "rho_minor1(zirgen/circuit/keccak/keccak.zir:346)");
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:349)
    ToBits_21_Struct x360 = exec_ToBits_21_(ctx, x331, LAYOUT_LOOKUP(x321, unpackM2));
    NondetRegStruct21Array x361 = x360._super;
    Val x362 = x361[0]._super;
    Val x363 = x361[1]._super;
    Val x364 = x361[2]._super;
    Val x365 = x361[3]._super;
    Val x366 = x361[4]._super;
    Val x367 = x361[5]._super;
    Val x368 = x361[6]._super;
    Val x369 = x361[7]._super;
    Val x370 = x361[8]._super;
    Val x371 = x361[9]._super;
    Val x372 = x361[10]._super;
    Val x373 = x361[11]._super;
    Val x374 = x361[12]._super;
    Val x375 = x361[13]._super;
    Val x376 = x361[14]._super;
    Val x377 = x361[15]._super;
    Val x378 = x361[16]._super;
    Val x379 = x361[17]._super;
    Val x380 = x361[18]._super;
    Val x381 = x361[19]._super;
    Val x382 = x361[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:350)
    Val x383 =
        ((((((x362 + (x363 * Val(2))) + (x364 * Val(4))) + (x365 * Val(8))) + (x366 * Val(16))) +
          (x367 * Val(32))) +
         (x368 * Val(64)));
    Val x384 = ((((((x383 + (x369 * Val(128))) + (x370 * Val(256))) + (x371 * Val(512))) +
                  (x372 * Val(1024))) +
                 (x373 * Val(2048))) +
                (x374 * Val(4096)));
    Val x385 = ((((((x384 + (x375 * Val(8192))) + (x376 * Val(16384))) + (x377 * Val(32768))) +
                  (x378 * Val(65536))) +
                 (x379 * Val(131072))) +
                (x380 * Val(262144)));
    EQZ((((x385 + (x381 * Val(524288))) + (x382 * Val(1048576))) - x331),
        "rho_minor1(zirgen/circuit/keccak/keccak.zir:350)");
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:354)
    ToBits_21_Struct x386 = exec_ToBits_21_(ctx, x332, LAYOUT_LOOKUP(x321, unpackM3));
    NondetRegStruct21Array x387 = x386._super;
    Val x388 = x387[0]._super;
    Val x389 = x387[1]._super;
    Val x390 = x387[2]._super;
    Val x391 = x387[3]._super;
    Val x392 = x387[4]._super;
    Val x393 = x387[5]._super;
    Val x394 = x387[6]._super;
    Val x395 = x387[7]._super;
    Val x396 = x387[8]._super;
    Val x397 = x387[9]._super;
    Val x398 = x387[10]._super;
    Val x399 = x387[11]._super;
    Val x400 = x387[12]._super;
    Val x401 = x387[13]._super;
    Val x402 = x387[14]._super;
    Val x403 = x387[15]._super;
    Val x404 = x387[16]._super;
    Val x405 = x387[17]._super;
    Val x406 = x387[18]._super;
    Val x407 = x387[19]._super;
    Val x408 = x387[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:355)
    Val x409 =
        ((((((x388 + (x389 * Val(2))) + (x390 * Val(4))) + (x391 * Val(8))) + (x392 * Val(16))) +
          (x393 * Val(32))) +
         (x394 * Val(64)));
    Val x410 = ((((((x409 + (x395 * Val(128))) + (x396 * Val(256))) + (x397 * Val(512))) +
                  (x398 * Val(1024))) +
                 (x399 * Val(2048))) +
                (x400 * Val(4096)));
    Val x411 = ((((((x410 + (x401 * Val(8192))) + (x402 * Val(16384))) + (x403 * Val(32768))) +
                  (x404 * Val(65536))) +
                 (x405 * Val(131072))) +
                (x406 * Val(262144)));
    EQZ((((x411 + (x407 * Val(524288))) + (x408 * Val(1048576))) - x332),
        "rho_minor1(zirgen/circuit/keccak/keccak.zir:355)");
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:358)
    RetTupleStruct x412 = exec_RetTuple(
        ctx,
        Val22Array{x335, x336, x337, x338, x339, x340, x341, x342, x343, x344, x345,
                   x346, x347, x348, x349, x350, x351, x352, x353, x354, x355, x356},
        Val22Array{x362, x363, x364, x365, x366, x367, x368, x369, x370, x371, x372,
                   x373, x374, x375, x376, x377, x378, x379, x380, x381, x382, Val(0)},
        Val22Array{x388, x389, x390, x391, x392, x393, x394, x395, x396, x397, x398,
                   x399, x400, x401, x402, x403, x404, x405, x406, x407, x408, Val(0)},
        x323,
        x322,
        x324,
        Val(2),
        Val(6),
        x325,
        x326,
        x327,
        LAYOUT_LOOKUP(x321, _super));
  }
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:341)
  RetTupleStruct x413 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x413;
}
RetTupleStruct execRhoMinor2_0__1_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<RhoMinor2_0__1_Layout> layout2) {
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:364)
  RetTupleStruct x3 = back_RetTuple(ctx, 3, arg1);
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:364)
  NondetRegStruct24Array x5 = x3.arrD;
  Val x6 = x5[15]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:368)
  ToBits_22_Struct x7 = exec_ToBits_22_(ctx, x6, LAYOUT_LOOKUP(layout2, unpackP1));
  NondetRegStruct22Array x8 = x7._super;
  Val x9 = x8[0]._super;
  Val x10 = x8[1]._super;
  Val x11 = x8[2]._super;
  Val x12 = x8[3]._super;
  Val x13 = x8[4]._super;
  Val x14 = x8[5]._super;
  Val x15 = x8[6]._super;
  Val x16 = x8[7]._super;
  Val x17 = x8[8]._super;
  Val x18 = x8[9]._super;
  Val x19 = x8[10]._super;
  Val x20 = x8[11]._super;
  Val x21 = x8[12]._super;
  Val x22 = x8[13]._super;
  Val x23 = x8[14]._super;
  Val x24 = x8[15]._super;
  Val x25 = x8[16]._super;
  Val x26 = x8[17]._super;
  Val x27 = x8[18]._super;
  Val x28 = x8[19]._super;
  Val x29 = x8[20]._super;
  Val x30 = x8[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:369)
  Val x31 = ((((((x9 + (x10 * Val(2))) + (x11 * Val(4))) + (x12 * Val(8))) + (x13 * Val(16))) +
              (x14 * Val(32))) +
             (x15 * Val(64)));
  Val x32 =
      ((((((x31 + (x16 * Val(128))) + (x17 * Val(256))) + (x18 * Val(512))) + (x19 * Val(1024))) +
        (x20 * Val(2048))) +
       (x21 * Val(4096)));
  Val x33 = ((((((x32 + (x22 * Val(8192))) + (x23 * Val(16384))) + (x24 * Val(32768))) +
               (x25 * Val(65536))) +
              (x26 * Val(131072))) +
             (x27 * Val(262144)));
  EQZ(((((x33 + (x28 * Val(524288))) + (x29 * Val(1048576))) + (x30 * Val(2097152))) - x6),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:369)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:364)
  Val x34 = x5[16]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:372)
  ToBits_21_Struct x35 = exec_ToBits_21_(ctx, x34, LAYOUT_LOOKUP(layout2, unpackP2));
  NondetRegStruct21Array x36 = x35._super;
  Val x37 = x36[0]._super;
  Val x38 = x36[1]._super;
  Val x39 = x36[2]._super;
  Val x40 = x36[3]._super;
  Val x41 = x36[4]._super;
  Val x42 = x36[5]._super;
  Val x43 = x36[6]._super;
  Val x44 = x36[7]._super;
  Val x45 = x36[8]._super;
  Val x46 = x36[9]._super;
  Val x47 = x36[10]._super;
  Val x48 = x36[11]._super;
  Val x49 = x36[12]._super;
  Val x50 = x36[13]._super;
  Val x51 = x36[14]._super;
  Val x52 = x36[15]._super;
  Val x53 = x36[16]._super;
  Val x54 = x36[17]._super;
  Val x55 = x36[18]._super;
  Val x56 = x36[19]._super;
  Val x57 = x36[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:373)
  Val x58 = ((((((x37 + (x38 * Val(2))) + (x39 * Val(4))) + (x40 * Val(8))) + (x41 * Val(16))) +
              (x42 * Val(32))) +
             (x43 * Val(64)));
  Val x59 =
      ((((((x58 + (x44 * Val(128))) + (x45 * Val(256))) + (x46 * Val(512))) + (x47 * Val(1024))) +
        (x48 * Val(2048))) +
       (x49 * Val(4096)));
  Val x60 = ((((((x59 + (x50 * Val(8192))) + (x51 * Val(16384))) + (x52 * Val(32768))) +
               (x53 * Val(65536))) +
              (x54 * Val(131072))) +
             (x55 * Val(262144)));
  EQZ((((x60 + (x56 * Val(524288))) + (x57 * Val(1048576))) - x34),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:373)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:364)
  Val x61 = x5[17]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:376)
  ToBits_21_Struct x62 = exec_ToBits_21_(ctx, x61, LAYOUT_LOOKUP(layout2, unpackP3));
  NondetRegStruct21Array x63 = x62._super;
  Val x64 = x63[0]._super;
  Val x65 = x63[1]._super;
  Val x66 = x63[2]._super;
  Val x67 = x63[3]._super;
  Val x68 = x63[4]._super;
  Val x69 = x63[5]._super;
  Val x70 = x63[6]._super;
  Val x71 = x63[7]._super;
  Val x72 = x63[8]._super;
  Val x73 = x63[9]._super;
  Val x74 = x63[10]._super;
  Val x75 = x63[11]._super;
  Val x76 = x63[12]._super;
  Val x77 = x63[13]._super;
  Val x78 = x63[14]._super;
  Val x79 = x63[15]._super;
  Val x80 = x63[16]._super;
  Val x81 = x63[17]._super;
  Val x82 = x63[18]._super;
  Val x83 = x63[19]._super;
  Val x84 = x63[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:377)
  Val x85 = ((((((x64 + (x65 * Val(2))) + (x66 * Val(4))) + (x67 * Val(8))) + (x68 * Val(16))) +
              (x69 * Val(32))) +
             (x70 * Val(64)));
  Val x86 =
      ((((((x85 + (x71 * Val(128))) + (x72 * Val(256))) + (x73 * Val(512))) + (x74 * Val(1024))) +
        (x75 * Val(2048))) +
       (x76 * Val(4096)));
  Val x87 = ((((((x86 + (x77 * Val(8192))) + (x78 * Val(16384))) + (x79 * Val(32768))) +
               (x80 * Val(65536))) +
              (x81 * Val(131072))) +
             (x82 * Val(262144)));
  EQZ((((x87 + (x83 * Val(524288))) + (x84 * Val(1048576))) - x61),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:377)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:364)
  NondetRegStruct22Array x88 = x3.arrA;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:383)
  Val x89 = x88[18]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:390)
  ToBits_22_Struct x90 = exec_ToBits_22_(ctx, x89, LAYOUT_LOOKUP(layout2, unpackXy1));
  NondetRegStruct22Array x91 = x90._super;
  Val x92 = x91[0]._super;
  Val x93 = x91[1]._super;
  Val x94 = x91[2]._super;
  Val x95 = x91[3]._super;
  Val x96 = x91[4]._super;
  Val x97 = x91[5]._super;
  Val x98 = x91[6]._super;
  Val x99 = x91[7]._super;
  Val x100 = x91[8]._super;
  Val x101 = x91[9]._super;
  Val x102 = x91[10]._super;
  Val x103 = x91[11]._super;
  Val x104 = x91[12]._super;
  Val x105 = x91[13]._super;
  Val x106 = x91[14]._super;
  Val x107 = x91[15]._super;
  Val x108 = x91[16]._super;
  Val x109 = x91[17]._super;
  Val x110 = x91[18]._super;
  Val x111 = x91[19]._super;
  Val x112 = x91[20]._super;
  Val x113 = x91[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:391)
  Val x114 = ((((((x92 + (x93 * Val(2))) + (x94 * Val(4))) + (x95 * Val(8))) + (x96 * Val(16))) +
               (x97 * Val(32))) +
              (x98 * Val(64)));
  Val x115 = ((((((x114 + (x99 * Val(128))) + (x100 * Val(256))) + (x101 * Val(512))) +
                (x102 * Val(1024))) +
               (x103 * Val(2048))) +
              (x104 * Val(4096)));
  Val x116 = ((((((x115 + (x105 * Val(8192))) + (x106 * Val(16384))) + (x107 * Val(32768))) +
                (x108 * Val(65536))) +
               (x109 * Val(131072))) +
              (x110 * Val(262144)));
  EQZ(((((x116 + (x111 * Val(524288))) + (x112 * Val(1048576))) + (x113 * Val(2097152))) - x89),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:391)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:395)
  Val x117 = x88[19]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:402)
  ToBits_21_Struct x118 = exec_ToBits_21_(ctx, x117, LAYOUT_LOOKUP(layout2, unpackXy2));
  NondetRegStruct21Array x119 = x118._super;
  Val x120 = x119[0]._super;
  Val x121 = x119[1]._super;
  Val x122 = x119[2]._super;
  Val x123 = x119[3]._super;
  Val x124 = x119[4]._super;
  Val x125 = x119[5]._super;
  Val x126 = x119[6]._super;
  Val x127 = x119[7]._super;
  Val x128 = x119[8]._super;
  Val x129 = x119[9]._super;
  Val x130 = x119[10]._super;
  Val x131 = x119[11]._super;
  Val x132 = x119[12]._super;
  Val x133 = x119[13]._super;
  Val x134 = x119[14]._super;
  Val x135 = x119[15]._super;
  Val x136 = x119[16]._super;
  Val x137 = x119[17]._super;
  Val x138 = x119[18]._super;
  Val x139 = x119[19]._super;
  Val x140 = x119[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:403)
  Val x141 =
      ((((((x120 + (x121 * Val(2))) + (x122 * Val(4))) + (x123 * Val(8))) + (x124 * Val(16))) +
        (x125 * Val(32))) +
       (x126 * Val(64)));
  Val x142 = ((((((x141 + (x127 * Val(128))) + (x128 * Val(256))) + (x129 * Val(512))) +
                (x130 * Val(1024))) +
               (x131 * Val(2048))) +
              (x132 * Val(4096)));
  Val x143 = ((((((x142 + (x133 * Val(8192))) + (x134 * Val(16384))) + (x135 * Val(32768))) +
                (x136 * Val(65536))) +
               (x137 * Val(131072))) +
              (x138 * Val(262144)));
  EQZ((((x143 + (x139 * Val(524288))) + (x140 * Val(1048576))) - x117),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:403)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:407)
  Val x144 = x88[20]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:414)
  ToBits_21_Struct x145 = exec_ToBits_21_(ctx, x144, LAYOUT_LOOKUP(layout2, unpackXy3));
  NondetRegStruct21Array x146 = x145._super;
  Val x147 = x146[0]._super;
  Val x148 = x146[1]._super;
  Val x149 = x146[2]._super;
  Val x150 = x146[3]._super;
  Val x151 = x146[4]._super;
  Val x152 = x146[5]._super;
  Val x153 = x146[6]._super;
  Val x154 = x146[7]._super;
  Val x155 = x146[8]._super;
  Val x156 = x146[9]._super;
  Val x157 = x146[10]._super;
  Val x158 = x146[11]._super;
  Val x159 = x146[12]._super;
  Val x160 = x146[13]._super;
  Val x161 = x146[14]._super;
  Val x162 = x146[15]._super;
  Val x163 = x146[16]._super;
  Val x164 = x146[17]._super;
  Val x165 = x146[18]._super;
  Val x166 = x146[19]._super;
  Val x167 = x146[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:415)
  Val x168 =
      ((((((x147 + (x148 * Val(2))) + (x149 * Val(4))) + (x150 * Val(8))) + (x151 * Val(16))) +
        (x152 * Val(32))) +
       (x153 * Val(64)));
  Val x169 = ((((((x168 + (x154 * Val(128))) + (x155 * Val(256))) + (x156 * Val(512))) +
                (x157 * Val(1024))) +
               (x158 * Val(2048))) +
              (x159 * Val(4096)));
  Val x170 = ((((((x169 + (x160 * Val(8192))) + (x161 * Val(16384))) + (x162 * Val(32768))) +
                (x163 * Val(65536))) +
               (x164 * Val(131072))) +
              (x165 * Val(262144)));
  EQZ((((x170 + (x166 * Val(524288))) + (x167 * Val(1048576))) - x144),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:415)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  NondetRegStruct22Array x171 = x4.arrA;
  Val x172 = x171[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x173 = ((x92 * x172) + ((Val(1) - x92) * (Val(1) - x172)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x174 = x171[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x175 = ((x93 * x174) + ((Val(1) - x93) * (Val(1) - x174)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x176 = x171[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x177 = ((x94 * x176) + ((Val(1) - x94) * (Val(1) - x176)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x178 = x171[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x179 = ((x95 * x178) + ((Val(1) - x95) * (Val(1) - x178)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x180 = x171[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x181 = ((x96 * x180) + ((Val(1) - x96) * (Val(1) - x180)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x182 = x171[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x183 = ((x97 * x182) + ((Val(1) - x97) * (Val(1) - x182)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x184 = x171[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x185 = ((x98 * x184) + ((Val(1) - x98) * (Val(1) - x184)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x186 = x171[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x187 = ((x99 * x186) + ((Val(1) - x99) * (Val(1) - x186)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x188 = x171[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x189 = ((x100 * x188) + ((Val(1) - x100) * (Val(1) - x188)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x190 = x171[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x191 = ((x101 * x190) + ((Val(1) - x101) * (Val(1) - x190)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x192 = x171[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x193 = ((x102 * x192) + ((Val(1) - x102) * (Val(1) - x192)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x194 = x171[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x195 = ((x103 * x194) + ((Val(1) - x103) * (Val(1) - x194)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x196 = x171[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x197 = ((x104 * x196) + ((Val(1) - x104) * (Val(1) - x196)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x198 = x171[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x199 = ((x105 * x198) + ((Val(1) - x105) * (Val(1) - x198)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x200 = x171[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x201 = ((x106 * x200) + ((Val(1) - x106) * (Val(1) - x200)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x202 = x171[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x203 = ((x107 * x202) + ((Val(1) - x107) * (Val(1) - x202)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x204 = x171[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x205 = ((x108 * x204) + ((Val(1) - x108) * (Val(1) - x204)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x206 = x171[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x207 = ((x109 * x206) + ((Val(1) - x109) * (Val(1) - x206)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x208 = x171[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x209 = ((x110 * x208) + ((Val(1) - x110) * (Val(1) - x208)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x210 = x171[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x211 = ((x111 * x210) + ((Val(1) - x111) * (Val(1) - x210)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x212 = x171[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x213 = ((x112 * x212) + ((Val(1) - x112) * (Val(1) - x212)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x214 = x171[21]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x215 = ((x113 * x214) + ((Val(1) - x113) * (Val(1) - x214)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  NondetRegStruct22Array x216 = x4.arrB;
  Val x217 = x216[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x218 = ((x120 * x217) + ((Val(1) - x120) * (Val(1) - x217)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x219 = x216[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x220 = ((x121 * x219) + ((Val(1) - x121) * (Val(1) - x219)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x221 = x216[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x222 = ((x122 * x221) + ((Val(1) - x122) * (Val(1) - x221)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x223 = x216[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x224 = ((x123 * x223) + ((Val(1) - x123) * (Val(1) - x223)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x225 = x216[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x226 = ((x124 * x225) + ((Val(1) - x124) * (Val(1) - x225)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x227 = x216[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x228 = ((x125 * x227) + ((Val(1) - x125) * (Val(1) - x227)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x229 = x216[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x230 = ((x126 * x229) + ((Val(1) - x126) * (Val(1) - x229)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x231 = x216[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x232 = ((x127 * x231) + ((Val(1) - x127) * (Val(1) - x231)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x233 = x216[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x234 = ((x128 * x233) + ((Val(1) - x128) * (Val(1) - x233)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x235 = x216[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x236 = ((x129 * x235) + ((Val(1) - x129) * (Val(1) - x235)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x237 = x216[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x238 = ((x130 * x237) + ((Val(1) - x130) * (Val(1) - x237)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x239 = x216[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x240 = ((x131 * x239) + ((Val(1) - x131) * (Val(1) - x239)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x241 = x216[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x242 = ((x132 * x241) + ((Val(1) - x132) * (Val(1) - x241)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x243 = x216[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x244 = ((x133 * x243) + ((Val(1) - x133) * (Val(1) - x243)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x245 = x216[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x246 = ((x134 * x245) + ((Val(1) - x134) * (Val(1) - x245)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x247 = x216[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x248 = ((x135 * x247) + ((Val(1) - x135) * (Val(1) - x247)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x249 = x216[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x250 = ((x136 * x249) + ((Val(1) - x136) * (Val(1) - x249)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x251 = x216[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x252 = ((x137 * x251) + ((Val(1) - x137) * (Val(1) - x251)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x253 = x216[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x254 = ((x138 * x253) + ((Val(1) - x138) * (Val(1) - x253)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x255 = x216[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x256 = ((x139 * x255) + ((Val(1) - x139) * (Val(1) - x255)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x257 = x216[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x258 = ((x140 * x257) + ((Val(1) - x140) * (Val(1) - x257)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  NondetRegStruct22Array x259 = x4.arrC;
  Val x260 = x259[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x261 = ((x147 * x260) + ((Val(1) - x147) * (Val(1) - x260)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x262 = x259[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x263 = ((x148 * x262) + ((Val(1) - x148) * (Val(1) - x262)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x264 = x259[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x265 = ((x149 * x264) + ((Val(1) - x149) * (Val(1) - x264)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x266 = x259[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x267 = ((x150 * x266) + ((Val(1) - x150) * (Val(1) - x266)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x268 = x259[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x269 = ((x151 * x268) + ((Val(1) - x151) * (Val(1) - x268)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x270 = x259[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x271 = ((x152 * x270) + ((Val(1) - x152) * (Val(1) - x270)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x272 = x259[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x273 = ((x153 * x272) + ((Val(1) - x153) * (Val(1) - x272)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x274 = x259[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x275 = ((x154 * x274) + ((Val(1) - x154) * (Val(1) - x274)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x276 = x259[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x277 = ((x155 * x276) + ((Val(1) - x155) * (Val(1) - x276)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x278 = x259[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x279 = ((x156 * x278) + ((Val(1) - x156) * (Val(1) - x278)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x280 = x259[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x281 = ((x157 * x280) + ((Val(1) - x157) * (Val(1) - x280)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x282 = x259[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x283 = ((x158 * x282) + ((Val(1) - x158) * (Val(1) - x282)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x284 = x259[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x285 = ((x159 * x284) + ((Val(1) - x159) * (Val(1) - x284)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x286 = x259[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x287 = ((x160 * x286) + ((Val(1) - x160) * (Val(1) - x286)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x288 = x259[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x289 = ((x161 * x288) + ((Val(1) - x161) * (Val(1) - x288)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x290 = x259[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x291 = ((x162 * x290) + ((Val(1) - x162) * (Val(1) - x290)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x292 = x259[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x293 = ((x163 * x292) + ((Val(1) - x163) * (Val(1) - x292)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x294 = x259[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x295 = ((x164 * x294) + ((Val(1) - x164) * (Val(1) - x294)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x296 = x259[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x297 = ((x165 * x296) + ((Val(1) - x165) * (Val(1) - x296)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x298 = x259[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x299 = ((x166 * x298) + ((Val(1) - x166) * (Val(1) - x298)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x300 = x259[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x301 = ((x167 * x300) + ((Val(1) - x167) * (Val(1) - x300)));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:422)
  Val x302 = (((x213 * x28) + ((Val(1) - x213) * (Val(1) - x28))) +
              (((x215 * x29) + ((Val(1) - x215) * (Val(1) - x29))) * Val(2)));
  Val x303 = ((x302 + (((x218 * x30) + ((Val(1) - x218) * (Val(1) - x30))) * Val(4))) +
              (((x220 * x37) + ((Val(1) - x220) * (Val(1) - x37))) * Val(8)));
  Val x304 = ((x303 + (((x222 * x38) + ((Val(1) - x222) * (Val(1) - x38))) * Val(16))) +
              (((x224 * x39) + ((Val(1) - x224) * (Val(1) - x39))) * Val(32)));
  Val x305 = ((x304 + (((x226 * x40) + ((Val(1) - x226) * (Val(1) - x40))) * Val(64))) +
              (((x228 * x41) + ((Val(1) - x228) * (Val(1) - x41))) * Val(128)));
  Val x306 = ((x305 + (((x230 * x42) + ((Val(1) - x230) * (Val(1) - x42))) * Val(256))) +
              (((x232 * x43) + ((Val(1) - x232) * (Val(1) - x43))) * Val(512)));
  Val x307 = ((x306 + (((x234 * x44) + ((Val(1) - x234) * (Val(1) - x44))) * Val(1024))) +
              (((x236 * x45) + ((Val(1) - x236) * (Val(1) - x45))) * Val(2048)));
  Val x308 = ((x307 + (((x238 * x46) + ((Val(1) - x238) * (Val(1) - x46))) * Val(4096))) +
              (((x240 * x47) + ((Val(1) - x240) * (Val(1) - x47))) * Val(8192)));
  Val x309 = ((x308 + (((x242 * x48) + ((Val(1) - x242) * (Val(1) - x48))) * Val(16384))) +
              (((x244 * x49) + ((Val(1) - x244) * (Val(1) - x49))) * Val(32768)));
  Val x310 = ((x309 + (((x246 * x50) + ((Val(1) - x246) * (Val(1) - x50))) * Val(65536))) +
              (((x248 * x51) + ((Val(1) - x248) * (Val(1) - x51))) * Val(131072)));
  Val x311 = ((x310 + (((x250 * x52) + ((Val(1) - x250) * (Val(1) - x52))) * Val(262144))) +
              (((x252 * x53) + ((Val(1) - x252) * (Val(1) - x53))) * Val(524288)));
  Val x312 = ((x311 + (((x254 * x54) + ((Val(1) - x254) * (Val(1) - x54))) * Val(1048576))) +
              (((x256 * x55) + ((Val(1) - x256) * (Val(1) - x55))) * Val(2097152)));
  NondetRegStruct x313 = exec_Reg(ctx, x312, LAYOUT_LOOKUP(layout2, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:423)
  Val x314 = (((x258 * x56) + ((Val(1) - x258) * (Val(1) - x56))) +
              (((x261 * x57) + ((Val(1) - x261) * (Val(1) - x57))) * Val(2)));
  Val x315 = ((x314 + (((x263 * x64) + ((Val(1) - x263) * (Val(1) - x64))) * Val(4))) +
              (((x265 * x65) + ((Val(1) - x265) * (Val(1) - x65))) * Val(8)));
  Val x316 = ((x315 + (((x267 * x66) + ((Val(1) - x267) * (Val(1) - x66))) * Val(16))) +
              (((x269 * x67) + ((Val(1) - x269) * (Val(1) - x67))) * Val(32)));
  Val x317 = ((x316 + (((x271 * x68) + ((Val(1) - x271) * (Val(1) - x68))) * Val(64))) +
              (((x273 * x69) + ((Val(1) - x273) * (Val(1) - x69))) * Val(128)));
  Val x318 = ((x317 + (((x275 * x70) + ((Val(1) - x275) * (Val(1) - x70))) * Val(256))) +
              (((x277 * x71) + ((Val(1) - x277) * (Val(1) - x71))) * Val(512)));
  Val x319 = ((x318 + (((x279 * x72) + ((Val(1) - x279) * (Val(1) - x72))) * Val(1024))) +
              (((x281 * x73) + ((Val(1) - x281) * (Val(1) - x73))) * Val(2048)));
  Val x320 = ((x319 + (((x283 * x74) + ((Val(1) - x283) * (Val(1) - x74))) * Val(4096))) +
              (((x285 * x75) + ((Val(1) - x285) * (Val(1) - x75))) * Val(8192)));
  Val x321 = ((x320 + (((x287 * x76) + ((Val(1) - x287) * (Val(1) - x76))) * Val(16384))) +
              (((x289 * x77) + ((Val(1) - x289) * (Val(1) - x77))) * Val(32768)));
  Val x322 = ((x321 + (((x291 * x78) + ((Val(1) - x291) * (Val(1) - x78))) * Val(65536))) +
              (((x293 * x79) + ((Val(1) - x293) * (Val(1) - x79))) * Val(131072)));
  Val x323 = ((x322 + (((x295 * x80) + ((Val(1) - x295) * (Val(1) - x80))) * Val(262144))) +
              (((x297 * x81) + ((Val(1) - x297) * (Val(1) - x81))) * Val(524288)));
  NondetRegStruct x324 =
      exec_Reg(ctx,
               (x323 + (((x299 * x82) + ((Val(1) - x299) * (Val(1) - x82))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _1));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:424)
  Val x325 = (((x301 * x83) + ((Val(1) - x301) * (Val(1) - x83))) +
              (((x173 * x84) + ((Val(1) - x173) * (Val(1) - x84))) * Val(2)));
  Val x326 = ((x325 + (((x175 * x9) + ((Val(1) - x175) * (Val(1) - x9))) * Val(4))) +
              (((x177 * x10) + ((Val(1) - x177) * (Val(1) - x10))) * Val(8)));
  Val x327 = ((x326 + (((x179 * x11) + ((Val(1) - x179) * (Val(1) - x11))) * Val(16))) +
              (((x181 * x12) + ((Val(1) - x181) * (Val(1) - x12))) * Val(32)));
  Val x328 = ((x327 + (((x183 * x13) + ((Val(1) - x183) * (Val(1) - x13))) * Val(64))) +
              (((x185 * x14) + ((Val(1) - x185) * (Val(1) - x14))) * Val(128)));
  Val x329 = ((x328 + (((x187 * x15) + ((Val(1) - x187) * (Val(1) - x15))) * Val(256))) +
              (((x189 * x16) + ((Val(1) - x189) * (Val(1) - x16))) * Val(512)));
  Val x330 = ((x329 + (((x191 * x17) + ((Val(1) - x191) * (Val(1) - x17))) * Val(1024))) +
              (((x193 * x18) + ((Val(1) - x193) * (Val(1) - x18))) * Val(2048)));
  Val x331 = ((x330 + (((x195 * x19) + ((Val(1) - x195) * (Val(1) - x19))) * Val(4096))) +
              (((x197 * x20) + ((Val(1) - x197) * (Val(1) - x20))) * Val(8192)));
  Val x332 = ((x331 + (((x199 * x21) + ((Val(1) - x199) * (Val(1) - x21))) * Val(16384))) +
              (((x201 * x22) + ((Val(1) - x201) * (Val(1) - x22))) * Val(32768)));
  Val x333 = ((x332 + (((x203 * x23) + ((Val(1) - x203) * (Val(1) - x23))) * Val(65536))) +
              (((x205 * x24) + ((Val(1) - x205) * (Val(1) - x24))) * Val(131072)));
  Val x334 = ((x333 + (((x207 * x25) + ((Val(1) - x207) * (Val(1) - x25))) * Val(262144))) +
              (((x209 * x26) + ((Val(1) - x209) * (Val(1) - x26))) * Val(524288)));
  NondetRegStruct x335 =
      exec_Reg(ctx,
               (x334 + (((x211 * x27) + ((Val(1) - x211) * (Val(1) - x27))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _2));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:427)
  Val22Array x336 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x337 = exec_RetTuple(
      ctx,
      x336,
      x336,
      x336,
      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
      x336,
      Val22Array{x313._super, x324._super, x335._super, Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0)},
      Val(3),
      Val(6),
      x4.rnd._super,
      x4.blk._super,
      x4.midx._super,
      LAYOUT_LOOKUP(layout2, _super));
  return x337;
}
RetTupleStruct execRhoMinor0_2__1_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<RhoMinor0_2__1_Layout> layout2) {
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  RetTupleStruct x3 = back_RetTuple(ctx, 4, arg1);
  NondetRegStruct24Array x4 = x3.arrD;
  Val x5 = x4[12]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:257)
  ToBits_22_Struct x6 = exec_ToBits_22_(ctx, x5, LAYOUT_LOOKUP(layout2, unpackM1));
  NondetRegStruct22Array x7 = x6._super;
  Val x8 = x7[0]._super;
  Val x9 = x7[1]._super;
  Val x10 = x7[2]._super;
  Val x11 = x7[3]._super;
  Val x12 = x7[4]._super;
  Val x13 = x7[5]._super;
  Val x14 = x7[6]._super;
  Val x15 = x7[7]._super;
  Val x16 = x7[8]._super;
  Val x17 = x7[9]._super;
  Val x18 = x7[10]._super;
  Val x19 = x7[11]._super;
  Val x20 = x7[12]._super;
  Val x21 = x7[13]._super;
  Val x22 = x7[14]._super;
  Val x23 = x7[15]._super;
  Val x24 = x7[16]._super;
  Val x25 = x7[17]._super;
  Val x26 = x7[18]._super;
  Val x27 = x7[19]._super;
  Val x28 = x7[20]._super;
  Val x29 = x7[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:258)
  Val x30 = ((((((x8 + (x9 * Val(2))) + (x10 * Val(4))) + (x11 * Val(8))) + (x12 * Val(16))) +
              (x13 * Val(32))) +
             (x14 * Val(64)));
  Val x31 =
      ((((((x30 + (x15 * Val(128))) + (x16 * Val(256))) + (x17 * Val(512))) + (x18 * Val(1024))) +
        (x19 * Val(2048))) +
       (x20 * Val(4096)));
  Val x32 = ((((((x31 + (x21 * Val(8192))) + (x22 * Val(16384))) + (x23 * Val(32768))) +
               (x24 * Val(65536))) +
              (x25 * Val(131072))) +
             (x26 * Val(262144)));
  EQZ(((((x32 + (x27 * Val(524288))) + (x28 * Val(1048576))) + (x29 * Val(2097152))) - x5),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:258)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x33 = x4[13]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:261)
  ToBits_21_Struct x34 = exec_ToBits_21_(ctx, x33, LAYOUT_LOOKUP(layout2, unpackM2));
  NondetRegStruct21Array x35 = x34._super;
  Val x36 = x35[0]._super;
  Val x37 = x35[1]._super;
  Val x38 = x35[2]._super;
  Val x39 = x35[3]._super;
  Val x40 = x35[4]._super;
  Val x41 = x35[5]._super;
  Val x42 = x35[6]._super;
  Val x43 = x35[7]._super;
  Val x44 = x35[8]._super;
  Val x45 = x35[9]._super;
  Val x46 = x35[10]._super;
  Val x47 = x35[11]._super;
  Val x48 = x35[12]._super;
  Val x49 = x35[13]._super;
  Val x50 = x35[14]._super;
  Val x51 = x35[15]._super;
  Val x52 = x35[16]._super;
  Val x53 = x35[17]._super;
  Val x54 = x35[18]._super;
  Val x55 = x35[19]._super;
  Val x56 = x35[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:262)
  Val x57 = ((((((x36 + (x37 * Val(2))) + (x38 * Val(4))) + (x39 * Val(8))) + (x40 * Val(16))) +
              (x41 * Val(32))) +
             (x42 * Val(64)));
  Val x58 =
      ((((((x57 + (x43 * Val(128))) + (x44 * Val(256))) + (x45 * Val(512))) + (x46 * Val(1024))) +
        (x47 * Val(2048))) +
       (x48 * Val(4096)));
  Val x59 = ((((((x58 + (x49 * Val(8192))) + (x50 * Val(16384))) + (x51 * Val(32768))) +
               (x52 * Val(65536))) +
              (x53 * Val(131072))) +
             (x54 * Val(262144)));
  EQZ((((x59 + (x55 * Val(524288))) + (x56 * Val(1048576))) - x33),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:262)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x60 = x4[14]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:266)
  ToBits_21_Struct x61 = exec_ToBits_21_(ctx, x60, LAYOUT_LOOKUP(layout2, unpackM3));
  NondetRegStruct21Array x62 = x61._super;
  Val x63 = x62[0]._super;
  Val x64 = x62[1]._super;
  Val x65 = x62[2]._super;
  Val x66 = x62[3]._super;
  Val x67 = x62[4]._super;
  Val x68 = x62[5]._super;
  Val x69 = x62[6]._super;
  Val x70 = x62[7]._super;
  Val x71 = x62[8]._super;
  Val x72 = x62[9]._super;
  Val x73 = x62[10]._super;
  Val x74 = x62[11]._super;
  Val x75 = x62[12]._super;
  Val x76 = x62[13]._super;
  Val x77 = x62[14]._super;
  Val x78 = x62[15]._super;
  Val x79 = x62[16]._super;
  Val x80 = x62[17]._super;
  Val x81 = x62[18]._super;
  Val x82 = x62[19]._super;
  Val x83 = x62[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:267)
  Val x84 = ((((((x63 + (x64 * Val(2))) + (x65 * Val(4))) + (x66 * Val(8))) + (x67 * Val(16))) +
              (x68 * Val(32))) +
             (x69 * Val(64)));
  Val x85 =
      ((((((x84 + (x70 * Val(128))) + (x71 * Val(256))) + (x72 * Val(512))) + (x73 * Val(1024))) +
        (x74 * Val(2048))) +
       (x75 * Val(4096)));
  Val x86 = ((((((x85 + (x76 * Val(8192))) + (x77 * Val(16384))) + (x78 * Val(32768))) +
               (x79 * Val(65536))) +
              (x80 * Val(131072))) +
             (x81 * Val(262144)));
  EQZ((((x86 + (x82 * Val(524288))) + (x83 * Val(1048576))) - x60),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:267)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x87 = x4[18]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:271)
  ToBits_22_Struct x88 = exec_ToBits_22_(ctx, x87, LAYOUT_LOOKUP(layout2, unpackP1));
  NondetRegStruct22Array x89 = x88._super;
  Val x90 = x89[0]._super;
  Val x91 = x89[1]._super;
  Val x92 = x89[2]._super;
  Val x93 = x89[3]._super;
  Val x94 = x89[4]._super;
  Val x95 = x89[5]._super;
  Val x96 = x89[6]._super;
  Val x97 = x89[7]._super;
  Val x98 = x89[8]._super;
  Val x99 = x89[9]._super;
  Val x100 = x89[10]._super;
  Val x101 = x89[11]._super;
  Val x102 = x89[12]._super;
  Val x103 = x89[13]._super;
  Val x104 = x89[14]._super;
  Val x105 = x89[15]._super;
  Val x106 = x89[16]._super;
  Val x107 = x89[17]._super;
  Val x108 = x89[18]._super;
  Val x109 = x89[19]._super;
  Val x110 = x89[20]._super;
  Val x111 = x89[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:272)
  Val x112 = ((((((x90 + (x91 * Val(2))) + (x92 * Val(4))) + (x93 * Val(8))) + (x94 * Val(16))) +
               (x95 * Val(32))) +
              (x96 * Val(64)));
  Val x113 =
      ((((((x112 + (x97 * Val(128))) + (x98 * Val(256))) + (x99 * Val(512))) + (x100 * Val(1024))) +
        (x101 * Val(2048))) +
       (x102 * Val(4096)));
  Val x114 = ((((((x113 + (x103 * Val(8192))) + (x104 * Val(16384))) + (x105 * Val(32768))) +
                (x106 * Val(65536))) +
               (x107 * Val(131072))) +
              (x108 * Val(262144)));
  EQZ(((((x114 + (x109 * Val(524288))) + (x110 * Val(1048576))) + (x111 * Val(2097152))) - x87),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:272)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x115 = x4[19]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:275)
  ToBits_21_Struct x116 = exec_ToBits_21_(ctx, x115, LAYOUT_LOOKUP(layout2, unpackP2));
  NondetRegStruct21Array x117 = x116._super;
  Val x118 = x117[0]._super;
  Val x119 = x117[1]._super;
  Val x120 = x117[2]._super;
  Val x121 = x117[3]._super;
  Val x122 = x117[4]._super;
  Val x123 = x117[5]._super;
  Val x124 = x117[6]._super;
  Val x125 = x117[7]._super;
  Val x126 = x117[8]._super;
  Val x127 = x117[9]._super;
  Val x128 = x117[10]._super;
  Val x129 = x117[11]._super;
  Val x130 = x117[12]._super;
  Val x131 = x117[13]._super;
  Val x132 = x117[14]._super;
  Val x133 = x117[15]._super;
  Val x134 = x117[16]._super;
  Val x135 = x117[17]._super;
  Val x136 = x117[18]._super;
  Val x137 = x117[19]._super;
  Val x138 = x117[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:276)
  Val x139 =
      ((((((x118 + (x119 * Val(2))) + (x120 * Val(4))) + (x121 * Val(8))) + (x122 * Val(16))) +
        (x123 * Val(32))) +
       (x124 * Val(64)));
  Val x140 = ((((((x139 + (x125 * Val(128))) + (x126 * Val(256))) + (x127 * Val(512))) +
                (x128 * Val(1024))) +
               (x129 * Val(2048))) +
              (x130 * Val(4096)));
  Val x141 = ((((((x140 + (x131 * Val(8192))) + (x132 * Val(16384))) + (x133 * Val(32768))) +
                (x134 * Val(65536))) +
               (x135 * Val(131072))) +
              (x136 * Val(262144)));
  EQZ((((x141 + (x137 * Val(524288))) + (x138 * Val(1048576))) - x115),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:276)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x142 = x4[20]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:279)
  ToBits_21_Struct x143 = exec_ToBits_21_(ctx, x142, LAYOUT_LOOKUP(layout2, unpackP3));
  NondetRegStruct21Array x144 = x143._super;
  Val x145 = x144[0]._super;
  Val x146 = x144[1]._super;
  Val x147 = x144[2]._super;
  Val x148 = x144[3]._super;
  Val x149 = x144[4]._super;
  Val x150 = x144[5]._super;
  Val x151 = x144[6]._super;
  Val x152 = x144[7]._super;
  Val x153 = x144[8]._super;
  Val x154 = x144[9]._super;
  Val x155 = x144[10]._super;
  Val x156 = x144[11]._super;
  Val x157 = x144[12]._super;
  Val x158 = x144[13]._super;
  Val x159 = x144[14]._super;
  Val x160 = x144[15]._super;
  Val x161 = x144[16]._super;
  Val x162 = x144[17]._super;
  Val x163 = x144[18]._super;
  Val x164 = x144[19]._super;
  Val x165 = x144[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:280)
  Val x166 =
      ((((((x145 + (x146 * Val(2))) + (x147 * Val(4))) + (x148 * Val(8))) + (x149 * Val(16))) +
        (x150 * Val(32))) +
       (x151 * Val(64)));
  Val x167 = ((((((x166 + (x152 * Val(128))) + (x153 * Val(256))) + (x154 * Val(512))) +
                (x155 * Val(1024))) +
               (x156 * Val(2048))) +
              (x157 * Val(4096)));
  Val x168 = ((((((x167 + (x158 * Val(8192))) + (x159 * Val(16384))) + (x160 * Val(32768))) +
                (x161 * Val(65536))) +
               (x162 * Val(131072))) +
              (x163 * Val(262144)));
  EQZ((((x168 + (x164 * Val(524288))) + (x165 * Val(1048576))) - x142),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:280)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:287)
  RetTupleStruct x169 =
      exec_RetTuple(ctx,
                    Val22Array{x165, x90,  x91,  x92,  x93,  x94,  x95,  x96,  x97,  x98,  x99,
                               x100, x101, x102, x103, x104, x105, x106, x107, x108, x109, x110},
                    Val22Array{x111, x118, x119, x120, x121, x122, x123, x124, x125, x126, x127,
                               x128, x129, x130, x131, x132, x133, x134, x135, x136, x137, Val(0)},
                    Val22Array{x138, x145, x146, x147, x148, x149, x150, x151, x152, x153, x154,
                               x155, x156, x157, x158, x159, x160, x161, x162, x163, x164, Val(0)},
                    Val24Array{x8,  x9,  x10, x11, x12, x13, x14, x15, x16, x17, x18,    x19,
                               x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, Val(0), Val(0)},
                    Val22Array{x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46,
                               x47, x48, x49, x50, x51, x52, x53, x54, x55, x56, Val(0)},
                    Val22Array{x63, x64, x65, x66, x67, x68, x69, x70, x71, x72, x73,
                               x74, x75, x76, x77, x78, x79, x80, x81, x82, x83, Val(0)},
                    Val(4),
                    Val(6),
                    x3.rnd._super,
                    x3.blk._super,
                    x3.midx._super,
                    LAYOUT_LOOKUP(layout2, _super));
  return x169;
}
RetTupleStruct execRhoMinor1_2__1_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<RhoMinor1_2__1_Layout> layout2) {
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:341)
  BoundLayout<RhoMinor1_2__1__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:292)
  RetTupleStruct x4 = back_RetTuple(ctx, 5, arg1);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  RetTupleStruct x5 = back_RetTuple(ctx, 1, arg1);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:297)
  Val x6 = x4.arrA[21]._super;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:304)
  ToBits_22_Struct x7 = exec_ToBits_22_(ctx, x6, LAYOUT_LOOKUP(layout2, unpackXy1));
  NondetRegStruct22Array x8 = x7._super;
  Val x9 = x8[0]._super;
  Val x10 = x8[1]._super;
  Val x11 = x8[2]._super;
  Val x12 = x8[3]._super;
  Val x13 = x8[4]._super;
  Val x14 = x8[5]._super;
  Val x15 = x8[6]._super;
  Val x16 = x8[7]._super;
  Val x17 = x8[8]._super;
  Val x18 = x8[9]._super;
  Val x19 = x8[10]._super;
  Val x20 = x8[11]._super;
  Val x21 = x8[12]._super;
  Val x22 = x8[13]._super;
  Val x23 = x8[14]._super;
  Val x24 = x8[15]._super;
  Val x25 = x8[16]._super;
  Val x26 = x8[17]._super;
  Val x27 = x8[18]._super;
  Val x28 = x8[19]._super;
  Val x29 = x8[20]._super;
  Val x30 = x8[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:305)
  Val x31 = ((((((x9 + (x10 * Val(2))) + (x11 * Val(4))) + (x12 * Val(8))) + (x13 * Val(16))) +
              (x14 * Val(32))) +
             (x15 * Val(64)));
  Val x32 =
      ((((((x31 + (x16 * Val(128))) + (x17 * Val(256))) + (x18 * Val(512))) + (x19 * Val(1024))) +
        (x20 * Val(2048))) +
       (x21 * Val(4096)));
  Val x33 = ((((((x32 + (x22 * Val(8192))) + (x23 * Val(16384))) + (x24 * Val(32768))) +
               (x25 * Val(65536))) +
              (x26 * Val(131072))) +
             (x27 * Val(262144)));
  EQZ(((((x33 + (x28 * Val(524288))) + (x29 * Val(1048576))) + (x30 * Val(2097152))) - x6),
      "rho_minor1(zirgen/circuit/keccak/keccak.zir:305)");
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:292)
  NondetRegStruct22Array x34 = x4.arrB;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:309)
  Val x35 = x34[0]._super;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:316)
  ToBits_21_Struct x36 = exec_ToBits_21_(ctx, x35, LAYOUT_LOOKUP(layout2, unpackXy2));
  NondetRegStruct21Array x37 = x36._super;
  Val x38 = x37[0]._super;
  Val x39 = x37[1]._super;
  Val x40 = x37[2]._super;
  Val x41 = x37[3]._super;
  Val x42 = x37[4]._super;
  Val x43 = x37[5]._super;
  Val x44 = x37[6]._super;
  Val x45 = x37[7]._super;
  Val x46 = x37[8]._super;
  Val x47 = x37[9]._super;
  Val x48 = x37[10]._super;
  Val x49 = x37[11]._super;
  Val x50 = x37[12]._super;
  Val x51 = x37[13]._super;
  Val x52 = x37[14]._super;
  Val x53 = x37[15]._super;
  Val x54 = x37[16]._super;
  Val x55 = x37[17]._super;
  Val x56 = x37[18]._super;
  Val x57 = x37[19]._super;
  Val x58 = x37[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:317)
  Val x59 = ((((((x38 + (x39 * Val(2))) + (x40 * Val(4))) + (x41 * Val(8))) + (x42 * Val(16))) +
              (x43 * Val(32))) +
             (x44 * Val(64)));
  Val x60 =
      ((((((x59 + (x45 * Val(128))) + (x46 * Val(256))) + (x47 * Val(512))) + (x48 * Val(1024))) +
        (x49 * Val(2048))) +
       (x50 * Val(4096)));
  Val x61 = ((((((x60 + (x51 * Val(8192))) + (x52 * Val(16384))) + (x53 * Val(32768))) +
               (x54 * Val(65536))) +
              (x55 * Val(131072))) +
             (x56 * Val(262144)));
  EQZ((((x61 + (x57 * Val(524288))) + (x58 * Val(1048576))) - x35),
      "rho_minor1(zirgen/circuit/keccak/keccak.zir:317)");
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:321)
  Val x62 = x34[1]._super;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:328)
  ToBits_21_Struct x63 = exec_ToBits_21_(ctx, x62, LAYOUT_LOOKUP(layout2, unpackXy3));
  NondetRegStruct21Array x64 = x63._super;
  Val x65 = x64[0]._super;
  Val x66 = x64[1]._super;
  Val x67 = x64[2]._super;
  Val x68 = x64[3]._super;
  Val x69 = x64[4]._super;
  Val x70 = x64[5]._super;
  Val x71 = x64[6]._super;
  Val x72 = x64[7]._super;
  Val x73 = x64[8]._super;
  Val x74 = x64[9]._super;
  Val x75 = x64[10]._super;
  Val x76 = x64[11]._super;
  Val x77 = x64[12]._super;
  Val x78 = x64[13]._super;
  Val x79 = x64[14]._super;
  Val x80 = x64[15]._super;
  Val x81 = x64[16]._super;
  Val x82 = x64[17]._super;
  Val x83 = x64[18]._super;
  Val x84 = x64[19]._super;
  Val x85 = x64[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:329)
  Val x86 = ((((((x65 + (x66 * Val(2))) + (x67 * Val(4))) + (x68 * Val(8))) + (x69 * Val(16))) +
              (x70 * Val(32))) +
             (x71 * Val(64)));
  Val x87 =
      ((((((x86 + (x72 * Val(128))) + (x73 * Val(256))) + (x74 * Val(512))) + (x75 * Val(1024))) +
        (x76 * Val(2048))) +
       (x77 * Val(4096)));
  Val x88 = ((((((x87 + (x78 * Val(8192))) + (x79 * Val(16384))) + (x80 * Val(32768))) +
               (x81 * Val(65536))) +
              (x82 * Val(131072))) +
             (x83 * Val(262144)));
  EQZ((((x88 + (x84 * Val(524288))) + (x85 * Val(1048576))) - x62),
      "rho_minor1(zirgen/circuit/keccak/keccak.zir:329)");
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  NondetRegStruct22Array x89 = x5.arrA;
  NondetRegStruct24Array x90 = x5.arrD;
  Val x91 = x89[0]._super;
  Val x92 = x90[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x93 = ((x9 * x91) + ((Val(1) - x9) * (Val(1) - x91)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x94 = x89[1]._super;
  Val x95 = x90[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x96 = ((x10 * x94) + ((Val(1) - x10) * (Val(1) - x94)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x97 = x89[2]._super;
  Val x98 = x90[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x99 = ((x11 * x97) + ((Val(1) - x11) * (Val(1) - x97)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x100 = x89[3]._super;
  Val x101 = x90[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x102 = ((x12 * x100) + ((Val(1) - x12) * (Val(1) - x100)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x103 = x89[4]._super;
  Val x104 = x90[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x105 = ((x13 * x103) + ((Val(1) - x13) * (Val(1) - x103)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x106 = x89[5]._super;
  Val x107 = x90[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x108 = ((x14 * x106) + ((Val(1) - x14) * (Val(1) - x106)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x109 = x89[6]._super;
  Val x110 = x90[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x111 = ((x15 * x109) + ((Val(1) - x15) * (Val(1) - x109)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x112 = x89[7]._super;
  Val x113 = x90[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x114 = ((x16 * x112) + ((Val(1) - x16) * (Val(1) - x112)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x115 = x89[8]._super;
  Val x116 = x90[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x117 = ((x17 * x115) + ((Val(1) - x17) * (Val(1) - x115)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x118 = x89[9]._super;
  Val x119 = x90[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x120 = ((x18 * x118) + ((Val(1) - x18) * (Val(1) - x118)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x121 = x89[10]._super;
  Val x122 = x90[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x123 = ((x19 * x121) + ((Val(1) - x19) * (Val(1) - x121)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x124 = x89[11]._super;
  Val x125 = x90[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x126 = ((x20 * x124) + ((Val(1) - x20) * (Val(1) - x124)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x127 = x89[12]._super;
  Val x128 = x90[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x129 = ((x21 * x127) + ((Val(1) - x21) * (Val(1) - x127)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x130 = x89[13]._super;
  Val x131 = x90[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x132 = ((x22 * x130) + ((Val(1) - x22) * (Val(1) - x130)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x133 = x89[14]._super;
  Val x134 = x90[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x135 = ((x23 * x133) + ((Val(1) - x23) * (Val(1) - x133)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x136 = x89[15]._super;
  Val x137 = x90[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x138 = ((x24 * x136) + ((Val(1) - x24) * (Val(1) - x136)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x139 = x89[16]._super;
  Val x140 = x90[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x141 = ((x25 * x139) + ((Val(1) - x25) * (Val(1) - x139)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x142 = x89[17]._super;
  Val x143 = x90[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x144 = ((x26 * x142) + ((Val(1) - x26) * (Val(1) - x142)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x145 = x89[18]._super;
  Val x146 = x90[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x147 = ((x27 * x145) + ((Val(1) - x27) * (Val(1) - x145)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x148 = x89[19]._super;
  Val x149 = x90[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x150 = ((x28 * x148) + ((Val(1) - x28) * (Val(1) - x148)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x151 = x89[20]._super;
  Val x152 = x90[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x153 = ((x29 * x151) + ((Val(1) - x29) * (Val(1) - x151)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x154 = x89[21]._super;
  Val x155 = x90[21]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x156 = ((x30 * x154) + ((Val(1) - x30) * (Val(1) - x154)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  NondetRegStruct22Array x157 = x5.arrB;
  NondetRegStruct22Array x158 = x5.arrE;
  Val x159 = x157[0]._super;
  Val x160 = x158[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x161 = ((x38 * x159) + ((Val(1) - x38) * (Val(1) - x159)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x162 = x157[1]._super;
  Val x163 = x158[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x164 = ((x39 * x162) + ((Val(1) - x39) * (Val(1) - x162)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x165 = x157[2]._super;
  Val x166 = x158[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x167 = ((x40 * x165) + ((Val(1) - x40) * (Val(1) - x165)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x168 = x157[3]._super;
  Val x169 = x158[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x170 = ((x41 * x168) + ((Val(1) - x41) * (Val(1) - x168)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x171 = x157[4]._super;
  Val x172 = x158[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x173 = ((x42 * x171) + ((Val(1) - x42) * (Val(1) - x171)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x174 = x157[5]._super;
  Val x175 = x158[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x176 = ((x43 * x174) + ((Val(1) - x43) * (Val(1) - x174)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x177 = x157[6]._super;
  Val x178 = x158[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x179 = ((x44 * x177) + ((Val(1) - x44) * (Val(1) - x177)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x180 = x157[7]._super;
  Val x181 = x158[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x182 = ((x45 * x180) + ((Val(1) - x45) * (Val(1) - x180)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x183 = x157[8]._super;
  Val x184 = x158[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x185 = ((x46 * x183) + ((Val(1) - x46) * (Val(1) - x183)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x186 = x157[9]._super;
  Val x187 = x158[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x188 = ((x47 * x186) + ((Val(1) - x47) * (Val(1) - x186)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x189 = x157[10]._super;
  Val x190 = x158[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x191 = ((x48 * x189) + ((Val(1) - x48) * (Val(1) - x189)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x192 = x157[11]._super;
  Val x193 = x158[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x194 = ((x49 * x192) + ((Val(1) - x49) * (Val(1) - x192)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x195 = x157[12]._super;
  Val x196 = x158[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x197 = ((x50 * x195) + ((Val(1) - x50) * (Val(1) - x195)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x198 = x157[13]._super;
  Val x199 = x158[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x200 = ((x51 * x198) + ((Val(1) - x51) * (Val(1) - x198)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x201 = x157[14]._super;
  Val x202 = x158[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x203 = ((x52 * x201) + ((Val(1) - x52) * (Val(1) - x201)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x204 = x157[15]._super;
  Val x205 = x158[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x206 = ((x53 * x204) + ((Val(1) - x53) * (Val(1) - x204)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x207 = x157[16]._super;
  Val x208 = x158[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x209 = ((x54 * x207) + ((Val(1) - x54) * (Val(1) - x207)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x210 = x157[17]._super;
  Val x211 = x158[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x212 = ((x55 * x210) + ((Val(1) - x55) * (Val(1) - x210)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x213 = x157[18]._super;
  Val x214 = x158[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x215 = ((x56 * x213) + ((Val(1) - x56) * (Val(1) - x213)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x216 = x157[19]._super;
  Val x217 = x158[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x218 = ((x57 * x216) + ((Val(1) - x57) * (Val(1) - x216)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x219 = x157[20]._super;
  Val x220 = x158[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x221 = ((x58 * x219) + ((Val(1) - x58) * (Val(1) - x219)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  NondetRegStruct22Array x222 = x5.arrC;
  NondetRegStruct22Array x223 = x5.arrF;
  Val x224 = x222[0]._super;
  Val x225 = x223[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x226 = ((x65 * x224) + ((Val(1) - x65) * (Val(1) - x224)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x227 = x222[1]._super;
  Val x228 = x223[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x229 = ((x66 * x227) + ((Val(1) - x66) * (Val(1) - x227)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x230 = x222[2]._super;
  Val x231 = x223[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x232 = ((x67 * x230) + ((Val(1) - x67) * (Val(1) - x230)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x233 = x222[3]._super;
  Val x234 = x223[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x235 = ((x68 * x233) + ((Val(1) - x68) * (Val(1) - x233)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x236 = x222[4]._super;
  Val x237 = x223[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x238 = ((x69 * x236) + ((Val(1) - x69) * (Val(1) - x236)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x239 = x222[5]._super;
  Val x240 = x223[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x241 = ((x70 * x239) + ((Val(1) - x70) * (Val(1) - x239)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x242 = x222[6]._super;
  Val x243 = x223[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x244 = ((x71 * x242) + ((Val(1) - x71) * (Val(1) - x242)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x245 = x222[7]._super;
  Val x246 = x223[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x247 = ((x72 * x245) + ((Val(1) - x72) * (Val(1) - x245)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x248 = x222[8]._super;
  Val x249 = x223[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x250 = ((x73 * x248) + ((Val(1) - x73) * (Val(1) - x248)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x251 = x222[9]._super;
  Val x252 = x223[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x253 = ((x74 * x251) + ((Val(1) - x74) * (Val(1) - x251)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x254 = x222[10]._super;
  Val x255 = x223[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x256 = ((x75 * x254) + ((Val(1) - x75) * (Val(1) - x254)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x257 = x222[11]._super;
  Val x258 = x223[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x259 = ((x76 * x257) + ((Val(1) - x76) * (Val(1) - x257)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x260 = x222[12]._super;
  Val x261 = x223[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x262 = ((x77 * x260) + ((Val(1) - x77) * (Val(1) - x260)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x263 = x222[13]._super;
  Val x264 = x223[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x265 = ((x78 * x263) + ((Val(1) - x78) * (Val(1) - x263)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x266 = x222[14]._super;
  Val x267 = x223[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x268 = ((x79 * x266) + ((Val(1) - x79) * (Val(1) - x266)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x269 = x222[15]._super;
  Val x270 = x223[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x271 = ((x80 * x269) + ((Val(1) - x80) * (Val(1) - x269)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x272 = x222[16]._super;
  Val x273 = x223[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x274 = ((x81 * x272) + ((Val(1) - x81) * (Val(1) - x272)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x275 = x222[17]._super;
  Val x276 = x223[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x277 = ((x82 * x275) + ((Val(1) - x82) * (Val(1) - x275)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x278 = x222[18]._super;
  Val x279 = x223[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x280 = ((x83 * x278) + ((Val(1) - x83) * (Val(1) - x278)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x281 = x222[19]._super;
  Val x282 = x223[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x283 = ((x84 * x281) + ((Val(1) - x84) * (Val(1) - x281)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x284 = x222[20]._super;
  Val x285 = x223[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x286 = ((x85 * x284) + ((Val(1) - x85) * (Val(1) - x284)));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:336)
  Val x287 = (((x271 * x270) + ((Val(1) - x271) * (Val(1) - x270))) +
              (((x274 * x273) + ((Val(1) - x274) * (Val(1) - x273))) * Val(2)));
  Val x288 = ((x287 + (((x277 * x276) + ((Val(1) - x277) * (Val(1) - x276))) * Val(4))) +
              (((x280 * x279) + ((Val(1) - x280) * (Val(1) - x279))) * Val(8)));
  Val x289 = ((x288 + (((x283 * x282) + ((Val(1) - x283) * (Val(1) - x282))) * Val(16))) +
              (((x286 * x285) + ((Val(1) - x286) * (Val(1) - x285))) * Val(32)));
  Val x290 = ((x289 + (((x93 * x92) + ((Val(1) - x93) * (Val(1) - x92))) * Val(64))) +
              (((x96 * x95) + ((Val(1) - x96) * (Val(1) - x95))) * Val(128)));
  Val x291 = ((x290 + (((x99 * x98) + ((Val(1) - x99) * (Val(1) - x98))) * Val(256))) +
              (((x102 * x101) + ((Val(1) - x102) * (Val(1) - x101))) * Val(512)));
  Val x292 = ((x291 + (((x105 * x104) + ((Val(1) - x105) * (Val(1) - x104))) * Val(1024))) +
              (((x108 * x107) + ((Val(1) - x108) * (Val(1) - x107))) * Val(2048)));
  Val x293 = ((x292 + (((x111 * x110) + ((Val(1) - x111) * (Val(1) - x110))) * Val(4096))) +
              (((x114 * x113) + ((Val(1) - x114) * (Val(1) - x113))) * Val(8192)));
  Val x294 = ((x293 + (((x117 * x116) + ((Val(1) - x117) * (Val(1) - x116))) * Val(16384))) +
              (((x120 * x119) + ((Val(1) - x120) * (Val(1) - x119))) * Val(32768)));
  Val x295 = ((x294 + (((x123 * x122) + ((Val(1) - x123) * (Val(1) - x122))) * Val(65536))) +
              (((x126 * x125) + ((Val(1) - x126) * (Val(1) - x125))) * Val(131072)));
  Val x296 = ((x295 + (((x129 * x128) + ((Val(1) - x129) * (Val(1) - x128))) * Val(262144))) +
              (((x132 * x131) + ((Val(1) - x132) * (Val(1) - x131))) * Val(524288)));
  Val x297 = ((x296 + (((x135 * x134) + ((Val(1) - x135) * (Val(1) - x134))) * Val(1048576))) +
              (((x138 * x137) + ((Val(1) - x138) * (Val(1) - x137))) * Val(2097152)));
  NondetRegStruct x298 = exec_Reg(ctx, x297, LAYOUT_LOOKUP(layout2, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:337)
  Val x299 = (((x141 * x140) + ((Val(1) - x141) * (Val(1) - x140))) +
              (((x144 * x143) + ((Val(1) - x144) * (Val(1) - x143))) * Val(2)));
  Val x300 = ((x299 + (((x147 * x146) + ((Val(1) - x147) * (Val(1) - x146))) * Val(4))) +
              (((x150 * x149) + ((Val(1) - x150) * (Val(1) - x149))) * Val(8)));
  Val x301 = ((x300 + (((x153 * x152) + ((Val(1) - x153) * (Val(1) - x152))) * Val(16))) +
              (((x156 * x155) + ((Val(1) - x156) * (Val(1) - x155))) * Val(32)));
  Val x302 = ((x301 + (((x161 * x160) + ((Val(1) - x161) * (Val(1) - x160))) * Val(64))) +
              (((x164 * x163) + ((Val(1) - x164) * (Val(1) - x163))) * Val(128)));
  Val x303 = ((x302 + (((x167 * x166) + ((Val(1) - x167) * (Val(1) - x166))) * Val(256))) +
              (((x170 * x169) + ((Val(1) - x170) * (Val(1) - x169))) * Val(512)));
  Val x304 = ((x303 + (((x173 * x172) + ((Val(1) - x173) * (Val(1) - x172))) * Val(1024))) +
              (((x176 * x175) + ((Val(1) - x176) * (Val(1) - x175))) * Val(2048)));
  Val x305 = ((x304 + (((x179 * x178) + ((Val(1) - x179) * (Val(1) - x178))) * Val(4096))) +
              (((x182 * x181) + ((Val(1) - x182) * (Val(1) - x181))) * Val(8192)));
  Val x306 = ((x305 + (((x185 * x184) + ((Val(1) - x185) * (Val(1) - x184))) * Val(16384))) +
              (((x188 * x187) + ((Val(1) - x188) * (Val(1) - x187))) * Val(32768)));
  Val x307 = ((x306 + (((x191 * x190) + ((Val(1) - x191) * (Val(1) - x190))) * Val(65536))) +
              (((x194 * x193) + ((Val(1) - x194) * (Val(1) - x193))) * Val(131072)));
  Val x308 = ((x307 + (((x197 * x196) + ((Val(1) - x197) * (Val(1) - x196))) * Val(262144))) +
              (((x200 * x199) + ((Val(1) - x200) * (Val(1) - x199))) * Val(524288)));
  NondetRegStruct x309 =
      exec_Reg(ctx,
               (x308 + (((x203 * x202) + ((Val(1) - x203) * (Val(1) - x202))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _1));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:338)
  Val x310 = (((x206 * x205) + ((Val(1) - x206) * (Val(1) - x205))) +
              (((x209 * x208) + ((Val(1) - x209) * (Val(1) - x208))) * Val(2)));
  Val x311 = ((x310 + (((x212 * x211) + ((Val(1) - x212) * (Val(1) - x211))) * Val(4))) +
              (((x215 * x214) + ((Val(1) - x215) * (Val(1) - x214))) * Val(8)));
  Val x312 = ((x311 + (((x218 * x217) + ((Val(1) - x218) * (Val(1) - x217))) * Val(16))) +
              (((x221 * x220) + ((Val(1) - x221) * (Val(1) - x220))) * Val(32)));
  Val x313 = ((x312 + (((x226 * x225) + ((Val(1) - x226) * (Val(1) - x225))) * Val(64))) +
              (((x229 * x228) + ((Val(1) - x229) * (Val(1) - x228))) * Val(128)));
  Val x314 = ((x313 + (((x232 * x231) + ((Val(1) - x232) * (Val(1) - x231))) * Val(256))) +
              (((x235 * x234) + ((Val(1) - x235) * (Val(1) - x234))) * Val(512)));
  Val x315 = ((x314 + (((x238 * x237) + ((Val(1) - x238) * (Val(1) - x237))) * Val(1024))) +
              (((x241 * x240) + ((Val(1) - x241) * (Val(1) - x240))) * Val(2048)));
  Val x316 = ((x315 + (((x244 * x243) + ((Val(1) - x244) * (Val(1) - x243))) * Val(4096))) +
              (((x247 * x246) + ((Val(1) - x247) * (Val(1) - x246))) * Val(8192)));
  Val x317 = ((x316 + (((x250 * x249) + ((Val(1) - x250) * (Val(1) - x249))) * Val(16384))) +
              (((x253 * x252) + ((Val(1) - x253) * (Val(1) - x252))) * Val(32768)));
  Val x318 = ((x317 + (((x256 * x255) + ((Val(1) - x256) * (Val(1) - x255))) * Val(65536))) +
              (((x259 * x258) + ((Val(1) - x259) * (Val(1) - x258))) * Val(131072)));
  Val x319 = ((x318 + (((x262 * x261) + ((Val(1) - x262) * (Val(1) - x261))) * Val(262144))) +
              (((x265 * x264) + ((Val(1) - x265) * (Val(1) - x264))) * Val(524288)));
  NondetRegStruct x320 =
      exec_Reg(ctx,
               (x319 + (((x268 * x267) + ((Val(1) - x268) * (Val(1) - x267))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _2));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:341)
  BoundLayout<RhoMinor1_2__1_Arm1_SuperLayout> x321 = LAYOUT_LOOKUP(x3, arm1);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:342)
  Val22Array x322 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  Val24Array x323 = Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:339)
  Val22Array x324 =
      Val22Array{x298._super, x309._super, x320._super, Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0)};
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x325 = x5.rnd._super;
  Val x326 = x5.blk._super;
  Val x327 = x5.midx._super;
  if (to_size_t(Val(0))) {
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:342)
    RetTupleStruct x328 = exec_RetTuple(ctx,
                                        x322,
                                        x322,
                                        x322,
                                        x323,
                                        x322,
                                        x324,
                                        Val(8),
                                        Val(6),
                                        x325,
                                        x326,
                                        x327,
                                        LAYOUT_LOOKUP(x3, arm0));
  }
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:292)
  NondetRegStruct24Array x329 = x4.arrD;
  Val x330 = x329[15]._super;
  Val x331 = x329[16]._super;
  Val x332 = x329[17]._super;
  if (to_size_t(Val(1))) {
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:345)
    ToBits_22_Struct x333 = exec_ToBits_22_(ctx, x330, LAYOUT_LOOKUP(x321, unpackM1));
    NondetRegStruct22Array x334 = x333._super;
    Val x335 = x334[0]._super;
    Val x336 = x334[1]._super;
    Val x337 = x334[2]._super;
    Val x338 = x334[3]._super;
    Val x339 = x334[4]._super;
    Val x340 = x334[5]._super;
    Val x341 = x334[6]._super;
    Val x342 = x334[7]._super;
    Val x343 = x334[8]._super;
    Val x344 = x334[9]._super;
    Val x345 = x334[10]._super;
    Val x346 = x334[11]._super;
    Val x347 = x334[12]._super;
    Val x348 = x334[13]._super;
    Val x349 = x334[14]._super;
    Val x350 = x334[15]._super;
    Val x351 = x334[16]._super;
    Val x352 = x334[17]._super;
    Val x353 = x334[18]._super;
    Val x354 = x334[19]._super;
    Val x355 = x334[20]._super;
    Val x356 = x334[21]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:346)
    Val x357 =
        ((((((x335 + (x336 * Val(2))) + (x337 * Val(4))) + (x338 * Val(8))) + (x339 * Val(16))) +
          (x340 * Val(32))) +
         (x341 * Val(64)));
    Val x358 = ((((((x357 + (x342 * Val(128))) + (x343 * Val(256))) + (x344 * Val(512))) +
                  (x345 * Val(1024))) +
                 (x346 * Val(2048))) +
                (x347 * Val(4096)));
    Val x359 = ((((((x358 + (x348 * Val(8192))) + (x349 * Val(16384))) + (x350 * Val(32768))) +
                  (x351 * Val(65536))) +
                 (x352 * Val(131072))) +
                (x353 * Val(262144)));
    EQZ(((((x359 + (x354 * Val(524288))) + (x355 * Val(1048576))) + (x356 * Val(2097152))) - x330),
        "rho_minor1(zirgen/circuit/keccak/keccak.zir:346)");
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:349)
    ToBits_21_Struct x360 = exec_ToBits_21_(ctx, x331, LAYOUT_LOOKUP(x321, unpackM2));
    NondetRegStruct21Array x361 = x360._super;
    Val x362 = x361[0]._super;
    Val x363 = x361[1]._super;
    Val x364 = x361[2]._super;
    Val x365 = x361[3]._super;
    Val x366 = x361[4]._super;
    Val x367 = x361[5]._super;
    Val x368 = x361[6]._super;
    Val x369 = x361[7]._super;
    Val x370 = x361[8]._super;
    Val x371 = x361[9]._super;
    Val x372 = x361[10]._super;
    Val x373 = x361[11]._super;
    Val x374 = x361[12]._super;
    Val x375 = x361[13]._super;
    Val x376 = x361[14]._super;
    Val x377 = x361[15]._super;
    Val x378 = x361[16]._super;
    Val x379 = x361[17]._super;
    Val x380 = x361[18]._super;
    Val x381 = x361[19]._super;
    Val x382 = x361[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:350)
    Val x383 =
        ((((((x362 + (x363 * Val(2))) + (x364 * Val(4))) + (x365 * Val(8))) + (x366 * Val(16))) +
          (x367 * Val(32))) +
         (x368 * Val(64)));
    Val x384 = ((((((x383 + (x369 * Val(128))) + (x370 * Val(256))) + (x371 * Val(512))) +
                  (x372 * Val(1024))) +
                 (x373 * Val(2048))) +
                (x374 * Val(4096)));
    Val x385 = ((((((x384 + (x375 * Val(8192))) + (x376 * Val(16384))) + (x377 * Val(32768))) +
                  (x378 * Val(65536))) +
                 (x379 * Val(131072))) +
                (x380 * Val(262144)));
    EQZ((((x385 + (x381 * Val(524288))) + (x382 * Val(1048576))) - x331),
        "rho_minor1(zirgen/circuit/keccak/keccak.zir:350)");
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:354)
    ToBits_21_Struct x386 = exec_ToBits_21_(ctx, x332, LAYOUT_LOOKUP(x321, unpackM3));
    NondetRegStruct21Array x387 = x386._super;
    Val x388 = x387[0]._super;
    Val x389 = x387[1]._super;
    Val x390 = x387[2]._super;
    Val x391 = x387[3]._super;
    Val x392 = x387[4]._super;
    Val x393 = x387[5]._super;
    Val x394 = x387[6]._super;
    Val x395 = x387[7]._super;
    Val x396 = x387[8]._super;
    Val x397 = x387[9]._super;
    Val x398 = x387[10]._super;
    Val x399 = x387[11]._super;
    Val x400 = x387[12]._super;
    Val x401 = x387[13]._super;
    Val x402 = x387[14]._super;
    Val x403 = x387[15]._super;
    Val x404 = x387[16]._super;
    Val x405 = x387[17]._super;
    Val x406 = x387[18]._super;
    Val x407 = x387[19]._super;
    Val x408 = x387[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:355)
    Val x409 =
        ((((((x388 + (x389 * Val(2))) + (x390 * Val(4))) + (x391 * Val(8))) + (x392 * Val(16))) +
          (x393 * Val(32))) +
         (x394 * Val(64)));
    Val x410 = ((((((x409 + (x395 * Val(128))) + (x396 * Val(256))) + (x397 * Val(512))) +
                  (x398 * Val(1024))) +
                 (x399 * Val(2048))) +
                (x400 * Val(4096)));
    Val x411 = ((((((x410 + (x401 * Val(8192))) + (x402 * Val(16384))) + (x403 * Val(32768))) +
                  (x404 * Val(65536))) +
                 (x405 * Val(131072))) +
                (x406 * Val(262144)));
    EQZ((((x411 + (x407 * Val(524288))) + (x408 * Val(1048576))) - x332),
        "rho_minor1(zirgen/circuit/keccak/keccak.zir:355)");
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:358)
    RetTupleStruct x412 = exec_RetTuple(
        ctx,
        Val22Array{x335, x336, x337, x338, x339, x340, x341, x342, x343, x344, x345,
                   x346, x347, x348, x349, x350, x351, x352, x353, x354, x355, x356},
        Val22Array{x362, x363, x364, x365, x366, x367, x368, x369, x370, x371, x372,
                   x373, x374, x375, x376, x377, x378, x379, x380, x381, x382, Val(0)},
        Val22Array{x388, x389, x390, x391, x392, x393, x394, x395, x396, x397, x398,
                   x399, x400, x401, x402, x403, x404, x405, x406, x407, x408, Val(0)},
        x323,
        x322,
        x324,
        Val(5),
        Val(6),
        x325,
        x326,
        x327,
        LAYOUT_LOOKUP(x321, _super));
  }
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:341)
  RetTupleStruct x413 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x413;
}
RetTupleStruct execRhoMinor2_2__1_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<RhoMinor2_2__1_Layout> layout2) {
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:364)
  RetTupleStruct x3 = back_RetTuple(ctx, 6, arg1);
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:364)
  NondetRegStruct24Array x5 = x3.arrD;
  Val x6 = x5[21]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:368)
  ToBits_22_Struct x7 = exec_ToBits_22_(ctx, x6, LAYOUT_LOOKUP(layout2, unpackP1));
  NondetRegStruct22Array x8 = x7._super;
  Val x9 = x8[0]._super;
  Val x10 = x8[1]._super;
  Val x11 = x8[2]._super;
  Val x12 = x8[3]._super;
  Val x13 = x8[4]._super;
  Val x14 = x8[5]._super;
  Val x15 = x8[6]._super;
  Val x16 = x8[7]._super;
  Val x17 = x8[8]._super;
  Val x18 = x8[9]._super;
  Val x19 = x8[10]._super;
  Val x20 = x8[11]._super;
  Val x21 = x8[12]._super;
  Val x22 = x8[13]._super;
  Val x23 = x8[14]._super;
  Val x24 = x8[15]._super;
  Val x25 = x8[16]._super;
  Val x26 = x8[17]._super;
  Val x27 = x8[18]._super;
  Val x28 = x8[19]._super;
  Val x29 = x8[20]._super;
  Val x30 = x8[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:369)
  Val x31 = ((((((x9 + (x10 * Val(2))) + (x11 * Val(4))) + (x12 * Val(8))) + (x13 * Val(16))) +
              (x14 * Val(32))) +
             (x15 * Val(64)));
  Val x32 =
      ((((((x31 + (x16 * Val(128))) + (x17 * Val(256))) + (x18 * Val(512))) + (x19 * Val(1024))) +
        (x20 * Val(2048))) +
       (x21 * Val(4096)));
  Val x33 = ((((((x32 + (x22 * Val(8192))) + (x23 * Val(16384))) + (x24 * Val(32768))) +
               (x25 * Val(65536))) +
              (x26 * Val(131072))) +
             (x27 * Val(262144)));
  EQZ(((((x33 + (x28 * Val(524288))) + (x29 * Val(1048576))) + (x30 * Val(2097152))) - x6),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:369)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:364)
  Val x34 = x5[22]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:372)
  ToBits_21_Struct x35 = exec_ToBits_21_(ctx, x34, LAYOUT_LOOKUP(layout2, unpackP2));
  NondetRegStruct21Array x36 = x35._super;
  Val x37 = x36[0]._super;
  Val x38 = x36[1]._super;
  Val x39 = x36[2]._super;
  Val x40 = x36[3]._super;
  Val x41 = x36[4]._super;
  Val x42 = x36[5]._super;
  Val x43 = x36[6]._super;
  Val x44 = x36[7]._super;
  Val x45 = x36[8]._super;
  Val x46 = x36[9]._super;
  Val x47 = x36[10]._super;
  Val x48 = x36[11]._super;
  Val x49 = x36[12]._super;
  Val x50 = x36[13]._super;
  Val x51 = x36[14]._super;
  Val x52 = x36[15]._super;
  Val x53 = x36[16]._super;
  Val x54 = x36[17]._super;
  Val x55 = x36[18]._super;
  Val x56 = x36[19]._super;
  Val x57 = x36[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:373)
  Val x58 = ((((((x37 + (x38 * Val(2))) + (x39 * Val(4))) + (x40 * Val(8))) + (x41 * Val(16))) +
              (x42 * Val(32))) +
             (x43 * Val(64)));
  Val x59 =
      ((((((x58 + (x44 * Val(128))) + (x45 * Val(256))) + (x46 * Val(512))) + (x47 * Val(1024))) +
        (x48 * Val(2048))) +
       (x49 * Val(4096)));
  Val x60 = ((((((x59 + (x50 * Val(8192))) + (x51 * Val(16384))) + (x52 * Val(32768))) +
               (x53 * Val(65536))) +
              (x54 * Val(131072))) +
             (x55 * Val(262144)));
  EQZ((((x60 + (x56 * Val(524288))) + (x57 * Val(1048576))) - x34),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:373)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:364)
  Val x61 = x5[23]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:376)
  ToBits_21_Struct x62 = exec_ToBits_21_(ctx, x61, LAYOUT_LOOKUP(layout2, unpackP3));
  NondetRegStruct21Array x63 = x62._super;
  Val x64 = x63[0]._super;
  Val x65 = x63[1]._super;
  Val x66 = x63[2]._super;
  Val x67 = x63[3]._super;
  Val x68 = x63[4]._super;
  Val x69 = x63[5]._super;
  Val x70 = x63[6]._super;
  Val x71 = x63[7]._super;
  Val x72 = x63[8]._super;
  Val x73 = x63[9]._super;
  Val x74 = x63[10]._super;
  Val x75 = x63[11]._super;
  Val x76 = x63[12]._super;
  Val x77 = x63[13]._super;
  Val x78 = x63[14]._super;
  Val x79 = x63[15]._super;
  Val x80 = x63[16]._super;
  Val x81 = x63[17]._super;
  Val x82 = x63[18]._super;
  Val x83 = x63[19]._super;
  Val x84 = x63[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:377)
  Val x85 = ((((((x64 + (x65 * Val(2))) + (x66 * Val(4))) + (x67 * Val(8))) + (x68 * Val(16))) +
              (x69 * Val(32))) +
             (x70 * Val(64)));
  Val x86 =
      ((((((x85 + (x71 * Val(128))) + (x72 * Val(256))) + (x73 * Val(512))) + (x74 * Val(1024))) +
        (x75 * Val(2048))) +
       (x76 * Val(4096)));
  Val x87 = ((((((x86 + (x77 * Val(8192))) + (x78 * Val(16384))) + (x79 * Val(32768))) +
               (x80 * Val(65536))) +
              (x81 * Val(131072))) +
             (x82 * Val(262144)));
  EQZ((((x87 + (x83 * Val(524288))) + (x84 * Val(1048576))) - x61),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:377)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:364)
  NondetRegStruct22Array x88 = x3.arrB;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:383)
  Val x89 = x88[2]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:390)
  ToBits_22_Struct x90 = exec_ToBits_22_(ctx, x89, LAYOUT_LOOKUP(layout2, unpackXy1));
  NondetRegStruct22Array x91 = x90._super;
  Val x92 = x91[0]._super;
  Val x93 = x91[1]._super;
  Val x94 = x91[2]._super;
  Val x95 = x91[3]._super;
  Val x96 = x91[4]._super;
  Val x97 = x91[5]._super;
  Val x98 = x91[6]._super;
  Val x99 = x91[7]._super;
  Val x100 = x91[8]._super;
  Val x101 = x91[9]._super;
  Val x102 = x91[10]._super;
  Val x103 = x91[11]._super;
  Val x104 = x91[12]._super;
  Val x105 = x91[13]._super;
  Val x106 = x91[14]._super;
  Val x107 = x91[15]._super;
  Val x108 = x91[16]._super;
  Val x109 = x91[17]._super;
  Val x110 = x91[18]._super;
  Val x111 = x91[19]._super;
  Val x112 = x91[20]._super;
  Val x113 = x91[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:391)
  Val x114 = ((((((x92 + (x93 * Val(2))) + (x94 * Val(4))) + (x95 * Val(8))) + (x96 * Val(16))) +
               (x97 * Val(32))) +
              (x98 * Val(64)));
  Val x115 = ((((((x114 + (x99 * Val(128))) + (x100 * Val(256))) + (x101 * Val(512))) +
                (x102 * Val(1024))) +
               (x103 * Val(2048))) +
              (x104 * Val(4096)));
  Val x116 = ((((((x115 + (x105 * Val(8192))) + (x106 * Val(16384))) + (x107 * Val(32768))) +
                (x108 * Val(65536))) +
               (x109 * Val(131072))) +
              (x110 * Val(262144)));
  EQZ(((((x116 + (x111 * Val(524288))) + (x112 * Val(1048576))) + (x113 * Val(2097152))) - x89),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:391)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:395)
  Val x117 = x88[3]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:402)
  ToBits_21_Struct x118 = exec_ToBits_21_(ctx, x117, LAYOUT_LOOKUP(layout2, unpackXy2));
  NondetRegStruct21Array x119 = x118._super;
  Val x120 = x119[0]._super;
  Val x121 = x119[1]._super;
  Val x122 = x119[2]._super;
  Val x123 = x119[3]._super;
  Val x124 = x119[4]._super;
  Val x125 = x119[5]._super;
  Val x126 = x119[6]._super;
  Val x127 = x119[7]._super;
  Val x128 = x119[8]._super;
  Val x129 = x119[9]._super;
  Val x130 = x119[10]._super;
  Val x131 = x119[11]._super;
  Val x132 = x119[12]._super;
  Val x133 = x119[13]._super;
  Val x134 = x119[14]._super;
  Val x135 = x119[15]._super;
  Val x136 = x119[16]._super;
  Val x137 = x119[17]._super;
  Val x138 = x119[18]._super;
  Val x139 = x119[19]._super;
  Val x140 = x119[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:403)
  Val x141 =
      ((((((x120 + (x121 * Val(2))) + (x122 * Val(4))) + (x123 * Val(8))) + (x124 * Val(16))) +
        (x125 * Val(32))) +
       (x126 * Val(64)));
  Val x142 = ((((((x141 + (x127 * Val(128))) + (x128 * Val(256))) + (x129 * Val(512))) +
                (x130 * Val(1024))) +
               (x131 * Val(2048))) +
              (x132 * Val(4096)));
  Val x143 = ((((((x142 + (x133 * Val(8192))) + (x134 * Val(16384))) + (x135 * Val(32768))) +
                (x136 * Val(65536))) +
               (x137 * Val(131072))) +
              (x138 * Val(262144)));
  EQZ((((x143 + (x139 * Val(524288))) + (x140 * Val(1048576))) - x117),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:403)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:407)
  Val x144 = x88[4]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:414)
  ToBits_21_Struct x145 = exec_ToBits_21_(ctx, x144, LAYOUT_LOOKUP(layout2, unpackXy3));
  NondetRegStruct21Array x146 = x145._super;
  Val x147 = x146[0]._super;
  Val x148 = x146[1]._super;
  Val x149 = x146[2]._super;
  Val x150 = x146[3]._super;
  Val x151 = x146[4]._super;
  Val x152 = x146[5]._super;
  Val x153 = x146[6]._super;
  Val x154 = x146[7]._super;
  Val x155 = x146[8]._super;
  Val x156 = x146[9]._super;
  Val x157 = x146[10]._super;
  Val x158 = x146[11]._super;
  Val x159 = x146[12]._super;
  Val x160 = x146[13]._super;
  Val x161 = x146[14]._super;
  Val x162 = x146[15]._super;
  Val x163 = x146[16]._super;
  Val x164 = x146[17]._super;
  Val x165 = x146[18]._super;
  Val x166 = x146[19]._super;
  Val x167 = x146[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:415)
  Val x168 =
      ((((((x147 + (x148 * Val(2))) + (x149 * Val(4))) + (x150 * Val(8))) + (x151 * Val(16))) +
        (x152 * Val(32))) +
       (x153 * Val(64)));
  Val x169 = ((((((x168 + (x154 * Val(128))) + (x155 * Val(256))) + (x156 * Val(512))) +
                (x157 * Val(1024))) +
               (x158 * Val(2048))) +
              (x159 * Val(4096)));
  Val x170 = ((((((x169 + (x160 * Val(8192))) + (x161 * Val(16384))) + (x162 * Val(32768))) +
                (x163 * Val(65536))) +
               (x164 * Val(131072))) +
              (x165 * Val(262144)));
  EQZ((((x170 + (x166 * Val(524288))) + (x167 * Val(1048576))) - x144),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:415)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  NondetRegStruct22Array x171 = x4.arrA;
  Val x172 = x171[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x173 = ((x92 * x172) + ((Val(1) - x92) * (Val(1) - x172)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x174 = x171[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x175 = ((x93 * x174) + ((Val(1) - x93) * (Val(1) - x174)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x176 = x171[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x177 = ((x94 * x176) + ((Val(1) - x94) * (Val(1) - x176)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x178 = x171[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x179 = ((x95 * x178) + ((Val(1) - x95) * (Val(1) - x178)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x180 = x171[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x181 = ((x96 * x180) + ((Val(1) - x96) * (Val(1) - x180)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x182 = x171[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x183 = ((x97 * x182) + ((Val(1) - x97) * (Val(1) - x182)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x184 = x171[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x185 = ((x98 * x184) + ((Val(1) - x98) * (Val(1) - x184)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x186 = x171[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x187 = ((x99 * x186) + ((Val(1) - x99) * (Val(1) - x186)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x188 = x171[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x189 = ((x100 * x188) + ((Val(1) - x100) * (Val(1) - x188)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x190 = x171[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x191 = ((x101 * x190) + ((Val(1) - x101) * (Val(1) - x190)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x192 = x171[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x193 = ((x102 * x192) + ((Val(1) - x102) * (Val(1) - x192)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x194 = x171[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x195 = ((x103 * x194) + ((Val(1) - x103) * (Val(1) - x194)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x196 = x171[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x197 = ((x104 * x196) + ((Val(1) - x104) * (Val(1) - x196)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x198 = x171[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x199 = ((x105 * x198) + ((Val(1) - x105) * (Val(1) - x198)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x200 = x171[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x201 = ((x106 * x200) + ((Val(1) - x106) * (Val(1) - x200)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x202 = x171[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x203 = ((x107 * x202) + ((Val(1) - x107) * (Val(1) - x202)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x204 = x171[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x205 = ((x108 * x204) + ((Val(1) - x108) * (Val(1) - x204)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x206 = x171[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x207 = ((x109 * x206) + ((Val(1) - x109) * (Val(1) - x206)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x208 = x171[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x209 = ((x110 * x208) + ((Val(1) - x110) * (Val(1) - x208)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x210 = x171[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x211 = ((x111 * x210) + ((Val(1) - x111) * (Val(1) - x210)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x212 = x171[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x213 = ((x112 * x212) + ((Val(1) - x112) * (Val(1) - x212)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x214 = x171[21]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x215 = ((x113 * x214) + ((Val(1) - x113) * (Val(1) - x214)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  NondetRegStruct22Array x216 = x4.arrB;
  Val x217 = x216[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x218 = ((x120 * x217) + ((Val(1) - x120) * (Val(1) - x217)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x219 = x216[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x220 = ((x121 * x219) + ((Val(1) - x121) * (Val(1) - x219)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x221 = x216[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x222 = ((x122 * x221) + ((Val(1) - x122) * (Val(1) - x221)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x223 = x216[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x224 = ((x123 * x223) + ((Val(1) - x123) * (Val(1) - x223)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x225 = x216[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x226 = ((x124 * x225) + ((Val(1) - x124) * (Val(1) - x225)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x227 = x216[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x228 = ((x125 * x227) + ((Val(1) - x125) * (Val(1) - x227)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x229 = x216[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x230 = ((x126 * x229) + ((Val(1) - x126) * (Val(1) - x229)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x231 = x216[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x232 = ((x127 * x231) + ((Val(1) - x127) * (Val(1) - x231)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x233 = x216[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x234 = ((x128 * x233) + ((Val(1) - x128) * (Val(1) - x233)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x235 = x216[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x236 = ((x129 * x235) + ((Val(1) - x129) * (Val(1) - x235)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x237 = x216[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x238 = ((x130 * x237) + ((Val(1) - x130) * (Val(1) - x237)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x239 = x216[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x240 = ((x131 * x239) + ((Val(1) - x131) * (Val(1) - x239)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x241 = x216[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x242 = ((x132 * x241) + ((Val(1) - x132) * (Val(1) - x241)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x243 = x216[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x244 = ((x133 * x243) + ((Val(1) - x133) * (Val(1) - x243)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x245 = x216[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x246 = ((x134 * x245) + ((Val(1) - x134) * (Val(1) - x245)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x247 = x216[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x248 = ((x135 * x247) + ((Val(1) - x135) * (Val(1) - x247)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x249 = x216[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x250 = ((x136 * x249) + ((Val(1) - x136) * (Val(1) - x249)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x251 = x216[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x252 = ((x137 * x251) + ((Val(1) - x137) * (Val(1) - x251)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x253 = x216[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x254 = ((x138 * x253) + ((Val(1) - x138) * (Val(1) - x253)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x255 = x216[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x256 = ((x139 * x255) + ((Val(1) - x139) * (Val(1) - x255)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x257 = x216[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x258 = ((x140 * x257) + ((Val(1) - x140) * (Val(1) - x257)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  NondetRegStruct22Array x259 = x4.arrC;
  Val x260 = x259[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x261 = ((x147 * x260) + ((Val(1) - x147) * (Val(1) - x260)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x262 = x259[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x263 = ((x148 * x262) + ((Val(1) - x148) * (Val(1) - x262)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x264 = x259[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x265 = ((x149 * x264) + ((Val(1) - x149) * (Val(1) - x264)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x266 = x259[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x267 = ((x150 * x266) + ((Val(1) - x150) * (Val(1) - x266)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x268 = x259[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x269 = ((x151 * x268) + ((Val(1) - x151) * (Val(1) - x268)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x270 = x259[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x271 = ((x152 * x270) + ((Val(1) - x152) * (Val(1) - x270)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x272 = x259[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x273 = ((x153 * x272) + ((Val(1) - x153) * (Val(1) - x272)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x274 = x259[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x275 = ((x154 * x274) + ((Val(1) - x154) * (Val(1) - x274)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x276 = x259[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x277 = ((x155 * x276) + ((Val(1) - x155) * (Val(1) - x276)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x278 = x259[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x279 = ((x156 * x278) + ((Val(1) - x156) * (Val(1) - x278)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x280 = x259[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x281 = ((x157 * x280) + ((Val(1) - x157) * (Val(1) - x280)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x282 = x259[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x283 = ((x158 * x282) + ((Val(1) - x158) * (Val(1) - x282)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x284 = x259[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x285 = ((x159 * x284) + ((Val(1) - x159) * (Val(1) - x284)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x286 = x259[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x287 = ((x160 * x286) + ((Val(1) - x160) * (Val(1) - x286)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x288 = x259[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x289 = ((x161 * x288) + ((Val(1) - x161) * (Val(1) - x288)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x290 = x259[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x291 = ((x162 * x290) + ((Val(1) - x162) * (Val(1) - x290)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x292 = x259[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x293 = ((x163 * x292) + ((Val(1) - x163) * (Val(1) - x292)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x294 = x259[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x295 = ((x164 * x294) + ((Val(1) - x164) * (Val(1) - x294)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x296 = x259[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x297 = ((x165 * x296) + ((Val(1) - x165) * (Val(1) - x296)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x298 = x259[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x299 = ((x166 * x298) + ((Val(1) - x166) * (Val(1) - x298)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x300 = x259[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x301 = ((x167 * x300) + ((Val(1) - x167) * (Val(1) - x300)));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:422)
  Val x302 = (((x191 * x17) + ((Val(1) - x191) * (Val(1) - x17))) +
              (((x193 * x18) + ((Val(1) - x193) * (Val(1) - x18))) * Val(2)));
  Val x303 = ((x302 + (((x195 * x19) + ((Val(1) - x195) * (Val(1) - x19))) * Val(4))) +
              (((x197 * x20) + ((Val(1) - x197) * (Val(1) - x20))) * Val(8)));
  Val x304 = ((x303 + (((x199 * x21) + ((Val(1) - x199) * (Val(1) - x21))) * Val(16))) +
              (((x201 * x22) + ((Val(1) - x201) * (Val(1) - x22))) * Val(32)));
  Val x305 = ((x304 + (((x203 * x23) + ((Val(1) - x203) * (Val(1) - x23))) * Val(64))) +
              (((x205 * x24) + ((Val(1) - x205) * (Val(1) - x24))) * Val(128)));
  Val x306 = ((x305 + (((x207 * x25) + ((Val(1) - x207) * (Val(1) - x25))) * Val(256))) +
              (((x209 * x26) + ((Val(1) - x209) * (Val(1) - x26))) * Val(512)));
  Val x307 = ((x306 + (((x211 * x27) + ((Val(1) - x211) * (Val(1) - x27))) * Val(1024))) +
              (((x213 * x28) + ((Val(1) - x213) * (Val(1) - x28))) * Val(2048)));
  Val x308 = ((x307 + (((x215 * x29) + ((Val(1) - x215) * (Val(1) - x29))) * Val(4096))) +
              (((x218 * x30) + ((Val(1) - x218) * (Val(1) - x30))) * Val(8192)));
  Val x309 = ((x308 + (((x220 * x37) + ((Val(1) - x220) * (Val(1) - x37))) * Val(16384))) +
              (((x222 * x38) + ((Val(1) - x222) * (Val(1) - x38))) * Val(32768)));
  Val x310 = ((x309 + (((x224 * x39) + ((Val(1) - x224) * (Val(1) - x39))) * Val(65536))) +
              (((x226 * x40) + ((Val(1) - x226) * (Val(1) - x40))) * Val(131072)));
  Val x311 = ((x310 + (((x228 * x41) + ((Val(1) - x228) * (Val(1) - x41))) * Val(262144))) +
              (((x230 * x42) + ((Val(1) - x230) * (Val(1) - x42))) * Val(524288)));
  Val x312 = ((x311 + (((x232 * x43) + ((Val(1) - x232) * (Val(1) - x43))) * Val(1048576))) +
              (((x234 * x44) + ((Val(1) - x234) * (Val(1) - x44))) * Val(2097152)));
  NondetRegStruct x313 = exec_Reg(ctx, x312, LAYOUT_LOOKUP(layout2, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:423)
  Val x314 = (((x236 * x45) + ((Val(1) - x236) * (Val(1) - x45))) +
              (((x238 * x46) + ((Val(1) - x238) * (Val(1) - x46))) * Val(2)));
  Val x315 = ((x314 + (((x240 * x47) + ((Val(1) - x240) * (Val(1) - x47))) * Val(4))) +
              (((x242 * x48) + ((Val(1) - x242) * (Val(1) - x48))) * Val(8)));
  Val x316 = ((x315 + (((x244 * x49) + ((Val(1) - x244) * (Val(1) - x49))) * Val(16))) +
              (((x246 * x50) + ((Val(1) - x246) * (Val(1) - x50))) * Val(32)));
  Val x317 = ((x316 + (((x248 * x51) + ((Val(1) - x248) * (Val(1) - x51))) * Val(64))) +
              (((x250 * x52) + ((Val(1) - x250) * (Val(1) - x52))) * Val(128)));
  Val x318 = ((x317 + (((x252 * x53) + ((Val(1) - x252) * (Val(1) - x53))) * Val(256))) +
              (((x254 * x54) + ((Val(1) - x254) * (Val(1) - x54))) * Val(512)));
  Val x319 = ((x318 + (((x256 * x55) + ((Val(1) - x256) * (Val(1) - x55))) * Val(1024))) +
              (((x258 * x56) + ((Val(1) - x258) * (Val(1) - x56))) * Val(2048)));
  Val x320 = ((x319 + (((x261 * x57) + ((Val(1) - x261) * (Val(1) - x57))) * Val(4096))) +
              (((x263 * x64) + ((Val(1) - x263) * (Val(1) - x64))) * Val(8192)));
  Val x321 = ((x320 + (((x265 * x65) + ((Val(1) - x265) * (Val(1) - x65))) * Val(16384))) +
              (((x267 * x66) + ((Val(1) - x267) * (Val(1) - x66))) * Val(32768)));
  Val x322 = ((x321 + (((x269 * x67) + ((Val(1) - x269) * (Val(1) - x67))) * Val(65536))) +
              (((x271 * x68) + ((Val(1) - x271) * (Val(1) - x68))) * Val(131072)));
  Val x323 = ((x322 + (((x273 * x69) + ((Val(1) - x273) * (Val(1) - x69))) * Val(262144))) +
              (((x275 * x70) + ((Val(1) - x275) * (Val(1) - x70))) * Val(524288)));
  NondetRegStruct x324 =
      exec_Reg(ctx,
               (x323 + (((x277 * x71) + ((Val(1) - x277) * (Val(1) - x71))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _1));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:424)
  Val x325 = (((x279 * x72) + ((Val(1) - x279) * (Val(1) - x72))) +
              (((x281 * x73) + ((Val(1) - x281) * (Val(1) - x73))) * Val(2)));
  Val x326 = ((x325 + (((x283 * x74) + ((Val(1) - x283) * (Val(1) - x74))) * Val(4))) +
              (((x285 * x75) + ((Val(1) - x285) * (Val(1) - x75))) * Val(8)));
  Val x327 = ((x326 + (((x287 * x76) + ((Val(1) - x287) * (Val(1) - x76))) * Val(16))) +
              (((x289 * x77) + ((Val(1) - x289) * (Val(1) - x77))) * Val(32)));
  Val x328 = ((x327 + (((x291 * x78) + ((Val(1) - x291) * (Val(1) - x78))) * Val(64))) +
              (((x293 * x79) + ((Val(1) - x293) * (Val(1) - x79))) * Val(128)));
  Val x329 = ((x328 + (((x295 * x80) + ((Val(1) - x295) * (Val(1) - x80))) * Val(256))) +
              (((x297 * x81) + ((Val(1) - x297) * (Val(1) - x81))) * Val(512)));
  Val x330 = ((x329 + (((x299 * x82) + ((Val(1) - x299) * (Val(1) - x82))) * Val(1024))) +
              (((x301 * x83) + ((Val(1) - x301) * (Val(1) - x83))) * Val(2048)));
  Val x331 = ((x330 + (((x173 * x84) + ((Val(1) - x173) * (Val(1) - x84))) * Val(4096))) +
              (((x175 * x9) + ((Val(1) - x175) * (Val(1) - x9))) * Val(8192)));
  Val x332 = ((x331 + (((x177 * x10) + ((Val(1) - x177) * (Val(1) - x10))) * Val(16384))) +
              (((x179 * x11) + ((Val(1) - x179) * (Val(1) - x11))) * Val(32768)));
  Val x333 = ((x332 + (((x181 * x12) + ((Val(1) - x181) * (Val(1) - x12))) * Val(65536))) +
              (((x183 * x13) + ((Val(1) - x183) * (Val(1) - x13))) * Val(131072)));
  Val x334 = ((x333 + (((x185 * x14) + ((Val(1) - x185) * (Val(1) - x14))) * Val(262144))) +
              (((x187 * x15) + ((Val(1) - x187) * (Val(1) - x15))) * Val(524288)));
  NondetRegStruct x335 =
      exec_Reg(ctx,
               (x334 + (((x189 * x16) + ((Val(1) - x189) * (Val(1) - x16))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _2));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:427)
  Val22Array x336 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x337 = exec_RetTuple(
      ctx,
      x336,
      x336,
      x336,
      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
      x336,
      Val22Array{x313._super, x324._super, x335._super, Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0)},
      Val(6),
      Val(6),
      x4.rnd._super,
      x4.blk._super,
      x4.midx._super,
      LAYOUT_LOOKUP(layout2, _super));
  return x337;
}
RetTupleStruct execRhoMinor0_4__1_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<RhoMinor0_4__1_Layout> layout2) {
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  RetTupleStruct x3 = back_RetTuple(ctx, 7, arg1);
  NondetRegStruct24Array x4 = x3.arrD;
  Val x5 = x4[18]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:257)
  ToBits_22_Struct x6 = exec_ToBits_22_(ctx, x5, LAYOUT_LOOKUP(layout2, unpackM1));
  NondetRegStruct22Array x7 = x6._super;
  Val x8 = x7[0]._super;
  Val x9 = x7[1]._super;
  Val x10 = x7[2]._super;
  Val x11 = x7[3]._super;
  Val x12 = x7[4]._super;
  Val x13 = x7[5]._super;
  Val x14 = x7[6]._super;
  Val x15 = x7[7]._super;
  Val x16 = x7[8]._super;
  Val x17 = x7[9]._super;
  Val x18 = x7[10]._super;
  Val x19 = x7[11]._super;
  Val x20 = x7[12]._super;
  Val x21 = x7[13]._super;
  Val x22 = x7[14]._super;
  Val x23 = x7[15]._super;
  Val x24 = x7[16]._super;
  Val x25 = x7[17]._super;
  Val x26 = x7[18]._super;
  Val x27 = x7[19]._super;
  Val x28 = x7[20]._super;
  Val x29 = x7[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:258)
  Val x30 = ((((((x8 + (x9 * Val(2))) + (x10 * Val(4))) + (x11 * Val(8))) + (x12 * Val(16))) +
              (x13 * Val(32))) +
             (x14 * Val(64)));
  Val x31 =
      ((((((x30 + (x15 * Val(128))) + (x16 * Val(256))) + (x17 * Val(512))) + (x18 * Val(1024))) +
        (x19 * Val(2048))) +
       (x20 * Val(4096)));
  Val x32 = ((((((x31 + (x21 * Val(8192))) + (x22 * Val(16384))) + (x23 * Val(32768))) +
               (x24 * Val(65536))) +
              (x25 * Val(131072))) +
             (x26 * Val(262144)));
  EQZ(((((x32 + (x27 * Val(524288))) + (x28 * Val(1048576))) + (x29 * Val(2097152))) - x5),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:258)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x33 = x4[19]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:261)
  ToBits_21_Struct x34 = exec_ToBits_21_(ctx, x33, LAYOUT_LOOKUP(layout2, unpackM2));
  NondetRegStruct21Array x35 = x34._super;
  Val x36 = x35[0]._super;
  Val x37 = x35[1]._super;
  Val x38 = x35[2]._super;
  Val x39 = x35[3]._super;
  Val x40 = x35[4]._super;
  Val x41 = x35[5]._super;
  Val x42 = x35[6]._super;
  Val x43 = x35[7]._super;
  Val x44 = x35[8]._super;
  Val x45 = x35[9]._super;
  Val x46 = x35[10]._super;
  Val x47 = x35[11]._super;
  Val x48 = x35[12]._super;
  Val x49 = x35[13]._super;
  Val x50 = x35[14]._super;
  Val x51 = x35[15]._super;
  Val x52 = x35[16]._super;
  Val x53 = x35[17]._super;
  Val x54 = x35[18]._super;
  Val x55 = x35[19]._super;
  Val x56 = x35[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:262)
  Val x57 = ((((((x36 + (x37 * Val(2))) + (x38 * Val(4))) + (x39 * Val(8))) + (x40 * Val(16))) +
              (x41 * Val(32))) +
             (x42 * Val(64)));
  Val x58 =
      ((((((x57 + (x43 * Val(128))) + (x44 * Val(256))) + (x45 * Val(512))) + (x46 * Val(1024))) +
        (x47 * Val(2048))) +
       (x48 * Val(4096)));
  Val x59 = ((((((x58 + (x49 * Val(8192))) + (x50 * Val(16384))) + (x51 * Val(32768))) +
               (x52 * Val(65536))) +
              (x53 * Val(131072))) +
             (x54 * Val(262144)));
  EQZ((((x59 + (x55 * Val(524288))) + (x56 * Val(1048576))) - x33),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:262)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x60 = x4[20]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:266)
  ToBits_21_Struct x61 = exec_ToBits_21_(ctx, x60, LAYOUT_LOOKUP(layout2, unpackM3));
  NondetRegStruct21Array x62 = x61._super;
  Val x63 = x62[0]._super;
  Val x64 = x62[1]._super;
  Val x65 = x62[2]._super;
  Val x66 = x62[3]._super;
  Val x67 = x62[4]._super;
  Val x68 = x62[5]._super;
  Val x69 = x62[6]._super;
  Val x70 = x62[7]._super;
  Val x71 = x62[8]._super;
  Val x72 = x62[9]._super;
  Val x73 = x62[10]._super;
  Val x74 = x62[11]._super;
  Val x75 = x62[12]._super;
  Val x76 = x62[13]._super;
  Val x77 = x62[14]._super;
  Val x78 = x62[15]._super;
  Val x79 = x62[16]._super;
  Val x80 = x62[17]._super;
  Val x81 = x62[18]._super;
  Val x82 = x62[19]._super;
  Val x83 = x62[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:267)
  Val x84 = ((((((x63 + (x64 * Val(2))) + (x65 * Val(4))) + (x66 * Val(8))) + (x67 * Val(16))) +
              (x68 * Val(32))) +
             (x69 * Val(64)));
  Val x85 =
      ((((((x84 + (x70 * Val(128))) + (x71 * Val(256))) + (x72 * Val(512))) + (x73 * Val(1024))) +
        (x74 * Val(2048))) +
       (x75 * Val(4096)));
  Val x86 = ((((((x85 + (x76 * Val(8192))) + (x77 * Val(16384))) + (x78 * Val(32768))) +
               (x79 * Val(65536))) +
              (x80 * Val(131072))) +
             (x81 * Val(262144)));
  EQZ((((x86 + (x82 * Val(524288))) + (x83 * Val(1048576))) - x60),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:267)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x87 = x4[9]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:271)
  ToBits_22_Struct x88 = exec_ToBits_22_(ctx, x87, LAYOUT_LOOKUP(layout2, unpackP1));
  NondetRegStruct22Array x89 = x88._super;
  Val x90 = x89[0]._super;
  Val x91 = x89[1]._super;
  Val x92 = x89[2]._super;
  Val x93 = x89[3]._super;
  Val x94 = x89[4]._super;
  Val x95 = x89[5]._super;
  Val x96 = x89[6]._super;
  Val x97 = x89[7]._super;
  Val x98 = x89[8]._super;
  Val x99 = x89[9]._super;
  Val x100 = x89[10]._super;
  Val x101 = x89[11]._super;
  Val x102 = x89[12]._super;
  Val x103 = x89[13]._super;
  Val x104 = x89[14]._super;
  Val x105 = x89[15]._super;
  Val x106 = x89[16]._super;
  Val x107 = x89[17]._super;
  Val x108 = x89[18]._super;
  Val x109 = x89[19]._super;
  Val x110 = x89[20]._super;
  Val x111 = x89[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:272)
  Val x112 = ((((((x90 + (x91 * Val(2))) + (x92 * Val(4))) + (x93 * Val(8))) + (x94 * Val(16))) +
               (x95 * Val(32))) +
              (x96 * Val(64)));
  Val x113 =
      ((((((x112 + (x97 * Val(128))) + (x98 * Val(256))) + (x99 * Val(512))) + (x100 * Val(1024))) +
        (x101 * Val(2048))) +
       (x102 * Val(4096)));
  Val x114 = ((((((x113 + (x103 * Val(8192))) + (x104 * Val(16384))) + (x105 * Val(32768))) +
                (x106 * Val(65536))) +
               (x107 * Val(131072))) +
              (x108 * Val(262144)));
  EQZ(((((x114 + (x109 * Val(524288))) + (x110 * Val(1048576))) + (x111 * Val(2097152))) - x87),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:272)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x115 = x4[10]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:275)
  ToBits_21_Struct x116 = exec_ToBits_21_(ctx, x115, LAYOUT_LOOKUP(layout2, unpackP2));
  NondetRegStruct21Array x117 = x116._super;
  Val x118 = x117[0]._super;
  Val x119 = x117[1]._super;
  Val x120 = x117[2]._super;
  Val x121 = x117[3]._super;
  Val x122 = x117[4]._super;
  Val x123 = x117[5]._super;
  Val x124 = x117[6]._super;
  Val x125 = x117[7]._super;
  Val x126 = x117[8]._super;
  Val x127 = x117[9]._super;
  Val x128 = x117[10]._super;
  Val x129 = x117[11]._super;
  Val x130 = x117[12]._super;
  Val x131 = x117[13]._super;
  Val x132 = x117[14]._super;
  Val x133 = x117[15]._super;
  Val x134 = x117[16]._super;
  Val x135 = x117[17]._super;
  Val x136 = x117[18]._super;
  Val x137 = x117[19]._super;
  Val x138 = x117[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:276)
  Val x139 =
      ((((((x118 + (x119 * Val(2))) + (x120 * Val(4))) + (x121 * Val(8))) + (x122 * Val(16))) +
        (x123 * Val(32))) +
       (x124 * Val(64)));
  Val x140 = ((((((x139 + (x125 * Val(128))) + (x126 * Val(256))) + (x127 * Val(512))) +
                (x128 * Val(1024))) +
               (x129 * Val(2048))) +
              (x130 * Val(4096)));
  Val x141 = ((((((x140 + (x131 * Val(8192))) + (x132 * Val(16384))) + (x133 * Val(32768))) +
                (x134 * Val(65536))) +
               (x135 * Val(131072))) +
              (x136 * Val(262144)));
  EQZ((((x141 + (x137 * Val(524288))) + (x138 * Val(1048576))) - x115),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:276)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x142 = x4[11]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:279)
  ToBits_21_Struct x143 = exec_ToBits_21_(ctx, x142, LAYOUT_LOOKUP(layout2, unpackP3));
  NondetRegStruct21Array x144 = x143._super;
  Val x145 = x144[0]._super;
  Val x146 = x144[1]._super;
  Val x147 = x144[2]._super;
  Val x148 = x144[3]._super;
  Val x149 = x144[4]._super;
  Val x150 = x144[5]._super;
  Val x151 = x144[6]._super;
  Val x152 = x144[7]._super;
  Val x153 = x144[8]._super;
  Val x154 = x144[9]._super;
  Val x155 = x144[10]._super;
  Val x156 = x144[11]._super;
  Val x157 = x144[12]._super;
  Val x158 = x144[13]._super;
  Val x159 = x144[14]._super;
  Val x160 = x144[15]._super;
  Val x161 = x144[16]._super;
  Val x162 = x144[17]._super;
  Val x163 = x144[18]._super;
  Val x164 = x144[19]._super;
  Val x165 = x144[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:280)
  Val x166 =
      ((((((x145 + (x146 * Val(2))) + (x147 * Val(4))) + (x148 * Val(8))) + (x149 * Val(16))) +
        (x150 * Val(32))) +
       (x151 * Val(64)));
  Val x167 = ((((((x166 + (x152 * Val(128))) + (x153 * Val(256))) + (x154 * Val(512))) +
                (x155 * Val(1024))) +
               (x156 * Val(2048))) +
              (x157 * Val(4096)));
  Val x168 = ((((((x167 + (x158 * Val(8192))) + (x159 * Val(16384))) + (x160 * Val(32768))) +
                (x161 * Val(65536))) +
               (x162 * Val(131072))) +
              (x163 * Val(262144)));
  EQZ((((x168 + (x164 * Val(524288))) + (x165 * Val(1048576))) - x142),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:280)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:287)
  RetTupleStruct x169 =
      exec_RetTuple(ctx,
                    Val22Array{x165, x90,  x91,  x92,  x93,  x94,  x95,  x96,  x97,  x98,  x99,
                               x100, x101, x102, x103, x104, x105, x106, x107, x108, x109, x110},
                    Val22Array{x111, x118, x119, x120, x121, x122, x123, x124, x125, x126, x127,
                               x128, x129, x130, x131, x132, x133, x134, x135, x136, x137, Val(0)},
                    Val22Array{x138, x145, x146, x147, x148, x149, x150, x151, x152, x153, x154,
                               x155, x156, x157, x158, x159, x160, x161, x162, x163, x164, Val(0)},
                    Val24Array{x8,  x9,  x10, x11, x12, x13, x14, x15, x16, x17, x18,    x19,
                               x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, Val(0), Val(0)},
                    Val22Array{x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46,
                               x47, x48, x49, x50, x51, x52, x53, x54, x55, x56, Val(0)},
                    Val22Array{x63, x64, x65, x66, x67, x68, x69, x70, x71, x72, x73,
                               x74, x75, x76, x77, x78, x79, x80, x81, x82, x83, Val(0)},
                    Val(7),
                    Val(6),
                    x3.rnd._super,
                    x3.blk._super,
                    x3.midx._super,
                    LAYOUT_LOOKUP(layout2, _super));
  return x169;
}
RetTupleStruct execRhoMinor1_4__1_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<RhoMinor1_4__1_Layout> layout2) {
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:341)
  BoundLayout<RhoMinor1_4__1__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:292)
  RetTupleStruct x4 = back_RetTuple(ctx, 8, arg1);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  RetTupleStruct x5 = back_RetTuple(ctx, 1, arg1);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:292)
  NondetRegStruct22Array x6 = x4.arrB;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:297)
  Val x7 = x6[5]._super;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:304)
  ToBits_22_Struct x8 = exec_ToBits_22_(ctx, x7, LAYOUT_LOOKUP(layout2, unpackXy1));
  NondetRegStruct22Array x9 = x8._super;
  Val x10 = x9[0]._super;
  Val x11 = x9[1]._super;
  Val x12 = x9[2]._super;
  Val x13 = x9[3]._super;
  Val x14 = x9[4]._super;
  Val x15 = x9[5]._super;
  Val x16 = x9[6]._super;
  Val x17 = x9[7]._super;
  Val x18 = x9[8]._super;
  Val x19 = x9[9]._super;
  Val x20 = x9[10]._super;
  Val x21 = x9[11]._super;
  Val x22 = x9[12]._super;
  Val x23 = x9[13]._super;
  Val x24 = x9[14]._super;
  Val x25 = x9[15]._super;
  Val x26 = x9[16]._super;
  Val x27 = x9[17]._super;
  Val x28 = x9[18]._super;
  Val x29 = x9[19]._super;
  Val x30 = x9[20]._super;
  Val x31 = x9[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:305)
  Val x32 = ((((((x10 + (x11 * Val(2))) + (x12 * Val(4))) + (x13 * Val(8))) + (x14 * Val(16))) +
              (x15 * Val(32))) +
             (x16 * Val(64)));
  Val x33 =
      ((((((x32 + (x17 * Val(128))) + (x18 * Val(256))) + (x19 * Val(512))) + (x20 * Val(1024))) +
        (x21 * Val(2048))) +
       (x22 * Val(4096)));
  Val x34 = ((((((x33 + (x23 * Val(8192))) + (x24 * Val(16384))) + (x25 * Val(32768))) +
               (x26 * Val(65536))) +
              (x27 * Val(131072))) +
             (x28 * Val(262144)));
  EQZ(((((x34 + (x29 * Val(524288))) + (x30 * Val(1048576))) + (x31 * Val(2097152))) - x7),
      "rho_minor1(zirgen/circuit/keccak/keccak.zir:305)");
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:309)
  Val x35 = x6[6]._super;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:316)
  ToBits_21_Struct x36 = exec_ToBits_21_(ctx, x35, LAYOUT_LOOKUP(layout2, unpackXy2));
  NondetRegStruct21Array x37 = x36._super;
  Val x38 = x37[0]._super;
  Val x39 = x37[1]._super;
  Val x40 = x37[2]._super;
  Val x41 = x37[3]._super;
  Val x42 = x37[4]._super;
  Val x43 = x37[5]._super;
  Val x44 = x37[6]._super;
  Val x45 = x37[7]._super;
  Val x46 = x37[8]._super;
  Val x47 = x37[9]._super;
  Val x48 = x37[10]._super;
  Val x49 = x37[11]._super;
  Val x50 = x37[12]._super;
  Val x51 = x37[13]._super;
  Val x52 = x37[14]._super;
  Val x53 = x37[15]._super;
  Val x54 = x37[16]._super;
  Val x55 = x37[17]._super;
  Val x56 = x37[18]._super;
  Val x57 = x37[19]._super;
  Val x58 = x37[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:317)
  Val x59 = ((((((x38 + (x39 * Val(2))) + (x40 * Val(4))) + (x41 * Val(8))) + (x42 * Val(16))) +
              (x43 * Val(32))) +
             (x44 * Val(64)));
  Val x60 =
      ((((((x59 + (x45 * Val(128))) + (x46 * Val(256))) + (x47 * Val(512))) + (x48 * Val(1024))) +
        (x49 * Val(2048))) +
       (x50 * Val(4096)));
  Val x61 = ((((((x60 + (x51 * Val(8192))) + (x52 * Val(16384))) + (x53 * Val(32768))) +
               (x54 * Val(65536))) +
              (x55 * Val(131072))) +
             (x56 * Val(262144)));
  EQZ((((x61 + (x57 * Val(524288))) + (x58 * Val(1048576))) - x35),
      "rho_minor1(zirgen/circuit/keccak/keccak.zir:317)");
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:321)
  Val x62 = x6[7]._super;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:328)
  ToBits_21_Struct x63 = exec_ToBits_21_(ctx, x62, LAYOUT_LOOKUP(layout2, unpackXy3));
  NondetRegStruct21Array x64 = x63._super;
  Val x65 = x64[0]._super;
  Val x66 = x64[1]._super;
  Val x67 = x64[2]._super;
  Val x68 = x64[3]._super;
  Val x69 = x64[4]._super;
  Val x70 = x64[5]._super;
  Val x71 = x64[6]._super;
  Val x72 = x64[7]._super;
  Val x73 = x64[8]._super;
  Val x74 = x64[9]._super;
  Val x75 = x64[10]._super;
  Val x76 = x64[11]._super;
  Val x77 = x64[12]._super;
  Val x78 = x64[13]._super;
  Val x79 = x64[14]._super;
  Val x80 = x64[15]._super;
  Val x81 = x64[16]._super;
  Val x82 = x64[17]._super;
  Val x83 = x64[18]._super;
  Val x84 = x64[19]._super;
  Val x85 = x64[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:329)
  Val x86 = ((((((x65 + (x66 * Val(2))) + (x67 * Val(4))) + (x68 * Val(8))) + (x69 * Val(16))) +
              (x70 * Val(32))) +
             (x71 * Val(64)));
  Val x87 =
      ((((((x86 + (x72 * Val(128))) + (x73 * Val(256))) + (x74 * Val(512))) + (x75 * Val(1024))) +
        (x76 * Val(2048))) +
       (x77 * Val(4096)));
  Val x88 = ((((((x87 + (x78 * Val(8192))) + (x79 * Val(16384))) + (x80 * Val(32768))) +
               (x81 * Val(65536))) +
              (x82 * Val(131072))) +
             (x83 * Val(262144)));
  EQZ((((x88 + (x84 * Val(524288))) + (x85 * Val(1048576))) - x62),
      "rho_minor1(zirgen/circuit/keccak/keccak.zir:329)");
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  NondetRegStruct22Array x89 = x5.arrA;
  NondetRegStruct24Array x90 = x5.arrD;
  Val x91 = x89[0]._super;
  Val x92 = x90[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x93 = ((x10 * x91) + ((Val(1) - x10) * (Val(1) - x91)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x94 = x89[1]._super;
  Val x95 = x90[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x96 = ((x11 * x94) + ((Val(1) - x11) * (Val(1) - x94)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x97 = x89[2]._super;
  Val x98 = x90[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x99 = ((x12 * x97) + ((Val(1) - x12) * (Val(1) - x97)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x100 = x89[3]._super;
  Val x101 = x90[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x102 = ((x13 * x100) + ((Val(1) - x13) * (Val(1) - x100)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x103 = x89[4]._super;
  Val x104 = x90[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x105 = ((x14 * x103) + ((Val(1) - x14) * (Val(1) - x103)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x106 = x89[5]._super;
  Val x107 = x90[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x108 = ((x15 * x106) + ((Val(1) - x15) * (Val(1) - x106)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x109 = x89[6]._super;
  Val x110 = x90[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x111 = ((x16 * x109) + ((Val(1) - x16) * (Val(1) - x109)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x112 = x89[7]._super;
  Val x113 = x90[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x114 = ((x17 * x112) + ((Val(1) - x17) * (Val(1) - x112)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x115 = x89[8]._super;
  Val x116 = x90[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x117 = ((x18 * x115) + ((Val(1) - x18) * (Val(1) - x115)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x118 = x89[9]._super;
  Val x119 = x90[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x120 = ((x19 * x118) + ((Val(1) - x19) * (Val(1) - x118)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x121 = x89[10]._super;
  Val x122 = x90[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x123 = ((x20 * x121) + ((Val(1) - x20) * (Val(1) - x121)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x124 = x89[11]._super;
  Val x125 = x90[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x126 = ((x21 * x124) + ((Val(1) - x21) * (Val(1) - x124)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x127 = x89[12]._super;
  Val x128 = x90[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x129 = ((x22 * x127) + ((Val(1) - x22) * (Val(1) - x127)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x130 = x89[13]._super;
  Val x131 = x90[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x132 = ((x23 * x130) + ((Val(1) - x23) * (Val(1) - x130)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x133 = x89[14]._super;
  Val x134 = x90[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x135 = ((x24 * x133) + ((Val(1) - x24) * (Val(1) - x133)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x136 = x89[15]._super;
  Val x137 = x90[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x138 = ((x25 * x136) + ((Val(1) - x25) * (Val(1) - x136)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x139 = x89[16]._super;
  Val x140 = x90[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x141 = ((x26 * x139) + ((Val(1) - x26) * (Val(1) - x139)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x142 = x89[17]._super;
  Val x143 = x90[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x144 = ((x27 * x142) + ((Val(1) - x27) * (Val(1) - x142)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x145 = x89[18]._super;
  Val x146 = x90[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x147 = ((x28 * x145) + ((Val(1) - x28) * (Val(1) - x145)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x148 = x89[19]._super;
  Val x149 = x90[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x150 = ((x29 * x148) + ((Val(1) - x29) * (Val(1) - x148)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x151 = x89[20]._super;
  Val x152 = x90[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x153 = ((x30 * x151) + ((Val(1) - x30) * (Val(1) - x151)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x154 = x89[21]._super;
  Val x155 = x90[21]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x156 = ((x31 * x154) + ((Val(1) - x31) * (Val(1) - x154)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  NondetRegStruct22Array x157 = x5.arrB;
  NondetRegStruct22Array x158 = x5.arrE;
  Val x159 = x157[0]._super;
  Val x160 = x158[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x161 = ((x38 * x159) + ((Val(1) - x38) * (Val(1) - x159)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x162 = x157[1]._super;
  Val x163 = x158[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x164 = ((x39 * x162) + ((Val(1) - x39) * (Val(1) - x162)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x165 = x157[2]._super;
  Val x166 = x158[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x167 = ((x40 * x165) + ((Val(1) - x40) * (Val(1) - x165)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x168 = x157[3]._super;
  Val x169 = x158[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x170 = ((x41 * x168) + ((Val(1) - x41) * (Val(1) - x168)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x171 = x157[4]._super;
  Val x172 = x158[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x173 = ((x42 * x171) + ((Val(1) - x42) * (Val(1) - x171)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x174 = x157[5]._super;
  Val x175 = x158[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x176 = ((x43 * x174) + ((Val(1) - x43) * (Val(1) - x174)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x177 = x157[6]._super;
  Val x178 = x158[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x179 = ((x44 * x177) + ((Val(1) - x44) * (Val(1) - x177)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x180 = x157[7]._super;
  Val x181 = x158[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x182 = ((x45 * x180) + ((Val(1) - x45) * (Val(1) - x180)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x183 = x157[8]._super;
  Val x184 = x158[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x185 = ((x46 * x183) + ((Val(1) - x46) * (Val(1) - x183)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x186 = x157[9]._super;
  Val x187 = x158[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x188 = ((x47 * x186) + ((Val(1) - x47) * (Val(1) - x186)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x189 = x157[10]._super;
  Val x190 = x158[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x191 = ((x48 * x189) + ((Val(1) - x48) * (Val(1) - x189)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x192 = x157[11]._super;
  Val x193 = x158[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x194 = ((x49 * x192) + ((Val(1) - x49) * (Val(1) - x192)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x195 = x157[12]._super;
  Val x196 = x158[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x197 = ((x50 * x195) + ((Val(1) - x50) * (Val(1) - x195)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x198 = x157[13]._super;
  Val x199 = x158[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x200 = ((x51 * x198) + ((Val(1) - x51) * (Val(1) - x198)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x201 = x157[14]._super;
  Val x202 = x158[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x203 = ((x52 * x201) + ((Val(1) - x52) * (Val(1) - x201)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x204 = x157[15]._super;
  Val x205 = x158[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x206 = ((x53 * x204) + ((Val(1) - x53) * (Val(1) - x204)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x207 = x157[16]._super;
  Val x208 = x158[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x209 = ((x54 * x207) + ((Val(1) - x54) * (Val(1) - x207)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x210 = x157[17]._super;
  Val x211 = x158[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x212 = ((x55 * x210) + ((Val(1) - x55) * (Val(1) - x210)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x213 = x157[18]._super;
  Val x214 = x158[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x215 = ((x56 * x213) + ((Val(1) - x56) * (Val(1) - x213)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x216 = x157[19]._super;
  Val x217 = x158[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x218 = ((x57 * x216) + ((Val(1) - x57) * (Val(1) - x216)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x219 = x157[20]._super;
  Val x220 = x158[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x221 = ((x58 * x219) + ((Val(1) - x58) * (Val(1) - x219)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  NondetRegStruct22Array x222 = x5.arrC;
  NondetRegStruct22Array x223 = x5.arrF;
  Val x224 = x222[0]._super;
  Val x225 = x223[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x226 = ((x65 * x224) + ((Val(1) - x65) * (Val(1) - x224)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x227 = x222[1]._super;
  Val x228 = x223[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x229 = ((x66 * x227) + ((Val(1) - x66) * (Val(1) - x227)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x230 = x222[2]._super;
  Val x231 = x223[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x232 = ((x67 * x230) + ((Val(1) - x67) * (Val(1) - x230)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x233 = x222[3]._super;
  Val x234 = x223[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x235 = ((x68 * x233) + ((Val(1) - x68) * (Val(1) - x233)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x236 = x222[4]._super;
  Val x237 = x223[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x238 = ((x69 * x236) + ((Val(1) - x69) * (Val(1) - x236)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x239 = x222[5]._super;
  Val x240 = x223[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x241 = ((x70 * x239) + ((Val(1) - x70) * (Val(1) - x239)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x242 = x222[6]._super;
  Val x243 = x223[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x244 = ((x71 * x242) + ((Val(1) - x71) * (Val(1) - x242)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x245 = x222[7]._super;
  Val x246 = x223[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x247 = ((x72 * x245) + ((Val(1) - x72) * (Val(1) - x245)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x248 = x222[8]._super;
  Val x249 = x223[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x250 = ((x73 * x248) + ((Val(1) - x73) * (Val(1) - x248)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x251 = x222[9]._super;
  Val x252 = x223[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x253 = ((x74 * x251) + ((Val(1) - x74) * (Val(1) - x251)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x254 = x222[10]._super;
  Val x255 = x223[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x256 = ((x75 * x254) + ((Val(1) - x75) * (Val(1) - x254)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x257 = x222[11]._super;
  Val x258 = x223[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x259 = ((x76 * x257) + ((Val(1) - x76) * (Val(1) - x257)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x260 = x222[12]._super;
  Val x261 = x223[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x262 = ((x77 * x260) + ((Val(1) - x77) * (Val(1) - x260)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x263 = x222[13]._super;
  Val x264 = x223[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x265 = ((x78 * x263) + ((Val(1) - x78) * (Val(1) - x263)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x266 = x222[14]._super;
  Val x267 = x223[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x268 = ((x79 * x266) + ((Val(1) - x79) * (Val(1) - x266)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x269 = x222[15]._super;
  Val x270 = x223[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x271 = ((x80 * x269) + ((Val(1) - x80) * (Val(1) - x269)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x272 = x222[16]._super;
  Val x273 = x223[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x274 = ((x81 * x272) + ((Val(1) - x81) * (Val(1) - x272)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x275 = x222[17]._super;
  Val x276 = x223[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x277 = ((x82 * x275) + ((Val(1) - x82) * (Val(1) - x275)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x278 = x222[18]._super;
  Val x279 = x223[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x280 = ((x83 * x278) + ((Val(1) - x83) * (Val(1) - x278)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x281 = x222[19]._super;
  Val x282 = x223[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x283 = ((x84 * x281) + ((Val(1) - x84) * (Val(1) - x281)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x284 = x222[20]._super;
  Val x285 = x223[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x286 = ((x85 * x284) + ((Val(1) - x85) * (Val(1) - x284)));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:336)
  Val x287 = (((x229 * x228) + ((Val(1) - x229) * (Val(1) - x228))) +
              (((x232 * x231) + ((Val(1) - x232) * (Val(1) - x231))) * Val(2)));
  Val x288 = ((x287 + (((x235 * x234) + ((Val(1) - x235) * (Val(1) - x234))) * Val(4))) +
              (((x238 * x237) + ((Val(1) - x238) * (Val(1) - x237))) * Val(8)));
  Val x289 = ((x288 + (((x241 * x240) + ((Val(1) - x241) * (Val(1) - x240))) * Val(16))) +
              (((x244 * x243) + ((Val(1) - x244) * (Val(1) - x243))) * Val(32)));
  Val x290 = ((x289 + (((x247 * x246) + ((Val(1) - x247) * (Val(1) - x246))) * Val(64))) +
              (((x250 * x249) + ((Val(1) - x250) * (Val(1) - x249))) * Val(128)));
  Val x291 = ((x290 + (((x253 * x252) + ((Val(1) - x253) * (Val(1) - x252))) * Val(256))) +
              (((x256 * x255) + ((Val(1) - x256) * (Val(1) - x255))) * Val(512)));
  Val x292 = ((x291 + (((x259 * x258) + ((Val(1) - x259) * (Val(1) - x258))) * Val(1024))) +
              (((x262 * x261) + ((Val(1) - x262) * (Val(1) - x261))) * Val(2048)));
  Val x293 = ((x292 + (((x265 * x264) + ((Val(1) - x265) * (Val(1) - x264))) * Val(4096))) +
              (((x268 * x267) + ((Val(1) - x268) * (Val(1) - x267))) * Val(8192)));
  Val x294 = ((x293 + (((x271 * x270) + ((Val(1) - x271) * (Val(1) - x270))) * Val(16384))) +
              (((x274 * x273) + ((Val(1) - x274) * (Val(1) - x273))) * Val(32768)));
  Val x295 = ((x294 + (((x277 * x276) + ((Val(1) - x277) * (Val(1) - x276))) * Val(65536))) +
              (((x280 * x279) + ((Val(1) - x280) * (Val(1) - x279))) * Val(131072)));
  Val x296 = ((x295 + (((x283 * x282) + ((Val(1) - x283) * (Val(1) - x282))) * Val(262144))) +
              (((x286 * x285) + ((Val(1) - x286) * (Val(1) - x285))) * Val(524288)));
  Val x297 = ((x296 + (((x93 * x92) + ((Val(1) - x93) * (Val(1) - x92))) * Val(1048576))) +
              (((x96 * x95) + ((Val(1) - x96) * (Val(1) - x95))) * Val(2097152)));
  NondetRegStruct x298 = exec_Reg(ctx, x297, LAYOUT_LOOKUP(layout2, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:337)
  Val x299 = (((x99 * x98) + ((Val(1) - x99) * (Val(1) - x98))) +
              (((x102 * x101) + ((Val(1) - x102) * (Val(1) - x101))) * Val(2)));
  Val x300 = ((x299 + (((x105 * x104) + ((Val(1) - x105) * (Val(1) - x104))) * Val(4))) +
              (((x108 * x107) + ((Val(1) - x108) * (Val(1) - x107))) * Val(8)));
  Val x301 = ((x300 + (((x111 * x110) + ((Val(1) - x111) * (Val(1) - x110))) * Val(16))) +
              (((x114 * x113) + ((Val(1) - x114) * (Val(1) - x113))) * Val(32)));
  Val x302 = ((x301 + (((x117 * x116) + ((Val(1) - x117) * (Val(1) - x116))) * Val(64))) +
              (((x120 * x119) + ((Val(1) - x120) * (Val(1) - x119))) * Val(128)));
  Val x303 = ((x302 + (((x123 * x122) + ((Val(1) - x123) * (Val(1) - x122))) * Val(256))) +
              (((x126 * x125) + ((Val(1) - x126) * (Val(1) - x125))) * Val(512)));
  Val x304 = ((x303 + (((x129 * x128) + ((Val(1) - x129) * (Val(1) - x128))) * Val(1024))) +
              (((x132 * x131) + ((Val(1) - x132) * (Val(1) - x131))) * Val(2048)));
  Val x305 = ((x304 + (((x135 * x134) + ((Val(1) - x135) * (Val(1) - x134))) * Val(4096))) +
              (((x138 * x137) + ((Val(1) - x138) * (Val(1) - x137))) * Val(8192)));
  Val x306 = ((x305 + (((x141 * x140) + ((Val(1) - x141) * (Val(1) - x140))) * Val(16384))) +
              (((x144 * x143) + ((Val(1) - x144) * (Val(1) - x143))) * Val(32768)));
  Val x307 = ((x306 + (((x147 * x146) + ((Val(1) - x147) * (Val(1) - x146))) * Val(65536))) +
              (((x150 * x149) + ((Val(1) - x150) * (Val(1) - x149))) * Val(131072)));
  Val x308 = ((x307 + (((x153 * x152) + ((Val(1) - x153) * (Val(1) - x152))) * Val(262144))) +
              (((x156 * x155) + ((Val(1) - x156) * (Val(1) - x155))) * Val(524288)));
  NondetRegStruct x309 =
      exec_Reg(ctx,
               (x308 + (((x161 * x160) + ((Val(1) - x161) * (Val(1) - x160))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _1));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:338)
  Val x310 = (((x164 * x163) + ((Val(1) - x164) * (Val(1) - x163))) +
              (((x167 * x166) + ((Val(1) - x167) * (Val(1) - x166))) * Val(2)));
  Val x311 = ((x310 + (((x170 * x169) + ((Val(1) - x170) * (Val(1) - x169))) * Val(4))) +
              (((x173 * x172) + ((Val(1) - x173) * (Val(1) - x172))) * Val(8)));
  Val x312 = ((x311 + (((x176 * x175) + ((Val(1) - x176) * (Val(1) - x175))) * Val(16))) +
              (((x179 * x178) + ((Val(1) - x179) * (Val(1) - x178))) * Val(32)));
  Val x313 = ((x312 + (((x182 * x181) + ((Val(1) - x182) * (Val(1) - x181))) * Val(64))) +
              (((x185 * x184) + ((Val(1) - x185) * (Val(1) - x184))) * Val(128)));
  Val x314 = ((x313 + (((x188 * x187) + ((Val(1) - x188) * (Val(1) - x187))) * Val(256))) +
              (((x191 * x190) + ((Val(1) - x191) * (Val(1) - x190))) * Val(512)));
  Val x315 = ((x314 + (((x194 * x193) + ((Val(1) - x194) * (Val(1) - x193))) * Val(1024))) +
              (((x197 * x196) + ((Val(1) - x197) * (Val(1) - x196))) * Val(2048)));
  Val x316 = ((x315 + (((x200 * x199) + ((Val(1) - x200) * (Val(1) - x199))) * Val(4096))) +
              (((x203 * x202) + ((Val(1) - x203) * (Val(1) - x202))) * Val(8192)));
  Val x317 = ((x316 + (((x206 * x205) + ((Val(1) - x206) * (Val(1) - x205))) * Val(16384))) +
              (((x209 * x208) + ((Val(1) - x209) * (Val(1) - x208))) * Val(32768)));
  Val x318 = ((x317 + (((x212 * x211) + ((Val(1) - x212) * (Val(1) - x211))) * Val(65536))) +
              (((x215 * x214) + ((Val(1) - x215) * (Val(1) - x214))) * Val(131072)));
  Val x319 = ((x318 + (((x218 * x217) + ((Val(1) - x218) * (Val(1) - x217))) * Val(262144))) +
              (((x221 * x220) + ((Val(1) - x221) * (Val(1) - x220))) * Val(524288)));
  NondetRegStruct x320 =
      exec_Reg(ctx,
               (x319 + (((x226 * x225) + ((Val(1) - x226) * (Val(1) - x225))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _2));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:341)
  BoundLayout<RhoMinor1_4__1_Arm1_SuperLayout> x321 = LAYOUT_LOOKUP(x3, arm1);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:342)
  Val22Array x322 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  Val24Array x323 = Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:339)
  Val22Array x324 =
      Val22Array{x298._super, x309._super, x320._super, Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0)};
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x325 = x5.rnd._super;
  Val x326 = x5.blk._super;
  Val x327 = x5.midx._super;
  if (to_size_t(Val(1))) {
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:342)
    RetTupleStruct x328 = exec_RetTuple(ctx,
                                        x322,
                                        x322,
                                        x322,
                                        x323,
                                        x322,
                                        x324,
                                        Val(8),
                                        Val(6),
                                        x325,
                                        x326,
                                        x327,
                                        LAYOUT_LOOKUP(x3, arm0));
  }
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:292)
  NondetRegStruct24Array x329 = x4.arrD;
  Val x330 = x329[21]._super;
  Val x331 = x329[22]._super;
  Val x332 = x329[23]._super;
  if (to_size_t(Val(0))) {
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:345)
    ToBits_22_Struct x333 = exec_ToBits_22_(ctx, x330, LAYOUT_LOOKUP(x321, unpackM1));
    NondetRegStruct22Array x334 = x333._super;
    Val x335 = x334[0]._super;
    Val x336 = x334[1]._super;
    Val x337 = x334[2]._super;
    Val x338 = x334[3]._super;
    Val x339 = x334[4]._super;
    Val x340 = x334[5]._super;
    Val x341 = x334[6]._super;
    Val x342 = x334[7]._super;
    Val x343 = x334[8]._super;
    Val x344 = x334[9]._super;
    Val x345 = x334[10]._super;
    Val x346 = x334[11]._super;
    Val x347 = x334[12]._super;
    Val x348 = x334[13]._super;
    Val x349 = x334[14]._super;
    Val x350 = x334[15]._super;
    Val x351 = x334[16]._super;
    Val x352 = x334[17]._super;
    Val x353 = x334[18]._super;
    Val x354 = x334[19]._super;
    Val x355 = x334[20]._super;
    Val x356 = x334[21]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:346)
    Val x357 =
        ((((((x335 + (x336 * Val(2))) + (x337 * Val(4))) + (x338 * Val(8))) + (x339 * Val(16))) +
          (x340 * Val(32))) +
         (x341 * Val(64)));
    Val x358 = ((((((x357 + (x342 * Val(128))) + (x343 * Val(256))) + (x344 * Val(512))) +
                  (x345 * Val(1024))) +
                 (x346 * Val(2048))) +
                (x347 * Val(4096)));
    Val x359 = ((((((x358 + (x348 * Val(8192))) + (x349 * Val(16384))) + (x350 * Val(32768))) +
                  (x351 * Val(65536))) +
                 (x352 * Val(131072))) +
                (x353 * Val(262144)));
    EQZ(((((x359 + (x354 * Val(524288))) + (x355 * Val(1048576))) + (x356 * Val(2097152))) - x330),
        "rho_minor1(zirgen/circuit/keccak/keccak.zir:346)");
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:349)
    ToBits_21_Struct x360 = exec_ToBits_21_(ctx, x331, LAYOUT_LOOKUP(x321, unpackM2));
    NondetRegStruct21Array x361 = x360._super;
    Val x362 = x361[0]._super;
    Val x363 = x361[1]._super;
    Val x364 = x361[2]._super;
    Val x365 = x361[3]._super;
    Val x366 = x361[4]._super;
    Val x367 = x361[5]._super;
    Val x368 = x361[6]._super;
    Val x369 = x361[7]._super;
    Val x370 = x361[8]._super;
    Val x371 = x361[9]._super;
    Val x372 = x361[10]._super;
    Val x373 = x361[11]._super;
    Val x374 = x361[12]._super;
    Val x375 = x361[13]._super;
    Val x376 = x361[14]._super;
    Val x377 = x361[15]._super;
    Val x378 = x361[16]._super;
    Val x379 = x361[17]._super;
    Val x380 = x361[18]._super;
    Val x381 = x361[19]._super;
    Val x382 = x361[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:350)
    Val x383 =
        ((((((x362 + (x363 * Val(2))) + (x364 * Val(4))) + (x365 * Val(8))) + (x366 * Val(16))) +
          (x367 * Val(32))) +
         (x368 * Val(64)));
    Val x384 = ((((((x383 + (x369 * Val(128))) + (x370 * Val(256))) + (x371 * Val(512))) +
                  (x372 * Val(1024))) +
                 (x373 * Val(2048))) +
                (x374 * Val(4096)));
    Val x385 = ((((((x384 + (x375 * Val(8192))) + (x376 * Val(16384))) + (x377 * Val(32768))) +
                  (x378 * Val(65536))) +
                 (x379 * Val(131072))) +
                (x380 * Val(262144)));
    EQZ((((x385 + (x381 * Val(524288))) + (x382 * Val(1048576))) - x331),
        "rho_minor1(zirgen/circuit/keccak/keccak.zir:350)");
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:354)
    ToBits_21_Struct x386 = exec_ToBits_21_(ctx, x332, LAYOUT_LOOKUP(x321, unpackM3));
    NondetRegStruct21Array x387 = x386._super;
    Val x388 = x387[0]._super;
    Val x389 = x387[1]._super;
    Val x390 = x387[2]._super;
    Val x391 = x387[3]._super;
    Val x392 = x387[4]._super;
    Val x393 = x387[5]._super;
    Val x394 = x387[6]._super;
    Val x395 = x387[7]._super;
    Val x396 = x387[8]._super;
    Val x397 = x387[9]._super;
    Val x398 = x387[10]._super;
    Val x399 = x387[11]._super;
    Val x400 = x387[12]._super;
    Val x401 = x387[13]._super;
    Val x402 = x387[14]._super;
    Val x403 = x387[15]._super;
    Val x404 = x387[16]._super;
    Val x405 = x387[17]._super;
    Val x406 = x387[18]._super;
    Val x407 = x387[19]._super;
    Val x408 = x387[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:355)
    Val x409 =
        ((((((x388 + (x389 * Val(2))) + (x390 * Val(4))) + (x391 * Val(8))) + (x392 * Val(16))) +
          (x393 * Val(32))) +
         (x394 * Val(64)));
    Val x410 = ((((((x409 + (x395 * Val(128))) + (x396 * Val(256))) + (x397 * Val(512))) +
                  (x398 * Val(1024))) +
                 (x399 * Val(2048))) +
                (x400 * Val(4096)));
    Val x411 = ((((((x410 + (x401 * Val(8192))) + (x402 * Val(16384))) + (x403 * Val(32768))) +
                  (x404 * Val(65536))) +
                 (x405 * Val(131072))) +
                (x406 * Val(262144)));
    EQZ((((x411 + (x407 * Val(524288))) + (x408 * Val(1048576))) - x332),
        "rho_minor1(zirgen/circuit/keccak/keccak.zir:355)");
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:358)
    RetTupleStruct x412 = exec_RetTuple(
        ctx,
        Val22Array{x335, x336, x337, x338, x339, x340, x341, x342, x343, x344, x345,
                   x346, x347, x348, x349, x350, x351, x352, x353, x354, x355, x356},
        Val22Array{x362, x363, x364, x365, x366, x367, x368, x369, x370, x371, x372,
                   x373, x374, x375, x376, x377, x378, x379, x380, x381, x382, Val(0)},
        Val22Array{x388, x389, x390, x391, x392, x393, x394, x395, x396, x397, x398,
                   x399, x400, x401, x402, x403, x404, x405, x406, x407, x408, Val(0)},
        x323,
        x322,
        x324,
        Val(8),
        Val(6),
        x325,
        x326,
        x327,
        LAYOUT_LOOKUP(x321, _super));
  }
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:341)
  RetTupleStruct x413 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x413;
}
RetTupleStruct execRhoMinor3_1_(ExecContext& ctx,
                                RetTupleStruct arg0,
                                BoundLayout<RetTupleLayout> arg1,
                                BoundLayout<RhoMinor3_1__SuperLayout> layout2) {
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:432)
  RetTupleStruct x3 = back_RetTuple(ctx, 1, arg1);
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:433)
  RetTupleStruct x4 = back_RetTuple(ctx, 3, arg1);
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:434)
  RetTupleStruct x5 = back_RetTuple(ctx, 4, arg1);
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:435)
  RetTupleStruct x6 = back_RetTuple(ctx, 6, arg1);
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:436)
  RetTupleStruct x7 = back_RetTuple(ctx, 7, arg1);
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:437)
  RetTupleStruct x8 = back_RetTuple(ctx, 9, arg1);
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:439)
  BoundLayout<RhoMinor3_1_Arm1_SuperLayout> x9 = LAYOUT_LOOKUP(layout2, arm1);
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:436)
  NondetRegStruct22Array x10 = x7.arrF;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:435)
  NondetRegStruct22Array x11 = x6.arrF;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:444)
  Val x12 = x10[0]._super;
  Val x13 = x10[1]._super;
  Val x14 = x10[2]._super;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:445)
  Val x15 = x11[0]._super;
  Val x16 = x11[1]._super;
  Val x17 = x11[2]._super;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:434)
  NondetRegStruct22Array x18 = x5.arrF;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:446)
  Val x19 = x18[0]._super;
  Val x20 = x18[1]._super;
  Val x21 = x18[2]._super;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:433)
  NondetRegStruct22Array x22 = x4.arrF;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:447)
  Val x23 = x22[0]._super;
  Val x24 = x22[1]._super;
  Val x25 = x22[2]._super;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:432)
  NondetRegStruct22Array x26 = x3.arrF;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:448)
  Val x27 = x26[0]._super;
  Val x28 = x26[1]._super;
  Val x29 = x26[2]._super;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:437)
  NondetRegStruct22Array x30 = x8.arrA;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:449)
  Val x31 = x30[15]._super;
  Val x32 = x30[16]._super;
  Val x33 = x30[17]._super;
  Val x34 = x30[18]._super;
  Val x35 = x30[19]._super;
  Val x36 = x30[20]._super;
  Val x37 = x30[21]._super;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:437)
  NondetRegStruct22Array x38 = x8.arrB;
  NondetRegStruct22Array x39 = x8.arrC;
  NondetRegStruct24Array x40 = x8.arrD;
  Val x41 = x38[0]._super;
  Val x42 = x38[1]._super;
  Val x43 = x38[2]._super;
  Val x44 = x38[3]._super;
  Val x45 = x38[4]._super;
  Val x46 = x38[5]._super;
  Val x47 = x38[6]._super;
  Val x48 = x38[7]._super;
  Val x49 = x38[8]._super;
  Val x50 = x38[9]._super;
  Val x51 = x38[10]._super;
  Val x52 = x38[11]._super;
  Val x53 = x38[12]._super;
  Val x54 = x38[13]._super;
  Val x55 = x38[14]._super;
  Val x56 = x38[15]._super;
  Val x57 = x38[16]._super;
  Val x58 = x38[17]._super;
  Val x59 = x38[18]._super;
  Val x60 = x38[19]._super;
  Val x61 = x38[20]._super;
  Val x62 = x38[21]._super;
  Val22Array x63 = Val22Array{x41, x42, x43, x44, x45, x46, x47, x48, x49, x50, x51,
                              x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62};
  Val x64 = x39[0]._super;
  Val x65 = x39[1]._super;
  Val x66 = x39[2]._super;
  Val x67 = x39[3]._super;
  Val x68 = x39[4]._super;
  Val x69 = x39[5]._super;
  Val x70 = x39[6]._super;
  Val x71 = x39[7]._super;
  Val x72 = x39[8]._super;
  Val x73 = x39[9]._super;
  Val x74 = x39[10]._super;
  Val x75 = x39[11]._super;
  Val x76 = x39[12]._super;
  Val x77 = x39[13]._super;
  Val x78 = x39[14]._super;
  Val x79 = x39[15]._super;
  Val x80 = x39[16]._super;
  Val x81 = x39[17]._super;
  Val x82 = x39[18]._super;
  Val x83 = x39[19]._super;
  Val x84 = x39[20]._super;
  Val x85 = x39[21]._super;
  Val22Array x86 = Val22Array{x64, x65, x66, x67, x68, x69, x70, x71, x72, x73, x74,
                              x75, x76, x77, x78, x79, x80, x81, x82, x83, x84, x85};
  Val24Array x87 =
      Val24Array{x40[0]._super,  x40[1]._super,  x40[2]._super,  x40[3]._super,  x40[4]._super,
                 x40[5]._super,  x40[6]._super,  x40[7]._super,  x40[8]._super,  x40[9]._super,
                 x40[10]._super, x40[11]._super, x40[12]._super, x40[13]._super, x40[14]._super,
                 x40[15]._super, x40[16]._super, x40[17]._super, x40[18]._super, x40[19]._super,
                 x40[20]._super, x40[21]._super, x40[22]._super, x40[23]._super};
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:451)
  Val22Array x88 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:432)
  Val x89 = x3.rnd._super;
  Val x90 = x3.blk._super;
  Val x91 = x3.midx._super;
  if (to_size_t(Val(0))) {
    // rho_minor3(zirgen/circuit/keccak/keccak.zir:450)
    RetTupleStruct x92 =
        exec_RetTuple(ctx,
                      Val22Array{x12, x13, x14, x15, x16, x17, x19, x20, x21, x23, x24,
                                 x25, x27, x28, x29, x31, x32, x33, x34, x35, x36, x37},
                      x63,
                      x86,
                      x87,
                      x88,
                      x88,
                      Val(0),
                      Val(6),
                      x89,
                      x90,
                      x91,
                      LAYOUT_LOOKUP(layout2, arm0));
  }
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:453)
  BoundLayout<RhoMinor3_1_Arm1Arm1_SuperLayout> x93 = LAYOUT_LOOKUP(x9, arm1);
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:457)
  Val x94 = x30[0]._super;
  Val x95 = x30[1]._super;
  Val x96 = x30[2]._super;
  Val x97 = x30[3]._super;
  Val x98 = x30[4]._super;
  Val x99 = x30[5]._super;
  Val x100 = x30[6]._super;
  Val x101 = x30[7]._super;
  Val x102 = x30[8]._super;
  Val x103 = x30[9]._super;
  Val x104 = x30[10]._super;
  Val x105 = x30[11]._super;
  Val x106 = x30[12]._super;
  Val x107 = x30[13]._super;
  Val x108 = x30[14]._super;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:465)
  BoundLayout<RhoMinor3_1_Arm1Arm1Arm1_SuperLayout> x109 = LAYOUT_LOOKUP(x93, arm1);
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:437)
  Val22Array x110 = Val22Array{x94,  x95,  x96,  x97,  x98, x99, x100, x101, x102, x103, x104,
                               x105, x106, x107, x108, x31, x32, x33,  x34,  x35,  x36,  x37};
  if (to_size_t(Val(1))) {
    if (to_size_t(Val(1))) {
      // rho_minor3(zirgen/circuit/keccak/keccak.zir:462)
      RetTupleStruct x111 =
          exec_RetTuple(ctx,
                        Val22Array{x94,  x95,  x96,  x97,  x98, x99, x100, x101, x102, x103, x104,
                                   x105, x106, x107, x108, x12, x13, x14,  x15,  x16,  x17,  x19},
                        Val22Array{x20, x21, x23, x24, x25, x27, x28, x29, x49, x50, x51,
                                   x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62},
                        x86,
                        x87,
                        x88,
                        x88,
                        Val(0),
                        Val(7),
                        x89,
                        x90,
                        x91,
                        LAYOUT_LOOKUP(x9, arm0));
    }
    if (to_size_t(Val(0))) {
      if (to_size_t(Val(0))) {
        // rho_minor3(zirgen/circuit/keccak/keccak.zir:474)
        RetTupleStruct x112 =
            exec_RetTuple(ctx,
                          x110,
                          Val22Array{x41, x42, x43, x44, x45, x46, x47, x48, x12, x13, x14,
                                     x15, x16, x17, x19, x20, x21, x23, x24, x25, x27, x28},
                          Val22Array{x29, x65, x66, x67, x68, x69, x70, x71, x72, x73, x74,
                                     x75, x76, x77, x78, x79, x80, x81, x82, x83, x84, x85},
                          x87,
                          x88,
                          x88,
                          Val(0),
                          Val(8),
                          x89,
                          x90,
                          x91,
                          LAYOUT_LOOKUP(x93, arm0));
      }
      if (to_size_t(Val(1))) {
        if (to_size_t(Val(0))) {
          // rho_minor3(zirgen/circuit/keccak/keccak.zir:485)
          RetTupleStruct x113 =
              exec_RetTuple(ctx,
                            x110,
                            x63,
                            Val22Array{x64, x12, x13, x14, x15, x16, x17, x19, x20, x21, x23,
                                       x24, x25, x27, x28, x29, x80, x81, x82, x83, x84, x85},
                            x87,
                            x88,
                            x88,
                            Val(0),
                            Val(9),
                            x89,
                            x90,
                            x91,
                            LAYOUT_LOOKUP(x109, arm0));
        }
        if (to_size_t(Val(1))) {
          // rho_minor3(zirgen/circuit/keccak/keccak.zir:522)
          RetTupleStruct x114 = exec_RetTuple(
              ctx,
              Val22Array{x94, x95, x96, x34, x35,  x36,  x55,  x56, x57, x74, x75,
                         x76, x27, x28, x29, x103, x104, x105, x46, x47, x48, x49},
              Val22Array{x50, x51, x68, x69, x70, x19, x20, x21, x97, x98, x99,
                         x37, x41, x42, x58, x59, x60, x77, x78, x79, x12, x13},
              Val22Array{x14, x106, x107, x108, x31, x32,  x33,  x52,  x53, x54, x71,
                         x72, x73,  x23,  x24,  x25, x100, x101, x102, x43, x44, x45},
              Val24Array{x61,    x62,    x64,    x65,    x66,    x67,    x15,    x16,
                         x17,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                         Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
              x88,
              x88,
              Val(0),
              Val(10),
              x89,
              x90,
              x91,
              LAYOUT_LOOKUP(x109, arm1));
        }
        // rho_minor3(zirgen/circuit/keccak/keccak.zir:477)
        RetTupleStruct x115 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x109, _super));
      }
      // rho_minor3(zirgen/circuit/keccak/keccak.zir:465)
      RetTupleStruct x116 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x93, _super));
    }
    // rho_minor3(zirgen/circuit/keccak/keccak.zir:453)
    RetTupleStruct x117 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x9, _super));
  }
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:439)
  RetTupleStruct x118 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(layout2, _super));
  return x118;
}
RetTupleStruct execRhoMajor_1_(ExecContext& ctx,
                               RetTupleStruct arg0,
                               BoundLayout<RetTupleLayout> arg1,
                               BoundLayout<RhoMajor_1_Layout> layout2) {
  // rho_major(zirgen/circuit/keccak/keccak.zir:529)
  BoundLayout<RhoMajor_1__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // rho_major(zirgen/circuit/keccak/keccak.zir:528)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  OneHot_9_Struct x5 = exec_OneHot_9_(ctx, x4.minor._super, LAYOUT_LOOKUP(layout2, minorOnehot));
  NondetRegStruct9Array x6 = x5._super;
  if (to_size_t(x6[0]._super)) {
    // rho_major(zirgen/circuit/keccak/keccak.zir:530)
    RetTupleStruct x7 = execRhoMinor0_0__1_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm0));
  }
  if (to_size_t(x6[1]._super)) {
    // rho_major(zirgen/circuit/keccak/keccak.zir:531)
    RetTupleStruct x8 = execRhoMinor1_0__1_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm1));
  }
  if (to_size_t(x6[2]._super)) {
    // rho_major(zirgen/circuit/keccak/keccak.zir:532)
    RetTupleStruct x9 = execRhoMinor2_0__1_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm2));
  }
  if (to_size_t(x6[3]._super)) {
    // rho_major(zirgen/circuit/keccak/keccak.zir:533)
    RetTupleStruct x10 = execRhoMinor0_2__1_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm3));
  }
  if (to_size_t(x6[4]._super)) {
    // rho_major(zirgen/circuit/keccak/keccak.zir:534)
    RetTupleStruct x11 = execRhoMinor1_2__1_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm4));
  }
  if (to_size_t(x6[5]._super)) {
    // rho_major(zirgen/circuit/keccak/keccak.zir:535)
    RetTupleStruct x12 = execRhoMinor2_2__1_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm5));
  }
  if (to_size_t(x6[6]._super)) {
    // rho_major(zirgen/circuit/keccak/keccak.zir:536)
    RetTupleStruct x13 = execRhoMinor0_4__1_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm6));
  }
  if (to_size_t(x6[7]._super)) {
    // rho_major(zirgen/circuit/keccak/keccak.zir:537)
    RetTupleStruct x14 = execRhoMinor1_4__1_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm7));
  }
  if (to_size_t(x6[8]._super)) {
    // rho_major(zirgen/circuit/keccak/keccak.zir:538)
    RetTupleStruct x15 = execRhoMinor3_1_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm8));
  }
  // rho_major(zirgen/circuit/keccak/keccak.zir:529)
  RetTupleStruct x16 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x16;
}
RetTupleStruct execRhoMinor0_0__2_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<RhoMinor0_0__2_Layout> layout2) {
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  RetTupleStruct x3 = back_RetTuple(ctx, 1, arg1);
  NondetRegStruct24Array x4 = x3.arrD;
  Val x5 = x4[21]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:257)
  ToBits_22_Struct x6 = exec_ToBits_22_(ctx, x5, LAYOUT_LOOKUP(layout2, unpackM1));
  NondetRegStruct22Array x7 = x6._super;
  Val x8 = x7[0]._super;
  Val x9 = x7[1]._super;
  Val x10 = x7[2]._super;
  Val x11 = x7[3]._super;
  Val x12 = x7[4]._super;
  Val x13 = x7[5]._super;
  Val x14 = x7[6]._super;
  Val x15 = x7[7]._super;
  Val x16 = x7[8]._super;
  Val x17 = x7[9]._super;
  Val x18 = x7[10]._super;
  Val x19 = x7[11]._super;
  Val x20 = x7[12]._super;
  Val x21 = x7[13]._super;
  Val x22 = x7[14]._super;
  Val x23 = x7[15]._super;
  Val x24 = x7[16]._super;
  Val x25 = x7[17]._super;
  Val x26 = x7[18]._super;
  Val x27 = x7[19]._super;
  Val x28 = x7[20]._super;
  Val x29 = x7[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:258)
  Val x30 = ((((((x8 + (x9 * Val(2))) + (x10 * Val(4))) + (x11 * Val(8))) + (x12 * Val(16))) +
              (x13 * Val(32))) +
             (x14 * Val(64)));
  Val x31 =
      ((((((x30 + (x15 * Val(128))) + (x16 * Val(256))) + (x17 * Val(512))) + (x18 * Val(1024))) +
        (x19 * Val(2048))) +
       (x20 * Val(4096)));
  Val x32 = ((((((x31 + (x21 * Val(8192))) + (x22 * Val(16384))) + (x23 * Val(32768))) +
               (x24 * Val(65536))) +
              (x25 * Val(131072))) +
             (x26 * Val(262144)));
  EQZ(((((x32 + (x27 * Val(524288))) + (x28 * Val(1048576))) + (x29 * Val(2097152))) - x5),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:258)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x33 = x4[22]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:261)
  ToBits_21_Struct x34 = exec_ToBits_21_(ctx, x33, LAYOUT_LOOKUP(layout2, unpackM2));
  NondetRegStruct21Array x35 = x34._super;
  Val x36 = x35[0]._super;
  Val x37 = x35[1]._super;
  Val x38 = x35[2]._super;
  Val x39 = x35[3]._super;
  Val x40 = x35[4]._super;
  Val x41 = x35[5]._super;
  Val x42 = x35[6]._super;
  Val x43 = x35[7]._super;
  Val x44 = x35[8]._super;
  Val x45 = x35[9]._super;
  Val x46 = x35[10]._super;
  Val x47 = x35[11]._super;
  Val x48 = x35[12]._super;
  Val x49 = x35[13]._super;
  Val x50 = x35[14]._super;
  Val x51 = x35[15]._super;
  Val x52 = x35[16]._super;
  Val x53 = x35[17]._super;
  Val x54 = x35[18]._super;
  Val x55 = x35[19]._super;
  Val x56 = x35[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:262)
  Val x57 = ((((((x36 + (x37 * Val(2))) + (x38 * Val(4))) + (x39 * Val(8))) + (x40 * Val(16))) +
              (x41 * Val(32))) +
             (x42 * Val(64)));
  Val x58 =
      ((((((x57 + (x43 * Val(128))) + (x44 * Val(256))) + (x45 * Val(512))) + (x46 * Val(1024))) +
        (x47 * Val(2048))) +
       (x48 * Val(4096)));
  Val x59 = ((((((x58 + (x49 * Val(8192))) + (x50 * Val(16384))) + (x51 * Val(32768))) +
               (x52 * Val(65536))) +
              (x53 * Val(131072))) +
             (x54 * Val(262144)));
  EQZ((((x59 + (x55 * Val(524288))) + (x56 * Val(1048576))) - x33),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:262)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x60 = x4[23]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:266)
  ToBits_21_Struct x61 = exec_ToBits_21_(ctx, x60, LAYOUT_LOOKUP(layout2, unpackM3));
  NondetRegStruct21Array x62 = x61._super;
  Val x63 = x62[0]._super;
  Val x64 = x62[1]._super;
  Val x65 = x62[2]._super;
  Val x66 = x62[3]._super;
  Val x67 = x62[4]._super;
  Val x68 = x62[5]._super;
  Val x69 = x62[6]._super;
  Val x70 = x62[7]._super;
  Val x71 = x62[8]._super;
  Val x72 = x62[9]._super;
  Val x73 = x62[10]._super;
  Val x74 = x62[11]._super;
  Val x75 = x62[12]._super;
  Val x76 = x62[13]._super;
  Val x77 = x62[14]._super;
  Val x78 = x62[15]._super;
  Val x79 = x62[16]._super;
  Val x80 = x62[17]._super;
  Val x81 = x62[18]._super;
  Val x82 = x62[19]._super;
  Val x83 = x62[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:267)
  Val x84 = ((((((x63 + (x64 * Val(2))) + (x65 * Val(4))) + (x66 * Val(8))) + (x67 * Val(16))) +
              (x68 * Val(32))) +
             (x69 * Val(64)));
  Val x85 =
      ((((((x84 + (x70 * Val(128))) + (x71 * Val(256))) + (x72 * Val(512))) + (x73 * Val(1024))) +
        (x74 * Val(2048))) +
       (x75 * Val(4096)));
  Val x86 = ((((((x85 + (x76 * Val(8192))) + (x77 * Val(16384))) + (x78 * Val(32768))) +
               (x79 * Val(65536))) +
              (x80 * Val(131072))) +
             (x81 * Val(262144)));
  EQZ((((x86 + (x82 * Val(524288))) + (x83 * Val(1048576))) - x60),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:267)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x87 = x4[12]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:271)
  ToBits_22_Struct x88 = exec_ToBits_22_(ctx, x87, LAYOUT_LOOKUP(layout2, unpackP1));
  NondetRegStruct22Array x89 = x88._super;
  Val x90 = x89[0]._super;
  Val x91 = x89[1]._super;
  Val x92 = x89[2]._super;
  Val x93 = x89[3]._super;
  Val x94 = x89[4]._super;
  Val x95 = x89[5]._super;
  Val x96 = x89[6]._super;
  Val x97 = x89[7]._super;
  Val x98 = x89[8]._super;
  Val x99 = x89[9]._super;
  Val x100 = x89[10]._super;
  Val x101 = x89[11]._super;
  Val x102 = x89[12]._super;
  Val x103 = x89[13]._super;
  Val x104 = x89[14]._super;
  Val x105 = x89[15]._super;
  Val x106 = x89[16]._super;
  Val x107 = x89[17]._super;
  Val x108 = x89[18]._super;
  Val x109 = x89[19]._super;
  Val x110 = x89[20]._super;
  Val x111 = x89[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:272)
  Val x112 = ((((((x90 + (x91 * Val(2))) + (x92 * Val(4))) + (x93 * Val(8))) + (x94 * Val(16))) +
               (x95 * Val(32))) +
              (x96 * Val(64)));
  Val x113 =
      ((((((x112 + (x97 * Val(128))) + (x98 * Val(256))) + (x99 * Val(512))) + (x100 * Val(1024))) +
        (x101 * Val(2048))) +
       (x102 * Val(4096)));
  Val x114 = ((((((x113 + (x103 * Val(8192))) + (x104 * Val(16384))) + (x105 * Val(32768))) +
                (x106 * Val(65536))) +
               (x107 * Val(131072))) +
              (x108 * Val(262144)));
  EQZ(((((x114 + (x109 * Val(524288))) + (x110 * Val(1048576))) + (x111 * Val(2097152))) - x87),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:272)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x115 = x4[13]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:275)
  ToBits_21_Struct x116 = exec_ToBits_21_(ctx, x115, LAYOUT_LOOKUP(layout2, unpackP2));
  NondetRegStruct21Array x117 = x116._super;
  Val x118 = x117[0]._super;
  Val x119 = x117[1]._super;
  Val x120 = x117[2]._super;
  Val x121 = x117[3]._super;
  Val x122 = x117[4]._super;
  Val x123 = x117[5]._super;
  Val x124 = x117[6]._super;
  Val x125 = x117[7]._super;
  Val x126 = x117[8]._super;
  Val x127 = x117[9]._super;
  Val x128 = x117[10]._super;
  Val x129 = x117[11]._super;
  Val x130 = x117[12]._super;
  Val x131 = x117[13]._super;
  Val x132 = x117[14]._super;
  Val x133 = x117[15]._super;
  Val x134 = x117[16]._super;
  Val x135 = x117[17]._super;
  Val x136 = x117[18]._super;
  Val x137 = x117[19]._super;
  Val x138 = x117[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:276)
  Val x139 =
      ((((((x118 + (x119 * Val(2))) + (x120 * Val(4))) + (x121 * Val(8))) + (x122 * Val(16))) +
        (x123 * Val(32))) +
       (x124 * Val(64)));
  Val x140 = ((((((x139 + (x125 * Val(128))) + (x126 * Val(256))) + (x127 * Val(512))) +
                (x128 * Val(1024))) +
               (x129 * Val(2048))) +
              (x130 * Val(4096)));
  Val x141 = ((((((x140 + (x131 * Val(8192))) + (x132 * Val(16384))) + (x133 * Val(32768))) +
                (x134 * Val(65536))) +
               (x135 * Val(131072))) +
              (x136 * Val(262144)));
  EQZ((((x141 + (x137 * Val(524288))) + (x138 * Val(1048576))) - x115),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:276)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x142 = x4[14]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:279)
  ToBits_21_Struct x143 = exec_ToBits_21_(ctx, x142, LAYOUT_LOOKUP(layout2, unpackP3));
  NondetRegStruct21Array x144 = x143._super;
  Val x145 = x144[0]._super;
  Val x146 = x144[1]._super;
  Val x147 = x144[2]._super;
  Val x148 = x144[3]._super;
  Val x149 = x144[4]._super;
  Val x150 = x144[5]._super;
  Val x151 = x144[6]._super;
  Val x152 = x144[7]._super;
  Val x153 = x144[8]._super;
  Val x154 = x144[9]._super;
  Val x155 = x144[10]._super;
  Val x156 = x144[11]._super;
  Val x157 = x144[12]._super;
  Val x158 = x144[13]._super;
  Val x159 = x144[14]._super;
  Val x160 = x144[15]._super;
  Val x161 = x144[16]._super;
  Val x162 = x144[17]._super;
  Val x163 = x144[18]._super;
  Val x164 = x144[19]._super;
  Val x165 = x144[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:280)
  Val x166 =
      ((((((x145 + (x146 * Val(2))) + (x147 * Val(4))) + (x148 * Val(8))) + (x149 * Val(16))) +
        (x150 * Val(32))) +
       (x151 * Val(64)));
  Val x167 = ((((((x166 + (x152 * Val(128))) + (x153 * Val(256))) + (x154 * Val(512))) +
                (x155 * Val(1024))) +
               (x156 * Val(2048))) +
              (x157 * Val(4096)));
  Val x168 = ((((((x167 + (x158 * Val(8192))) + (x159 * Val(16384))) + (x160 * Val(32768))) +
                (x161 * Val(65536))) +
               (x162 * Val(131072))) +
              (x163 * Val(262144)));
  EQZ((((x168 + (x164 * Val(524288))) + (x165 * Val(1048576))) - x142),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:280)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:287)
  RetTupleStruct x169 =
      exec_RetTuple(ctx,
                    Val22Array{x165, x90,  x91,  x92,  x93,  x94,  x95,  x96,  x97,  x98,  x99,
                               x100, x101, x102, x103, x104, x105, x106, x107, x108, x109, x110},
                    Val22Array{x111, x118, x119, x120, x121, x122, x123, x124, x125, x126, x127,
                               x128, x129, x130, x131, x132, x133, x134, x135, x136, x137, Val(0)},
                    Val22Array{x138, x145, x146, x147, x148, x149, x150, x151, x152, x153, x154,
                               x155, x156, x157, x158, x159, x160, x161, x162, x163, x164, Val(0)},
                    Val24Array{x8,  x9,  x10, x11, x12, x13, x14, x15, x16, x17, x18,    x19,
                               x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, Val(0), Val(0)},
                    Val22Array{x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46,
                               x47, x48, x49, x50, x51, x52, x53, x54, x55, x56, Val(0)},
                    Val22Array{x63, x64, x65, x66, x67, x68, x69, x70, x71, x72, x73,
                               x74, x75, x76, x77, x78, x79, x80, x81, x82, x83, Val(0)},
                    Val(1),
                    Val(7),
                    x3.rnd._super,
                    x3.blk._super,
                    x3.midx._super,
                    LAYOUT_LOOKUP(layout2, _super));
  return x169;
}
RetTupleStruct execRhoMinor1_0__2_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<RhoMinor1_0__2_Layout> layout2) {
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:341)
  BoundLayout<RhoMinor1_0__2__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:292)
  RetTupleStruct x4 = back_RetTuple(ctx, 2, arg1);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  RetTupleStruct x5 = back_RetTuple(ctx, 1, arg1);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:292)
  NondetRegStruct22Array x6 = x4.arrB;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:297)
  Val x7 = x6[8]._super;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:304)
  ToBits_22_Struct x8 = exec_ToBits_22_(ctx, x7, LAYOUT_LOOKUP(layout2, unpackXy1));
  NondetRegStruct22Array x9 = x8._super;
  Val x10 = x9[0]._super;
  Val x11 = x9[1]._super;
  Val x12 = x9[2]._super;
  Val x13 = x9[3]._super;
  Val x14 = x9[4]._super;
  Val x15 = x9[5]._super;
  Val x16 = x9[6]._super;
  Val x17 = x9[7]._super;
  Val x18 = x9[8]._super;
  Val x19 = x9[9]._super;
  Val x20 = x9[10]._super;
  Val x21 = x9[11]._super;
  Val x22 = x9[12]._super;
  Val x23 = x9[13]._super;
  Val x24 = x9[14]._super;
  Val x25 = x9[15]._super;
  Val x26 = x9[16]._super;
  Val x27 = x9[17]._super;
  Val x28 = x9[18]._super;
  Val x29 = x9[19]._super;
  Val x30 = x9[20]._super;
  Val x31 = x9[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:305)
  Val x32 = ((((((x10 + (x11 * Val(2))) + (x12 * Val(4))) + (x13 * Val(8))) + (x14 * Val(16))) +
              (x15 * Val(32))) +
             (x16 * Val(64)));
  Val x33 =
      ((((((x32 + (x17 * Val(128))) + (x18 * Val(256))) + (x19 * Val(512))) + (x20 * Val(1024))) +
        (x21 * Val(2048))) +
       (x22 * Val(4096)));
  Val x34 = ((((((x33 + (x23 * Val(8192))) + (x24 * Val(16384))) + (x25 * Val(32768))) +
               (x26 * Val(65536))) +
              (x27 * Val(131072))) +
             (x28 * Val(262144)));
  EQZ(((((x34 + (x29 * Val(524288))) + (x30 * Val(1048576))) + (x31 * Val(2097152))) - x7),
      "rho_minor1(zirgen/circuit/keccak/keccak.zir:305)");
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:309)
  Val x35 = x6[9]._super;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:316)
  ToBits_21_Struct x36 = exec_ToBits_21_(ctx, x35, LAYOUT_LOOKUP(layout2, unpackXy2));
  NondetRegStruct21Array x37 = x36._super;
  Val x38 = x37[0]._super;
  Val x39 = x37[1]._super;
  Val x40 = x37[2]._super;
  Val x41 = x37[3]._super;
  Val x42 = x37[4]._super;
  Val x43 = x37[5]._super;
  Val x44 = x37[6]._super;
  Val x45 = x37[7]._super;
  Val x46 = x37[8]._super;
  Val x47 = x37[9]._super;
  Val x48 = x37[10]._super;
  Val x49 = x37[11]._super;
  Val x50 = x37[12]._super;
  Val x51 = x37[13]._super;
  Val x52 = x37[14]._super;
  Val x53 = x37[15]._super;
  Val x54 = x37[16]._super;
  Val x55 = x37[17]._super;
  Val x56 = x37[18]._super;
  Val x57 = x37[19]._super;
  Val x58 = x37[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:317)
  Val x59 = ((((((x38 + (x39 * Val(2))) + (x40 * Val(4))) + (x41 * Val(8))) + (x42 * Val(16))) +
              (x43 * Val(32))) +
             (x44 * Val(64)));
  Val x60 =
      ((((((x59 + (x45 * Val(128))) + (x46 * Val(256))) + (x47 * Val(512))) + (x48 * Val(1024))) +
        (x49 * Val(2048))) +
       (x50 * Val(4096)));
  Val x61 = ((((((x60 + (x51 * Val(8192))) + (x52 * Val(16384))) + (x53 * Val(32768))) +
               (x54 * Val(65536))) +
              (x55 * Val(131072))) +
             (x56 * Val(262144)));
  EQZ((((x61 + (x57 * Val(524288))) + (x58 * Val(1048576))) - x35),
      "rho_minor1(zirgen/circuit/keccak/keccak.zir:317)");
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:321)
  Val x62 = x6[10]._super;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:328)
  ToBits_21_Struct x63 = exec_ToBits_21_(ctx, x62, LAYOUT_LOOKUP(layout2, unpackXy3));
  NondetRegStruct21Array x64 = x63._super;
  Val x65 = x64[0]._super;
  Val x66 = x64[1]._super;
  Val x67 = x64[2]._super;
  Val x68 = x64[3]._super;
  Val x69 = x64[4]._super;
  Val x70 = x64[5]._super;
  Val x71 = x64[6]._super;
  Val x72 = x64[7]._super;
  Val x73 = x64[8]._super;
  Val x74 = x64[9]._super;
  Val x75 = x64[10]._super;
  Val x76 = x64[11]._super;
  Val x77 = x64[12]._super;
  Val x78 = x64[13]._super;
  Val x79 = x64[14]._super;
  Val x80 = x64[15]._super;
  Val x81 = x64[16]._super;
  Val x82 = x64[17]._super;
  Val x83 = x64[18]._super;
  Val x84 = x64[19]._super;
  Val x85 = x64[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:329)
  Val x86 = ((((((x65 + (x66 * Val(2))) + (x67 * Val(4))) + (x68 * Val(8))) + (x69 * Val(16))) +
              (x70 * Val(32))) +
             (x71 * Val(64)));
  Val x87 =
      ((((((x86 + (x72 * Val(128))) + (x73 * Val(256))) + (x74 * Val(512))) + (x75 * Val(1024))) +
        (x76 * Val(2048))) +
       (x77 * Val(4096)));
  Val x88 = ((((((x87 + (x78 * Val(8192))) + (x79 * Val(16384))) + (x80 * Val(32768))) +
               (x81 * Val(65536))) +
              (x82 * Val(131072))) +
             (x83 * Val(262144)));
  EQZ((((x88 + (x84 * Val(524288))) + (x85 * Val(1048576))) - x62),
      "rho_minor1(zirgen/circuit/keccak/keccak.zir:329)");
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  NondetRegStruct22Array x89 = x5.arrA;
  NondetRegStruct24Array x90 = x5.arrD;
  Val x91 = x89[0]._super;
  Val x92 = x90[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x93 = ((x10 * x91) + ((Val(1) - x10) * (Val(1) - x91)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x94 = x89[1]._super;
  Val x95 = x90[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x96 = ((x11 * x94) + ((Val(1) - x11) * (Val(1) - x94)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x97 = x89[2]._super;
  Val x98 = x90[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x99 = ((x12 * x97) + ((Val(1) - x12) * (Val(1) - x97)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x100 = x89[3]._super;
  Val x101 = x90[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x102 = ((x13 * x100) + ((Val(1) - x13) * (Val(1) - x100)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x103 = x89[4]._super;
  Val x104 = x90[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x105 = ((x14 * x103) + ((Val(1) - x14) * (Val(1) - x103)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x106 = x89[5]._super;
  Val x107 = x90[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x108 = ((x15 * x106) + ((Val(1) - x15) * (Val(1) - x106)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x109 = x89[6]._super;
  Val x110 = x90[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x111 = ((x16 * x109) + ((Val(1) - x16) * (Val(1) - x109)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x112 = x89[7]._super;
  Val x113 = x90[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x114 = ((x17 * x112) + ((Val(1) - x17) * (Val(1) - x112)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x115 = x89[8]._super;
  Val x116 = x90[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x117 = ((x18 * x115) + ((Val(1) - x18) * (Val(1) - x115)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x118 = x89[9]._super;
  Val x119 = x90[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x120 = ((x19 * x118) + ((Val(1) - x19) * (Val(1) - x118)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x121 = x89[10]._super;
  Val x122 = x90[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x123 = ((x20 * x121) + ((Val(1) - x20) * (Val(1) - x121)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x124 = x89[11]._super;
  Val x125 = x90[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x126 = ((x21 * x124) + ((Val(1) - x21) * (Val(1) - x124)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x127 = x89[12]._super;
  Val x128 = x90[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x129 = ((x22 * x127) + ((Val(1) - x22) * (Val(1) - x127)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x130 = x89[13]._super;
  Val x131 = x90[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x132 = ((x23 * x130) + ((Val(1) - x23) * (Val(1) - x130)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x133 = x89[14]._super;
  Val x134 = x90[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x135 = ((x24 * x133) + ((Val(1) - x24) * (Val(1) - x133)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x136 = x89[15]._super;
  Val x137 = x90[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x138 = ((x25 * x136) + ((Val(1) - x25) * (Val(1) - x136)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x139 = x89[16]._super;
  Val x140 = x90[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x141 = ((x26 * x139) + ((Val(1) - x26) * (Val(1) - x139)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x142 = x89[17]._super;
  Val x143 = x90[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x144 = ((x27 * x142) + ((Val(1) - x27) * (Val(1) - x142)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x145 = x89[18]._super;
  Val x146 = x90[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x147 = ((x28 * x145) + ((Val(1) - x28) * (Val(1) - x145)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x148 = x89[19]._super;
  Val x149 = x90[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x150 = ((x29 * x148) + ((Val(1) - x29) * (Val(1) - x148)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x151 = x89[20]._super;
  Val x152 = x90[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x153 = ((x30 * x151) + ((Val(1) - x30) * (Val(1) - x151)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x154 = x89[21]._super;
  Val x155 = x90[21]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x156 = ((x31 * x154) + ((Val(1) - x31) * (Val(1) - x154)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  NondetRegStruct22Array x157 = x5.arrB;
  NondetRegStruct22Array x158 = x5.arrE;
  Val x159 = x157[0]._super;
  Val x160 = x158[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x161 = ((x38 * x159) + ((Val(1) - x38) * (Val(1) - x159)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x162 = x157[1]._super;
  Val x163 = x158[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x164 = ((x39 * x162) + ((Val(1) - x39) * (Val(1) - x162)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x165 = x157[2]._super;
  Val x166 = x158[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x167 = ((x40 * x165) + ((Val(1) - x40) * (Val(1) - x165)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x168 = x157[3]._super;
  Val x169 = x158[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x170 = ((x41 * x168) + ((Val(1) - x41) * (Val(1) - x168)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x171 = x157[4]._super;
  Val x172 = x158[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x173 = ((x42 * x171) + ((Val(1) - x42) * (Val(1) - x171)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x174 = x157[5]._super;
  Val x175 = x158[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x176 = ((x43 * x174) + ((Val(1) - x43) * (Val(1) - x174)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x177 = x157[6]._super;
  Val x178 = x158[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x179 = ((x44 * x177) + ((Val(1) - x44) * (Val(1) - x177)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x180 = x157[7]._super;
  Val x181 = x158[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x182 = ((x45 * x180) + ((Val(1) - x45) * (Val(1) - x180)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x183 = x157[8]._super;
  Val x184 = x158[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x185 = ((x46 * x183) + ((Val(1) - x46) * (Val(1) - x183)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x186 = x157[9]._super;
  Val x187 = x158[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x188 = ((x47 * x186) + ((Val(1) - x47) * (Val(1) - x186)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x189 = x157[10]._super;
  Val x190 = x158[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x191 = ((x48 * x189) + ((Val(1) - x48) * (Val(1) - x189)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x192 = x157[11]._super;
  Val x193 = x158[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x194 = ((x49 * x192) + ((Val(1) - x49) * (Val(1) - x192)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x195 = x157[12]._super;
  Val x196 = x158[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x197 = ((x50 * x195) + ((Val(1) - x50) * (Val(1) - x195)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x198 = x157[13]._super;
  Val x199 = x158[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x200 = ((x51 * x198) + ((Val(1) - x51) * (Val(1) - x198)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x201 = x157[14]._super;
  Val x202 = x158[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x203 = ((x52 * x201) + ((Val(1) - x52) * (Val(1) - x201)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x204 = x157[15]._super;
  Val x205 = x158[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x206 = ((x53 * x204) + ((Val(1) - x53) * (Val(1) - x204)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x207 = x157[16]._super;
  Val x208 = x158[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x209 = ((x54 * x207) + ((Val(1) - x54) * (Val(1) - x207)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x210 = x157[17]._super;
  Val x211 = x158[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x212 = ((x55 * x210) + ((Val(1) - x55) * (Val(1) - x210)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x213 = x157[18]._super;
  Val x214 = x158[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x215 = ((x56 * x213) + ((Val(1) - x56) * (Val(1) - x213)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x216 = x157[19]._super;
  Val x217 = x158[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x218 = ((x57 * x216) + ((Val(1) - x57) * (Val(1) - x216)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x219 = x157[20]._super;
  Val x220 = x158[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x221 = ((x58 * x219) + ((Val(1) - x58) * (Val(1) - x219)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  NondetRegStruct22Array x222 = x5.arrC;
  NondetRegStruct22Array x223 = x5.arrF;
  Val x224 = x222[0]._super;
  Val x225 = x223[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x226 = ((x65 * x224) + ((Val(1) - x65) * (Val(1) - x224)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x227 = x222[1]._super;
  Val x228 = x223[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x229 = ((x66 * x227) + ((Val(1) - x66) * (Val(1) - x227)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x230 = x222[2]._super;
  Val x231 = x223[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x232 = ((x67 * x230) + ((Val(1) - x67) * (Val(1) - x230)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x233 = x222[3]._super;
  Val x234 = x223[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x235 = ((x68 * x233) + ((Val(1) - x68) * (Val(1) - x233)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x236 = x222[4]._super;
  Val x237 = x223[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x238 = ((x69 * x236) + ((Val(1) - x69) * (Val(1) - x236)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x239 = x222[5]._super;
  Val x240 = x223[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x241 = ((x70 * x239) + ((Val(1) - x70) * (Val(1) - x239)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x242 = x222[6]._super;
  Val x243 = x223[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x244 = ((x71 * x242) + ((Val(1) - x71) * (Val(1) - x242)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x245 = x222[7]._super;
  Val x246 = x223[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x247 = ((x72 * x245) + ((Val(1) - x72) * (Val(1) - x245)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x248 = x222[8]._super;
  Val x249 = x223[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x250 = ((x73 * x248) + ((Val(1) - x73) * (Val(1) - x248)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x251 = x222[9]._super;
  Val x252 = x223[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x253 = ((x74 * x251) + ((Val(1) - x74) * (Val(1) - x251)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x254 = x222[10]._super;
  Val x255 = x223[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x256 = ((x75 * x254) + ((Val(1) - x75) * (Val(1) - x254)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x257 = x222[11]._super;
  Val x258 = x223[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x259 = ((x76 * x257) + ((Val(1) - x76) * (Val(1) - x257)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x260 = x222[12]._super;
  Val x261 = x223[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x262 = ((x77 * x260) + ((Val(1) - x77) * (Val(1) - x260)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x263 = x222[13]._super;
  Val x264 = x223[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x265 = ((x78 * x263) + ((Val(1) - x78) * (Val(1) - x263)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x266 = x222[14]._super;
  Val x267 = x223[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x268 = ((x79 * x266) + ((Val(1) - x79) * (Val(1) - x266)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x269 = x222[15]._super;
  Val x270 = x223[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x271 = ((x80 * x269) + ((Val(1) - x80) * (Val(1) - x269)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x272 = x222[16]._super;
  Val x273 = x223[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x274 = ((x81 * x272) + ((Val(1) - x81) * (Val(1) - x272)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x275 = x222[17]._super;
  Val x276 = x223[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x277 = ((x82 * x275) + ((Val(1) - x82) * (Val(1) - x275)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x278 = x222[18]._super;
  Val x279 = x223[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x280 = ((x83 * x278) + ((Val(1) - x83) * (Val(1) - x278)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x281 = x222[19]._super;
  Val x282 = x223[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x283 = ((x84 * x281) + ((Val(1) - x84) * (Val(1) - x281)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x284 = x222[20]._super;
  Val x285 = x223[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x286 = ((x85 * x284) + ((Val(1) - x85) * (Val(1) - x284)));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:336)
  Val x287 = (((x280 * x279) + ((Val(1) - x280) * (Val(1) - x279))) +
              (((x283 * x282) + ((Val(1) - x283) * (Val(1) - x282))) * Val(2)));
  Val x288 = ((x287 + (((x286 * x285) + ((Val(1) - x286) * (Val(1) - x285))) * Val(4))) +
              (((x93 * x92) + ((Val(1) - x93) * (Val(1) - x92))) * Val(8)));
  Val x289 = ((x288 + (((x96 * x95) + ((Val(1) - x96) * (Val(1) - x95))) * Val(16))) +
              (((x99 * x98) + ((Val(1) - x99) * (Val(1) - x98))) * Val(32)));
  Val x290 = ((x289 + (((x102 * x101) + ((Val(1) - x102) * (Val(1) - x101))) * Val(64))) +
              (((x105 * x104) + ((Val(1) - x105) * (Val(1) - x104))) * Val(128)));
  Val x291 = ((x290 + (((x108 * x107) + ((Val(1) - x108) * (Val(1) - x107))) * Val(256))) +
              (((x111 * x110) + ((Val(1) - x111) * (Val(1) - x110))) * Val(512)));
  Val x292 = ((x291 + (((x114 * x113) + ((Val(1) - x114) * (Val(1) - x113))) * Val(1024))) +
              (((x117 * x116) + ((Val(1) - x117) * (Val(1) - x116))) * Val(2048)));
  Val x293 = ((x292 + (((x120 * x119) + ((Val(1) - x120) * (Val(1) - x119))) * Val(4096))) +
              (((x123 * x122) + ((Val(1) - x123) * (Val(1) - x122))) * Val(8192)));
  Val x294 = ((x293 + (((x126 * x125) + ((Val(1) - x126) * (Val(1) - x125))) * Val(16384))) +
              (((x129 * x128) + ((Val(1) - x129) * (Val(1) - x128))) * Val(32768)));
  Val x295 = ((x294 + (((x132 * x131) + ((Val(1) - x132) * (Val(1) - x131))) * Val(65536))) +
              (((x135 * x134) + ((Val(1) - x135) * (Val(1) - x134))) * Val(131072)));
  Val x296 = ((x295 + (((x138 * x137) + ((Val(1) - x138) * (Val(1) - x137))) * Val(262144))) +
              (((x141 * x140) + ((Val(1) - x141) * (Val(1) - x140))) * Val(524288)));
  Val x297 = ((x296 + (((x144 * x143) + ((Val(1) - x144) * (Val(1) - x143))) * Val(1048576))) +
              (((x147 * x146) + ((Val(1) - x147) * (Val(1) - x146))) * Val(2097152)));
  NondetRegStruct x298 = exec_Reg(ctx, x297, LAYOUT_LOOKUP(layout2, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:337)
  Val x299 = (((x150 * x149) + ((Val(1) - x150) * (Val(1) - x149))) +
              (((x153 * x152) + ((Val(1) - x153) * (Val(1) - x152))) * Val(2)));
  Val x300 = ((x299 + (((x156 * x155) + ((Val(1) - x156) * (Val(1) - x155))) * Val(4))) +
              (((x161 * x160) + ((Val(1) - x161) * (Val(1) - x160))) * Val(8)));
  Val x301 = ((x300 + (((x164 * x163) + ((Val(1) - x164) * (Val(1) - x163))) * Val(16))) +
              (((x167 * x166) + ((Val(1) - x167) * (Val(1) - x166))) * Val(32)));
  Val x302 = ((x301 + (((x170 * x169) + ((Val(1) - x170) * (Val(1) - x169))) * Val(64))) +
              (((x173 * x172) + ((Val(1) - x173) * (Val(1) - x172))) * Val(128)));
  Val x303 = ((x302 + (((x176 * x175) + ((Val(1) - x176) * (Val(1) - x175))) * Val(256))) +
              (((x179 * x178) + ((Val(1) - x179) * (Val(1) - x178))) * Val(512)));
  Val x304 = ((x303 + (((x182 * x181) + ((Val(1) - x182) * (Val(1) - x181))) * Val(1024))) +
              (((x185 * x184) + ((Val(1) - x185) * (Val(1) - x184))) * Val(2048)));
  Val x305 = ((x304 + (((x188 * x187) + ((Val(1) - x188) * (Val(1) - x187))) * Val(4096))) +
              (((x191 * x190) + ((Val(1) - x191) * (Val(1) - x190))) * Val(8192)));
  Val x306 = ((x305 + (((x194 * x193) + ((Val(1) - x194) * (Val(1) - x193))) * Val(16384))) +
              (((x197 * x196) + ((Val(1) - x197) * (Val(1) - x196))) * Val(32768)));
  Val x307 = ((x306 + (((x200 * x199) + ((Val(1) - x200) * (Val(1) - x199))) * Val(65536))) +
              (((x203 * x202) + ((Val(1) - x203) * (Val(1) - x202))) * Val(131072)));
  Val x308 = ((x307 + (((x206 * x205) + ((Val(1) - x206) * (Val(1) - x205))) * Val(262144))) +
              (((x209 * x208) + ((Val(1) - x209) * (Val(1) - x208))) * Val(524288)));
  NondetRegStruct x309 =
      exec_Reg(ctx,
               (x308 + (((x212 * x211) + ((Val(1) - x212) * (Val(1) - x211))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _1));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:338)
  Val x310 = (((x215 * x214) + ((Val(1) - x215) * (Val(1) - x214))) +
              (((x218 * x217) + ((Val(1) - x218) * (Val(1) - x217))) * Val(2)));
  Val x311 = ((x310 + (((x221 * x220) + ((Val(1) - x221) * (Val(1) - x220))) * Val(4))) +
              (((x226 * x225) + ((Val(1) - x226) * (Val(1) - x225))) * Val(8)));
  Val x312 = ((x311 + (((x229 * x228) + ((Val(1) - x229) * (Val(1) - x228))) * Val(16))) +
              (((x232 * x231) + ((Val(1) - x232) * (Val(1) - x231))) * Val(32)));
  Val x313 = ((x312 + (((x235 * x234) + ((Val(1) - x235) * (Val(1) - x234))) * Val(64))) +
              (((x238 * x237) + ((Val(1) - x238) * (Val(1) - x237))) * Val(128)));
  Val x314 = ((x313 + (((x241 * x240) + ((Val(1) - x241) * (Val(1) - x240))) * Val(256))) +
              (((x244 * x243) + ((Val(1) - x244) * (Val(1) - x243))) * Val(512)));
  Val x315 = ((x314 + (((x247 * x246) + ((Val(1) - x247) * (Val(1) - x246))) * Val(1024))) +
              (((x250 * x249) + ((Val(1) - x250) * (Val(1) - x249))) * Val(2048)));
  Val x316 = ((x315 + (((x253 * x252) + ((Val(1) - x253) * (Val(1) - x252))) * Val(4096))) +
              (((x256 * x255) + ((Val(1) - x256) * (Val(1) - x255))) * Val(8192)));
  Val x317 = ((x316 + (((x259 * x258) + ((Val(1) - x259) * (Val(1) - x258))) * Val(16384))) +
              (((x262 * x261) + ((Val(1) - x262) * (Val(1) - x261))) * Val(32768)));
  Val x318 = ((x317 + (((x265 * x264) + ((Val(1) - x265) * (Val(1) - x264))) * Val(65536))) +
              (((x268 * x267) + ((Val(1) - x268) * (Val(1) - x267))) * Val(131072)));
  Val x319 = ((x318 + (((x271 * x270) + ((Val(1) - x271) * (Val(1) - x270))) * Val(262144))) +
              (((x274 * x273) + ((Val(1) - x274) * (Val(1) - x273))) * Val(524288)));
  NondetRegStruct x320 =
      exec_Reg(ctx,
               (x319 + (((x277 * x276) + ((Val(1) - x277) * (Val(1) - x276))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _2));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:341)
  BoundLayout<RhoMinor1_0__2_Arm1_SuperLayout> x321 = LAYOUT_LOOKUP(x3, arm1);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:342)
  Val22Array x322 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  Val24Array x323 = Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:339)
  Val22Array x324 =
      Val22Array{x298._super, x309._super, x320._super, Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0)};
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x325 = x5.rnd._super;
  Val x326 = x5.blk._super;
  Val x327 = x5.midx._super;
  if (to_size_t(Val(0))) {
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:342)
    RetTupleStruct x328 = exec_RetTuple(ctx,
                                        x322,
                                        x322,
                                        x322,
                                        x323,
                                        x322,
                                        x324,
                                        Val(8),
                                        Val(7),
                                        x325,
                                        x326,
                                        x327,
                                        LAYOUT_LOOKUP(x3, arm0));
  }
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:292)
  NondetRegStruct24Array x329 = x4.arrD;
  Val x330 = x329[9]._super;
  Val x331 = x329[10]._super;
  Val x332 = x329[11]._super;
  if (to_size_t(Val(1))) {
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:345)
    ToBits_22_Struct x333 = exec_ToBits_22_(ctx, x330, LAYOUT_LOOKUP(x321, unpackM1));
    NondetRegStruct22Array x334 = x333._super;
    Val x335 = x334[0]._super;
    Val x336 = x334[1]._super;
    Val x337 = x334[2]._super;
    Val x338 = x334[3]._super;
    Val x339 = x334[4]._super;
    Val x340 = x334[5]._super;
    Val x341 = x334[6]._super;
    Val x342 = x334[7]._super;
    Val x343 = x334[8]._super;
    Val x344 = x334[9]._super;
    Val x345 = x334[10]._super;
    Val x346 = x334[11]._super;
    Val x347 = x334[12]._super;
    Val x348 = x334[13]._super;
    Val x349 = x334[14]._super;
    Val x350 = x334[15]._super;
    Val x351 = x334[16]._super;
    Val x352 = x334[17]._super;
    Val x353 = x334[18]._super;
    Val x354 = x334[19]._super;
    Val x355 = x334[20]._super;
    Val x356 = x334[21]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:346)
    Val x357 =
        ((((((x335 + (x336 * Val(2))) + (x337 * Val(4))) + (x338 * Val(8))) + (x339 * Val(16))) +
          (x340 * Val(32))) +
         (x341 * Val(64)));
    Val x358 = ((((((x357 + (x342 * Val(128))) + (x343 * Val(256))) + (x344 * Val(512))) +
                  (x345 * Val(1024))) +
                 (x346 * Val(2048))) +
                (x347 * Val(4096)));
    Val x359 = ((((((x358 + (x348 * Val(8192))) + (x349 * Val(16384))) + (x350 * Val(32768))) +
                  (x351 * Val(65536))) +
                 (x352 * Val(131072))) +
                (x353 * Val(262144)));
    EQZ(((((x359 + (x354 * Val(524288))) + (x355 * Val(1048576))) + (x356 * Val(2097152))) - x330),
        "rho_minor1(zirgen/circuit/keccak/keccak.zir:346)");
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:349)
    ToBits_21_Struct x360 = exec_ToBits_21_(ctx, x331, LAYOUT_LOOKUP(x321, unpackM2));
    NondetRegStruct21Array x361 = x360._super;
    Val x362 = x361[0]._super;
    Val x363 = x361[1]._super;
    Val x364 = x361[2]._super;
    Val x365 = x361[3]._super;
    Val x366 = x361[4]._super;
    Val x367 = x361[5]._super;
    Val x368 = x361[6]._super;
    Val x369 = x361[7]._super;
    Val x370 = x361[8]._super;
    Val x371 = x361[9]._super;
    Val x372 = x361[10]._super;
    Val x373 = x361[11]._super;
    Val x374 = x361[12]._super;
    Val x375 = x361[13]._super;
    Val x376 = x361[14]._super;
    Val x377 = x361[15]._super;
    Val x378 = x361[16]._super;
    Val x379 = x361[17]._super;
    Val x380 = x361[18]._super;
    Val x381 = x361[19]._super;
    Val x382 = x361[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:350)
    Val x383 =
        ((((((x362 + (x363 * Val(2))) + (x364 * Val(4))) + (x365 * Val(8))) + (x366 * Val(16))) +
          (x367 * Val(32))) +
         (x368 * Val(64)));
    Val x384 = ((((((x383 + (x369 * Val(128))) + (x370 * Val(256))) + (x371 * Val(512))) +
                  (x372 * Val(1024))) +
                 (x373 * Val(2048))) +
                (x374 * Val(4096)));
    Val x385 = ((((((x384 + (x375 * Val(8192))) + (x376 * Val(16384))) + (x377 * Val(32768))) +
                  (x378 * Val(65536))) +
                 (x379 * Val(131072))) +
                (x380 * Val(262144)));
    EQZ((((x385 + (x381 * Val(524288))) + (x382 * Val(1048576))) - x331),
        "rho_minor1(zirgen/circuit/keccak/keccak.zir:350)");
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:354)
    ToBits_21_Struct x386 = exec_ToBits_21_(ctx, x332, LAYOUT_LOOKUP(x321, unpackM3));
    NondetRegStruct21Array x387 = x386._super;
    Val x388 = x387[0]._super;
    Val x389 = x387[1]._super;
    Val x390 = x387[2]._super;
    Val x391 = x387[3]._super;
    Val x392 = x387[4]._super;
    Val x393 = x387[5]._super;
    Val x394 = x387[6]._super;
    Val x395 = x387[7]._super;
    Val x396 = x387[8]._super;
    Val x397 = x387[9]._super;
    Val x398 = x387[10]._super;
    Val x399 = x387[11]._super;
    Val x400 = x387[12]._super;
    Val x401 = x387[13]._super;
    Val x402 = x387[14]._super;
    Val x403 = x387[15]._super;
    Val x404 = x387[16]._super;
    Val x405 = x387[17]._super;
    Val x406 = x387[18]._super;
    Val x407 = x387[19]._super;
    Val x408 = x387[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:355)
    Val x409 =
        ((((((x388 + (x389 * Val(2))) + (x390 * Val(4))) + (x391 * Val(8))) + (x392 * Val(16))) +
          (x393 * Val(32))) +
         (x394 * Val(64)));
    Val x410 = ((((((x409 + (x395 * Val(128))) + (x396 * Val(256))) + (x397 * Val(512))) +
                  (x398 * Val(1024))) +
                 (x399 * Val(2048))) +
                (x400 * Val(4096)));
    Val x411 = ((((((x410 + (x401 * Val(8192))) + (x402 * Val(16384))) + (x403 * Val(32768))) +
                  (x404 * Val(65536))) +
                 (x405 * Val(131072))) +
                (x406 * Val(262144)));
    EQZ((((x411 + (x407 * Val(524288))) + (x408 * Val(1048576))) - x332),
        "rho_minor1(zirgen/circuit/keccak/keccak.zir:355)");
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:358)
    RetTupleStruct x412 = exec_RetTuple(
        ctx,
        Val22Array{x335, x336, x337, x338, x339, x340, x341, x342, x343, x344, x345,
                   x346, x347, x348, x349, x350, x351, x352, x353, x354, x355, x356},
        Val22Array{x362, x363, x364, x365, x366, x367, x368, x369, x370, x371, x372,
                   x373, x374, x375, x376, x377, x378, x379, x380, x381, x382, Val(0)},
        Val22Array{x388, x389, x390, x391, x392, x393, x394, x395, x396, x397, x398,
                   x399, x400, x401, x402, x403, x404, x405, x406, x407, x408, Val(0)},
        x323,
        x322,
        x324,
        Val(2),
        Val(7),
        x325,
        x326,
        x327,
        LAYOUT_LOOKUP(x321, _super));
  }
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:341)
  RetTupleStruct x413 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x413;
}
RetTupleStruct execRhoMinor2_0__2_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<RhoMinor2_0__2_Layout> layout2) {
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:364)
  RetTupleStruct x3 = back_RetTuple(ctx, 3, arg1);
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:364)
  NondetRegStruct24Array x5 = x3.arrD;
  Val x6 = x5[15]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:368)
  ToBits_22_Struct x7 = exec_ToBits_22_(ctx, x6, LAYOUT_LOOKUP(layout2, unpackP1));
  NondetRegStruct22Array x8 = x7._super;
  Val x9 = x8[0]._super;
  Val x10 = x8[1]._super;
  Val x11 = x8[2]._super;
  Val x12 = x8[3]._super;
  Val x13 = x8[4]._super;
  Val x14 = x8[5]._super;
  Val x15 = x8[6]._super;
  Val x16 = x8[7]._super;
  Val x17 = x8[8]._super;
  Val x18 = x8[9]._super;
  Val x19 = x8[10]._super;
  Val x20 = x8[11]._super;
  Val x21 = x8[12]._super;
  Val x22 = x8[13]._super;
  Val x23 = x8[14]._super;
  Val x24 = x8[15]._super;
  Val x25 = x8[16]._super;
  Val x26 = x8[17]._super;
  Val x27 = x8[18]._super;
  Val x28 = x8[19]._super;
  Val x29 = x8[20]._super;
  Val x30 = x8[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:369)
  Val x31 = ((((((x9 + (x10 * Val(2))) + (x11 * Val(4))) + (x12 * Val(8))) + (x13 * Val(16))) +
              (x14 * Val(32))) +
             (x15 * Val(64)));
  Val x32 =
      ((((((x31 + (x16 * Val(128))) + (x17 * Val(256))) + (x18 * Val(512))) + (x19 * Val(1024))) +
        (x20 * Val(2048))) +
       (x21 * Val(4096)));
  Val x33 = ((((((x32 + (x22 * Val(8192))) + (x23 * Val(16384))) + (x24 * Val(32768))) +
               (x25 * Val(65536))) +
              (x26 * Val(131072))) +
             (x27 * Val(262144)));
  EQZ(((((x33 + (x28 * Val(524288))) + (x29 * Val(1048576))) + (x30 * Val(2097152))) - x6),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:369)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:364)
  Val x34 = x5[16]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:372)
  ToBits_21_Struct x35 = exec_ToBits_21_(ctx, x34, LAYOUT_LOOKUP(layout2, unpackP2));
  NondetRegStruct21Array x36 = x35._super;
  Val x37 = x36[0]._super;
  Val x38 = x36[1]._super;
  Val x39 = x36[2]._super;
  Val x40 = x36[3]._super;
  Val x41 = x36[4]._super;
  Val x42 = x36[5]._super;
  Val x43 = x36[6]._super;
  Val x44 = x36[7]._super;
  Val x45 = x36[8]._super;
  Val x46 = x36[9]._super;
  Val x47 = x36[10]._super;
  Val x48 = x36[11]._super;
  Val x49 = x36[12]._super;
  Val x50 = x36[13]._super;
  Val x51 = x36[14]._super;
  Val x52 = x36[15]._super;
  Val x53 = x36[16]._super;
  Val x54 = x36[17]._super;
  Val x55 = x36[18]._super;
  Val x56 = x36[19]._super;
  Val x57 = x36[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:373)
  Val x58 = ((((((x37 + (x38 * Val(2))) + (x39 * Val(4))) + (x40 * Val(8))) + (x41 * Val(16))) +
              (x42 * Val(32))) +
             (x43 * Val(64)));
  Val x59 =
      ((((((x58 + (x44 * Val(128))) + (x45 * Val(256))) + (x46 * Val(512))) + (x47 * Val(1024))) +
        (x48 * Val(2048))) +
       (x49 * Val(4096)));
  Val x60 = ((((((x59 + (x50 * Val(8192))) + (x51 * Val(16384))) + (x52 * Val(32768))) +
               (x53 * Val(65536))) +
              (x54 * Val(131072))) +
             (x55 * Val(262144)));
  EQZ((((x60 + (x56 * Val(524288))) + (x57 * Val(1048576))) - x34),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:373)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:364)
  Val x61 = x5[17]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:376)
  ToBits_21_Struct x62 = exec_ToBits_21_(ctx, x61, LAYOUT_LOOKUP(layout2, unpackP3));
  NondetRegStruct21Array x63 = x62._super;
  Val x64 = x63[0]._super;
  Val x65 = x63[1]._super;
  Val x66 = x63[2]._super;
  Val x67 = x63[3]._super;
  Val x68 = x63[4]._super;
  Val x69 = x63[5]._super;
  Val x70 = x63[6]._super;
  Val x71 = x63[7]._super;
  Val x72 = x63[8]._super;
  Val x73 = x63[9]._super;
  Val x74 = x63[10]._super;
  Val x75 = x63[11]._super;
  Val x76 = x63[12]._super;
  Val x77 = x63[13]._super;
  Val x78 = x63[14]._super;
  Val x79 = x63[15]._super;
  Val x80 = x63[16]._super;
  Val x81 = x63[17]._super;
  Val x82 = x63[18]._super;
  Val x83 = x63[19]._super;
  Val x84 = x63[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:377)
  Val x85 = ((((((x64 + (x65 * Val(2))) + (x66 * Val(4))) + (x67 * Val(8))) + (x68 * Val(16))) +
              (x69 * Val(32))) +
             (x70 * Val(64)));
  Val x86 =
      ((((((x85 + (x71 * Val(128))) + (x72 * Val(256))) + (x73 * Val(512))) + (x74 * Val(1024))) +
        (x75 * Val(2048))) +
       (x76 * Val(4096)));
  Val x87 = ((((((x86 + (x77 * Val(8192))) + (x78 * Val(16384))) + (x79 * Val(32768))) +
               (x80 * Val(65536))) +
              (x81 * Val(131072))) +
             (x82 * Val(262144)));
  EQZ((((x87 + (x83 * Val(524288))) + (x84 * Val(1048576))) - x61),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:377)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:364)
  NondetRegStruct22Array x88 = x3.arrB;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:383)
  Val x89 = x88[11]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:390)
  ToBits_22_Struct x90 = exec_ToBits_22_(ctx, x89, LAYOUT_LOOKUP(layout2, unpackXy1));
  NondetRegStruct22Array x91 = x90._super;
  Val x92 = x91[0]._super;
  Val x93 = x91[1]._super;
  Val x94 = x91[2]._super;
  Val x95 = x91[3]._super;
  Val x96 = x91[4]._super;
  Val x97 = x91[5]._super;
  Val x98 = x91[6]._super;
  Val x99 = x91[7]._super;
  Val x100 = x91[8]._super;
  Val x101 = x91[9]._super;
  Val x102 = x91[10]._super;
  Val x103 = x91[11]._super;
  Val x104 = x91[12]._super;
  Val x105 = x91[13]._super;
  Val x106 = x91[14]._super;
  Val x107 = x91[15]._super;
  Val x108 = x91[16]._super;
  Val x109 = x91[17]._super;
  Val x110 = x91[18]._super;
  Val x111 = x91[19]._super;
  Val x112 = x91[20]._super;
  Val x113 = x91[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:391)
  Val x114 = ((((((x92 + (x93 * Val(2))) + (x94 * Val(4))) + (x95 * Val(8))) + (x96 * Val(16))) +
               (x97 * Val(32))) +
              (x98 * Val(64)));
  Val x115 = ((((((x114 + (x99 * Val(128))) + (x100 * Val(256))) + (x101 * Val(512))) +
                (x102 * Val(1024))) +
               (x103 * Val(2048))) +
              (x104 * Val(4096)));
  Val x116 = ((((((x115 + (x105 * Val(8192))) + (x106 * Val(16384))) + (x107 * Val(32768))) +
                (x108 * Val(65536))) +
               (x109 * Val(131072))) +
              (x110 * Val(262144)));
  EQZ(((((x116 + (x111 * Val(524288))) + (x112 * Val(1048576))) + (x113 * Val(2097152))) - x89),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:391)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:395)
  Val x117 = x88[12]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:402)
  ToBits_21_Struct x118 = exec_ToBits_21_(ctx, x117, LAYOUT_LOOKUP(layout2, unpackXy2));
  NondetRegStruct21Array x119 = x118._super;
  Val x120 = x119[0]._super;
  Val x121 = x119[1]._super;
  Val x122 = x119[2]._super;
  Val x123 = x119[3]._super;
  Val x124 = x119[4]._super;
  Val x125 = x119[5]._super;
  Val x126 = x119[6]._super;
  Val x127 = x119[7]._super;
  Val x128 = x119[8]._super;
  Val x129 = x119[9]._super;
  Val x130 = x119[10]._super;
  Val x131 = x119[11]._super;
  Val x132 = x119[12]._super;
  Val x133 = x119[13]._super;
  Val x134 = x119[14]._super;
  Val x135 = x119[15]._super;
  Val x136 = x119[16]._super;
  Val x137 = x119[17]._super;
  Val x138 = x119[18]._super;
  Val x139 = x119[19]._super;
  Val x140 = x119[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:403)
  Val x141 =
      ((((((x120 + (x121 * Val(2))) + (x122 * Val(4))) + (x123 * Val(8))) + (x124 * Val(16))) +
        (x125 * Val(32))) +
       (x126 * Val(64)));
  Val x142 = ((((((x141 + (x127 * Val(128))) + (x128 * Val(256))) + (x129 * Val(512))) +
                (x130 * Val(1024))) +
               (x131 * Val(2048))) +
              (x132 * Val(4096)));
  Val x143 = ((((((x142 + (x133 * Val(8192))) + (x134 * Val(16384))) + (x135 * Val(32768))) +
                (x136 * Val(65536))) +
               (x137 * Val(131072))) +
              (x138 * Val(262144)));
  EQZ((((x143 + (x139 * Val(524288))) + (x140 * Val(1048576))) - x117),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:403)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:407)
  Val x144 = x88[13]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:414)
  ToBits_21_Struct x145 = exec_ToBits_21_(ctx, x144, LAYOUT_LOOKUP(layout2, unpackXy3));
  NondetRegStruct21Array x146 = x145._super;
  Val x147 = x146[0]._super;
  Val x148 = x146[1]._super;
  Val x149 = x146[2]._super;
  Val x150 = x146[3]._super;
  Val x151 = x146[4]._super;
  Val x152 = x146[5]._super;
  Val x153 = x146[6]._super;
  Val x154 = x146[7]._super;
  Val x155 = x146[8]._super;
  Val x156 = x146[9]._super;
  Val x157 = x146[10]._super;
  Val x158 = x146[11]._super;
  Val x159 = x146[12]._super;
  Val x160 = x146[13]._super;
  Val x161 = x146[14]._super;
  Val x162 = x146[15]._super;
  Val x163 = x146[16]._super;
  Val x164 = x146[17]._super;
  Val x165 = x146[18]._super;
  Val x166 = x146[19]._super;
  Val x167 = x146[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:415)
  Val x168 =
      ((((((x147 + (x148 * Val(2))) + (x149 * Val(4))) + (x150 * Val(8))) + (x151 * Val(16))) +
        (x152 * Val(32))) +
       (x153 * Val(64)));
  Val x169 = ((((((x168 + (x154 * Val(128))) + (x155 * Val(256))) + (x156 * Val(512))) +
                (x157 * Val(1024))) +
               (x158 * Val(2048))) +
              (x159 * Val(4096)));
  Val x170 = ((((((x169 + (x160 * Val(8192))) + (x161 * Val(16384))) + (x162 * Val(32768))) +
                (x163 * Val(65536))) +
               (x164 * Val(131072))) +
              (x165 * Val(262144)));
  EQZ((((x170 + (x166 * Val(524288))) + (x167 * Val(1048576))) - x144),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:415)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  NondetRegStruct22Array x171 = x4.arrA;
  Val x172 = x171[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x173 = ((x92 * x172) + ((Val(1) - x92) * (Val(1) - x172)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x174 = x171[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x175 = ((x93 * x174) + ((Val(1) - x93) * (Val(1) - x174)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x176 = x171[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x177 = ((x94 * x176) + ((Val(1) - x94) * (Val(1) - x176)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x178 = x171[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x179 = ((x95 * x178) + ((Val(1) - x95) * (Val(1) - x178)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x180 = x171[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x181 = ((x96 * x180) + ((Val(1) - x96) * (Val(1) - x180)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x182 = x171[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x183 = ((x97 * x182) + ((Val(1) - x97) * (Val(1) - x182)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x184 = x171[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x185 = ((x98 * x184) + ((Val(1) - x98) * (Val(1) - x184)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x186 = x171[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x187 = ((x99 * x186) + ((Val(1) - x99) * (Val(1) - x186)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x188 = x171[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x189 = ((x100 * x188) + ((Val(1) - x100) * (Val(1) - x188)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x190 = x171[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x191 = ((x101 * x190) + ((Val(1) - x101) * (Val(1) - x190)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x192 = x171[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x193 = ((x102 * x192) + ((Val(1) - x102) * (Val(1) - x192)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x194 = x171[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x195 = ((x103 * x194) + ((Val(1) - x103) * (Val(1) - x194)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x196 = x171[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x197 = ((x104 * x196) + ((Val(1) - x104) * (Val(1) - x196)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x198 = x171[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x199 = ((x105 * x198) + ((Val(1) - x105) * (Val(1) - x198)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x200 = x171[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x201 = ((x106 * x200) + ((Val(1) - x106) * (Val(1) - x200)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x202 = x171[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x203 = ((x107 * x202) + ((Val(1) - x107) * (Val(1) - x202)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x204 = x171[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x205 = ((x108 * x204) + ((Val(1) - x108) * (Val(1) - x204)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x206 = x171[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x207 = ((x109 * x206) + ((Val(1) - x109) * (Val(1) - x206)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x208 = x171[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x209 = ((x110 * x208) + ((Val(1) - x110) * (Val(1) - x208)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x210 = x171[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x211 = ((x111 * x210) + ((Val(1) - x111) * (Val(1) - x210)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x212 = x171[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x213 = ((x112 * x212) + ((Val(1) - x112) * (Val(1) - x212)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x214 = x171[21]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x215 = ((x113 * x214) + ((Val(1) - x113) * (Val(1) - x214)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  NondetRegStruct22Array x216 = x4.arrB;
  Val x217 = x216[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x218 = ((x120 * x217) + ((Val(1) - x120) * (Val(1) - x217)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x219 = x216[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x220 = ((x121 * x219) + ((Val(1) - x121) * (Val(1) - x219)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x221 = x216[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x222 = ((x122 * x221) + ((Val(1) - x122) * (Val(1) - x221)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x223 = x216[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x224 = ((x123 * x223) + ((Val(1) - x123) * (Val(1) - x223)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x225 = x216[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x226 = ((x124 * x225) + ((Val(1) - x124) * (Val(1) - x225)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x227 = x216[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x228 = ((x125 * x227) + ((Val(1) - x125) * (Val(1) - x227)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x229 = x216[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x230 = ((x126 * x229) + ((Val(1) - x126) * (Val(1) - x229)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x231 = x216[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x232 = ((x127 * x231) + ((Val(1) - x127) * (Val(1) - x231)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x233 = x216[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x234 = ((x128 * x233) + ((Val(1) - x128) * (Val(1) - x233)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x235 = x216[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x236 = ((x129 * x235) + ((Val(1) - x129) * (Val(1) - x235)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x237 = x216[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x238 = ((x130 * x237) + ((Val(1) - x130) * (Val(1) - x237)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x239 = x216[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x240 = ((x131 * x239) + ((Val(1) - x131) * (Val(1) - x239)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x241 = x216[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x242 = ((x132 * x241) + ((Val(1) - x132) * (Val(1) - x241)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x243 = x216[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x244 = ((x133 * x243) + ((Val(1) - x133) * (Val(1) - x243)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x245 = x216[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x246 = ((x134 * x245) + ((Val(1) - x134) * (Val(1) - x245)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x247 = x216[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x248 = ((x135 * x247) + ((Val(1) - x135) * (Val(1) - x247)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x249 = x216[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x250 = ((x136 * x249) + ((Val(1) - x136) * (Val(1) - x249)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x251 = x216[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x252 = ((x137 * x251) + ((Val(1) - x137) * (Val(1) - x251)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x253 = x216[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x254 = ((x138 * x253) + ((Val(1) - x138) * (Val(1) - x253)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x255 = x216[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x256 = ((x139 * x255) + ((Val(1) - x139) * (Val(1) - x255)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x257 = x216[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x258 = ((x140 * x257) + ((Val(1) - x140) * (Val(1) - x257)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  NondetRegStruct22Array x259 = x4.arrC;
  Val x260 = x259[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x261 = ((x147 * x260) + ((Val(1) - x147) * (Val(1) - x260)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x262 = x259[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x263 = ((x148 * x262) + ((Val(1) - x148) * (Val(1) - x262)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x264 = x259[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x265 = ((x149 * x264) + ((Val(1) - x149) * (Val(1) - x264)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x266 = x259[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x267 = ((x150 * x266) + ((Val(1) - x150) * (Val(1) - x266)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x268 = x259[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x269 = ((x151 * x268) + ((Val(1) - x151) * (Val(1) - x268)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x270 = x259[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x271 = ((x152 * x270) + ((Val(1) - x152) * (Val(1) - x270)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x272 = x259[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x273 = ((x153 * x272) + ((Val(1) - x153) * (Val(1) - x272)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x274 = x259[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x275 = ((x154 * x274) + ((Val(1) - x154) * (Val(1) - x274)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x276 = x259[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x277 = ((x155 * x276) + ((Val(1) - x155) * (Val(1) - x276)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x278 = x259[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x279 = ((x156 * x278) + ((Val(1) - x156) * (Val(1) - x278)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x280 = x259[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x281 = ((x157 * x280) + ((Val(1) - x157) * (Val(1) - x280)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x282 = x259[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x283 = ((x158 * x282) + ((Val(1) - x158) * (Val(1) - x282)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x284 = x259[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x285 = ((x159 * x284) + ((Val(1) - x159) * (Val(1) - x284)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x286 = x259[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x287 = ((x160 * x286) + ((Val(1) - x160) * (Val(1) - x286)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x288 = x259[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x289 = ((x161 * x288) + ((Val(1) - x161) * (Val(1) - x288)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x290 = x259[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x291 = ((x162 * x290) + ((Val(1) - x162) * (Val(1) - x290)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x292 = x259[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x293 = ((x163 * x292) + ((Val(1) - x163) * (Val(1) - x292)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x294 = x259[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x295 = ((x164 * x294) + ((Val(1) - x164) * (Val(1) - x294)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x296 = x259[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x297 = ((x165 * x296) + ((Val(1) - x165) * (Val(1) - x296)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x298 = x259[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x299 = ((x166 * x298) + ((Val(1) - x166) * (Val(1) - x298)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x300 = x259[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x301 = ((x167 * x300) + ((Val(1) - x167) * (Val(1) - x300)));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:422)
  Val x302 = (((x283 * x74) + ((Val(1) - x283) * (Val(1) - x74))) +
              (((x285 * x75) + ((Val(1) - x285) * (Val(1) - x75))) * Val(2)));
  Val x303 = ((x302 + (((x287 * x76) + ((Val(1) - x287) * (Val(1) - x76))) * Val(4))) +
              (((x289 * x77) + ((Val(1) - x289) * (Val(1) - x77))) * Val(8)));
  Val x304 = ((x303 + (((x291 * x78) + ((Val(1) - x291) * (Val(1) - x78))) * Val(16))) +
              (((x293 * x79) + ((Val(1) - x293) * (Val(1) - x79))) * Val(32)));
  Val x305 = ((x304 + (((x295 * x80) + ((Val(1) - x295) * (Val(1) - x80))) * Val(64))) +
              (((x297 * x81) + ((Val(1) - x297) * (Val(1) - x81))) * Val(128)));
  Val x306 = ((x305 + (((x299 * x82) + ((Val(1) - x299) * (Val(1) - x82))) * Val(256))) +
              (((x301 * x83) + ((Val(1) - x301) * (Val(1) - x83))) * Val(512)));
  Val x307 = ((x306 + (((x173 * x84) + ((Val(1) - x173) * (Val(1) - x84))) * Val(1024))) +
              (((x175 * x9) + ((Val(1) - x175) * (Val(1) - x9))) * Val(2048)));
  Val x308 = ((x307 + (((x177 * x10) + ((Val(1) - x177) * (Val(1) - x10))) * Val(4096))) +
              (((x179 * x11) + ((Val(1) - x179) * (Val(1) - x11))) * Val(8192)));
  Val x309 = ((x308 + (((x181 * x12) + ((Val(1) - x181) * (Val(1) - x12))) * Val(16384))) +
              (((x183 * x13) + ((Val(1) - x183) * (Val(1) - x13))) * Val(32768)));
  Val x310 = ((x309 + (((x185 * x14) + ((Val(1) - x185) * (Val(1) - x14))) * Val(65536))) +
              (((x187 * x15) + ((Val(1) - x187) * (Val(1) - x15))) * Val(131072)));
  Val x311 = ((x310 + (((x189 * x16) + ((Val(1) - x189) * (Val(1) - x16))) * Val(262144))) +
              (((x191 * x17) + ((Val(1) - x191) * (Val(1) - x17))) * Val(524288)));
  Val x312 = ((x311 + (((x193 * x18) + ((Val(1) - x193) * (Val(1) - x18))) * Val(1048576))) +
              (((x195 * x19) + ((Val(1) - x195) * (Val(1) - x19))) * Val(2097152)));
  NondetRegStruct x313 = exec_Reg(ctx, x312, LAYOUT_LOOKUP(layout2, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:423)
  Val x314 = (((x197 * x20) + ((Val(1) - x197) * (Val(1) - x20))) +
              (((x199 * x21) + ((Val(1) - x199) * (Val(1) - x21))) * Val(2)));
  Val x315 = ((x314 + (((x201 * x22) + ((Val(1) - x201) * (Val(1) - x22))) * Val(4))) +
              (((x203 * x23) + ((Val(1) - x203) * (Val(1) - x23))) * Val(8)));
  Val x316 = ((x315 + (((x205 * x24) + ((Val(1) - x205) * (Val(1) - x24))) * Val(16))) +
              (((x207 * x25) + ((Val(1) - x207) * (Val(1) - x25))) * Val(32)));
  Val x317 = ((x316 + (((x209 * x26) + ((Val(1) - x209) * (Val(1) - x26))) * Val(64))) +
              (((x211 * x27) + ((Val(1) - x211) * (Val(1) - x27))) * Val(128)));
  Val x318 = ((x317 + (((x213 * x28) + ((Val(1) - x213) * (Val(1) - x28))) * Val(256))) +
              (((x215 * x29) + ((Val(1) - x215) * (Val(1) - x29))) * Val(512)));
  Val x319 = ((x318 + (((x218 * x30) + ((Val(1) - x218) * (Val(1) - x30))) * Val(1024))) +
              (((x220 * x37) + ((Val(1) - x220) * (Val(1) - x37))) * Val(2048)));
  Val x320 = ((x319 + (((x222 * x38) + ((Val(1) - x222) * (Val(1) - x38))) * Val(4096))) +
              (((x224 * x39) + ((Val(1) - x224) * (Val(1) - x39))) * Val(8192)));
  Val x321 = ((x320 + (((x226 * x40) + ((Val(1) - x226) * (Val(1) - x40))) * Val(16384))) +
              (((x228 * x41) + ((Val(1) - x228) * (Val(1) - x41))) * Val(32768)));
  Val x322 = ((x321 + (((x230 * x42) + ((Val(1) - x230) * (Val(1) - x42))) * Val(65536))) +
              (((x232 * x43) + ((Val(1) - x232) * (Val(1) - x43))) * Val(131072)));
  Val x323 = ((x322 + (((x234 * x44) + ((Val(1) - x234) * (Val(1) - x44))) * Val(262144))) +
              (((x236 * x45) + ((Val(1) - x236) * (Val(1) - x45))) * Val(524288)));
  NondetRegStruct x324 =
      exec_Reg(ctx,
               (x323 + (((x238 * x46) + ((Val(1) - x238) * (Val(1) - x46))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _1));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:424)
  Val x325 = (((x240 * x47) + ((Val(1) - x240) * (Val(1) - x47))) +
              (((x242 * x48) + ((Val(1) - x242) * (Val(1) - x48))) * Val(2)));
  Val x326 = ((x325 + (((x244 * x49) + ((Val(1) - x244) * (Val(1) - x49))) * Val(4))) +
              (((x246 * x50) + ((Val(1) - x246) * (Val(1) - x50))) * Val(8)));
  Val x327 = ((x326 + (((x248 * x51) + ((Val(1) - x248) * (Val(1) - x51))) * Val(16))) +
              (((x250 * x52) + ((Val(1) - x250) * (Val(1) - x52))) * Val(32)));
  Val x328 = ((x327 + (((x252 * x53) + ((Val(1) - x252) * (Val(1) - x53))) * Val(64))) +
              (((x254 * x54) + ((Val(1) - x254) * (Val(1) - x54))) * Val(128)));
  Val x329 = ((x328 + (((x256 * x55) + ((Val(1) - x256) * (Val(1) - x55))) * Val(256))) +
              (((x258 * x56) + ((Val(1) - x258) * (Val(1) - x56))) * Val(512)));
  Val x330 = ((x329 + (((x261 * x57) + ((Val(1) - x261) * (Val(1) - x57))) * Val(1024))) +
              (((x263 * x64) + ((Val(1) - x263) * (Val(1) - x64))) * Val(2048)));
  Val x331 = ((x330 + (((x265 * x65) + ((Val(1) - x265) * (Val(1) - x65))) * Val(4096))) +
              (((x267 * x66) + ((Val(1) - x267) * (Val(1) - x66))) * Val(8192)));
  Val x332 = ((x331 + (((x269 * x67) + ((Val(1) - x269) * (Val(1) - x67))) * Val(16384))) +
              (((x271 * x68) + ((Val(1) - x271) * (Val(1) - x68))) * Val(32768)));
  Val x333 = ((x332 + (((x273 * x69) + ((Val(1) - x273) * (Val(1) - x69))) * Val(65536))) +
              (((x275 * x70) + ((Val(1) - x275) * (Val(1) - x70))) * Val(131072)));
  Val x334 = ((x333 + (((x277 * x71) + ((Val(1) - x277) * (Val(1) - x71))) * Val(262144))) +
              (((x279 * x72) + ((Val(1) - x279) * (Val(1) - x72))) * Val(524288)));
  NondetRegStruct x335 =
      exec_Reg(ctx,
               (x334 + (((x281 * x73) + ((Val(1) - x281) * (Val(1) - x73))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _2));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:427)
  Val22Array x336 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x337 = exec_RetTuple(
      ctx,
      x336,
      x336,
      x336,
      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
      x336,
      Val22Array{x313._super, x324._super, x335._super, Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0)},
      Val(3),
      Val(7),
      x4.rnd._super,
      x4.blk._super,
      x4.midx._super,
      LAYOUT_LOOKUP(layout2, _super));
  return x337;
}
RetTupleStruct execRhoMinor0_2__2_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<RhoMinor0_2__2_Layout> layout2) {
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  RetTupleStruct x3 = back_RetTuple(ctx, 4, arg1);
  NondetRegStruct24Array x4 = x3.arrD;
  Val x5 = x4[12]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:257)
  ToBits_22_Struct x6 = exec_ToBits_22_(ctx, x5, LAYOUT_LOOKUP(layout2, unpackM1));
  NondetRegStruct22Array x7 = x6._super;
  Val x8 = x7[0]._super;
  Val x9 = x7[1]._super;
  Val x10 = x7[2]._super;
  Val x11 = x7[3]._super;
  Val x12 = x7[4]._super;
  Val x13 = x7[5]._super;
  Val x14 = x7[6]._super;
  Val x15 = x7[7]._super;
  Val x16 = x7[8]._super;
  Val x17 = x7[9]._super;
  Val x18 = x7[10]._super;
  Val x19 = x7[11]._super;
  Val x20 = x7[12]._super;
  Val x21 = x7[13]._super;
  Val x22 = x7[14]._super;
  Val x23 = x7[15]._super;
  Val x24 = x7[16]._super;
  Val x25 = x7[17]._super;
  Val x26 = x7[18]._super;
  Val x27 = x7[19]._super;
  Val x28 = x7[20]._super;
  Val x29 = x7[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:258)
  Val x30 = ((((((x8 + (x9 * Val(2))) + (x10 * Val(4))) + (x11 * Val(8))) + (x12 * Val(16))) +
              (x13 * Val(32))) +
             (x14 * Val(64)));
  Val x31 =
      ((((((x30 + (x15 * Val(128))) + (x16 * Val(256))) + (x17 * Val(512))) + (x18 * Val(1024))) +
        (x19 * Val(2048))) +
       (x20 * Val(4096)));
  Val x32 = ((((((x31 + (x21 * Val(8192))) + (x22 * Val(16384))) + (x23 * Val(32768))) +
               (x24 * Val(65536))) +
              (x25 * Val(131072))) +
             (x26 * Val(262144)));
  EQZ(((((x32 + (x27 * Val(524288))) + (x28 * Val(1048576))) + (x29 * Val(2097152))) - x5),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:258)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x33 = x4[13]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:261)
  ToBits_21_Struct x34 = exec_ToBits_21_(ctx, x33, LAYOUT_LOOKUP(layout2, unpackM2));
  NondetRegStruct21Array x35 = x34._super;
  Val x36 = x35[0]._super;
  Val x37 = x35[1]._super;
  Val x38 = x35[2]._super;
  Val x39 = x35[3]._super;
  Val x40 = x35[4]._super;
  Val x41 = x35[5]._super;
  Val x42 = x35[6]._super;
  Val x43 = x35[7]._super;
  Val x44 = x35[8]._super;
  Val x45 = x35[9]._super;
  Val x46 = x35[10]._super;
  Val x47 = x35[11]._super;
  Val x48 = x35[12]._super;
  Val x49 = x35[13]._super;
  Val x50 = x35[14]._super;
  Val x51 = x35[15]._super;
  Val x52 = x35[16]._super;
  Val x53 = x35[17]._super;
  Val x54 = x35[18]._super;
  Val x55 = x35[19]._super;
  Val x56 = x35[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:262)
  Val x57 = ((((((x36 + (x37 * Val(2))) + (x38 * Val(4))) + (x39 * Val(8))) + (x40 * Val(16))) +
              (x41 * Val(32))) +
             (x42 * Val(64)));
  Val x58 =
      ((((((x57 + (x43 * Val(128))) + (x44 * Val(256))) + (x45 * Val(512))) + (x46 * Val(1024))) +
        (x47 * Val(2048))) +
       (x48 * Val(4096)));
  Val x59 = ((((((x58 + (x49 * Val(8192))) + (x50 * Val(16384))) + (x51 * Val(32768))) +
               (x52 * Val(65536))) +
              (x53 * Val(131072))) +
             (x54 * Val(262144)));
  EQZ((((x59 + (x55 * Val(524288))) + (x56 * Val(1048576))) - x33),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:262)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x60 = x4[14]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:266)
  ToBits_21_Struct x61 = exec_ToBits_21_(ctx, x60, LAYOUT_LOOKUP(layout2, unpackM3));
  NondetRegStruct21Array x62 = x61._super;
  Val x63 = x62[0]._super;
  Val x64 = x62[1]._super;
  Val x65 = x62[2]._super;
  Val x66 = x62[3]._super;
  Val x67 = x62[4]._super;
  Val x68 = x62[5]._super;
  Val x69 = x62[6]._super;
  Val x70 = x62[7]._super;
  Val x71 = x62[8]._super;
  Val x72 = x62[9]._super;
  Val x73 = x62[10]._super;
  Val x74 = x62[11]._super;
  Val x75 = x62[12]._super;
  Val x76 = x62[13]._super;
  Val x77 = x62[14]._super;
  Val x78 = x62[15]._super;
  Val x79 = x62[16]._super;
  Val x80 = x62[17]._super;
  Val x81 = x62[18]._super;
  Val x82 = x62[19]._super;
  Val x83 = x62[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:267)
  Val x84 = ((((((x63 + (x64 * Val(2))) + (x65 * Val(4))) + (x66 * Val(8))) + (x67 * Val(16))) +
              (x68 * Val(32))) +
             (x69 * Val(64)));
  Val x85 =
      ((((((x84 + (x70 * Val(128))) + (x71 * Val(256))) + (x72 * Val(512))) + (x73 * Val(1024))) +
        (x74 * Val(2048))) +
       (x75 * Val(4096)));
  Val x86 = ((((((x85 + (x76 * Val(8192))) + (x77 * Val(16384))) + (x78 * Val(32768))) +
               (x79 * Val(65536))) +
              (x80 * Val(131072))) +
             (x81 * Val(262144)));
  EQZ((((x86 + (x82 * Val(524288))) + (x83 * Val(1048576))) - x60),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:267)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x87 = x4[18]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:271)
  ToBits_22_Struct x88 = exec_ToBits_22_(ctx, x87, LAYOUT_LOOKUP(layout2, unpackP1));
  NondetRegStruct22Array x89 = x88._super;
  Val x90 = x89[0]._super;
  Val x91 = x89[1]._super;
  Val x92 = x89[2]._super;
  Val x93 = x89[3]._super;
  Val x94 = x89[4]._super;
  Val x95 = x89[5]._super;
  Val x96 = x89[6]._super;
  Val x97 = x89[7]._super;
  Val x98 = x89[8]._super;
  Val x99 = x89[9]._super;
  Val x100 = x89[10]._super;
  Val x101 = x89[11]._super;
  Val x102 = x89[12]._super;
  Val x103 = x89[13]._super;
  Val x104 = x89[14]._super;
  Val x105 = x89[15]._super;
  Val x106 = x89[16]._super;
  Val x107 = x89[17]._super;
  Val x108 = x89[18]._super;
  Val x109 = x89[19]._super;
  Val x110 = x89[20]._super;
  Val x111 = x89[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:272)
  Val x112 = ((((((x90 + (x91 * Val(2))) + (x92 * Val(4))) + (x93 * Val(8))) + (x94 * Val(16))) +
               (x95 * Val(32))) +
              (x96 * Val(64)));
  Val x113 =
      ((((((x112 + (x97 * Val(128))) + (x98 * Val(256))) + (x99 * Val(512))) + (x100 * Val(1024))) +
        (x101 * Val(2048))) +
       (x102 * Val(4096)));
  Val x114 = ((((((x113 + (x103 * Val(8192))) + (x104 * Val(16384))) + (x105 * Val(32768))) +
                (x106 * Val(65536))) +
               (x107 * Val(131072))) +
              (x108 * Val(262144)));
  EQZ(((((x114 + (x109 * Val(524288))) + (x110 * Val(1048576))) + (x111 * Val(2097152))) - x87),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:272)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x115 = x4[19]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:275)
  ToBits_21_Struct x116 = exec_ToBits_21_(ctx, x115, LAYOUT_LOOKUP(layout2, unpackP2));
  NondetRegStruct21Array x117 = x116._super;
  Val x118 = x117[0]._super;
  Val x119 = x117[1]._super;
  Val x120 = x117[2]._super;
  Val x121 = x117[3]._super;
  Val x122 = x117[4]._super;
  Val x123 = x117[5]._super;
  Val x124 = x117[6]._super;
  Val x125 = x117[7]._super;
  Val x126 = x117[8]._super;
  Val x127 = x117[9]._super;
  Val x128 = x117[10]._super;
  Val x129 = x117[11]._super;
  Val x130 = x117[12]._super;
  Val x131 = x117[13]._super;
  Val x132 = x117[14]._super;
  Val x133 = x117[15]._super;
  Val x134 = x117[16]._super;
  Val x135 = x117[17]._super;
  Val x136 = x117[18]._super;
  Val x137 = x117[19]._super;
  Val x138 = x117[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:276)
  Val x139 =
      ((((((x118 + (x119 * Val(2))) + (x120 * Val(4))) + (x121 * Val(8))) + (x122 * Val(16))) +
        (x123 * Val(32))) +
       (x124 * Val(64)));
  Val x140 = ((((((x139 + (x125 * Val(128))) + (x126 * Val(256))) + (x127 * Val(512))) +
                (x128 * Val(1024))) +
               (x129 * Val(2048))) +
              (x130 * Val(4096)));
  Val x141 = ((((((x140 + (x131 * Val(8192))) + (x132 * Val(16384))) + (x133 * Val(32768))) +
                (x134 * Val(65536))) +
               (x135 * Val(131072))) +
              (x136 * Val(262144)));
  EQZ((((x141 + (x137 * Val(524288))) + (x138 * Val(1048576))) - x115),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:276)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x142 = x4[20]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:279)
  ToBits_21_Struct x143 = exec_ToBits_21_(ctx, x142, LAYOUT_LOOKUP(layout2, unpackP3));
  NondetRegStruct21Array x144 = x143._super;
  Val x145 = x144[0]._super;
  Val x146 = x144[1]._super;
  Val x147 = x144[2]._super;
  Val x148 = x144[3]._super;
  Val x149 = x144[4]._super;
  Val x150 = x144[5]._super;
  Val x151 = x144[6]._super;
  Val x152 = x144[7]._super;
  Val x153 = x144[8]._super;
  Val x154 = x144[9]._super;
  Val x155 = x144[10]._super;
  Val x156 = x144[11]._super;
  Val x157 = x144[12]._super;
  Val x158 = x144[13]._super;
  Val x159 = x144[14]._super;
  Val x160 = x144[15]._super;
  Val x161 = x144[16]._super;
  Val x162 = x144[17]._super;
  Val x163 = x144[18]._super;
  Val x164 = x144[19]._super;
  Val x165 = x144[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:280)
  Val x166 =
      ((((((x145 + (x146 * Val(2))) + (x147 * Val(4))) + (x148 * Val(8))) + (x149 * Val(16))) +
        (x150 * Val(32))) +
       (x151 * Val(64)));
  Val x167 = ((((((x166 + (x152 * Val(128))) + (x153 * Val(256))) + (x154 * Val(512))) +
                (x155 * Val(1024))) +
               (x156 * Val(2048))) +
              (x157 * Val(4096)));
  Val x168 = ((((((x167 + (x158 * Val(8192))) + (x159 * Val(16384))) + (x160 * Val(32768))) +
                (x161 * Val(65536))) +
               (x162 * Val(131072))) +
              (x163 * Val(262144)));
  EQZ((((x168 + (x164 * Val(524288))) + (x165 * Val(1048576))) - x142),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:280)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:287)
  RetTupleStruct x169 =
      exec_RetTuple(ctx,
                    Val22Array{x165, x90,  x91,  x92,  x93,  x94,  x95,  x96,  x97,  x98,  x99,
                               x100, x101, x102, x103, x104, x105, x106, x107, x108, x109, x110},
                    Val22Array{x111, x118, x119, x120, x121, x122, x123, x124, x125, x126, x127,
                               x128, x129, x130, x131, x132, x133, x134, x135, x136, x137, Val(0)},
                    Val22Array{x138, x145, x146, x147, x148, x149, x150, x151, x152, x153, x154,
                               x155, x156, x157, x158, x159, x160, x161, x162, x163, x164, Val(0)},
                    Val24Array{x8,  x9,  x10, x11, x12, x13, x14, x15, x16, x17, x18,    x19,
                               x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, Val(0), Val(0)},
                    Val22Array{x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46,
                               x47, x48, x49, x50, x51, x52, x53, x54, x55, x56, Val(0)},
                    Val22Array{x63, x64, x65, x66, x67, x68, x69, x70, x71, x72, x73,
                               x74, x75, x76, x77, x78, x79, x80, x81, x82, x83, Val(0)},
                    Val(4),
                    Val(7),
                    x3.rnd._super,
                    x3.blk._super,
                    x3.midx._super,
                    LAYOUT_LOOKUP(layout2, _super));
  return x169;
}
RetTupleStruct execRhoMinor1_2__2_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<RhoMinor1_2__2_Layout> layout2) {
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:341)
  BoundLayout<RhoMinor1_2__2__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:292)
  RetTupleStruct x4 = back_RetTuple(ctx, 5, arg1);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  RetTupleStruct x5 = back_RetTuple(ctx, 1, arg1);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:292)
  NondetRegStruct22Array x6 = x4.arrB;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:297)
  Val x7 = x6[14]._super;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:304)
  ToBits_22_Struct x8 = exec_ToBits_22_(ctx, x7, LAYOUT_LOOKUP(layout2, unpackXy1));
  NondetRegStruct22Array x9 = x8._super;
  Val x10 = x9[0]._super;
  Val x11 = x9[1]._super;
  Val x12 = x9[2]._super;
  Val x13 = x9[3]._super;
  Val x14 = x9[4]._super;
  Val x15 = x9[5]._super;
  Val x16 = x9[6]._super;
  Val x17 = x9[7]._super;
  Val x18 = x9[8]._super;
  Val x19 = x9[9]._super;
  Val x20 = x9[10]._super;
  Val x21 = x9[11]._super;
  Val x22 = x9[12]._super;
  Val x23 = x9[13]._super;
  Val x24 = x9[14]._super;
  Val x25 = x9[15]._super;
  Val x26 = x9[16]._super;
  Val x27 = x9[17]._super;
  Val x28 = x9[18]._super;
  Val x29 = x9[19]._super;
  Val x30 = x9[20]._super;
  Val x31 = x9[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:305)
  Val x32 = ((((((x10 + (x11 * Val(2))) + (x12 * Val(4))) + (x13 * Val(8))) + (x14 * Val(16))) +
              (x15 * Val(32))) +
             (x16 * Val(64)));
  Val x33 =
      ((((((x32 + (x17 * Val(128))) + (x18 * Val(256))) + (x19 * Val(512))) + (x20 * Val(1024))) +
        (x21 * Val(2048))) +
       (x22 * Val(4096)));
  Val x34 = ((((((x33 + (x23 * Val(8192))) + (x24 * Val(16384))) + (x25 * Val(32768))) +
               (x26 * Val(65536))) +
              (x27 * Val(131072))) +
             (x28 * Val(262144)));
  EQZ(((((x34 + (x29 * Val(524288))) + (x30 * Val(1048576))) + (x31 * Val(2097152))) - x7),
      "rho_minor1(zirgen/circuit/keccak/keccak.zir:305)");
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:309)
  Val x35 = x6[15]._super;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:316)
  ToBits_21_Struct x36 = exec_ToBits_21_(ctx, x35, LAYOUT_LOOKUP(layout2, unpackXy2));
  NondetRegStruct21Array x37 = x36._super;
  Val x38 = x37[0]._super;
  Val x39 = x37[1]._super;
  Val x40 = x37[2]._super;
  Val x41 = x37[3]._super;
  Val x42 = x37[4]._super;
  Val x43 = x37[5]._super;
  Val x44 = x37[6]._super;
  Val x45 = x37[7]._super;
  Val x46 = x37[8]._super;
  Val x47 = x37[9]._super;
  Val x48 = x37[10]._super;
  Val x49 = x37[11]._super;
  Val x50 = x37[12]._super;
  Val x51 = x37[13]._super;
  Val x52 = x37[14]._super;
  Val x53 = x37[15]._super;
  Val x54 = x37[16]._super;
  Val x55 = x37[17]._super;
  Val x56 = x37[18]._super;
  Val x57 = x37[19]._super;
  Val x58 = x37[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:317)
  Val x59 = ((((((x38 + (x39 * Val(2))) + (x40 * Val(4))) + (x41 * Val(8))) + (x42 * Val(16))) +
              (x43 * Val(32))) +
             (x44 * Val(64)));
  Val x60 =
      ((((((x59 + (x45 * Val(128))) + (x46 * Val(256))) + (x47 * Val(512))) + (x48 * Val(1024))) +
        (x49 * Val(2048))) +
       (x50 * Val(4096)));
  Val x61 = ((((((x60 + (x51 * Val(8192))) + (x52 * Val(16384))) + (x53 * Val(32768))) +
               (x54 * Val(65536))) +
              (x55 * Val(131072))) +
             (x56 * Val(262144)));
  EQZ((((x61 + (x57 * Val(524288))) + (x58 * Val(1048576))) - x35),
      "rho_minor1(zirgen/circuit/keccak/keccak.zir:317)");
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:321)
  Val x62 = x6[16]._super;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:328)
  ToBits_21_Struct x63 = exec_ToBits_21_(ctx, x62, LAYOUT_LOOKUP(layout2, unpackXy3));
  NondetRegStruct21Array x64 = x63._super;
  Val x65 = x64[0]._super;
  Val x66 = x64[1]._super;
  Val x67 = x64[2]._super;
  Val x68 = x64[3]._super;
  Val x69 = x64[4]._super;
  Val x70 = x64[5]._super;
  Val x71 = x64[6]._super;
  Val x72 = x64[7]._super;
  Val x73 = x64[8]._super;
  Val x74 = x64[9]._super;
  Val x75 = x64[10]._super;
  Val x76 = x64[11]._super;
  Val x77 = x64[12]._super;
  Val x78 = x64[13]._super;
  Val x79 = x64[14]._super;
  Val x80 = x64[15]._super;
  Val x81 = x64[16]._super;
  Val x82 = x64[17]._super;
  Val x83 = x64[18]._super;
  Val x84 = x64[19]._super;
  Val x85 = x64[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:329)
  Val x86 = ((((((x65 + (x66 * Val(2))) + (x67 * Val(4))) + (x68 * Val(8))) + (x69 * Val(16))) +
              (x70 * Val(32))) +
             (x71 * Val(64)));
  Val x87 =
      ((((((x86 + (x72 * Val(128))) + (x73 * Val(256))) + (x74 * Val(512))) + (x75 * Val(1024))) +
        (x76 * Val(2048))) +
       (x77 * Val(4096)));
  Val x88 = ((((((x87 + (x78 * Val(8192))) + (x79 * Val(16384))) + (x80 * Val(32768))) +
               (x81 * Val(65536))) +
              (x82 * Val(131072))) +
             (x83 * Val(262144)));
  EQZ((((x88 + (x84 * Val(524288))) + (x85 * Val(1048576))) - x62),
      "rho_minor1(zirgen/circuit/keccak/keccak.zir:329)");
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  NondetRegStruct22Array x89 = x5.arrA;
  NondetRegStruct24Array x90 = x5.arrD;
  Val x91 = x89[0]._super;
  Val x92 = x90[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x93 = ((x10 * x91) + ((Val(1) - x10) * (Val(1) - x91)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x94 = x89[1]._super;
  Val x95 = x90[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x96 = ((x11 * x94) + ((Val(1) - x11) * (Val(1) - x94)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x97 = x89[2]._super;
  Val x98 = x90[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x99 = ((x12 * x97) + ((Val(1) - x12) * (Val(1) - x97)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x100 = x89[3]._super;
  Val x101 = x90[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x102 = ((x13 * x100) + ((Val(1) - x13) * (Val(1) - x100)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x103 = x89[4]._super;
  Val x104 = x90[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x105 = ((x14 * x103) + ((Val(1) - x14) * (Val(1) - x103)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x106 = x89[5]._super;
  Val x107 = x90[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x108 = ((x15 * x106) + ((Val(1) - x15) * (Val(1) - x106)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x109 = x89[6]._super;
  Val x110 = x90[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x111 = ((x16 * x109) + ((Val(1) - x16) * (Val(1) - x109)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x112 = x89[7]._super;
  Val x113 = x90[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x114 = ((x17 * x112) + ((Val(1) - x17) * (Val(1) - x112)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x115 = x89[8]._super;
  Val x116 = x90[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x117 = ((x18 * x115) + ((Val(1) - x18) * (Val(1) - x115)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x118 = x89[9]._super;
  Val x119 = x90[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x120 = ((x19 * x118) + ((Val(1) - x19) * (Val(1) - x118)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x121 = x89[10]._super;
  Val x122 = x90[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x123 = ((x20 * x121) + ((Val(1) - x20) * (Val(1) - x121)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x124 = x89[11]._super;
  Val x125 = x90[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x126 = ((x21 * x124) + ((Val(1) - x21) * (Val(1) - x124)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x127 = x89[12]._super;
  Val x128 = x90[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x129 = ((x22 * x127) + ((Val(1) - x22) * (Val(1) - x127)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x130 = x89[13]._super;
  Val x131 = x90[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x132 = ((x23 * x130) + ((Val(1) - x23) * (Val(1) - x130)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x133 = x89[14]._super;
  Val x134 = x90[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x135 = ((x24 * x133) + ((Val(1) - x24) * (Val(1) - x133)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x136 = x89[15]._super;
  Val x137 = x90[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x138 = ((x25 * x136) + ((Val(1) - x25) * (Val(1) - x136)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x139 = x89[16]._super;
  Val x140 = x90[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x141 = ((x26 * x139) + ((Val(1) - x26) * (Val(1) - x139)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x142 = x89[17]._super;
  Val x143 = x90[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x144 = ((x27 * x142) + ((Val(1) - x27) * (Val(1) - x142)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x145 = x89[18]._super;
  Val x146 = x90[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x147 = ((x28 * x145) + ((Val(1) - x28) * (Val(1) - x145)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x148 = x89[19]._super;
  Val x149 = x90[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x150 = ((x29 * x148) + ((Val(1) - x29) * (Val(1) - x148)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x151 = x89[20]._super;
  Val x152 = x90[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x153 = ((x30 * x151) + ((Val(1) - x30) * (Val(1) - x151)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x154 = x89[21]._super;
  Val x155 = x90[21]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x156 = ((x31 * x154) + ((Val(1) - x31) * (Val(1) - x154)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  NondetRegStruct22Array x157 = x5.arrB;
  NondetRegStruct22Array x158 = x5.arrE;
  Val x159 = x157[0]._super;
  Val x160 = x158[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x161 = ((x38 * x159) + ((Val(1) - x38) * (Val(1) - x159)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x162 = x157[1]._super;
  Val x163 = x158[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x164 = ((x39 * x162) + ((Val(1) - x39) * (Val(1) - x162)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x165 = x157[2]._super;
  Val x166 = x158[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x167 = ((x40 * x165) + ((Val(1) - x40) * (Val(1) - x165)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x168 = x157[3]._super;
  Val x169 = x158[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x170 = ((x41 * x168) + ((Val(1) - x41) * (Val(1) - x168)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x171 = x157[4]._super;
  Val x172 = x158[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x173 = ((x42 * x171) + ((Val(1) - x42) * (Val(1) - x171)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x174 = x157[5]._super;
  Val x175 = x158[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x176 = ((x43 * x174) + ((Val(1) - x43) * (Val(1) - x174)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x177 = x157[6]._super;
  Val x178 = x158[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x179 = ((x44 * x177) + ((Val(1) - x44) * (Val(1) - x177)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x180 = x157[7]._super;
  Val x181 = x158[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x182 = ((x45 * x180) + ((Val(1) - x45) * (Val(1) - x180)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x183 = x157[8]._super;
  Val x184 = x158[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x185 = ((x46 * x183) + ((Val(1) - x46) * (Val(1) - x183)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x186 = x157[9]._super;
  Val x187 = x158[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x188 = ((x47 * x186) + ((Val(1) - x47) * (Val(1) - x186)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x189 = x157[10]._super;
  Val x190 = x158[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x191 = ((x48 * x189) + ((Val(1) - x48) * (Val(1) - x189)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x192 = x157[11]._super;
  Val x193 = x158[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x194 = ((x49 * x192) + ((Val(1) - x49) * (Val(1) - x192)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x195 = x157[12]._super;
  Val x196 = x158[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x197 = ((x50 * x195) + ((Val(1) - x50) * (Val(1) - x195)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x198 = x157[13]._super;
  Val x199 = x158[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x200 = ((x51 * x198) + ((Val(1) - x51) * (Val(1) - x198)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x201 = x157[14]._super;
  Val x202 = x158[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x203 = ((x52 * x201) + ((Val(1) - x52) * (Val(1) - x201)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x204 = x157[15]._super;
  Val x205 = x158[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x206 = ((x53 * x204) + ((Val(1) - x53) * (Val(1) - x204)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x207 = x157[16]._super;
  Val x208 = x158[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x209 = ((x54 * x207) + ((Val(1) - x54) * (Val(1) - x207)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x210 = x157[17]._super;
  Val x211 = x158[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x212 = ((x55 * x210) + ((Val(1) - x55) * (Val(1) - x210)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x213 = x157[18]._super;
  Val x214 = x158[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x215 = ((x56 * x213) + ((Val(1) - x56) * (Val(1) - x213)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x216 = x157[19]._super;
  Val x217 = x158[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x218 = ((x57 * x216) + ((Val(1) - x57) * (Val(1) - x216)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x219 = x157[20]._super;
  Val x220 = x158[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x221 = ((x58 * x219) + ((Val(1) - x58) * (Val(1) - x219)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  NondetRegStruct22Array x222 = x5.arrC;
  NondetRegStruct22Array x223 = x5.arrF;
  Val x224 = x222[0]._super;
  Val x225 = x223[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x226 = ((x65 * x224) + ((Val(1) - x65) * (Val(1) - x224)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x227 = x222[1]._super;
  Val x228 = x223[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x229 = ((x66 * x227) + ((Val(1) - x66) * (Val(1) - x227)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x230 = x222[2]._super;
  Val x231 = x223[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x232 = ((x67 * x230) + ((Val(1) - x67) * (Val(1) - x230)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x233 = x222[3]._super;
  Val x234 = x223[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x235 = ((x68 * x233) + ((Val(1) - x68) * (Val(1) - x233)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x236 = x222[4]._super;
  Val x237 = x223[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x238 = ((x69 * x236) + ((Val(1) - x69) * (Val(1) - x236)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x239 = x222[5]._super;
  Val x240 = x223[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x241 = ((x70 * x239) + ((Val(1) - x70) * (Val(1) - x239)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x242 = x222[6]._super;
  Val x243 = x223[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x244 = ((x71 * x242) + ((Val(1) - x71) * (Val(1) - x242)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x245 = x222[7]._super;
  Val x246 = x223[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x247 = ((x72 * x245) + ((Val(1) - x72) * (Val(1) - x245)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x248 = x222[8]._super;
  Val x249 = x223[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x250 = ((x73 * x248) + ((Val(1) - x73) * (Val(1) - x248)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x251 = x222[9]._super;
  Val x252 = x223[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x253 = ((x74 * x251) + ((Val(1) - x74) * (Val(1) - x251)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x254 = x222[10]._super;
  Val x255 = x223[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x256 = ((x75 * x254) + ((Val(1) - x75) * (Val(1) - x254)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x257 = x222[11]._super;
  Val x258 = x223[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x259 = ((x76 * x257) + ((Val(1) - x76) * (Val(1) - x257)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x260 = x222[12]._super;
  Val x261 = x223[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x262 = ((x77 * x260) + ((Val(1) - x77) * (Val(1) - x260)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x263 = x222[13]._super;
  Val x264 = x223[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x265 = ((x78 * x263) + ((Val(1) - x78) * (Val(1) - x263)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x266 = x222[14]._super;
  Val x267 = x223[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x268 = ((x79 * x266) + ((Val(1) - x79) * (Val(1) - x266)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x269 = x222[15]._super;
  Val x270 = x223[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x271 = ((x80 * x269) + ((Val(1) - x80) * (Val(1) - x269)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x272 = x222[16]._super;
  Val x273 = x223[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x274 = ((x81 * x272) + ((Val(1) - x81) * (Val(1) - x272)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x275 = x222[17]._super;
  Val x276 = x223[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x277 = ((x82 * x275) + ((Val(1) - x82) * (Val(1) - x275)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x278 = x222[18]._super;
  Val x279 = x223[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x280 = ((x83 * x278) + ((Val(1) - x83) * (Val(1) - x278)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x281 = x222[19]._super;
  Val x282 = x223[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x283 = ((x84 * x281) + ((Val(1) - x84) * (Val(1) - x281)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x284 = x222[20]._super;
  Val x285 = x223[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x286 = ((x85 * x284) + ((Val(1) - x85) * (Val(1) - x284)));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:336)
  Val x287 = (((x156 * x155) + ((Val(1) - x156) * (Val(1) - x155))) +
              (((x161 * x160) + ((Val(1) - x161) * (Val(1) - x160))) * Val(2)));
  Val x288 = ((x287 + (((x164 * x163) + ((Val(1) - x164) * (Val(1) - x163))) * Val(4))) +
              (((x167 * x166) + ((Val(1) - x167) * (Val(1) - x166))) * Val(8)));
  Val x289 = ((x288 + (((x170 * x169) + ((Val(1) - x170) * (Val(1) - x169))) * Val(16))) +
              (((x173 * x172) + ((Val(1) - x173) * (Val(1) - x172))) * Val(32)));
  Val x290 = ((x289 + (((x176 * x175) + ((Val(1) - x176) * (Val(1) - x175))) * Val(64))) +
              (((x179 * x178) + ((Val(1) - x179) * (Val(1) - x178))) * Val(128)));
  Val x291 = ((x290 + (((x182 * x181) + ((Val(1) - x182) * (Val(1) - x181))) * Val(256))) +
              (((x185 * x184) + ((Val(1) - x185) * (Val(1) - x184))) * Val(512)));
  Val x292 = ((x291 + (((x188 * x187) + ((Val(1) - x188) * (Val(1) - x187))) * Val(1024))) +
              (((x191 * x190) + ((Val(1) - x191) * (Val(1) - x190))) * Val(2048)));
  Val x293 = ((x292 + (((x194 * x193) + ((Val(1) - x194) * (Val(1) - x193))) * Val(4096))) +
              (((x197 * x196) + ((Val(1) - x197) * (Val(1) - x196))) * Val(8192)));
  Val x294 = ((x293 + (((x200 * x199) + ((Val(1) - x200) * (Val(1) - x199))) * Val(16384))) +
              (((x203 * x202) + ((Val(1) - x203) * (Val(1) - x202))) * Val(32768)));
  Val x295 = ((x294 + (((x206 * x205) + ((Val(1) - x206) * (Val(1) - x205))) * Val(65536))) +
              (((x209 * x208) + ((Val(1) - x209) * (Val(1) - x208))) * Val(131072)));
  Val x296 = ((x295 + (((x212 * x211) + ((Val(1) - x212) * (Val(1) - x211))) * Val(262144))) +
              (((x215 * x214) + ((Val(1) - x215) * (Val(1) - x214))) * Val(524288)));
  Val x297 = ((x296 + (((x218 * x217) + ((Val(1) - x218) * (Val(1) - x217))) * Val(1048576))) +
              (((x221 * x220) + ((Val(1) - x221) * (Val(1) - x220))) * Val(2097152)));
  NondetRegStruct x298 = exec_Reg(ctx, x297, LAYOUT_LOOKUP(layout2, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:337)
  Val x299 = (((x226 * x225) + ((Val(1) - x226) * (Val(1) - x225))) +
              (((x229 * x228) + ((Val(1) - x229) * (Val(1) - x228))) * Val(2)));
  Val x300 = ((x299 + (((x232 * x231) + ((Val(1) - x232) * (Val(1) - x231))) * Val(4))) +
              (((x235 * x234) + ((Val(1) - x235) * (Val(1) - x234))) * Val(8)));
  Val x301 = ((x300 + (((x238 * x237) + ((Val(1) - x238) * (Val(1) - x237))) * Val(16))) +
              (((x241 * x240) + ((Val(1) - x241) * (Val(1) - x240))) * Val(32)));
  Val x302 = ((x301 + (((x244 * x243) + ((Val(1) - x244) * (Val(1) - x243))) * Val(64))) +
              (((x247 * x246) + ((Val(1) - x247) * (Val(1) - x246))) * Val(128)));
  Val x303 = ((x302 + (((x250 * x249) + ((Val(1) - x250) * (Val(1) - x249))) * Val(256))) +
              (((x253 * x252) + ((Val(1) - x253) * (Val(1) - x252))) * Val(512)));
  Val x304 = ((x303 + (((x256 * x255) + ((Val(1) - x256) * (Val(1) - x255))) * Val(1024))) +
              (((x259 * x258) + ((Val(1) - x259) * (Val(1) - x258))) * Val(2048)));
  Val x305 = ((x304 + (((x262 * x261) + ((Val(1) - x262) * (Val(1) - x261))) * Val(4096))) +
              (((x265 * x264) + ((Val(1) - x265) * (Val(1) - x264))) * Val(8192)));
  Val x306 = ((x305 + (((x268 * x267) + ((Val(1) - x268) * (Val(1) - x267))) * Val(16384))) +
              (((x271 * x270) + ((Val(1) - x271) * (Val(1) - x270))) * Val(32768)));
  Val x307 = ((x306 + (((x274 * x273) + ((Val(1) - x274) * (Val(1) - x273))) * Val(65536))) +
              (((x277 * x276) + ((Val(1) - x277) * (Val(1) - x276))) * Val(131072)));
  Val x308 = ((x307 + (((x280 * x279) + ((Val(1) - x280) * (Val(1) - x279))) * Val(262144))) +
              (((x283 * x282) + ((Val(1) - x283) * (Val(1) - x282))) * Val(524288)));
  NondetRegStruct x309 =
      exec_Reg(ctx,
               (x308 + (((x286 * x285) + ((Val(1) - x286) * (Val(1) - x285))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _1));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:338)
  Val x310 = (((x93 * x92) + ((Val(1) - x93) * (Val(1) - x92))) +
              (((x96 * x95) + ((Val(1) - x96) * (Val(1) - x95))) * Val(2)));
  Val x311 = ((x310 + (((x99 * x98) + ((Val(1) - x99) * (Val(1) - x98))) * Val(4))) +
              (((x102 * x101) + ((Val(1) - x102) * (Val(1) - x101))) * Val(8)));
  Val x312 = ((x311 + (((x105 * x104) + ((Val(1) - x105) * (Val(1) - x104))) * Val(16))) +
              (((x108 * x107) + ((Val(1) - x108) * (Val(1) - x107))) * Val(32)));
  Val x313 = ((x312 + (((x111 * x110) + ((Val(1) - x111) * (Val(1) - x110))) * Val(64))) +
              (((x114 * x113) + ((Val(1) - x114) * (Val(1) - x113))) * Val(128)));
  Val x314 = ((x313 + (((x117 * x116) + ((Val(1) - x117) * (Val(1) - x116))) * Val(256))) +
              (((x120 * x119) + ((Val(1) - x120) * (Val(1) - x119))) * Val(512)));
  Val x315 = ((x314 + (((x123 * x122) + ((Val(1) - x123) * (Val(1) - x122))) * Val(1024))) +
              (((x126 * x125) + ((Val(1) - x126) * (Val(1) - x125))) * Val(2048)));
  Val x316 = ((x315 + (((x129 * x128) + ((Val(1) - x129) * (Val(1) - x128))) * Val(4096))) +
              (((x132 * x131) + ((Val(1) - x132) * (Val(1) - x131))) * Val(8192)));
  Val x317 = ((x316 + (((x135 * x134) + ((Val(1) - x135) * (Val(1) - x134))) * Val(16384))) +
              (((x138 * x137) + ((Val(1) - x138) * (Val(1) - x137))) * Val(32768)));
  Val x318 = ((x317 + (((x141 * x140) + ((Val(1) - x141) * (Val(1) - x140))) * Val(65536))) +
              (((x144 * x143) + ((Val(1) - x144) * (Val(1) - x143))) * Val(131072)));
  Val x319 = ((x318 + (((x147 * x146) + ((Val(1) - x147) * (Val(1) - x146))) * Val(262144))) +
              (((x150 * x149) + ((Val(1) - x150) * (Val(1) - x149))) * Val(524288)));
  NondetRegStruct x320 =
      exec_Reg(ctx,
               (x319 + (((x153 * x152) + ((Val(1) - x153) * (Val(1) - x152))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _2));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:341)
  BoundLayout<RhoMinor1_2__2_Arm1_SuperLayout> x321 = LAYOUT_LOOKUP(x3, arm1);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:342)
  Val22Array x322 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  Val24Array x323 = Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:339)
  Val22Array x324 =
      Val22Array{x298._super, x309._super, x320._super, Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0)};
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x325 = x5.rnd._super;
  Val x326 = x5.blk._super;
  Val x327 = x5.midx._super;
  if (to_size_t(Val(0))) {
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:342)
    RetTupleStruct x328 = exec_RetTuple(ctx,
                                        x322,
                                        x322,
                                        x322,
                                        x323,
                                        x322,
                                        x324,
                                        Val(8),
                                        Val(7),
                                        x325,
                                        x326,
                                        x327,
                                        LAYOUT_LOOKUP(x3, arm0));
  }
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:292)
  NondetRegStruct24Array x329 = x4.arrD;
  Val x330 = x329[15]._super;
  Val x331 = x329[16]._super;
  Val x332 = x329[17]._super;
  if (to_size_t(Val(1))) {
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:345)
    ToBits_22_Struct x333 = exec_ToBits_22_(ctx, x330, LAYOUT_LOOKUP(x321, unpackM1));
    NondetRegStruct22Array x334 = x333._super;
    Val x335 = x334[0]._super;
    Val x336 = x334[1]._super;
    Val x337 = x334[2]._super;
    Val x338 = x334[3]._super;
    Val x339 = x334[4]._super;
    Val x340 = x334[5]._super;
    Val x341 = x334[6]._super;
    Val x342 = x334[7]._super;
    Val x343 = x334[8]._super;
    Val x344 = x334[9]._super;
    Val x345 = x334[10]._super;
    Val x346 = x334[11]._super;
    Val x347 = x334[12]._super;
    Val x348 = x334[13]._super;
    Val x349 = x334[14]._super;
    Val x350 = x334[15]._super;
    Val x351 = x334[16]._super;
    Val x352 = x334[17]._super;
    Val x353 = x334[18]._super;
    Val x354 = x334[19]._super;
    Val x355 = x334[20]._super;
    Val x356 = x334[21]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:346)
    Val x357 =
        ((((((x335 + (x336 * Val(2))) + (x337 * Val(4))) + (x338 * Val(8))) + (x339 * Val(16))) +
          (x340 * Val(32))) +
         (x341 * Val(64)));
    Val x358 = ((((((x357 + (x342 * Val(128))) + (x343 * Val(256))) + (x344 * Val(512))) +
                  (x345 * Val(1024))) +
                 (x346 * Val(2048))) +
                (x347 * Val(4096)));
    Val x359 = ((((((x358 + (x348 * Val(8192))) + (x349 * Val(16384))) + (x350 * Val(32768))) +
                  (x351 * Val(65536))) +
                 (x352 * Val(131072))) +
                (x353 * Val(262144)));
    EQZ(((((x359 + (x354 * Val(524288))) + (x355 * Val(1048576))) + (x356 * Val(2097152))) - x330),
        "rho_minor1(zirgen/circuit/keccak/keccak.zir:346)");
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:349)
    ToBits_21_Struct x360 = exec_ToBits_21_(ctx, x331, LAYOUT_LOOKUP(x321, unpackM2));
    NondetRegStruct21Array x361 = x360._super;
    Val x362 = x361[0]._super;
    Val x363 = x361[1]._super;
    Val x364 = x361[2]._super;
    Val x365 = x361[3]._super;
    Val x366 = x361[4]._super;
    Val x367 = x361[5]._super;
    Val x368 = x361[6]._super;
    Val x369 = x361[7]._super;
    Val x370 = x361[8]._super;
    Val x371 = x361[9]._super;
    Val x372 = x361[10]._super;
    Val x373 = x361[11]._super;
    Val x374 = x361[12]._super;
    Val x375 = x361[13]._super;
    Val x376 = x361[14]._super;
    Val x377 = x361[15]._super;
    Val x378 = x361[16]._super;
    Val x379 = x361[17]._super;
    Val x380 = x361[18]._super;
    Val x381 = x361[19]._super;
    Val x382 = x361[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:350)
    Val x383 =
        ((((((x362 + (x363 * Val(2))) + (x364 * Val(4))) + (x365 * Val(8))) + (x366 * Val(16))) +
          (x367 * Val(32))) +
         (x368 * Val(64)));
    Val x384 = ((((((x383 + (x369 * Val(128))) + (x370 * Val(256))) + (x371 * Val(512))) +
                  (x372 * Val(1024))) +
                 (x373 * Val(2048))) +
                (x374 * Val(4096)));
    Val x385 = ((((((x384 + (x375 * Val(8192))) + (x376 * Val(16384))) + (x377 * Val(32768))) +
                  (x378 * Val(65536))) +
                 (x379 * Val(131072))) +
                (x380 * Val(262144)));
    EQZ((((x385 + (x381 * Val(524288))) + (x382 * Val(1048576))) - x331),
        "rho_minor1(zirgen/circuit/keccak/keccak.zir:350)");
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:354)
    ToBits_21_Struct x386 = exec_ToBits_21_(ctx, x332, LAYOUT_LOOKUP(x321, unpackM3));
    NondetRegStruct21Array x387 = x386._super;
    Val x388 = x387[0]._super;
    Val x389 = x387[1]._super;
    Val x390 = x387[2]._super;
    Val x391 = x387[3]._super;
    Val x392 = x387[4]._super;
    Val x393 = x387[5]._super;
    Val x394 = x387[6]._super;
    Val x395 = x387[7]._super;
    Val x396 = x387[8]._super;
    Val x397 = x387[9]._super;
    Val x398 = x387[10]._super;
    Val x399 = x387[11]._super;
    Val x400 = x387[12]._super;
    Val x401 = x387[13]._super;
    Val x402 = x387[14]._super;
    Val x403 = x387[15]._super;
    Val x404 = x387[16]._super;
    Val x405 = x387[17]._super;
    Val x406 = x387[18]._super;
    Val x407 = x387[19]._super;
    Val x408 = x387[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:355)
    Val x409 =
        ((((((x388 + (x389 * Val(2))) + (x390 * Val(4))) + (x391 * Val(8))) + (x392 * Val(16))) +
          (x393 * Val(32))) +
         (x394 * Val(64)));
    Val x410 = ((((((x409 + (x395 * Val(128))) + (x396 * Val(256))) + (x397 * Val(512))) +
                  (x398 * Val(1024))) +
                 (x399 * Val(2048))) +
                (x400 * Val(4096)));
    Val x411 = ((((((x410 + (x401 * Val(8192))) + (x402 * Val(16384))) + (x403 * Val(32768))) +
                  (x404 * Val(65536))) +
                 (x405 * Val(131072))) +
                (x406 * Val(262144)));
    EQZ((((x411 + (x407 * Val(524288))) + (x408 * Val(1048576))) - x332),
        "rho_minor1(zirgen/circuit/keccak/keccak.zir:355)");
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:358)
    RetTupleStruct x412 = exec_RetTuple(
        ctx,
        Val22Array{x335, x336, x337, x338, x339, x340, x341, x342, x343, x344, x345,
                   x346, x347, x348, x349, x350, x351, x352, x353, x354, x355, x356},
        Val22Array{x362, x363, x364, x365, x366, x367, x368, x369, x370, x371, x372,
                   x373, x374, x375, x376, x377, x378, x379, x380, x381, x382, Val(0)},
        Val22Array{x388, x389, x390, x391, x392, x393, x394, x395, x396, x397, x398,
                   x399, x400, x401, x402, x403, x404, x405, x406, x407, x408, Val(0)},
        x323,
        x322,
        x324,
        Val(5),
        Val(7),
        x325,
        x326,
        x327,
        LAYOUT_LOOKUP(x321, _super));
  }
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:341)
  RetTupleStruct x413 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x413;
}
RetTupleStruct execRhoMinor2_2__2_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<RhoMinor2_2__2_Layout> layout2) {
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:364)
  RetTupleStruct x3 = back_RetTuple(ctx, 6, arg1);
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:364)
  NondetRegStruct24Array x5 = x3.arrD;
  Val x6 = x5[21]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:368)
  ToBits_22_Struct x7 = exec_ToBits_22_(ctx, x6, LAYOUT_LOOKUP(layout2, unpackP1));
  NondetRegStruct22Array x8 = x7._super;
  Val x9 = x8[0]._super;
  Val x10 = x8[1]._super;
  Val x11 = x8[2]._super;
  Val x12 = x8[3]._super;
  Val x13 = x8[4]._super;
  Val x14 = x8[5]._super;
  Val x15 = x8[6]._super;
  Val x16 = x8[7]._super;
  Val x17 = x8[8]._super;
  Val x18 = x8[9]._super;
  Val x19 = x8[10]._super;
  Val x20 = x8[11]._super;
  Val x21 = x8[12]._super;
  Val x22 = x8[13]._super;
  Val x23 = x8[14]._super;
  Val x24 = x8[15]._super;
  Val x25 = x8[16]._super;
  Val x26 = x8[17]._super;
  Val x27 = x8[18]._super;
  Val x28 = x8[19]._super;
  Val x29 = x8[20]._super;
  Val x30 = x8[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:369)
  Val x31 = ((((((x9 + (x10 * Val(2))) + (x11 * Val(4))) + (x12 * Val(8))) + (x13 * Val(16))) +
              (x14 * Val(32))) +
             (x15 * Val(64)));
  Val x32 =
      ((((((x31 + (x16 * Val(128))) + (x17 * Val(256))) + (x18 * Val(512))) + (x19 * Val(1024))) +
        (x20 * Val(2048))) +
       (x21 * Val(4096)));
  Val x33 = ((((((x32 + (x22 * Val(8192))) + (x23 * Val(16384))) + (x24 * Val(32768))) +
               (x25 * Val(65536))) +
              (x26 * Val(131072))) +
             (x27 * Val(262144)));
  EQZ(((((x33 + (x28 * Val(524288))) + (x29 * Val(1048576))) + (x30 * Val(2097152))) - x6),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:369)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:364)
  Val x34 = x5[22]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:372)
  ToBits_21_Struct x35 = exec_ToBits_21_(ctx, x34, LAYOUT_LOOKUP(layout2, unpackP2));
  NondetRegStruct21Array x36 = x35._super;
  Val x37 = x36[0]._super;
  Val x38 = x36[1]._super;
  Val x39 = x36[2]._super;
  Val x40 = x36[3]._super;
  Val x41 = x36[4]._super;
  Val x42 = x36[5]._super;
  Val x43 = x36[6]._super;
  Val x44 = x36[7]._super;
  Val x45 = x36[8]._super;
  Val x46 = x36[9]._super;
  Val x47 = x36[10]._super;
  Val x48 = x36[11]._super;
  Val x49 = x36[12]._super;
  Val x50 = x36[13]._super;
  Val x51 = x36[14]._super;
  Val x52 = x36[15]._super;
  Val x53 = x36[16]._super;
  Val x54 = x36[17]._super;
  Val x55 = x36[18]._super;
  Val x56 = x36[19]._super;
  Val x57 = x36[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:373)
  Val x58 = ((((((x37 + (x38 * Val(2))) + (x39 * Val(4))) + (x40 * Val(8))) + (x41 * Val(16))) +
              (x42 * Val(32))) +
             (x43 * Val(64)));
  Val x59 =
      ((((((x58 + (x44 * Val(128))) + (x45 * Val(256))) + (x46 * Val(512))) + (x47 * Val(1024))) +
        (x48 * Val(2048))) +
       (x49 * Val(4096)));
  Val x60 = ((((((x59 + (x50 * Val(8192))) + (x51 * Val(16384))) + (x52 * Val(32768))) +
               (x53 * Val(65536))) +
              (x54 * Val(131072))) +
             (x55 * Val(262144)));
  EQZ((((x60 + (x56 * Val(524288))) + (x57 * Val(1048576))) - x34),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:373)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:364)
  Val x61 = x5[23]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:376)
  ToBits_21_Struct x62 = exec_ToBits_21_(ctx, x61, LAYOUT_LOOKUP(layout2, unpackP3));
  NondetRegStruct21Array x63 = x62._super;
  Val x64 = x63[0]._super;
  Val x65 = x63[1]._super;
  Val x66 = x63[2]._super;
  Val x67 = x63[3]._super;
  Val x68 = x63[4]._super;
  Val x69 = x63[5]._super;
  Val x70 = x63[6]._super;
  Val x71 = x63[7]._super;
  Val x72 = x63[8]._super;
  Val x73 = x63[9]._super;
  Val x74 = x63[10]._super;
  Val x75 = x63[11]._super;
  Val x76 = x63[12]._super;
  Val x77 = x63[13]._super;
  Val x78 = x63[14]._super;
  Val x79 = x63[15]._super;
  Val x80 = x63[16]._super;
  Val x81 = x63[17]._super;
  Val x82 = x63[18]._super;
  Val x83 = x63[19]._super;
  Val x84 = x63[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:377)
  Val x85 = ((((((x64 + (x65 * Val(2))) + (x66 * Val(4))) + (x67 * Val(8))) + (x68 * Val(16))) +
              (x69 * Val(32))) +
             (x70 * Val(64)));
  Val x86 =
      ((((((x85 + (x71 * Val(128))) + (x72 * Val(256))) + (x73 * Val(512))) + (x74 * Val(1024))) +
        (x75 * Val(2048))) +
       (x76 * Val(4096)));
  Val x87 = ((((((x86 + (x77 * Val(8192))) + (x78 * Val(16384))) + (x79 * Val(32768))) +
               (x80 * Val(65536))) +
              (x81 * Val(131072))) +
             (x82 * Val(262144)));
  EQZ((((x87 + (x83 * Val(524288))) + (x84 * Val(1048576))) - x61),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:377)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:364)
  NondetRegStruct22Array x88 = x3.arrB;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:383)
  Val x89 = x88[17]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:390)
  ToBits_22_Struct x90 = exec_ToBits_22_(ctx, x89, LAYOUT_LOOKUP(layout2, unpackXy1));
  NondetRegStruct22Array x91 = x90._super;
  Val x92 = x91[0]._super;
  Val x93 = x91[1]._super;
  Val x94 = x91[2]._super;
  Val x95 = x91[3]._super;
  Val x96 = x91[4]._super;
  Val x97 = x91[5]._super;
  Val x98 = x91[6]._super;
  Val x99 = x91[7]._super;
  Val x100 = x91[8]._super;
  Val x101 = x91[9]._super;
  Val x102 = x91[10]._super;
  Val x103 = x91[11]._super;
  Val x104 = x91[12]._super;
  Val x105 = x91[13]._super;
  Val x106 = x91[14]._super;
  Val x107 = x91[15]._super;
  Val x108 = x91[16]._super;
  Val x109 = x91[17]._super;
  Val x110 = x91[18]._super;
  Val x111 = x91[19]._super;
  Val x112 = x91[20]._super;
  Val x113 = x91[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:391)
  Val x114 = ((((((x92 + (x93 * Val(2))) + (x94 * Val(4))) + (x95 * Val(8))) + (x96 * Val(16))) +
               (x97 * Val(32))) +
              (x98 * Val(64)));
  Val x115 = ((((((x114 + (x99 * Val(128))) + (x100 * Val(256))) + (x101 * Val(512))) +
                (x102 * Val(1024))) +
               (x103 * Val(2048))) +
              (x104 * Val(4096)));
  Val x116 = ((((((x115 + (x105 * Val(8192))) + (x106 * Val(16384))) + (x107 * Val(32768))) +
                (x108 * Val(65536))) +
               (x109 * Val(131072))) +
              (x110 * Val(262144)));
  EQZ(((((x116 + (x111 * Val(524288))) + (x112 * Val(1048576))) + (x113 * Val(2097152))) - x89),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:391)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:395)
  Val x117 = x88[18]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:402)
  ToBits_21_Struct x118 = exec_ToBits_21_(ctx, x117, LAYOUT_LOOKUP(layout2, unpackXy2));
  NondetRegStruct21Array x119 = x118._super;
  Val x120 = x119[0]._super;
  Val x121 = x119[1]._super;
  Val x122 = x119[2]._super;
  Val x123 = x119[3]._super;
  Val x124 = x119[4]._super;
  Val x125 = x119[5]._super;
  Val x126 = x119[6]._super;
  Val x127 = x119[7]._super;
  Val x128 = x119[8]._super;
  Val x129 = x119[9]._super;
  Val x130 = x119[10]._super;
  Val x131 = x119[11]._super;
  Val x132 = x119[12]._super;
  Val x133 = x119[13]._super;
  Val x134 = x119[14]._super;
  Val x135 = x119[15]._super;
  Val x136 = x119[16]._super;
  Val x137 = x119[17]._super;
  Val x138 = x119[18]._super;
  Val x139 = x119[19]._super;
  Val x140 = x119[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:403)
  Val x141 =
      ((((((x120 + (x121 * Val(2))) + (x122 * Val(4))) + (x123 * Val(8))) + (x124 * Val(16))) +
        (x125 * Val(32))) +
       (x126 * Val(64)));
  Val x142 = ((((((x141 + (x127 * Val(128))) + (x128 * Val(256))) + (x129 * Val(512))) +
                (x130 * Val(1024))) +
               (x131 * Val(2048))) +
              (x132 * Val(4096)));
  Val x143 = ((((((x142 + (x133 * Val(8192))) + (x134 * Val(16384))) + (x135 * Val(32768))) +
                (x136 * Val(65536))) +
               (x137 * Val(131072))) +
              (x138 * Val(262144)));
  EQZ((((x143 + (x139 * Val(524288))) + (x140 * Val(1048576))) - x117),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:403)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:407)
  Val x144 = x88[19]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:414)
  ToBits_21_Struct x145 = exec_ToBits_21_(ctx, x144, LAYOUT_LOOKUP(layout2, unpackXy3));
  NondetRegStruct21Array x146 = x145._super;
  Val x147 = x146[0]._super;
  Val x148 = x146[1]._super;
  Val x149 = x146[2]._super;
  Val x150 = x146[3]._super;
  Val x151 = x146[4]._super;
  Val x152 = x146[5]._super;
  Val x153 = x146[6]._super;
  Val x154 = x146[7]._super;
  Val x155 = x146[8]._super;
  Val x156 = x146[9]._super;
  Val x157 = x146[10]._super;
  Val x158 = x146[11]._super;
  Val x159 = x146[12]._super;
  Val x160 = x146[13]._super;
  Val x161 = x146[14]._super;
  Val x162 = x146[15]._super;
  Val x163 = x146[16]._super;
  Val x164 = x146[17]._super;
  Val x165 = x146[18]._super;
  Val x166 = x146[19]._super;
  Val x167 = x146[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:415)
  Val x168 =
      ((((((x147 + (x148 * Val(2))) + (x149 * Val(4))) + (x150 * Val(8))) + (x151 * Val(16))) +
        (x152 * Val(32))) +
       (x153 * Val(64)));
  Val x169 = ((((((x168 + (x154 * Val(128))) + (x155 * Val(256))) + (x156 * Val(512))) +
                (x157 * Val(1024))) +
               (x158 * Val(2048))) +
              (x159 * Val(4096)));
  Val x170 = ((((((x169 + (x160 * Val(8192))) + (x161 * Val(16384))) + (x162 * Val(32768))) +
                (x163 * Val(65536))) +
               (x164 * Val(131072))) +
              (x165 * Val(262144)));
  EQZ((((x170 + (x166 * Val(524288))) + (x167 * Val(1048576))) - x144),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:415)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  NondetRegStruct22Array x171 = x4.arrA;
  Val x172 = x171[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x173 = ((x92 * x172) + ((Val(1) - x92) * (Val(1) - x172)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x174 = x171[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x175 = ((x93 * x174) + ((Val(1) - x93) * (Val(1) - x174)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x176 = x171[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x177 = ((x94 * x176) + ((Val(1) - x94) * (Val(1) - x176)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x178 = x171[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x179 = ((x95 * x178) + ((Val(1) - x95) * (Val(1) - x178)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x180 = x171[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x181 = ((x96 * x180) + ((Val(1) - x96) * (Val(1) - x180)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x182 = x171[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x183 = ((x97 * x182) + ((Val(1) - x97) * (Val(1) - x182)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x184 = x171[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x185 = ((x98 * x184) + ((Val(1) - x98) * (Val(1) - x184)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x186 = x171[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x187 = ((x99 * x186) + ((Val(1) - x99) * (Val(1) - x186)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x188 = x171[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x189 = ((x100 * x188) + ((Val(1) - x100) * (Val(1) - x188)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x190 = x171[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x191 = ((x101 * x190) + ((Val(1) - x101) * (Val(1) - x190)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x192 = x171[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x193 = ((x102 * x192) + ((Val(1) - x102) * (Val(1) - x192)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x194 = x171[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x195 = ((x103 * x194) + ((Val(1) - x103) * (Val(1) - x194)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x196 = x171[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x197 = ((x104 * x196) + ((Val(1) - x104) * (Val(1) - x196)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x198 = x171[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x199 = ((x105 * x198) + ((Val(1) - x105) * (Val(1) - x198)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x200 = x171[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x201 = ((x106 * x200) + ((Val(1) - x106) * (Val(1) - x200)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x202 = x171[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x203 = ((x107 * x202) + ((Val(1) - x107) * (Val(1) - x202)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x204 = x171[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x205 = ((x108 * x204) + ((Val(1) - x108) * (Val(1) - x204)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x206 = x171[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x207 = ((x109 * x206) + ((Val(1) - x109) * (Val(1) - x206)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x208 = x171[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x209 = ((x110 * x208) + ((Val(1) - x110) * (Val(1) - x208)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x210 = x171[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x211 = ((x111 * x210) + ((Val(1) - x111) * (Val(1) - x210)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x212 = x171[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x213 = ((x112 * x212) + ((Val(1) - x112) * (Val(1) - x212)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x214 = x171[21]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x215 = ((x113 * x214) + ((Val(1) - x113) * (Val(1) - x214)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  NondetRegStruct22Array x216 = x4.arrB;
  Val x217 = x216[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x218 = ((x120 * x217) + ((Val(1) - x120) * (Val(1) - x217)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x219 = x216[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x220 = ((x121 * x219) + ((Val(1) - x121) * (Val(1) - x219)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x221 = x216[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x222 = ((x122 * x221) + ((Val(1) - x122) * (Val(1) - x221)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x223 = x216[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x224 = ((x123 * x223) + ((Val(1) - x123) * (Val(1) - x223)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x225 = x216[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x226 = ((x124 * x225) + ((Val(1) - x124) * (Val(1) - x225)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x227 = x216[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x228 = ((x125 * x227) + ((Val(1) - x125) * (Val(1) - x227)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x229 = x216[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x230 = ((x126 * x229) + ((Val(1) - x126) * (Val(1) - x229)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x231 = x216[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x232 = ((x127 * x231) + ((Val(1) - x127) * (Val(1) - x231)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x233 = x216[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x234 = ((x128 * x233) + ((Val(1) - x128) * (Val(1) - x233)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x235 = x216[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x236 = ((x129 * x235) + ((Val(1) - x129) * (Val(1) - x235)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x237 = x216[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x238 = ((x130 * x237) + ((Val(1) - x130) * (Val(1) - x237)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x239 = x216[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x240 = ((x131 * x239) + ((Val(1) - x131) * (Val(1) - x239)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x241 = x216[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x242 = ((x132 * x241) + ((Val(1) - x132) * (Val(1) - x241)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x243 = x216[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x244 = ((x133 * x243) + ((Val(1) - x133) * (Val(1) - x243)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x245 = x216[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x246 = ((x134 * x245) + ((Val(1) - x134) * (Val(1) - x245)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x247 = x216[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x248 = ((x135 * x247) + ((Val(1) - x135) * (Val(1) - x247)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x249 = x216[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x250 = ((x136 * x249) + ((Val(1) - x136) * (Val(1) - x249)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x251 = x216[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x252 = ((x137 * x251) + ((Val(1) - x137) * (Val(1) - x251)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x253 = x216[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x254 = ((x138 * x253) + ((Val(1) - x138) * (Val(1) - x253)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x255 = x216[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x256 = ((x139 * x255) + ((Val(1) - x139) * (Val(1) - x255)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x257 = x216[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x258 = ((x140 * x257) + ((Val(1) - x140) * (Val(1) - x257)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  NondetRegStruct22Array x259 = x4.arrC;
  Val x260 = x259[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x261 = ((x147 * x260) + ((Val(1) - x147) * (Val(1) - x260)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x262 = x259[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x263 = ((x148 * x262) + ((Val(1) - x148) * (Val(1) - x262)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x264 = x259[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x265 = ((x149 * x264) + ((Val(1) - x149) * (Val(1) - x264)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x266 = x259[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x267 = ((x150 * x266) + ((Val(1) - x150) * (Val(1) - x266)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x268 = x259[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x269 = ((x151 * x268) + ((Val(1) - x151) * (Val(1) - x268)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x270 = x259[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x271 = ((x152 * x270) + ((Val(1) - x152) * (Val(1) - x270)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x272 = x259[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x273 = ((x153 * x272) + ((Val(1) - x153) * (Val(1) - x272)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x274 = x259[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x275 = ((x154 * x274) + ((Val(1) - x154) * (Val(1) - x274)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x276 = x259[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x277 = ((x155 * x276) + ((Val(1) - x155) * (Val(1) - x276)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x278 = x259[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x279 = ((x156 * x278) + ((Val(1) - x156) * (Val(1) - x278)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x280 = x259[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x281 = ((x157 * x280) + ((Val(1) - x157) * (Val(1) - x280)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x282 = x259[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x283 = ((x158 * x282) + ((Val(1) - x158) * (Val(1) - x282)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x284 = x259[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x285 = ((x159 * x284) + ((Val(1) - x159) * (Val(1) - x284)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x286 = x259[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x287 = ((x160 * x286) + ((Val(1) - x160) * (Val(1) - x286)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x288 = x259[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x289 = ((x161 * x288) + ((Val(1) - x161) * (Val(1) - x288)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x290 = x259[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x291 = ((x162 * x290) + ((Val(1) - x162) * (Val(1) - x290)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x292 = x259[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x293 = ((x163 * x292) + ((Val(1) - x163) * (Val(1) - x292)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x294 = x259[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x295 = ((x164 * x294) + ((Val(1) - x164) * (Val(1) - x294)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x296 = x259[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x297 = ((x165 * x296) + ((Val(1) - x165) * (Val(1) - x296)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x298 = x259[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x299 = ((x166 * x298) + ((Val(1) - x166) * (Val(1) - x298)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x300 = x259[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x301 = ((x167 * x300) + ((Val(1) - x167) * (Val(1) - x300)));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:422)
  Val x302 = (((x252 * x53) + ((Val(1) - x252) * (Val(1) - x53))) +
              (((x254 * x54) + ((Val(1) - x254) * (Val(1) - x54))) * Val(2)));
  Val x303 = ((x302 + (((x256 * x55) + ((Val(1) - x256) * (Val(1) - x55))) * Val(4))) +
              (((x258 * x56) + ((Val(1) - x258) * (Val(1) - x56))) * Val(8)));
  Val x304 = ((x303 + (((x261 * x57) + ((Val(1) - x261) * (Val(1) - x57))) * Val(16))) +
              (((x263 * x64) + ((Val(1) - x263) * (Val(1) - x64))) * Val(32)));
  Val x305 = ((x304 + (((x265 * x65) + ((Val(1) - x265) * (Val(1) - x65))) * Val(64))) +
              (((x267 * x66) + ((Val(1) - x267) * (Val(1) - x66))) * Val(128)));
  Val x306 = ((x305 + (((x269 * x67) + ((Val(1) - x269) * (Val(1) - x67))) * Val(256))) +
              (((x271 * x68) + ((Val(1) - x271) * (Val(1) - x68))) * Val(512)));
  Val x307 = ((x306 + (((x273 * x69) + ((Val(1) - x273) * (Val(1) - x69))) * Val(1024))) +
              (((x275 * x70) + ((Val(1) - x275) * (Val(1) - x70))) * Val(2048)));
  Val x308 = ((x307 + (((x277 * x71) + ((Val(1) - x277) * (Val(1) - x71))) * Val(4096))) +
              (((x279 * x72) + ((Val(1) - x279) * (Val(1) - x72))) * Val(8192)));
  Val x309 = ((x308 + (((x281 * x73) + ((Val(1) - x281) * (Val(1) - x73))) * Val(16384))) +
              (((x283 * x74) + ((Val(1) - x283) * (Val(1) - x74))) * Val(32768)));
  Val x310 = ((x309 + (((x285 * x75) + ((Val(1) - x285) * (Val(1) - x75))) * Val(65536))) +
              (((x287 * x76) + ((Val(1) - x287) * (Val(1) - x76))) * Val(131072)));
  Val x311 = ((x310 + (((x289 * x77) + ((Val(1) - x289) * (Val(1) - x77))) * Val(262144))) +
              (((x291 * x78) + ((Val(1) - x291) * (Val(1) - x78))) * Val(524288)));
  Val x312 = ((x311 + (((x293 * x79) + ((Val(1) - x293) * (Val(1) - x79))) * Val(1048576))) +
              (((x295 * x80) + ((Val(1) - x295) * (Val(1) - x80))) * Val(2097152)));
  NondetRegStruct x313 = exec_Reg(ctx, x312, LAYOUT_LOOKUP(layout2, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:423)
  Val x314 = (((x297 * x81) + ((Val(1) - x297) * (Val(1) - x81))) +
              (((x299 * x82) + ((Val(1) - x299) * (Val(1) - x82))) * Val(2)));
  Val x315 = ((x314 + (((x301 * x83) + ((Val(1) - x301) * (Val(1) - x83))) * Val(4))) +
              (((x173 * x84) + ((Val(1) - x173) * (Val(1) - x84))) * Val(8)));
  Val x316 = ((x315 + (((x175 * x9) + ((Val(1) - x175) * (Val(1) - x9))) * Val(16))) +
              (((x177 * x10) + ((Val(1) - x177) * (Val(1) - x10))) * Val(32)));
  Val x317 = ((x316 + (((x179 * x11) + ((Val(1) - x179) * (Val(1) - x11))) * Val(64))) +
              (((x181 * x12) + ((Val(1) - x181) * (Val(1) - x12))) * Val(128)));
  Val x318 = ((x317 + (((x183 * x13) + ((Val(1) - x183) * (Val(1) - x13))) * Val(256))) +
              (((x185 * x14) + ((Val(1) - x185) * (Val(1) - x14))) * Val(512)));
  Val x319 = ((x318 + (((x187 * x15) + ((Val(1) - x187) * (Val(1) - x15))) * Val(1024))) +
              (((x189 * x16) + ((Val(1) - x189) * (Val(1) - x16))) * Val(2048)));
  Val x320 = ((x319 + (((x191 * x17) + ((Val(1) - x191) * (Val(1) - x17))) * Val(4096))) +
              (((x193 * x18) + ((Val(1) - x193) * (Val(1) - x18))) * Val(8192)));
  Val x321 = ((x320 + (((x195 * x19) + ((Val(1) - x195) * (Val(1) - x19))) * Val(16384))) +
              (((x197 * x20) + ((Val(1) - x197) * (Val(1) - x20))) * Val(32768)));
  Val x322 = ((x321 + (((x199 * x21) + ((Val(1) - x199) * (Val(1) - x21))) * Val(65536))) +
              (((x201 * x22) + ((Val(1) - x201) * (Val(1) - x22))) * Val(131072)));
  Val x323 = ((x322 + (((x203 * x23) + ((Val(1) - x203) * (Val(1) - x23))) * Val(262144))) +
              (((x205 * x24) + ((Val(1) - x205) * (Val(1) - x24))) * Val(524288)));
  NondetRegStruct x324 =
      exec_Reg(ctx,
               (x323 + (((x207 * x25) + ((Val(1) - x207) * (Val(1) - x25))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _1));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:424)
  Val x325 = (((x209 * x26) + ((Val(1) - x209) * (Val(1) - x26))) +
              (((x211 * x27) + ((Val(1) - x211) * (Val(1) - x27))) * Val(2)));
  Val x326 = ((x325 + (((x213 * x28) + ((Val(1) - x213) * (Val(1) - x28))) * Val(4))) +
              (((x215 * x29) + ((Val(1) - x215) * (Val(1) - x29))) * Val(8)));
  Val x327 = ((x326 + (((x218 * x30) + ((Val(1) - x218) * (Val(1) - x30))) * Val(16))) +
              (((x220 * x37) + ((Val(1) - x220) * (Val(1) - x37))) * Val(32)));
  Val x328 = ((x327 + (((x222 * x38) + ((Val(1) - x222) * (Val(1) - x38))) * Val(64))) +
              (((x224 * x39) + ((Val(1) - x224) * (Val(1) - x39))) * Val(128)));
  Val x329 = ((x328 + (((x226 * x40) + ((Val(1) - x226) * (Val(1) - x40))) * Val(256))) +
              (((x228 * x41) + ((Val(1) - x228) * (Val(1) - x41))) * Val(512)));
  Val x330 = ((x329 + (((x230 * x42) + ((Val(1) - x230) * (Val(1) - x42))) * Val(1024))) +
              (((x232 * x43) + ((Val(1) - x232) * (Val(1) - x43))) * Val(2048)));
  Val x331 = ((x330 + (((x234 * x44) + ((Val(1) - x234) * (Val(1) - x44))) * Val(4096))) +
              (((x236 * x45) + ((Val(1) - x236) * (Val(1) - x45))) * Val(8192)));
  Val x332 = ((x331 + (((x238 * x46) + ((Val(1) - x238) * (Val(1) - x46))) * Val(16384))) +
              (((x240 * x47) + ((Val(1) - x240) * (Val(1) - x47))) * Val(32768)));
  Val x333 = ((x332 + (((x242 * x48) + ((Val(1) - x242) * (Val(1) - x48))) * Val(65536))) +
              (((x244 * x49) + ((Val(1) - x244) * (Val(1) - x49))) * Val(131072)));
  Val x334 = ((x333 + (((x246 * x50) + ((Val(1) - x246) * (Val(1) - x50))) * Val(262144))) +
              (((x248 * x51) + ((Val(1) - x248) * (Val(1) - x51))) * Val(524288)));
  NondetRegStruct x335 =
      exec_Reg(ctx,
               (x334 + (((x250 * x52) + ((Val(1) - x250) * (Val(1) - x52))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _2));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:427)
  Val22Array x336 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x337 = exec_RetTuple(
      ctx,
      x336,
      x336,
      x336,
      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
      x336,
      Val22Array{x313._super, x324._super, x335._super, Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0)},
      Val(6),
      Val(7),
      x4.rnd._super,
      x4.blk._super,
      x4.midx._super,
      LAYOUT_LOOKUP(layout2, _super));
  return x337;
}
RetTupleStruct execRhoMinor0_4__2_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<RhoMinor0_4__2_Layout> layout2) {
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  RetTupleStruct x3 = back_RetTuple(ctx, 7, arg1);
  NondetRegStruct24Array x4 = x3.arrD;
  Val x5 = x4[18]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:257)
  ToBits_22_Struct x6 = exec_ToBits_22_(ctx, x5, LAYOUT_LOOKUP(layout2, unpackM1));
  NondetRegStruct22Array x7 = x6._super;
  Val x8 = x7[0]._super;
  Val x9 = x7[1]._super;
  Val x10 = x7[2]._super;
  Val x11 = x7[3]._super;
  Val x12 = x7[4]._super;
  Val x13 = x7[5]._super;
  Val x14 = x7[6]._super;
  Val x15 = x7[7]._super;
  Val x16 = x7[8]._super;
  Val x17 = x7[9]._super;
  Val x18 = x7[10]._super;
  Val x19 = x7[11]._super;
  Val x20 = x7[12]._super;
  Val x21 = x7[13]._super;
  Val x22 = x7[14]._super;
  Val x23 = x7[15]._super;
  Val x24 = x7[16]._super;
  Val x25 = x7[17]._super;
  Val x26 = x7[18]._super;
  Val x27 = x7[19]._super;
  Val x28 = x7[20]._super;
  Val x29 = x7[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:258)
  Val x30 = ((((((x8 + (x9 * Val(2))) + (x10 * Val(4))) + (x11 * Val(8))) + (x12 * Val(16))) +
              (x13 * Val(32))) +
             (x14 * Val(64)));
  Val x31 =
      ((((((x30 + (x15 * Val(128))) + (x16 * Val(256))) + (x17 * Val(512))) + (x18 * Val(1024))) +
        (x19 * Val(2048))) +
       (x20 * Val(4096)));
  Val x32 = ((((((x31 + (x21 * Val(8192))) + (x22 * Val(16384))) + (x23 * Val(32768))) +
               (x24 * Val(65536))) +
              (x25 * Val(131072))) +
             (x26 * Val(262144)));
  EQZ(((((x32 + (x27 * Val(524288))) + (x28 * Val(1048576))) + (x29 * Val(2097152))) - x5),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:258)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x33 = x4[19]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:261)
  ToBits_21_Struct x34 = exec_ToBits_21_(ctx, x33, LAYOUT_LOOKUP(layout2, unpackM2));
  NondetRegStruct21Array x35 = x34._super;
  Val x36 = x35[0]._super;
  Val x37 = x35[1]._super;
  Val x38 = x35[2]._super;
  Val x39 = x35[3]._super;
  Val x40 = x35[4]._super;
  Val x41 = x35[5]._super;
  Val x42 = x35[6]._super;
  Val x43 = x35[7]._super;
  Val x44 = x35[8]._super;
  Val x45 = x35[9]._super;
  Val x46 = x35[10]._super;
  Val x47 = x35[11]._super;
  Val x48 = x35[12]._super;
  Val x49 = x35[13]._super;
  Val x50 = x35[14]._super;
  Val x51 = x35[15]._super;
  Val x52 = x35[16]._super;
  Val x53 = x35[17]._super;
  Val x54 = x35[18]._super;
  Val x55 = x35[19]._super;
  Val x56 = x35[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:262)
  Val x57 = ((((((x36 + (x37 * Val(2))) + (x38 * Val(4))) + (x39 * Val(8))) + (x40 * Val(16))) +
              (x41 * Val(32))) +
             (x42 * Val(64)));
  Val x58 =
      ((((((x57 + (x43 * Val(128))) + (x44 * Val(256))) + (x45 * Val(512))) + (x46 * Val(1024))) +
        (x47 * Val(2048))) +
       (x48 * Val(4096)));
  Val x59 = ((((((x58 + (x49 * Val(8192))) + (x50 * Val(16384))) + (x51 * Val(32768))) +
               (x52 * Val(65536))) +
              (x53 * Val(131072))) +
             (x54 * Val(262144)));
  EQZ((((x59 + (x55 * Val(524288))) + (x56 * Val(1048576))) - x33),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:262)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x60 = x4[20]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:266)
  ToBits_21_Struct x61 = exec_ToBits_21_(ctx, x60, LAYOUT_LOOKUP(layout2, unpackM3));
  NondetRegStruct21Array x62 = x61._super;
  Val x63 = x62[0]._super;
  Val x64 = x62[1]._super;
  Val x65 = x62[2]._super;
  Val x66 = x62[3]._super;
  Val x67 = x62[4]._super;
  Val x68 = x62[5]._super;
  Val x69 = x62[6]._super;
  Val x70 = x62[7]._super;
  Val x71 = x62[8]._super;
  Val x72 = x62[9]._super;
  Val x73 = x62[10]._super;
  Val x74 = x62[11]._super;
  Val x75 = x62[12]._super;
  Val x76 = x62[13]._super;
  Val x77 = x62[14]._super;
  Val x78 = x62[15]._super;
  Val x79 = x62[16]._super;
  Val x80 = x62[17]._super;
  Val x81 = x62[18]._super;
  Val x82 = x62[19]._super;
  Val x83 = x62[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:267)
  Val x84 = ((((((x63 + (x64 * Val(2))) + (x65 * Val(4))) + (x66 * Val(8))) + (x67 * Val(16))) +
              (x68 * Val(32))) +
             (x69 * Val(64)));
  Val x85 =
      ((((((x84 + (x70 * Val(128))) + (x71 * Val(256))) + (x72 * Val(512))) + (x73 * Val(1024))) +
        (x74 * Val(2048))) +
       (x75 * Val(4096)));
  Val x86 = ((((((x85 + (x76 * Val(8192))) + (x77 * Val(16384))) + (x78 * Val(32768))) +
               (x79 * Val(65536))) +
              (x80 * Val(131072))) +
             (x81 * Val(262144)));
  EQZ((((x86 + (x82 * Val(524288))) + (x83 * Val(1048576))) - x60),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:267)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x87 = x4[9]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:271)
  ToBits_22_Struct x88 = exec_ToBits_22_(ctx, x87, LAYOUT_LOOKUP(layout2, unpackP1));
  NondetRegStruct22Array x89 = x88._super;
  Val x90 = x89[0]._super;
  Val x91 = x89[1]._super;
  Val x92 = x89[2]._super;
  Val x93 = x89[3]._super;
  Val x94 = x89[4]._super;
  Val x95 = x89[5]._super;
  Val x96 = x89[6]._super;
  Val x97 = x89[7]._super;
  Val x98 = x89[8]._super;
  Val x99 = x89[9]._super;
  Val x100 = x89[10]._super;
  Val x101 = x89[11]._super;
  Val x102 = x89[12]._super;
  Val x103 = x89[13]._super;
  Val x104 = x89[14]._super;
  Val x105 = x89[15]._super;
  Val x106 = x89[16]._super;
  Val x107 = x89[17]._super;
  Val x108 = x89[18]._super;
  Val x109 = x89[19]._super;
  Val x110 = x89[20]._super;
  Val x111 = x89[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:272)
  Val x112 = ((((((x90 + (x91 * Val(2))) + (x92 * Val(4))) + (x93 * Val(8))) + (x94 * Val(16))) +
               (x95 * Val(32))) +
              (x96 * Val(64)));
  Val x113 =
      ((((((x112 + (x97 * Val(128))) + (x98 * Val(256))) + (x99 * Val(512))) + (x100 * Val(1024))) +
        (x101 * Val(2048))) +
       (x102 * Val(4096)));
  Val x114 = ((((((x113 + (x103 * Val(8192))) + (x104 * Val(16384))) + (x105 * Val(32768))) +
                (x106 * Val(65536))) +
               (x107 * Val(131072))) +
              (x108 * Val(262144)));
  EQZ(((((x114 + (x109 * Val(524288))) + (x110 * Val(1048576))) + (x111 * Val(2097152))) - x87),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:272)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x115 = x4[10]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:275)
  ToBits_21_Struct x116 = exec_ToBits_21_(ctx, x115, LAYOUT_LOOKUP(layout2, unpackP2));
  NondetRegStruct21Array x117 = x116._super;
  Val x118 = x117[0]._super;
  Val x119 = x117[1]._super;
  Val x120 = x117[2]._super;
  Val x121 = x117[3]._super;
  Val x122 = x117[4]._super;
  Val x123 = x117[5]._super;
  Val x124 = x117[6]._super;
  Val x125 = x117[7]._super;
  Val x126 = x117[8]._super;
  Val x127 = x117[9]._super;
  Val x128 = x117[10]._super;
  Val x129 = x117[11]._super;
  Val x130 = x117[12]._super;
  Val x131 = x117[13]._super;
  Val x132 = x117[14]._super;
  Val x133 = x117[15]._super;
  Val x134 = x117[16]._super;
  Val x135 = x117[17]._super;
  Val x136 = x117[18]._super;
  Val x137 = x117[19]._super;
  Val x138 = x117[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:276)
  Val x139 =
      ((((((x118 + (x119 * Val(2))) + (x120 * Val(4))) + (x121 * Val(8))) + (x122 * Val(16))) +
        (x123 * Val(32))) +
       (x124 * Val(64)));
  Val x140 = ((((((x139 + (x125 * Val(128))) + (x126 * Val(256))) + (x127 * Val(512))) +
                (x128 * Val(1024))) +
               (x129 * Val(2048))) +
              (x130 * Val(4096)));
  Val x141 = ((((((x140 + (x131 * Val(8192))) + (x132 * Val(16384))) + (x133 * Val(32768))) +
                (x134 * Val(65536))) +
               (x135 * Val(131072))) +
              (x136 * Val(262144)));
  EQZ((((x141 + (x137 * Val(524288))) + (x138 * Val(1048576))) - x115),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:276)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x142 = x4[11]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:279)
  ToBits_21_Struct x143 = exec_ToBits_21_(ctx, x142, LAYOUT_LOOKUP(layout2, unpackP3));
  NondetRegStruct21Array x144 = x143._super;
  Val x145 = x144[0]._super;
  Val x146 = x144[1]._super;
  Val x147 = x144[2]._super;
  Val x148 = x144[3]._super;
  Val x149 = x144[4]._super;
  Val x150 = x144[5]._super;
  Val x151 = x144[6]._super;
  Val x152 = x144[7]._super;
  Val x153 = x144[8]._super;
  Val x154 = x144[9]._super;
  Val x155 = x144[10]._super;
  Val x156 = x144[11]._super;
  Val x157 = x144[12]._super;
  Val x158 = x144[13]._super;
  Val x159 = x144[14]._super;
  Val x160 = x144[15]._super;
  Val x161 = x144[16]._super;
  Val x162 = x144[17]._super;
  Val x163 = x144[18]._super;
  Val x164 = x144[19]._super;
  Val x165 = x144[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:280)
  Val x166 =
      ((((((x145 + (x146 * Val(2))) + (x147 * Val(4))) + (x148 * Val(8))) + (x149 * Val(16))) +
        (x150 * Val(32))) +
       (x151 * Val(64)));
  Val x167 = ((((((x166 + (x152 * Val(128))) + (x153 * Val(256))) + (x154 * Val(512))) +
                (x155 * Val(1024))) +
               (x156 * Val(2048))) +
              (x157 * Val(4096)));
  Val x168 = ((((((x167 + (x158 * Val(8192))) + (x159 * Val(16384))) + (x160 * Val(32768))) +
                (x161 * Val(65536))) +
               (x162 * Val(131072))) +
              (x163 * Val(262144)));
  EQZ((((x168 + (x164 * Val(524288))) + (x165 * Val(1048576))) - x142),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:280)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:287)
  RetTupleStruct x169 =
      exec_RetTuple(ctx,
                    Val22Array{x165, x90,  x91,  x92,  x93,  x94,  x95,  x96,  x97,  x98,  x99,
                               x100, x101, x102, x103, x104, x105, x106, x107, x108, x109, x110},
                    Val22Array{x111, x118, x119, x120, x121, x122, x123, x124, x125, x126, x127,
                               x128, x129, x130, x131, x132, x133, x134, x135, x136, x137, Val(0)},
                    Val22Array{x138, x145, x146, x147, x148, x149, x150, x151, x152, x153, x154,
                               x155, x156, x157, x158, x159, x160, x161, x162, x163, x164, Val(0)},
                    Val24Array{x8,  x9,  x10, x11, x12, x13, x14, x15, x16, x17, x18,    x19,
                               x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, Val(0), Val(0)},
                    Val22Array{x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46,
                               x47, x48, x49, x50, x51, x52, x53, x54, x55, x56, Val(0)},
                    Val22Array{x63, x64, x65, x66, x67, x68, x69, x70, x71, x72, x73,
                               x74, x75, x76, x77, x78, x79, x80, x81, x82, x83, Val(0)},
                    Val(7),
                    Val(7),
                    x3.rnd._super,
                    x3.blk._super,
                    x3.midx._super,
                    LAYOUT_LOOKUP(layout2, _super));
  return x169;
}
RetTupleStruct execRhoMinor1_4__2_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<RhoMinor1_4__2_Layout> layout2) {
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:341)
  BoundLayout<RhoMinor1_4__2__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:292)
  RetTupleStruct x4 = back_RetTuple(ctx, 8, arg1);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  RetTupleStruct x5 = back_RetTuple(ctx, 1, arg1);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:292)
  NondetRegStruct22Array x6 = x4.arrB;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:297)
  Val x7 = x6[20]._super;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:304)
  ToBits_22_Struct x8 = exec_ToBits_22_(ctx, x7, LAYOUT_LOOKUP(layout2, unpackXy1));
  NondetRegStruct22Array x9 = x8._super;
  Val x10 = x9[0]._super;
  Val x11 = x9[1]._super;
  Val x12 = x9[2]._super;
  Val x13 = x9[3]._super;
  Val x14 = x9[4]._super;
  Val x15 = x9[5]._super;
  Val x16 = x9[6]._super;
  Val x17 = x9[7]._super;
  Val x18 = x9[8]._super;
  Val x19 = x9[9]._super;
  Val x20 = x9[10]._super;
  Val x21 = x9[11]._super;
  Val x22 = x9[12]._super;
  Val x23 = x9[13]._super;
  Val x24 = x9[14]._super;
  Val x25 = x9[15]._super;
  Val x26 = x9[16]._super;
  Val x27 = x9[17]._super;
  Val x28 = x9[18]._super;
  Val x29 = x9[19]._super;
  Val x30 = x9[20]._super;
  Val x31 = x9[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:305)
  Val x32 = ((((((x10 + (x11 * Val(2))) + (x12 * Val(4))) + (x13 * Val(8))) + (x14 * Val(16))) +
              (x15 * Val(32))) +
             (x16 * Val(64)));
  Val x33 =
      ((((((x32 + (x17 * Val(128))) + (x18 * Val(256))) + (x19 * Val(512))) + (x20 * Val(1024))) +
        (x21 * Val(2048))) +
       (x22 * Val(4096)));
  Val x34 = ((((((x33 + (x23 * Val(8192))) + (x24 * Val(16384))) + (x25 * Val(32768))) +
               (x26 * Val(65536))) +
              (x27 * Val(131072))) +
             (x28 * Val(262144)));
  EQZ(((((x34 + (x29 * Val(524288))) + (x30 * Val(1048576))) + (x31 * Val(2097152))) - x7),
      "rho_minor1(zirgen/circuit/keccak/keccak.zir:305)");
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:309)
  Val x35 = x6[21]._super;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:316)
  ToBits_21_Struct x36 = exec_ToBits_21_(ctx, x35, LAYOUT_LOOKUP(layout2, unpackXy2));
  NondetRegStruct21Array x37 = x36._super;
  Val x38 = x37[0]._super;
  Val x39 = x37[1]._super;
  Val x40 = x37[2]._super;
  Val x41 = x37[3]._super;
  Val x42 = x37[4]._super;
  Val x43 = x37[5]._super;
  Val x44 = x37[6]._super;
  Val x45 = x37[7]._super;
  Val x46 = x37[8]._super;
  Val x47 = x37[9]._super;
  Val x48 = x37[10]._super;
  Val x49 = x37[11]._super;
  Val x50 = x37[12]._super;
  Val x51 = x37[13]._super;
  Val x52 = x37[14]._super;
  Val x53 = x37[15]._super;
  Val x54 = x37[16]._super;
  Val x55 = x37[17]._super;
  Val x56 = x37[18]._super;
  Val x57 = x37[19]._super;
  Val x58 = x37[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:317)
  Val x59 = ((((((x38 + (x39 * Val(2))) + (x40 * Val(4))) + (x41 * Val(8))) + (x42 * Val(16))) +
              (x43 * Val(32))) +
             (x44 * Val(64)));
  Val x60 =
      ((((((x59 + (x45 * Val(128))) + (x46 * Val(256))) + (x47 * Val(512))) + (x48 * Val(1024))) +
        (x49 * Val(2048))) +
       (x50 * Val(4096)));
  Val x61 = ((((((x60 + (x51 * Val(8192))) + (x52 * Val(16384))) + (x53 * Val(32768))) +
               (x54 * Val(65536))) +
              (x55 * Val(131072))) +
             (x56 * Val(262144)));
  EQZ((((x61 + (x57 * Val(524288))) + (x58 * Val(1048576))) - x35),
      "rho_minor1(zirgen/circuit/keccak/keccak.zir:317)");
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:321)
  Val x62 = x4.arrC[0]._super;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:328)
  ToBits_21_Struct x63 = exec_ToBits_21_(ctx, x62, LAYOUT_LOOKUP(layout2, unpackXy3));
  NondetRegStruct21Array x64 = x63._super;
  Val x65 = x64[0]._super;
  Val x66 = x64[1]._super;
  Val x67 = x64[2]._super;
  Val x68 = x64[3]._super;
  Val x69 = x64[4]._super;
  Val x70 = x64[5]._super;
  Val x71 = x64[6]._super;
  Val x72 = x64[7]._super;
  Val x73 = x64[8]._super;
  Val x74 = x64[9]._super;
  Val x75 = x64[10]._super;
  Val x76 = x64[11]._super;
  Val x77 = x64[12]._super;
  Val x78 = x64[13]._super;
  Val x79 = x64[14]._super;
  Val x80 = x64[15]._super;
  Val x81 = x64[16]._super;
  Val x82 = x64[17]._super;
  Val x83 = x64[18]._super;
  Val x84 = x64[19]._super;
  Val x85 = x64[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:329)
  Val x86 = ((((((x65 + (x66 * Val(2))) + (x67 * Val(4))) + (x68 * Val(8))) + (x69 * Val(16))) +
              (x70 * Val(32))) +
             (x71 * Val(64)));
  Val x87 =
      ((((((x86 + (x72 * Val(128))) + (x73 * Val(256))) + (x74 * Val(512))) + (x75 * Val(1024))) +
        (x76 * Val(2048))) +
       (x77 * Val(4096)));
  Val x88 = ((((((x87 + (x78 * Val(8192))) + (x79 * Val(16384))) + (x80 * Val(32768))) +
               (x81 * Val(65536))) +
              (x82 * Val(131072))) +
             (x83 * Val(262144)));
  EQZ((((x88 + (x84 * Val(524288))) + (x85 * Val(1048576))) - x62),
      "rho_minor1(zirgen/circuit/keccak/keccak.zir:329)");
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  NondetRegStruct22Array x89 = x5.arrA;
  NondetRegStruct24Array x90 = x5.arrD;
  Val x91 = x89[0]._super;
  Val x92 = x90[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x93 = ((x10 * x91) + ((Val(1) - x10) * (Val(1) - x91)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x94 = x89[1]._super;
  Val x95 = x90[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x96 = ((x11 * x94) + ((Val(1) - x11) * (Val(1) - x94)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x97 = x89[2]._super;
  Val x98 = x90[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x99 = ((x12 * x97) + ((Val(1) - x12) * (Val(1) - x97)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x100 = x89[3]._super;
  Val x101 = x90[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x102 = ((x13 * x100) + ((Val(1) - x13) * (Val(1) - x100)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x103 = x89[4]._super;
  Val x104 = x90[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x105 = ((x14 * x103) + ((Val(1) - x14) * (Val(1) - x103)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x106 = x89[5]._super;
  Val x107 = x90[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x108 = ((x15 * x106) + ((Val(1) - x15) * (Val(1) - x106)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x109 = x89[6]._super;
  Val x110 = x90[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x111 = ((x16 * x109) + ((Val(1) - x16) * (Val(1) - x109)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x112 = x89[7]._super;
  Val x113 = x90[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x114 = ((x17 * x112) + ((Val(1) - x17) * (Val(1) - x112)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x115 = x89[8]._super;
  Val x116 = x90[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x117 = ((x18 * x115) + ((Val(1) - x18) * (Val(1) - x115)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x118 = x89[9]._super;
  Val x119 = x90[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x120 = ((x19 * x118) + ((Val(1) - x19) * (Val(1) - x118)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x121 = x89[10]._super;
  Val x122 = x90[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x123 = ((x20 * x121) + ((Val(1) - x20) * (Val(1) - x121)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x124 = x89[11]._super;
  Val x125 = x90[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x126 = ((x21 * x124) + ((Val(1) - x21) * (Val(1) - x124)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x127 = x89[12]._super;
  Val x128 = x90[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x129 = ((x22 * x127) + ((Val(1) - x22) * (Val(1) - x127)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x130 = x89[13]._super;
  Val x131 = x90[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x132 = ((x23 * x130) + ((Val(1) - x23) * (Val(1) - x130)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x133 = x89[14]._super;
  Val x134 = x90[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x135 = ((x24 * x133) + ((Val(1) - x24) * (Val(1) - x133)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x136 = x89[15]._super;
  Val x137 = x90[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x138 = ((x25 * x136) + ((Val(1) - x25) * (Val(1) - x136)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x139 = x89[16]._super;
  Val x140 = x90[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x141 = ((x26 * x139) + ((Val(1) - x26) * (Val(1) - x139)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x142 = x89[17]._super;
  Val x143 = x90[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x144 = ((x27 * x142) + ((Val(1) - x27) * (Val(1) - x142)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x145 = x89[18]._super;
  Val x146 = x90[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x147 = ((x28 * x145) + ((Val(1) - x28) * (Val(1) - x145)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x148 = x89[19]._super;
  Val x149 = x90[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x150 = ((x29 * x148) + ((Val(1) - x29) * (Val(1) - x148)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x151 = x89[20]._super;
  Val x152 = x90[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x153 = ((x30 * x151) + ((Val(1) - x30) * (Val(1) - x151)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x154 = x89[21]._super;
  Val x155 = x90[21]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x156 = ((x31 * x154) + ((Val(1) - x31) * (Val(1) - x154)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  NondetRegStruct22Array x157 = x5.arrB;
  NondetRegStruct22Array x158 = x5.arrE;
  Val x159 = x157[0]._super;
  Val x160 = x158[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x161 = ((x38 * x159) + ((Val(1) - x38) * (Val(1) - x159)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x162 = x157[1]._super;
  Val x163 = x158[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x164 = ((x39 * x162) + ((Val(1) - x39) * (Val(1) - x162)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x165 = x157[2]._super;
  Val x166 = x158[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x167 = ((x40 * x165) + ((Val(1) - x40) * (Val(1) - x165)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x168 = x157[3]._super;
  Val x169 = x158[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x170 = ((x41 * x168) + ((Val(1) - x41) * (Val(1) - x168)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x171 = x157[4]._super;
  Val x172 = x158[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x173 = ((x42 * x171) + ((Val(1) - x42) * (Val(1) - x171)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x174 = x157[5]._super;
  Val x175 = x158[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x176 = ((x43 * x174) + ((Val(1) - x43) * (Val(1) - x174)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x177 = x157[6]._super;
  Val x178 = x158[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x179 = ((x44 * x177) + ((Val(1) - x44) * (Val(1) - x177)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x180 = x157[7]._super;
  Val x181 = x158[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x182 = ((x45 * x180) + ((Val(1) - x45) * (Val(1) - x180)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x183 = x157[8]._super;
  Val x184 = x158[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x185 = ((x46 * x183) + ((Val(1) - x46) * (Val(1) - x183)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x186 = x157[9]._super;
  Val x187 = x158[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x188 = ((x47 * x186) + ((Val(1) - x47) * (Val(1) - x186)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x189 = x157[10]._super;
  Val x190 = x158[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x191 = ((x48 * x189) + ((Val(1) - x48) * (Val(1) - x189)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x192 = x157[11]._super;
  Val x193 = x158[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x194 = ((x49 * x192) + ((Val(1) - x49) * (Val(1) - x192)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x195 = x157[12]._super;
  Val x196 = x158[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x197 = ((x50 * x195) + ((Val(1) - x50) * (Val(1) - x195)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x198 = x157[13]._super;
  Val x199 = x158[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x200 = ((x51 * x198) + ((Val(1) - x51) * (Val(1) - x198)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x201 = x157[14]._super;
  Val x202 = x158[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x203 = ((x52 * x201) + ((Val(1) - x52) * (Val(1) - x201)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x204 = x157[15]._super;
  Val x205 = x158[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x206 = ((x53 * x204) + ((Val(1) - x53) * (Val(1) - x204)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x207 = x157[16]._super;
  Val x208 = x158[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x209 = ((x54 * x207) + ((Val(1) - x54) * (Val(1) - x207)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x210 = x157[17]._super;
  Val x211 = x158[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x212 = ((x55 * x210) + ((Val(1) - x55) * (Val(1) - x210)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x213 = x157[18]._super;
  Val x214 = x158[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x215 = ((x56 * x213) + ((Val(1) - x56) * (Val(1) - x213)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x216 = x157[19]._super;
  Val x217 = x158[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x218 = ((x57 * x216) + ((Val(1) - x57) * (Val(1) - x216)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x219 = x157[20]._super;
  Val x220 = x158[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x221 = ((x58 * x219) + ((Val(1) - x58) * (Val(1) - x219)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  NondetRegStruct22Array x222 = x5.arrC;
  NondetRegStruct22Array x223 = x5.arrF;
  Val x224 = x222[0]._super;
  Val x225 = x223[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x226 = ((x65 * x224) + ((Val(1) - x65) * (Val(1) - x224)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x227 = x222[1]._super;
  Val x228 = x223[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x229 = ((x66 * x227) + ((Val(1) - x66) * (Val(1) - x227)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x230 = x222[2]._super;
  Val x231 = x223[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x232 = ((x67 * x230) + ((Val(1) - x67) * (Val(1) - x230)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x233 = x222[3]._super;
  Val x234 = x223[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x235 = ((x68 * x233) + ((Val(1) - x68) * (Val(1) - x233)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x236 = x222[4]._super;
  Val x237 = x223[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x238 = ((x69 * x236) + ((Val(1) - x69) * (Val(1) - x236)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x239 = x222[5]._super;
  Val x240 = x223[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x241 = ((x70 * x239) + ((Val(1) - x70) * (Val(1) - x239)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x242 = x222[6]._super;
  Val x243 = x223[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x244 = ((x71 * x242) + ((Val(1) - x71) * (Val(1) - x242)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x245 = x222[7]._super;
  Val x246 = x223[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x247 = ((x72 * x245) + ((Val(1) - x72) * (Val(1) - x245)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x248 = x222[8]._super;
  Val x249 = x223[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x250 = ((x73 * x248) + ((Val(1) - x73) * (Val(1) - x248)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x251 = x222[9]._super;
  Val x252 = x223[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x253 = ((x74 * x251) + ((Val(1) - x74) * (Val(1) - x251)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x254 = x222[10]._super;
  Val x255 = x223[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x256 = ((x75 * x254) + ((Val(1) - x75) * (Val(1) - x254)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x257 = x222[11]._super;
  Val x258 = x223[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x259 = ((x76 * x257) + ((Val(1) - x76) * (Val(1) - x257)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x260 = x222[12]._super;
  Val x261 = x223[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x262 = ((x77 * x260) + ((Val(1) - x77) * (Val(1) - x260)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x263 = x222[13]._super;
  Val x264 = x223[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x265 = ((x78 * x263) + ((Val(1) - x78) * (Val(1) - x263)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x266 = x222[14]._super;
  Val x267 = x223[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x268 = ((x79 * x266) + ((Val(1) - x79) * (Val(1) - x266)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x269 = x222[15]._super;
  Val x270 = x223[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x271 = ((x80 * x269) + ((Val(1) - x80) * (Val(1) - x269)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x272 = x222[16]._super;
  Val x273 = x223[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x274 = ((x81 * x272) + ((Val(1) - x81) * (Val(1) - x272)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x275 = x222[17]._super;
  Val x276 = x223[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x277 = ((x82 * x275) + ((Val(1) - x82) * (Val(1) - x275)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x278 = x222[18]._super;
  Val x279 = x223[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x280 = ((x83 * x278) + ((Val(1) - x83) * (Val(1) - x278)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x281 = x222[19]._super;
  Val x282 = x223[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x283 = ((x84 * x281) + ((Val(1) - x84) * (Val(1) - x281)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x284 = x222[20]._super;
  Val x285 = x223[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x286 = ((x85 * x284) + ((Val(1) - x85) * (Val(1) - x284)));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:336)
  Val x287 = (((x170 * x169) + ((Val(1) - x170) * (Val(1) - x169))) +
              (((x173 * x172) + ((Val(1) - x173) * (Val(1) - x172))) * Val(2)));
  Val x288 = ((x287 + (((x176 * x175) + ((Val(1) - x176) * (Val(1) - x175))) * Val(4))) +
              (((x179 * x178) + ((Val(1) - x179) * (Val(1) - x178))) * Val(8)));
  Val x289 = ((x288 + (((x182 * x181) + ((Val(1) - x182) * (Val(1) - x181))) * Val(16))) +
              (((x185 * x184) + ((Val(1) - x185) * (Val(1) - x184))) * Val(32)));
  Val x290 = ((x289 + (((x188 * x187) + ((Val(1) - x188) * (Val(1) - x187))) * Val(64))) +
              (((x191 * x190) + ((Val(1) - x191) * (Val(1) - x190))) * Val(128)));
  Val x291 = ((x290 + (((x194 * x193) + ((Val(1) - x194) * (Val(1) - x193))) * Val(256))) +
              (((x197 * x196) + ((Val(1) - x197) * (Val(1) - x196))) * Val(512)));
  Val x292 = ((x291 + (((x200 * x199) + ((Val(1) - x200) * (Val(1) - x199))) * Val(1024))) +
              (((x203 * x202) + ((Val(1) - x203) * (Val(1) - x202))) * Val(2048)));
  Val x293 = ((x292 + (((x206 * x205) + ((Val(1) - x206) * (Val(1) - x205))) * Val(4096))) +
              (((x209 * x208) + ((Val(1) - x209) * (Val(1) - x208))) * Val(8192)));
  Val x294 = ((x293 + (((x212 * x211) + ((Val(1) - x212) * (Val(1) - x211))) * Val(16384))) +
              (((x215 * x214) + ((Val(1) - x215) * (Val(1) - x214))) * Val(32768)));
  Val x295 = ((x294 + (((x218 * x217) + ((Val(1) - x218) * (Val(1) - x217))) * Val(65536))) +
              (((x221 * x220) + ((Val(1) - x221) * (Val(1) - x220))) * Val(131072)));
  Val x296 = ((x295 + (((x226 * x225) + ((Val(1) - x226) * (Val(1) - x225))) * Val(262144))) +
              (((x229 * x228) + ((Val(1) - x229) * (Val(1) - x228))) * Val(524288)));
  Val x297 = ((x296 + (((x232 * x231) + ((Val(1) - x232) * (Val(1) - x231))) * Val(1048576))) +
              (((x235 * x234) + ((Val(1) - x235) * (Val(1) - x234))) * Val(2097152)));
  NondetRegStruct x298 = exec_Reg(ctx, x297, LAYOUT_LOOKUP(layout2, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:337)
  Val x299 = (((x238 * x237) + ((Val(1) - x238) * (Val(1) - x237))) +
              (((x241 * x240) + ((Val(1) - x241) * (Val(1) - x240))) * Val(2)));
  Val x300 = ((x299 + (((x244 * x243) + ((Val(1) - x244) * (Val(1) - x243))) * Val(4))) +
              (((x247 * x246) + ((Val(1) - x247) * (Val(1) - x246))) * Val(8)));
  Val x301 = ((x300 + (((x250 * x249) + ((Val(1) - x250) * (Val(1) - x249))) * Val(16))) +
              (((x253 * x252) + ((Val(1) - x253) * (Val(1) - x252))) * Val(32)));
  Val x302 = ((x301 + (((x256 * x255) + ((Val(1) - x256) * (Val(1) - x255))) * Val(64))) +
              (((x259 * x258) + ((Val(1) - x259) * (Val(1) - x258))) * Val(128)));
  Val x303 = ((x302 + (((x262 * x261) + ((Val(1) - x262) * (Val(1) - x261))) * Val(256))) +
              (((x265 * x264) + ((Val(1) - x265) * (Val(1) - x264))) * Val(512)));
  Val x304 = ((x303 + (((x268 * x267) + ((Val(1) - x268) * (Val(1) - x267))) * Val(1024))) +
              (((x271 * x270) + ((Val(1) - x271) * (Val(1) - x270))) * Val(2048)));
  Val x305 = ((x304 + (((x274 * x273) + ((Val(1) - x274) * (Val(1) - x273))) * Val(4096))) +
              (((x277 * x276) + ((Val(1) - x277) * (Val(1) - x276))) * Val(8192)));
  Val x306 = ((x305 + (((x280 * x279) + ((Val(1) - x280) * (Val(1) - x279))) * Val(16384))) +
              (((x283 * x282) + ((Val(1) - x283) * (Val(1) - x282))) * Val(32768)));
  Val x307 = ((x306 + (((x286 * x285) + ((Val(1) - x286) * (Val(1) - x285))) * Val(65536))) +
              (((x93 * x92) + ((Val(1) - x93) * (Val(1) - x92))) * Val(131072)));
  Val x308 = ((x307 + (((x96 * x95) + ((Val(1) - x96) * (Val(1) - x95))) * Val(262144))) +
              (((x99 * x98) + ((Val(1) - x99) * (Val(1) - x98))) * Val(524288)));
  NondetRegStruct x309 =
      exec_Reg(ctx,
               (x308 + (((x102 * x101) + ((Val(1) - x102) * (Val(1) - x101))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _1));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:338)
  Val x310 = (((x105 * x104) + ((Val(1) - x105) * (Val(1) - x104))) +
              (((x108 * x107) + ((Val(1) - x108) * (Val(1) - x107))) * Val(2)));
  Val x311 = ((x310 + (((x111 * x110) + ((Val(1) - x111) * (Val(1) - x110))) * Val(4))) +
              (((x114 * x113) + ((Val(1) - x114) * (Val(1) - x113))) * Val(8)));
  Val x312 = ((x311 + (((x117 * x116) + ((Val(1) - x117) * (Val(1) - x116))) * Val(16))) +
              (((x120 * x119) + ((Val(1) - x120) * (Val(1) - x119))) * Val(32)));
  Val x313 = ((x312 + (((x123 * x122) + ((Val(1) - x123) * (Val(1) - x122))) * Val(64))) +
              (((x126 * x125) + ((Val(1) - x126) * (Val(1) - x125))) * Val(128)));
  Val x314 = ((x313 + (((x129 * x128) + ((Val(1) - x129) * (Val(1) - x128))) * Val(256))) +
              (((x132 * x131) + ((Val(1) - x132) * (Val(1) - x131))) * Val(512)));
  Val x315 = ((x314 + (((x135 * x134) + ((Val(1) - x135) * (Val(1) - x134))) * Val(1024))) +
              (((x138 * x137) + ((Val(1) - x138) * (Val(1) - x137))) * Val(2048)));
  Val x316 = ((x315 + (((x141 * x140) + ((Val(1) - x141) * (Val(1) - x140))) * Val(4096))) +
              (((x144 * x143) + ((Val(1) - x144) * (Val(1) - x143))) * Val(8192)));
  Val x317 = ((x316 + (((x147 * x146) + ((Val(1) - x147) * (Val(1) - x146))) * Val(16384))) +
              (((x150 * x149) + ((Val(1) - x150) * (Val(1) - x149))) * Val(32768)));
  Val x318 = ((x317 + (((x153 * x152) + ((Val(1) - x153) * (Val(1) - x152))) * Val(65536))) +
              (((x156 * x155) + ((Val(1) - x156) * (Val(1) - x155))) * Val(131072)));
  Val x319 = ((x318 + (((x161 * x160) + ((Val(1) - x161) * (Val(1) - x160))) * Val(262144))) +
              (((x164 * x163) + ((Val(1) - x164) * (Val(1) - x163))) * Val(524288)));
  NondetRegStruct x320 =
      exec_Reg(ctx,
               (x319 + (((x167 * x166) + ((Val(1) - x167) * (Val(1) - x166))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _2));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:341)
  BoundLayout<RhoMinor1_4__2_Arm1_SuperLayout> x321 = LAYOUT_LOOKUP(x3, arm1);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:342)
  Val22Array x322 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  Val24Array x323 = Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:339)
  Val22Array x324 =
      Val22Array{x298._super, x309._super, x320._super, Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0)};
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x325 = x5.rnd._super;
  Val x326 = x5.blk._super;
  Val x327 = x5.midx._super;
  if (to_size_t(Val(1))) {
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:342)
    RetTupleStruct x328 = exec_RetTuple(ctx,
                                        x322,
                                        x322,
                                        x322,
                                        x323,
                                        x322,
                                        x324,
                                        Val(8),
                                        Val(7),
                                        x325,
                                        x326,
                                        x327,
                                        LAYOUT_LOOKUP(x3, arm0));
  }
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:292)
  NondetRegStruct24Array x329 = x4.arrD;
  Val x330 = x329[21]._super;
  Val x331 = x329[22]._super;
  Val x332 = x329[23]._super;
  if (to_size_t(Val(0))) {
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:345)
    ToBits_22_Struct x333 = exec_ToBits_22_(ctx, x330, LAYOUT_LOOKUP(x321, unpackM1));
    NondetRegStruct22Array x334 = x333._super;
    Val x335 = x334[0]._super;
    Val x336 = x334[1]._super;
    Val x337 = x334[2]._super;
    Val x338 = x334[3]._super;
    Val x339 = x334[4]._super;
    Val x340 = x334[5]._super;
    Val x341 = x334[6]._super;
    Val x342 = x334[7]._super;
    Val x343 = x334[8]._super;
    Val x344 = x334[9]._super;
    Val x345 = x334[10]._super;
    Val x346 = x334[11]._super;
    Val x347 = x334[12]._super;
    Val x348 = x334[13]._super;
    Val x349 = x334[14]._super;
    Val x350 = x334[15]._super;
    Val x351 = x334[16]._super;
    Val x352 = x334[17]._super;
    Val x353 = x334[18]._super;
    Val x354 = x334[19]._super;
    Val x355 = x334[20]._super;
    Val x356 = x334[21]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:346)
    Val x357 =
        ((((((x335 + (x336 * Val(2))) + (x337 * Val(4))) + (x338 * Val(8))) + (x339 * Val(16))) +
          (x340 * Val(32))) +
         (x341 * Val(64)));
    Val x358 = ((((((x357 + (x342 * Val(128))) + (x343 * Val(256))) + (x344 * Val(512))) +
                  (x345 * Val(1024))) +
                 (x346 * Val(2048))) +
                (x347 * Val(4096)));
    Val x359 = ((((((x358 + (x348 * Val(8192))) + (x349 * Val(16384))) + (x350 * Val(32768))) +
                  (x351 * Val(65536))) +
                 (x352 * Val(131072))) +
                (x353 * Val(262144)));
    EQZ(((((x359 + (x354 * Val(524288))) + (x355 * Val(1048576))) + (x356 * Val(2097152))) - x330),
        "rho_minor1(zirgen/circuit/keccak/keccak.zir:346)");
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:349)
    ToBits_21_Struct x360 = exec_ToBits_21_(ctx, x331, LAYOUT_LOOKUP(x321, unpackM2));
    NondetRegStruct21Array x361 = x360._super;
    Val x362 = x361[0]._super;
    Val x363 = x361[1]._super;
    Val x364 = x361[2]._super;
    Val x365 = x361[3]._super;
    Val x366 = x361[4]._super;
    Val x367 = x361[5]._super;
    Val x368 = x361[6]._super;
    Val x369 = x361[7]._super;
    Val x370 = x361[8]._super;
    Val x371 = x361[9]._super;
    Val x372 = x361[10]._super;
    Val x373 = x361[11]._super;
    Val x374 = x361[12]._super;
    Val x375 = x361[13]._super;
    Val x376 = x361[14]._super;
    Val x377 = x361[15]._super;
    Val x378 = x361[16]._super;
    Val x379 = x361[17]._super;
    Val x380 = x361[18]._super;
    Val x381 = x361[19]._super;
    Val x382 = x361[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:350)
    Val x383 =
        ((((((x362 + (x363 * Val(2))) + (x364 * Val(4))) + (x365 * Val(8))) + (x366 * Val(16))) +
          (x367 * Val(32))) +
         (x368 * Val(64)));
    Val x384 = ((((((x383 + (x369 * Val(128))) + (x370 * Val(256))) + (x371 * Val(512))) +
                  (x372 * Val(1024))) +
                 (x373 * Val(2048))) +
                (x374 * Val(4096)));
    Val x385 = ((((((x384 + (x375 * Val(8192))) + (x376 * Val(16384))) + (x377 * Val(32768))) +
                  (x378 * Val(65536))) +
                 (x379 * Val(131072))) +
                (x380 * Val(262144)));
    EQZ((((x385 + (x381 * Val(524288))) + (x382 * Val(1048576))) - x331),
        "rho_minor1(zirgen/circuit/keccak/keccak.zir:350)");
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:354)
    ToBits_21_Struct x386 = exec_ToBits_21_(ctx, x332, LAYOUT_LOOKUP(x321, unpackM3));
    NondetRegStruct21Array x387 = x386._super;
    Val x388 = x387[0]._super;
    Val x389 = x387[1]._super;
    Val x390 = x387[2]._super;
    Val x391 = x387[3]._super;
    Val x392 = x387[4]._super;
    Val x393 = x387[5]._super;
    Val x394 = x387[6]._super;
    Val x395 = x387[7]._super;
    Val x396 = x387[8]._super;
    Val x397 = x387[9]._super;
    Val x398 = x387[10]._super;
    Val x399 = x387[11]._super;
    Val x400 = x387[12]._super;
    Val x401 = x387[13]._super;
    Val x402 = x387[14]._super;
    Val x403 = x387[15]._super;
    Val x404 = x387[16]._super;
    Val x405 = x387[17]._super;
    Val x406 = x387[18]._super;
    Val x407 = x387[19]._super;
    Val x408 = x387[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:355)
    Val x409 =
        ((((((x388 + (x389 * Val(2))) + (x390 * Val(4))) + (x391 * Val(8))) + (x392 * Val(16))) +
          (x393 * Val(32))) +
         (x394 * Val(64)));
    Val x410 = ((((((x409 + (x395 * Val(128))) + (x396 * Val(256))) + (x397 * Val(512))) +
                  (x398 * Val(1024))) +
                 (x399 * Val(2048))) +
                (x400 * Val(4096)));
    Val x411 = ((((((x410 + (x401 * Val(8192))) + (x402 * Val(16384))) + (x403 * Val(32768))) +
                  (x404 * Val(65536))) +
                 (x405 * Val(131072))) +
                (x406 * Val(262144)));
    EQZ((((x411 + (x407 * Val(524288))) + (x408 * Val(1048576))) - x332),
        "rho_minor1(zirgen/circuit/keccak/keccak.zir:355)");
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:358)
    RetTupleStruct x412 = exec_RetTuple(
        ctx,
        Val22Array{x335, x336, x337, x338, x339, x340, x341, x342, x343, x344, x345,
                   x346, x347, x348, x349, x350, x351, x352, x353, x354, x355, x356},
        Val22Array{x362, x363, x364, x365, x366, x367, x368, x369, x370, x371, x372,
                   x373, x374, x375, x376, x377, x378, x379, x380, x381, x382, Val(0)},
        Val22Array{x388, x389, x390, x391, x392, x393, x394, x395, x396, x397, x398,
                   x399, x400, x401, x402, x403, x404, x405, x406, x407, x408, Val(0)},
        x323,
        x322,
        x324,
        Val(8),
        Val(7),
        x325,
        x326,
        x327,
        LAYOUT_LOOKUP(x321, _super));
  }
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:341)
  RetTupleStruct x413 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x413;
}
RetTupleStruct execRhoMinor3_2_(ExecContext& ctx,
                                RetTupleStruct arg0,
                                BoundLayout<RetTupleLayout> arg1,
                                BoundLayout<RhoMinor3_2__SuperLayout> layout2) {
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:432)
  RetTupleStruct x3 = back_RetTuple(ctx, 1, arg1);
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:433)
  RetTupleStruct x4 = back_RetTuple(ctx, 3, arg1);
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:434)
  RetTupleStruct x5 = back_RetTuple(ctx, 4, arg1);
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:435)
  RetTupleStruct x6 = back_RetTuple(ctx, 6, arg1);
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:436)
  RetTupleStruct x7 = back_RetTuple(ctx, 7, arg1);
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:437)
  RetTupleStruct x8 = back_RetTuple(ctx, 9, arg1);
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:439)
  BoundLayout<RhoMinor3_2_Arm1_SuperLayout> x9 = LAYOUT_LOOKUP(layout2, arm1);
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:436)
  NondetRegStruct22Array x10 = x7.arrF;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:435)
  NondetRegStruct22Array x11 = x6.arrF;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:444)
  Val x12 = x10[0]._super;
  Val x13 = x10[1]._super;
  Val x14 = x10[2]._super;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:445)
  Val x15 = x11[0]._super;
  Val x16 = x11[1]._super;
  Val x17 = x11[2]._super;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:434)
  NondetRegStruct22Array x18 = x5.arrF;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:446)
  Val x19 = x18[0]._super;
  Val x20 = x18[1]._super;
  Val x21 = x18[2]._super;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:433)
  NondetRegStruct22Array x22 = x4.arrF;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:447)
  Val x23 = x22[0]._super;
  Val x24 = x22[1]._super;
  Val x25 = x22[2]._super;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:432)
  NondetRegStruct22Array x26 = x3.arrF;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:448)
  Val x27 = x26[0]._super;
  Val x28 = x26[1]._super;
  Val x29 = x26[2]._super;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:437)
  NondetRegStruct22Array x30 = x8.arrA;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:449)
  Val x31 = x30[15]._super;
  Val x32 = x30[16]._super;
  Val x33 = x30[17]._super;
  Val x34 = x30[18]._super;
  Val x35 = x30[19]._super;
  Val x36 = x30[20]._super;
  Val x37 = x30[21]._super;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:437)
  NondetRegStruct22Array x38 = x8.arrB;
  NondetRegStruct22Array x39 = x8.arrC;
  NondetRegStruct24Array x40 = x8.arrD;
  Val x41 = x38[0]._super;
  Val x42 = x38[1]._super;
  Val x43 = x38[2]._super;
  Val x44 = x38[3]._super;
  Val x45 = x38[4]._super;
  Val x46 = x38[5]._super;
  Val x47 = x38[6]._super;
  Val x48 = x38[7]._super;
  Val x49 = x38[8]._super;
  Val x50 = x38[9]._super;
  Val x51 = x38[10]._super;
  Val x52 = x38[11]._super;
  Val x53 = x38[12]._super;
  Val x54 = x38[13]._super;
  Val x55 = x38[14]._super;
  Val x56 = x38[15]._super;
  Val x57 = x38[16]._super;
  Val x58 = x38[17]._super;
  Val x59 = x38[18]._super;
  Val x60 = x38[19]._super;
  Val x61 = x38[20]._super;
  Val x62 = x38[21]._super;
  Val22Array x63 = Val22Array{x41, x42, x43, x44, x45, x46, x47, x48, x49, x50, x51,
                              x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62};
  Val x64 = x39[0]._super;
  Val x65 = x39[1]._super;
  Val x66 = x39[2]._super;
  Val x67 = x39[3]._super;
  Val x68 = x39[4]._super;
  Val x69 = x39[5]._super;
  Val x70 = x39[6]._super;
  Val x71 = x39[7]._super;
  Val x72 = x39[8]._super;
  Val x73 = x39[9]._super;
  Val x74 = x39[10]._super;
  Val x75 = x39[11]._super;
  Val x76 = x39[12]._super;
  Val x77 = x39[13]._super;
  Val x78 = x39[14]._super;
  Val x79 = x39[15]._super;
  Val x80 = x39[16]._super;
  Val x81 = x39[17]._super;
  Val x82 = x39[18]._super;
  Val x83 = x39[19]._super;
  Val x84 = x39[20]._super;
  Val x85 = x39[21]._super;
  Val22Array x86 = Val22Array{x64, x65, x66, x67, x68, x69, x70, x71, x72, x73, x74,
                              x75, x76, x77, x78, x79, x80, x81, x82, x83, x84, x85};
  Val24Array x87 =
      Val24Array{x40[0]._super,  x40[1]._super,  x40[2]._super,  x40[3]._super,  x40[4]._super,
                 x40[5]._super,  x40[6]._super,  x40[7]._super,  x40[8]._super,  x40[9]._super,
                 x40[10]._super, x40[11]._super, x40[12]._super, x40[13]._super, x40[14]._super,
                 x40[15]._super, x40[16]._super, x40[17]._super, x40[18]._super, x40[19]._super,
                 x40[20]._super, x40[21]._super, x40[22]._super, x40[23]._super};
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:451)
  Val22Array x88 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:432)
  Val x89 = x3.rnd._super;
  Val x90 = x3.blk._super;
  Val x91 = x3.midx._super;
  if (to_size_t(Val(0))) {
    // rho_minor3(zirgen/circuit/keccak/keccak.zir:450)
    RetTupleStruct x92 =
        exec_RetTuple(ctx,
                      Val22Array{x12, x13, x14, x15, x16, x17, x19, x20, x21, x23, x24,
                                 x25, x27, x28, x29, x31, x32, x33, x34, x35, x36, x37},
                      x63,
                      x86,
                      x87,
                      x88,
                      x88,
                      Val(0),
                      Val(6),
                      x89,
                      x90,
                      x91,
                      LAYOUT_LOOKUP(layout2, arm0));
  }
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:453)
  BoundLayout<RhoMinor3_2_Arm1Arm1_SuperLayout> x93 = LAYOUT_LOOKUP(x9, arm1);
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:457)
  Val x94 = x30[0]._super;
  Val x95 = x30[1]._super;
  Val x96 = x30[2]._super;
  Val x97 = x30[3]._super;
  Val x98 = x30[4]._super;
  Val x99 = x30[5]._super;
  Val x100 = x30[6]._super;
  Val x101 = x30[7]._super;
  Val x102 = x30[8]._super;
  Val x103 = x30[9]._super;
  Val x104 = x30[10]._super;
  Val x105 = x30[11]._super;
  Val x106 = x30[12]._super;
  Val x107 = x30[13]._super;
  Val x108 = x30[14]._super;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:465)
  BoundLayout<RhoMinor3_2_Arm1Arm1Arm1_SuperLayout> x109 = LAYOUT_LOOKUP(x93, arm1);
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:437)
  Val22Array x110 = Val22Array{x94,  x95,  x96,  x97,  x98, x99, x100, x101, x102, x103, x104,
                               x105, x106, x107, x108, x31, x32, x33,  x34,  x35,  x36,  x37};
  if (to_size_t(Val(1))) {
    if (to_size_t(Val(0))) {
      // rho_minor3(zirgen/circuit/keccak/keccak.zir:462)
      RetTupleStruct x111 =
          exec_RetTuple(ctx,
                        Val22Array{x94,  x95,  x96,  x97,  x98, x99, x100, x101, x102, x103, x104,
                                   x105, x106, x107, x108, x12, x13, x14,  x15,  x16,  x17,  x19},
                        Val22Array{x20, x21, x23, x24, x25, x27, x28, x29, x49, x50, x51,
                                   x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62},
                        x86,
                        x87,
                        x88,
                        x88,
                        Val(0),
                        Val(7),
                        x89,
                        x90,
                        x91,
                        LAYOUT_LOOKUP(x9, arm0));
    }
    if (to_size_t(Val(1))) {
      if (to_size_t(Val(1))) {
        // rho_minor3(zirgen/circuit/keccak/keccak.zir:474)
        RetTupleStruct x112 =
            exec_RetTuple(ctx,
                          x110,
                          Val22Array{x41, x42, x43, x44, x45, x46, x47, x48, x12, x13, x14,
                                     x15, x16, x17, x19, x20, x21, x23, x24, x25, x27, x28},
                          Val22Array{x29, x65, x66, x67, x68, x69, x70, x71, x72, x73, x74,
                                     x75, x76, x77, x78, x79, x80, x81, x82, x83, x84, x85},
                          x87,
                          x88,
                          x88,
                          Val(0),
                          Val(8),
                          x89,
                          x90,
                          x91,
                          LAYOUT_LOOKUP(x93, arm0));
      }
      if (to_size_t(Val(0))) {
        if (to_size_t(Val(0))) {
          // rho_minor3(zirgen/circuit/keccak/keccak.zir:485)
          RetTupleStruct x113 =
              exec_RetTuple(ctx,
                            x110,
                            x63,
                            Val22Array{x64, x12, x13, x14, x15, x16, x17, x19, x20, x21, x23,
                                       x24, x25, x27, x28, x29, x80, x81, x82, x83, x84, x85},
                            x87,
                            x88,
                            x88,
                            Val(0),
                            Val(9),
                            x89,
                            x90,
                            x91,
                            LAYOUT_LOOKUP(x109, arm0));
        }
        if (to_size_t(Val(1))) {
          // rho_minor3(zirgen/circuit/keccak/keccak.zir:522)
          RetTupleStruct x114 = exec_RetTuple(
              ctx,
              Val22Array{x94, x95, x96, x34, x35,  x36,  x55,  x56, x57, x74, x75,
                         x76, x27, x28, x29, x103, x104, x105, x46, x47, x48, x49},
              Val22Array{x50, x51, x68, x69, x70, x19, x20, x21, x97, x98, x99,
                         x37, x41, x42, x58, x59, x60, x77, x78, x79, x12, x13},
              Val22Array{x14, x106, x107, x108, x31, x32,  x33,  x52,  x53, x54, x71,
                         x72, x73,  x23,  x24,  x25, x100, x101, x102, x43, x44, x45},
              Val24Array{x61,    x62,    x64,    x65,    x66,    x67,    x15,    x16,
                         x17,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                         Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
              x88,
              x88,
              Val(0),
              Val(10),
              x89,
              x90,
              x91,
              LAYOUT_LOOKUP(x109, arm1));
        }
        // rho_minor3(zirgen/circuit/keccak/keccak.zir:477)
        RetTupleStruct x115 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x109, _super));
      }
      // rho_minor3(zirgen/circuit/keccak/keccak.zir:465)
      RetTupleStruct x116 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x93, _super));
    }
    // rho_minor3(zirgen/circuit/keccak/keccak.zir:453)
    RetTupleStruct x117 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x9, _super));
  }
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:439)
  RetTupleStruct x118 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(layout2, _super));
  return x118;
}
RetTupleStruct execRhoMajor_2_(ExecContext& ctx,
                               RetTupleStruct arg0,
                               BoundLayout<RetTupleLayout> arg1,
                               BoundLayout<RhoMajor_2_Layout> layout2) {
  // rho_major(zirgen/circuit/keccak/keccak.zir:529)
  BoundLayout<RhoMajor_2__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // rho_major(zirgen/circuit/keccak/keccak.zir:528)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  OneHot_9_Struct x5 = exec_OneHot_9_(ctx, x4.minor._super, LAYOUT_LOOKUP(layout2, minorOnehot));
  NondetRegStruct9Array x6 = x5._super;
  if (to_size_t(x6[0]._super)) {
    // rho_major(zirgen/circuit/keccak/keccak.zir:530)
    RetTupleStruct x7 = execRhoMinor0_0__2_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm0));
  }
  if (to_size_t(x6[1]._super)) {
    // rho_major(zirgen/circuit/keccak/keccak.zir:531)
    RetTupleStruct x8 = execRhoMinor1_0__2_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm1));
  }
  if (to_size_t(x6[2]._super)) {
    // rho_major(zirgen/circuit/keccak/keccak.zir:532)
    RetTupleStruct x9 = execRhoMinor2_0__2_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm2));
  }
  if (to_size_t(x6[3]._super)) {
    // rho_major(zirgen/circuit/keccak/keccak.zir:533)
    RetTupleStruct x10 = execRhoMinor0_2__2_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm3));
  }
  if (to_size_t(x6[4]._super)) {
    // rho_major(zirgen/circuit/keccak/keccak.zir:534)
    RetTupleStruct x11 = execRhoMinor1_2__2_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm4));
  }
  if (to_size_t(x6[5]._super)) {
    // rho_major(zirgen/circuit/keccak/keccak.zir:535)
    RetTupleStruct x12 = execRhoMinor2_2__2_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm5));
  }
  if (to_size_t(x6[6]._super)) {
    // rho_major(zirgen/circuit/keccak/keccak.zir:536)
    RetTupleStruct x13 = execRhoMinor0_4__2_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm6));
  }
  if (to_size_t(x6[7]._super)) {
    // rho_major(zirgen/circuit/keccak/keccak.zir:537)
    RetTupleStruct x14 = execRhoMinor1_4__2_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm7));
  }
  if (to_size_t(x6[8]._super)) {
    // rho_major(zirgen/circuit/keccak/keccak.zir:538)
    RetTupleStruct x15 = execRhoMinor3_2_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm8));
  }
  // rho_major(zirgen/circuit/keccak/keccak.zir:529)
  RetTupleStruct x16 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x16;
}
RetTupleStruct execRhoMinor0_0__3_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<RhoMinor0_0__3_Layout> layout2) {
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  RetTupleStruct x3 = back_RetTuple(ctx, 1, arg1);
  NondetRegStruct24Array x4 = x3.arrD;
  Val x5 = x4[21]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:257)
  ToBits_22_Struct x6 = exec_ToBits_22_(ctx, x5, LAYOUT_LOOKUP(layout2, unpackM1));
  NondetRegStruct22Array x7 = x6._super;
  Val x8 = x7[0]._super;
  Val x9 = x7[1]._super;
  Val x10 = x7[2]._super;
  Val x11 = x7[3]._super;
  Val x12 = x7[4]._super;
  Val x13 = x7[5]._super;
  Val x14 = x7[6]._super;
  Val x15 = x7[7]._super;
  Val x16 = x7[8]._super;
  Val x17 = x7[9]._super;
  Val x18 = x7[10]._super;
  Val x19 = x7[11]._super;
  Val x20 = x7[12]._super;
  Val x21 = x7[13]._super;
  Val x22 = x7[14]._super;
  Val x23 = x7[15]._super;
  Val x24 = x7[16]._super;
  Val x25 = x7[17]._super;
  Val x26 = x7[18]._super;
  Val x27 = x7[19]._super;
  Val x28 = x7[20]._super;
  Val x29 = x7[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:258)
  Val x30 = ((((((x8 + (x9 * Val(2))) + (x10 * Val(4))) + (x11 * Val(8))) + (x12 * Val(16))) +
              (x13 * Val(32))) +
             (x14 * Val(64)));
  Val x31 =
      ((((((x30 + (x15 * Val(128))) + (x16 * Val(256))) + (x17 * Val(512))) + (x18 * Val(1024))) +
        (x19 * Val(2048))) +
       (x20 * Val(4096)));
  Val x32 = ((((((x31 + (x21 * Val(8192))) + (x22 * Val(16384))) + (x23 * Val(32768))) +
               (x24 * Val(65536))) +
              (x25 * Val(131072))) +
             (x26 * Val(262144)));
  EQZ(((((x32 + (x27 * Val(524288))) + (x28 * Val(1048576))) + (x29 * Val(2097152))) - x5),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:258)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x33 = x4[22]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:261)
  ToBits_21_Struct x34 = exec_ToBits_21_(ctx, x33, LAYOUT_LOOKUP(layout2, unpackM2));
  NondetRegStruct21Array x35 = x34._super;
  Val x36 = x35[0]._super;
  Val x37 = x35[1]._super;
  Val x38 = x35[2]._super;
  Val x39 = x35[3]._super;
  Val x40 = x35[4]._super;
  Val x41 = x35[5]._super;
  Val x42 = x35[6]._super;
  Val x43 = x35[7]._super;
  Val x44 = x35[8]._super;
  Val x45 = x35[9]._super;
  Val x46 = x35[10]._super;
  Val x47 = x35[11]._super;
  Val x48 = x35[12]._super;
  Val x49 = x35[13]._super;
  Val x50 = x35[14]._super;
  Val x51 = x35[15]._super;
  Val x52 = x35[16]._super;
  Val x53 = x35[17]._super;
  Val x54 = x35[18]._super;
  Val x55 = x35[19]._super;
  Val x56 = x35[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:262)
  Val x57 = ((((((x36 + (x37 * Val(2))) + (x38 * Val(4))) + (x39 * Val(8))) + (x40 * Val(16))) +
              (x41 * Val(32))) +
             (x42 * Val(64)));
  Val x58 =
      ((((((x57 + (x43 * Val(128))) + (x44 * Val(256))) + (x45 * Val(512))) + (x46 * Val(1024))) +
        (x47 * Val(2048))) +
       (x48 * Val(4096)));
  Val x59 = ((((((x58 + (x49 * Val(8192))) + (x50 * Val(16384))) + (x51 * Val(32768))) +
               (x52 * Val(65536))) +
              (x53 * Val(131072))) +
             (x54 * Val(262144)));
  EQZ((((x59 + (x55 * Val(524288))) + (x56 * Val(1048576))) - x33),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:262)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x60 = x4[23]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:266)
  ToBits_21_Struct x61 = exec_ToBits_21_(ctx, x60, LAYOUT_LOOKUP(layout2, unpackM3));
  NondetRegStruct21Array x62 = x61._super;
  Val x63 = x62[0]._super;
  Val x64 = x62[1]._super;
  Val x65 = x62[2]._super;
  Val x66 = x62[3]._super;
  Val x67 = x62[4]._super;
  Val x68 = x62[5]._super;
  Val x69 = x62[6]._super;
  Val x70 = x62[7]._super;
  Val x71 = x62[8]._super;
  Val x72 = x62[9]._super;
  Val x73 = x62[10]._super;
  Val x74 = x62[11]._super;
  Val x75 = x62[12]._super;
  Val x76 = x62[13]._super;
  Val x77 = x62[14]._super;
  Val x78 = x62[15]._super;
  Val x79 = x62[16]._super;
  Val x80 = x62[17]._super;
  Val x81 = x62[18]._super;
  Val x82 = x62[19]._super;
  Val x83 = x62[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:267)
  Val x84 = ((((((x63 + (x64 * Val(2))) + (x65 * Val(4))) + (x66 * Val(8))) + (x67 * Val(16))) +
              (x68 * Val(32))) +
             (x69 * Val(64)));
  Val x85 =
      ((((((x84 + (x70 * Val(128))) + (x71 * Val(256))) + (x72 * Val(512))) + (x73 * Val(1024))) +
        (x74 * Val(2048))) +
       (x75 * Val(4096)));
  Val x86 = ((((((x85 + (x76 * Val(8192))) + (x77 * Val(16384))) + (x78 * Val(32768))) +
               (x79 * Val(65536))) +
              (x80 * Val(131072))) +
             (x81 * Val(262144)));
  EQZ((((x86 + (x82 * Val(524288))) + (x83 * Val(1048576))) - x60),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:267)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x87 = x4[12]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:271)
  ToBits_22_Struct x88 = exec_ToBits_22_(ctx, x87, LAYOUT_LOOKUP(layout2, unpackP1));
  NondetRegStruct22Array x89 = x88._super;
  Val x90 = x89[0]._super;
  Val x91 = x89[1]._super;
  Val x92 = x89[2]._super;
  Val x93 = x89[3]._super;
  Val x94 = x89[4]._super;
  Val x95 = x89[5]._super;
  Val x96 = x89[6]._super;
  Val x97 = x89[7]._super;
  Val x98 = x89[8]._super;
  Val x99 = x89[9]._super;
  Val x100 = x89[10]._super;
  Val x101 = x89[11]._super;
  Val x102 = x89[12]._super;
  Val x103 = x89[13]._super;
  Val x104 = x89[14]._super;
  Val x105 = x89[15]._super;
  Val x106 = x89[16]._super;
  Val x107 = x89[17]._super;
  Val x108 = x89[18]._super;
  Val x109 = x89[19]._super;
  Val x110 = x89[20]._super;
  Val x111 = x89[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:272)
  Val x112 = ((((((x90 + (x91 * Val(2))) + (x92 * Val(4))) + (x93 * Val(8))) + (x94 * Val(16))) +
               (x95 * Val(32))) +
              (x96 * Val(64)));
  Val x113 =
      ((((((x112 + (x97 * Val(128))) + (x98 * Val(256))) + (x99 * Val(512))) + (x100 * Val(1024))) +
        (x101 * Val(2048))) +
       (x102 * Val(4096)));
  Val x114 = ((((((x113 + (x103 * Val(8192))) + (x104 * Val(16384))) + (x105 * Val(32768))) +
                (x106 * Val(65536))) +
               (x107 * Val(131072))) +
              (x108 * Val(262144)));
  EQZ(((((x114 + (x109 * Val(524288))) + (x110 * Val(1048576))) + (x111 * Val(2097152))) - x87),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:272)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x115 = x4[13]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:275)
  ToBits_21_Struct x116 = exec_ToBits_21_(ctx, x115, LAYOUT_LOOKUP(layout2, unpackP2));
  NondetRegStruct21Array x117 = x116._super;
  Val x118 = x117[0]._super;
  Val x119 = x117[1]._super;
  Val x120 = x117[2]._super;
  Val x121 = x117[3]._super;
  Val x122 = x117[4]._super;
  Val x123 = x117[5]._super;
  Val x124 = x117[6]._super;
  Val x125 = x117[7]._super;
  Val x126 = x117[8]._super;
  Val x127 = x117[9]._super;
  Val x128 = x117[10]._super;
  Val x129 = x117[11]._super;
  Val x130 = x117[12]._super;
  Val x131 = x117[13]._super;
  Val x132 = x117[14]._super;
  Val x133 = x117[15]._super;
  Val x134 = x117[16]._super;
  Val x135 = x117[17]._super;
  Val x136 = x117[18]._super;
  Val x137 = x117[19]._super;
  Val x138 = x117[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:276)
  Val x139 =
      ((((((x118 + (x119 * Val(2))) + (x120 * Val(4))) + (x121 * Val(8))) + (x122 * Val(16))) +
        (x123 * Val(32))) +
       (x124 * Val(64)));
  Val x140 = ((((((x139 + (x125 * Val(128))) + (x126 * Val(256))) + (x127 * Val(512))) +
                (x128 * Val(1024))) +
               (x129 * Val(2048))) +
              (x130 * Val(4096)));
  Val x141 = ((((((x140 + (x131 * Val(8192))) + (x132 * Val(16384))) + (x133 * Val(32768))) +
                (x134 * Val(65536))) +
               (x135 * Val(131072))) +
              (x136 * Val(262144)));
  EQZ((((x141 + (x137 * Val(524288))) + (x138 * Val(1048576))) - x115),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:276)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x142 = x4[14]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:279)
  ToBits_21_Struct x143 = exec_ToBits_21_(ctx, x142, LAYOUT_LOOKUP(layout2, unpackP3));
  NondetRegStruct21Array x144 = x143._super;
  Val x145 = x144[0]._super;
  Val x146 = x144[1]._super;
  Val x147 = x144[2]._super;
  Val x148 = x144[3]._super;
  Val x149 = x144[4]._super;
  Val x150 = x144[5]._super;
  Val x151 = x144[6]._super;
  Val x152 = x144[7]._super;
  Val x153 = x144[8]._super;
  Val x154 = x144[9]._super;
  Val x155 = x144[10]._super;
  Val x156 = x144[11]._super;
  Val x157 = x144[12]._super;
  Val x158 = x144[13]._super;
  Val x159 = x144[14]._super;
  Val x160 = x144[15]._super;
  Val x161 = x144[16]._super;
  Val x162 = x144[17]._super;
  Val x163 = x144[18]._super;
  Val x164 = x144[19]._super;
  Val x165 = x144[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:280)
  Val x166 =
      ((((((x145 + (x146 * Val(2))) + (x147 * Val(4))) + (x148 * Val(8))) + (x149 * Val(16))) +
        (x150 * Val(32))) +
       (x151 * Val(64)));
  Val x167 = ((((((x166 + (x152 * Val(128))) + (x153 * Val(256))) + (x154 * Val(512))) +
                (x155 * Val(1024))) +
               (x156 * Val(2048))) +
              (x157 * Val(4096)));
  Val x168 = ((((((x167 + (x158 * Val(8192))) + (x159 * Val(16384))) + (x160 * Val(32768))) +
                (x161 * Val(65536))) +
               (x162 * Val(131072))) +
              (x163 * Val(262144)));
  EQZ((((x168 + (x164 * Val(524288))) + (x165 * Val(1048576))) - x142),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:280)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:287)
  RetTupleStruct x169 =
      exec_RetTuple(ctx,
                    Val22Array{x165, x90,  x91,  x92,  x93,  x94,  x95,  x96,  x97,  x98,  x99,
                               x100, x101, x102, x103, x104, x105, x106, x107, x108, x109, x110},
                    Val22Array{x111, x118, x119, x120, x121, x122, x123, x124, x125, x126, x127,
                               x128, x129, x130, x131, x132, x133, x134, x135, x136, x137, Val(0)},
                    Val22Array{x138, x145, x146, x147, x148, x149, x150, x151, x152, x153, x154,
                               x155, x156, x157, x158, x159, x160, x161, x162, x163, x164, Val(0)},
                    Val24Array{x8,  x9,  x10, x11, x12, x13, x14, x15, x16, x17, x18,    x19,
                               x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, Val(0), Val(0)},
                    Val22Array{x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46,
                               x47, x48, x49, x50, x51, x52, x53, x54, x55, x56, Val(0)},
                    Val22Array{x63, x64, x65, x66, x67, x68, x69, x70, x71, x72, x73,
                               x74, x75, x76, x77, x78, x79, x80, x81, x82, x83, Val(0)},
                    Val(1),
                    Val(8),
                    x3.rnd._super,
                    x3.blk._super,
                    x3.midx._super,
                    LAYOUT_LOOKUP(layout2, _super));
  return x169;
}
RetTupleStruct execRhoMinor1_0__3_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<RhoMinor1_0__3_Layout> layout2) {
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:341)
  BoundLayout<RhoMinor1_0__3__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:292)
  RetTupleStruct x4 = back_RetTuple(ctx, 2, arg1);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  RetTupleStruct x5 = back_RetTuple(ctx, 1, arg1);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:292)
  NondetRegStruct22Array x6 = x4.arrC;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:297)
  Val x7 = x6[1]._super;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:304)
  ToBits_22_Struct x8 = exec_ToBits_22_(ctx, x7, LAYOUT_LOOKUP(layout2, unpackXy1));
  NondetRegStruct22Array x9 = x8._super;
  Val x10 = x9[0]._super;
  Val x11 = x9[1]._super;
  Val x12 = x9[2]._super;
  Val x13 = x9[3]._super;
  Val x14 = x9[4]._super;
  Val x15 = x9[5]._super;
  Val x16 = x9[6]._super;
  Val x17 = x9[7]._super;
  Val x18 = x9[8]._super;
  Val x19 = x9[9]._super;
  Val x20 = x9[10]._super;
  Val x21 = x9[11]._super;
  Val x22 = x9[12]._super;
  Val x23 = x9[13]._super;
  Val x24 = x9[14]._super;
  Val x25 = x9[15]._super;
  Val x26 = x9[16]._super;
  Val x27 = x9[17]._super;
  Val x28 = x9[18]._super;
  Val x29 = x9[19]._super;
  Val x30 = x9[20]._super;
  Val x31 = x9[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:305)
  Val x32 = ((((((x10 + (x11 * Val(2))) + (x12 * Val(4))) + (x13 * Val(8))) + (x14 * Val(16))) +
              (x15 * Val(32))) +
             (x16 * Val(64)));
  Val x33 =
      ((((((x32 + (x17 * Val(128))) + (x18 * Val(256))) + (x19 * Val(512))) + (x20 * Val(1024))) +
        (x21 * Val(2048))) +
       (x22 * Val(4096)));
  Val x34 = ((((((x33 + (x23 * Val(8192))) + (x24 * Val(16384))) + (x25 * Val(32768))) +
               (x26 * Val(65536))) +
              (x27 * Val(131072))) +
             (x28 * Val(262144)));
  EQZ(((((x34 + (x29 * Val(524288))) + (x30 * Val(1048576))) + (x31 * Val(2097152))) - x7),
      "rho_minor1(zirgen/circuit/keccak/keccak.zir:305)");
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:309)
  Val x35 = x6[2]._super;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:316)
  ToBits_21_Struct x36 = exec_ToBits_21_(ctx, x35, LAYOUT_LOOKUP(layout2, unpackXy2));
  NondetRegStruct21Array x37 = x36._super;
  Val x38 = x37[0]._super;
  Val x39 = x37[1]._super;
  Val x40 = x37[2]._super;
  Val x41 = x37[3]._super;
  Val x42 = x37[4]._super;
  Val x43 = x37[5]._super;
  Val x44 = x37[6]._super;
  Val x45 = x37[7]._super;
  Val x46 = x37[8]._super;
  Val x47 = x37[9]._super;
  Val x48 = x37[10]._super;
  Val x49 = x37[11]._super;
  Val x50 = x37[12]._super;
  Val x51 = x37[13]._super;
  Val x52 = x37[14]._super;
  Val x53 = x37[15]._super;
  Val x54 = x37[16]._super;
  Val x55 = x37[17]._super;
  Val x56 = x37[18]._super;
  Val x57 = x37[19]._super;
  Val x58 = x37[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:317)
  Val x59 = ((((((x38 + (x39 * Val(2))) + (x40 * Val(4))) + (x41 * Val(8))) + (x42 * Val(16))) +
              (x43 * Val(32))) +
             (x44 * Val(64)));
  Val x60 =
      ((((((x59 + (x45 * Val(128))) + (x46 * Val(256))) + (x47 * Val(512))) + (x48 * Val(1024))) +
        (x49 * Val(2048))) +
       (x50 * Val(4096)));
  Val x61 = ((((((x60 + (x51 * Val(8192))) + (x52 * Val(16384))) + (x53 * Val(32768))) +
               (x54 * Val(65536))) +
              (x55 * Val(131072))) +
             (x56 * Val(262144)));
  EQZ((((x61 + (x57 * Val(524288))) + (x58 * Val(1048576))) - x35),
      "rho_minor1(zirgen/circuit/keccak/keccak.zir:317)");
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:321)
  Val x62 = x6[3]._super;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:328)
  ToBits_21_Struct x63 = exec_ToBits_21_(ctx, x62, LAYOUT_LOOKUP(layout2, unpackXy3));
  NondetRegStruct21Array x64 = x63._super;
  Val x65 = x64[0]._super;
  Val x66 = x64[1]._super;
  Val x67 = x64[2]._super;
  Val x68 = x64[3]._super;
  Val x69 = x64[4]._super;
  Val x70 = x64[5]._super;
  Val x71 = x64[6]._super;
  Val x72 = x64[7]._super;
  Val x73 = x64[8]._super;
  Val x74 = x64[9]._super;
  Val x75 = x64[10]._super;
  Val x76 = x64[11]._super;
  Val x77 = x64[12]._super;
  Val x78 = x64[13]._super;
  Val x79 = x64[14]._super;
  Val x80 = x64[15]._super;
  Val x81 = x64[16]._super;
  Val x82 = x64[17]._super;
  Val x83 = x64[18]._super;
  Val x84 = x64[19]._super;
  Val x85 = x64[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:329)
  Val x86 = ((((((x65 + (x66 * Val(2))) + (x67 * Val(4))) + (x68 * Val(8))) + (x69 * Val(16))) +
              (x70 * Val(32))) +
             (x71 * Val(64)));
  Val x87 =
      ((((((x86 + (x72 * Val(128))) + (x73 * Val(256))) + (x74 * Val(512))) + (x75 * Val(1024))) +
        (x76 * Val(2048))) +
       (x77 * Val(4096)));
  Val x88 = ((((((x87 + (x78 * Val(8192))) + (x79 * Val(16384))) + (x80 * Val(32768))) +
               (x81 * Val(65536))) +
              (x82 * Val(131072))) +
             (x83 * Val(262144)));
  EQZ((((x88 + (x84 * Val(524288))) + (x85 * Val(1048576))) - x62),
      "rho_minor1(zirgen/circuit/keccak/keccak.zir:329)");
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  NondetRegStruct22Array x89 = x5.arrA;
  NondetRegStruct24Array x90 = x5.arrD;
  Val x91 = x89[0]._super;
  Val x92 = x90[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x93 = ((x10 * x91) + ((Val(1) - x10) * (Val(1) - x91)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x94 = x89[1]._super;
  Val x95 = x90[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x96 = ((x11 * x94) + ((Val(1) - x11) * (Val(1) - x94)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x97 = x89[2]._super;
  Val x98 = x90[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x99 = ((x12 * x97) + ((Val(1) - x12) * (Val(1) - x97)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x100 = x89[3]._super;
  Val x101 = x90[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x102 = ((x13 * x100) + ((Val(1) - x13) * (Val(1) - x100)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x103 = x89[4]._super;
  Val x104 = x90[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x105 = ((x14 * x103) + ((Val(1) - x14) * (Val(1) - x103)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x106 = x89[5]._super;
  Val x107 = x90[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x108 = ((x15 * x106) + ((Val(1) - x15) * (Val(1) - x106)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x109 = x89[6]._super;
  Val x110 = x90[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x111 = ((x16 * x109) + ((Val(1) - x16) * (Val(1) - x109)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x112 = x89[7]._super;
  Val x113 = x90[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x114 = ((x17 * x112) + ((Val(1) - x17) * (Val(1) - x112)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x115 = x89[8]._super;
  Val x116 = x90[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x117 = ((x18 * x115) + ((Val(1) - x18) * (Val(1) - x115)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x118 = x89[9]._super;
  Val x119 = x90[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x120 = ((x19 * x118) + ((Val(1) - x19) * (Val(1) - x118)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x121 = x89[10]._super;
  Val x122 = x90[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x123 = ((x20 * x121) + ((Val(1) - x20) * (Val(1) - x121)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x124 = x89[11]._super;
  Val x125 = x90[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x126 = ((x21 * x124) + ((Val(1) - x21) * (Val(1) - x124)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x127 = x89[12]._super;
  Val x128 = x90[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x129 = ((x22 * x127) + ((Val(1) - x22) * (Val(1) - x127)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x130 = x89[13]._super;
  Val x131 = x90[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x132 = ((x23 * x130) + ((Val(1) - x23) * (Val(1) - x130)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x133 = x89[14]._super;
  Val x134 = x90[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x135 = ((x24 * x133) + ((Val(1) - x24) * (Val(1) - x133)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x136 = x89[15]._super;
  Val x137 = x90[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x138 = ((x25 * x136) + ((Val(1) - x25) * (Val(1) - x136)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x139 = x89[16]._super;
  Val x140 = x90[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x141 = ((x26 * x139) + ((Val(1) - x26) * (Val(1) - x139)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x142 = x89[17]._super;
  Val x143 = x90[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x144 = ((x27 * x142) + ((Val(1) - x27) * (Val(1) - x142)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x145 = x89[18]._super;
  Val x146 = x90[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x147 = ((x28 * x145) + ((Val(1) - x28) * (Val(1) - x145)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x148 = x89[19]._super;
  Val x149 = x90[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x150 = ((x29 * x148) + ((Val(1) - x29) * (Val(1) - x148)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x151 = x89[20]._super;
  Val x152 = x90[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x153 = ((x30 * x151) + ((Val(1) - x30) * (Val(1) - x151)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x154 = x89[21]._super;
  Val x155 = x90[21]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x156 = ((x31 * x154) + ((Val(1) - x31) * (Val(1) - x154)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  NondetRegStruct22Array x157 = x5.arrB;
  NondetRegStruct22Array x158 = x5.arrE;
  Val x159 = x157[0]._super;
  Val x160 = x158[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x161 = ((x38 * x159) + ((Val(1) - x38) * (Val(1) - x159)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x162 = x157[1]._super;
  Val x163 = x158[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x164 = ((x39 * x162) + ((Val(1) - x39) * (Val(1) - x162)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x165 = x157[2]._super;
  Val x166 = x158[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x167 = ((x40 * x165) + ((Val(1) - x40) * (Val(1) - x165)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x168 = x157[3]._super;
  Val x169 = x158[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x170 = ((x41 * x168) + ((Val(1) - x41) * (Val(1) - x168)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x171 = x157[4]._super;
  Val x172 = x158[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x173 = ((x42 * x171) + ((Val(1) - x42) * (Val(1) - x171)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x174 = x157[5]._super;
  Val x175 = x158[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x176 = ((x43 * x174) + ((Val(1) - x43) * (Val(1) - x174)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x177 = x157[6]._super;
  Val x178 = x158[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x179 = ((x44 * x177) + ((Val(1) - x44) * (Val(1) - x177)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x180 = x157[7]._super;
  Val x181 = x158[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x182 = ((x45 * x180) + ((Val(1) - x45) * (Val(1) - x180)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x183 = x157[8]._super;
  Val x184 = x158[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x185 = ((x46 * x183) + ((Val(1) - x46) * (Val(1) - x183)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x186 = x157[9]._super;
  Val x187 = x158[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x188 = ((x47 * x186) + ((Val(1) - x47) * (Val(1) - x186)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x189 = x157[10]._super;
  Val x190 = x158[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x191 = ((x48 * x189) + ((Val(1) - x48) * (Val(1) - x189)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x192 = x157[11]._super;
  Val x193 = x158[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x194 = ((x49 * x192) + ((Val(1) - x49) * (Val(1) - x192)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x195 = x157[12]._super;
  Val x196 = x158[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x197 = ((x50 * x195) + ((Val(1) - x50) * (Val(1) - x195)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x198 = x157[13]._super;
  Val x199 = x158[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x200 = ((x51 * x198) + ((Val(1) - x51) * (Val(1) - x198)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x201 = x157[14]._super;
  Val x202 = x158[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x203 = ((x52 * x201) + ((Val(1) - x52) * (Val(1) - x201)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x204 = x157[15]._super;
  Val x205 = x158[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x206 = ((x53 * x204) + ((Val(1) - x53) * (Val(1) - x204)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x207 = x157[16]._super;
  Val x208 = x158[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x209 = ((x54 * x207) + ((Val(1) - x54) * (Val(1) - x207)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x210 = x157[17]._super;
  Val x211 = x158[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x212 = ((x55 * x210) + ((Val(1) - x55) * (Val(1) - x210)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x213 = x157[18]._super;
  Val x214 = x158[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x215 = ((x56 * x213) + ((Val(1) - x56) * (Val(1) - x213)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x216 = x157[19]._super;
  Val x217 = x158[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x218 = ((x57 * x216) + ((Val(1) - x57) * (Val(1) - x216)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x219 = x157[20]._super;
  Val x220 = x158[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x221 = ((x58 * x219) + ((Val(1) - x58) * (Val(1) - x219)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  NondetRegStruct22Array x222 = x5.arrC;
  NondetRegStruct22Array x223 = x5.arrF;
  Val x224 = x222[0]._super;
  Val x225 = x223[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x226 = ((x65 * x224) + ((Val(1) - x65) * (Val(1) - x224)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x227 = x222[1]._super;
  Val x228 = x223[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x229 = ((x66 * x227) + ((Val(1) - x66) * (Val(1) - x227)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x230 = x222[2]._super;
  Val x231 = x223[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x232 = ((x67 * x230) + ((Val(1) - x67) * (Val(1) - x230)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x233 = x222[3]._super;
  Val x234 = x223[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x235 = ((x68 * x233) + ((Val(1) - x68) * (Val(1) - x233)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x236 = x222[4]._super;
  Val x237 = x223[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x238 = ((x69 * x236) + ((Val(1) - x69) * (Val(1) - x236)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x239 = x222[5]._super;
  Val x240 = x223[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x241 = ((x70 * x239) + ((Val(1) - x70) * (Val(1) - x239)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x242 = x222[6]._super;
  Val x243 = x223[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x244 = ((x71 * x242) + ((Val(1) - x71) * (Val(1) - x242)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x245 = x222[7]._super;
  Val x246 = x223[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x247 = ((x72 * x245) + ((Val(1) - x72) * (Val(1) - x245)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x248 = x222[8]._super;
  Val x249 = x223[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x250 = ((x73 * x248) + ((Val(1) - x73) * (Val(1) - x248)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x251 = x222[9]._super;
  Val x252 = x223[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x253 = ((x74 * x251) + ((Val(1) - x74) * (Val(1) - x251)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x254 = x222[10]._super;
  Val x255 = x223[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x256 = ((x75 * x254) + ((Val(1) - x75) * (Val(1) - x254)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x257 = x222[11]._super;
  Val x258 = x223[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x259 = ((x76 * x257) + ((Val(1) - x76) * (Val(1) - x257)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x260 = x222[12]._super;
  Val x261 = x223[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x262 = ((x77 * x260) + ((Val(1) - x77) * (Val(1) - x260)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x263 = x222[13]._super;
  Val x264 = x223[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x265 = ((x78 * x263) + ((Val(1) - x78) * (Val(1) - x263)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x266 = x222[14]._super;
  Val x267 = x223[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x268 = ((x79 * x266) + ((Val(1) - x79) * (Val(1) - x266)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x269 = x222[15]._super;
  Val x270 = x223[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x271 = ((x80 * x269) + ((Val(1) - x80) * (Val(1) - x269)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x272 = x222[16]._super;
  Val x273 = x223[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x274 = ((x81 * x272) + ((Val(1) - x81) * (Val(1) - x272)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x275 = x222[17]._super;
  Val x276 = x223[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x277 = ((x82 * x275) + ((Val(1) - x82) * (Val(1) - x275)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x278 = x222[18]._super;
  Val x279 = x223[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x280 = ((x83 * x278) + ((Val(1) - x83) * (Val(1) - x278)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x281 = x222[19]._super;
  Val x282 = x223[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x283 = ((x84 * x281) + ((Val(1) - x84) * (Val(1) - x281)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x284 = x222[20]._super;
  Val x285 = x223[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x286 = ((x85 * x284) + ((Val(1) - x85) * (Val(1) - x284)));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:336)
  Val x287 = (((x164 * x163) + ((Val(1) - x164) * (Val(1) - x163))) +
              (((x167 * x166) + ((Val(1) - x167) * (Val(1) - x166))) * Val(2)));
  Val x288 = ((x287 + (((x170 * x169) + ((Val(1) - x170) * (Val(1) - x169))) * Val(4))) +
              (((x173 * x172) + ((Val(1) - x173) * (Val(1) - x172))) * Val(8)));
  Val x289 = ((x288 + (((x176 * x175) + ((Val(1) - x176) * (Val(1) - x175))) * Val(16))) +
              (((x179 * x178) + ((Val(1) - x179) * (Val(1) - x178))) * Val(32)));
  Val x290 = ((x289 + (((x182 * x181) + ((Val(1) - x182) * (Val(1) - x181))) * Val(64))) +
              (((x185 * x184) + ((Val(1) - x185) * (Val(1) - x184))) * Val(128)));
  Val x291 = ((x290 + (((x188 * x187) + ((Val(1) - x188) * (Val(1) - x187))) * Val(256))) +
              (((x191 * x190) + ((Val(1) - x191) * (Val(1) - x190))) * Val(512)));
  Val x292 = ((x291 + (((x194 * x193) + ((Val(1) - x194) * (Val(1) - x193))) * Val(1024))) +
              (((x197 * x196) + ((Val(1) - x197) * (Val(1) - x196))) * Val(2048)));
  Val x293 = ((x292 + (((x200 * x199) + ((Val(1) - x200) * (Val(1) - x199))) * Val(4096))) +
              (((x203 * x202) + ((Val(1) - x203) * (Val(1) - x202))) * Val(8192)));
  Val x294 = ((x293 + (((x206 * x205) + ((Val(1) - x206) * (Val(1) - x205))) * Val(16384))) +
              (((x209 * x208) + ((Val(1) - x209) * (Val(1) - x208))) * Val(32768)));
  Val x295 = ((x294 + (((x212 * x211) + ((Val(1) - x212) * (Val(1) - x211))) * Val(65536))) +
              (((x215 * x214) + ((Val(1) - x215) * (Val(1) - x214))) * Val(131072)));
  Val x296 = ((x295 + (((x218 * x217) + ((Val(1) - x218) * (Val(1) - x217))) * Val(262144))) +
              (((x221 * x220) + ((Val(1) - x221) * (Val(1) - x220))) * Val(524288)));
  Val x297 = ((x296 + (((x226 * x225) + ((Val(1) - x226) * (Val(1) - x225))) * Val(1048576))) +
              (((x229 * x228) + ((Val(1) - x229) * (Val(1) - x228))) * Val(2097152)));
  NondetRegStruct x298 = exec_Reg(ctx, x297, LAYOUT_LOOKUP(layout2, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:337)
  Val x299 = (((x232 * x231) + ((Val(1) - x232) * (Val(1) - x231))) +
              (((x235 * x234) + ((Val(1) - x235) * (Val(1) - x234))) * Val(2)));
  Val x300 = ((x299 + (((x238 * x237) + ((Val(1) - x238) * (Val(1) - x237))) * Val(4))) +
              (((x241 * x240) + ((Val(1) - x241) * (Val(1) - x240))) * Val(8)));
  Val x301 = ((x300 + (((x244 * x243) + ((Val(1) - x244) * (Val(1) - x243))) * Val(16))) +
              (((x247 * x246) + ((Val(1) - x247) * (Val(1) - x246))) * Val(32)));
  Val x302 = ((x301 + (((x250 * x249) + ((Val(1) - x250) * (Val(1) - x249))) * Val(64))) +
              (((x253 * x252) + ((Val(1) - x253) * (Val(1) - x252))) * Val(128)));
  Val x303 = ((x302 + (((x256 * x255) + ((Val(1) - x256) * (Val(1) - x255))) * Val(256))) +
              (((x259 * x258) + ((Val(1) - x259) * (Val(1) - x258))) * Val(512)));
  Val x304 = ((x303 + (((x262 * x261) + ((Val(1) - x262) * (Val(1) - x261))) * Val(1024))) +
              (((x265 * x264) + ((Val(1) - x265) * (Val(1) - x264))) * Val(2048)));
  Val x305 = ((x304 + (((x268 * x267) + ((Val(1) - x268) * (Val(1) - x267))) * Val(4096))) +
              (((x271 * x270) + ((Val(1) - x271) * (Val(1) - x270))) * Val(8192)));
  Val x306 = ((x305 + (((x274 * x273) + ((Val(1) - x274) * (Val(1) - x273))) * Val(16384))) +
              (((x277 * x276) + ((Val(1) - x277) * (Val(1) - x276))) * Val(32768)));
  Val x307 = ((x306 + (((x280 * x279) + ((Val(1) - x280) * (Val(1) - x279))) * Val(65536))) +
              (((x283 * x282) + ((Val(1) - x283) * (Val(1) - x282))) * Val(131072)));
  Val x308 = ((x307 + (((x286 * x285) + ((Val(1) - x286) * (Val(1) - x285))) * Val(262144))) +
              (((x93 * x92) + ((Val(1) - x93) * (Val(1) - x92))) * Val(524288)));
  NondetRegStruct x309 =
      exec_Reg(ctx,
               (x308 + (((x96 * x95) + ((Val(1) - x96) * (Val(1) - x95))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _1));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:338)
  Val x310 = (((x99 * x98) + ((Val(1) - x99) * (Val(1) - x98))) +
              (((x102 * x101) + ((Val(1) - x102) * (Val(1) - x101))) * Val(2)));
  Val x311 = ((x310 + (((x105 * x104) + ((Val(1) - x105) * (Val(1) - x104))) * Val(4))) +
              (((x108 * x107) + ((Val(1) - x108) * (Val(1) - x107))) * Val(8)));
  Val x312 = ((x311 + (((x111 * x110) + ((Val(1) - x111) * (Val(1) - x110))) * Val(16))) +
              (((x114 * x113) + ((Val(1) - x114) * (Val(1) - x113))) * Val(32)));
  Val x313 = ((x312 + (((x117 * x116) + ((Val(1) - x117) * (Val(1) - x116))) * Val(64))) +
              (((x120 * x119) + ((Val(1) - x120) * (Val(1) - x119))) * Val(128)));
  Val x314 = ((x313 + (((x123 * x122) + ((Val(1) - x123) * (Val(1) - x122))) * Val(256))) +
              (((x126 * x125) + ((Val(1) - x126) * (Val(1) - x125))) * Val(512)));
  Val x315 = ((x314 + (((x129 * x128) + ((Val(1) - x129) * (Val(1) - x128))) * Val(1024))) +
              (((x132 * x131) + ((Val(1) - x132) * (Val(1) - x131))) * Val(2048)));
  Val x316 = ((x315 + (((x135 * x134) + ((Val(1) - x135) * (Val(1) - x134))) * Val(4096))) +
              (((x138 * x137) + ((Val(1) - x138) * (Val(1) - x137))) * Val(8192)));
  Val x317 = ((x316 + (((x141 * x140) + ((Val(1) - x141) * (Val(1) - x140))) * Val(16384))) +
              (((x144 * x143) + ((Val(1) - x144) * (Val(1) - x143))) * Val(32768)));
  Val x318 = ((x317 + (((x147 * x146) + ((Val(1) - x147) * (Val(1) - x146))) * Val(65536))) +
              (((x150 * x149) + ((Val(1) - x150) * (Val(1) - x149))) * Val(131072)));
  Val x319 = ((x318 + (((x153 * x152) + ((Val(1) - x153) * (Val(1) - x152))) * Val(262144))) +
              (((x156 * x155) + ((Val(1) - x156) * (Val(1) - x155))) * Val(524288)));
  NondetRegStruct x320 =
      exec_Reg(ctx,
               (x319 + (((x161 * x160) + ((Val(1) - x161) * (Val(1) - x160))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _2));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:341)
  BoundLayout<RhoMinor1_0__3_Arm1_SuperLayout> x321 = LAYOUT_LOOKUP(x3, arm1);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:342)
  Val22Array x322 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  Val24Array x323 = Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:339)
  Val22Array x324 =
      Val22Array{x298._super, x309._super, x320._super, Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0)};
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x325 = x5.rnd._super;
  Val x326 = x5.blk._super;
  Val x327 = x5.midx._super;
  if (to_size_t(Val(0))) {
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:342)
    RetTupleStruct x328 = exec_RetTuple(ctx,
                                        x322,
                                        x322,
                                        x322,
                                        x323,
                                        x322,
                                        x324,
                                        Val(8),
                                        Val(8),
                                        x325,
                                        x326,
                                        x327,
                                        LAYOUT_LOOKUP(x3, arm0));
  }
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:292)
  NondetRegStruct24Array x329 = x4.arrD;
  Val x330 = x329[9]._super;
  Val x331 = x329[10]._super;
  Val x332 = x329[11]._super;
  if (to_size_t(Val(1))) {
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:345)
    ToBits_22_Struct x333 = exec_ToBits_22_(ctx, x330, LAYOUT_LOOKUP(x321, unpackM1));
    NondetRegStruct22Array x334 = x333._super;
    Val x335 = x334[0]._super;
    Val x336 = x334[1]._super;
    Val x337 = x334[2]._super;
    Val x338 = x334[3]._super;
    Val x339 = x334[4]._super;
    Val x340 = x334[5]._super;
    Val x341 = x334[6]._super;
    Val x342 = x334[7]._super;
    Val x343 = x334[8]._super;
    Val x344 = x334[9]._super;
    Val x345 = x334[10]._super;
    Val x346 = x334[11]._super;
    Val x347 = x334[12]._super;
    Val x348 = x334[13]._super;
    Val x349 = x334[14]._super;
    Val x350 = x334[15]._super;
    Val x351 = x334[16]._super;
    Val x352 = x334[17]._super;
    Val x353 = x334[18]._super;
    Val x354 = x334[19]._super;
    Val x355 = x334[20]._super;
    Val x356 = x334[21]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:346)
    Val x357 =
        ((((((x335 + (x336 * Val(2))) + (x337 * Val(4))) + (x338 * Val(8))) + (x339 * Val(16))) +
          (x340 * Val(32))) +
         (x341 * Val(64)));
    Val x358 = ((((((x357 + (x342 * Val(128))) + (x343 * Val(256))) + (x344 * Val(512))) +
                  (x345 * Val(1024))) +
                 (x346 * Val(2048))) +
                (x347 * Val(4096)));
    Val x359 = ((((((x358 + (x348 * Val(8192))) + (x349 * Val(16384))) + (x350 * Val(32768))) +
                  (x351 * Val(65536))) +
                 (x352 * Val(131072))) +
                (x353 * Val(262144)));
    EQZ(((((x359 + (x354 * Val(524288))) + (x355 * Val(1048576))) + (x356 * Val(2097152))) - x330),
        "rho_minor1(zirgen/circuit/keccak/keccak.zir:346)");
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:349)
    ToBits_21_Struct x360 = exec_ToBits_21_(ctx, x331, LAYOUT_LOOKUP(x321, unpackM2));
    NondetRegStruct21Array x361 = x360._super;
    Val x362 = x361[0]._super;
    Val x363 = x361[1]._super;
    Val x364 = x361[2]._super;
    Val x365 = x361[3]._super;
    Val x366 = x361[4]._super;
    Val x367 = x361[5]._super;
    Val x368 = x361[6]._super;
    Val x369 = x361[7]._super;
    Val x370 = x361[8]._super;
    Val x371 = x361[9]._super;
    Val x372 = x361[10]._super;
    Val x373 = x361[11]._super;
    Val x374 = x361[12]._super;
    Val x375 = x361[13]._super;
    Val x376 = x361[14]._super;
    Val x377 = x361[15]._super;
    Val x378 = x361[16]._super;
    Val x379 = x361[17]._super;
    Val x380 = x361[18]._super;
    Val x381 = x361[19]._super;
    Val x382 = x361[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:350)
    Val x383 =
        ((((((x362 + (x363 * Val(2))) + (x364 * Val(4))) + (x365 * Val(8))) + (x366 * Val(16))) +
          (x367 * Val(32))) +
         (x368 * Val(64)));
    Val x384 = ((((((x383 + (x369 * Val(128))) + (x370 * Val(256))) + (x371 * Val(512))) +
                  (x372 * Val(1024))) +
                 (x373 * Val(2048))) +
                (x374 * Val(4096)));
    Val x385 = ((((((x384 + (x375 * Val(8192))) + (x376 * Val(16384))) + (x377 * Val(32768))) +
                  (x378 * Val(65536))) +
                 (x379 * Val(131072))) +
                (x380 * Val(262144)));
    EQZ((((x385 + (x381 * Val(524288))) + (x382 * Val(1048576))) - x331),
        "rho_minor1(zirgen/circuit/keccak/keccak.zir:350)");
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:354)
    ToBits_21_Struct x386 = exec_ToBits_21_(ctx, x332, LAYOUT_LOOKUP(x321, unpackM3));
    NondetRegStruct21Array x387 = x386._super;
    Val x388 = x387[0]._super;
    Val x389 = x387[1]._super;
    Val x390 = x387[2]._super;
    Val x391 = x387[3]._super;
    Val x392 = x387[4]._super;
    Val x393 = x387[5]._super;
    Val x394 = x387[6]._super;
    Val x395 = x387[7]._super;
    Val x396 = x387[8]._super;
    Val x397 = x387[9]._super;
    Val x398 = x387[10]._super;
    Val x399 = x387[11]._super;
    Val x400 = x387[12]._super;
    Val x401 = x387[13]._super;
    Val x402 = x387[14]._super;
    Val x403 = x387[15]._super;
    Val x404 = x387[16]._super;
    Val x405 = x387[17]._super;
    Val x406 = x387[18]._super;
    Val x407 = x387[19]._super;
    Val x408 = x387[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:355)
    Val x409 =
        ((((((x388 + (x389 * Val(2))) + (x390 * Val(4))) + (x391 * Val(8))) + (x392 * Val(16))) +
          (x393 * Val(32))) +
         (x394 * Val(64)));
    Val x410 = ((((((x409 + (x395 * Val(128))) + (x396 * Val(256))) + (x397 * Val(512))) +
                  (x398 * Val(1024))) +
                 (x399 * Val(2048))) +
                (x400 * Val(4096)));
    Val x411 = ((((((x410 + (x401 * Val(8192))) + (x402 * Val(16384))) + (x403 * Val(32768))) +
                  (x404 * Val(65536))) +
                 (x405 * Val(131072))) +
                (x406 * Val(262144)));
    EQZ((((x411 + (x407 * Val(524288))) + (x408 * Val(1048576))) - x332),
        "rho_minor1(zirgen/circuit/keccak/keccak.zir:355)");
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:358)
    RetTupleStruct x412 = exec_RetTuple(
        ctx,
        Val22Array{x335, x336, x337, x338, x339, x340, x341, x342, x343, x344, x345,
                   x346, x347, x348, x349, x350, x351, x352, x353, x354, x355, x356},
        Val22Array{x362, x363, x364, x365, x366, x367, x368, x369, x370, x371, x372,
                   x373, x374, x375, x376, x377, x378, x379, x380, x381, x382, Val(0)},
        Val22Array{x388, x389, x390, x391, x392, x393, x394, x395, x396, x397, x398,
                   x399, x400, x401, x402, x403, x404, x405, x406, x407, x408, Val(0)},
        x323,
        x322,
        x324,
        Val(2),
        Val(8),
        x325,
        x326,
        x327,
        LAYOUT_LOOKUP(x321, _super));
  }
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:341)
  RetTupleStruct x413 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x413;
}
RetTupleStruct execRhoMinor2_0__3_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<RhoMinor2_0__3_Layout> layout2) {
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:364)
  RetTupleStruct x3 = back_RetTuple(ctx, 3, arg1);
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:364)
  NondetRegStruct24Array x5 = x3.arrD;
  Val x6 = x5[15]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:368)
  ToBits_22_Struct x7 = exec_ToBits_22_(ctx, x6, LAYOUT_LOOKUP(layout2, unpackP1));
  NondetRegStruct22Array x8 = x7._super;
  Val x9 = x8[0]._super;
  Val x10 = x8[1]._super;
  Val x11 = x8[2]._super;
  Val x12 = x8[3]._super;
  Val x13 = x8[4]._super;
  Val x14 = x8[5]._super;
  Val x15 = x8[6]._super;
  Val x16 = x8[7]._super;
  Val x17 = x8[8]._super;
  Val x18 = x8[9]._super;
  Val x19 = x8[10]._super;
  Val x20 = x8[11]._super;
  Val x21 = x8[12]._super;
  Val x22 = x8[13]._super;
  Val x23 = x8[14]._super;
  Val x24 = x8[15]._super;
  Val x25 = x8[16]._super;
  Val x26 = x8[17]._super;
  Val x27 = x8[18]._super;
  Val x28 = x8[19]._super;
  Val x29 = x8[20]._super;
  Val x30 = x8[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:369)
  Val x31 = ((((((x9 + (x10 * Val(2))) + (x11 * Val(4))) + (x12 * Val(8))) + (x13 * Val(16))) +
              (x14 * Val(32))) +
             (x15 * Val(64)));
  Val x32 =
      ((((((x31 + (x16 * Val(128))) + (x17 * Val(256))) + (x18 * Val(512))) + (x19 * Val(1024))) +
        (x20 * Val(2048))) +
       (x21 * Val(4096)));
  Val x33 = ((((((x32 + (x22 * Val(8192))) + (x23 * Val(16384))) + (x24 * Val(32768))) +
               (x25 * Val(65536))) +
              (x26 * Val(131072))) +
             (x27 * Val(262144)));
  EQZ(((((x33 + (x28 * Val(524288))) + (x29 * Val(1048576))) + (x30 * Val(2097152))) - x6),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:369)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:364)
  Val x34 = x5[16]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:372)
  ToBits_21_Struct x35 = exec_ToBits_21_(ctx, x34, LAYOUT_LOOKUP(layout2, unpackP2));
  NondetRegStruct21Array x36 = x35._super;
  Val x37 = x36[0]._super;
  Val x38 = x36[1]._super;
  Val x39 = x36[2]._super;
  Val x40 = x36[3]._super;
  Val x41 = x36[4]._super;
  Val x42 = x36[5]._super;
  Val x43 = x36[6]._super;
  Val x44 = x36[7]._super;
  Val x45 = x36[8]._super;
  Val x46 = x36[9]._super;
  Val x47 = x36[10]._super;
  Val x48 = x36[11]._super;
  Val x49 = x36[12]._super;
  Val x50 = x36[13]._super;
  Val x51 = x36[14]._super;
  Val x52 = x36[15]._super;
  Val x53 = x36[16]._super;
  Val x54 = x36[17]._super;
  Val x55 = x36[18]._super;
  Val x56 = x36[19]._super;
  Val x57 = x36[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:373)
  Val x58 = ((((((x37 + (x38 * Val(2))) + (x39 * Val(4))) + (x40 * Val(8))) + (x41 * Val(16))) +
              (x42 * Val(32))) +
             (x43 * Val(64)));
  Val x59 =
      ((((((x58 + (x44 * Val(128))) + (x45 * Val(256))) + (x46 * Val(512))) + (x47 * Val(1024))) +
        (x48 * Val(2048))) +
       (x49 * Val(4096)));
  Val x60 = ((((((x59 + (x50 * Val(8192))) + (x51 * Val(16384))) + (x52 * Val(32768))) +
               (x53 * Val(65536))) +
              (x54 * Val(131072))) +
             (x55 * Val(262144)));
  EQZ((((x60 + (x56 * Val(524288))) + (x57 * Val(1048576))) - x34),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:373)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:364)
  Val x61 = x5[17]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:376)
  ToBits_21_Struct x62 = exec_ToBits_21_(ctx, x61, LAYOUT_LOOKUP(layout2, unpackP3));
  NondetRegStruct21Array x63 = x62._super;
  Val x64 = x63[0]._super;
  Val x65 = x63[1]._super;
  Val x66 = x63[2]._super;
  Val x67 = x63[3]._super;
  Val x68 = x63[4]._super;
  Val x69 = x63[5]._super;
  Val x70 = x63[6]._super;
  Val x71 = x63[7]._super;
  Val x72 = x63[8]._super;
  Val x73 = x63[9]._super;
  Val x74 = x63[10]._super;
  Val x75 = x63[11]._super;
  Val x76 = x63[12]._super;
  Val x77 = x63[13]._super;
  Val x78 = x63[14]._super;
  Val x79 = x63[15]._super;
  Val x80 = x63[16]._super;
  Val x81 = x63[17]._super;
  Val x82 = x63[18]._super;
  Val x83 = x63[19]._super;
  Val x84 = x63[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:377)
  Val x85 = ((((((x64 + (x65 * Val(2))) + (x66 * Val(4))) + (x67 * Val(8))) + (x68 * Val(16))) +
              (x69 * Val(32))) +
             (x70 * Val(64)));
  Val x86 =
      ((((((x85 + (x71 * Val(128))) + (x72 * Val(256))) + (x73 * Val(512))) + (x74 * Val(1024))) +
        (x75 * Val(2048))) +
       (x76 * Val(4096)));
  Val x87 = ((((((x86 + (x77 * Val(8192))) + (x78 * Val(16384))) + (x79 * Val(32768))) +
               (x80 * Val(65536))) +
              (x81 * Val(131072))) +
             (x82 * Val(262144)));
  EQZ((((x87 + (x83 * Val(524288))) + (x84 * Val(1048576))) - x61),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:377)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:364)
  NondetRegStruct22Array x88 = x3.arrC;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:383)
  Val x89 = x88[4]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:390)
  ToBits_22_Struct x90 = exec_ToBits_22_(ctx, x89, LAYOUT_LOOKUP(layout2, unpackXy1));
  NondetRegStruct22Array x91 = x90._super;
  Val x92 = x91[0]._super;
  Val x93 = x91[1]._super;
  Val x94 = x91[2]._super;
  Val x95 = x91[3]._super;
  Val x96 = x91[4]._super;
  Val x97 = x91[5]._super;
  Val x98 = x91[6]._super;
  Val x99 = x91[7]._super;
  Val x100 = x91[8]._super;
  Val x101 = x91[9]._super;
  Val x102 = x91[10]._super;
  Val x103 = x91[11]._super;
  Val x104 = x91[12]._super;
  Val x105 = x91[13]._super;
  Val x106 = x91[14]._super;
  Val x107 = x91[15]._super;
  Val x108 = x91[16]._super;
  Val x109 = x91[17]._super;
  Val x110 = x91[18]._super;
  Val x111 = x91[19]._super;
  Val x112 = x91[20]._super;
  Val x113 = x91[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:391)
  Val x114 = ((((((x92 + (x93 * Val(2))) + (x94 * Val(4))) + (x95 * Val(8))) + (x96 * Val(16))) +
               (x97 * Val(32))) +
              (x98 * Val(64)));
  Val x115 = ((((((x114 + (x99 * Val(128))) + (x100 * Val(256))) + (x101 * Val(512))) +
                (x102 * Val(1024))) +
               (x103 * Val(2048))) +
              (x104 * Val(4096)));
  Val x116 = ((((((x115 + (x105 * Val(8192))) + (x106 * Val(16384))) + (x107 * Val(32768))) +
                (x108 * Val(65536))) +
               (x109 * Val(131072))) +
              (x110 * Val(262144)));
  EQZ(((((x116 + (x111 * Val(524288))) + (x112 * Val(1048576))) + (x113 * Val(2097152))) - x89),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:391)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:395)
  Val x117 = x88[5]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:402)
  ToBits_21_Struct x118 = exec_ToBits_21_(ctx, x117, LAYOUT_LOOKUP(layout2, unpackXy2));
  NondetRegStruct21Array x119 = x118._super;
  Val x120 = x119[0]._super;
  Val x121 = x119[1]._super;
  Val x122 = x119[2]._super;
  Val x123 = x119[3]._super;
  Val x124 = x119[4]._super;
  Val x125 = x119[5]._super;
  Val x126 = x119[6]._super;
  Val x127 = x119[7]._super;
  Val x128 = x119[8]._super;
  Val x129 = x119[9]._super;
  Val x130 = x119[10]._super;
  Val x131 = x119[11]._super;
  Val x132 = x119[12]._super;
  Val x133 = x119[13]._super;
  Val x134 = x119[14]._super;
  Val x135 = x119[15]._super;
  Val x136 = x119[16]._super;
  Val x137 = x119[17]._super;
  Val x138 = x119[18]._super;
  Val x139 = x119[19]._super;
  Val x140 = x119[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:403)
  Val x141 =
      ((((((x120 + (x121 * Val(2))) + (x122 * Val(4))) + (x123 * Val(8))) + (x124 * Val(16))) +
        (x125 * Val(32))) +
       (x126 * Val(64)));
  Val x142 = ((((((x141 + (x127 * Val(128))) + (x128 * Val(256))) + (x129 * Val(512))) +
                (x130 * Val(1024))) +
               (x131 * Val(2048))) +
              (x132 * Val(4096)));
  Val x143 = ((((((x142 + (x133 * Val(8192))) + (x134 * Val(16384))) + (x135 * Val(32768))) +
                (x136 * Val(65536))) +
               (x137 * Val(131072))) +
              (x138 * Val(262144)));
  EQZ((((x143 + (x139 * Val(524288))) + (x140 * Val(1048576))) - x117),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:403)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:407)
  Val x144 = x88[6]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:414)
  ToBits_21_Struct x145 = exec_ToBits_21_(ctx, x144, LAYOUT_LOOKUP(layout2, unpackXy3));
  NondetRegStruct21Array x146 = x145._super;
  Val x147 = x146[0]._super;
  Val x148 = x146[1]._super;
  Val x149 = x146[2]._super;
  Val x150 = x146[3]._super;
  Val x151 = x146[4]._super;
  Val x152 = x146[5]._super;
  Val x153 = x146[6]._super;
  Val x154 = x146[7]._super;
  Val x155 = x146[8]._super;
  Val x156 = x146[9]._super;
  Val x157 = x146[10]._super;
  Val x158 = x146[11]._super;
  Val x159 = x146[12]._super;
  Val x160 = x146[13]._super;
  Val x161 = x146[14]._super;
  Val x162 = x146[15]._super;
  Val x163 = x146[16]._super;
  Val x164 = x146[17]._super;
  Val x165 = x146[18]._super;
  Val x166 = x146[19]._super;
  Val x167 = x146[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:415)
  Val x168 =
      ((((((x147 + (x148 * Val(2))) + (x149 * Val(4))) + (x150 * Val(8))) + (x151 * Val(16))) +
        (x152 * Val(32))) +
       (x153 * Val(64)));
  Val x169 = ((((((x168 + (x154 * Val(128))) + (x155 * Val(256))) + (x156 * Val(512))) +
                (x157 * Val(1024))) +
               (x158 * Val(2048))) +
              (x159 * Val(4096)));
  Val x170 = ((((((x169 + (x160 * Val(8192))) + (x161 * Val(16384))) + (x162 * Val(32768))) +
                (x163 * Val(65536))) +
               (x164 * Val(131072))) +
              (x165 * Val(262144)));
  EQZ((((x170 + (x166 * Val(524288))) + (x167 * Val(1048576))) - x144),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:415)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  NondetRegStruct22Array x171 = x4.arrA;
  Val x172 = x171[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x173 = ((x92 * x172) + ((Val(1) - x92) * (Val(1) - x172)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x174 = x171[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x175 = ((x93 * x174) + ((Val(1) - x93) * (Val(1) - x174)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x176 = x171[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x177 = ((x94 * x176) + ((Val(1) - x94) * (Val(1) - x176)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x178 = x171[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x179 = ((x95 * x178) + ((Val(1) - x95) * (Val(1) - x178)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x180 = x171[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x181 = ((x96 * x180) + ((Val(1) - x96) * (Val(1) - x180)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x182 = x171[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x183 = ((x97 * x182) + ((Val(1) - x97) * (Val(1) - x182)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x184 = x171[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x185 = ((x98 * x184) + ((Val(1) - x98) * (Val(1) - x184)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x186 = x171[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x187 = ((x99 * x186) + ((Val(1) - x99) * (Val(1) - x186)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x188 = x171[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x189 = ((x100 * x188) + ((Val(1) - x100) * (Val(1) - x188)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x190 = x171[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x191 = ((x101 * x190) + ((Val(1) - x101) * (Val(1) - x190)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x192 = x171[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x193 = ((x102 * x192) + ((Val(1) - x102) * (Val(1) - x192)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x194 = x171[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x195 = ((x103 * x194) + ((Val(1) - x103) * (Val(1) - x194)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x196 = x171[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x197 = ((x104 * x196) + ((Val(1) - x104) * (Val(1) - x196)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x198 = x171[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x199 = ((x105 * x198) + ((Val(1) - x105) * (Val(1) - x198)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x200 = x171[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x201 = ((x106 * x200) + ((Val(1) - x106) * (Val(1) - x200)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x202 = x171[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x203 = ((x107 * x202) + ((Val(1) - x107) * (Val(1) - x202)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x204 = x171[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x205 = ((x108 * x204) + ((Val(1) - x108) * (Val(1) - x204)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x206 = x171[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x207 = ((x109 * x206) + ((Val(1) - x109) * (Val(1) - x206)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x208 = x171[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x209 = ((x110 * x208) + ((Val(1) - x110) * (Val(1) - x208)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x210 = x171[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x211 = ((x111 * x210) + ((Val(1) - x111) * (Val(1) - x210)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x212 = x171[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x213 = ((x112 * x212) + ((Val(1) - x112) * (Val(1) - x212)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x214 = x171[21]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x215 = ((x113 * x214) + ((Val(1) - x113) * (Val(1) - x214)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  NondetRegStruct22Array x216 = x4.arrB;
  Val x217 = x216[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x218 = ((x120 * x217) + ((Val(1) - x120) * (Val(1) - x217)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x219 = x216[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x220 = ((x121 * x219) + ((Val(1) - x121) * (Val(1) - x219)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x221 = x216[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x222 = ((x122 * x221) + ((Val(1) - x122) * (Val(1) - x221)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x223 = x216[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x224 = ((x123 * x223) + ((Val(1) - x123) * (Val(1) - x223)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x225 = x216[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x226 = ((x124 * x225) + ((Val(1) - x124) * (Val(1) - x225)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x227 = x216[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x228 = ((x125 * x227) + ((Val(1) - x125) * (Val(1) - x227)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x229 = x216[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x230 = ((x126 * x229) + ((Val(1) - x126) * (Val(1) - x229)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x231 = x216[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x232 = ((x127 * x231) + ((Val(1) - x127) * (Val(1) - x231)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x233 = x216[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x234 = ((x128 * x233) + ((Val(1) - x128) * (Val(1) - x233)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x235 = x216[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x236 = ((x129 * x235) + ((Val(1) - x129) * (Val(1) - x235)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x237 = x216[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x238 = ((x130 * x237) + ((Val(1) - x130) * (Val(1) - x237)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x239 = x216[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x240 = ((x131 * x239) + ((Val(1) - x131) * (Val(1) - x239)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x241 = x216[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x242 = ((x132 * x241) + ((Val(1) - x132) * (Val(1) - x241)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x243 = x216[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x244 = ((x133 * x243) + ((Val(1) - x133) * (Val(1) - x243)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x245 = x216[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x246 = ((x134 * x245) + ((Val(1) - x134) * (Val(1) - x245)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x247 = x216[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x248 = ((x135 * x247) + ((Val(1) - x135) * (Val(1) - x247)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x249 = x216[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x250 = ((x136 * x249) + ((Val(1) - x136) * (Val(1) - x249)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x251 = x216[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x252 = ((x137 * x251) + ((Val(1) - x137) * (Val(1) - x251)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x253 = x216[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x254 = ((x138 * x253) + ((Val(1) - x138) * (Val(1) - x253)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x255 = x216[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x256 = ((x139 * x255) + ((Val(1) - x139) * (Val(1) - x255)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x257 = x216[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x258 = ((x140 * x257) + ((Val(1) - x140) * (Val(1) - x257)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  NondetRegStruct22Array x259 = x4.arrC;
  Val x260 = x259[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x261 = ((x147 * x260) + ((Val(1) - x147) * (Val(1) - x260)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x262 = x259[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x263 = ((x148 * x262) + ((Val(1) - x148) * (Val(1) - x262)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x264 = x259[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x265 = ((x149 * x264) + ((Val(1) - x149) * (Val(1) - x264)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x266 = x259[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x267 = ((x150 * x266) + ((Val(1) - x150) * (Val(1) - x266)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x268 = x259[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x269 = ((x151 * x268) + ((Val(1) - x151) * (Val(1) - x268)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x270 = x259[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x271 = ((x152 * x270) + ((Val(1) - x152) * (Val(1) - x270)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x272 = x259[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x273 = ((x153 * x272) + ((Val(1) - x153) * (Val(1) - x272)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x274 = x259[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x275 = ((x154 * x274) + ((Val(1) - x154) * (Val(1) - x274)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x276 = x259[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x277 = ((x155 * x276) + ((Val(1) - x155) * (Val(1) - x276)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x278 = x259[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x279 = ((x156 * x278) + ((Val(1) - x156) * (Val(1) - x278)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x280 = x259[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x281 = ((x157 * x280) + ((Val(1) - x157) * (Val(1) - x280)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x282 = x259[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x283 = ((x158 * x282) + ((Val(1) - x158) * (Val(1) - x282)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x284 = x259[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x285 = ((x159 * x284) + ((Val(1) - x159) * (Val(1) - x284)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x286 = x259[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x287 = ((x160 * x286) + ((Val(1) - x160) * (Val(1) - x286)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x288 = x259[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x289 = ((x161 * x288) + ((Val(1) - x161) * (Val(1) - x288)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x290 = x259[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x291 = ((x162 * x290) + ((Val(1) - x162) * (Val(1) - x290)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x292 = x259[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x293 = ((x163 * x292) + ((Val(1) - x163) * (Val(1) - x292)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x294 = x259[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x295 = ((x164 * x294) + ((Val(1) - x164) * (Val(1) - x294)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x296 = x259[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x297 = ((x165 * x296) + ((Val(1) - x165) * (Val(1) - x296)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x298 = x259[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x299 = ((x166 * x298) + ((Val(1) - x166) * (Val(1) - x298)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x300 = x259[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x301 = ((x167 * x300) + ((Val(1) - x167) * (Val(1) - x300)));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:422)
  Val x302 = (((x211 * x27) + ((Val(1) - x211) * (Val(1) - x27))) +
              (((x213 * x28) + ((Val(1) - x213) * (Val(1) - x28))) * Val(2)));
  Val x303 = ((x302 + (((x215 * x29) + ((Val(1) - x215) * (Val(1) - x29))) * Val(4))) +
              (((x218 * x30) + ((Val(1) - x218) * (Val(1) - x30))) * Val(8)));
  Val x304 = ((x303 + (((x220 * x37) + ((Val(1) - x220) * (Val(1) - x37))) * Val(16))) +
              (((x222 * x38) + ((Val(1) - x222) * (Val(1) - x38))) * Val(32)));
  Val x305 = ((x304 + (((x224 * x39) + ((Val(1) - x224) * (Val(1) - x39))) * Val(64))) +
              (((x226 * x40) + ((Val(1) - x226) * (Val(1) - x40))) * Val(128)));
  Val x306 = ((x305 + (((x228 * x41) + ((Val(1) - x228) * (Val(1) - x41))) * Val(256))) +
              (((x230 * x42) + ((Val(1) - x230) * (Val(1) - x42))) * Val(512)));
  Val x307 = ((x306 + (((x232 * x43) + ((Val(1) - x232) * (Val(1) - x43))) * Val(1024))) +
              (((x234 * x44) + ((Val(1) - x234) * (Val(1) - x44))) * Val(2048)));
  Val x308 = ((x307 + (((x236 * x45) + ((Val(1) - x236) * (Val(1) - x45))) * Val(4096))) +
              (((x238 * x46) + ((Val(1) - x238) * (Val(1) - x46))) * Val(8192)));
  Val x309 = ((x308 + (((x240 * x47) + ((Val(1) - x240) * (Val(1) - x47))) * Val(16384))) +
              (((x242 * x48) + ((Val(1) - x242) * (Val(1) - x48))) * Val(32768)));
  Val x310 = ((x309 + (((x244 * x49) + ((Val(1) - x244) * (Val(1) - x49))) * Val(65536))) +
              (((x246 * x50) + ((Val(1) - x246) * (Val(1) - x50))) * Val(131072)));
  Val x311 = ((x310 + (((x248 * x51) + ((Val(1) - x248) * (Val(1) - x51))) * Val(262144))) +
              (((x250 * x52) + ((Val(1) - x250) * (Val(1) - x52))) * Val(524288)));
  Val x312 = ((x311 + (((x252 * x53) + ((Val(1) - x252) * (Val(1) - x53))) * Val(1048576))) +
              (((x254 * x54) + ((Val(1) - x254) * (Val(1) - x54))) * Val(2097152)));
  NondetRegStruct x313 = exec_Reg(ctx, x312, LAYOUT_LOOKUP(layout2, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:423)
  Val x314 = (((x256 * x55) + ((Val(1) - x256) * (Val(1) - x55))) +
              (((x258 * x56) + ((Val(1) - x258) * (Val(1) - x56))) * Val(2)));
  Val x315 = ((x314 + (((x261 * x57) + ((Val(1) - x261) * (Val(1) - x57))) * Val(4))) +
              (((x263 * x64) + ((Val(1) - x263) * (Val(1) - x64))) * Val(8)));
  Val x316 = ((x315 + (((x265 * x65) + ((Val(1) - x265) * (Val(1) - x65))) * Val(16))) +
              (((x267 * x66) + ((Val(1) - x267) * (Val(1) - x66))) * Val(32)));
  Val x317 = ((x316 + (((x269 * x67) + ((Val(1) - x269) * (Val(1) - x67))) * Val(64))) +
              (((x271 * x68) + ((Val(1) - x271) * (Val(1) - x68))) * Val(128)));
  Val x318 = ((x317 + (((x273 * x69) + ((Val(1) - x273) * (Val(1) - x69))) * Val(256))) +
              (((x275 * x70) + ((Val(1) - x275) * (Val(1) - x70))) * Val(512)));
  Val x319 = ((x318 + (((x277 * x71) + ((Val(1) - x277) * (Val(1) - x71))) * Val(1024))) +
              (((x279 * x72) + ((Val(1) - x279) * (Val(1) - x72))) * Val(2048)));
  Val x320 = ((x319 + (((x281 * x73) + ((Val(1) - x281) * (Val(1) - x73))) * Val(4096))) +
              (((x283 * x74) + ((Val(1) - x283) * (Val(1) - x74))) * Val(8192)));
  Val x321 = ((x320 + (((x285 * x75) + ((Val(1) - x285) * (Val(1) - x75))) * Val(16384))) +
              (((x287 * x76) + ((Val(1) - x287) * (Val(1) - x76))) * Val(32768)));
  Val x322 = ((x321 + (((x289 * x77) + ((Val(1) - x289) * (Val(1) - x77))) * Val(65536))) +
              (((x291 * x78) + ((Val(1) - x291) * (Val(1) - x78))) * Val(131072)));
  Val x323 = ((x322 + (((x293 * x79) + ((Val(1) - x293) * (Val(1) - x79))) * Val(262144))) +
              (((x295 * x80) + ((Val(1) - x295) * (Val(1) - x80))) * Val(524288)));
  NondetRegStruct x324 =
      exec_Reg(ctx,
               (x323 + (((x297 * x81) + ((Val(1) - x297) * (Val(1) - x81))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _1));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:424)
  Val x325 = (((x299 * x82) + ((Val(1) - x299) * (Val(1) - x82))) +
              (((x301 * x83) + ((Val(1) - x301) * (Val(1) - x83))) * Val(2)));
  Val x326 = ((x325 + (((x173 * x84) + ((Val(1) - x173) * (Val(1) - x84))) * Val(4))) +
              (((x175 * x9) + ((Val(1) - x175) * (Val(1) - x9))) * Val(8)));
  Val x327 = ((x326 + (((x177 * x10) + ((Val(1) - x177) * (Val(1) - x10))) * Val(16))) +
              (((x179 * x11) + ((Val(1) - x179) * (Val(1) - x11))) * Val(32)));
  Val x328 = ((x327 + (((x181 * x12) + ((Val(1) - x181) * (Val(1) - x12))) * Val(64))) +
              (((x183 * x13) + ((Val(1) - x183) * (Val(1) - x13))) * Val(128)));
  Val x329 = ((x328 + (((x185 * x14) + ((Val(1) - x185) * (Val(1) - x14))) * Val(256))) +
              (((x187 * x15) + ((Val(1) - x187) * (Val(1) - x15))) * Val(512)));
  Val x330 = ((x329 + (((x189 * x16) + ((Val(1) - x189) * (Val(1) - x16))) * Val(1024))) +
              (((x191 * x17) + ((Val(1) - x191) * (Val(1) - x17))) * Val(2048)));
  Val x331 = ((x330 + (((x193 * x18) + ((Val(1) - x193) * (Val(1) - x18))) * Val(4096))) +
              (((x195 * x19) + ((Val(1) - x195) * (Val(1) - x19))) * Val(8192)));
  Val x332 = ((x331 + (((x197 * x20) + ((Val(1) - x197) * (Val(1) - x20))) * Val(16384))) +
              (((x199 * x21) + ((Val(1) - x199) * (Val(1) - x21))) * Val(32768)));
  Val x333 = ((x332 + (((x201 * x22) + ((Val(1) - x201) * (Val(1) - x22))) * Val(65536))) +
              (((x203 * x23) + ((Val(1) - x203) * (Val(1) - x23))) * Val(131072)));
  Val x334 = ((x333 + (((x205 * x24) + ((Val(1) - x205) * (Val(1) - x24))) * Val(262144))) +
              (((x207 * x25) + ((Val(1) - x207) * (Val(1) - x25))) * Val(524288)));
  NondetRegStruct x335 =
      exec_Reg(ctx,
               (x334 + (((x209 * x26) + ((Val(1) - x209) * (Val(1) - x26))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _2));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:427)
  Val22Array x336 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x337 = exec_RetTuple(
      ctx,
      x336,
      x336,
      x336,
      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
      x336,
      Val22Array{x313._super, x324._super, x335._super, Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0)},
      Val(3),
      Val(8),
      x4.rnd._super,
      x4.blk._super,
      x4.midx._super,
      LAYOUT_LOOKUP(layout2, _super));
  return x337;
}
RetTupleStruct execRhoMinor0_2__3_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<RhoMinor0_2__3_Layout> layout2) {
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  RetTupleStruct x3 = back_RetTuple(ctx, 4, arg1);
  NondetRegStruct24Array x4 = x3.arrD;
  Val x5 = x4[12]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:257)
  ToBits_22_Struct x6 = exec_ToBits_22_(ctx, x5, LAYOUT_LOOKUP(layout2, unpackM1));
  NondetRegStruct22Array x7 = x6._super;
  Val x8 = x7[0]._super;
  Val x9 = x7[1]._super;
  Val x10 = x7[2]._super;
  Val x11 = x7[3]._super;
  Val x12 = x7[4]._super;
  Val x13 = x7[5]._super;
  Val x14 = x7[6]._super;
  Val x15 = x7[7]._super;
  Val x16 = x7[8]._super;
  Val x17 = x7[9]._super;
  Val x18 = x7[10]._super;
  Val x19 = x7[11]._super;
  Val x20 = x7[12]._super;
  Val x21 = x7[13]._super;
  Val x22 = x7[14]._super;
  Val x23 = x7[15]._super;
  Val x24 = x7[16]._super;
  Val x25 = x7[17]._super;
  Val x26 = x7[18]._super;
  Val x27 = x7[19]._super;
  Val x28 = x7[20]._super;
  Val x29 = x7[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:258)
  Val x30 = ((((((x8 + (x9 * Val(2))) + (x10 * Val(4))) + (x11 * Val(8))) + (x12 * Val(16))) +
              (x13 * Val(32))) +
             (x14 * Val(64)));
  Val x31 =
      ((((((x30 + (x15 * Val(128))) + (x16 * Val(256))) + (x17 * Val(512))) + (x18 * Val(1024))) +
        (x19 * Val(2048))) +
       (x20 * Val(4096)));
  Val x32 = ((((((x31 + (x21 * Val(8192))) + (x22 * Val(16384))) + (x23 * Val(32768))) +
               (x24 * Val(65536))) +
              (x25 * Val(131072))) +
             (x26 * Val(262144)));
  EQZ(((((x32 + (x27 * Val(524288))) + (x28 * Val(1048576))) + (x29 * Val(2097152))) - x5),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:258)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x33 = x4[13]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:261)
  ToBits_21_Struct x34 = exec_ToBits_21_(ctx, x33, LAYOUT_LOOKUP(layout2, unpackM2));
  NondetRegStruct21Array x35 = x34._super;
  Val x36 = x35[0]._super;
  Val x37 = x35[1]._super;
  Val x38 = x35[2]._super;
  Val x39 = x35[3]._super;
  Val x40 = x35[4]._super;
  Val x41 = x35[5]._super;
  Val x42 = x35[6]._super;
  Val x43 = x35[7]._super;
  Val x44 = x35[8]._super;
  Val x45 = x35[9]._super;
  Val x46 = x35[10]._super;
  Val x47 = x35[11]._super;
  Val x48 = x35[12]._super;
  Val x49 = x35[13]._super;
  Val x50 = x35[14]._super;
  Val x51 = x35[15]._super;
  Val x52 = x35[16]._super;
  Val x53 = x35[17]._super;
  Val x54 = x35[18]._super;
  Val x55 = x35[19]._super;
  Val x56 = x35[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:262)
  Val x57 = ((((((x36 + (x37 * Val(2))) + (x38 * Val(4))) + (x39 * Val(8))) + (x40 * Val(16))) +
              (x41 * Val(32))) +
             (x42 * Val(64)));
  Val x58 =
      ((((((x57 + (x43 * Val(128))) + (x44 * Val(256))) + (x45 * Val(512))) + (x46 * Val(1024))) +
        (x47 * Val(2048))) +
       (x48 * Val(4096)));
  Val x59 = ((((((x58 + (x49 * Val(8192))) + (x50 * Val(16384))) + (x51 * Val(32768))) +
               (x52 * Val(65536))) +
              (x53 * Val(131072))) +
             (x54 * Val(262144)));
  EQZ((((x59 + (x55 * Val(524288))) + (x56 * Val(1048576))) - x33),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:262)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x60 = x4[14]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:266)
  ToBits_21_Struct x61 = exec_ToBits_21_(ctx, x60, LAYOUT_LOOKUP(layout2, unpackM3));
  NondetRegStruct21Array x62 = x61._super;
  Val x63 = x62[0]._super;
  Val x64 = x62[1]._super;
  Val x65 = x62[2]._super;
  Val x66 = x62[3]._super;
  Val x67 = x62[4]._super;
  Val x68 = x62[5]._super;
  Val x69 = x62[6]._super;
  Val x70 = x62[7]._super;
  Val x71 = x62[8]._super;
  Val x72 = x62[9]._super;
  Val x73 = x62[10]._super;
  Val x74 = x62[11]._super;
  Val x75 = x62[12]._super;
  Val x76 = x62[13]._super;
  Val x77 = x62[14]._super;
  Val x78 = x62[15]._super;
  Val x79 = x62[16]._super;
  Val x80 = x62[17]._super;
  Val x81 = x62[18]._super;
  Val x82 = x62[19]._super;
  Val x83 = x62[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:267)
  Val x84 = ((((((x63 + (x64 * Val(2))) + (x65 * Val(4))) + (x66 * Val(8))) + (x67 * Val(16))) +
              (x68 * Val(32))) +
             (x69 * Val(64)));
  Val x85 =
      ((((((x84 + (x70 * Val(128))) + (x71 * Val(256))) + (x72 * Val(512))) + (x73 * Val(1024))) +
        (x74 * Val(2048))) +
       (x75 * Val(4096)));
  Val x86 = ((((((x85 + (x76 * Val(8192))) + (x77 * Val(16384))) + (x78 * Val(32768))) +
               (x79 * Val(65536))) +
              (x80 * Val(131072))) +
             (x81 * Val(262144)));
  EQZ((((x86 + (x82 * Val(524288))) + (x83 * Val(1048576))) - x60),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:267)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x87 = x4[18]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:271)
  ToBits_22_Struct x88 = exec_ToBits_22_(ctx, x87, LAYOUT_LOOKUP(layout2, unpackP1));
  NondetRegStruct22Array x89 = x88._super;
  Val x90 = x89[0]._super;
  Val x91 = x89[1]._super;
  Val x92 = x89[2]._super;
  Val x93 = x89[3]._super;
  Val x94 = x89[4]._super;
  Val x95 = x89[5]._super;
  Val x96 = x89[6]._super;
  Val x97 = x89[7]._super;
  Val x98 = x89[8]._super;
  Val x99 = x89[9]._super;
  Val x100 = x89[10]._super;
  Val x101 = x89[11]._super;
  Val x102 = x89[12]._super;
  Val x103 = x89[13]._super;
  Val x104 = x89[14]._super;
  Val x105 = x89[15]._super;
  Val x106 = x89[16]._super;
  Val x107 = x89[17]._super;
  Val x108 = x89[18]._super;
  Val x109 = x89[19]._super;
  Val x110 = x89[20]._super;
  Val x111 = x89[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:272)
  Val x112 = ((((((x90 + (x91 * Val(2))) + (x92 * Val(4))) + (x93 * Val(8))) + (x94 * Val(16))) +
               (x95 * Val(32))) +
              (x96 * Val(64)));
  Val x113 =
      ((((((x112 + (x97 * Val(128))) + (x98 * Val(256))) + (x99 * Val(512))) + (x100 * Val(1024))) +
        (x101 * Val(2048))) +
       (x102 * Val(4096)));
  Val x114 = ((((((x113 + (x103 * Val(8192))) + (x104 * Val(16384))) + (x105 * Val(32768))) +
                (x106 * Val(65536))) +
               (x107 * Val(131072))) +
              (x108 * Val(262144)));
  EQZ(((((x114 + (x109 * Val(524288))) + (x110 * Val(1048576))) + (x111 * Val(2097152))) - x87),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:272)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x115 = x4[19]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:275)
  ToBits_21_Struct x116 = exec_ToBits_21_(ctx, x115, LAYOUT_LOOKUP(layout2, unpackP2));
  NondetRegStruct21Array x117 = x116._super;
  Val x118 = x117[0]._super;
  Val x119 = x117[1]._super;
  Val x120 = x117[2]._super;
  Val x121 = x117[3]._super;
  Val x122 = x117[4]._super;
  Val x123 = x117[5]._super;
  Val x124 = x117[6]._super;
  Val x125 = x117[7]._super;
  Val x126 = x117[8]._super;
  Val x127 = x117[9]._super;
  Val x128 = x117[10]._super;
  Val x129 = x117[11]._super;
  Val x130 = x117[12]._super;
  Val x131 = x117[13]._super;
  Val x132 = x117[14]._super;
  Val x133 = x117[15]._super;
  Val x134 = x117[16]._super;
  Val x135 = x117[17]._super;
  Val x136 = x117[18]._super;
  Val x137 = x117[19]._super;
  Val x138 = x117[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:276)
  Val x139 =
      ((((((x118 + (x119 * Val(2))) + (x120 * Val(4))) + (x121 * Val(8))) + (x122 * Val(16))) +
        (x123 * Val(32))) +
       (x124 * Val(64)));
  Val x140 = ((((((x139 + (x125 * Val(128))) + (x126 * Val(256))) + (x127 * Val(512))) +
                (x128 * Val(1024))) +
               (x129 * Val(2048))) +
              (x130 * Val(4096)));
  Val x141 = ((((((x140 + (x131 * Val(8192))) + (x132 * Val(16384))) + (x133 * Val(32768))) +
                (x134 * Val(65536))) +
               (x135 * Val(131072))) +
              (x136 * Val(262144)));
  EQZ((((x141 + (x137 * Val(524288))) + (x138 * Val(1048576))) - x115),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:276)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x142 = x4[20]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:279)
  ToBits_21_Struct x143 = exec_ToBits_21_(ctx, x142, LAYOUT_LOOKUP(layout2, unpackP3));
  NondetRegStruct21Array x144 = x143._super;
  Val x145 = x144[0]._super;
  Val x146 = x144[1]._super;
  Val x147 = x144[2]._super;
  Val x148 = x144[3]._super;
  Val x149 = x144[4]._super;
  Val x150 = x144[5]._super;
  Val x151 = x144[6]._super;
  Val x152 = x144[7]._super;
  Val x153 = x144[8]._super;
  Val x154 = x144[9]._super;
  Val x155 = x144[10]._super;
  Val x156 = x144[11]._super;
  Val x157 = x144[12]._super;
  Val x158 = x144[13]._super;
  Val x159 = x144[14]._super;
  Val x160 = x144[15]._super;
  Val x161 = x144[16]._super;
  Val x162 = x144[17]._super;
  Val x163 = x144[18]._super;
  Val x164 = x144[19]._super;
  Val x165 = x144[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:280)
  Val x166 =
      ((((((x145 + (x146 * Val(2))) + (x147 * Val(4))) + (x148 * Val(8))) + (x149 * Val(16))) +
        (x150 * Val(32))) +
       (x151 * Val(64)));
  Val x167 = ((((((x166 + (x152 * Val(128))) + (x153 * Val(256))) + (x154 * Val(512))) +
                (x155 * Val(1024))) +
               (x156 * Val(2048))) +
              (x157 * Val(4096)));
  Val x168 = ((((((x167 + (x158 * Val(8192))) + (x159 * Val(16384))) + (x160 * Val(32768))) +
                (x161 * Val(65536))) +
               (x162 * Val(131072))) +
              (x163 * Val(262144)));
  EQZ((((x168 + (x164 * Val(524288))) + (x165 * Val(1048576))) - x142),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:280)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:287)
  RetTupleStruct x169 =
      exec_RetTuple(ctx,
                    Val22Array{x165, x90,  x91,  x92,  x93,  x94,  x95,  x96,  x97,  x98,  x99,
                               x100, x101, x102, x103, x104, x105, x106, x107, x108, x109, x110},
                    Val22Array{x111, x118, x119, x120, x121, x122, x123, x124, x125, x126, x127,
                               x128, x129, x130, x131, x132, x133, x134, x135, x136, x137, Val(0)},
                    Val22Array{x138, x145, x146, x147, x148, x149, x150, x151, x152, x153, x154,
                               x155, x156, x157, x158, x159, x160, x161, x162, x163, x164, Val(0)},
                    Val24Array{x8,  x9,  x10, x11, x12, x13, x14, x15, x16, x17, x18,    x19,
                               x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, Val(0), Val(0)},
                    Val22Array{x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46,
                               x47, x48, x49, x50, x51, x52, x53, x54, x55, x56, Val(0)},
                    Val22Array{x63, x64, x65, x66, x67, x68, x69, x70, x71, x72, x73,
                               x74, x75, x76, x77, x78, x79, x80, x81, x82, x83, Val(0)},
                    Val(4),
                    Val(8),
                    x3.rnd._super,
                    x3.blk._super,
                    x3.midx._super,
                    LAYOUT_LOOKUP(layout2, _super));
  return x169;
}
RetTupleStruct execRhoMinor1_2__3_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<RhoMinor1_2__3_Layout> layout2) {
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:341)
  BoundLayout<RhoMinor1_2__3__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:292)
  RetTupleStruct x4 = back_RetTuple(ctx, 5, arg1);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  RetTupleStruct x5 = back_RetTuple(ctx, 1, arg1);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:292)
  NondetRegStruct22Array x6 = x4.arrC;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:297)
  Val x7 = x6[7]._super;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:304)
  ToBits_22_Struct x8 = exec_ToBits_22_(ctx, x7, LAYOUT_LOOKUP(layout2, unpackXy1));
  NondetRegStruct22Array x9 = x8._super;
  Val x10 = x9[0]._super;
  Val x11 = x9[1]._super;
  Val x12 = x9[2]._super;
  Val x13 = x9[3]._super;
  Val x14 = x9[4]._super;
  Val x15 = x9[5]._super;
  Val x16 = x9[6]._super;
  Val x17 = x9[7]._super;
  Val x18 = x9[8]._super;
  Val x19 = x9[9]._super;
  Val x20 = x9[10]._super;
  Val x21 = x9[11]._super;
  Val x22 = x9[12]._super;
  Val x23 = x9[13]._super;
  Val x24 = x9[14]._super;
  Val x25 = x9[15]._super;
  Val x26 = x9[16]._super;
  Val x27 = x9[17]._super;
  Val x28 = x9[18]._super;
  Val x29 = x9[19]._super;
  Val x30 = x9[20]._super;
  Val x31 = x9[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:305)
  Val x32 = ((((((x10 + (x11 * Val(2))) + (x12 * Val(4))) + (x13 * Val(8))) + (x14 * Val(16))) +
              (x15 * Val(32))) +
             (x16 * Val(64)));
  Val x33 =
      ((((((x32 + (x17 * Val(128))) + (x18 * Val(256))) + (x19 * Val(512))) + (x20 * Val(1024))) +
        (x21 * Val(2048))) +
       (x22 * Val(4096)));
  Val x34 = ((((((x33 + (x23 * Val(8192))) + (x24 * Val(16384))) + (x25 * Val(32768))) +
               (x26 * Val(65536))) +
              (x27 * Val(131072))) +
             (x28 * Val(262144)));
  EQZ(((((x34 + (x29 * Val(524288))) + (x30 * Val(1048576))) + (x31 * Val(2097152))) - x7),
      "rho_minor1(zirgen/circuit/keccak/keccak.zir:305)");
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:309)
  Val x35 = x6[8]._super;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:316)
  ToBits_21_Struct x36 = exec_ToBits_21_(ctx, x35, LAYOUT_LOOKUP(layout2, unpackXy2));
  NondetRegStruct21Array x37 = x36._super;
  Val x38 = x37[0]._super;
  Val x39 = x37[1]._super;
  Val x40 = x37[2]._super;
  Val x41 = x37[3]._super;
  Val x42 = x37[4]._super;
  Val x43 = x37[5]._super;
  Val x44 = x37[6]._super;
  Val x45 = x37[7]._super;
  Val x46 = x37[8]._super;
  Val x47 = x37[9]._super;
  Val x48 = x37[10]._super;
  Val x49 = x37[11]._super;
  Val x50 = x37[12]._super;
  Val x51 = x37[13]._super;
  Val x52 = x37[14]._super;
  Val x53 = x37[15]._super;
  Val x54 = x37[16]._super;
  Val x55 = x37[17]._super;
  Val x56 = x37[18]._super;
  Val x57 = x37[19]._super;
  Val x58 = x37[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:317)
  Val x59 = ((((((x38 + (x39 * Val(2))) + (x40 * Val(4))) + (x41 * Val(8))) + (x42 * Val(16))) +
              (x43 * Val(32))) +
             (x44 * Val(64)));
  Val x60 =
      ((((((x59 + (x45 * Val(128))) + (x46 * Val(256))) + (x47 * Val(512))) + (x48 * Val(1024))) +
        (x49 * Val(2048))) +
       (x50 * Val(4096)));
  Val x61 = ((((((x60 + (x51 * Val(8192))) + (x52 * Val(16384))) + (x53 * Val(32768))) +
               (x54 * Val(65536))) +
              (x55 * Val(131072))) +
             (x56 * Val(262144)));
  EQZ((((x61 + (x57 * Val(524288))) + (x58 * Val(1048576))) - x35),
      "rho_minor1(zirgen/circuit/keccak/keccak.zir:317)");
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:321)
  Val x62 = x6[9]._super;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:328)
  ToBits_21_Struct x63 = exec_ToBits_21_(ctx, x62, LAYOUT_LOOKUP(layout2, unpackXy3));
  NondetRegStruct21Array x64 = x63._super;
  Val x65 = x64[0]._super;
  Val x66 = x64[1]._super;
  Val x67 = x64[2]._super;
  Val x68 = x64[3]._super;
  Val x69 = x64[4]._super;
  Val x70 = x64[5]._super;
  Val x71 = x64[6]._super;
  Val x72 = x64[7]._super;
  Val x73 = x64[8]._super;
  Val x74 = x64[9]._super;
  Val x75 = x64[10]._super;
  Val x76 = x64[11]._super;
  Val x77 = x64[12]._super;
  Val x78 = x64[13]._super;
  Val x79 = x64[14]._super;
  Val x80 = x64[15]._super;
  Val x81 = x64[16]._super;
  Val x82 = x64[17]._super;
  Val x83 = x64[18]._super;
  Val x84 = x64[19]._super;
  Val x85 = x64[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:329)
  Val x86 = ((((((x65 + (x66 * Val(2))) + (x67 * Val(4))) + (x68 * Val(8))) + (x69 * Val(16))) +
              (x70 * Val(32))) +
             (x71 * Val(64)));
  Val x87 =
      ((((((x86 + (x72 * Val(128))) + (x73 * Val(256))) + (x74 * Val(512))) + (x75 * Val(1024))) +
        (x76 * Val(2048))) +
       (x77 * Val(4096)));
  Val x88 = ((((((x87 + (x78 * Val(8192))) + (x79 * Val(16384))) + (x80 * Val(32768))) +
               (x81 * Val(65536))) +
              (x82 * Val(131072))) +
             (x83 * Val(262144)));
  EQZ((((x88 + (x84 * Val(524288))) + (x85 * Val(1048576))) - x62),
      "rho_minor1(zirgen/circuit/keccak/keccak.zir:329)");
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  NondetRegStruct22Array x89 = x5.arrA;
  NondetRegStruct24Array x90 = x5.arrD;
  Val x91 = x89[0]._super;
  Val x92 = x90[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x93 = ((x10 * x91) + ((Val(1) - x10) * (Val(1) - x91)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x94 = x89[1]._super;
  Val x95 = x90[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x96 = ((x11 * x94) + ((Val(1) - x11) * (Val(1) - x94)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x97 = x89[2]._super;
  Val x98 = x90[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x99 = ((x12 * x97) + ((Val(1) - x12) * (Val(1) - x97)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x100 = x89[3]._super;
  Val x101 = x90[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x102 = ((x13 * x100) + ((Val(1) - x13) * (Val(1) - x100)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x103 = x89[4]._super;
  Val x104 = x90[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x105 = ((x14 * x103) + ((Val(1) - x14) * (Val(1) - x103)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x106 = x89[5]._super;
  Val x107 = x90[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x108 = ((x15 * x106) + ((Val(1) - x15) * (Val(1) - x106)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x109 = x89[6]._super;
  Val x110 = x90[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x111 = ((x16 * x109) + ((Val(1) - x16) * (Val(1) - x109)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x112 = x89[7]._super;
  Val x113 = x90[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x114 = ((x17 * x112) + ((Val(1) - x17) * (Val(1) - x112)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x115 = x89[8]._super;
  Val x116 = x90[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x117 = ((x18 * x115) + ((Val(1) - x18) * (Val(1) - x115)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x118 = x89[9]._super;
  Val x119 = x90[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x120 = ((x19 * x118) + ((Val(1) - x19) * (Val(1) - x118)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x121 = x89[10]._super;
  Val x122 = x90[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x123 = ((x20 * x121) + ((Val(1) - x20) * (Val(1) - x121)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x124 = x89[11]._super;
  Val x125 = x90[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x126 = ((x21 * x124) + ((Val(1) - x21) * (Val(1) - x124)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x127 = x89[12]._super;
  Val x128 = x90[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x129 = ((x22 * x127) + ((Val(1) - x22) * (Val(1) - x127)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x130 = x89[13]._super;
  Val x131 = x90[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x132 = ((x23 * x130) + ((Val(1) - x23) * (Val(1) - x130)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x133 = x89[14]._super;
  Val x134 = x90[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x135 = ((x24 * x133) + ((Val(1) - x24) * (Val(1) - x133)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x136 = x89[15]._super;
  Val x137 = x90[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x138 = ((x25 * x136) + ((Val(1) - x25) * (Val(1) - x136)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x139 = x89[16]._super;
  Val x140 = x90[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x141 = ((x26 * x139) + ((Val(1) - x26) * (Val(1) - x139)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x142 = x89[17]._super;
  Val x143 = x90[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x144 = ((x27 * x142) + ((Val(1) - x27) * (Val(1) - x142)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x145 = x89[18]._super;
  Val x146 = x90[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x147 = ((x28 * x145) + ((Val(1) - x28) * (Val(1) - x145)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x148 = x89[19]._super;
  Val x149 = x90[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x150 = ((x29 * x148) + ((Val(1) - x29) * (Val(1) - x148)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x151 = x89[20]._super;
  Val x152 = x90[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x153 = ((x30 * x151) + ((Val(1) - x30) * (Val(1) - x151)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x154 = x89[21]._super;
  Val x155 = x90[21]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x156 = ((x31 * x154) + ((Val(1) - x31) * (Val(1) - x154)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  NondetRegStruct22Array x157 = x5.arrB;
  NondetRegStruct22Array x158 = x5.arrE;
  Val x159 = x157[0]._super;
  Val x160 = x158[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x161 = ((x38 * x159) + ((Val(1) - x38) * (Val(1) - x159)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x162 = x157[1]._super;
  Val x163 = x158[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x164 = ((x39 * x162) + ((Val(1) - x39) * (Val(1) - x162)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x165 = x157[2]._super;
  Val x166 = x158[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x167 = ((x40 * x165) + ((Val(1) - x40) * (Val(1) - x165)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x168 = x157[3]._super;
  Val x169 = x158[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x170 = ((x41 * x168) + ((Val(1) - x41) * (Val(1) - x168)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x171 = x157[4]._super;
  Val x172 = x158[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x173 = ((x42 * x171) + ((Val(1) - x42) * (Val(1) - x171)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x174 = x157[5]._super;
  Val x175 = x158[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x176 = ((x43 * x174) + ((Val(1) - x43) * (Val(1) - x174)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x177 = x157[6]._super;
  Val x178 = x158[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x179 = ((x44 * x177) + ((Val(1) - x44) * (Val(1) - x177)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x180 = x157[7]._super;
  Val x181 = x158[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x182 = ((x45 * x180) + ((Val(1) - x45) * (Val(1) - x180)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x183 = x157[8]._super;
  Val x184 = x158[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x185 = ((x46 * x183) + ((Val(1) - x46) * (Val(1) - x183)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x186 = x157[9]._super;
  Val x187 = x158[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x188 = ((x47 * x186) + ((Val(1) - x47) * (Val(1) - x186)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x189 = x157[10]._super;
  Val x190 = x158[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x191 = ((x48 * x189) + ((Val(1) - x48) * (Val(1) - x189)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x192 = x157[11]._super;
  Val x193 = x158[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x194 = ((x49 * x192) + ((Val(1) - x49) * (Val(1) - x192)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x195 = x157[12]._super;
  Val x196 = x158[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x197 = ((x50 * x195) + ((Val(1) - x50) * (Val(1) - x195)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x198 = x157[13]._super;
  Val x199 = x158[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x200 = ((x51 * x198) + ((Val(1) - x51) * (Val(1) - x198)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x201 = x157[14]._super;
  Val x202 = x158[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x203 = ((x52 * x201) + ((Val(1) - x52) * (Val(1) - x201)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x204 = x157[15]._super;
  Val x205 = x158[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x206 = ((x53 * x204) + ((Val(1) - x53) * (Val(1) - x204)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x207 = x157[16]._super;
  Val x208 = x158[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x209 = ((x54 * x207) + ((Val(1) - x54) * (Val(1) - x207)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x210 = x157[17]._super;
  Val x211 = x158[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x212 = ((x55 * x210) + ((Val(1) - x55) * (Val(1) - x210)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x213 = x157[18]._super;
  Val x214 = x158[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x215 = ((x56 * x213) + ((Val(1) - x56) * (Val(1) - x213)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x216 = x157[19]._super;
  Val x217 = x158[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x218 = ((x57 * x216) + ((Val(1) - x57) * (Val(1) - x216)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x219 = x157[20]._super;
  Val x220 = x158[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x221 = ((x58 * x219) + ((Val(1) - x58) * (Val(1) - x219)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  NondetRegStruct22Array x222 = x5.arrC;
  NondetRegStruct22Array x223 = x5.arrF;
  Val x224 = x222[0]._super;
  Val x225 = x223[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x226 = ((x65 * x224) + ((Val(1) - x65) * (Val(1) - x224)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x227 = x222[1]._super;
  Val x228 = x223[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x229 = ((x66 * x227) + ((Val(1) - x66) * (Val(1) - x227)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x230 = x222[2]._super;
  Val x231 = x223[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x232 = ((x67 * x230) + ((Val(1) - x67) * (Val(1) - x230)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x233 = x222[3]._super;
  Val x234 = x223[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x235 = ((x68 * x233) + ((Val(1) - x68) * (Val(1) - x233)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x236 = x222[4]._super;
  Val x237 = x223[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x238 = ((x69 * x236) + ((Val(1) - x69) * (Val(1) - x236)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x239 = x222[5]._super;
  Val x240 = x223[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x241 = ((x70 * x239) + ((Val(1) - x70) * (Val(1) - x239)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x242 = x222[6]._super;
  Val x243 = x223[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x244 = ((x71 * x242) + ((Val(1) - x71) * (Val(1) - x242)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x245 = x222[7]._super;
  Val x246 = x223[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x247 = ((x72 * x245) + ((Val(1) - x72) * (Val(1) - x245)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x248 = x222[8]._super;
  Val x249 = x223[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x250 = ((x73 * x248) + ((Val(1) - x73) * (Val(1) - x248)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x251 = x222[9]._super;
  Val x252 = x223[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x253 = ((x74 * x251) + ((Val(1) - x74) * (Val(1) - x251)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x254 = x222[10]._super;
  Val x255 = x223[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x256 = ((x75 * x254) + ((Val(1) - x75) * (Val(1) - x254)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x257 = x222[11]._super;
  Val x258 = x223[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x259 = ((x76 * x257) + ((Val(1) - x76) * (Val(1) - x257)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x260 = x222[12]._super;
  Val x261 = x223[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x262 = ((x77 * x260) + ((Val(1) - x77) * (Val(1) - x260)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x263 = x222[13]._super;
  Val x264 = x223[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x265 = ((x78 * x263) + ((Val(1) - x78) * (Val(1) - x263)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x266 = x222[14]._super;
  Val x267 = x223[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x268 = ((x79 * x266) + ((Val(1) - x79) * (Val(1) - x266)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x269 = x222[15]._super;
  Val x270 = x223[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x271 = ((x80 * x269) + ((Val(1) - x80) * (Val(1) - x269)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x272 = x222[16]._super;
  Val x273 = x223[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x274 = ((x81 * x272) + ((Val(1) - x81) * (Val(1) - x272)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x275 = x222[17]._super;
  Val x276 = x223[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x277 = ((x82 * x275) + ((Val(1) - x82) * (Val(1) - x275)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x278 = x222[18]._super;
  Val x279 = x223[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x280 = ((x83 * x278) + ((Val(1) - x83) * (Val(1) - x278)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x281 = x222[19]._super;
  Val x282 = x223[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x283 = ((x84 * x281) + ((Val(1) - x84) * (Val(1) - x281)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x284 = x222[20]._super;
  Val x285 = x223[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x286 = ((x85 * x284) + ((Val(1) - x85) * (Val(1) - x284)));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:336)
  Val x287 = (((x244 * x243) + ((Val(1) - x244) * (Val(1) - x243))) +
              (((x247 * x246) + ((Val(1) - x247) * (Val(1) - x246))) * Val(2)));
  Val x288 = ((x287 + (((x250 * x249) + ((Val(1) - x250) * (Val(1) - x249))) * Val(4))) +
              (((x253 * x252) + ((Val(1) - x253) * (Val(1) - x252))) * Val(8)));
  Val x289 = ((x288 + (((x256 * x255) + ((Val(1) - x256) * (Val(1) - x255))) * Val(16))) +
              (((x259 * x258) + ((Val(1) - x259) * (Val(1) - x258))) * Val(32)));
  Val x290 = ((x289 + (((x262 * x261) + ((Val(1) - x262) * (Val(1) - x261))) * Val(64))) +
              (((x265 * x264) + ((Val(1) - x265) * (Val(1) - x264))) * Val(128)));
  Val x291 = ((x290 + (((x268 * x267) + ((Val(1) - x268) * (Val(1) - x267))) * Val(256))) +
              (((x271 * x270) + ((Val(1) - x271) * (Val(1) - x270))) * Val(512)));
  Val x292 = ((x291 + (((x274 * x273) + ((Val(1) - x274) * (Val(1) - x273))) * Val(1024))) +
              (((x277 * x276) + ((Val(1) - x277) * (Val(1) - x276))) * Val(2048)));
  Val x293 = ((x292 + (((x280 * x279) + ((Val(1) - x280) * (Val(1) - x279))) * Val(4096))) +
              (((x283 * x282) + ((Val(1) - x283) * (Val(1) - x282))) * Val(8192)));
  Val x294 = ((x293 + (((x286 * x285) + ((Val(1) - x286) * (Val(1) - x285))) * Val(16384))) +
              (((x93 * x92) + ((Val(1) - x93) * (Val(1) - x92))) * Val(32768)));
  Val x295 = ((x294 + (((x96 * x95) + ((Val(1) - x96) * (Val(1) - x95))) * Val(65536))) +
              (((x99 * x98) + ((Val(1) - x99) * (Val(1) - x98))) * Val(131072)));
  Val x296 = ((x295 + (((x102 * x101) + ((Val(1) - x102) * (Val(1) - x101))) * Val(262144))) +
              (((x105 * x104) + ((Val(1) - x105) * (Val(1) - x104))) * Val(524288)));
  Val x297 = ((x296 + (((x108 * x107) + ((Val(1) - x108) * (Val(1) - x107))) * Val(1048576))) +
              (((x111 * x110) + ((Val(1) - x111) * (Val(1) - x110))) * Val(2097152)));
  NondetRegStruct x298 = exec_Reg(ctx, x297, LAYOUT_LOOKUP(layout2, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:337)
  Val x299 = (((x114 * x113) + ((Val(1) - x114) * (Val(1) - x113))) +
              (((x117 * x116) + ((Val(1) - x117) * (Val(1) - x116))) * Val(2)));
  Val x300 = ((x299 + (((x120 * x119) + ((Val(1) - x120) * (Val(1) - x119))) * Val(4))) +
              (((x123 * x122) + ((Val(1) - x123) * (Val(1) - x122))) * Val(8)));
  Val x301 = ((x300 + (((x126 * x125) + ((Val(1) - x126) * (Val(1) - x125))) * Val(16))) +
              (((x129 * x128) + ((Val(1) - x129) * (Val(1) - x128))) * Val(32)));
  Val x302 = ((x301 + (((x132 * x131) + ((Val(1) - x132) * (Val(1) - x131))) * Val(64))) +
              (((x135 * x134) + ((Val(1) - x135) * (Val(1) - x134))) * Val(128)));
  Val x303 = ((x302 + (((x138 * x137) + ((Val(1) - x138) * (Val(1) - x137))) * Val(256))) +
              (((x141 * x140) + ((Val(1) - x141) * (Val(1) - x140))) * Val(512)));
  Val x304 = ((x303 + (((x144 * x143) + ((Val(1) - x144) * (Val(1) - x143))) * Val(1024))) +
              (((x147 * x146) + ((Val(1) - x147) * (Val(1) - x146))) * Val(2048)));
  Val x305 = ((x304 + (((x150 * x149) + ((Val(1) - x150) * (Val(1) - x149))) * Val(4096))) +
              (((x153 * x152) + ((Val(1) - x153) * (Val(1) - x152))) * Val(8192)));
  Val x306 = ((x305 + (((x156 * x155) + ((Val(1) - x156) * (Val(1) - x155))) * Val(16384))) +
              (((x161 * x160) + ((Val(1) - x161) * (Val(1) - x160))) * Val(32768)));
  Val x307 = ((x306 + (((x164 * x163) + ((Val(1) - x164) * (Val(1) - x163))) * Val(65536))) +
              (((x167 * x166) + ((Val(1) - x167) * (Val(1) - x166))) * Val(131072)));
  Val x308 = ((x307 + (((x170 * x169) + ((Val(1) - x170) * (Val(1) - x169))) * Val(262144))) +
              (((x173 * x172) + ((Val(1) - x173) * (Val(1) - x172))) * Val(524288)));
  NondetRegStruct x309 =
      exec_Reg(ctx,
               (x308 + (((x176 * x175) + ((Val(1) - x176) * (Val(1) - x175))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _1));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:338)
  Val x310 = (((x179 * x178) + ((Val(1) - x179) * (Val(1) - x178))) +
              (((x182 * x181) + ((Val(1) - x182) * (Val(1) - x181))) * Val(2)));
  Val x311 = ((x310 + (((x185 * x184) + ((Val(1) - x185) * (Val(1) - x184))) * Val(4))) +
              (((x188 * x187) + ((Val(1) - x188) * (Val(1) - x187))) * Val(8)));
  Val x312 = ((x311 + (((x191 * x190) + ((Val(1) - x191) * (Val(1) - x190))) * Val(16))) +
              (((x194 * x193) + ((Val(1) - x194) * (Val(1) - x193))) * Val(32)));
  Val x313 = ((x312 + (((x197 * x196) + ((Val(1) - x197) * (Val(1) - x196))) * Val(64))) +
              (((x200 * x199) + ((Val(1) - x200) * (Val(1) - x199))) * Val(128)));
  Val x314 = ((x313 + (((x203 * x202) + ((Val(1) - x203) * (Val(1) - x202))) * Val(256))) +
              (((x206 * x205) + ((Val(1) - x206) * (Val(1) - x205))) * Val(512)));
  Val x315 = ((x314 + (((x209 * x208) + ((Val(1) - x209) * (Val(1) - x208))) * Val(1024))) +
              (((x212 * x211) + ((Val(1) - x212) * (Val(1) - x211))) * Val(2048)));
  Val x316 = ((x315 + (((x215 * x214) + ((Val(1) - x215) * (Val(1) - x214))) * Val(4096))) +
              (((x218 * x217) + ((Val(1) - x218) * (Val(1) - x217))) * Val(8192)));
  Val x317 = ((x316 + (((x221 * x220) + ((Val(1) - x221) * (Val(1) - x220))) * Val(16384))) +
              (((x226 * x225) + ((Val(1) - x226) * (Val(1) - x225))) * Val(32768)));
  Val x318 = ((x317 + (((x229 * x228) + ((Val(1) - x229) * (Val(1) - x228))) * Val(65536))) +
              (((x232 * x231) + ((Val(1) - x232) * (Val(1) - x231))) * Val(131072)));
  Val x319 = ((x318 + (((x235 * x234) + ((Val(1) - x235) * (Val(1) - x234))) * Val(262144))) +
              (((x238 * x237) + ((Val(1) - x238) * (Val(1) - x237))) * Val(524288)));
  NondetRegStruct x320 =
      exec_Reg(ctx,
               (x319 + (((x241 * x240) + ((Val(1) - x241) * (Val(1) - x240))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _2));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:341)
  BoundLayout<RhoMinor1_2__3_Arm1_SuperLayout> x321 = LAYOUT_LOOKUP(x3, arm1);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:342)
  Val22Array x322 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  Val24Array x323 = Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:339)
  Val22Array x324 =
      Val22Array{x298._super, x309._super, x320._super, Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0)};
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x325 = x5.rnd._super;
  Val x326 = x5.blk._super;
  Val x327 = x5.midx._super;
  if (to_size_t(Val(0))) {
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:342)
    RetTupleStruct x328 = exec_RetTuple(ctx,
                                        x322,
                                        x322,
                                        x322,
                                        x323,
                                        x322,
                                        x324,
                                        Val(8),
                                        Val(8),
                                        x325,
                                        x326,
                                        x327,
                                        LAYOUT_LOOKUP(x3, arm0));
  }
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:292)
  NondetRegStruct24Array x329 = x4.arrD;
  Val x330 = x329[15]._super;
  Val x331 = x329[16]._super;
  Val x332 = x329[17]._super;
  if (to_size_t(Val(1))) {
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:345)
    ToBits_22_Struct x333 = exec_ToBits_22_(ctx, x330, LAYOUT_LOOKUP(x321, unpackM1));
    NondetRegStruct22Array x334 = x333._super;
    Val x335 = x334[0]._super;
    Val x336 = x334[1]._super;
    Val x337 = x334[2]._super;
    Val x338 = x334[3]._super;
    Val x339 = x334[4]._super;
    Val x340 = x334[5]._super;
    Val x341 = x334[6]._super;
    Val x342 = x334[7]._super;
    Val x343 = x334[8]._super;
    Val x344 = x334[9]._super;
    Val x345 = x334[10]._super;
    Val x346 = x334[11]._super;
    Val x347 = x334[12]._super;
    Val x348 = x334[13]._super;
    Val x349 = x334[14]._super;
    Val x350 = x334[15]._super;
    Val x351 = x334[16]._super;
    Val x352 = x334[17]._super;
    Val x353 = x334[18]._super;
    Val x354 = x334[19]._super;
    Val x355 = x334[20]._super;
    Val x356 = x334[21]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:346)
    Val x357 =
        ((((((x335 + (x336 * Val(2))) + (x337 * Val(4))) + (x338 * Val(8))) + (x339 * Val(16))) +
          (x340 * Val(32))) +
         (x341 * Val(64)));
    Val x358 = ((((((x357 + (x342 * Val(128))) + (x343 * Val(256))) + (x344 * Val(512))) +
                  (x345 * Val(1024))) +
                 (x346 * Val(2048))) +
                (x347 * Val(4096)));
    Val x359 = ((((((x358 + (x348 * Val(8192))) + (x349 * Val(16384))) + (x350 * Val(32768))) +
                  (x351 * Val(65536))) +
                 (x352 * Val(131072))) +
                (x353 * Val(262144)));
    EQZ(((((x359 + (x354 * Val(524288))) + (x355 * Val(1048576))) + (x356 * Val(2097152))) - x330),
        "rho_minor1(zirgen/circuit/keccak/keccak.zir:346)");
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:349)
    ToBits_21_Struct x360 = exec_ToBits_21_(ctx, x331, LAYOUT_LOOKUP(x321, unpackM2));
    NondetRegStruct21Array x361 = x360._super;
    Val x362 = x361[0]._super;
    Val x363 = x361[1]._super;
    Val x364 = x361[2]._super;
    Val x365 = x361[3]._super;
    Val x366 = x361[4]._super;
    Val x367 = x361[5]._super;
    Val x368 = x361[6]._super;
    Val x369 = x361[7]._super;
    Val x370 = x361[8]._super;
    Val x371 = x361[9]._super;
    Val x372 = x361[10]._super;
    Val x373 = x361[11]._super;
    Val x374 = x361[12]._super;
    Val x375 = x361[13]._super;
    Val x376 = x361[14]._super;
    Val x377 = x361[15]._super;
    Val x378 = x361[16]._super;
    Val x379 = x361[17]._super;
    Val x380 = x361[18]._super;
    Val x381 = x361[19]._super;
    Val x382 = x361[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:350)
    Val x383 =
        ((((((x362 + (x363 * Val(2))) + (x364 * Val(4))) + (x365 * Val(8))) + (x366 * Val(16))) +
          (x367 * Val(32))) +
         (x368 * Val(64)));
    Val x384 = ((((((x383 + (x369 * Val(128))) + (x370 * Val(256))) + (x371 * Val(512))) +
                  (x372 * Val(1024))) +
                 (x373 * Val(2048))) +
                (x374 * Val(4096)));
    Val x385 = ((((((x384 + (x375 * Val(8192))) + (x376 * Val(16384))) + (x377 * Val(32768))) +
                  (x378 * Val(65536))) +
                 (x379 * Val(131072))) +
                (x380 * Val(262144)));
    EQZ((((x385 + (x381 * Val(524288))) + (x382 * Val(1048576))) - x331),
        "rho_minor1(zirgen/circuit/keccak/keccak.zir:350)");
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:354)
    ToBits_21_Struct x386 = exec_ToBits_21_(ctx, x332, LAYOUT_LOOKUP(x321, unpackM3));
    NondetRegStruct21Array x387 = x386._super;
    Val x388 = x387[0]._super;
    Val x389 = x387[1]._super;
    Val x390 = x387[2]._super;
    Val x391 = x387[3]._super;
    Val x392 = x387[4]._super;
    Val x393 = x387[5]._super;
    Val x394 = x387[6]._super;
    Val x395 = x387[7]._super;
    Val x396 = x387[8]._super;
    Val x397 = x387[9]._super;
    Val x398 = x387[10]._super;
    Val x399 = x387[11]._super;
    Val x400 = x387[12]._super;
    Val x401 = x387[13]._super;
    Val x402 = x387[14]._super;
    Val x403 = x387[15]._super;
    Val x404 = x387[16]._super;
    Val x405 = x387[17]._super;
    Val x406 = x387[18]._super;
    Val x407 = x387[19]._super;
    Val x408 = x387[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:355)
    Val x409 =
        ((((((x388 + (x389 * Val(2))) + (x390 * Val(4))) + (x391 * Val(8))) + (x392 * Val(16))) +
          (x393 * Val(32))) +
         (x394 * Val(64)));
    Val x410 = ((((((x409 + (x395 * Val(128))) + (x396 * Val(256))) + (x397 * Val(512))) +
                  (x398 * Val(1024))) +
                 (x399 * Val(2048))) +
                (x400 * Val(4096)));
    Val x411 = ((((((x410 + (x401 * Val(8192))) + (x402 * Val(16384))) + (x403 * Val(32768))) +
                  (x404 * Val(65536))) +
                 (x405 * Val(131072))) +
                (x406 * Val(262144)));
    EQZ((((x411 + (x407 * Val(524288))) + (x408 * Val(1048576))) - x332),
        "rho_minor1(zirgen/circuit/keccak/keccak.zir:355)");
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:358)
    RetTupleStruct x412 = exec_RetTuple(
        ctx,
        Val22Array{x335, x336, x337, x338, x339, x340, x341, x342, x343, x344, x345,
                   x346, x347, x348, x349, x350, x351, x352, x353, x354, x355, x356},
        Val22Array{x362, x363, x364, x365, x366, x367, x368, x369, x370, x371, x372,
                   x373, x374, x375, x376, x377, x378, x379, x380, x381, x382, Val(0)},
        Val22Array{x388, x389, x390, x391, x392, x393, x394, x395, x396, x397, x398,
                   x399, x400, x401, x402, x403, x404, x405, x406, x407, x408, Val(0)},
        x323,
        x322,
        x324,
        Val(5),
        Val(8),
        x325,
        x326,
        x327,
        LAYOUT_LOOKUP(x321, _super));
  }
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:341)
  RetTupleStruct x413 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x413;
}
RetTupleStruct execRhoMinor2_2__3_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<RhoMinor2_2__3_Layout> layout2) {
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:364)
  RetTupleStruct x3 = back_RetTuple(ctx, 6, arg1);
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:364)
  NondetRegStruct24Array x5 = x3.arrD;
  Val x6 = x5[21]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:368)
  ToBits_22_Struct x7 = exec_ToBits_22_(ctx, x6, LAYOUT_LOOKUP(layout2, unpackP1));
  NondetRegStruct22Array x8 = x7._super;
  Val x9 = x8[0]._super;
  Val x10 = x8[1]._super;
  Val x11 = x8[2]._super;
  Val x12 = x8[3]._super;
  Val x13 = x8[4]._super;
  Val x14 = x8[5]._super;
  Val x15 = x8[6]._super;
  Val x16 = x8[7]._super;
  Val x17 = x8[8]._super;
  Val x18 = x8[9]._super;
  Val x19 = x8[10]._super;
  Val x20 = x8[11]._super;
  Val x21 = x8[12]._super;
  Val x22 = x8[13]._super;
  Val x23 = x8[14]._super;
  Val x24 = x8[15]._super;
  Val x25 = x8[16]._super;
  Val x26 = x8[17]._super;
  Val x27 = x8[18]._super;
  Val x28 = x8[19]._super;
  Val x29 = x8[20]._super;
  Val x30 = x8[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:369)
  Val x31 = ((((((x9 + (x10 * Val(2))) + (x11 * Val(4))) + (x12 * Val(8))) + (x13 * Val(16))) +
              (x14 * Val(32))) +
             (x15 * Val(64)));
  Val x32 =
      ((((((x31 + (x16 * Val(128))) + (x17 * Val(256))) + (x18 * Val(512))) + (x19 * Val(1024))) +
        (x20 * Val(2048))) +
       (x21 * Val(4096)));
  Val x33 = ((((((x32 + (x22 * Val(8192))) + (x23 * Val(16384))) + (x24 * Val(32768))) +
               (x25 * Val(65536))) +
              (x26 * Val(131072))) +
             (x27 * Val(262144)));
  EQZ(((((x33 + (x28 * Val(524288))) + (x29 * Val(1048576))) + (x30 * Val(2097152))) - x6),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:369)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:364)
  Val x34 = x5[22]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:372)
  ToBits_21_Struct x35 = exec_ToBits_21_(ctx, x34, LAYOUT_LOOKUP(layout2, unpackP2));
  NondetRegStruct21Array x36 = x35._super;
  Val x37 = x36[0]._super;
  Val x38 = x36[1]._super;
  Val x39 = x36[2]._super;
  Val x40 = x36[3]._super;
  Val x41 = x36[4]._super;
  Val x42 = x36[5]._super;
  Val x43 = x36[6]._super;
  Val x44 = x36[7]._super;
  Val x45 = x36[8]._super;
  Val x46 = x36[9]._super;
  Val x47 = x36[10]._super;
  Val x48 = x36[11]._super;
  Val x49 = x36[12]._super;
  Val x50 = x36[13]._super;
  Val x51 = x36[14]._super;
  Val x52 = x36[15]._super;
  Val x53 = x36[16]._super;
  Val x54 = x36[17]._super;
  Val x55 = x36[18]._super;
  Val x56 = x36[19]._super;
  Val x57 = x36[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:373)
  Val x58 = ((((((x37 + (x38 * Val(2))) + (x39 * Val(4))) + (x40 * Val(8))) + (x41 * Val(16))) +
              (x42 * Val(32))) +
             (x43 * Val(64)));
  Val x59 =
      ((((((x58 + (x44 * Val(128))) + (x45 * Val(256))) + (x46 * Val(512))) + (x47 * Val(1024))) +
        (x48 * Val(2048))) +
       (x49 * Val(4096)));
  Val x60 = ((((((x59 + (x50 * Val(8192))) + (x51 * Val(16384))) + (x52 * Val(32768))) +
               (x53 * Val(65536))) +
              (x54 * Val(131072))) +
             (x55 * Val(262144)));
  EQZ((((x60 + (x56 * Val(524288))) + (x57 * Val(1048576))) - x34),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:373)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:364)
  Val x61 = x5[23]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:376)
  ToBits_21_Struct x62 = exec_ToBits_21_(ctx, x61, LAYOUT_LOOKUP(layout2, unpackP3));
  NondetRegStruct21Array x63 = x62._super;
  Val x64 = x63[0]._super;
  Val x65 = x63[1]._super;
  Val x66 = x63[2]._super;
  Val x67 = x63[3]._super;
  Val x68 = x63[4]._super;
  Val x69 = x63[5]._super;
  Val x70 = x63[6]._super;
  Val x71 = x63[7]._super;
  Val x72 = x63[8]._super;
  Val x73 = x63[9]._super;
  Val x74 = x63[10]._super;
  Val x75 = x63[11]._super;
  Val x76 = x63[12]._super;
  Val x77 = x63[13]._super;
  Val x78 = x63[14]._super;
  Val x79 = x63[15]._super;
  Val x80 = x63[16]._super;
  Val x81 = x63[17]._super;
  Val x82 = x63[18]._super;
  Val x83 = x63[19]._super;
  Val x84 = x63[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:377)
  Val x85 = ((((((x64 + (x65 * Val(2))) + (x66 * Val(4))) + (x67 * Val(8))) + (x68 * Val(16))) +
              (x69 * Val(32))) +
             (x70 * Val(64)));
  Val x86 =
      ((((((x85 + (x71 * Val(128))) + (x72 * Val(256))) + (x73 * Val(512))) + (x74 * Val(1024))) +
        (x75 * Val(2048))) +
       (x76 * Val(4096)));
  Val x87 = ((((((x86 + (x77 * Val(8192))) + (x78 * Val(16384))) + (x79 * Val(32768))) +
               (x80 * Val(65536))) +
              (x81 * Val(131072))) +
             (x82 * Val(262144)));
  EQZ((((x87 + (x83 * Val(524288))) + (x84 * Val(1048576))) - x61),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:377)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:364)
  NondetRegStruct22Array x88 = x3.arrC;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:383)
  Val x89 = x88[10]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:390)
  ToBits_22_Struct x90 = exec_ToBits_22_(ctx, x89, LAYOUT_LOOKUP(layout2, unpackXy1));
  NondetRegStruct22Array x91 = x90._super;
  Val x92 = x91[0]._super;
  Val x93 = x91[1]._super;
  Val x94 = x91[2]._super;
  Val x95 = x91[3]._super;
  Val x96 = x91[4]._super;
  Val x97 = x91[5]._super;
  Val x98 = x91[6]._super;
  Val x99 = x91[7]._super;
  Val x100 = x91[8]._super;
  Val x101 = x91[9]._super;
  Val x102 = x91[10]._super;
  Val x103 = x91[11]._super;
  Val x104 = x91[12]._super;
  Val x105 = x91[13]._super;
  Val x106 = x91[14]._super;
  Val x107 = x91[15]._super;
  Val x108 = x91[16]._super;
  Val x109 = x91[17]._super;
  Val x110 = x91[18]._super;
  Val x111 = x91[19]._super;
  Val x112 = x91[20]._super;
  Val x113 = x91[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:391)
  Val x114 = ((((((x92 + (x93 * Val(2))) + (x94 * Val(4))) + (x95 * Val(8))) + (x96 * Val(16))) +
               (x97 * Val(32))) +
              (x98 * Val(64)));
  Val x115 = ((((((x114 + (x99 * Val(128))) + (x100 * Val(256))) + (x101 * Val(512))) +
                (x102 * Val(1024))) +
               (x103 * Val(2048))) +
              (x104 * Val(4096)));
  Val x116 = ((((((x115 + (x105 * Val(8192))) + (x106 * Val(16384))) + (x107 * Val(32768))) +
                (x108 * Val(65536))) +
               (x109 * Val(131072))) +
              (x110 * Val(262144)));
  EQZ(((((x116 + (x111 * Val(524288))) + (x112 * Val(1048576))) + (x113 * Val(2097152))) - x89),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:391)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:395)
  Val x117 = x88[11]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:402)
  ToBits_21_Struct x118 = exec_ToBits_21_(ctx, x117, LAYOUT_LOOKUP(layout2, unpackXy2));
  NondetRegStruct21Array x119 = x118._super;
  Val x120 = x119[0]._super;
  Val x121 = x119[1]._super;
  Val x122 = x119[2]._super;
  Val x123 = x119[3]._super;
  Val x124 = x119[4]._super;
  Val x125 = x119[5]._super;
  Val x126 = x119[6]._super;
  Val x127 = x119[7]._super;
  Val x128 = x119[8]._super;
  Val x129 = x119[9]._super;
  Val x130 = x119[10]._super;
  Val x131 = x119[11]._super;
  Val x132 = x119[12]._super;
  Val x133 = x119[13]._super;
  Val x134 = x119[14]._super;
  Val x135 = x119[15]._super;
  Val x136 = x119[16]._super;
  Val x137 = x119[17]._super;
  Val x138 = x119[18]._super;
  Val x139 = x119[19]._super;
  Val x140 = x119[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:403)
  Val x141 =
      ((((((x120 + (x121 * Val(2))) + (x122 * Val(4))) + (x123 * Val(8))) + (x124 * Val(16))) +
        (x125 * Val(32))) +
       (x126 * Val(64)));
  Val x142 = ((((((x141 + (x127 * Val(128))) + (x128 * Val(256))) + (x129 * Val(512))) +
                (x130 * Val(1024))) +
               (x131 * Val(2048))) +
              (x132 * Val(4096)));
  Val x143 = ((((((x142 + (x133 * Val(8192))) + (x134 * Val(16384))) + (x135 * Val(32768))) +
                (x136 * Val(65536))) +
               (x137 * Val(131072))) +
              (x138 * Val(262144)));
  EQZ((((x143 + (x139 * Val(524288))) + (x140 * Val(1048576))) - x117),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:403)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:407)
  Val x144 = x88[12]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:414)
  ToBits_21_Struct x145 = exec_ToBits_21_(ctx, x144, LAYOUT_LOOKUP(layout2, unpackXy3));
  NondetRegStruct21Array x146 = x145._super;
  Val x147 = x146[0]._super;
  Val x148 = x146[1]._super;
  Val x149 = x146[2]._super;
  Val x150 = x146[3]._super;
  Val x151 = x146[4]._super;
  Val x152 = x146[5]._super;
  Val x153 = x146[6]._super;
  Val x154 = x146[7]._super;
  Val x155 = x146[8]._super;
  Val x156 = x146[9]._super;
  Val x157 = x146[10]._super;
  Val x158 = x146[11]._super;
  Val x159 = x146[12]._super;
  Val x160 = x146[13]._super;
  Val x161 = x146[14]._super;
  Val x162 = x146[15]._super;
  Val x163 = x146[16]._super;
  Val x164 = x146[17]._super;
  Val x165 = x146[18]._super;
  Val x166 = x146[19]._super;
  Val x167 = x146[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:415)
  Val x168 =
      ((((((x147 + (x148 * Val(2))) + (x149 * Val(4))) + (x150 * Val(8))) + (x151 * Val(16))) +
        (x152 * Val(32))) +
       (x153 * Val(64)));
  Val x169 = ((((((x168 + (x154 * Val(128))) + (x155 * Val(256))) + (x156 * Val(512))) +
                (x157 * Val(1024))) +
               (x158 * Val(2048))) +
              (x159 * Val(4096)));
  Val x170 = ((((((x169 + (x160 * Val(8192))) + (x161 * Val(16384))) + (x162 * Val(32768))) +
                (x163 * Val(65536))) +
               (x164 * Val(131072))) +
              (x165 * Val(262144)));
  EQZ((((x170 + (x166 * Val(524288))) + (x167 * Val(1048576))) - x144),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:415)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  NondetRegStruct22Array x171 = x4.arrA;
  Val x172 = x171[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x173 = ((x92 * x172) + ((Val(1) - x92) * (Val(1) - x172)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x174 = x171[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x175 = ((x93 * x174) + ((Val(1) - x93) * (Val(1) - x174)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x176 = x171[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x177 = ((x94 * x176) + ((Val(1) - x94) * (Val(1) - x176)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x178 = x171[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x179 = ((x95 * x178) + ((Val(1) - x95) * (Val(1) - x178)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x180 = x171[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x181 = ((x96 * x180) + ((Val(1) - x96) * (Val(1) - x180)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x182 = x171[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x183 = ((x97 * x182) + ((Val(1) - x97) * (Val(1) - x182)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x184 = x171[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x185 = ((x98 * x184) + ((Val(1) - x98) * (Val(1) - x184)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x186 = x171[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x187 = ((x99 * x186) + ((Val(1) - x99) * (Val(1) - x186)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x188 = x171[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x189 = ((x100 * x188) + ((Val(1) - x100) * (Val(1) - x188)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x190 = x171[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x191 = ((x101 * x190) + ((Val(1) - x101) * (Val(1) - x190)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x192 = x171[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x193 = ((x102 * x192) + ((Val(1) - x102) * (Val(1) - x192)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x194 = x171[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x195 = ((x103 * x194) + ((Val(1) - x103) * (Val(1) - x194)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x196 = x171[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x197 = ((x104 * x196) + ((Val(1) - x104) * (Val(1) - x196)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x198 = x171[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x199 = ((x105 * x198) + ((Val(1) - x105) * (Val(1) - x198)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x200 = x171[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x201 = ((x106 * x200) + ((Val(1) - x106) * (Val(1) - x200)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x202 = x171[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x203 = ((x107 * x202) + ((Val(1) - x107) * (Val(1) - x202)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x204 = x171[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x205 = ((x108 * x204) + ((Val(1) - x108) * (Val(1) - x204)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x206 = x171[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x207 = ((x109 * x206) + ((Val(1) - x109) * (Val(1) - x206)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x208 = x171[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x209 = ((x110 * x208) + ((Val(1) - x110) * (Val(1) - x208)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x210 = x171[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x211 = ((x111 * x210) + ((Val(1) - x111) * (Val(1) - x210)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x212 = x171[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x213 = ((x112 * x212) + ((Val(1) - x112) * (Val(1) - x212)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x214 = x171[21]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x215 = ((x113 * x214) + ((Val(1) - x113) * (Val(1) - x214)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  NondetRegStruct22Array x216 = x4.arrB;
  Val x217 = x216[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x218 = ((x120 * x217) + ((Val(1) - x120) * (Val(1) - x217)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x219 = x216[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x220 = ((x121 * x219) + ((Val(1) - x121) * (Val(1) - x219)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x221 = x216[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x222 = ((x122 * x221) + ((Val(1) - x122) * (Val(1) - x221)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x223 = x216[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x224 = ((x123 * x223) + ((Val(1) - x123) * (Val(1) - x223)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x225 = x216[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x226 = ((x124 * x225) + ((Val(1) - x124) * (Val(1) - x225)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x227 = x216[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x228 = ((x125 * x227) + ((Val(1) - x125) * (Val(1) - x227)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x229 = x216[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x230 = ((x126 * x229) + ((Val(1) - x126) * (Val(1) - x229)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x231 = x216[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x232 = ((x127 * x231) + ((Val(1) - x127) * (Val(1) - x231)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x233 = x216[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x234 = ((x128 * x233) + ((Val(1) - x128) * (Val(1) - x233)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x235 = x216[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x236 = ((x129 * x235) + ((Val(1) - x129) * (Val(1) - x235)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x237 = x216[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x238 = ((x130 * x237) + ((Val(1) - x130) * (Val(1) - x237)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x239 = x216[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x240 = ((x131 * x239) + ((Val(1) - x131) * (Val(1) - x239)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x241 = x216[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x242 = ((x132 * x241) + ((Val(1) - x132) * (Val(1) - x241)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x243 = x216[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x244 = ((x133 * x243) + ((Val(1) - x133) * (Val(1) - x243)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x245 = x216[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x246 = ((x134 * x245) + ((Val(1) - x134) * (Val(1) - x245)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x247 = x216[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x248 = ((x135 * x247) + ((Val(1) - x135) * (Val(1) - x247)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x249 = x216[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x250 = ((x136 * x249) + ((Val(1) - x136) * (Val(1) - x249)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x251 = x216[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x252 = ((x137 * x251) + ((Val(1) - x137) * (Val(1) - x251)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x253 = x216[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x254 = ((x138 * x253) + ((Val(1) - x138) * (Val(1) - x253)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x255 = x216[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x256 = ((x139 * x255) + ((Val(1) - x139) * (Val(1) - x255)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x257 = x216[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x258 = ((x140 * x257) + ((Val(1) - x140) * (Val(1) - x257)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  NondetRegStruct22Array x259 = x4.arrC;
  Val x260 = x259[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x261 = ((x147 * x260) + ((Val(1) - x147) * (Val(1) - x260)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x262 = x259[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x263 = ((x148 * x262) + ((Val(1) - x148) * (Val(1) - x262)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x264 = x259[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x265 = ((x149 * x264) + ((Val(1) - x149) * (Val(1) - x264)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x266 = x259[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x267 = ((x150 * x266) + ((Val(1) - x150) * (Val(1) - x266)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x268 = x259[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x269 = ((x151 * x268) + ((Val(1) - x151) * (Val(1) - x268)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x270 = x259[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x271 = ((x152 * x270) + ((Val(1) - x152) * (Val(1) - x270)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x272 = x259[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x273 = ((x153 * x272) + ((Val(1) - x153) * (Val(1) - x272)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x274 = x259[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x275 = ((x154 * x274) + ((Val(1) - x154) * (Val(1) - x274)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x276 = x259[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x277 = ((x155 * x276) + ((Val(1) - x155) * (Val(1) - x276)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x278 = x259[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x279 = ((x156 * x278) + ((Val(1) - x156) * (Val(1) - x278)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x280 = x259[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x281 = ((x157 * x280) + ((Val(1) - x157) * (Val(1) - x280)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x282 = x259[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x283 = ((x158 * x282) + ((Val(1) - x158) * (Val(1) - x282)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x284 = x259[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x285 = ((x159 * x284) + ((Val(1) - x159) * (Val(1) - x284)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x286 = x259[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x287 = ((x160 * x286) + ((Val(1) - x160) * (Val(1) - x286)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x288 = x259[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x289 = ((x161 * x288) + ((Val(1) - x161) * (Val(1) - x288)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x290 = x259[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x291 = ((x162 * x290) + ((Val(1) - x162) * (Val(1) - x290)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x292 = x259[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x293 = ((x163 * x292) + ((Val(1) - x163) * (Val(1) - x292)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x294 = x259[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x295 = ((x164 * x294) + ((Val(1) - x164) * (Val(1) - x294)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x296 = x259[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x297 = ((x165 * x296) + ((Val(1) - x165) * (Val(1) - x296)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x298 = x259[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x299 = ((x166 * x298) + ((Val(1) - x166) * (Val(1) - x298)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x300 = x259[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x301 = ((x167 * x300) + ((Val(1) - x167) * (Val(1) - x300)));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:422)
  Val x302 = (((x261 * x57) + ((Val(1) - x261) * (Val(1) - x57))) +
              (((x263 * x64) + ((Val(1) - x263) * (Val(1) - x64))) * Val(2)));
  Val x303 = ((x302 + (((x265 * x65) + ((Val(1) - x265) * (Val(1) - x65))) * Val(4))) +
              (((x267 * x66) + ((Val(1) - x267) * (Val(1) - x66))) * Val(8)));
  Val x304 = ((x303 + (((x269 * x67) + ((Val(1) - x269) * (Val(1) - x67))) * Val(16))) +
              (((x271 * x68) + ((Val(1) - x271) * (Val(1) - x68))) * Val(32)));
  Val x305 = ((x304 + (((x273 * x69) + ((Val(1) - x273) * (Val(1) - x69))) * Val(64))) +
              (((x275 * x70) + ((Val(1) - x275) * (Val(1) - x70))) * Val(128)));
  Val x306 = ((x305 + (((x277 * x71) + ((Val(1) - x277) * (Val(1) - x71))) * Val(256))) +
              (((x279 * x72) + ((Val(1) - x279) * (Val(1) - x72))) * Val(512)));
  Val x307 = ((x306 + (((x281 * x73) + ((Val(1) - x281) * (Val(1) - x73))) * Val(1024))) +
              (((x283 * x74) + ((Val(1) - x283) * (Val(1) - x74))) * Val(2048)));
  Val x308 = ((x307 + (((x285 * x75) + ((Val(1) - x285) * (Val(1) - x75))) * Val(4096))) +
              (((x287 * x76) + ((Val(1) - x287) * (Val(1) - x76))) * Val(8192)));
  Val x309 = ((x308 + (((x289 * x77) + ((Val(1) - x289) * (Val(1) - x77))) * Val(16384))) +
              (((x291 * x78) + ((Val(1) - x291) * (Val(1) - x78))) * Val(32768)));
  Val x310 = ((x309 + (((x293 * x79) + ((Val(1) - x293) * (Val(1) - x79))) * Val(65536))) +
              (((x295 * x80) + ((Val(1) - x295) * (Val(1) - x80))) * Val(131072)));
  Val x311 = ((x310 + (((x297 * x81) + ((Val(1) - x297) * (Val(1) - x81))) * Val(262144))) +
              (((x299 * x82) + ((Val(1) - x299) * (Val(1) - x82))) * Val(524288)));
  Val x312 = ((x311 + (((x301 * x83) + ((Val(1) - x301) * (Val(1) - x83))) * Val(1048576))) +
              (((x173 * x84) + ((Val(1) - x173) * (Val(1) - x84))) * Val(2097152)));
  NondetRegStruct x313 = exec_Reg(ctx, x312, LAYOUT_LOOKUP(layout2, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:423)
  Val x314 = (((x175 * x9) + ((Val(1) - x175) * (Val(1) - x9))) +
              (((x177 * x10) + ((Val(1) - x177) * (Val(1) - x10))) * Val(2)));
  Val x315 = ((x314 + (((x179 * x11) + ((Val(1) - x179) * (Val(1) - x11))) * Val(4))) +
              (((x181 * x12) + ((Val(1) - x181) * (Val(1) - x12))) * Val(8)));
  Val x316 = ((x315 + (((x183 * x13) + ((Val(1) - x183) * (Val(1) - x13))) * Val(16))) +
              (((x185 * x14) + ((Val(1) - x185) * (Val(1) - x14))) * Val(32)));
  Val x317 = ((x316 + (((x187 * x15) + ((Val(1) - x187) * (Val(1) - x15))) * Val(64))) +
              (((x189 * x16) + ((Val(1) - x189) * (Val(1) - x16))) * Val(128)));
  Val x318 = ((x317 + (((x191 * x17) + ((Val(1) - x191) * (Val(1) - x17))) * Val(256))) +
              (((x193 * x18) + ((Val(1) - x193) * (Val(1) - x18))) * Val(512)));
  Val x319 = ((x318 + (((x195 * x19) + ((Val(1) - x195) * (Val(1) - x19))) * Val(1024))) +
              (((x197 * x20) + ((Val(1) - x197) * (Val(1) - x20))) * Val(2048)));
  Val x320 = ((x319 + (((x199 * x21) + ((Val(1) - x199) * (Val(1) - x21))) * Val(4096))) +
              (((x201 * x22) + ((Val(1) - x201) * (Val(1) - x22))) * Val(8192)));
  Val x321 = ((x320 + (((x203 * x23) + ((Val(1) - x203) * (Val(1) - x23))) * Val(16384))) +
              (((x205 * x24) + ((Val(1) - x205) * (Val(1) - x24))) * Val(32768)));
  Val x322 = ((x321 + (((x207 * x25) + ((Val(1) - x207) * (Val(1) - x25))) * Val(65536))) +
              (((x209 * x26) + ((Val(1) - x209) * (Val(1) - x26))) * Val(131072)));
  Val x323 = ((x322 + (((x211 * x27) + ((Val(1) - x211) * (Val(1) - x27))) * Val(262144))) +
              (((x213 * x28) + ((Val(1) - x213) * (Val(1) - x28))) * Val(524288)));
  NondetRegStruct x324 =
      exec_Reg(ctx,
               (x323 + (((x215 * x29) + ((Val(1) - x215) * (Val(1) - x29))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _1));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:424)
  Val x325 = (((x218 * x30) + ((Val(1) - x218) * (Val(1) - x30))) +
              (((x220 * x37) + ((Val(1) - x220) * (Val(1) - x37))) * Val(2)));
  Val x326 = ((x325 + (((x222 * x38) + ((Val(1) - x222) * (Val(1) - x38))) * Val(4))) +
              (((x224 * x39) + ((Val(1) - x224) * (Val(1) - x39))) * Val(8)));
  Val x327 = ((x326 + (((x226 * x40) + ((Val(1) - x226) * (Val(1) - x40))) * Val(16))) +
              (((x228 * x41) + ((Val(1) - x228) * (Val(1) - x41))) * Val(32)));
  Val x328 = ((x327 + (((x230 * x42) + ((Val(1) - x230) * (Val(1) - x42))) * Val(64))) +
              (((x232 * x43) + ((Val(1) - x232) * (Val(1) - x43))) * Val(128)));
  Val x329 = ((x328 + (((x234 * x44) + ((Val(1) - x234) * (Val(1) - x44))) * Val(256))) +
              (((x236 * x45) + ((Val(1) - x236) * (Val(1) - x45))) * Val(512)));
  Val x330 = ((x329 + (((x238 * x46) + ((Val(1) - x238) * (Val(1) - x46))) * Val(1024))) +
              (((x240 * x47) + ((Val(1) - x240) * (Val(1) - x47))) * Val(2048)));
  Val x331 = ((x330 + (((x242 * x48) + ((Val(1) - x242) * (Val(1) - x48))) * Val(4096))) +
              (((x244 * x49) + ((Val(1) - x244) * (Val(1) - x49))) * Val(8192)));
  Val x332 = ((x331 + (((x246 * x50) + ((Val(1) - x246) * (Val(1) - x50))) * Val(16384))) +
              (((x248 * x51) + ((Val(1) - x248) * (Val(1) - x51))) * Val(32768)));
  Val x333 = ((x332 + (((x250 * x52) + ((Val(1) - x250) * (Val(1) - x52))) * Val(65536))) +
              (((x252 * x53) + ((Val(1) - x252) * (Val(1) - x53))) * Val(131072)));
  Val x334 = ((x333 + (((x254 * x54) + ((Val(1) - x254) * (Val(1) - x54))) * Val(262144))) +
              (((x256 * x55) + ((Val(1) - x256) * (Val(1) - x55))) * Val(524288)));
  NondetRegStruct x335 =
      exec_Reg(ctx,
               (x334 + (((x258 * x56) + ((Val(1) - x258) * (Val(1) - x56))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _2));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:427)
  Val22Array x336 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x337 = exec_RetTuple(
      ctx,
      x336,
      x336,
      x336,
      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
      x336,
      Val22Array{x313._super, x324._super, x335._super, Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0)},
      Val(6),
      Val(8),
      x4.rnd._super,
      x4.blk._super,
      x4.midx._super,
      LAYOUT_LOOKUP(layout2, _super));
  return x337;
}
RetTupleStruct execRhoMinor0_4__3_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<RhoMinor0_4__3_Layout> layout2) {
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  RetTupleStruct x3 = back_RetTuple(ctx, 7, arg1);
  NondetRegStruct24Array x4 = x3.arrD;
  Val x5 = x4[18]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:257)
  ToBits_22_Struct x6 = exec_ToBits_22_(ctx, x5, LAYOUT_LOOKUP(layout2, unpackM1));
  NondetRegStruct22Array x7 = x6._super;
  Val x8 = x7[0]._super;
  Val x9 = x7[1]._super;
  Val x10 = x7[2]._super;
  Val x11 = x7[3]._super;
  Val x12 = x7[4]._super;
  Val x13 = x7[5]._super;
  Val x14 = x7[6]._super;
  Val x15 = x7[7]._super;
  Val x16 = x7[8]._super;
  Val x17 = x7[9]._super;
  Val x18 = x7[10]._super;
  Val x19 = x7[11]._super;
  Val x20 = x7[12]._super;
  Val x21 = x7[13]._super;
  Val x22 = x7[14]._super;
  Val x23 = x7[15]._super;
  Val x24 = x7[16]._super;
  Val x25 = x7[17]._super;
  Val x26 = x7[18]._super;
  Val x27 = x7[19]._super;
  Val x28 = x7[20]._super;
  Val x29 = x7[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:258)
  Val x30 = ((((((x8 + (x9 * Val(2))) + (x10 * Val(4))) + (x11 * Val(8))) + (x12 * Val(16))) +
              (x13 * Val(32))) +
             (x14 * Val(64)));
  Val x31 =
      ((((((x30 + (x15 * Val(128))) + (x16 * Val(256))) + (x17 * Val(512))) + (x18 * Val(1024))) +
        (x19 * Val(2048))) +
       (x20 * Val(4096)));
  Val x32 = ((((((x31 + (x21 * Val(8192))) + (x22 * Val(16384))) + (x23 * Val(32768))) +
               (x24 * Val(65536))) +
              (x25 * Val(131072))) +
             (x26 * Val(262144)));
  EQZ(((((x32 + (x27 * Val(524288))) + (x28 * Val(1048576))) + (x29 * Val(2097152))) - x5),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:258)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x33 = x4[19]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:261)
  ToBits_21_Struct x34 = exec_ToBits_21_(ctx, x33, LAYOUT_LOOKUP(layout2, unpackM2));
  NondetRegStruct21Array x35 = x34._super;
  Val x36 = x35[0]._super;
  Val x37 = x35[1]._super;
  Val x38 = x35[2]._super;
  Val x39 = x35[3]._super;
  Val x40 = x35[4]._super;
  Val x41 = x35[5]._super;
  Val x42 = x35[6]._super;
  Val x43 = x35[7]._super;
  Val x44 = x35[8]._super;
  Val x45 = x35[9]._super;
  Val x46 = x35[10]._super;
  Val x47 = x35[11]._super;
  Val x48 = x35[12]._super;
  Val x49 = x35[13]._super;
  Val x50 = x35[14]._super;
  Val x51 = x35[15]._super;
  Val x52 = x35[16]._super;
  Val x53 = x35[17]._super;
  Val x54 = x35[18]._super;
  Val x55 = x35[19]._super;
  Val x56 = x35[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:262)
  Val x57 = ((((((x36 + (x37 * Val(2))) + (x38 * Val(4))) + (x39 * Val(8))) + (x40 * Val(16))) +
              (x41 * Val(32))) +
             (x42 * Val(64)));
  Val x58 =
      ((((((x57 + (x43 * Val(128))) + (x44 * Val(256))) + (x45 * Val(512))) + (x46 * Val(1024))) +
        (x47 * Val(2048))) +
       (x48 * Val(4096)));
  Val x59 = ((((((x58 + (x49 * Val(8192))) + (x50 * Val(16384))) + (x51 * Val(32768))) +
               (x52 * Val(65536))) +
              (x53 * Val(131072))) +
             (x54 * Val(262144)));
  EQZ((((x59 + (x55 * Val(524288))) + (x56 * Val(1048576))) - x33),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:262)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x60 = x4[20]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:266)
  ToBits_21_Struct x61 = exec_ToBits_21_(ctx, x60, LAYOUT_LOOKUP(layout2, unpackM3));
  NondetRegStruct21Array x62 = x61._super;
  Val x63 = x62[0]._super;
  Val x64 = x62[1]._super;
  Val x65 = x62[2]._super;
  Val x66 = x62[3]._super;
  Val x67 = x62[4]._super;
  Val x68 = x62[5]._super;
  Val x69 = x62[6]._super;
  Val x70 = x62[7]._super;
  Val x71 = x62[8]._super;
  Val x72 = x62[9]._super;
  Val x73 = x62[10]._super;
  Val x74 = x62[11]._super;
  Val x75 = x62[12]._super;
  Val x76 = x62[13]._super;
  Val x77 = x62[14]._super;
  Val x78 = x62[15]._super;
  Val x79 = x62[16]._super;
  Val x80 = x62[17]._super;
  Val x81 = x62[18]._super;
  Val x82 = x62[19]._super;
  Val x83 = x62[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:267)
  Val x84 = ((((((x63 + (x64 * Val(2))) + (x65 * Val(4))) + (x66 * Val(8))) + (x67 * Val(16))) +
              (x68 * Val(32))) +
             (x69 * Val(64)));
  Val x85 =
      ((((((x84 + (x70 * Val(128))) + (x71 * Val(256))) + (x72 * Val(512))) + (x73 * Val(1024))) +
        (x74 * Val(2048))) +
       (x75 * Val(4096)));
  Val x86 = ((((((x85 + (x76 * Val(8192))) + (x77 * Val(16384))) + (x78 * Val(32768))) +
               (x79 * Val(65536))) +
              (x80 * Val(131072))) +
             (x81 * Val(262144)));
  EQZ((((x86 + (x82 * Val(524288))) + (x83 * Val(1048576))) - x60),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:267)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x87 = x4[9]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:271)
  ToBits_22_Struct x88 = exec_ToBits_22_(ctx, x87, LAYOUT_LOOKUP(layout2, unpackP1));
  NondetRegStruct22Array x89 = x88._super;
  Val x90 = x89[0]._super;
  Val x91 = x89[1]._super;
  Val x92 = x89[2]._super;
  Val x93 = x89[3]._super;
  Val x94 = x89[4]._super;
  Val x95 = x89[5]._super;
  Val x96 = x89[6]._super;
  Val x97 = x89[7]._super;
  Val x98 = x89[8]._super;
  Val x99 = x89[9]._super;
  Val x100 = x89[10]._super;
  Val x101 = x89[11]._super;
  Val x102 = x89[12]._super;
  Val x103 = x89[13]._super;
  Val x104 = x89[14]._super;
  Val x105 = x89[15]._super;
  Val x106 = x89[16]._super;
  Val x107 = x89[17]._super;
  Val x108 = x89[18]._super;
  Val x109 = x89[19]._super;
  Val x110 = x89[20]._super;
  Val x111 = x89[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:272)
  Val x112 = ((((((x90 + (x91 * Val(2))) + (x92 * Val(4))) + (x93 * Val(8))) + (x94 * Val(16))) +
               (x95 * Val(32))) +
              (x96 * Val(64)));
  Val x113 =
      ((((((x112 + (x97 * Val(128))) + (x98 * Val(256))) + (x99 * Val(512))) + (x100 * Val(1024))) +
        (x101 * Val(2048))) +
       (x102 * Val(4096)));
  Val x114 = ((((((x113 + (x103 * Val(8192))) + (x104 * Val(16384))) + (x105 * Val(32768))) +
                (x106 * Val(65536))) +
               (x107 * Val(131072))) +
              (x108 * Val(262144)));
  EQZ(((((x114 + (x109 * Val(524288))) + (x110 * Val(1048576))) + (x111 * Val(2097152))) - x87),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:272)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x115 = x4[10]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:275)
  ToBits_21_Struct x116 = exec_ToBits_21_(ctx, x115, LAYOUT_LOOKUP(layout2, unpackP2));
  NondetRegStruct21Array x117 = x116._super;
  Val x118 = x117[0]._super;
  Val x119 = x117[1]._super;
  Val x120 = x117[2]._super;
  Val x121 = x117[3]._super;
  Val x122 = x117[4]._super;
  Val x123 = x117[5]._super;
  Val x124 = x117[6]._super;
  Val x125 = x117[7]._super;
  Val x126 = x117[8]._super;
  Val x127 = x117[9]._super;
  Val x128 = x117[10]._super;
  Val x129 = x117[11]._super;
  Val x130 = x117[12]._super;
  Val x131 = x117[13]._super;
  Val x132 = x117[14]._super;
  Val x133 = x117[15]._super;
  Val x134 = x117[16]._super;
  Val x135 = x117[17]._super;
  Val x136 = x117[18]._super;
  Val x137 = x117[19]._super;
  Val x138 = x117[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:276)
  Val x139 =
      ((((((x118 + (x119 * Val(2))) + (x120 * Val(4))) + (x121 * Val(8))) + (x122 * Val(16))) +
        (x123 * Val(32))) +
       (x124 * Val(64)));
  Val x140 = ((((((x139 + (x125 * Val(128))) + (x126 * Val(256))) + (x127 * Val(512))) +
                (x128 * Val(1024))) +
               (x129 * Val(2048))) +
              (x130 * Val(4096)));
  Val x141 = ((((((x140 + (x131 * Val(8192))) + (x132 * Val(16384))) + (x133 * Val(32768))) +
                (x134 * Val(65536))) +
               (x135 * Val(131072))) +
              (x136 * Val(262144)));
  EQZ((((x141 + (x137 * Val(524288))) + (x138 * Val(1048576))) - x115),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:276)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x142 = x4[11]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:279)
  ToBits_21_Struct x143 = exec_ToBits_21_(ctx, x142, LAYOUT_LOOKUP(layout2, unpackP3));
  NondetRegStruct21Array x144 = x143._super;
  Val x145 = x144[0]._super;
  Val x146 = x144[1]._super;
  Val x147 = x144[2]._super;
  Val x148 = x144[3]._super;
  Val x149 = x144[4]._super;
  Val x150 = x144[5]._super;
  Val x151 = x144[6]._super;
  Val x152 = x144[7]._super;
  Val x153 = x144[8]._super;
  Val x154 = x144[9]._super;
  Val x155 = x144[10]._super;
  Val x156 = x144[11]._super;
  Val x157 = x144[12]._super;
  Val x158 = x144[13]._super;
  Val x159 = x144[14]._super;
  Val x160 = x144[15]._super;
  Val x161 = x144[16]._super;
  Val x162 = x144[17]._super;
  Val x163 = x144[18]._super;
  Val x164 = x144[19]._super;
  Val x165 = x144[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:280)
  Val x166 =
      ((((((x145 + (x146 * Val(2))) + (x147 * Val(4))) + (x148 * Val(8))) + (x149 * Val(16))) +
        (x150 * Val(32))) +
       (x151 * Val(64)));
  Val x167 = ((((((x166 + (x152 * Val(128))) + (x153 * Val(256))) + (x154 * Val(512))) +
                (x155 * Val(1024))) +
               (x156 * Val(2048))) +
              (x157 * Val(4096)));
  Val x168 = ((((((x167 + (x158 * Val(8192))) + (x159 * Val(16384))) + (x160 * Val(32768))) +
                (x161 * Val(65536))) +
               (x162 * Val(131072))) +
              (x163 * Val(262144)));
  EQZ((((x168 + (x164 * Val(524288))) + (x165 * Val(1048576))) - x142),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:280)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:287)
  RetTupleStruct x169 =
      exec_RetTuple(ctx,
                    Val22Array{x165, x90,  x91,  x92,  x93,  x94,  x95,  x96,  x97,  x98,  x99,
                               x100, x101, x102, x103, x104, x105, x106, x107, x108, x109, x110},
                    Val22Array{x111, x118, x119, x120, x121, x122, x123, x124, x125, x126, x127,
                               x128, x129, x130, x131, x132, x133, x134, x135, x136, x137, Val(0)},
                    Val22Array{x138, x145, x146, x147, x148, x149, x150, x151, x152, x153, x154,
                               x155, x156, x157, x158, x159, x160, x161, x162, x163, x164, Val(0)},
                    Val24Array{x8,  x9,  x10, x11, x12, x13, x14, x15, x16, x17, x18,    x19,
                               x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, Val(0), Val(0)},
                    Val22Array{x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46,
                               x47, x48, x49, x50, x51, x52, x53, x54, x55, x56, Val(0)},
                    Val22Array{x63, x64, x65, x66, x67, x68, x69, x70, x71, x72, x73,
                               x74, x75, x76, x77, x78, x79, x80, x81, x82, x83, Val(0)},
                    Val(7),
                    Val(8),
                    x3.rnd._super,
                    x3.blk._super,
                    x3.midx._super,
                    LAYOUT_LOOKUP(layout2, _super));
  return x169;
}
RetTupleStruct execRhoMinor1_4__3_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<RhoMinor1_4__3_Layout> layout2) {
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:341)
  BoundLayout<RhoMinor1_4__3__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:292)
  RetTupleStruct x4 = back_RetTuple(ctx, 8, arg1);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  RetTupleStruct x5 = back_RetTuple(ctx, 1, arg1);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:292)
  NondetRegStruct22Array x6 = x4.arrC;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:297)
  Val x7 = x6[13]._super;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:304)
  ToBits_22_Struct x8 = exec_ToBits_22_(ctx, x7, LAYOUT_LOOKUP(layout2, unpackXy1));
  NondetRegStruct22Array x9 = x8._super;
  Val x10 = x9[0]._super;
  Val x11 = x9[1]._super;
  Val x12 = x9[2]._super;
  Val x13 = x9[3]._super;
  Val x14 = x9[4]._super;
  Val x15 = x9[5]._super;
  Val x16 = x9[6]._super;
  Val x17 = x9[7]._super;
  Val x18 = x9[8]._super;
  Val x19 = x9[9]._super;
  Val x20 = x9[10]._super;
  Val x21 = x9[11]._super;
  Val x22 = x9[12]._super;
  Val x23 = x9[13]._super;
  Val x24 = x9[14]._super;
  Val x25 = x9[15]._super;
  Val x26 = x9[16]._super;
  Val x27 = x9[17]._super;
  Val x28 = x9[18]._super;
  Val x29 = x9[19]._super;
  Val x30 = x9[20]._super;
  Val x31 = x9[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:305)
  Val x32 = ((((((x10 + (x11 * Val(2))) + (x12 * Val(4))) + (x13 * Val(8))) + (x14 * Val(16))) +
              (x15 * Val(32))) +
             (x16 * Val(64)));
  Val x33 =
      ((((((x32 + (x17 * Val(128))) + (x18 * Val(256))) + (x19 * Val(512))) + (x20 * Val(1024))) +
        (x21 * Val(2048))) +
       (x22 * Val(4096)));
  Val x34 = ((((((x33 + (x23 * Val(8192))) + (x24 * Val(16384))) + (x25 * Val(32768))) +
               (x26 * Val(65536))) +
              (x27 * Val(131072))) +
             (x28 * Val(262144)));
  EQZ(((((x34 + (x29 * Val(524288))) + (x30 * Val(1048576))) + (x31 * Val(2097152))) - x7),
      "rho_minor1(zirgen/circuit/keccak/keccak.zir:305)");
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:309)
  Val x35 = x6[14]._super;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:316)
  ToBits_21_Struct x36 = exec_ToBits_21_(ctx, x35, LAYOUT_LOOKUP(layout2, unpackXy2));
  NondetRegStruct21Array x37 = x36._super;
  Val x38 = x37[0]._super;
  Val x39 = x37[1]._super;
  Val x40 = x37[2]._super;
  Val x41 = x37[3]._super;
  Val x42 = x37[4]._super;
  Val x43 = x37[5]._super;
  Val x44 = x37[6]._super;
  Val x45 = x37[7]._super;
  Val x46 = x37[8]._super;
  Val x47 = x37[9]._super;
  Val x48 = x37[10]._super;
  Val x49 = x37[11]._super;
  Val x50 = x37[12]._super;
  Val x51 = x37[13]._super;
  Val x52 = x37[14]._super;
  Val x53 = x37[15]._super;
  Val x54 = x37[16]._super;
  Val x55 = x37[17]._super;
  Val x56 = x37[18]._super;
  Val x57 = x37[19]._super;
  Val x58 = x37[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:317)
  Val x59 = ((((((x38 + (x39 * Val(2))) + (x40 * Val(4))) + (x41 * Val(8))) + (x42 * Val(16))) +
              (x43 * Val(32))) +
             (x44 * Val(64)));
  Val x60 =
      ((((((x59 + (x45 * Val(128))) + (x46 * Val(256))) + (x47 * Val(512))) + (x48 * Val(1024))) +
        (x49 * Val(2048))) +
       (x50 * Val(4096)));
  Val x61 = ((((((x60 + (x51 * Val(8192))) + (x52 * Val(16384))) + (x53 * Val(32768))) +
               (x54 * Val(65536))) +
              (x55 * Val(131072))) +
             (x56 * Val(262144)));
  EQZ((((x61 + (x57 * Val(524288))) + (x58 * Val(1048576))) - x35),
      "rho_minor1(zirgen/circuit/keccak/keccak.zir:317)");
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:321)
  Val x62 = x6[15]._super;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:328)
  ToBits_21_Struct x63 = exec_ToBits_21_(ctx, x62, LAYOUT_LOOKUP(layout2, unpackXy3));
  NondetRegStruct21Array x64 = x63._super;
  Val x65 = x64[0]._super;
  Val x66 = x64[1]._super;
  Val x67 = x64[2]._super;
  Val x68 = x64[3]._super;
  Val x69 = x64[4]._super;
  Val x70 = x64[5]._super;
  Val x71 = x64[6]._super;
  Val x72 = x64[7]._super;
  Val x73 = x64[8]._super;
  Val x74 = x64[9]._super;
  Val x75 = x64[10]._super;
  Val x76 = x64[11]._super;
  Val x77 = x64[12]._super;
  Val x78 = x64[13]._super;
  Val x79 = x64[14]._super;
  Val x80 = x64[15]._super;
  Val x81 = x64[16]._super;
  Val x82 = x64[17]._super;
  Val x83 = x64[18]._super;
  Val x84 = x64[19]._super;
  Val x85 = x64[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:329)
  Val x86 = ((((((x65 + (x66 * Val(2))) + (x67 * Val(4))) + (x68 * Val(8))) + (x69 * Val(16))) +
              (x70 * Val(32))) +
             (x71 * Val(64)));
  Val x87 =
      ((((((x86 + (x72 * Val(128))) + (x73 * Val(256))) + (x74 * Val(512))) + (x75 * Val(1024))) +
        (x76 * Val(2048))) +
       (x77 * Val(4096)));
  Val x88 = ((((((x87 + (x78 * Val(8192))) + (x79 * Val(16384))) + (x80 * Val(32768))) +
               (x81 * Val(65536))) +
              (x82 * Val(131072))) +
             (x83 * Val(262144)));
  EQZ((((x88 + (x84 * Val(524288))) + (x85 * Val(1048576))) - x62),
      "rho_minor1(zirgen/circuit/keccak/keccak.zir:329)");
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  NondetRegStruct22Array x89 = x5.arrA;
  NondetRegStruct24Array x90 = x5.arrD;
  Val x91 = x89[0]._super;
  Val x92 = x90[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x93 = ((x10 * x91) + ((Val(1) - x10) * (Val(1) - x91)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x94 = x89[1]._super;
  Val x95 = x90[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x96 = ((x11 * x94) + ((Val(1) - x11) * (Val(1) - x94)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x97 = x89[2]._super;
  Val x98 = x90[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x99 = ((x12 * x97) + ((Val(1) - x12) * (Val(1) - x97)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x100 = x89[3]._super;
  Val x101 = x90[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x102 = ((x13 * x100) + ((Val(1) - x13) * (Val(1) - x100)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x103 = x89[4]._super;
  Val x104 = x90[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x105 = ((x14 * x103) + ((Val(1) - x14) * (Val(1) - x103)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x106 = x89[5]._super;
  Val x107 = x90[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x108 = ((x15 * x106) + ((Val(1) - x15) * (Val(1) - x106)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x109 = x89[6]._super;
  Val x110 = x90[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x111 = ((x16 * x109) + ((Val(1) - x16) * (Val(1) - x109)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x112 = x89[7]._super;
  Val x113 = x90[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x114 = ((x17 * x112) + ((Val(1) - x17) * (Val(1) - x112)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x115 = x89[8]._super;
  Val x116 = x90[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x117 = ((x18 * x115) + ((Val(1) - x18) * (Val(1) - x115)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x118 = x89[9]._super;
  Val x119 = x90[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x120 = ((x19 * x118) + ((Val(1) - x19) * (Val(1) - x118)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x121 = x89[10]._super;
  Val x122 = x90[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x123 = ((x20 * x121) + ((Val(1) - x20) * (Val(1) - x121)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x124 = x89[11]._super;
  Val x125 = x90[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x126 = ((x21 * x124) + ((Val(1) - x21) * (Val(1) - x124)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x127 = x89[12]._super;
  Val x128 = x90[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x129 = ((x22 * x127) + ((Val(1) - x22) * (Val(1) - x127)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x130 = x89[13]._super;
  Val x131 = x90[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x132 = ((x23 * x130) + ((Val(1) - x23) * (Val(1) - x130)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x133 = x89[14]._super;
  Val x134 = x90[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x135 = ((x24 * x133) + ((Val(1) - x24) * (Val(1) - x133)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x136 = x89[15]._super;
  Val x137 = x90[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x138 = ((x25 * x136) + ((Val(1) - x25) * (Val(1) - x136)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x139 = x89[16]._super;
  Val x140 = x90[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x141 = ((x26 * x139) + ((Val(1) - x26) * (Val(1) - x139)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x142 = x89[17]._super;
  Val x143 = x90[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x144 = ((x27 * x142) + ((Val(1) - x27) * (Val(1) - x142)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x145 = x89[18]._super;
  Val x146 = x90[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x147 = ((x28 * x145) + ((Val(1) - x28) * (Val(1) - x145)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x148 = x89[19]._super;
  Val x149 = x90[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x150 = ((x29 * x148) + ((Val(1) - x29) * (Val(1) - x148)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x151 = x89[20]._super;
  Val x152 = x90[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x153 = ((x30 * x151) + ((Val(1) - x30) * (Val(1) - x151)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x154 = x89[21]._super;
  Val x155 = x90[21]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x156 = ((x31 * x154) + ((Val(1) - x31) * (Val(1) - x154)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  NondetRegStruct22Array x157 = x5.arrB;
  NondetRegStruct22Array x158 = x5.arrE;
  Val x159 = x157[0]._super;
  Val x160 = x158[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x161 = ((x38 * x159) + ((Val(1) - x38) * (Val(1) - x159)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x162 = x157[1]._super;
  Val x163 = x158[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x164 = ((x39 * x162) + ((Val(1) - x39) * (Val(1) - x162)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x165 = x157[2]._super;
  Val x166 = x158[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x167 = ((x40 * x165) + ((Val(1) - x40) * (Val(1) - x165)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x168 = x157[3]._super;
  Val x169 = x158[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x170 = ((x41 * x168) + ((Val(1) - x41) * (Val(1) - x168)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x171 = x157[4]._super;
  Val x172 = x158[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x173 = ((x42 * x171) + ((Val(1) - x42) * (Val(1) - x171)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x174 = x157[5]._super;
  Val x175 = x158[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x176 = ((x43 * x174) + ((Val(1) - x43) * (Val(1) - x174)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x177 = x157[6]._super;
  Val x178 = x158[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x179 = ((x44 * x177) + ((Val(1) - x44) * (Val(1) - x177)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x180 = x157[7]._super;
  Val x181 = x158[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x182 = ((x45 * x180) + ((Val(1) - x45) * (Val(1) - x180)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x183 = x157[8]._super;
  Val x184 = x158[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x185 = ((x46 * x183) + ((Val(1) - x46) * (Val(1) - x183)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x186 = x157[9]._super;
  Val x187 = x158[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x188 = ((x47 * x186) + ((Val(1) - x47) * (Val(1) - x186)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x189 = x157[10]._super;
  Val x190 = x158[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x191 = ((x48 * x189) + ((Val(1) - x48) * (Val(1) - x189)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x192 = x157[11]._super;
  Val x193 = x158[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x194 = ((x49 * x192) + ((Val(1) - x49) * (Val(1) - x192)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x195 = x157[12]._super;
  Val x196 = x158[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x197 = ((x50 * x195) + ((Val(1) - x50) * (Val(1) - x195)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x198 = x157[13]._super;
  Val x199 = x158[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x200 = ((x51 * x198) + ((Val(1) - x51) * (Val(1) - x198)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x201 = x157[14]._super;
  Val x202 = x158[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x203 = ((x52 * x201) + ((Val(1) - x52) * (Val(1) - x201)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x204 = x157[15]._super;
  Val x205 = x158[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x206 = ((x53 * x204) + ((Val(1) - x53) * (Val(1) - x204)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x207 = x157[16]._super;
  Val x208 = x158[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x209 = ((x54 * x207) + ((Val(1) - x54) * (Val(1) - x207)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x210 = x157[17]._super;
  Val x211 = x158[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x212 = ((x55 * x210) + ((Val(1) - x55) * (Val(1) - x210)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x213 = x157[18]._super;
  Val x214 = x158[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x215 = ((x56 * x213) + ((Val(1) - x56) * (Val(1) - x213)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x216 = x157[19]._super;
  Val x217 = x158[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x218 = ((x57 * x216) + ((Val(1) - x57) * (Val(1) - x216)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x219 = x157[20]._super;
  Val x220 = x158[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x221 = ((x58 * x219) + ((Val(1) - x58) * (Val(1) - x219)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  NondetRegStruct22Array x222 = x5.arrC;
  NondetRegStruct22Array x223 = x5.arrF;
  Val x224 = x222[0]._super;
  Val x225 = x223[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x226 = ((x65 * x224) + ((Val(1) - x65) * (Val(1) - x224)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x227 = x222[1]._super;
  Val x228 = x223[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x229 = ((x66 * x227) + ((Val(1) - x66) * (Val(1) - x227)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x230 = x222[2]._super;
  Val x231 = x223[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x232 = ((x67 * x230) + ((Val(1) - x67) * (Val(1) - x230)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x233 = x222[3]._super;
  Val x234 = x223[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x235 = ((x68 * x233) + ((Val(1) - x68) * (Val(1) - x233)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x236 = x222[4]._super;
  Val x237 = x223[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x238 = ((x69 * x236) + ((Val(1) - x69) * (Val(1) - x236)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x239 = x222[5]._super;
  Val x240 = x223[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x241 = ((x70 * x239) + ((Val(1) - x70) * (Val(1) - x239)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x242 = x222[6]._super;
  Val x243 = x223[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x244 = ((x71 * x242) + ((Val(1) - x71) * (Val(1) - x242)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x245 = x222[7]._super;
  Val x246 = x223[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x247 = ((x72 * x245) + ((Val(1) - x72) * (Val(1) - x245)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x248 = x222[8]._super;
  Val x249 = x223[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x250 = ((x73 * x248) + ((Val(1) - x73) * (Val(1) - x248)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x251 = x222[9]._super;
  Val x252 = x223[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x253 = ((x74 * x251) + ((Val(1) - x74) * (Val(1) - x251)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x254 = x222[10]._super;
  Val x255 = x223[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x256 = ((x75 * x254) + ((Val(1) - x75) * (Val(1) - x254)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x257 = x222[11]._super;
  Val x258 = x223[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x259 = ((x76 * x257) + ((Val(1) - x76) * (Val(1) - x257)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x260 = x222[12]._super;
  Val x261 = x223[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x262 = ((x77 * x260) + ((Val(1) - x77) * (Val(1) - x260)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x263 = x222[13]._super;
  Val x264 = x223[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x265 = ((x78 * x263) + ((Val(1) - x78) * (Val(1) - x263)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x266 = x222[14]._super;
  Val x267 = x223[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x268 = ((x79 * x266) + ((Val(1) - x79) * (Val(1) - x266)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x269 = x222[15]._super;
  Val x270 = x223[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x271 = ((x80 * x269) + ((Val(1) - x80) * (Val(1) - x269)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x272 = x222[16]._super;
  Val x273 = x223[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x274 = ((x81 * x272) + ((Val(1) - x81) * (Val(1) - x272)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x275 = x222[17]._super;
  Val x276 = x223[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x277 = ((x82 * x275) + ((Val(1) - x82) * (Val(1) - x275)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x278 = x222[18]._super;
  Val x279 = x223[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x280 = ((x83 * x278) + ((Val(1) - x83) * (Val(1) - x278)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x281 = x222[19]._super;
  Val x282 = x223[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x283 = ((x84 * x281) + ((Val(1) - x84) * (Val(1) - x281)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x284 = x222[20]._super;
  Val x285 = x223[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x286 = ((x85 * x284) + ((Val(1) - x85) * (Val(1) - x284)));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:336)
  Val x287 = (((x265 * x264) + ((Val(1) - x265) * (Val(1) - x264))) +
              (((x268 * x267) + ((Val(1) - x268) * (Val(1) - x267))) * Val(2)));
  Val x288 = ((x287 + (((x271 * x270) + ((Val(1) - x271) * (Val(1) - x270))) * Val(4))) +
              (((x274 * x273) + ((Val(1) - x274) * (Val(1) - x273))) * Val(8)));
  Val x289 = ((x288 + (((x277 * x276) + ((Val(1) - x277) * (Val(1) - x276))) * Val(16))) +
              (((x280 * x279) + ((Val(1) - x280) * (Val(1) - x279))) * Val(32)));
  Val x290 = ((x289 + (((x283 * x282) + ((Val(1) - x283) * (Val(1) - x282))) * Val(64))) +
              (((x286 * x285) + ((Val(1) - x286) * (Val(1) - x285))) * Val(128)));
  Val x291 = ((x290 + (((x93 * x92) + ((Val(1) - x93) * (Val(1) - x92))) * Val(256))) +
              (((x96 * x95) + ((Val(1) - x96) * (Val(1) - x95))) * Val(512)));
  Val x292 = ((x291 + (((x99 * x98) + ((Val(1) - x99) * (Val(1) - x98))) * Val(1024))) +
              (((x102 * x101) + ((Val(1) - x102) * (Val(1) - x101))) * Val(2048)));
  Val x293 = ((x292 + (((x105 * x104) + ((Val(1) - x105) * (Val(1) - x104))) * Val(4096))) +
              (((x108 * x107) + ((Val(1) - x108) * (Val(1) - x107))) * Val(8192)));
  Val x294 = ((x293 + (((x111 * x110) + ((Val(1) - x111) * (Val(1) - x110))) * Val(16384))) +
              (((x114 * x113) + ((Val(1) - x114) * (Val(1) - x113))) * Val(32768)));
  Val x295 = ((x294 + (((x117 * x116) + ((Val(1) - x117) * (Val(1) - x116))) * Val(65536))) +
              (((x120 * x119) + ((Val(1) - x120) * (Val(1) - x119))) * Val(131072)));
  Val x296 = ((x295 + (((x123 * x122) + ((Val(1) - x123) * (Val(1) - x122))) * Val(262144))) +
              (((x126 * x125) + ((Val(1) - x126) * (Val(1) - x125))) * Val(524288)));
  Val x297 = ((x296 + (((x129 * x128) + ((Val(1) - x129) * (Val(1) - x128))) * Val(1048576))) +
              (((x132 * x131) + ((Val(1) - x132) * (Val(1) - x131))) * Val(2097152)));
  NondetRegStruct x298 = exec_Reg(ctx, x297, LAYOUT_LOOKUP(layout2, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:337)
  Val x299 = (((x135 * x134) + ((Val(1) - x135) * (Val(1) - x134))) +
              (((x138 * x137) + ((Val(1) - x138) * (Val(1) - x137))) * Val(2)));
  Val x300 = ((x299 + (((x141 * x140) + ((Val(1) - x141) * (Val(1) - x140))) * Val(4))) +
              (((x144 * x143) + ((Val(1) - x144) * (Val(1) - x143))) * Val(8)));
  Val x301 = ((x300 + (((x147 * x146) + ((Val(1) - x147) * (Val(1) - x146))) * Val(16))) +
              (((x150 * x149) + ((Val(1) - x150) * (Val(1) - x149))) * Val(32)));
  Val x302 = ((x301 + (((x153 * x152) + ((Val(1) - x153) * (Val(1) - x152))) * Val(64))) +
              (((x156 * x155) + ((Val(1) - x156) * (Val(1) - x155))) * Val(128)));
  Val x303 = ((x302 + (((x161 * x160) + ((Val(1) - x161) * (Val(1) - x160))) * Val(256))) +
              (((x164 * x163) + ((Val(1) - x164) * (Val(1) - x163))) * Val(512)));
  Val x304 = ((x303 + (((x167 * x166) + ((Val(1) - x167) * (Val(1) - x166))) * Val(1024))) +
              (((x170 * x169) + ((Val(1) - x170) * (Val(1) - x169))) * Val(2048)));
  Val x305 = ((x304 + (((x173 * x172) + ((Val(1) - x173) * (Val(1) - x172))) * Val(4096))) +
              (((x176 * x175) + ((Val(1) - x176) * (Val(1) - x175))) * Val(8192)));
  Val x306 = ((x305 + (((x179 * x178) + ((Val(1) - x179) * (Val(1) - x178))) * Val(16384))) +
              (((x182 * x181) + ((Val(1) - x182) * (Val(1) - x181))) * Val(32768)));
  Val x307 = ((x306 + (((x185 * x184) + ((Val(1) - x185) * (Val(1) - x184))) * Val(65536))) +
              (((x188 * x187) + ((Val(1) - x188) * (Val(1) - x187))) * Val(131072)));
  Val x308 = ((x307 + (((x191 * x190) + ((Val(1) - x191) * (Val(1) - x190))) * Val(262144))) +
              (((x194 * x193) + ((Val(1) - x194) * (Val(1) - x193))) * Val(524288)));
  NondetRegStruct x309 =
      exec_Reg(ctx,
               (x308 + (((x197 * x196) + ((Val(1) - x197) * (Val(1) - x196))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _1));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:338)
  Val x310 = (((x200 * x199) + ((Val(1) - x200) * (Val(1) - x199))) +
              (((x203 * x202) + ((Val(1) - x203) * (Val(1) - x202))) * Val(2)));
  Val x311 = ((x310 + (((x206 * x205) + ((Val(1) - x206) * (Val(1) - x205))) * Val(4))) +
              (((x209 * x208) + ((Val(1) - x209) * (Val(1) - x208))) * Val(8)));
  Val x312 = ((x311 + (((x212 * x211) + ((Val(1) - x212) * (Val(1) - x211))) * Val(16))) +
              (((x215 * x214) + ((Val(1) - x215) * (Val(1) - x214))) * Val(32)));
  Val x313 = ((x312 + (((x218 * x217) + ((Val(1) - x218) * (Val(1) - x217))) * Val(64))) +
              (((x221 * x220) + ((Val(1) - x221) * (Val(1) - x220))) * Val(128)));
  Val x314 = ((x313 + (((x226 * x225) + ((Val(1) - x226) * (Val(1) - x225))) * Val(256))) +
              (((x229 * x228) + ((Val(1) - x229) * (Val(1) - x228))) * Val(512)));
  Val x315 = ((x314 + (((x232 * x231) + ((Val(1) - x232) * (Val(1) - x231))) * Val(1024))) +
              (((x235 * x234) + ((Val(1) - x235) * (Val(1) - x234))) * Val(2048)));
  Val x316 = ((x315 + (((x238 * x237) + ((Val(1) - x238) * (Val(1) - x237))) * Val(4096))) +
              (((x241 * x240) + ((Val(1) - x241) * (Val(1) - x240))) * Val(8192)));
  Val x317 = ((x316 + (((x244 * x243) + ((Val(1) - x244) * (Val(1) - x243))) * Val(16384))) +
              (((x247 * x246) + ((Val(1) - x247) * (Val(1) - x246))) * Val(32768)));
  Val x318 = ((x317 + (((x250 * x249) + ((Val(1) - x250) * (Val(1) - x249))) * Val(65536))) +
              (((x253 * x252) + ((Val(1) - x253) * (Val(1) - x252))) * Val(131072)));
  Val x319 = ((x318 + (((x256 * x255) + ((Val(1) - x256) * (Val(1) - x255))) * Val(262144))) +
              (((x259 * x258) + ((Val(1) - x259) * (Val(1) - x258))) * Val(524288)));
  NondetRegStruct x320 =
      exec_Reg(ctx,
               (x319 + (((x262 * x261) + ((Val(1) - x262) * (Val(1) - x261))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _2));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:341)
  BoundLayout<RhoMinor1_4__3_Arm1_SuperLayout> x321 = LAYOUT_LOOKUP(x3, arm1);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:342)
  Val22Array x322 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  Val24Array x323 = Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:339)
  Val22Array x324 =
      Val22Array{x298._super, x309._super, x320._super, Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0)};
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x325 = x5.rnd._super;
  Val x326 = x5.blk._super;
  Val x327 = x5.midx._super;
  if (to_size_t(Val(1))) {
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:342)
    RetTupleStruct x328 = exec_RetTuple(ctx,
                                        x322,
                                        x322,
                                        x322,
                                        x323,
                                        x322,
                                        x324,
                                        Val(8),
                                        Val(8),
                                        x325,
                                        x326,
                                        x327,
                                        LAYOUT_LOOKUP(x3, arm0));
  }
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:292)
  NondetRegStruct24Array x329 = x4.arrD;
  Val x330 = x329[21]._super;
  Val x331 = x329[22]._super;
  Val x332 = x329[23]._super;
  if (to_size_t(Val(0))) {
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:345)
    ToBits_22_Struct x333 = exec_ToBits_22_(ctx, x330, LAYOUT_LOOKUP(x321, unpackM1));
    NondetRegStruct22Array x334 = x333._super;
    Val x335 = x334[0]._super;
    Val x336 = x334[1]._super;
    Val x337 = x334[2]._super;
    Val x338 = x334[3]._super;
    Val x339 = x334[4]._super;
    Val x340 = x334[5]._super;
    Val x341 = x334[6]._super;
    Val x342 = x334[7]._super;
    Val x343 = x334[8]._super;
    Val x344 = x334[9]._super;
    Val x345 = x334[10]._super;
    Val x346 = x334[11]._super;
    Val x347 = x334[12]._super;
    Val x348 = x334[13]._super;
    Val x349 = x334[14]._super;
    Val x350 = x334[15]._super;
    Val x351 = x334[16]._super;
    Val x352 = x334[17]._super;
    Val x353 = x334[18]._super;
    Val x354 = x334[19]._super;
    Val x355 = x334[20]._super;
    Val x356 = x334[21]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:346)
    Val x357 =
        ((((((x335 + (x336 * Val(2))) + (x337 * Val(4))) + (x338 * Val(8))) + (x339 * Val(16))) +
          (x340 * Val(32))) +
         (x341 * Val(64)));
    Val x358 = ((((((x357 + (x342 * Val(128))) + (x343 * Val(256))) + (x344 * Val(512))) +
                  (x345 * Val(1024))) +
                 (x346 * Val(2048))) +
                (x347 * Val(4096)));
    Val x359 = ((((((x358 + (x348 * Val(8192))) + (x349 * Val(16384))) + (x350 * Val(32768))) +
                  (x351 * Val(65536))) +
                 (x352 * Val(131072))) +
                (x353 * Val(262144)));
    EQZ(((((x359 + (x354 * Val(524288))) + (x355 * Val(1048576))) + (x356 * Val(2097152))) - x330),
        "rho_minor1(zirgen/circuit/keccak/keccak.zir:346)");
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:349)
    ToBits_21_Struct x360 = exec_ToBits_21_(ctx, x331, LAYOUT_LOOKUP(x321, unpackM2));
    NondetRegStruct21Array x361 = x360._super;
    Val x362 = x361[0]._super;
    Val x363 = x361[1]._super;
    Val x364 = x361[2]._super;
    Val x365 = x361[3]._super;
    Val x366 = x361[4]._super;
    Val x367 = x361[5]._super;
    Val x368 = x361[6]._super;
    Val x369 = x361[7]._super;
    Val x370 = x361[8]._super;
    Val x371 = x361[9]._super;
    Val x372 = x361[10]._super;
    Val x373 = x361[11]._super;
    Val x374 = x361[12]._super;
    Val x375 = x361[13]._super;
    Val x376 = x361[14]._super;
    Val x377 = x361[15]._super;
    Val x378 = x361[16]._super;
    Val x379 = x361[17]._super;
    Val x380 = x361[18]._super;
    Val x381 = x361[19]._super;
    Val x382 = x361[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:350)
    Val x383 =
        ((((((x362 + (x363 * Val(2))) + (x364 * Val(4))) + (x365 * Val(8))) + (x366 * Val(16))) +
          (x367 * Val(32))) +
         (x368 * Val(64)));
    Val x384 = ((((((x383 + (x369 * Val(128))) + (x370 * Val(256))) + (x371 * Val(512))) +
                  (x372 * Val(1024))) +
                 (x373 * Val(2048))) +
                (x374 * Val(4096)));
    Val x385 = ((((((x384 + (x375 * Val(8192))) + (x376 * Val(16384))) + (x377 * Val(32768))) +
                  (x378 * Val(65536))) +
                 (x379 * Val(131072))) +
                (x380 * Val(262144)));
    EQZ((((x385 + (x381 * Val(524288))) + (x382 * Val(1048576))) - x331),
        "rho_minor1(zirgen/circuit/keccak/keccak.zir:350)");
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:354)
    ToBits_21_Struct x386 = exec_ToBits_21_(ctx, x332, LAYOUT_LOOKUP(x321, unpackM3));
    NondetRegStruct21Array x387 = x386._super;
    Val x388 = x387[0]._super;
    Val x389 = x387[1]._super;
    Val x390 = x387[2]._super;
    Val x391 = x387[3]._super;
    Val x392 = x387[4]._super;
    Val x393 = x387[5]._super;
    Val x394 = x387[6]._super;
    Val x395 = x387[7]._super;
    Val x396 = x387[8]._super;
    Val x397 = x387[9]._super;
    Val x398 = x387[10]._super;
    Val x399 = x387[11]._super;
    Val x400 = x387[12]._super;
    Val x401 = x387[13]._super;
    Val x402 = x387[14]._super;
    Val x403 = x387[15]._super;
    Val x404 = x387[16]._super;
    Val x405 = x387[17]._super;
    Val x406 = x387[18]._super;
    Val x407 = x387[19]._super;
    Val x408 = x387[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:355)
    Val x409 =
        ((((((x388 + (x389 * Val(2))) + (x390 * Val(4))) + (x391 * Val(8))) + (x392 * Val(16))) +
          (x393 * Val(32))) +
         (x394 * Val(64)));
    Val x410 = ((((((x409 + (x395 * Val(128))) + (x396 * Val(256))) + (x397 * Val(512))) +
                  (x398 * Val(1024))) +
                 (x399 * Val(2048))) +
                (x400 * Val(4096)));
    Val x411 = ((((((x410 + (x401 * Val(8192))) + (x402 * Val(16384))) + (x403 * Val(32768))) +
                  (x404 * Val(65536))) +
                 (x405 * Val(131072))) +
                (x406 * Val(262144)));
    EQZ((((x411 + (x407 * Val(524288))) + (x408 * Val(1048576))) - x332),
        "rho_minor1(zirgen/circuit/keccak/keccak.zir:355)");
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:358)
    RetTupleStruct x412 = exec_RetTuple(
        ctx,
        Val22Array{x335, x336, x337, x338, x339, x340, x341, x342, x343, x344, x345,
                   x346, x347, x348, x349, x350, x351, x352, x353, x354, x355, x356},
        Val22Array{x362, x363, x364, x365, x366, x367, x368, x369, x370, x371, x372,
                   x373, x374, x375, x376, x377, x378, x379, x380, x381, x382, Val(0)},
        Val22Array{x388, x389, x390, x391, x392, x393, x394, x395, x396, x397, x398,
                   x399, x400, x401, x402, x403, x404, x405, x406, x407, x408, Val(0)},
        x323,
        x322,
        x324,
        Val(8),
        Val(8),
        x325,
        x326,
        x327,
        LAYOUT_LOOKUP(x321, _super));
  }
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:341)
  RetTupleStruct x413 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x413;
}
RetTupleStruct execRhoMinor3_3_(ExecContext& ctx,
                                RetTupleStruct arg0,
                                BoundLayout<RetTupleLayout> arg1,
                                BoundLayout<RhoMinor3_3__SuperLayout> layout2) {
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:432)
  RetTupleStruct x3 = back_RetTuple(ctx, 1, arg1);
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:433)
  RetTupleStruct x4 = back_RetTuple(ctx, 3, arg1);
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:434)
  RetTupleStruct x5 = back_RetTuple(ctx, 4, arg1);
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:435)
  RetTupleStruct x6 = back_RetTuple(ctx, 6, arg1);
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:436)
  RetTupleStruct x7 = back_RetTuple(ctx, 7, arg1);
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:437)
  RetTupleStruct x8 = back_RetTuple(ctx, 9, arg1);
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:439)
  BoundLayout<RhoMinor3_3_Arm1_SuperLayout> x9 = LAYOUT_LOOKUP(layout2, arm1);
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:436)
  NondetRegStruct22Array x10 = x7.arrF;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:435)
  NondetRegStruct22Array x11 = x6.arrF;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:444)
  Val x12 = x10[0]._super;
  Val x13 = x10[1]._super;
  Val x14 = x10[2]._super;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:445)
  Val x15 = x11[0]._super;
  Val x16 = x11[1]._super;
  Val x17 = x11[2]._super;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:434)
  NondetRegStruct22Array x18 = x5.arrF;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:446)
  Val x19 = x18[0]._super;
  Val x20 = x18[1]._super;
  Val x21 = x18[2]._super;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:433)
  NondetRegStruct22Array x22 = x4.arrF;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:447)
  Val x23 = x22[0]._super;
  Val x24 = x22[1]._super;
  Val x25 = x22[2]._super;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:432)
  NondetRegStruct22Array x26 = x3.arrF;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:448)
  Val x27 = x26[0]._super;
  Val x28 = x26[1]._super;
  Val x29 = x26[2]._super;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:437)
  NondetRegStruct22Array x30 = x8.arrA;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:449)
  Val x31 = x30[15]._super;
  Val x32 = x30[16]._super;
  Val x33 = x30[17]._super;
  Val x34 = x30[18]._super;
  Val x35 = x30[19]._super;
  Val x36 = x30[20]._super;
  Val x37 = x30[21]._super;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:437)
  NondetRegStruct22Array x38 = x8.arrB;
  NondetRegStruct22Array x39 = x8.arrC;
  NondetRegStruct24Array x40 = x8.arrD;
  Val x41 = x38[0]._super;
  Val x42 = x38[1]._super;
  Val x43 = x38[2]._super;
  Val x44 = x38[3]._super;
  Val x45 = x38[4]._super;
  Val x46 = x38[5]._super;
  Val x47 = x38[6]._super;
  Val x48 = x38[7]._super;
  Val x49 = x38[8]._super;
  Val x50 = x38[9]._super;
  Val x51 = x38[10]._super;
  Val x52 = x38[11]._super;
  Val x53 = x38[12]._super;
  Val x54 = x38[13]._super;
  Val x55 = x38[14]._super;
  Val x56 = x38[15]._super;
  Val x57 = x38[16]._super;
  Val x58 = x38[17]._super;
  Val x59 = x38[18]._super;
  Val x60 = x38[19]._super;
  Val x61 = x38[20]._super;
  Val x62 = x38[21]._super;
  Val22Array x63 = Val22Array{x41, x42, x43, x44, x45, x46, x47, x48, x49, x50, x51,
                              x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62};
  Val x64 = x39[0]._super;
  Val x65 = x39[1]._super;
  Val x66 = x39[2]._super;
  Val x67 = x39[3]._super;
  Val x68 = x39[4]._super;
  Val x69 = x39[5]._super;
  Val x70 = x39[6]._super;
  Val x71 = x39[7]._super;
  Val x72 = x39[8]._super;
  Val x73 = x39[9]._super;
  Val x74 = x39[10]._super;
  Val x75 = x39[11]._super;
  Val x76 = x39[12]._super;
  Val x77 = x39[13]._super;
  Val x78 = x39[14]._super;
  Val x79 = x39[15]._super;
  Val x80 = x39[16]._super;
  Val x81 = x39[17]._super;
  Val x82 = x39[18]._super;
  Val x83 = x39[19]._super;
  Val x84 = x39[20]._super;
  Val x85 = x39[21]._super;
  Val22Array x86 = Val22Array{x64, x65, x66, x67, x68, x69, x70, x71, x72, x73, x74,
                              x75, x76, x77, x78, x79, x80, x81, x82, x83, x84, x85};
  Val24Array x87 =
      Val24Array{x40[0]._super,  x40[1]._super,  x40[2]._super,  x40[3]._super,  x40[4]._super,
                 x40[5]._super,  x40[6]._super,  x40[7]._super,  x40[8]._super,  x40[9]._super,
                 x40[10]._super, x40[11]._super, x40[12]._super, x40[13]._super, x40[14]._super,
                 x40[15]._super, x40[16]._super, x40[17]._super, x40[18]._super, x40[19]._super,
                 x40[20]._super, x40[21]._super, x40[22]._super, x40[23]._super};
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:451)
  Val22Array x88 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:432)
  Val x89 = x3.rnd._super;
  Val x90 = x3.blk._super;
  Val x91 = x3.midx._super;
  if (to_size_t(Val(0))) {
    // rho_minor3(zirgen/circuit/keccak/keccak.zir:450)
    RetTupleStruct x92 =
        exec_RetTuple(ctx,
                      Val22Array{x12, x13, x14, x15, x16, x17, x19, x20, x21, x23, x24,
                                 x25, x27, x28, x29, x31, x32, x33, x34, x35, x36, x37},
                      x63,
                      x86,
                      x87,
                      x88,
                      x88,
                      Val(0),
                      Val(6),
                      x89,
                      x90,
                      x91,
                      LAYOUT_LOOKUP(layout2, arm0));
  }
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:453)
  BoundLayout<RhoMinor3_3_Arm1Arm1_SuperLayout> x93 = LAYOUT_LOOKUP(x9, arm1);
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:457)
  Val x94 = x30[0]._super;
  Val x95 = x30[1]._super;
  Val x96 = x30[2]._super;
  Val x97 = x30[3]._super;
  Val x98 = x30[4]._super;
  Val x99 = x30[5]._super;
  Val x100 = x30[6]._super;
  Val x101 = x30[7]._super;
  Val x102 = x30[8]._super;
  Val x103 = x30[9]._super;
  Val x104 = x30[10]._super;
  Val x105 = x30[11]._super;
  Val x106 = x30[12]._super;
  Val x107 = x30[13]._super;
  Val x108 = x30[14]._super;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:465)
  BoundLayout<RhoMinor3_3_Arm1Arm1Arm1_SuperLayout> x109 = LAYOUT_LOOKUP(x93, arm1);
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:437)
  Val22Array x110 = Val22Array{x94,  x95,  x96,  x97,  x98, x99, x100, x101, x102, x103, x104,
                               x105, x106, x107, x108, x31, x32, x33,  x34,  x35,  x36,  x37};
  if (to_size_t(Val(1))) {
    if (to_size_t(Val(0))) {
      // rho_minor3(zirgen/circuit/keccak/keccak.zir:462)
      RetTupleStruct x111 =
          exec_RetTuple(ctx,
                        Val22Array{x94,  x95,  x96,  x97,  x98, x99, x100, x101, x102, x103, x104,
                                   x105, x106, x107, x108, x12, x13, x14,  x15,  x16,  x17,  x19},
                        Val22Array{x20, x21, x23, x24, x25, x27, x28, x29, x49, x50, x51,
                                   x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62},
                        x86,
                        x87,
                        x88,
                        x88,
                        Val(0),
                        Val(7),
                        x89,
                        x90,
                        x91,
                        LAYOUT_LOOKUP(x9, arm0));
    }
    if (to_size_t(Val(1))) {
      if (to_size_t(Val(0))) {
        // rho_minor3(zirgen/circuit/keccak/keccak.zir:474)
        RetTupleStruct x112 =
            exec_RetTuple(ctx,
                          x110,
                          Val22Array{x41, x42, x43, x44, x45, x46, x47, x48, x12, x13, x14,
                                     x15, x16, x17, x19, x20, x21, x23, x24, x25, x27, x28},
                          Val22Array{x29, x65, x66, x67, x68, x69, x70, x71, x72, x73, x74,
                                     x75, x76, x77, x78, x79, x80, x81, x82, x83, x84, x85},
                          x87,
                          x88,
                          x88,
                          Val(0),
                          Val(8),
                          x89,
                          x90,
                          x91,
                          LAYOUT_LOOKUP(x93, arm0));
      }
      if (to_size_t(Val(1))) {
        if (to_size_t(Val(1))) {
          // rho_minor3(zirgen/circuit/keccak/keccak.zir:485)
          RetTupleStruct x113 =
              exec_RetTuple(ctx,
                            x110,
                            x63,
                            Val22Array{x64, x12, x13, x14, x15, x16, x17, x19, x20, x21, x23,
                                       x24, x25, x27, x28, x29, x80, x81, x82, x83, x84, x85},
                            x87,
                            x88,
                            x88,
                            Val(0),
                            Val(9),
                            x89,
                            x90,
                            x91,
                            LAYOUT_LOOKUP(x109, arm0));
        }
        if (to_size_t(Val(0))) {
          // rho_minor3(zirgen/circuit/keccak/keccak.zir:522)
          RetTupleStruct x114 = exec_RetTuple(
              ctx,
              Val22Array{x94, x95, x96, x34, x35,  x36,  x55,  x56, x57, x74, x75,
                         x76, x27, x28, x29, x103, x104, x105, x46, x47, x48, x49},
              Val22Array{x50, x51, x68, x69, x70, x19, x20, x21, x97, x98, x99,
                         x37, x41, x42, x58, x59, x60, x77, x78, x79, x12, x13},
              Val22Array{x14, x106, x107, x108, x31, x32,  x33,  x52,  x53, x54, x71,
                         x72, x73,  x23,  x24,  x25, x100, x101, x102, x43, x44, x45},
              Val24Array{x61,    x62,    x64,    x65,    x66,    x67,    x15,    x16,
                         x17,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                         Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
              x88,
              x88,
              Val(0),
              Val(10),
              x89,
              x90,
              x91,
              LAYOUT_LOOKUP(x109, arm1));
        }
        // rho_minor3(zirgen/circuit/keccak/keccak.zir:477)
        RetTupleStruct x115 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x109, _super));
      }
      // rho_minor3(zirgen/circuit/keccak/keccak.zir:465)
      RetTupleStruct x116 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x93, _super));
    }
    // rho_minor3(zirgen/circuit/keccak/keccak.zir:453)
    RetTupleStruct x117 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x9, _super));
  }
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:439)
  RetTupleStruct x118 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(layout2, _super));
  return x118;
}
RetTupleStruct execRhoMajor_3_(ExecContext& ctx,
                               RetTupleStruct arg0,
                               BoundLayout<RetTupleLayout> arg1,
                               BoundLayout<RhoMajor_3_Layout> layout2) {
  // rho_major(zirgen/circuit/keccak/keccak.zir:529)
  BoundLayout<RhoMajor_3__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // rho_major(zirgen/circuit/keccak/keccak.zir:528)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  OneHot_9_Struct x5 = exec_OneHot_9_(ctx, x4.minor._super, LAYOUT_LOOKUP(layout2, minorOnehot));
  NondetRegStruct9Array x6 = x5._super;
  if (to_size_t(x6[0]._super)) {
    // rho_major(zirgen/circuit/keccak/keccak.zir:530)
    RetTupleStruct x7 = execRhoMinor0_0__3_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm0));
  }
  if (to_size_t(x6[1]._super)) {
    // rho_major(zirgen/circuit/keccak/keccak.zir:531)
    RetTupleStruct x8 = execRhoMinor1_0__3_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm1));
  }
  if (to_size_t(x6[2]._super)) {
    // rho_major(zirgen/circuit/keccak/keccak.zir:532)
    RetTupleStruct x9 = execRhoMinor2_0__3_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm2));
  }
  if (to_size_t(x6[3]._super)) {
    // rho_major(zirgen/circuit/keccak/keccak.zir:533)
    RetTupleStruct x10 = execRhoMinor0_2__3_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm3));
  }
  if (to_size_t(x6[4]._super)) {
    // rho_major(zirgen/circuit/keccak/keccak.zir:534)
    RetTupleStruct x11 = execRhoMinor1_2__3_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm4));
  }
  if (to_size_t(x6[5]._super)) {
    // rho_major(zirgen/circuit/keccak/keccak.zir:535)
    RetTupleStruct x12 = execRhoMinor2_2__3_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm5));
  }
  if (to_size_t(x6[6]._super)) {
    // rho_major(zirgen/circuit/keccak/keccak.zir:536)
    RetTupleStruct x13 = execRhoMinor0_4__3_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm6));
  }
  if (to_size_t(x6[7]._super)) {
    // rho_major(zirgen/circuit/keccak/keccak.zir:537)
    RetTupleStruct x14 = execRhoMinor1_4__3_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm7));
  }
  if (to_size_t(x6[8]._super)) {
    // rho_major(zirgen/circuit/keccak/keccak.zir:538)
    RetTupleStruct x15 = execRhoMinor3_3_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm8));
  }
  // rho_major(zirgen/circuit/keccak/keccak.zir:529)
  RetTupleStruct x16 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x16;
}
RetTupleStruct execRhoMinor0_0__4_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<RhoMinor0_0__4_Layout> layout2) {
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  RetTupleStruct x3 = back_RetTuple(ctx, 1, arg1);
  NondetRegStruct24Array x4 = x3.arrD;
  Val x5 = x4[21]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:257)
  ToBits_22_Struct x6 = exec_ToBits_22_(ctx, x5, LAYOUT_LOOKUP(layout2, unpackM1));
  NondetRegStruct22Array x7 = x6._super;
  Val x8 = x7[0]._super;
  Val x9 = x7[1]._super;
  Val x10 = x7[2]._super;
  Val x11 = x7[3]._super;
  Val x12 = x7[4]._super;
  Val x13 = x7[5]._super;
  Val x14 = x7[6]._super;
  Val x15 = x7[7]._super;
  Val x16 = x7[8]._super;
  Val x17 = x7[9]._super;
  Val x18 = x7[10]._super;
  Val x19 = x7[11]._super;
  Val x20 = x7[12]._super;
  Val x21 = x7[13]._super;
  Val x22 = x7[14]._super;
  Val x23 = x7[15]._super;
  Val x24 = x7[16]._super;
  Val x25 = x7[17]._super;
  Val x26 = x7[18]._super;
  Val x27 = x7[19]._super;
  Val x28 = x7[20]._super;
  Val x29 = x7[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:258)
  Val x30 = ((((((x8 + (x9 * Val(2))) + (x10 * Val(4))) + (x11 * Val(8))) + (x12 * Val(16))) +
              (x13 * Val(32))) +
             (x14 * Val(64)));
  Val x31 =
      ((((((x30 + (x15 * Val(128))) + (x16 * Val(256))) + (x17 * Val(512))) + (x18 * Val(1024))) +
        (x19 * Val(2048))) +
       (x20 * Val(4096)));
  Val x32 = ((((((x31 + (x21 * Val(8192))) + (x22 * Val(16384))) + (x23 * Val(32768))) +
               (x24 * Val(65536))) +
              (x25 * Val(131072))) +
             (x26 * Val(262144)));
  EQZ(((((x32 + (x27 * Val(524288))) + (x28 * Val(1048576))) + (x29 * Val(2097152))) - x5),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:258)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x33 = x4[22]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:261)
  ToBits_21_Struct x34 = exec_ToBits_21_(ctx, x33, LAYOUT_LOOKUP(layout2, unpackM2));
  NondetRegStruct21Array x35 = x34._super;
  Val x36 = x35[0]._super;
  Val x37 = x35[1]._super;
  Val x38 = x35[2]._super;
  Val x39 = x35[3]._super;
  Val x40 = x35[4]._super;
  Val x41 = x35[5]._super;
  Val x42 = x35[6]._super;
  Val x43 = x35[7]._super;
  Val x44 = x35[8]._super;
  Val x45 = x35[9]._super;
  Val x46 = x35[10]._super;
  Val x47 = x35[11]._super;
  Val x48 = x35[12]._super;
  Val x49 = x35[13]._super;
  Val x50 = x35[14]._super;
  Val x51 = x35[15]._super;
  Val x52 = x35[16]._super;
  Val x53 = x35[17]._super;
  Val x54 = x35[18]._super;
  Val x55 = x35[19]._super;
  Val x56 = x35[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:262)
  Val x57 = ((((((x36 + (x37 * Val(2))) + (x38 * Val(4))) + (x39 * Val(8))) + (x40 * Val(16))) +
              (x41 * Val(32))) +
             (x42 * Val(64)));
  Val x58 =
      ((((((x57 + (x43 * Val(128))) + (x44 * Val(256))) + (x45 * Val(512))) + (x46 * Val(1024))) +
        (x47 * Val(2048))) +
       (x48 * Val(4096)));
  Val x59 = ((((((x58 + (x49 * Val(8192))) + (x50 * Val(16384))) + (x51 * Val(32768))) +
               (x52 * Val(65536))) +
              (x53 * Val(131072))) +
             (x54 * Val(262144)));
  EQZ((((x59 + (x55 * Val(524288))) + (x56 * Val(1048576))) - x33),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:262)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x60 = x4[23]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:266)
  ToBits_21_Struct x61 = exec_ToBits_21_(ctx, x60, LAYOUT_LOOKUP(layout2, unpackM3));
  NondetRegStruct21Array x62 = x61._super;
  Val x63 = x62[0]._super;
  Val x64 = x62[1]._super;
  Val x65 = x62[2]._super;
  Val x66 = x62[3]._super;
  Val x67 = x62[4]._super;
  Val x68 = x62[5]._super;
  Val x69 = x62[6]._super;
  Val x70 = x62[7]._super;
  Val x71 = x62[8]._super;
  Val x72 = x62[9]._super;
  Val x73 = x62[10]._super;
  Val x74 = x62[11]._super;
  Val x75 = x62[12]._super;
  Val x76 = x62[13]._super;
  Val x77 = x62[14]._super;
  Val x78 = x62[15]._super;
  Val x79 = x62[16]._super;
  Val x80 = x62[17]._super;
  Val x81 = x62[18]._super;
  Val x82 = x62[19]._super;
  Val x83 = x62[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:267)
  Val x84 = ((((((x63 + (x64 * Val(2))) + (x65 * Val(4))) + (x66 * Val(8))) + (x67 * Val(16))) +
              (x68 * Val(32))) +
             (x69 * Val(64)));
  Val x85 =
      ((((((x84 + (x70 * Val(128))) + (x71 * Val(256))) + (x72 * Val(512))) + (x73 * Val(1024))) +
        (x74 * Val(2048))) +
       (x75 * Val(4096)));
  Val x86 = ((((((x85 + (x76 * Val(8192))) + (x77 * Val(16384))) + (x78 * Val(32768))) +
               (x79 * Val(65536))) +
              (x80 * Val(131072))) +
             (x81 * Val(262144)));
  EQZ((((x86 + (x82 * Val(524288))) + (x83 * Val(1048576))) - x60),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:267)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x87 = x4[12]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:271)
  ToBits_22_Struct x88 = exec_ToBits_22_(ctx, x87, LAYOUT_LOOKUP(layout2, unpackP1));
  NondetRegStruct22Array x89 = x88._super;
  Val x90 = x89[0]._super;
  Val x91 = x89[1]._super;
  Val x92 = x89[2]._super;
  Val x93 = x89[3]._super;
  Val x94 = x89[4]._super;
  Val x95 = x89[5]._super;
  Val x96 = x89[6]._super;
  Val x97 = x89[7]._super;
  Val x98 = x89[8]._super;
  Val x99 = x89[9]._super;
  Val x100 = x89[10]._super;
  Val x101 = x89[11]._super;
  Val x102 = x89[12]._super;
  Val x103 = x89[13]._super;
  Val x104 = x89[14]._super;
  Val x105 = x89[15]._super;
  Val x106 = x89[16]._super;
  Val x107 = x89[17]._super;
  Val x108 = x89[18]._super;
  Val x109 = x89[19]._super;
  Val x110 = x89[20]._super;
  Val x111 = x89[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:272)
  Val x112 = ((((((x90 + (x91 * Val(2))) + (x92 * Val(4))) + (x93 * Val(8))) + (x94 * Val(16))) +
               (x95 * Val(32))) +
              (x96 * Val(64)));
  Val x113 =
      ((((((x112 + (x97 * Val(128))) + (x98 * Val(256))) + (x99 * Val(512))) + (x100 * Val(1024))) +
        (x101 * Val(2048))) +
       (x102 * Val(4096)));
  Val x114 = ((((((x113 + (x103 * Val(8192))) + (x104 * Val(16384))) + (x105 * Val(32768))) +
                (x106 * Val(65536))) +
               (x107 * Val(131072))) +
              (x108 * Val(262144)));
  EQZ(((((x114 + (x109 * Val(524288))) + (x110 * Val(1048576))) + (x111 * Val(2097152))) - x87),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:272)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x115 = x4[13]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:275)
  ToBits_21_Struct x116 = exec_ToBits_21_(ctx, x115, LAYOUT_LOOKUP(layout2, unpackP2));
  NondetRegStruct21Array x117 = x116._super;
  Val x118 = x117[0]._super;
  Val x119 = x117[1]._super;
  Val x120 = x117[2]._super;
  Val x121 = x117[3]._super;
  Val x122 = x117[4]._super;
  Val x123 = x117[5]._super;
  Val x124 = x117[6]._super;
  Val x125 = x117[7]._super;
  Val x126 = x117[8]._super;
  Val x127 = x117[9]._super;
  Val x128 = x117[10]._super;
  Val x129 = x117[11]._super;
  Val x130 = x117[12]._super;
  Val x131 = x117[13]._super;
  Val x132 = x117[14]._super;
  Val x133 = x117[15]._super;
  Val x134 = x117[16]._super;
  Val x135 = x117[17]._super;
  Val x136 = x117[18]._super;
  Val x137 = x117[19]._super;
  Val x138 = x117[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:276)
  Val x139 =
      ((((((x118 + (x119 * Val(2))) + (x120 * Val(4))) + (x121 * Val(8))) + (x122 * Val(16))) +
        (x123 * Val(32))) +
       (x124 * Val(64)));
  Val x140 = ((((((x139 + (x125 * Val(128))) + (x126 * Val(256))) + (x127 * Val(512))) +
                (x128 * Val(1024))) +
               (x129 * Val(2048))) +
              (x130 * Val(4096)));
  Val x141 = ((((((x140 + (x131 * Val(8192))) + (x132 * Val(16384))) + (x133 * Val(32768))) +
                (x134 * Val(65536))) +
               (x135 * Val(131072))) +
              (x136 * Val(262144)));
  EQZ((((x141 + (x137 * Val(524288))) + (x138 * Val(1048576))) - x115),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:276)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x142 = x4[14]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:279)
  ToBits_21_Struct x143 = exec_ToBits_21_(ctx, x142, LAYOUT_LOOKUP(layout2, unpackP3));
  NondetRegStruct21Array x144 = x143._super;
  Val x145 = x144[0]._super;
  Val x146 = x144[1]._super;
  Val x147 = x144[2]._super;
  Val x148 = x144[3]._super;
  Val x149 = x144[4]._super;
  Val x150 = x144[5]._super;
  Val x151 = x144[6]._super;
  Val x152 = x144[7]._super;
  Val x153 = x144[8]._super;
  Val x154 = x144[9]._super;
  Val x155 = x144[10]._super;
  Val x156 = x144[11]._super;
  Val x157 = x144[12]._super;
  Val x158 = x144[13]._super;
  Val x159 = x144[14]._super;
  Val x160 = x144[15]._super;
  Val x161 = x144[16]._super;
  Val x162 = x144[17]._super;
  Val x163 = x144[18]._super;
  Val x164 = x144[19]._super;
  Val x165 = x144[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:280)
  Val x166 =
      ((((((x145 + (x146 * Val(2))) + (x147 * Val(4))) + (x148 * Val(8))) + (x149 * Val(16))) +
        (x150 * Val(32))) +
       (x151 * Val(64)));
  Val x167 = ((((((x166 + (x152 * Val(128))) + (x153 * Val(256))) + (x154 * Val(512))) +
                (x155 * Val(1024))) +
               (x156 * Val(2048))) +
              (x157 * Val(4096)));
  Val x168 = ((((((x167 + (x158 * Val(8192))) + (x159 * Val(16384))) + (x160 * Val(32768))) +
                (x161 * Val(65536))) +
               (x162 * Val(131072))) +
              (x163 * Val(262144)));
  EQZ((((x168 + (x164 * Val(524288))) + (x165 * Val(1048576))) - x142),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:280)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:287)
  RetTupleStruct x169 =
      exec_RetTuple(ctx,
                    Val22Array{x165, x90,  x91,  x92,  x93,  x94,  x95,  x96,  x97,  x98,  x99,
                               x100, x101, x102, x103, x104, x105, x106, x107, x108, x109, x110},
                    Val22Array{x111, x118, x119, x120, x121, x122, x123, x124, x125, x126, x127,
                               x128, x129, x130, x131, x132, x133, x134, x135, x136, x137, Val(0)},
                    Val22Array{x138, x145, x146, x147, x148, x149, x150, x151, x152, x153, x154,
                               x155, x156, x157, x158, x159, x160, x161, x162, x163, x164, Val(0)},
                    Val24Array{x8,  x9,  x10, x11, x12, x13, x14, x15, x16, x17, x18,    x19,
                               x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, Val(0), Val(0)},
                    Val22Array{x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46,
                               x47, x48, x49, x50, x51, x52, x53, x54, x55, x56, Val(0)},
                    Val22Array{x63, x64, x65, x66, x67, x68, x69, x70, x71, x72, x73,
                               x74, x75, x76, x77, x78, x79, x80, x81, x82, x83, Val(0)},
                    Val(1),
                    Val(9),
                    x3.rnd._super,
                    x3.blk._super,
                    x3.midx._super,
                    LAYOUT_LOOKUP(layout2, _super));
  return x169;
}
RetTupleStruct execRhoMinor1_0__4_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<RhoMinor1_0__4_Layout> layout2) {
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:341)
  BoundLayout<RhoMinor1_0__4__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:292)
  RetTupleStruct x4 = back_RetTuple(ctx, 2, arg1);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  RetTupleStruct x5 = back_RetTuple(ctx, 1, arg1);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:292)
  NondetRegStruct22Array x6 = x4.arrC;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:297)
  Val x7 = x6[16]._super;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:304)
  ToBits_22_Struct x8 = exec_ToBits_22_(ctx, x7, LAYOUT_LOOKUP(layout2, unpackXy1));
  NondetRegStruct22Array x9 = x8._super;
  Val x10 = x9[0]._super;
  Val x11 = x9[1]._super;
  Val x12 = x9[2]._super;
  Val x13 = x9[3]._super;
  Val x14 = x9[4]._super;
  Val x15 = x9[5]._super;
  Val x16 = x9[6]._super;
  Val x17 = x9[7]._super;
  Val x18 = x9[8]._super;
  Val x19 = x9[9]._super;
  Val x20 = x9[10]._super;
  Val x21 = x9[11]._super;
  Val x22 = x9[12]._super;
  Val x23 = x9[13]._super;
  Val x24 = x9[14]._super;
  Val x25 = x9[15]._super;
  Val x26 = x9[16]._super;
  Val x27 = x9[17]._super;
  Val x28 = x9[18]._super;
  Val x29 = x9[19]._super;
  Val x30 = x9[20]._super;
  Val x31 = x9[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:305)
  Val x32 = ((((((x10 + (x11 * Val(2))) + (x12 * Val(4))) + (x13 * Val(8))) + (x14 * Val(16))) +
              (x15 * Val(32))) +
             (x16 * Val(64)));
  Val x33 =
      ((((((x32 + (x17 * Val(128))) + (x18 * Val(256))) + (x19 * Val(512))) + (x20 * Val(1024))) +
        (x21 * Val(2048))) +
       (x22 * Val(4096)));
  Val x34 = ((((((x33 + (x23 * Val(8192))) + (x24 * Val(16384))) + (x25 * Val(32768))) +
               (x26 * Val(65536))) +
              (x27 * Val(131072))) +
             (x28 * Val(262144)));
  EQZ(((((x34 + (x29 * Val(524288))) + (x30 * Val(1048576))) + (x31 * Val(2097152))) - x7),
      "rho_minor1(zirgen/circuit/keccak/keccak.zir:305)");
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:309)
  Val x35 = x6[17]._super;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:316)
  ToBits_21_Struct x36 = exec_ToBits_21_(ctx, x35, LAYOUT_LOOKUP(layout2, unpackXy2));
  NondetRegStruct21Array x37 = x36._super;
  Val x38 = x37[0]._super;
  Val x39 = x37[1]._super;
  Val x40 = x37[2]._super;
  Val x41 = x37[3]._super;
  Val x42 = x37[4]._super;
  Val x43 = x37[5]._super;
  Val x44 = x37[6]._super;
  Val x45 = x37[7]._super;
  Val x46 = x37[8]._super;
  Val x47 = x37[9]._super;
  Val x48 = x37[10]._super;
  Val x49 = x37[11]._super;
  Val x50 = x37[12]._super;
  Val x51 = x37[13]._super;
  Val x52 = x37[14]._super;
  Val x53 = x37[15]._super;
  Val x54 = x37[16]._super;
  Val x55 = x37[17]._super;
  Val x56 = x37[18]._super;
  Val x57 = x37[19]._super;
  Val x58 = x37[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:317)
  Val x59 = ((((((x38 + (x39 * Val(2))) + (x40 * Val(4))) + (x41 * Val(8))) + (x42 * Val(16))) +
              (x43 * Val(32))) +
             (x44 * Val(64)));
  Val x60 =
      ((((((x59 + (x45 * Val(128))) + (x46 * Val(256))) + (x47 * Val(512))) + (x48 * Val(1024))) +
        (x49 * Val(2048))) +
       (x50 * Val(4096)));
  Val x61 = ((((((x60 + (x51 * Val(8192))) + (x52 * Val(16384))) + (x53 * Val(32768))) +
               (x54 * Val(65536))) +
              (x55 * Val(131072))) +
             (x56 * Val(262144)));
  EQZ((((x61 + (x57 * Val(524288))) + (x58 * Val(1048576))) - x35),
      "rho_minor1(zirgen/circuit/keccak/keccak.zir:317)");
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:321)
  Val x62 = x6[18]._super;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:328)
  ToBits_21_Struct x63 = exec_ToBits_21_(ctx, x62, LAYOUT_LOOKUP(layout2, unpackXy3));
  NondetRegStruct21Array x64 = x63._super;
  Val x65 = x64[0]._super;
  Val x66 = x64[1]._super;
  Val x67 = x64[2]._super;
  Val x68 = x64[3]._super;
  Val x69 = x64[4]._super;
  Val x70 = x64[5]._super;
  Val x71 = x64[6]._super;
  Val x72 = x64[7]._super;
  Val x73 = x64[8]._super;
  Val x74 = x64[9]._super;
  Val x75 = x64[10]._super;
  Val x76 = x64[11]._super;
  Val x77 = x64[12]._super;
  Val x78 = x64[13]._super;
  Val x79 = x64[14]._super;
  Val x80 = x64[15]._super;
  Val x81 = x64[16]._super;
  Val x82 = x64[17]._super;
  Val x83 = x64[18]._super;
  Val x84 = x64[19]._super;
  Val x85 = x64[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:329)
  Val x86 = ((((((x65 + (x66 * Val(2))) + (x67 * Val(4))) + (x68 * Val(8))) + (x69 * Val(16))) +
              (x70 * Val(32))) +
             (x71 * Val(64)));
  Val x87 =
      ((((((x86 + (x72 * Val(128))) + (x73 * Val(256))) + (x74 * Val(512))) + (x75 * Val(1024))) +
        (x76 * Val(2048))) +
       (x77 * Val(4096)));
  Val x88 = ((((((x87 + (x78 * Val(8192))) + (x79 * Val(16384))) + (x80 * Val(32768))) +
               (x81 * Val(65536))) +
              (x82 * Val(131072))) +
             (x83 * Val(262144)));
  EQZ((((x88 + (x84 * Val(524288))) + (x85 * Val(1048576))) - x62),
      "rho_minor1(zirgen/circuit/keccak/keccak.zir:329)");
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  NondetRegStruct22Array x89 = x5.arrA;
  NondetRegStruct24Array x90 = x5.arrD;
  Val x91 = x89[0]._super;
  Val x92 = x90[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x93 = ((x10 * x91) + ((Val(1) - x10) * (Val(1) - x91)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x94 = x89[1]._super;
  Val x95 = x90[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x96 = ((x11 * x94) + ((Val(1) - x11) * (Val(1) - x94)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x97 = x89[2]._super;
  Val x98 = x90[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x99 = ((x12 * x97) + ((Val(1) - x12) * (Val(1) - x97)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x100 = x89[3]._super;
  Val x101 = x90[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x102 = ((x13 * x100) + ((Val(1) - x13) * (Val(1) - x100)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x103 = x89[4]._super;
  Val x104 = x90[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x105 = ((x14 * x103) + ((Val(1) - x14) * (Val(1) - x103)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x106 = x89[5]._super;
  Val x107 = x90[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x108 = ((x15 * x106) + ((Val(1) - x15) * (Val(1) - x106)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x109 = x89[6]._super;
  Val x110 = x90[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x111 = ((x16 * x109) + ((Val(1) - x16) * (Val(1) - x109)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x112 = x89[7]._super;
  Val x113 = x90[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x114 = ((x17 * x112) + ((Val(1) - x17) * (Val(1) - x112)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x115 = x89[8]._super;
  Val x116 = x90[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x117 = ((x18 * x115) + ((Val(1) - x18) * (Val(1) - x115)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x118 = x89[9]._super;
  Val x119 = x90[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x120 = ((x19 * x118) + ((Val(1) - x19) * (Val(1) - x118)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x121 = x89[10]._super;
  Val x122 = x90[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x123 = ((x20 * x121) + ((Val(1) - x20) * (Val(1) - x121)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x124 = x89[11]._super;
  Val x125 = x90[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x126 = ((x21 * x124) + ((Val(1) - x21) * (Val(1) - x124)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x127 = x89[12]._super;
  Val x128 = x90[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x129 = ((x22 * x127) + ((Val(1) - x22) * (Val(1) - x127)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x130 = x89[13]._super;
  Val x131 = x90[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x132 = ((x23 * x130) + ((Val(1) - x23) * (Val(1) - x130)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x133 = x89[14]._super;
  Val x134 = x90[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x135 = ((x24 * x133) + ((Val(1) - x24) * (Val(1) - x133)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x136 = x89[15]._super;
  Val x137 = x90[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x138 = ((x25 * x136) + ((Val(1) - x25) * (Val(1) - x136)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x139 = x89[16]._super;
  Val x140 = x90[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x141 = ((x26 * x139) + ((Val(1) - x26) * (Val(1) - x139)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x142 = x89[17]._super;
  Val x143 = x90[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x144 = ((x27 * x142) + ((Val(1) - x27) * (Val(1) - x142)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x145 = x89[18]._super;
  Val x146 = x90[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x147 = ((x28 * x145) + ((Val(1) - x28) * (Val(1) - x145)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x148 = x89[19]._super;
  Val x149 = x90[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x150 = ((x29 * x148) + ((Val(1) - x29) * (Val(1) - x148)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x151 = x89[20]._super;
  Val x152 = x90[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x153 = ((x30 * x151) + ((Val(1) - x30) * (Val(1) - x151)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x154 = x89[21]._super;
  Val x155 = x90[21]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x156 = ((x31 * x154) + ((Val(1) - x31) * (Val(1) - x154)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  NondetRegStruct22Array x157 = x5.arrB;
  NondetRegStruct22Array x158 = x5.arrE;
  Val x159 = x157[0]._super;
  Val x160 = x158[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x161 = ((x38 * x159) + ((Val(1) - x38) * (Val(1) - x159)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x162 = x157[1]._super;
  Val x163 = x158[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x164 = ((x39 * x162) + ((Val(1) - x39) * (Val(1) - x162)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x165 = x157[2]._super;
  Val x166 = x158[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x167 = ((x40 * x165) + ((Val(1) - x40) * (Val(1) - x165)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x168 = x157[3]._super;
  Val x169 = x158[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x170 = ((x41 * x168) + ((Val(1) - x41) * (Val(1) - x168)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x171 = x157[4]._super;
  Val x172 = x158[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x173 = ((x42 * x171) + ((Val(1) - x42) * (Val(1) - x171)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x174 = x157[5]._super;
  Val x175 = x158[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x176 = ((x43 * x174) + ((Val(1) - x43) * (Val(1) - x174)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x177 = x157[6]._super;
  Val x178 = x158[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x179 = ((x44 * x177) + ((Val(1) - x44) * (Val(1) - x177)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x180 = x157[7]._super;
  Val x181 = x158[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x182 = ((x45 * x180) + ((Val(1) - x45) * (Val(1) - x180)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x183 = x157[8]._super;
  Val x184 = x158[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x185 = ((x46 * x183) + ((Val(1) - x46) * (Val(1) - x183)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x186 = x157[9]._super;
  Val x187 = x158[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x188 = ((x47 * x186) + ((Val(1) - x47) * (Val(1) - x186)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x189 = x157[10]._super;
  Val x190 = x158[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x191 = ((x48 * x189) + ((Val(1) - x48) * (Val(1) - x189)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x192 = x157[11]._super;
  Val x193 = x158[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x194 = ((x49 * x192) + ((Val(1) - x49) * (Val(1) - x192)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x195 = x157[12]._super;
  Val x196 = x158[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x197 = ((x50 * x195) + ((Val(1) - x50) * (Val(1) - x195)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x198 = x157[13]._super;
  Val x199 = x158[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x200 = ((x51 * x198) + ((Val(1) - x51) * (Val(1) - x198)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x201 = x157[14]._super;
  Val x202 = x158[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x203 = ((x52 * x201) + ((Val(1) - x52) * (Val(1) - x201)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x204 = x157[15]._super;
  Val x205 = x158[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x206 = ((x53 * x204) + ((Val(1) - x53) * (Val(1) - x204)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x207 = x157[16]._super;
  Val x208 = x158[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x209 = ((x54 * x207) + ((Val(1) - x54) * (Val(1) - x207)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x210 = x157[17]._super;
  Val x211 = x158[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x212 = ((x55 * x210) + ((Val(1) - x55) * (Val(1) - x210)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x213 = x157[18]._super;
  Val x214 = x158[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x215 = ((x56 * x213) + ((Val(1) - x56) * (Val(1) - x213)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x216 = x157[19]._super;
  Val x217 = x158[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x218 = ((x57 * x216) + ((Val(1) - x57) * (Val(1) - x216)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x219 = x157[20]._super;
  Val x220 = x158[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x221 = ((x58 * x219) + ((Val(1) - x58) * (Val(1) - x219)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  NondetRegStruct22Array x222 = x5.arrC;
  NondetRegStruct22Array x223 = x5.arrF;
  Val x224 = x222[0]._super;
  Val x225 = x223[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x226 = ((x65 * x224) + ((Val(1) - x65) * (Val(1) - x224)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x227 = x222[1]._super;
  Val x228 = x223[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x229 = ((x66 * x227) + ((Val(1) - x66) * (Val(1) - x227)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x230 = x222[2]._super;
  Val x231 = x223[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x232 = ((x67 * x230) + ((Val(1) - x67) * (Val(1) - x230)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x233 = x222[3]._super;
  Val x234 = x223[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x235 = ((x68 * x233) + ((Val(1) - x68) * (Val(1) - x233)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x236 = x222[4]._super;
  Val x237 = x223[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x238 = ((x69 * x236) + ((Val(1) - x69) * (Val(1) - x236)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x239 = x222[5]._super;
  Val x240 = x223[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x241 = ((x70 * x239) + ((Val(1) - x70) * (Val(1) - x239)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x242 = x222[6]._super;
  Val x243 = x223[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x244 = ((x71 * x242) + ((Val(1) - x71) * (Val(1) - x242)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x245 = x222[7]._super;
  Val x246 = x223[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x247 = ((x72 * x245) + ((Val(1) - x72) * (Val(1) - x245)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x248 = x222[8]._super;
  Val x249 = x223[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x250 = ((x73 * x248) + ((Val(1) - x73) * (Val(1) - x248)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x251 = x222[9]._super;
  Val x252 = x223[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x253 = ((x74 * x251) + ((Val(1) - x74) * (Val(1) - x251)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x254 = x222[10]._super;
  Val x255 = x223[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x256 = ((x75 * x254) + ((Val(1) - x75) * (Val(1) - x254)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x257 = x222[11]._super;
  Val x258 = x223[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x259 = ((x76 * x257) + ((Val(1) - x76) * (Val(1) - x257)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x260 = x222[12]._super;
  Val x261 = x223[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x262 = ((x77 * x260) + ((Val(1) - x77) * (Val(1) - x260)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x263 = x222[13]._super;
  Val x264 = x223[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x265 = ((x78 * x263) + ((Val(1) - x78) * (Val(1) - x263)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x266 = x222[14]._super;
  Val x267 = x223[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x268 = ((x79 * x266) + ((Val(1) - x79) * (Val(1) - x266)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x269 = x222[15]._super;
  Val x270 = x223[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x271 = ((x80 * x269) + ((Val(1) - x80) * (Val(1) - x269)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x272 = x222[16]._super;
  Val x273 = x223[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x274 = ((x81 * x272) + ((Val(1) - x81) * (Val(1) - x272)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x275 = x222[17]._super;
  Val x276 = x223[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x277 = ((x82 * x275) + ((Val(1) - x82) * (Val(1) - x275)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x278 = x222[18]._super;
  Val x279 = x223[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x280 = ((x83 * x278) + ((Val(1) - x83) * (Val(1) - x278)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x281 = x222[19]._super;
  Val x282 = x223[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x283 = ((x84 * x281) + ((Val(1) - x84) * (Val(1) - x281)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x284 = x222[20]._super;
  Val x285 = x223[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x286 = ((x85 * x284) + ((Val(1) - x85) * (Val(1) - x284)));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:336)
  Val x287 = (((x235 * x234) + ((Val(1) - x235) * (Val(1) - x234))) +
              (((x238 * x237) + ((Val(1) - x238) * (Val(1) - x237))) * Val(2)));
  Val x288 = ((x287 + (((x241 * x240) + ((Val(1) - x241) * (Val(1) - x240))) * Val(4))) +
              (((x244 * x243) + ((Val(1) - x244) * (Val(1) - x243))) * Val(8)));
  Val x289 = ((x288 + (((x247 * x246) + ((Val(1) - x247) * (Val(1) - x246))) * Val(16))) +
              (((x250 * x249) + ((Val(1) - x250) * (Val(1) - x249))) * Val(32)));
  Val x290 = ((x289 + (((x253 * x252) + ((Val(1) - x253) * (Val(1) - x252))) * Val(64))) +
              (((x256 * x255) + ((Val(1) - x256) * (Val(1) - x255))) * Val(128)));
  Val x291 = ((x290 + (((x259 * x258) + ((Val(1) - x259) * (Val(1) - x258))) * Val(256))) +
              (((x262 * x261) + ((Val(1) - x262) * (Val(1) - x261))) * Val(512)));
  Val x292 = ((x291 + (((x265 * x264) + ((Val(1) - x265) * (Val(1) - x264))) * Val(1024))) +
              (((x268 * x267) + ((Val(1) - x268) * (Val(1) - x267))) * Val(2048)));
  Val x293 = ((x292 + (((x271 * x270) + ((Val(1) - x271) * (Val(1) - x270))) * Val(4096))) +
              (((x274 * x273) + ((Val(1) - x274) * (Val(1) - x273))) * Val(8192)));
  Val x294 = ((x293 + (((x277 * x276) + ((Val(1) - x277) * (Val(1) - x276))) * Val(16384))) +
              (((x280 * x279) + ((Val(1) - x280) * (Val(1) - x279))) * Val(32768)));
  Val x295 = ((x294 + (((x283 * x282) + ((Val(1) - x283) * (Val(1) - x282))) * Val(65536))) +
              (((x286 * x285) + ((Val(1) - x286) * (Val(1) - x285))) * Val(131072)));
  Val x296 = ((x295 + (((x93 * x92) + ((Val(1) - x93) * (Val(1) - x92))) * Val(262144))) +
              (((x96 * x95) + ((Val(1) - x96) * (Val(1) - x95))) * Val(524288)));
  Val x297 = ((x296 + (((x99 * x98) + ((Val(1) - x99) * (Val(1) - x98))) * Val(1048576))) +
              (((x102 * x101) + ((Val(1) - x102) * (Val(1) - x101))) * Val(2097152)));
  NondetRegStruct x298 = exec_Reg(ctx, x297, LAYOUT_LOOKUP(layout2, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:337)
  Val x299 = (((x105 * x104) + ((Val(1) - x105) * (Val(1) - x104))) +
              (((x108 * x107) + ((Val(1) - x108) * (Val(1) - x107))) * Val(2)));
  Val x300 = ((x299 + (((x111 * x110) + ((Val(1) - x111) * (Val(1) - x110))) * Val(4))) +
              (((x114 * x113) + ((Val(1) - x114) * (Val(1) - x113))) * Val(8)));
  Val x301 = ((x300 + (((x117 * x116) + ((Val(1) - x117) * (Val(1) - x116))) * Val(16))) +
              (((x120 * x119) + ((Val(1) - x120) * (Val(1) - x119))) * Val(32)));
  Val x302 = ((x301 + (((x123 * x122) + ((Val(1) - x123) * (Val(1) - x122))) * Val(64))) +
              (((x126 * x125) + ((Val(1) - x126) * (Val(1) - x125))) * Val(128)));
  Val x303 = ((x302 + (((x129 * x128) + ((Val(1) - x129) * (Val(1) - x128))) * Val(256))) +
              (((x132 * x131) + ((Val(1) - x132) * (Val(1) - x131))) * Val(512)));
  Val x304 = ((x303 + (((x135 * x134) + ((Val(1) - x135) * (Val(1) - x134))) * Val(1024))) +
              (((x138 * x137) + ((Val(1) - x138) * (Val(1) - x137))) * Val(2048)));
  Val x305 = ((x304 + (((x141 * x140) + ((Val(1) - x141) * (Val(1) - x140))) * Val(4096))) +
              (((x144 * x143) + ((Val(1) - x144) * (Val(1) - x143))) * Val(8192)));
  Val x306 = ((x305 + (((x147 * x146) + ((Val(1) - x147) * (Val(1) - x146))) * Val(16384))) +
              (((x150 * x149) + ((Val(1) - x150) * (Val(1) - x149))) * Val(32768)));
  Val x307 = ((x306 + (((x153 * x152) + ((Val(1) - x153) * (Val(1) - x152))) * Val(65536))) +
              (((x156 * x155) + ((Val(1) - x156) * (Val(1) - x155))) * Val(131072)));
  Val x308 = ((x307 + (((x161 * x160) + ((Val(1) - x161) * (Val(1) - x160))) * Val(262144))) +
              (((x164 * x163) + ((Val(1) - x164) * (Val(1) - x163))) * Val(524288)));
  NondetRegStruct x309 =
      exec_Reg(ctx,
               (x308 + (((x167 * x166) + ((Val(1) - x167) * (Val(1) - x166))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _1));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:338)
  Val x310 = (((x170 * x169) + ((Val(1) - x170) * (Val(1) - x169))) +
              (((x173 * x172) + ((Val(1) - x173) * (Val(1) - x172))) * Val(2)));
  Val x311 = ((x310 + (((x176 * x175) + ((Val(1) - x176) * (Val(1) - x175))) * Val(4))) +
              (((x179 * x178) + ((Val(1) - x179) * (Val(1) - x178))) * Val(8)));
  Val x312 = ((x311 + (((x182 * x181) + ((Val(1) - x182) * (Val(1) - x181))) * Val(16))) +
              (((x185 * x184) + ((Val(1) - x185) * (Val(1) - x184))) * Val(32)));
  Val x313 = ((x312 + (((x188 * x187) + ((Val(1) - x188) * (Val(1) - x187))) * Val(64))) +
              (((x191 * x190) + ((Val(1) - x191) * (Val(1) - x190))) * Val(128)));
  Val x314 = ((x313 + (((x194 * x193) + ((Val(1) - x194) * (Val(1) - x193))) * Val(256))) +
              (((x197 * x196) + ((Val(1) - x197) * (Val(1) - x196))) * Val(512)));
  Val x315 = ((x314 + (((x200 * x199) + ((Val(1) - x200) * (Val(1) - x199))) * Val(1024))) +
              (((x203 * x202) + ((Val(1) - x203) * (Val(1) - x202))) * Val(2048)));
  Val x316 = ((x315 + (((x206 * x205) + ((Val(1) - x206) * (Val(1) - x205))) * Val(4096))) +
              (((x209 * x208) + ((Val(1) - x209) * (Val(1) - x208))) * Val(8192)));
  Val x317 = ((x316 + (((x212 * x211) + ((Val(1) - x212) * (Val(1) - x211))) * Val(16384))) +
              (((x215 * x214) + ((Val(1) - x215) * (Val(1) - x214))) * Val(32768)));
  Val x318 = ((x317 + (((x218 * x217) + ((Val(1) - x218) * (Val(1) - x217))) * Val(65536))) +
              (((x221 * x220) + ((Val(1) - x221) * (Val(1) - x220))) * Val(131072)));
  Val x319 = ((x318 + (((x226 * x225) + ((Val(1) - x226) * (Val(1) - x225))) * Val(262144))) +
              (((x229 * x228) + ((Val(1) - x229) * (Val(1) - x228))) * Val(524288)));
  NondetRegStruct x320 =
      exec_Reg(ctx,
               (x319 + (((x232 * x231) + ((Val(1) - x232) * (Val(1) - x231))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _2));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:341)
  BoundLayout<RhoMinor1_0__4_Arm1_SuperLayout> x321 = LAYOUT_LOOKUP(x3, arm1);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:342)
  Val22Array x322 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  Val24Array x323 = Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:339)
  Val22Array x324 =
      Val22Array{x298._super, x309._super, x320._super, Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0)};
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x325 = x5.rnd._super;
  Val x326 = x5.blk._super;
  Val x327 = x5.midx._super;
  if (to_size_t(Val(0))) {
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:342)
    RetTupleStruct x328 = exec_RetTuple(ctx,
                                        x322,
                                        x322,
                                        x322,
                                        x323,
                                        x322,
                                        x324,
                                        Val(8),
                                        Val(9),
                                        x325,
                                        x326,
                                        x327,
                                        LAYOUT_LOOKUP(x3, arm0));
  }
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:292)
  NondetRegStruct24Array x329 = x4.arrD;
  Val x330 = x329[9]._super;
  Val x331 = x329[10]._super;
  Val x332 = x329[11]._super;
  if (to_size_t(Val(1))) {
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:345)
    ToBits_22_Struct x333 = exec_ToBits_22_(ctx, x330, LAYOUT_LOOKUP(x321, unpackM1));
    NondetRegStruct22Array x334 = x333._super;
    Val x335 = x334[0]._super;
    Val x336 = x334[1]._super;
    Val x337 = x334[2]._super;
    Val x338 = x334[3]._super;
    Val x339 = x334[4]._super;
    Val x340 = x334[5]._super;
    Val x341 = x334[6]._super;
    Val x342 = x334[7]._super;
    Val x343 = x334[8]._super;
    Val x344 = x334[9]._super;
    Val x345 = x334[10]._super;
    Val x346 = x334[11]._super;
    Val x347 = x334[12]._super;
    Val x348 = x334[13]._super;
    Val x349 = x334[14]._super;
    Val x350 = x334[15]._super;
    Val x351 = x334[16]._super;
    Val x352 = x334[17]._super;
    Val x353 = x334[18]._super;
    Val x354 = x334[19]._super;
    Val x355 = x334[20]._super;
    Val x356 = x334[21]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:346)
    Val x357 =
        ((((((x335 + (x336 * Val(2))) + (x337 * Val(4))) + (x338 * Val(8))) + (x339 * Val(16))) +
          (x340 * Val(32))) +
         (x341 * Val(64)));
    Val x358 = ((((((x357 + (x342 * Val(128))) + (x343 * Val(256))) + (x344 * Val(512))) +
                  (x345 * Val(1024))) +
                 (x346 * Val(2048))) +
                (x347 * Val(4096)));
    Val x359 = ((((((x358 + (x348 * Val(8192))) + (x349 * Val(16384))) + (x350 * Val(32768))) +
                  (x351 * Val(65536))) +
                 (x352 * Val(131072))) +
                (x353 * Val(262144)));
    EQZ(((((x359 + (x354 * Val(524288))) + (x355 * Val(1048576))) + (x356 * Val(2097152))) - x330),
        "rho_minor1(zirgen/circuit/keccak/keccak.zir:346)");
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:349)
    ToBits_21_Struct x360 = exec_ToBits_21_(ctx, x331, LAYOUT_LOOKUP(x321, unpackM2));
    NondetRegStruct21Array x361 = x360._super;
    Val x362 = x361[0]._super;
    Val x363 = x361[1]._super;
    Val x364 = x361[2]._super;
    Val x365 = x361[3]._super;
    Val x366 = x361[4]._super;
    Val x367 = x361[5]._super;
    Val x368 = x361[6]._super;
    Val x369 = x361[7]._super;
    Val x370 = x361[8]._super;
    Val x371 = x361[9]._super;
    Val x372 = x361[10]._super;
    Val x373 = x361[11]._super;
    Val x374 = x361[12]._super;
    Val x375 = x361[13]._super;
    Val x376 = x361[14]._super;
    Val x377 = x361[15]._super;
    Val x378 = x361[16]._super;
    Val x379 = x361[17]._super;
    Val x380 = x361[18]._super;
    Val x381 = x361[19]._super;
    Val x382 = x361[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:350)
    Val x383 =
        ((((((x362 + (x363 * Val(2))) + (x364 * Val(4))) + (x365 * Val(8))) + (x366 * Val(16))) +
          (x367 * Val(32))) +
         (x368 * Val(64)));
    Val x384 = ((((((x383 + (x369 * Val(128))) + (x370 * Val(256))) + (x371 * Val(512))) +
                  (x372 * Val(1024))) +
                 (x373 * Val(2048))) +
                (x374 * Val(4096)));
    Val x385 = ((((((x384 + (x375 * Val(8192))) + (x376 * Val(16384))) + (x377 * Val(32768))) +
                  (x378 * Val(65536))) +
                 (x379 * Val(131072))) +
                (x380 * Val(262144)));
    EQZ((((x385 + (x381 * Val(524288))) + (x382 * Val(1048576))) - x331),
        "rho_minor1(zirgen/circuit/keccak/keccak.zir:350)");
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:354)
    ToBits_21_Struct x386 = exec_ToBits_21_(ctx, x332, LAYOUT_LOOKUP(x321, unpackM3));
    NondetRegStruct21Array x387 = x386._super;
    Val x388 = x387[0]._super;
    Val x389 = x387[1]._super;
    Val x390 = x387[2]._super;
    Val x391 = x387[3]._super;
    Val x392 = x387[4]._super;
    Val x393 = x387[5]._super;
    Val x394 = x387[6]._super;
    Val x395 = x387[7]._super;
    Val x396 = x387[8]._super;
    Val x397 = x387[9]._super;
    Val x398 = x387[10]._super;
    Val x399 = x387[11]._super;
    Val x400 = x387[12]._super;
    Val x401 = x387[13]._super;
    Val x402 = x387[14]._super;
    Val x403 = x387[15]._super;
    Val x404 = x387[16]._super;
    Val x405 = x387[17]._super;
    Val x406 = x387[18]._super;
    Val x407 = x387[19]._super;
    Val x408 = x387[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:355)
    Val x409 =
        ((((((x388 + (x389 * Val(2))) + (x390 * Val(4))) + (x391 * Val(8))) + (x392 * Val(16))) +
          (x393 * Val(32))) +
         (x394 * Val(64)));
    Val x410 = ((((((x409 + (x395 * Val(128))) + (x396 * Val(256))) + (x397 * Val(512))) +
                  (x398 * Val(1024))) +
                 (x399 * Val(2048))) +
                (x400 * Val(4096)));
    Val x411 = ((((((x410 + (x401 * Val(8192))) + (x402 * Val(16384))) + (x403 * Val(32768))) +
                  (x404 * Val(65536))) +
                 (x405 * Val(131072))) +
                (x406 * Val(262144)));
    EQZ((((x411 + (x407 * Val(524288))) + (x408 * Val(1048576))) - x332),
        "rho_minor1(zirgen/circuit/keccak/keccak.zir:355)");
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:358)
    RetTupleStruct x412 = exec_RetTuple(
        ctx,
        Val22Array{x335, x336, x337, x338, x339, x340, x341, x342, x343, x344, x345,
                   x346, x347, x348, x349, x350, x351, x352, x353, x354, x355, x356},
        Val22Array{x362, x363, x364, x365, x366, x367, x368, x369, x370, x371, x372,
                   x373, x374, x375, x376, x377, x378, x379, x380, x381, x382, Val(0)},
        Val22Array{x388, x389, x390, x391, x392, x393, x394, x395, x396, x397, x398,
                   x399, x400, x401, x402, x403, x404, x405, x406, x407, x408, Val(0)},
        x323,
        x322,
        x324,
        Val(2),
        Val(9),
        x325,
        x326,
        x327,
        LAYOUT_LOOKUP(x321, _super));
  }
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:341)
  RetTupleStruct x413 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x413;
}
RetTupleStruct execRhoMinor2_0__4_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<RhoMinor2_0__4_Layout> layout2) {
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:364)
  RetTupleStruct x3 = back_RetTuple(ctx, 3, arg1);
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:364)
  NondetRegStruct24Array x5 = x3.arrD;
  Val x6 = x5[15]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:368)
  ToBits_22_Struct x7 = exec_ToBits_22_(ctx, x6, LAYOUT_LOOKUP(layout2, unpackP1));
  NondetRegStruct22Array x8 = x7._super;
  Val x9 = x8[0]._super;
  Val x10 = x8[1]._super;
  Val x11 = x8[2]._super;
  Val x12 = x8[3]._super;
  Val x13 = x8[4]._super;
  Val x14 = x8[5]._super;
  Val x15 = x8[6]._super;
  Val x16 = x8[7]._super;
  Val x17 = x8[8]._super;
  Val x18 = x8[9]._super;
  Val x19 = x8[10]._super;
  Val x20 = x8[11]._super;
  Val x21 = x8[12]._super;
  Val x22 = x8[13]._super;
  Val x23 = x8[14]._super;
  Val x24 = x8[15]._super;
  Val x25 = x8[16]._super;
  Val x26 = x8[17]._super;
  Val x27 = x8[18]._super;
  Val x28 = x8[19]._super;
  Val x29 = x8[20]._super;
  Val x30 = x8[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:369)
  Val x31 = ((((((x9 + (x10 * Val(2))) + (x11 * Val(4))) + (x12 * Val(8))) + (x13 * Val(16))) +
              (x14 * Val(32))) +
             (x15 * Val(64)));
  Val x32 =
      ((((((x31 + (x16 * Val(128))) + (x17 * Val(256))) + (x18 * Val(512))) + (x19 * Val(1024))) +
        (x20 * Val(2048))) +
       (x21 * Val(4096)));
  Val x33 = ((((((x32 + (x22 * Val(8192))) + (x23 * Val(16384))) + (x24 * Val(32768))) +
               (x25 * Val(65536))) +
              (x26 * Val(131072))) +
             (x27 * Val(262144)));
  EQZ(((((x33 + (x28 * Val(524288))) + (x29 * Val(1048576))) + (x30 * Val(2097152))) - x6),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:369)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:364)
  Val x34 = x5[16]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:372)
  ToBits_21_Struct x35 = exec_ToBits_21_(ctx, x34, LAYOUT_LOOKUP(layout2, unpackP2));
  NondetRegStruct21Array x36 = x35._super;
  Val x37 = x36[0]._super;
  Val x38 = x36[1]._super;
  Val x39 = x36[2]._super;
  Val x40 = x36[3]._super;
  Val x41 = x36[4]._super;
  Val x42 = x36[5]._super;
  Val x43 = x36[6]._super;
  Val x44 = x36[7]._super;
  Val x45 = x36[8]._super;
  Val x46 = x36[9]._super;
  Val x47 = x36[10]._super;
  Val x48 = x36[11]._super;
  Val x49 = x36[12]._super;
  Val x50 = x36[13]._super;
  Val x51 = x36[14]._super;
  Val x52 = x36[15]._super;
  Val x53 = x36[16]._super;
  Val x54 = x36[17]._super;
  Val x55 = x36[18]._super;
  Val x56 = x36[19]._super;
  Val x57 = x36[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:373)
  Val x58 = ((((((x37 + (x38 * Val(2))) + (x39 * Val(4))) + (x40 * Val(8))) + (x41 * Val(16))) +
              (x42 * Val(32))) +
             (x43 * Val(64)));
  Val x59 =
      ((((((x58 + (x44 * Val(128))) + (x45 * Val(256))) + (x46 * Val(512))) + (x47 * Val(1024))) +
        (x48 * Val(2048))) +
       (x49 * Val(4096)));
  Val x60 = ((((((x59 + (x50 * Val(8192))) + (x51 * Val(16384))) + (x52 * Val(32768))) +
               (x53 * Val(65536))) +
              (x54 * Val(131072))) +
             (x55 * Val(262144)));
  EQZ((((x60 + (x56 * Val(524288))) + (x57 * Val(1048576))) - x34),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:373)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:364)
  Val x61 = x5[17]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:376)
  ToBits_21_Struct x62 = exec_ToBits_21_(ctx, x61, LAYOUT_LOOKUP(layout2, unpackP3));
  NondetRegStruct21Array x63 = x62._super;
  Val x64 = x63[0]._super;
  Val x65 = x63[1]._super;
  Val x66 = x63[2]._super;
  Val x67 = x63[3]._super;
  Val x68 = x63[4]._super;
  Val x69 = x63[5]._super;
  Val x70 = x63[6]._super;
  Val x71 = x63[7]._super;
  Val x72 = x63[8]._super;
  Val x73 = x63[9]._super;
  Val x74 = x63[10]._super;
  Val x75 = x63[11]._super;
  Val x76 = x63[12]._super;
  Val x77 = x63[13]._super;
  Val x78 = x63[14]._super;
  Val x79 = x63[15]._super;
  Val x80 = x63[16]._super;
  Val x81 = x63[17]._super;
  Val x82 = x63[18]._super;
  Val x83 = x63[19]._super;
  Val x84 = x63[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:377)
  Val x85 = ((((((x64 + (x65 * Val(2))) + (x66 * Val(4))) + (x67 * Val(8))) + (x68 * Val(16))) +
              (x69 * Val(32))) +
             (x70 * Val(64)));
  Val x86 =
      ((((((x85 + (x71 * Val(128))) + (x72 * Val(256))) + (x73 * Val(512))) + (x74 * Val(1024))) +
        (x75 * Val(2048))) +
       (x76 * Val(4096)));
  Val x87 = ((((((x86 + (x77 * Val(8192))) + (x78 * Val(16384))) + (x79 * Val(32768))) +
               (x80 * Val(65536))) +
              (x81 * Val(131072))) +
             (x82 * Val(262144)));
  EQZ((((x87 + (x83 * Val(524288))) + (x84 * Val(1048576))) - x61),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:377)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:364)
  NondetRegStruct22Array x88 = x3.arrC;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:383)
  Val x89 = x88[19]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:390)
  ToBits_22_Struct x90 = exec_ToBits_22_(ctx, x89, LAYOUT_LOOKUP(layout2, unpackXy1));
  NondetRegStruct22Array x91 = x90._super;
  Val x92 = x91[0]._super;
  Val x93 = x91[1]._super;
  Val x94 = x91[2]._super;
  Val x95 = x91[3]._super;
  Val x96 = x91[4]._super;
  Val x97 = x91[5]._super;
  Val x98 = x91[6]._super;
  Val x99 = x91[7]._super;
  Val x100 = x91[8]._super;
  Val x101 = x91[9]._super;
  Val x102 = x91[10]._super;
  Val x103 = x91[11]._super;
  Val x104 = x91[12]._super;
  Val x105 = x91[13]._super;
  Val x106 = x91[14]._super;
  Val x107 = x91[15]._super;
  Val x108 = x91[16]._super;
  Val x109 = x91[17]._super;
  Val x110 = x91[18]._super;
  Val x111 = x91[19]._super;
  Val x112 = x91[20]._super;
  Val x113 = x91[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:391)
  Val x114 = ((((((x92 + (x93 * Val(2))) + (x94 * Val(4))) + (x95 * Val(8))) + (x96 * Val(16))) +
               (x97 * Val(32))) +
              (x98 * Val(64)));
  Val x115 = ((((((x114 + (x99 * Val(128))) + (x100 * Val(256))) + (x101 * Val(512))) +
                (x102 * Val(1024))) +
               (x103 * Val(2048))) +
              (x104 * Val(4096)));
  Val x116 = ((((((x115 + (x105 * Val(8192))) + (x106 * Val(16384))) + (x107 * Val(32768))) +
                (x108 * Val(65536))) +
               (x109 * Val(131072))) +
              (x110 * Val(262144)));
  EQZ(((((x116 + (x111 * Val(524288))) + (x112 * Val(1048576))) + (x113 * Val(2097152))) - x89),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:391)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:395)
  Val x117 = x88[20]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:402)
  ToBits_21_Struct x118 = exec_ToBits_21_(ctx, x117, LAYOUT_LOOKUP(layout2, unpackXy2));
  NondetRegStruct21Array x119 = x118._super;
  Val x120 = x119[0]._super;
  Val x121 = x119[1]._super;
  Val x122 = x119[2]._super;
  Val x123 = x119[3]._super;
  Val x124 = x119[4]._super;
  Val x125 = x119[5]._super;
  Val x126 = x119[6]._super;
  Val x127 = x119[7]._super;
  Val x128 = x119[8]._super;
  Val x129 = x119[9]._super;
  Val x130 = x119[10]._super;
  Val x131 = x119[11]._super;
  Val x132 = x119[12]._super;
  Val x133 = x119[13]._super;
  Val x134 = x119[14]._super;
  Val x135 = x119[15]._super;
  Val x136 = x119[16]._super;
  Val x137 = x119[17]._super;
  Val x138 = x119[18]._super;
  Val x139 = x119[19]._super;
  Val x140 = x119[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:403)
  Val x141 =
      ((((((x120 + (x121 * Val(2))) + (x122 * Val(4))) + (x123 * Val(8))) + (x124 * Val(16))) +
        (x125 * Val(32))) +
       (x126 * Val(64)));
  Val x142 = ((((((x141 + (x127 * Val(128))) + (x128 * Val(256))) + (x129 * Val(512))) +
                (x130 * Val(1024))) +
               (x131 * Val(2048))) +
              (x132 * Val(4096)));
  Val x143 = ((((((x142 + (x133 * Val(8192))) + (x134 * Val(16384))) + (x135 * Val(32768))) +
                (x136 * Val(65536))) +
               (x137 * Val(131072))) +
              (x138 * Val(262144)));
  EQZ((((x143 + (x139 * Val(524288))) + (x140 * Val(1048576))) - x117),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:403)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:407)
  Val x144 = x88[21]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:414)
  ToBits_21_Struct x145 = exec_ToBits_21_(ctx, x144, LAYOUT_LOOKUP(layout2, unpackXy3));
  NondetRegStruct21Array x146 = x145._super;
  Val x147 = x146[0]._super;
  Val x148 = x146[1]._super;
  Val x149 = x146[2]._super;
  Val x150 = x146[3]._super;
  Val x151 = x146[4]._super;
  Val x152 = x146[5]._super;
  Val x153 = x146[6]._super;
  Val x154 = x146[7]._super;
  Val x155 = x146[8]._super;
  Val x156 = x146[9]._super;
  Val x157 = x146[10]._super;
  Val x158 = x146[11]._super;
  Val x159 = x146[12]._super;
  Val x160 = x146[13]._super;
  Val x161 = x146[14]._super;
  Val x162 = x146[15]._super;
  Val x163 = x146[16]._super;
  Val x164 = x146[17]._super;
  Val x165 = x146[18]._super;
  Val x166 = x146[19]._super;
  Val x167 = x146[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:415)
  Val x168 =
      ((((((x147 + (x148 * Val(2))) + (x149 * Val(4))) + (x150 * Val(8))) + (x151 * Val(16))) +
        (x152 * Val(32))) +
       (x153 * Val(64)));
  Val x169 = ((((((x168 + (x154 * Val(128))) + (x155 * Val(256))) + (x156 * Val(512))) +
                (x157 * Val(1024))) +
               (x158 * Val(2048))) +
              (x159 * Val(4096)));
  Val x170 = ((((((x169 + (x160 * Val(8192))) + (x161 * Val(16384))) + (x162 * Val(32768))) +
                (x163 * Val(65536))) +
               (x164 * Val(131072))) +
              (x165 * Val(262144)));
  EQZ((((x170 + (x166 * Val(524288))) + (x167 * Val(1048576))) - x144),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:415)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  NondetRegStruct22Array x171 = x4.arrA;
  Val x172 = x171[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x173 = ((x92 * x172) + ((Val(1) - x92) * (Val(1) - x172)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x174 = x171[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x175 = ((x93 * x174) + ((Val(1) - x93) * (Val(1) - x174)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x176 = x171[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x177 = ((x94 * x176) + ((Val(1) - x94) * (Val(1) - x176)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x178 = x171[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x179 = ((x95 * x178) + ((Val(1) - x95) * (Val(1) - x178)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x180 = x171[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x181 = ((x96 * x180) + ((Val(1) - x96) * (Val(1) - x180)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x182 = x171[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x183 = ((x97 * x182) + ((Val(1) - x97) * (Val(1) - x182)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x184 = x171[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x185 = ((x98 * x184) + ((Val(1) - x98) * (Val(1) - x184)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x186 = x171[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x187 = ((x99 * x186) + ((Val(1) - x99) * (Val(1) - x186)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x188 = x171[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x189 = ((x100 * x188) + ((Val(1) - x100) * (Val(1) - x188)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x190 = x171[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x191 = ((x101 * x190) + ((Val(1) - x101) * (Val(1) - x190)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x192 = x171[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x193 = ((x102 * x192) + ((Val(1) - x102) * (Val(1) - x192)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x194 = x171[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x195 = ((x103 * x194) + ((Val(1) - x103) * (Val(1) - x194)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x196 = x171[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x197 = ((x104 * x196) + ((Val(1) - x104) * (Val(1) - x196)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x198 = x171[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x199 = ((x105 * x198) + ((Val(1) - x105) * (Val(1) - x198)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x200 = x171[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x201 = ((x106 * x200) + ((Val(1) - x106) * (Val(1) - x200)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x202 = x171[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x203 = ((x107 * x202) + ((Val(1) - x107) * (Val(1) - x202)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x204 = x171[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x205 = ((x108 * x204) + ((Val(1) - x108) * (Val(1) - x204)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x206 = x171[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x207 = ((x109 * x206) + ((Val(1) - x109) * (Val(1) - x206)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x208 = x171[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x209 = ((x110 * x208) + ((Val(1) - x110) * (Val(1) - x208)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x210 = x171[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x211 = ((x111 * x210) + ((Val(1) - x111) * (Val(1) - x210)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x212 = x171[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x213 = ((x112 * x212) + ((Val(1) - x112) * (Val(1) - x212)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x214 = x171[21]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x215 = ((x113 * x214) + ((Val(1) - x113) * (Val(1) - x214)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  NondetRegStruct22Array x216 = x4.arrB;
  Val x217 = x216[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x218 = ((x120 * x217) + ((Val(1) - x120) * (Val(1) - x217)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x219 = x216[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x220 = ((x121 * x219) + ((Val(1) - x121) * (Val(1) - x219)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x221 = x216[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x222 = ((x122 * x221) + ((Val(1) - x122) * (Val(1) - x221)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x223 = x216[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x224 = ((x123 * x223) + ((Val(1) - x123) * (Val(1) - x223)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x225 = x216[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x226 = ((x124 * x225) + ((Val(1) - x124) * (Val(1) - x225)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x227 = x216[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x228 = ((x125 * x227) + ((Val(1) - x125) * (Val(1) - x227)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x229 = x216[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x230 = ((x126 * x229) + ((Val(1) - x126) * (Val(1) - x229)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x231 = x216[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x232 = ((x127 * x231) + ((Val(1) - x127) * (Val(1) - x231)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x233 = x216[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x234 = ((x128 * x233) + ((Val(1) - x128) * (Val(1) - x233)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x235 = x216[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x236 = ((x129 * x235) + ((Val(1) - x129) * (Val(1) - x235)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x237 = x216[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x238 = ((x130 * x237) + ((Val(1) - x130) * (Val(1) - x237)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x239 = x216[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x240 = ((x131 * x239) + ((Val(1) - x131) * (Val(1) - x239)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x241 = x216[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x242 = ((x132 * x241) + ((Val(1) - x132) * (Val(1) - x241)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x243 = x216[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x244 = ((x133 * x243) + ((Val(1) - x133) * (Val(1) - x243)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x245 = x216[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x246 = ((x134 * x245) + ((Val(1) - x134) * (Val(1) - x245)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x247 = x216[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x248 = ((x135 * x247) + ((Val(1) - x135) * (Val(1) - x247)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x249 = x216[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x250 = ((x136 * x249) + ((Val(1) - x136) * (Val(1) - x249)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x251 = x216[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x252 = ((x137 * x251) + ((Val(1) - x137) * (Val(1) - x251)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x253 = x216[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x254 = ((x138 * x253) + ((Val(1) - x138) * (Val(1) - x253)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x255 = x216[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x256 = ((x139 * x255) + ((Val(1) - x139) * (Val(1) - x255)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x257 = x216[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x258 = ((x140 * x257) + ((Val(1) - x140) * (Val(1) - x257)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  NondetRegStruct22Array x259 = x4.arrC;
  Val x260 = x259[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x261 = ((x147 * x260) + ((Val(1) - x147) * (Val(1) - x260)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x262 = x259[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x263 = ((x148 * x262) + ((Val(1) - x148) * (Val(1) - x262)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x264 = x259[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x265 = ((x149 * x264) + ((Val(1) - x149) * (Val(1) - x264)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x266 = x259[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x267 = ((x150 * x266) + ((Val(1) - x150) * (Val(1) - x266)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x268 = x259[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x269 = ((x151 * x268) + ((Val(1) - x151) * (Val(1) - x268)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x270 = x259[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x271 = ((x152 * x270) + ((Val(1) - x152) * (Val(1) - x270)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x272 = x259[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x273 = ((x153 * x272) + ((Val(1) - x153) * (Val(1) - x272)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x274 = x259[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x275 = ((x154 * x274) + ((Val(1) - x154) * (Val(1) - x274)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x276 = x259[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x277 = ((x155 * x276) + ((Val(1) - x155) * (Val(1) - x276)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x278 = x259[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x279 = ((x156 * x278) + ((Val(1) - x156) * (Val(1) - x278)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x280 = x259[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x281 = ((x157 * x280) + ((Val(1) - x157) * (Val(1) - x280)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x282 = x259[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x283 = ((x158 * x282) + ((Val(1) - x158) * (Val(1) - x282)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x284 = x259[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x285 = ((x159 * x284) + ((Val(1) - x159) * (Val(1) - x284)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x286 = x259[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x287 = ((x160 * x286) + ((Val(1) - x160) * (Val(1) - x286)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x288 = x259[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x289 = ((x161 * x288) + ((Val(1) - x161) * (Val(1) - x288)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x290 = x259[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x291 = ((x162 * x290) + ((Val(1) - x162) * (Val(1) - x290)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x292 = x259[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x293 = ((x163 * x292) + ((Val(1) - x163) * (Val(1) - x292)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x294 = x259[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x295 = ((x164 * x294) + ((Val(1) - x164) * (Val(1) - x294)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x296 = x259[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x297 = ((x165 * x296) + ((Val(1) - x165) * (Val(1) - x296)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x298 = x259[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x299 = ((x166 * x298) + ((Val(1) - x166) * (Val(1) - x298)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x300 = x259[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x301 = ((x167 * x300) + ((Val(1) - x167) * (Val(1) - x300)));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:422)
  Val x302 = (((x299 * x82) + ((Val(1) - x299) * (Val(1) - x82))) +
              (((x301 * x83) + ((Val(1) - x301) * (Val(1) - x83))) * Val(2)));
  Val x303 = ((x302 + (((x173 * x84) + ((Val(1) - x173) * (Val(1) - x84))) * Val(4))) +
              (((x175 * x9) + ((Val(1) - x175) * (Val(1) - x9))) * Val(8)));
  Val x304 = ((x303 + (((x177 * x10) + ((Val(1) - x177) * (Val(1) - x10))) * Val(16))) +
              (((x179 * x11) + ((Val(1) - x179) * (Val(1) - x11))) * Val(32)));
  Val x305 = ((x304 + (((x181 * x12) + ((Val(1) - x181) * (Val(1) - x12))) * Val(64))) +
              (((x183 * x13) + ((Val(1) - x183) * (Val(1) - x13))) * Val(128)));
  Val x306 = ((x305 + (((x185 * x14) + ((Val(1) - x185) * (Val(1) - x14))) * Val(256))) +
              (((x187 * x15) + ((Val(1) - x187) * (Val(1) - x15))) * Val(512)));
  Val x307 = ((x306 + (((x189 * x16) + ((Val(1) - x189) * (Val(1) - x16))) * Val(1024))) +
              (((x191 * x17) + ((Val(1) - x191) * (Val(1) - x17))) * Val(2048)));
  Val x308 = ((x307 + (((x193 * x18) + ((Val(1) - x193) * (Val(1) - x18))) * Val(4096))) +
              (((x195 * x19) + ((Val(1) - x195) * (Val(1) - x19))) * Val(8192)));
  Val x309 = ((x308 + (((x197 * x20) + ((Val(1) - x197) * (Val(1) - x20))) * Val(16384))) +
              (((x199 * x21) + ((Val(1) - x199) * (Val(1) - x21))) * Val(32768)));
  Val x310 = ((x309 + (((x201 * x22) + ((Val(1) - x201) * (Val(1) - x22))) * Val(65536))) +
              (((x203 * x23) + ((Val(1) - x203) * (Val(1) - x23))) * Val(131072)));
  Val x311 = ((x310 + (((x205 * x24) + ((Val(1) - x205) * (Val(1) - x24))) * Val(262144))) +
              (((x207 * x25) + ((Val(1) - x207) * (Val(1) - x25))) * Val(524288)));
  Val x312 = ((x311 + (((x209 * x26) + ((Val(1) - x209) * (Val(1) - x26))) * Val(1048576))) +
              (((x211 * x27) + ((Val(1) - x211) * (Val(1) - x27))) * Val(2097152)));
  NondetRegStruct x313 = exec_Reg(ctx, x312, LAYOUT_LOOKUP(layout2, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:423)
  Val x314 = (((x213 * x28) + ((Val(1) - x213) * (Val(1) - x28))) +
              (((x215 * x29) + ((Val(1) - x215) * (Val(1) - x29))) * Val(2)));
  Val x315 = ((x314 + (((x218 * x30) + ((Val(1) - x218) * (Val(1) - x30))) * Val(4))) +
              (((x220 * x37) + ((Val(1) - x220) * (Val(1) - x37))) * Val(8)));
  Val x316 = ((x315 + (((x222 * x38) + ((Val(1) - x222) * (Val(1) - x38))) * Val(16))) +
              (((x224 * x39) + ((Val(1) - x224) * (Val(1) - x39))) * Val(32)));
  Val x317 = ((x316 + (((x226 * x40) + ((Val(1) - x226) * (Val(1) - x40))) * Val(64))) +
              (((x228 * x41) + ((Val(1) - x228) * (Val(1) - x41))) * Val(128)));
  Val x318 = ((x317 + (((x230 * x42) + ((Val(1) - x230) * (Val(1) - x42))) * Val(256))) +
              (((x232 * x43) + ((Val(1) - x232) * (Val(1) - x43))) * Val(512)));
  Val x319 = ((x318 + (((x234 * x44) + ((Val(1) - x234) * (Val(1) - x44))) * Val(1024))) +
              (((x236 * x45) + ((Val(1) - x236) * (Val(1) - x45))) * Val(2048)));
  Val x320 = ((x319 + (((x238 * x46) + ((Val(1) - x238) * (Val(1) - x46))) * Val(4096))) +
              (((x240 * x47) + ((Val(1) - x240) * (Val(1) - x47))) * Val(8192)));
  Val x321 = ((x320 + (((x242 * x48) + ((Val(1) - x242) * (Val(1) - x48))) * Val(16384))) +
              (((x244 * x49) + ((Val(1) - x244) * (Val(1) - x49))) * Val(32768)));
  Val x322 = ((x321 + (((x246 * x50) + ((Val(1) - x246) * (Val(1) - x50))) * Val(65536))) +
              (((x248 * x51) + ((Val(1) - x248) * (Val(1) - x51))) * Val(131072)));
  Val x323 = ((x322 + (((x250 * x52) + ((Val(1) - x250) * (Val(1) - x52))) * Val(262144))) +
              (((x252 * x53) + ((Val(1) - x252) * (Val(1) - x53))) * Val(524288)));
  NondetRegStruct x324 =
      exec_Reg(ctx,
               (x323 + (((x254 * x54) + ((Val(1) - x254) * (Val(1) - x54))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _1));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:424)
  Val x325 = (((x256 * x55) + ((Val(1) - x256) * (Val(1) - x55))) +
              (((x258 * x56) + ((Val(1) - x258) * (Val(1) - x56))) * Val(2)));
  Val x326 = ((x325 + (((x261 * x57) + ((Val(1) - x261) * (Val(1) - x57))) * Val(4))) +
              (((x263 * x64) + ((Val(1) - x263) * (Val(1) - x64))) * Val(8)));
  Val x327 = ((x326 + (((x265 * x65) + ((Val(1) - x265) * (Val(1) - x65))) * Val(16))) +
              (((x267 * x66) + ((Val(1) - x267) * (Val(1) - x66))) * Val(32)));
  Val x328 = ((x327 + (((x269 * x67) + ((Val(1) - x269) * (Val(1) - x67))) * Val(64))) +
              (((x271 * x68) + ((Val(1) - x271) * (Val(1) - x68))) * Val(128)));
  Val x329 = ((x328 + (((x273 * x69) + ((Val(1) - x273) * (Val(1) - x69))) * Val(256))) +
              (((x275 * x70) + ((Val(1) - x275) * (Val(1) - x70))) * Val(512)));
  Val x330 = ((x329 + (((x277 * x71) + ((Val(1) - x277) * (Val(1) - x71))) * Val(1024))) +
              (((x279 * x72) + ((Val(1) - x279) * (Val(1) - x72))) * Val(2048)));
  Val x331 = ((x330 + (((x281 * x73) + ((Val(1) - x281) * (Val(1) - x73))) * Val(4096))) +
              (((x283 * x74) + ((Val(1) - x283) * (Val(1) - x74))) * Val(8192)));
  Val x332 = ((x331 + (((x285 * x75) + ((Val(1) - x285) * (Val(1) - x75))) * Val(16384))) +
              (((x287 * x76) + ((Val(1) - x287) * (Val(1) - x76))) * Val(32768)));
  Val x333 = ((x332 + (((x289 * x77) + ((Val(1) - x289) * (Val(1) - x77))) * Val(65536))) +
              (((x291 * x78) + ((Val(1) - x291) * (Val(1) - x78))) * Val(131072)));
  Val x334 = ((x333 + (((x293 * x79) + ((Val(1) - x293) * (Val(1) - x79))) * Val(262144))) +
              (((x295 * x80) + ((Val(1) - x295) * (Val(1) - x80))) * Val(524288)));
  NondetRegStruct x335 =
      exec_Reg(ctx,
               (x334 + (((x297 * x81) + ((Val(1) - x297) * (Val(1) - x81))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _2));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:427)
  Val22Array x336 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x337 = exec_RetTuple(
      ctx,
      x336,
      x336,
      x336,
      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
      x336,
      Val22Array{x313._super, x324._super, x335._super, Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0)},
      Val(3),
      Val(9),
      x4.rnd._super,
      x4.blk._super,
      x4.midx._super,
      LAYOUT_LOOKUP(layout2, _super));
  return x337;
}
RetTupleStruct execRhoMinor0_2__4_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<RhoMinor0_2__4_Layout> layout2) {
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  RetTupleStruct x3 = back_RetTuple(ctx, 4, arg1);
  NondetRegStruct24Array x4 = x3.arrD;
  Val x5 = x4[12]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:257)
  ToBits_22_Struct x6 = exec_ToBits_22_(ctx, x5, LAYOUT_LOOKUP(layout2, unpackM1));
  NondetRegStruct22Array x7 = x6._super;
  Val x8 = x7[0]._super;
  Val x9 = x7[1]._super;
  Val x10 = x7[2]._super;
  Val x11 = x7[3]._super;
  Val x12 = x7[4]._super;
  Val x13 = x7[5]._super;
  Val x14 = x7[6]._super;
  Val x15 = x7[7]._super;
  Val x16 = x7[8]._super;
  Val x17 = x7[9]._super;
  Val x18 = x7[10]._super;
  Val x19 = x7[11]._super;
  Val x20 = x7[12]._super;
  Val x21 = x7[13]._super;
  Val x22 = x7[14]._super;
  Val x23 = x7[15]._super;
  Val x24 = x7[16]._super;
  Val x25 = x7[17]._super;
  Val x26 = x7[18]._super;
  Val x27 = x7[19]._super;
  Val x28 = x7[20]._super;
  Val x29 = x7[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:258)
  Val x30 = ((((((x8 + (x9 * Val(2))) + (x10 * Val(4))) + (x11 * Val(8))) + (x12 * Val(16))) +
              (x13 * Val(32))) +
             (x14 * Val(64)));
  Val x31 =
      ((((((x30 + (x15 * Val(128))) + (x16 * Val(256))) + (x17 * Val(512))) + (x18 * Val(1024))) +
        (x19 * Val(2048))) +
       (x20 * Val(4096)));
  Val x32 = ((((((x31 + (x21 * Val(8192))) + (x22 * Val(16384))) + (x23 * Val(32768))) +
               (x24 * Val(65536))) +
              (x25 * Val(131072))) +
             (x26 * Val(262144)));
  EQZ(((((x32 + (x27 * Val(524288))) + (x28 * Val(1048576))) + (x29 * Val(2097152))) - x5),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:258)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x33 = x4[13]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:261)
  ToBits_21_Struct x34 = exec_ToBits_21_(ctx, x33, LAYOUT_LOOKUP(layout2, unpackM2));
  NondetRegStruct21Array x35 = x34._super;
  Val x36 = x35[0]._super;
  Val x37 = x35[1]._super;
  Val x38 = x35[2]._super;
  Val x39 = x35[3]._super;
  Val x40 = x35[4]._super;
  Val x41 = x35[5]._super;
  Val x42 = x35[6]._super;
  Val x43 = x35[7]._super;
  Val x44 = x35[8]._super;
  Val x45 = x35[9]._super;
  Val x46 = x35[10]._super;
  Val x47 = x35[11]._super;
  Val x48 = x35[12]._super;
  Val x49 = x35[13]._super;
  Val x50 = x35[14]._super;
  Val x51 = x35[15]._super;
  Val x52 = x35[16]._super;
  Val x53 = x35[17]._super;
  Val x54 = x35[18]._super;
  Val x55 = x35[19]._super;
  Val x56 = x35[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:262)
  Val x57 = ((((((x36 + (x37 * Val(2))) + (x38 * Val(4))) + (x39 * Val(8))) + (x40 * Val(16))) +
              (x41 * Val(32))) +
             (x42 * Val(64)));
  Val x58 =
      ((((((x57 + (x43 * Val(128))) + (x44 * Val(256))) + (x45 * Val(512))) + (x46 * Val(1024))) +
        (x47 * Val(2048))) +
       (x48 * Val(4096)));
  Val x59 = ((((((x58 + (x49 * Val(8192))) + (x50 * Val(16384))) + (x51 * Val(32768))) +
               (x52 * Val(65536))) +
              (x53 * Val(131072))) +
             (x54 * Val(262144)));
  EQZ((((x59 + (x55 * Val(524288))) + (x56 * Val(1048576))) - x33),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:262)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x60 = x4[14]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:266)
  ToBits_21_Struct x61 = exec_ToBits_21_(ctx, x60, LAYOUT_LOOKUP(layout2, unpackM3));
  NondetRegStruct21Array x62 = x61._super;
  Val x63 = x62[0]._super;
  Val x64 = x62[1]._super;
  Val x65 = x62[2]._super;
  Val x66 = x62[3]._super;
  Val x67 = x62[4]._super;
  Val x68 = x62[5]._super;
  Val x69 = x62[6]._super;
  Val x70 = x62[7]._super;
  Val x71 = x62[8]._super;
  Val x72 = x62[9]._super;
  Val x73 = x62[10]._super;
  Val x74 = x62[11]._super;
  Val x75 = x62[12]._super;
  Val x76 = x62[13]._super;
  Val x77 = x62[14]._super;
  Val x78 = x62[15]._super;
  Val x79 = x62[16]._super;
  Val x80 = x62[17]._super;
  Val x81 = x62[18]._super;
  Val x82 = x62[19]._super;
  Val x83 = x62[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:267)
  Val x84 = ((((((x63 + (x64 * Val(2))) + (x65 * Val(4))) + (x66 * Val(8))) + (x67 * Val(16))) +
              (x68 * Val(32))) +
             (x69 * Val(64)));
  Val x85 =
      ((((((x84 + (x70 * Val(128))) + (x71 * Val(256))) + (x72 * Val(512))) + (x73 * Val(1024))) +
        (x74 * Val(2048))) +
       (x75 * Val(4096)));
  Val x86 = ((((((x85 + (x76 * Val(8192))) + (x77 * Val(16384))) + (x78 * Val(32768))) +
               (x79 * Val(65536))) +
              (x80 * Val(131072))) +
             (x81 * Val(262144)));
  EQZ((((x86 + (x82 * Val(524288))) + (x83 * Val(1048576))) - x60),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:267)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x87 = x4[18]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:271)
  ToBits_22_Struct x88 = exec_ToBits_22_(ctx, x87, LAYOUT_LOOKUP(layout2, unpackP1));
  NondetRegStruct22Array x89 = x88._super;
  Val x90 = x89[0]._super;
  Val x91 = x89[1]._super;
  Val x92 = x89[2]._super;
  Val x93 = x89[3]._super;
  Val x94 = x89[4]._super;
  Val x95 = x89[5]._super;
  Val x96 = x89[6]._super;
  Val x97 = x89[7]._super;
  Val x98 = x89[8]._super;
  Val x99 = x89[9]._super;
  Val x100 = x89[10]._super;
  Val x101 = x89[11]._super;
  Val x102 = x89[12]._super;
  Val x103 = x89[13]._super;
  Val x104 = x89[14]._super;
  Val x105 = x89[15]._super;
  Val x106 = x89[16]._super;
  Val x107 = x89[17]._super;
  Val x108 = x89[18]._super;
  Val x109 = x89[19]._super;
  Val x110 = x89[20]._super;
  Val x111 = x89[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:272)
  Val x112 = ((((((x90 + (x91 * Val(2))) + (x92 * Val(4))) + (x93 * Val(8))) + (x94 * Val(16))) +
               (x95 * Val(32))) +
              (x96 * Val(64)));
  Val x113 =
      ((((((x112 + (x97 * Val(128))) + (x98 * Val(256))) + (x99 * Val(512))) + (x100 * Val(1024))) +
        (x101 * Val(2048))) +
       (x102 * Val(4096)));
  Val x114 = ((((((x113 + (x103 * Val(8192))) + (x104 * Val(16384))) + (x105 * Val(32768))) +
                (x106 * Val(65536))) +
               (x107 * Val(131072))) +
              (x108 * Val(262144)));
  EQZ(((((x114 + (x109 * Val(524288))) + (x110 * Val(1048576))) + (x111 * Val(2097152))) - x87),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:272)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x115 = x4[19]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:275)
  ToBits_21_Struct x116 = exec_ToBits_21_(ctx, x115, LAYOUT_LOOKUP(layout2, unpackP2));
  NondetRegStruct21Array x117 = x116._super;
  Val x118 = x117[0]._super;
  Val x119 = x117[1]._super;
  Val x120 = x117[2]._super;
  Val x121 = x117[3]._super;
  Val x122 = x117[4]._super;
  Val x123 = x117[5]._super;
  Val x124 = x117[6]._super;
  Val x125 = x117[7]._super;
  Val x126 = x117[8]._super;
  Val x127 = x117[9]._super;
  Val x128 = x117[10]._super;
  Val x129 = x117[11]._super;
  Val x130 = x117[12]._super;
  Val x131 = x117[13]._super;
  Val x132 = x117[14]._super;
  Val x133 = x117[15]._super;
  Val x134 = x117[16]._super;
  Val x135 = x117[17]._super;
  Val x136 = x117[18]._super;
  Val x137 = x117[19]._super;
  Val x138 = x117[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:276)
  Val x139 =
      ((((((x118 + (x119 * Val(2))) + (x120 * Val(4))) + (x121 * Val(8))) + (x122 * Val(16))) +
        (x123 * Val(32))) +
       (x124 * Val(64)));
  Val x140 = ((((((x139 + (x125 * Val(128))) + (x126 * Val(256))) + (x127 * Val(512))) +
                (x128 * Val(1024))) +
               (x129 * Val(2048))) +
              (x130 * Val(4096)));
  Val x141 = ((((((x140 + (x131 * Val(8192))) + (x132 * Val(16384))) + (x133 * Val(32768))) +
                (x134 * Val(65536))) +
               (x135 * Val(131072))) +
              (x136 * Val(262144)));
  EQZ((((x141 + (x137 * Val(524288))) + (x138 * Val(1048576))) - x115),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:276)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x142 = x4[20]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:279)
  ToBits_21_Struct x143 = exec_ToBits_21_(ctx, x142, LAYOUT_LOOKUP(layout2, unpackP3));
  NondetRegStruct21Array x144 = x143._super;
  Val x145 = x144[0]._super;
  Val x146 = x144[1]._super;
  Val x147 = x144[2]._super;
  Val x148 = x144[3]._super;
  Val x149 = x144[4]._super;
  Val x150 = x144[5]._super;
  Val x151 = x144[6]._super;
  Val x152 = x144[7]._super;
  Val x153 = x144[8]._super;
  Val x154 = x144[9]._super;
  Val x155 = x144[10]._super;
  Val x156 = x144[11]._super;
  Val x157 = x144[12]._super;
  Val x158 = x144[13]._super;
  Val x159 = x144[14]._super;
  Val x160 = x144[15]._super;
  Val x161 = x144[16]._super;
  Val x162 = x144[17]._super;
  Val x163 = x144[18]._super;
  Val x164 = x144[19]._super;
  Val x165 = x144[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:280)
  Val x166 =
      ((((((x145 + (x146 * Val(2))) + (x147 * Val(4))) + (x148 * Val(8))) + (x149 * Val(16))) +
        (x150 * Val(32))) +
       (x151 * Val(64)));
  Val x167 = ((((((x166 + (x152 * Val(128))) + (x153 * Val(256))) + (x154 * Val(512))) +
                (x155 * Val(1024))) +
               (x156 * Val(2048))) +
              (x157 * Val(4096)));
  Val x168 = ((((((x167 + (x158 * Val(8192))) + (x159 * Val(16384))) + (x160 * Val(32768))) +
                (x161 * Val(65536))) +
               (x162 * Val(131072))) +
              (x163 * Val(262144)));
  EQZ((((x168 + (x164 * Val(524288))) + (x165 * Val(1048576))) - x142),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:280)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:287)
  RetTupleStruct x169 =
      exec_RetTuple(ctx,
                    Val22Array{x165, x90,  x91,  x92,  x93,  x94,  x95,  x96,  x97,  x98,  x99,
                               x100, x101, x102, x103, x104, x105, x106, x107, x108, x109, x110},
                    Val22Array{x111, x118, x119, x120, x121, x122, x123, x124, x125, x126, x127,
                               x128, x129, x130, x131, x132, x133, x134, x135, x136, x137, Val(0)},
                    Val22Array{x138, x145, x146, x147, x148, x149, x150, x151, x152, x153, x154,
                               x155, x156, x157, x158, x159, x160, x161, x162, x163, x164, Val(0)},
                    Val24Array{x8,  x9,  x10, x11, x12, x13, x14, x15, x16, x17, x18,    x19,
                               x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, Val(0), Val(0)},
                    Val22Array{x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46,
                               x47, x48, x49, x50, x51, x52, x53, x54, x55, x56, Val(0)},
                    Val22Array{x63, x64, x65, x66, x67, x68, x69, x70, x71, x72, x73,
                               x74, x75, x76, x77, x78, x79, x80, x81, x82, x83, Val(0)},
                    Val(4),
                    Val(9),
                    x3.rnd._super,
                    x3.blk._super,
                    x3.midx._super,
                    LAYOUT_LOOKUP(layout2, _super));
  return x169;
}
RetTupleStruct execRhoMinor1_2__4_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<RhoMinor1_2__4_Layout> layout2) {
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:341)
  BoundLayout<RhoMinor1_2__4__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:292)
  RetTupleStruct x4 = back_RetTuple(ctx, 5, arg1);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  RetTupleStruct x5 = back_RetTuple(ctx, 1, arg1);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:292)
  NondetRegStruct24Array x6 = x4.arrD;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:297)
  Val x7 = x6[0]._super;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:304)
  ToBits_22_Struct x8 = exec_ToBits_22_(ctx, x7, LAYOUT_LOOKUP(layout2, unpackXy1));
  NondetRegStruct22Array x9 = x8._super;
  Val x10 = x9[0]._super;
  Val x11 = x9[1]._super;
  Val x12 = x9[2]._super;
  Val x13 = x9[3]._super;
  Val x14 = x9[4]._super;
  Val x15 = x9[5]._super;
  Val x16 = x9[6]._super;
  Val x17 = x9[7]._super;
  Val x18 = x9[8]._super;
  Val x19 = x9[9]._super;
  Val x20 = x9[10]._super;
  Val x21 = x9[11]._super;
  Val x22 = x9[12]._super;
  Val x23 = x9[13]._super;
  Val x24 = x9[14]._super;
  Val x25 = x9[15]._super;
  Val x26 = x9[16]._super;
  Val x27 = x9[17]._super;
  Val x28 = x9[18]._super;
  Val x29 = x9[19]._super;
  Val x30 = x9[20]._super;
  Val x31 = x9[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:305)
  Val x32 = ((((((x10 + (x11 * Val(2))) + (x12 * Val(4))) + (x13 * Val(8))) + (x14 * Val(16))) +
              (x15 * Val(32))) +
             (x16 * Val(64)));
  Val x33 =
      ((((((x32 + (x17 * Val(128))) + (x18 * Val(256))) + (x19 * Val(512))) + (x20 * Val(1024))) +
        (x21 * Val(2048))) +
       (x22 * Val(4096)));
  Val x34 = ((((((x33 + (x23 * Val(8192))) + (x24 * Val(16384))) + (x25 * Val(32768))) +
               (x26 * Val(65536))) +
              (x27 * Val(131072))) +
             (x28 * Val(262144)));
  EQZ(((((x34 + (x29 * Val(524288))) + (x30 * Val(1048576))) + (x31 * Val(2097152))) - x7),
      "rho_minor1(zirgen/circuit/keccak/keccak.zir:305)");
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:309)
  Val x35 = x6[1]._super;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:316)
  ToBits_21_Struct x36 = exec_ToBits_21_(ctx, x35, LAYOUT_LOOKUP(layout2, unpackXy2));
  NondetRegStruct21Array x37 = x36._super;
  Val x38 = x37[0]._super;
  Val x39 = x37[1]._super;
  Val x40 = x37[2]._super;
  Val x41 = x37[3]._super;
  Val x42 = x37[4]._super;
  Val x43 = x37[5]._super;
  Val x44 = x37[6]._super;
  Val x45 = x37[7]._super;
  Val x46 = x37[8]._super;
  Val x47 = x37[9]._super;
  Val x48 = x37[10]._super;
  Val x49 = x37[11]._super;
  Val x50 = x37[12]._super;
  Val x51 = x37[13]._super;
  Val x52 = x37[14]._super;
  Val x53 = x37[15]._super;
  Val x54 = x37[16]._super;
  Val x55 = x37[17]._super;
  Val x56 = x37[18]._super;
  Val x57 = x37[19]._super;
  Val x58 = x37[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:317)
  Val x59 = ((((((x38 + (x39 * Val(2))) + (x40 * Val(4))) + (x41 * Val(8))) + (x42 * Val(16))) +
              (x43 * Val(32))) +
             (x44 * Val(64)));
  Val x60 =
      ((((((x59 + (x45 * Val(128))) + (x46 * Val(256))) + (x47 * Val(512))) + (x48 * Val(1024))) +
        (x49 * Val(2048))) +
       (x50 * Val(4096)));
  Val x61 = ((((((x60 + (x51 * Val(8192))) + (x52 * Val(16384))) + (x53 * Val(32768))) +
               (x54 * Val(65536))) +
              (x55 * Val(131072))) +
             (x56 * Val(262144)));
  EQZ((((x61 + (x57 * Val(524288))) + (x58 * Val(1048576))) - x35),
      "rho_minor1(zirgen/circuit/keccak/keccak.zir:317)");
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:321)
  Val x62 = x6[2]._super;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:328)
  ToBits_21_Struct x63 = exec_ToBits_21_(ctx, x62, LAYOUT_LOOKUP(layout2, unpackXy3));
  NondetRegStruct21Array x64 = x63._super;
  Val x65 = x64[0]._super;
  Val x66 = x64[1]._super;
  Val x67 = x64[2]._super;
  Val x68 = x64[3]._super;
  Val x69 = x64[4]._super;
  Val x70 = x64[5]._super;
  Val x71 = x64[6]._super;
  Val x72 = x64[7]._super;
  Val x73 = x64[8]._super;
  Val x74 = x64[9]._super;
  Val x75 = x64[10]._super;
  Val x76 = x64[11]._super;
  Val x77 = x64[12]._super;
  Val x78 = x64[13]._super;
  Val x79 = x64[14]._super;
  Val x80 = x64[15]._super;
  Val x81 = x64[16]._super;
  Val x82 = x64[17]._super;
  Val x83 = x64[18]._super;
  Val x84 = x64[19]._super;
  Val x85 = x64[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:329)
  Val x86 = ((((((x65 + (x66 * Val(2))) + (x67 * Val(4))) + (x68 * Val(8))) + (x69 * Val(16))) +
              (x70 * Val(32))) +
             (x71 * Val(64)));
  Val x87 =
      ((((((x86 + (x72 * Val(128))) + (x73 * Val(256))) + (x74 * Val(512))) + (x75 * Val(1024))) +
        (x76 * Val(2048))) +
       (x77 * Val(4096)));
  Val x88 = ((((((x87 + (x78 * Val(8192))) + (x79 * Val(16384))) + (x80 * Val(32768))) +
               (x81 * Val(65536))) +
              (x82 * Val(131072))) +
             (x83 * Val(262144)));
  EQZ((((x88 + (x84 * Val(524288))) + (x85 * Val(1048576))) - x62),
      "rho_minor1(zirgen/circuit/keccak/keccak.zir:329)");
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  NondetRegStruct22Array x89 = x5.arrA;
  NondetRegStruct24Array x90 = x5.arrD;
  Val x91 = x89[0]._super;
  Val x92 = x90[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x93 = ((x10 * x91) + ((Val(1) - x10) * (Val(1) - x91)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x94 = x89[1]._super;
  Val x95 = x90[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x96 = ((x11 * x94) + ((Val(1) - x11) * (Val(1) - x94)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x97 = x89[2]._super;
  Val x98 = x90[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x99 = ((x12 * x97) + ((Val(1) - x12) * (Val(1) - x97)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x100 = x89[3]._super;
  Val x101 = x90[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x102 = ((x13 * x100) + ((Val(1) - x13) * (Val(1) - x100)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x103 = x89[4]._super;
  Val x104 = x90[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x105 = ((x14 * x103) + ((Val(1) - x14) * (Val(1) - x103)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x106 = x89[5]._super;
  Val x107 = x90[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x108 = ((x15 * x106) + ((Val(1) - x15) * (Val(1) - x106)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x109 = x89[6]._super;
  Val x110 = x90[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x111 = ((x16 * x109) + ((Val(1) - x16) * (Val(1) - x109)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x112 = x89[7]._super;
  Val x113 = x90[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x114 = ((x17 * x112) + ((Val(1) - x17) * (Val(1) - x112)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x115 = x89[8]._super;
  Val x116 = x90[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x117 = ((x18 * x115) + ((Val(1) - x18) * (Val(1) - x115)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x118 = x89[9]._super;
  Val x119 = x90[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x120 = ((x19 * x118) + ((Val(1) - x19) * (Val(1) - x118)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x121 = x89[10]._super;
  Val x122 = x90[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x123 = ((x20 * x121) + ((Val(1) - x20) * (Val(1) - x121)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x124 = x89[11]._super;
  Val x125 = x90[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x126 = ((x21 * x124) + ((Val(1) - x21) * (Val(1) - x124)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x127 = x89[12]._super;
  Val x128 = x90[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x129 = ((x22 * x127) + ((Val(1) - x22) * (Val(1) - x127)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x130 = x89[13]._super;
  Val x131 = x90[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x132 = ((x23 * x130) + ((Val(1) - x23) * (Val(1) - x130)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x133 = x89[14]._super;
  Val x134 = x90[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x135 = ((x24 * x133) + ((Val(1) - x24) * (Val(1) - x133)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x136 = x89[15]._super;
  Val x137 = x90[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x138 = ((x25 * x136) + ((Val(1) - x25) * (Val(1) - x136)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x139 = x89[16]._super;
  Val x140 = x90[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x141 = ((x26 * x139) + ((Val(1) - x26) * (Val(1) - x139)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x142 = x89[17]._super;
  Val x143 = x90[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x144 = ((x27 * x142) + ((Val(1) - x27) * (Val(1) - x142)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x145 = x89[18]._super;
  Val x146 = x90[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x147 = ((x28 * x145) + ((Val(1) - x28) * (Val(1) - x145)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x148 = x89[19]._super;
  Val x149 = x90[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x150 = ((x29 * x148) + ((Val(1) - x29) * (Val(1) - x148)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x151 = x89[20]._super;
  Val x152 = x90[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x153 = ((x30 * x151) + ((Val(1) - x30) * (Val(1) - x151)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x154 = x89[21]._super;
  Val x155 = x90[21]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x156 = ((x31 * x154) + ((Val(1) - x31) * (Val(1) - x154)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  NondetRegStruct22Array x157 = x5.arrB;
  NondetRegStruct22Array x158 = x5.arrE;
  Val x159 = x157[0]._super;
  Val x160 = x158[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x161 = ((x38 * x159) + ((Val(1) - x38) * (Val(1) - x159)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x162 = x157[1]._super;
  Val x163 = x158[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x164 = ((x39 * x162) + ((Val(1) - x39) * (Val(1) - x162)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x165 = x157[2]._super;
  Val x166 = x158[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x167 = ((x40 * x165) + ((Val(1) - x40) * (Val(1) - x165)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x168 = x157[3]._super;
  Val x169 = x158[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x170 = ((x41 * x168) + ((Val(1) - x41) * (Val(1) - x168)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x171 = x157[4]._super;
  Val x172 = x158[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x173 = ((x42 * x171) + ((Val(1) - x42) * (Val(1) - x171)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x174 = x157[5]._super;
  Val x175 = x158[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x176 = ((x43 * x174) + ((Val(1) - x43) * (Val(1) - x174)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x177 = x157[6]._super;
  Val x178 = x158[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x179 = ((x44 * x177) + ((Val(1) - x44) * (Val(1) - x177)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x180 = x157[7]._super;
  Val x181 = x158[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x182 = ((x45 * x180) + ((Val(1) - x45) * (Val(1) - x180)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x183 = x157[8]._super;
  Val x184 = x158[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x185 = ((x46 * x183) + ((Val(1) - x46) * (Val(1) - x183)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x186 = x157[9]._super;
  Val x187 = x158[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x188 = ((x47 * x186) + ((Val(1) - x47) * (Val(1) - x186)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x189 = x157[10]._super;
  Val x190 = x158[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x191 = ((x48 * x189) + ((Val(1) - x48) * (Val(1) - x189)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x192 = x157[11]._super;
  Val x193 = x158[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x194 = ((x49 * x192) + ((Val(1) - x49) * (Val(1) - x192)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x195 = x157[12]._super;
  Val x196 = x158[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x197 = ((x50 * x195) + ((Val(1) - x50) * (Val(1) - x195)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x198 = x157[13]._super;
  Val x199 = x158[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x200 = ((x51 * x198) + ((Val(1) - x51) * (Val(1) - x198)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x201 = x157[14]._super;
  Val x202 = x158[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x203 = ((x52 * x201) + ((Val(1) - x52) * (Val(1) - x201)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x204 = x157[15]._super;
  Val x205 = x158[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x206 = ((x53 * x204) + ((Val(1) - x53) * (Val(1) - x204)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x207 = x157[16]._super;
  Val x208 = x158[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x209 = ((x54 * x207) + ((Val(1) - x54) * (Val(1) - x207)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x210 = x157[17]._super;
  Val x211 = x158[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x212 = ((x55 * x210) + ((Val(1) - x55) * (Val(1) - x210)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x213 = x157[18]._super;
  Val x214 = x158[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x215 = ((x56 * x213) + ((Val(1) - x56) * (Val(1) - x213)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x216 = x157[19]._super;
  Val x217 = x158[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x218 = ((x57 * x216) + ((Val(1) - x57) * (Val(1) - x216)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x219 = x157[20]._super;
  Val x220 = x158[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x221 = ((x58 * x219) + ((Val(1) - x58) * (Val(1) - x219)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  NondetRegStruct22Array x222 = x5.arrC;
  NondetRegStruct22Array x223 = x5.arrF;
  Val x224 = x222[0]._super;
  Val x225 = x223[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x226 = ((x65 * x224) + ((Val(1) - x65) * (Val(1) - x224)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x227 = x222[1]._super;
  Val x228 = x223[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x229 = ((x66 * x227) + ((Val(1) - x66) * (Val(1) - x227)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x230 = x222[2]._super;
  Val x231 = x223[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x232 = ((x67 * x230) + ((Val(1) - x67) * (Val(1) - x230)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x233 = x222[3]._super;
  Val x234 = x223[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x235 = ((x68 * x233) + ((Val(1) - x68) * (Val(1) - x233)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x236 = x222[4]._super;
  Val x237 = x223[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x238 = ((x69 * x236) + ((Val(1) - x69) * (Val(1) - x236)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x239 = x222[5]._super;
  Val x240 = x223[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x241 = ((x70 * x239) + ((Val(1) - x70) * (Val(1) - x239)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x242 = x222[6]._super;
  Val x243 = x223[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x244 = ((x71 * x242) + ((Val(1) - x71) * (Val(1) - x242)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x245 = x222[7]._super;
  Val x246 = x223[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x247 = ((x72 * x245) + ((Val(1) - x72) * (Val(1) - x245)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x248 = x222[8]._super;
  Val x249 = x223[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x250 = ((x73 * x248) + ((Val(1) - x73) * (Val(1) - x248)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x251 = x222[9]._super;
  Val x252 = x223[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x253 = ((x74 * x251) + ((Val(1) - x74) * (Val(1) - x251)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x254 = x222[10]._super;
  Val x255 = x223[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x256 = ((x75 * x254) + ((Val(1) - x75) * (Val(1) - x254)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x257 = x222[11]._super;
  Val x258 = x223[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x259 = ((x76 * x257) + ((Val(1) - x76) * (Val(1) - x257)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x260 = x222[12]._super;
  Val x261 = x223[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x262 = ((x77 * x260) + ((Val(1) - x77) * (Val(1) - x260)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x263 = x222[13]._super;
  Val x264 = x223[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x265 = ((x78 * x263) + ((Val(1) - x78) * (Val(1) - x263)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x266 = x222[14]._super;
  Val x267 = x223[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x268 = ((x79 * x266) + ((Val(1) - x79) * (Val(1) - x266)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x269 = x222[15]._super;
  Val x270 = x223[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x271 = ((x80 * x269) + ((Val(1) - x80) * (Val(1) - x269)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x272 = x222[16]._super;
  Val x273 = x223[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x274 = ((x81 * x272) + ((Val(1) - x81) * (Val(1) - x272)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x275 = x222[17]._super;
  Val x276 = x223[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x277 = ((x82 * x275) + ((Val(1) - x82) * (Val(1) - x275)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x278 = x222[18]._super;
  Val x279 = x223[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x280 = ((x83 * x278) + ((Val(1) - x83) * (Val(1) - x278)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x281 = x222[19]._super;
  Val x282 = x223[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x283 = ((x84 * x281) + ((Val(1) - x84) * (Val(1) - x281)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x284 = x222[20]._super;
  Val x285 = x223[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x286 = ((x85 * x284) + ((Val(1) - x85) * (Val(1) - x284)));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:336)
  Val x287 = (((x102 * x101) + ((Val(1) - x102) * (Val(1) - x101))) +
              (((x105 * x104) + ((Val(1) - x105) * (Val(1) - x104))) * Val(2)));
  Val x288 = ((x287 + (((x108 * x107) + ((Val(1) - x108) * (Val(1) - x107))) * Val(4))) +
              (((x111 * x110) + ((Val(1) - x111) * (Val(1) - x110))) * Val(8)));
  Val x289 = ((x288 + (((x114 * x113) + ((Val(1) - x114) * (Val(1) - x113))) * Val(16))) +
              (((x117 * x116) + ((Val(1) - x117) * (Val(1) - x116))) * Val(32)));
  Val x290 = ((x289 + (((x120 * x119) + ((Val(1) - x120) * (Val(1) - x119))) * Val(64))) +
              (((x123 * x122) + ((Val(1) - x123) * (Val(1) - x122))) * Val(128)));
  Val x291 = ((x290 + (((x126 * x125) + ((Val(1) - x126) * (Val(1) - x125))) * Val(256))) +
              (((x129 * x128) + ((Val(1) - x129) * (Val(1) - x128))) * Val(512)));
  Val x292 = ((x291 + (((x132 * x131) + ((Val(1) - x132) * (Val(1) - x131))) * Val(1024))) +
              (((x135 * x134) + ((Val(1) - x135) * (Val(1) - x134))) * Val(2048)));
  Val x293 = ((x292 + (((x138 * x137) + ((Val(1) - x138) * (Val(1) - x137))) * Val(4096))) +
              (((x141 * x140) + ((Val(1) - x141) * (Val(1) - x140))) * Val(8192)));
  Val x294 = ((x293 + (((x144 * x143) + ((Val(1) - x144) * (Val(1) - x143))) * Val(16384))) +
              (((x147 * x146) + ((Val(1) - x147) * (Val(1) - x146))) * Val(32768)));
  Val x295 = ((x294 + (((x150 * x149) + ((Val(1) - x150) * (Val(1) - x149))) * Val(65536))) +
              (((x153 * x152) + ((Val(1) - x153) * (Val(1) - x152))) * Val(131072)));
  Val x296 = ((x295 + (((x156 * x155) + ((Val(1) - x156) * (Val(1) - x155))) * Val(262144))) +
              (((x161 * x160) + ((Val(1) - x161) * (Val(1) - x160))) * Val(524288)));
  Val x297 = ((x296 + (((x164 * x163) + ((Val(1) - x164) * (Val(1) - x163))) * Val(1048576))) +
              (((x167 * x166) + ((Val(1) - x167) * (Val(1) - x166))) * Val(2097152)));
  NondetRegStruct x298 = exec_Reg(ctx, x297, LAYOUT_LOOKUP(layout2, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:337)
  Val x299 = (((x170 * x169) + ((Val(1) - x170) * (Val(1) - x169))) +
              (((x173 * x172) + ((Val(1) - x173) * (Val(1) - x172))) * Val(2)));
  Val x300 = ((x299 + (((x176 * x175) + ((Val(1) - x176) * (Val(1) - x175))) * Val(4))) +
              (((x179 * x178) + ((Val(1) - x179) * (Val(1) - x178))) * Val(8)));
  Val x301 = ((x300 + (((x182 * x181) + ((Val(1) - x182) * (Val(1) - x181))) * Val(16))) +
              (((x185 * x184) + ((Val(1) - x185) * (Val(1) - x184))) * Val(32)));
  Val x302 = ((x301 + (((x188 * x187) + ((Val(1) - x188) * (Val(1) - x187))) * Val(64))) +
              (((x191 * x190) + ((Val(1) - x191) * (Val(1) - x190))) * Val(128)));
  Val x303 = ((x302 + (((x194 * x193) + ((Val(1) - x194) * (Val(1) - x193))) * Val(256))) +
              (((x197 * x196) + ((Val(1) - x197) * (Val(1) - x196))) * Val(512)));
  Val x304 = ((x303 + (((x200 * x199) + ((Val(1) - x200) * (Val(1) - x199))) * Val(1024))) +
              (((x203 * x202) + ((Val(1) - x203) * (Val(1) - x202))) * Val(2048)));
  Val x305 = ((x304 + (((x206 * x205) + ((Val(1) - x206) * (Val(1) - x205))) * Val(4096))) +
              (((x209 * x208) + ((Val(1) - x209) * (Val(1) - x208))) * Val(8192)));
  Val x306 = ((x305 + (((x212 * x211) + ((Val(1) - x212) * (Val(1) - x211))) * Val(16384))) +
              (((x215 * x214) + ((Val(1) - x215) * (Val(1) - x214))) * Val(32768)));
  Val x307 = ((x306 + (((x218 * x217) + ((Val(1) - x218) * (Val(1) - x217))) * Val(65536))) +
              (((x221 * x220) + ((Val(1) - x221) * (Val(1) - x220))) * Val(131072)));
  Val x308 = ((x307 + (((x226 * x225) + ((Val(1) - x226) * (Val(1) - x225))) * Val(262144))) +
              (((x229 * x228) + ((Val(1) - x229) * (Val(1) - x228))) * Val(524288)));
  NondetRegStruct x309 =
      exec_Reg(ctx,
               (x308 + (((x232 * x231) + ((Val(1) - x232) * (Val(1) - x231))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _1));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:338)
  Val x310 = (((x235 * x234) + ((Val(1) - x235) * (Val(1) - x234))) +
              (((x238 * x237) + ((Val(1) - x238) * (Val(1) - x237))) * Val(2)));
  Val x311 = ((x310 + (((x241 * x240) + ((Val(1) - x241) * (Val(1) - x240))) * Val(4))) +
              (((x244 * x243) + ((Val(1) - x244) * (Val(1) - x243))) * Val(8)));
  Val x312 = ((x311 + (((x247 * x246) + ((Val(1) - x247) * (Val(1) - x246))) * Val(16))) +
              (((x250 * x249) + ((Val(1) - x250) * (Val(1) - x249))) * Val(32)));
  Val x313 = ((x312 + (((x253 * x252) + ((Val(1) - x253) * (Val(1) - x252))) * Val(64))) +
              (((x256 * x255) + ((Val(1) - x256) * (Val(1) - x255))) * Val(128)));
  Val x314 = ((x313 + (((x259 * x258) + ((Val(1) - x259) * (Val(1) - x258))) * Val(256))) +
              (((x262 * x261) + ((Val(1) - x262) * (Val(1) - x261))) * Val(512)));
  Val x315 = ((x314 + (((x265 * x264) + ((Val(1) - x265) * (Val(1) - x264))) * Val(1024))) +
              (((x268 * x267) + ((Val(1) - x268) * (Val(1) - x267))) * Val(2048)));
  Val x316 = ((x315 + (((x271 * x270) + ((Val(1) - x271) * (Val(1) - x270))) * Val(4096))) +
              (((x274 * x273) + ((Val(1) - x274) * (Val(1) - x273))) * Val(8192)));
  Val x317 = ((x316 + (((x277 * x276) + ((Val(1) - x277) * (Val(1) - x276))) * Val(16384))) +
              (((x280 * x279) + ((Val(1) - x280) * (Val(1) - x279))) * Val(32768)));
  Val x318 = ((x317 + (((x283 * x282) + ((Val(1) - x283) * (Val(1) - x282))) * Val(65536))) +
              (((x286 * x285) + ((Val(1) - x286) * (Val(1) - x285))) * Val(131072)));
  Val x319 = ((x318 + (((x93 * x92) + ((Val(1) - x93) * (Val(1) - x92))) * Val(262144))) +
              (((x96 * x95) + ((Val(1) - x96) * (Val(1) - x95))) * Val(524288)));
  NondetRegStruct x320 =
      exec_Reg(ctx,
               (x319 + (((x99 * x98) + ((Val(1) - x99) * (Val(1) - x98))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _2));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:341)
  BoundLayout<RhoMinor1_2__4_Arm1_SuperLayout> x321 = LAYOUT_LOOKUP(x3, arm1);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:342)
  Val22Array x322 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  Val24Array x323 = Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:339)
  Val22Array x324 =
      Val22Array{x298._super, x309._super, x320._super, Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0)};
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x325 = x5.rnd._super;
  Val x326 = x5.blk._super;
  Val x327 = x5.midx._super;
  if (to_size_t(Val(0))) {
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:342)
    RetTupleStruct x328 = exec_RetTuple(ctx,
                                        x322,
                                        x322,
                                        x322,
                                        x323,
                                        x322,
                                        x324,
                                        Val(8),
                                        Val(9),
                                        x325,
                                        x326,
                                        x327,
                                        LAYOUT_LOOKUP(x3, arm0));
  }
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:292)
  Val x329 = x6[15]._super;
  Val x330 = x6[16]._super;
  Val x331 = x6[17]._super;
  if (to_size_t(Val(1))) {
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:345)
    ToBits_22_Struct x332 = exec_ToBits_22_(ctx, x329, LAYOUT_LOOKUP(x321, unpackM1));
    NondetRegStruct22Array x333 = x332._super;
    Val x334 = x333[0]._super;
    Val x335 = x333[1]._super;
    Val x336 = x333[2]._super;
    Val x337 = x333[3]._super;
    Val x338 = x333[4]._super;
    Val x339 = x333[5]._super;
    Val x340 = x333[6]._super;
    Val x341 = x333[7]._super;
    Val x342 = x333[8]._super;
    Val x343 = x333[9]._super;
    Val x344 = x333[10]._super;
    Val x345 = x333[11]._super;
    Val x346 = x333[12]._super;
    Val x347 = x333[13]._super;
    Val x348 = x333[14]._super;
    Val x349 = x333[15]._super;
    Val x350 = x333[16]._super;
    Val x351 = x333[17]._super;
    Val x352 = x333[18]._super;
    Val x353 = x333[19]._super;
    Val x354 = x333[20]._super;
    Val x355 = x333[21]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:346)
    Val x356 =
        ((((((x334 + (x335 * Val(2))) + (x336 * Val(4))) + (x337 * Val(8))) + (x338 * Val(16))) +
          (x339 * Val(32))) +
         (x340 * Val(64)));
    Val x357 = ((((((x356 + (x341 * Val(128))) + (x342 * Val(256))) + (x343 * Val(512))) +
                  (x344 * Val(1024))) +
                 (x345 * Val(2048))) +
                (x346 * Val(4096)));
    Val x358 = ((((((x357 + (x347 * Val(8192))) + (x348 * Val(16384))) + (x349 * Val(32768))) +
                  (x350 * Val(65536))) +
                 (x351 * Val(131072))) +
                (x352 * Val(262144)));
    EQZ(((((x358 + (x353 * Val(524288))) + (x354 * Val(1048576))) + (x355 * Val(2097152))) - x329),
        "rho_minor1(zirgen/circuit/keccak/keccak.zir:346)");
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:349)
    ToBits_21_Struct x359 = exec_ToBits_21_(ctx, x330, LAYOUT_LOOKUP(x321, unpackM2));
    NondetRegStruct21Array x360 = x359._super;
    Val x361 = x360[0]._super;
    Val x362 = x360[1]._super;
    Val x363 = x360[2]._super;
    Val x364 = x360[3]._super;
    Val x365 = x360[4]._super;
    Val x366 = x360[5]._super;
    Val x367 = x360[6]._super;
    Val x368 = x360[7]._super;
    Val x369 = x360[8]._super;
    Val x370 = x360[9]._super;
    Val x371 = x360[10]._super;
    Val x372 = x360[11]._super;
    Val x373 = x360[12]._super;
    Val x374 = x360[13]._super;
    Val x375 = x360[14]._super;
    Val x376 = x360[15]._super;
    Val x377 = x360[16]._super;
    Val x378 = x360[17]._super;
    Val x379 = x360[18]._super;
    Val x380 = x360[19]._super;
    Val x381 = x360[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:350)
    Val x382 =
        ((((((x361 + (x362 * Val(2))) + (x363 * Val(4))) + (x364 * Val(8))) + (x365 * Val(16))) +
          (x366 * Val(32))) +
         (x367 * Val(64)));
    Val x383 = ((((((x382 + (x368 * Val(128))) + (x369 * Val(256))) + (x370 * Val(512))) +
                  (x371 * Val(1024))) +
                 (x372 * Val(2048))) +
                (x373 * Val(4096)));
    Val x384 = ((((((x383 + (x374 * Val(8192))) + (x375 * Val(16384))) + (x376 * Val(32768))) +
                  (x377 * Val(65536))) +
                 (x378 * Val(131072))) +
                (x379 * Val(262144)));
    EQZ((((x384 + (x380 * Val(524288))) + (x381 * Val(1048576))) - x330),
        "rho_minor1(zirgen/circuit/keccak/keccak.zir:350)");
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:354)
    ToBits_21_Struct x385 = exec_ToBits_21_(ctx, x331, LAYOUT_LOOKUP(x321, unpackM3));
    NondetRegStruct21Array x386 = x385._super;
    Val x387 = x386[0]._super;
    Val x388 = x386[1]._super;
    Val x389 = x386[2]._super;
    Val x390 = x386[3]._super;
    Val x391 = x386[4]._super;
    Val x392 = x386[5]._super;
    Val x393 = x386[6]._super;
    Val x394 = x386[7]._super;
    Val x395 = x386[8]._super;
    Val x396 = x386[9]._super;
    Val x397 = x386[10]._super;
    Val x398 = x386[11]._super;
    Val x399 = x386[12]._super;
    Val x400 = x386[13]._super;
    Val x401 = x386[14]._super;
    Val x402 = x386[15]._super;
    Val x403 = x386[16]._super;
    Val x404 = x386[17]._super;
    Val x405 = x386[18]._super;
    Val x406 = x386[19]._super;
    Val x407 = x386[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:355)
    Val x408 =
        ((((((x387 + (x388 * Val(2))) + (x389 * Val(4))) + (x390 * Val(8))) + (x391 * Val(16))) +
          (x392 * Val(32))) +
         (x393 * Val(64)));
    Val x409 = ((((((x408 + (x394 * Val(128))) + (x395 * Val(256))) + (x396 * Val(512))) +
                  (x397 * Val(1024))) +
                 (x398 * Val(2048))) +
                (x399 * Val(4096)));
    Val x410 = ((((((x409 + (x400 * Val(8192))) + (x401 * Val(16384))) + (x402 * Val(32768))) +
                  (x403 * Val(65536))) +
                 (x404 * Val(131072))) +
                (x405 * Val(262144)));
    EQZ((((x410 + (x406 * Val(524288))) + (x407 * Val(1048576))) - x331),
        "rho_minor1(zirgen/circuit/keccak/keccak.zir:355)");
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:358)
    RetTupleStruct x411 = exec_RetTuple(
        ctx,
        Val22Array{x334, x335, x336, x337, x338, x339, x340, x341, x342, x343, x344,
                   x345, x346, x347, x348, x349, x350, x351, x352, x353, x354, x355},
        Val22Array{x361, x362, x363, x364, x365, x366, x367, x368, x369, x370, x371,
                   x372, x373, x374, x375, x376, x377, x378, x379, x380, x381, Val(0)},
        Val22Array{x387, x388, x389, x390, x391, x392, x393, x394, x395, x396, x397,
                   x398, x399, x400, x401, x402, x403, x404, x405, x406, x407, Val(0)},
        x323,
        x322,
        x324,
        Val(5),
        Val(9),
        x325,
        x326,
        x327,
        LAYOUT_LOOKUP(x321, _super));
  }
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:341)
  RetTupleStruct x412 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x412;
}
RetTupleStruct execRhoMinor2_2__4_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<RhoMinor2_2__4_Layout> layout2) {
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:364)
  RetTupleStruct x3 = back_RetTuple(ctx, 6, arg1);
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:364)
  NondetRegStruct24Array x5 = x3.arrD;
  Val x6 = x5[21]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:368)
  ToBits_22_Struct x7 = exec_ToBits_22_(ctx, x6, LAYOUT_LOOKUP(layout2, unpackP1));
  NondetRegStruct22Array x8 = x7._super;
  Val x9 = x8[0]._super;
  Val x10 = x8[1]._super;
  Val x11 = x8[2]._super;
  Val x12 = x8[3]._super;
  Val x13 = x8[4]._super;
  Val x14 = x8[5]._super;
  Val x15 = x8[6]._super;
  Val x16 = x8[7]._super;
  Val x17 = x8[8]._super;
  Val x18 = x8[9]._super;
  Val x19 = x8[10]._super;
  Val x20 = x8[11]._super;
  Val x21 = x8[12]._super;
  Val x22 = x8[13]._super;
  Val x23 = x8[14]._super;
  Val x24 = x8[15]._super;
  Val x25 = x8[16]._super;
  Val x26 = x8[17]._super;
  Val x27 = x8[18]._super;
  Val x28 = x8[19]._super;
  Val x29 = x8[20]._super;
  Val x30 = x8[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:369)
  Val x31 = ((((((x9 + (x10 * Val(2))) + (x11 * Val(4))) + (x12 * Val(8))) + (x13 * Val(16))) +
              (x14 * Val(32))) +
             (x15 * Val(64)));
  Val x32 =
      ((((((x31 + (x16 * Val(128))) + (x17 * Val(256))) + (x18 * Val(512))) + (x19 * Val(1024))) +
        (x20 * Val(2048))) +
       (x21 * Val(4096)));
  Val x33 = ((((((x32 + (x22 * Val(8192))) + (x23 * Val(16384))) + (x24 * Val(32768))) +
               (x25 * Val(65536))) +
              (x26 * Val(131072))) +
             (x27 * Val(262144)));
  EQZ(((((x33 + (x28 * Val(524288))) + (x29 * Val(1048576))) + (x30 * Val(2097152))) - x6),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:369)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:364)
  Val x34 = x5[22]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:372)
  ToBits_21_Struct x35 = exec_ToBits_21_(ctx, x34, LAYOUT_LOOKUP(layout2, unpackP2));
  NondetRegStruct21Array x36 = x35._super;
  Val x37 = x36[0]._super;
  Val x38 = x36[1]._super;
  Val x39 = x36[2]._super;
  Val x40 = x36[3]._super;
  Val x41 = x36[4]._super;
  Val x42 = x36[5]._super;
  Val x43 = x36[6]._super;
  Val x44 = x36[7]._super;
  Val x45 = x36[8]._super;
  Val x46 = x36[9]._super;
  Val x47 = x36[10]._super;
  Val x48 = x36[11]._super;
  Val x49 = x36[12]._super;
  Val x50 = x36[13]._super;
  Val x51 = x36[14]._super;
  Val x52 = x36[15]._super;
  Val x53 = x36[16]._super;
  Val x54 = x36[17]._super;
  Val x55 = x36[18]._super;
  Val x56 = x36[19]._super;
  Val x57 = x36[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:373)
  Val x58 = ((((((x37 + (x38 * Val(2))) + (x39 * Val(4))) + (x40 * Val(8))) + (x41 * Val(16))) +
              (x42 * Val(32))) +
             (x43 * Val(64)));
  Val x59 =
      ((((((x58 + (x44 * Val(128))) + (x45 * Val(256))) + (x46 * Val(512))) + (x47 * Val(1024))) +
        (x48 * Val(2048))) +
       (x49 * Val(4096)));
  Val x60 = ((((((x59 + (x50 * Val(8192))) + (x51 * Val(16384))) + (x52 * Val(32768))) +
               (x53 * Val(65536))) +
              (x54 * Val(131072))) +
             (x55 * Val(262144)));
  EQZ((((x60 + (x56 * Val(524288))) + (x57 * Val(1048576))) - x34),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:373)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:364)
  Val x61 = x5[23]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:376)
  ToBits_21_Struct x62 = exec_ToBits_21_(ctx, x61, LAYOUT_LOOKUP(layout2, unpackP3));
  NondetRegStruct21Array x63 = x62._super;
  Val x64 = x63[0]._super;
  Val x65 = x63[1]._super;
  Val x66 = x63[2]._super;
  Val x67 = x63[3]._super;
  Val x68 = x63[4]._super;
  Val x69 = x63[5]._super;
  Val x70 = x63[6]._super;
  Val x71 = x63[7]._super;
  Val x72 = x63[8]._super;
  Val x73 = x63[9]._super;
  Val x74 = x63[10]._super;
  Val x75 = x63[11]._super;
  Val x76 = x63[12]._super;
  Val x77 = x63[13]._super;
  Val x78 = x63[14]._super;
  Val x79 = x63[15]._super;
  Val x80 = x63[16]._super;
  Val x81 = x63[17]._super;
  Val x82 = x63[18]._super;
  Val x83 = x63[19]._super;
  Val x84 = x63[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:377)
  Val x85 = ((((((x64 + (x65 * Val(2))) + (x66 * Val(4))) + (x67 * Val(8))) + (x68 * Val(16))) +
              (x69 * Val(32))) +
             (x70 * Val(64)));
  Val x86 =
      ((((((x85 + (x71 * Val(128))) + (x72 * Val(256))) + (x73 * Val(512))) + (x74 * Val(1024))) +
        (x75 * Val(2048))) +
       (x76 * Val(4096)));
  Val x87 = ((((((x86 + (x77 * Val(8192))) + (x78 * Val(16384))) + (x79 * Val(32768))) +
               (x80 * Val(65536))) +
              (x81 * Val(131072))) +
             (x82 * Val(262144)));
  EQZ((((x87 + (x83 * Val(524288))) + (x84 * Val(1048576))) - x61),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:377)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:383)
  Val x88 = x5[3]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:390)
  ToBits_22_Struct x89 = exec_ToBits_22_(ctx, x88, LAYOUT_LOOKUP(layout2, unpackXy1));
  NondetRegStruct22Array x90 = x89._super;
  Val x91 = x90[0]._super;
  Val x92 = x90[1]._super;
  Val x93 = x90[2]._super;
  Val x94 = x90[3]._super;
  Val x95 = x90[4]._super;
  Val x96 = x90[5]._super;
  Val x97 = x90[6]._super;
  Val x98 = x90[7]._super;
  Val x99 = x90[8]._super;
  Val x100 = x90[9]._super;
  Val x101 = x90[10]._super;
  Val x102 = x90[11]._super;
  Val x103 = x90[12]._super;
  Val x104 = x90[13]._super;
  Val x105 = x90[14]._super;
  Val x106 = x90[15]._super;
  Val x107 = x90[16]._super;
  Val x108 = x90[17]._super;
  Val x109 = x90[18]._super;
  Val x110 = x90[19]._super;
  Val x111 = x90[20]._super;
  Val x112 = x90[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:391)
  Val x113 = ((((((x91 + (x92 * Val(2))) + (x93 * Val(4))) + (x94 * Val(8))) + (x95 * Val(16))) +
               (x96 * Val(32))) +
              (x97 * Val(64)));
  Val x114 = ((((((x113 + (x98 * Val(128))) + (x99 * Val(256))) + (x100 * Val(512))) +
                (x101 * Val(1024))) +
               (x102 * Val(2048))) +
              (x103 * Val(4096)));
  Val x115 = ((((((x114 + (x104 * Val(8192))) + (x105 * Val(16384))) + (x106 * Val(32768))) +
                (x107 * Val(65536))) +
               (x108 * Val(131072))) +
              (x109 * Val(262144)));
  EQZ(((((x115 + (x110 * Val(524288))) + (x111 * Val(1048576))) + (x112 * Val(2097152))) - x88),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:391)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:395)
  Val x116 = x5[4]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:402)
  ToBits_21_Struct x117 = exec_ToBits_21_(ctx, x116, LAYOUT_LOOKUP(layout2, unpackXy2));
  NondetRegStruct21Array x118 = x117._super;
  Val x119 = x118[0]._super;
  Val x120 = x118[1]._super;
  Val x121 = x118[2]._super;
  Val x122 = x118[3]._super;
  Val x123 = x118[4]._super;
  Val x124 = x118[5]._super;
  Val x125 = x118[6]._super;
  Val x126 = x118[7]._super;
  Val x127 = x118[8]._super;
  Val x128 = x118[9]._super;
  Val x129 = x118[10]._super;
  Val x130 = x118[11]._super;
  Val x131 = x118[12]._super;
  Val x132 = x118[13]._super;
  Val x133 = x118[14]._super;
  Val x134 = x118[15]._super;
  Val x135 = x118[16]._super;
  Val x136 = x118[17]._super;
  Val x137 = x118[18]._super;
  Val x138 = x118[19]._super;
  Val x139 = x118[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:403)
  Val x140 =
      ((((((x119 + (x120 * Val(2))) + (x121 * Val(4))) + (x122 * Val(8))) + (x123 * Val(16))) +
        (x124 * Val(32))) +
       (x125 * Val(64)));
  Val x141 = ((((((x140 + (x126 * Val(128))) + (x127 * Val(256))) + (x128 * Val(512))) +
                (x129 * Val(1024))) +
               (x130 * Val(2048))) +
              (x131 * Val(4096)));
  Val x142 = ((((((x141 + (x132 * Val(8192))) + (x133 * Val(16384))) + (x134 * Val(32768))) +
                (x135 * Val(65536))) +
               (x136 * Val(131072))) +
              (x137 * Val(262144)));
  EQZ((((x142 + (x138 * Val(524288))) + (x139 * Val(1048576))) - x116),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:403)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:407)
  Val x143 = x5[5]._super;
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:414)
  ToBits_21_Struct x144 = exec_ToBits_21_(ctx, x143, LAYOUT_LOOKUP(layout2, unpackXy3));
  NondetRegStruct21Array x145 = x144._super;
  Val x146 = x145[0]._super;
  Val x147 = x145[1]._super;
  Val x148 = x145[2]._super;
  Val x149 = x145[3]._super;
  Val x150 = x145[4]._super;
  Val x151 = x145[5]._super;
  Val x152 = x145[6]._super;
  Val x153 = x145[7]._super;
  Val x154 = x145[8]._super;
  Val x155 = x145[9]._super;
  Val x156 = x145[10]._super;
  Val x157 = x145[11]._super;
  Val x158 = x145[12]._super;
  Val x159 = x145[13]._super;
  Val x160 = x145[14]._super;
  Val x161 = x145[15]._super;
  Val x162 = x145[16]._super;
  Val x163 = x145[17]._super;
  Val x164 = x145[18]._super;
  Val x165 = x145[19]._super;
  Val x166 = x145[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:415)
  Val x167 =
      ((((((x146 + (x147 * Val(2))) + (x148 * Val(4))) + (x149 * Val(8))) + (x150 * Val(16))) +
        (x151 * Val(32))) +
       (x152 * Val(64)));
  Val x168 = ((((((x167 + (x153 * Val(128))) + (x154 * Val(256))) + (x155 * Val(512))) +
                (x156 * Val(1024))) +
               (x157 * Val(2048))) +
              (x158 * Val(4096)));
  Val x169 = ((((((x168 + (x159 * Val(8192))) + (x160 * Val(16384))) + (x161 * Val(32768))) +
                (x162 * Val(65536))) +
               (x163 * Val(131072))) +
              (x164 * Val(262144)));
  EQZ((((x169 + (x165 * Val(524288))) + (x166 * Val(1048576))) - x143),
      "rho_minor2(zirgen/circuit/keccak/keccak.zir:415)");
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  NondetRegStruct22Array x170 = x4.arrA;
  Val x171 = x170[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x172 = ((x91 * x171) + ((Val(1) - x91) * (Val(1) - x171)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x173 = x170[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x174 = ((x92 * x173) + ((Val(1) - x92) * (Val(1) - x173)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x175 = x170[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x176 = ((x93 * x175) + ((Val(1) - x93) * (Val(1) - x175)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x177 = x170[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x178 = ((x94 * x177) + ((Val(1) - x94) * (Val(1) - x177)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x179 = x170[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x180 = ((x95 * x179) + ((Val(1) - x95) * (Val(1) - x179)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x181 = x170[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x182 = ((x96 * x181) + ((Val(1) - x96) * (Val(1) - x181)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x183 = x170[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x184 = ((x97 * x183) + ((Val(1) - x97) * (Val(1) - x183)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x185 = x170[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x186 = ((x98 * x185) + ((Val(1) - x98) * (Val(1) - x185)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x187 = x170[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x188 = ((x99 * x187) + ((Val(1) - x99) * (Val(1) - x187)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x189 = x170[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x190 = ((x100 * x189) + ((Val(1) - x100) * (Val(1) - x189)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x191 = x170[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x192 = ((x101 * x191) + ((Val(1) - x101) * (Val(1) - x191)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x193 = x170[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x194 = ((x102 * x193) + ((Val(1) - x102) * (Val(1) - x193)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x195 = x170[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x196 = ((x103 * x195) + ((Val(1) - x103) * (Val(1) - x195)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x197 = x170[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x198 = ((x104 * x197) + ((Val(1) - x104) * (Val(1) - x197)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x199 = x170[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x200 = ((x105 * x199) + ((Val(1) - x105) * (Val(1) - x199)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x201 = x170[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x202 = ((x106 * x201) + ((Val(1) - x106) * (Val(1) - x201)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x203 = x170[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x204 = ((x107 * x203) + ((Val(1) - x107) * (Val(1) - x203)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x205 = x170[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x206 = ((x108 * x205) + ((Val(1) - x108) * (Val(1) - x205)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x207 = x170[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x208 = ((x109 * x207) + ((Val(1) - x109) * (Val(1) - x207)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x209 = x170[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x210 = ((x110 * x209) + ((Val(1) - x110) * (Val(1) - x209)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x211 = x170[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x212 = ((x111 * x211) + ((Val(1) - x111) * (Val(1) - x211)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x213 = x170[21]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:417)
  Val x214 = ((x112 * x213) + ((Val(1) - x112) * (Val(1) - x213)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  NondetRegStruct22Array x215 = x4.arrB;
  Val x216 = x215[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x217 = ((x119 * x216) + ((Val(1) - x119) * (Val(1) - x216)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x218 = x215[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x219 = ((x120 * x218) + ((Val(1) - x120) * (Val(1) - x218)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x220 = x215[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x221 = ((x121 * x220) + ((Val(1) - x121) * (Val(1) - x220)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x222 = x215[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x223 = ((x122 * x222) + ((Val(1) - x122) * (Val(1) - x222)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x224 = x215[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x225 = ((x123 * x224) + ((Val(1) - x123) * (Val(1) - x224)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x226 = x215[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x227 = ((x124 * x226) + ((Val(1) - x124) * (Val(1) - x226)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x228 = x215[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x229 = ((x125 * x228) + ((Val(1) - x125) * (Val(1) - x228)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x230 = x215[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x231 = ((x126 * x230) + ((Val(1) - x126) * (Val(1) - x230)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x232 = x215[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x233 = ((x127 * x232) + ((Val(1) - x127) * (Val(1) - x232)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x234 = x215[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x235 = ((x128 * x234) + ((Val(1) - x128) * (Val(1) - x234)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x236 = x215[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x237 = ((x129 * x236) + ((Val(1) - x129) * (Val(1) - x236)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x238 = x215[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x239 = ((x130 * x238) + ((Val(1) - x130) * (Val(1) - x238)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x240 = x215[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x241 = ((x131 * x240) + ((Val(1) - x131) * (Val(1) - x240)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x242 = x215[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x243 = ((x132 * x242) + ((Val(1) - x132) * (Val(1) - x242)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x244 = x215[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x245 = ((x133 * x244) + ((Val(1) - x133) * (Val(1) - x244)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x246 = x215[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x247 = ((x134 * x246) + ((Val(1) - x134) * (Val(1) - x246)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x248 = x215[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x249 = ((x135 * x248) + ((Val(1) - x135) * (Val(1) - x248)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x250 = x215[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x251 = ((x136 * x250) + ((Val(1) - x136) * (Val(1) - x250)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x252 = x215[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x253 = ((x137 * x252) + ((Val(1) - x137) * (Val(1) - x252)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x254 = x215[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x255 = ((x138 * x254) + ((Val(1) - x138) * (Val(1) - x254)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x256 = x215[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:418)
  Val x257 = ((x139 * x256) + ((Val(1) - x139) * (Val(1) - x256)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  NondetRegStruct22Array x258 = x4.arrC;
  Val x259 = x258[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x260 = ((x146 * x259) + ((Val(1) - x146) * (Val(1) - x259)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x261 = x258[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x262 = ((x147 * x261) + ((Val(1) - x147) * (Val(1) - x261)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x263 = x258[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x264 = ((x148 * x263) + ((Val(1) - x148) * (Val(1) - x263)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x265 = x258[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x266 = ((x149 * x265) + ((Val(1) - x149) * (Val(1) - x265)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x267 = x258[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x268 = ((x150 * x267) + ((Val(1) - x150) * (Val(1) - x267)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x269 = x258[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x270 = ((x151 * x269) + ((Val(1) - x151) * (Val(1) - x269)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x271 = x258[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x272 = ((x152 * x271) + ((Val(1) - x152) * (Val(1) - x271)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x273 = x258[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x274 = ((x153 * x273) + ((Val(1) - x153) * (Val(1) - x273)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x275 = x258[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x276 = ((x154 * x275) + ((Val(1) - x154) * (Val(1) - x275)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x277 = x258[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x278 = ((x155 * x277) + ((Val(1) - x155) * (Val(1) - x277)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x279 = x258[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x280 = ((x156 * x279) + ((Val(1) - x156) * (Val(1) - x279)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x281 = x258[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x282 = ((x157 * x281) + ((Val(1) - x157) * (Val(1) - x281)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x283 = x258[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x284 = ((x158 * x283) + ((Val(1) - x158) * (Val(1) - x283)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x285 = x258[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x286 = ((x159 * x285) + ((Val(1) - x159) * (Val(1) - x285)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x287 = x258[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x288 = ((x160 * x287) + ((Val(1) - x160) * (Val(1) - x287)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x289 = x258[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x290 = ((x161 * x289) + ((Val(1) - x161) * (Val(1) - x289)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x291 = x258[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x292 = ((x162 * x291) + ((Val(1) - x162) * (Val(1) - x291)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x293 = x258[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x294 = ((x163 * x293) + ((Val(1) - x163) * (Val(1) - x293)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x295 = x258[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x296 = ((x164 * x295) + ((Val(1) - x164) * (Val(1) - x295)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x297 = x258[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x298 = ((x165 * x297) + ((Val(1) - x165) * (Val(1) - x297)));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:365)
  Val x299 = x258[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:419)
  Val x300 = ((x166 * x299) + ((Val(1) - x166) * (Val(1) - x299)));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:422)
  Val x301 = (((x188 * x16) + ((Val(1) - x188) * (Val(1) - x16))) +
              (((x190 * x17) + ((Val(1) - x190) * (Val(1) - x17))) * Val(2)));
  Val x302 = ((x301 + (((x192 * x18) + ((Val(1) - x192) * (Val(1) - x18))) * Val(4))) +
              (((x194 * x19) + ((Val(1) - x194) * (Val(1) - x19))) * Val(8)));
  Val x303 = ((x302 + (((x196 * x20) + ((Val(1) - x196) * (Val(1) - x20))) * Val(16))) +
              (((x198 * x21) + ((Val(1) - x198) * (Val(1) - x21))) * Val(32)));
  Val x304 = ((x303 + (((x200 * x22) + ((Val(1) - x200) * (Val(1) - x22))) * Val(64))) +
              (((x202 * x23) + ((Val(1) - x202) * (Val(1) - x23))) * Val(128)));
  Val x305 = ((x304 + (((x204 * x24) + ((Val(1) - x204) * (Val(1) - x24))) * Val(256))) +
              (((x206 * x25) + ((Val(1) - x206) * (Val(1) - x25))) * Val(512)));
  Val x306 = ((x305 + (((x208 * x26) + ((Val(1) - x208) * (Val(1) - x26))) * Val(1024))) +
              (((x210 * x27) + ((Val(1) - x210) * (Val(1) - x27))) * Val(2048)));
  Val x307 = ((x306 + (((x212 * x28) + ((Val(1) - x212) * (Val(1) - x28))) * Val(4096))) +
              (((x214 * x29) + ((Val(1) - x214) * (Val(1) - x29))) * Val(8192)));
  Val x308 = ((x307 + (((x217 * x30) + ((Val(1) - x217) * (Val(1) - x30))) * Val(16384))) +
              (((x219 * x37) + ((Val(1) - x219) * (Val(1) - x37))) * Val(32768)));
  Val x309 = ((x308 + (((x221 * x38) + ((Val(1) - x221) * (Val(1) - x38))) * Val(65536))) +
              (((x223 * x39) + ((Val(1) - x223) * (Val(1) - x39))) * Val(131072)));
  Val x310 = ((x309 + (((x225 * x40) + ((Val(1) - x225) * (Val(1) - x40))) * Val(262144))) +
              (((x227 * x41) + ((Val(1) - x227) * (Val(1) - x41))) * Val(524288)));
  Val x311 = ((x310 + (((x229 * x42) + ((Val(1) - x229) * (Val(1) - x42))) * Val(1048576))) +
              (((x231 * x43) + ((Val(1) - x231) * (Val(1) - x43))) * Val(2097152)));
  NondetRegStruct x312 = exec_Reg(ctx, x311, LAYOUT_LOOKUP(layout2, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:423)
  Val x313 = (((x233 * x44) + ((Val(1) - x233) * (Val(1) - x44))) +
              (((x235 * x45) + ((Val(1) - x235) * (Val(1) - x45))) * Val(2)));
  Val x314 = ((x313 + (((x237 * x46) + ((Val(1) - x237) * (Val(1) - x46))) * Val(4))) +
              (((x239 * x47) + ((Val(1) - x239) * (Val(1) - x47))) * Val(8)));
  Val x315 = ((x314 + (((x241 * x48) + ((Val(1) - x241) * (Val(1) - x48))) * Val(16))) +
              (((x243 * x49) + ((Val(1) - x243) * (Val(1) - x49))) * Val(32)));
  Val x316 = ((x315 + (((x245 * x50) + ((Val(1) - x245) * (Val(1) - x50))) * Val(64))) +
              (((x247 * x51) + ((Val(1) - x247) * (Val(1) - x51))) * Val(128)));
  Val x317 = ((x316 + (((x249 * x52) + ((Val(1) - x249) * (Val(1) - x52))) * Val(256))) +
              (((x251 * x53) + ((Val(1) - x251) * (Val(1) - x53))) * Val(512)));
  Val x318 = ((x317 + (((x253 * x54) + ((Val(1) - x253) * (Val(1) - x54))) * Val(1024))) +
              (((x255 * x55) + ((Val(1) - x255) * (Val(1) - x55))) * Val(2048)));
  Val x319 = ((x318 + (((x257 * x56) + ((Val(1) - x257) * (Val(1) - x56))) * Val(4096))) +
              (((x260 * x57) + ((Val(1) - x260) * (Val(1) - x57))) * Val(8192)));
  Val x320 = ((x319 + (((x262 * x64) + ((Val(1) - x262) * (Val(1) - x64))) * Val(16384))) +
              (((x264 * x65) + ((Val(1) - x264) * (Val(1) - x65))) * Val(32768)));
  Val x321 = ((x320 + (((x266 * x66) + ((Val(1) - x266) * (Val(1) - x66))) * Val(65536))) +
              (((x268 * x67) + ((Val(1) - x268) * (Val(1) - x67))) * Val(131072)));
  Val x322 = ((x321 + (((x270 * x68) + ((Val(1) - x270) * (Val(1) - x68))) * Val(262144))) +
              (((x272 * x69) + ((Val(1) - x272) * (Val(1) - x69))) * Val(524288)));
  NondetRegStruct x323 =
      exec_Reg(ctx,
               (x322 + (((x274 * x70) + ((Val(1) - x274) * (Val(1) - x70))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _1));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:424)
  Val x324 = (((x276 * x71) + ((Val(1) - x276) * (Val(1) - x71))) +
              (((x278 * x72) + ((Val(1) - x278) * (Val(1) - x72))) * Val(2)));
  Val x325 = ((x324 + (((x280 * x73) + ((Val(1) - x280) * (Val(1) - x73))) * Val(4))) +
              (((x282 * x74) + ((Val(1) - x282) * (Val(1) - x74))) * Val(8)));
  Val x326 = ((x325 + (((x284 * x75) + ((Val(1) - x284) * (Val(1) - x75))) * Val(16))) +
              (((x286 * x76) + ((Val(1) - x286) * (Val(1) - x76))) * Val(32)));
  Val x327 = ((x326 + (((x288 * x77) + ((Val(1) - x288) * (Val(1) - x77))) * Val(64))) +
              (((x290 * x78) + ((Val(1) - x290) * (Val(1) - x78))) * Val(128)));
  Val x328 = ((x327 + (((x292 * x79) + ((Val(1) - x292) * (Val(1) - x79))) * Val(256))) +
              (((x294 * x80) + ((Val(1) - x294) * (Val(1) - x80))) * Val(512)));
  Val x329 = ((x328 + (((x296 * x81) + ((Val(1) - x296) * (Val(1) - x81))) * Val(1024))) +
              (((x298 * x82) + ((Val(1) - x298) * (Val(1) - x82))) * Val(2048)));
  Val x330 = ((x329 + (((x300 * x83) + ((Val(1) - x300) * (Val(1) - x83))) * Val(4096))) +
              (((x172 * x84) + ((Val(1) - x172) * (Val(1) - x84))) * Val(8192)));
  Val x331 = ((x330 + (((x174 * x9) + ((Val(1) - x174) * (Val(1) - x9))) * Val(16384))) +
              (((x176 * x10) + ((Val(1) - x176) * (Val(1) - x10))) * Val(32768)));
  Val x332 = ((x331 + (((x178 * x11) + ((Val(1) - x178) * (Val(1) - x11))) * Val(65536))) +
              (((x180 * x12) + ((Val(1) - x180) * (Val(1) - x12))) * Val(131072)));
  Val x333 = ((x332 + (((x182 * x13) + ((Val(1) - x182) * (Val(1) - x13))) * Val(262144))) +
              (((x184 * x14) + ((Val(1) - x184) * (Val(1) - x14))) * Val(524288)));
  NondetRegStruct x334 =
      exec_Reg(ctx,
               (x333 + (((x186 * x15) + ((Val(1) - x186) * (Val(1) - x15))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _2));
  // rho_minor2(zirgen/circuit/keccak/keccak.zir:427)
  Val22Array x335 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x336 = exec_RetTuple(
      ctx,
      x335,
      x335,
      x335,
      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
      x335,
      Val22Array{x312._super, x323._super, x334._super, Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0)},
      Val(6),
      Val(9),
      x4.rnd._super,
      x4.blk._super,
      x4.midx._super,
      LAYOUT_LOOKUP(layout2, _super));
  return x336;
}
RetTupleStruct execRhoMinor0_4__4_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<RhoMinor0_4__4_Layout> layout2) {
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  RetTupleStruct x3 = back_RetTuple(ctx, 7, arg1);
  NondetRegStruct24Array x4 = x3.arrD;
  Val x5 = x4[18]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:257)
  ToBits_22_Struct x6 = exec_ToBits_22_(ctx, x5, LAYOUT_LOOKUP(layout2, unpackM1));
  NondetRegStruct22Array x7 = x6._super;
  Val x8 = x7[0]._super;
  Val x9 = x7[1]._super;
  Val x10 = x7[2]._super;
  Val x11 = x7[3]._super;
  Val x12 = x7[4]._super;
  Val x13 = x7[5]._super;
  Val x14 = x7[6]._super;
  Val x15 = x7[7]._super;
  Val x16 = x7[8]._super;
  Val x17 = x7[9]._super;
  Val x18 = x7[10]._super;
  Val x19 = x7[11]._super;
  Val x20 = x7[12]._super;
  Val x21 = x7[13]._super;
  Val x22 = x7[14]._super;
  Val x23 = x7[15]._super;
  Val x24 = x7[16]._super;
  Val x25 = x7[17]._super;
  Val x26 = x7[18]._super;
  Val x27 = x7[19]._super;
  Val x28 = x7[20]._super;
  Val x29 = x7[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:258)
  Val x30 = ((((((x8 + (x9 * Val(2))) + (x10 * Val(4))) + (x11 * Val(8))) + (x12 * Val(16))) +
              (x13 * Val(32))) +
             (x14 * Val(64)));
  Val x31 =
      ((((((x30 + (x15 * Val(128))) + (x16 * Val(256))) + (x17 * Val(512))) + (x18 * Val(1024))) +
        (x19 * Val(2048))) +
       (x20 * Val(4096)));
  Val x32 = ((((((x31 + (x21 * Val(8192))) + (x22 * Val(16384))) + (x23 * Val(32768))) +
               (x24 * Val(65536))) +
              (x25 * Val(131072))) +
             (x26 * Val(262144)));
  EQZ(((((x32 + (x27 * Val(524288))) + (x28 * Val(1048576))) + (x29 * Val(2097152))) - x5),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:258)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x33 = x4[19]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:261)
  ToBits_21_Struct x34 = exec_ToBits_21_(ctx, x33, LAYOUT_LOOKUP(layout2, unpackM2));
  NondetRegStruct21Array x35 = x34._super;
  Val x36 = x35[0]._super;
  Val x37 = x35[1]._super;
  Val x38 = x35[2]._super;
  Val x39 = x35[3]._super;
  Val x40 = x35[4]._super;
  Val x41 = x35[5]._super;
  Val x42 = x35[6]._super;
  Val x43 = x35[7]._super;
  Val x44 = x35[8]._super;
  Val x45 = x35[9]._super;
  Val x46 = x35[10]._super;
  Val x47 = x35[11]._super;
  Val x48 = x35[12]._super;
  Val x49 = x35[13]._super;
  Val x50 = x35[14]._super;
  Val x51 = x35[15]._super;
  Val x52 = x35[16]._super;
  Val x53 = x35[17]._super;
  Val x54 = x35[18]._super;
  Val x55 = x35[19]._super;
  Val x56 = x35[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:262)
  Val x57 = ((((((x36 + (x37 * Val(2))) + (x38 * Val(4))) + (x39 * Val(8))) + (x40 * Val(16))) +
              (x41 * Val(32))) +
             (x42 * Val(64)));
  Val x58 =
      ((((((x57 + (x43 * Val(128))) + (x44 * Val(256))) + (x45 * Val(512))) + (x46 * Val(1024))) +
        (x47 * Val(2048))) +
       (x48 * Val(4096)));
  Val x59 = ((((((x58 + (x49 * Val(8192))) + (x50 * Val(16384))) + (x51 * Val(32768))) +
               (x52 * Val(65536))) +
              (x53 * Val(131072))) +
             (x54 * Val(262144)));
  EQZ((((x59 + (x55 * Val(524288))) + (x56 * Val(1048576))) - x33),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:262)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x60 = x4[20]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:266)
  ToBits_21_Struct x61 = exec_ToBits_21_(ctx, x60, LAYOUT_LOOKUP(layout2, unpackM3));
  NondetRegStruct21Array x62 = x61._super;
  Val x63 = x62[0]._super;
  Val x64 = x62[1]._super;
  Val x65 = x62[2]._super;
  Val x66 = x62[3]._super;
  Val x67 = x62[4]._super;
  Val x68 = x62[5]._super;
  Val x69 = x62[6]._super;
  Val x70 = x62[7]._super;
  Val x71 = x62[8]._super;
  Val x72 = x62[9]._super;
  Val x73 = x62[10]._super;
  Val x74 = x62[11]._super;
  Val x75 = x62[12]._super;
  Val x76 = x62[13]._super;
  Val x77 = x62[14]._super;
  Val x78 = x62[15]._super;
  Val x79 = x62[16]._super;
  Val x80 = x62[17]._super;
  Val x81 = x62[18]._super;
  Val x82 = x62[19]._super;
  Val x83 = x62[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:267)
  Val x84 = ((((((x63 + (x64 * Val(2))) + (x65 * Val(4))) + (x66 * Val(8))) + (x67 * Val(16))) +
              (x68 * Val(32))) +
             (x69 * Val(64)));
  Val x85 =
      ((((((x84 + (x70 * Val(128))) + (x71 * Val(256))) + (x72 * Val(512))) + (x73 * Val(1024))) +
        (x74 * Val(2048))) +
       (x75 * Val(4096)));
  Val x86 = ((((((x85 + (x76 * Val(8192))) + (x77 * Val(16384))) + (x78 * Val(32768))) +
               (x79 * Val(65536))) +
              (x80 * Val(131072))) +
             (x81 * Val(262144)));
  EQZ((((x86 + (x82 * Val(524288))) + (x83 * Val(1048576))) - x60),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:267)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x87 = x4[9]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:271)
  ToBits_22_Struct x88 = exec_ToBits_22_(ctx, x87, LAYOUT_LOOKUP(layout2, unpackP1));
  NondetRegStruct22Array x89 = x88._super;
  Val x90 = x89[0]._super;
  Val x91 = x89[1]._super;
  Val x92 = x89[2]._super;
  Val x93 = x89[3]._super;
  Val x94 = x89[4]._super;
  Val x95 = x89[5]._super;
  Val x96 = x89[6]._super;
  Val x97 = x89[7]._super;
  Val x98 = x89[8]._super;
  Val x99 = x89[9]._super;
  Val x100 = x89[10]._super;
  Val x101 = x89[11]._super;
  Val x102 = x89[12]._super;
  Val x103 = x89[13]._super;
  Val x104 = x89[14]._super;
  Val x105 = x89[15]._super;
  Val x106 = x89[16]._super;
  Val x107 = x89[17]._super;
  Val x108 = x89[18]._super;
  Val x109 = x89[19]._super;
  Val x110 = x89[20]._super;
  Val x111 = x89[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:272)
  Val x112 = ((((((x90 + (x91 * Val(2))) + (x92 * Val(4))) + (x93 * Val(8))) + (x94 * Val(16))) +
               (x95 * Val(32))) +
              (x96 * Val(64)));
  Val x113 =
      ((((((x112 + (x97 * Val(128))) + (x98 * Val(256))) + (x99 * Val(512))) + (x100 * Val(1024))) +
        (x101 * Val(2048))) +
       (x102 * Val(4096)));
  Val x114 = ((((((x113 + (x103 * Val(8192))) + (x104 * Val(16384))) + (x105 * Val(32768))) +
                (x106 * Val(65536))) +
               (x107 * Val(131072))) +
              (x108 * Val(262144)));
  EQZ(((((x114 + (x109 * Val(524288))) + (x110 * Val(1048576))) + (x111 * Val(2097152))) - x87),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:272)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x115 = x4[10]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:275)
  ToBits_21_Struct x116 = exec_ToBits_21_(ctx, x115, LAYOUT_LOOKUP(layout2, unpackP2));
  NondetRegStruct21Array x117 = x116._super;
  Val x118 = x117[0]._super;
  Val x119 = x117[1]._super;
  Val x120 = x117[2]._super;
  Val x121 = x117[3]._super;
  Val x122 = x117[4]._super;
  Val x123 = x117[5]._super;
  Val x124 = x117[6]._super;
  Val x125 = x117[7]._super;
  Val x126 = x117[8]._super;
  Val x127 = x117[9]._super;
  Val x128 = x117[10]._super;
  Val x129 = x117[11]._super;
  Val x130 = x117[12]._super;
  Val x131 = x117[13]._super;
  Val x132 = x117[14]._super;
  Val x133 = x117[15]._super;
  Val x134 = x117[16]._super;
  Val x135 = x117[17]._super;
  Val x136 = x117[18]._super;
  Val x137 = x117[19]._super;
  Val x138 = x117[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:276)
  Val x139 =
      ((((((x118 + (x119 * Val(2))) + (x120 * Val(4))) + (x121 * Val(8))) + (x122 * Val(16))) +
        (x123 * Val(32))) +
       (x124 * Val(64)));
  Val x140 = ((((((x139 + (x125 * Val(128))) + (x126 * Val(256))) + (x127 * Val(512))) +
                (x128 * Val(1024))) +
               (x129 * Val(2048))) +
              (x130 * Val(4096)));
  Val x141 = ((((((x140 + (x131 * Val(8192))) + (x132 * Val(16384))) + (x133 * Val(32768))) +
                (x134 * Val(65536))) +
               (x135 * Val(131072))) +
              (x136 * Val(262144)));
  EQZ((((x141 + (x137 * Val(524288))) + (x138 * Val(1048576))) - x115),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:276)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:253)
  Val x142 = x4[11]._super;
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:279)
  ToBits_21_Struct x143 = exec_ToBits_21_(ctx, x142, LAYOUT_LOOKUP(layout2, unpackP3));
  NondetRegStruct21Array x144 = x143._super;
  Val x145 = x144[0]._super;
  Val x146 = x144[1]._super;
  Val x147 = x144[2]._super;
  Val x148 = x144[3]._super;
  Val x149 = x144[4]._super;
  Val x150 = x144[5]._super;
  Val x151 = x144[6]._super;
  Val x152 = x144[7]._super;
  Val x153 = x144[8]._super;
  Val x154 = x144[9]._super;
  Val x155 = x144[10]._super;
  Val x156 = x144[11]._super;
  Val x157 = x144[12]._super;
  Val x158 = x144[13]._super;
  Val x159 = x144[14]._super;
  Val x160 = x144[15]._super;
  Val x161 = x144[16]._super;
  Val x162 = x144[17]._super;
  Val x163 = x144[18]._super;
  Val x164 = x144[19]._super;
  Val x165 = x144[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:280)
  Val x166 =
      ((((((x145 + (x146 * Val(2))) + (x147 * Val(4))) + (x148 * Val(8))) + (x149 * Val(16))) +
        (x150 * Val(32))) +
       (x151 * Val(64)));
  Val x167 = ((((((x166 + (x152 * Val(128))) + (x153 * Val(256))) + (x154 * Val(512))) +
                (x155 * Val(1024))) +
               (x156 * Val(2048))) +
              (x157 * Val(4096)));
  Val x168 = ((((((x167 + (x158 * Val(8192))) + (x159 * Val(16384))) + (x160 * Val(32768))) +
                (x161 * Val(65536))) +
               (x162 * Val(131072))) +
              (x163 * Val(262144)));
  EQZ((((x168 + (x164 * Val(524288))) + (x165 * Val(1048576))) - x142),
      "rho_minor0(zirgen/circuit/keccak/keccak.zir:280)");
  // rho_minor0(zirgen/circuit/keccak/keccak.zir:287)
  RetTupleStruct x169 =
      exec_RetTuple(ctx,
                    Val22Array{x165, x90,  x91,  x92,  x93,  x94,  x95,  x96,  x97,  x98,  x99,
                               x100, x101, x102, x103, x104, x105, x106, x107, x108, x109, x110},
                    Val22Array{x111, x118, x119, x120, x121, x122, x123, x124, x125, x126, x127,
                               x128, x129, x130, x131, x132, x133, x134, x135, x136, x137, Val(0)},
                    Val22Array{x138, x145, x146, x147, x148, x149, x150, x151, x152, x153, x154,
                               x155, x156, x157, x158, x159, x160, x161, x162, x163, x164, Val(0)},
                    Val24Array{x8,  x9,  x10, x11, x12, x13, x14, x15, x16, x17, x18,    x19,
                               x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, Val(0), Val(0)},
                    Val22Array{x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46,
                               x47, x48, x49, x50, x51, x52, x53, x54, x55, x56, Val(0)},
                    Val22Array{x63, x64, x65, x66, x67, x68, x69, x70, x71, x72, x73,
                               x74, x75, x76, x77, x78, x79, x80, x81, x82, x83, Val(0)},
                    Val(7),
                    Val(9),
                    x3.rnd._super,
                    x3.blk._super,
                    x3.midx._super,
                    LAYOUT_LOOKUP(layout2, _super));
  return x169;
}
RetTupleStruct execRhoMinor1_4__4_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<RhoMinor1_4__4_Layout> layout2) {
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:341)
  BoundLayout<RhoMinor1_4__4__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:292)
  RetTupleStruct x4 = back_RetTuple(ctx, 8, arg1);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  RetTupleStruct x5 = back_RetTuple(ctx, 1, arg1);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:292)
  NondetRegStruct24Array x6 = x4.arrD;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:297)
  Val x7 = x6[6]._super;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:304)
  ToBits_22_Struct x8 = exec_ToBits_22_(ctx, x7, LAYOUT_LOOKUP(layout2, unpackXy1));
  NondetRegStruct22Array x9 = x8._super;
  Val x10 = x9[0]._super;
  Val x11 = x9[1]._super;
  Val x12 = x9[2]._super;
  Val x13 = x9[3]._super;
  Val x14 = x9[4]._super;
  Val x15 = x9[5]._super;
  Val x16 = x9[6]._super;
  Val x17 = x9[7]._super;
  Val x18 = x9[8]._super;
  Val x19 = x9[9]._super;
  Val x20 = x9[10]._super;
  Val x21 = x9[11]._super;
  Val x22 = x9[12]._super;
  Val x23 = x9[13]._super;
  Val x24 = x9[14]._super;
  Val x25 = x9[15]._super;
  Val x26 = x9[16]._super;
  Val x27 = x9[17]._super;
  Val x28 = x9[18]._super;
  Val x29 = x9[19]._super;
  Val x30 = x9[20]._super;
  Val x31 = x9[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:305)
  Val x32 = ((((((x10 + (x11 * Val(2))) + (x12 * Val(4))) + (x13 * Val(8))) + (x14 * Val(16))) +
              (x15 * Val(32))) +
             (x16 * Val(64)));
  Val x33 =
      ((((((x32 + (x17 * Val(128))) + (x18 * Val(256))) + (x19 * Val(512))) + (x20 * Val(1024))) +
        (x21 * Val(2048))) +
       (x22 * Val(4096)));
  Val x34 = ((((((x33 + (x23 * Val(8192))) + (x24 * Val(16384))) + (x25 * Val(32768))) +
               (x26 * Val(65536))) +
              (x27 * Val(131072))) +
             (x28 * Val(262144)));
  EQZ(((((x34 + (x29 * Val(524288))) + (x30 * Val(1048576))) + (x31 * Val(2097152))) - x7),
      "rho_minor1(zirgen/circuit/keccak/keccak.zir:305)");
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:309)
  Val x35 = x6[7]._super;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:316)
  ToBits_21_Struct x36 = exec_ToBits_21_(ctx, x35, LAYOUT_LOOKUP(layout2, unpackXy2));
  NondetRegStruct21Array x37 = x36._super;
  Val x38 = x37[0]._super;
  Val x39 = x37[1]._super;
  Val x40 = x37[2]._super;
  Val x41 = x37[3]._super;
  Val x42 = x37[4]._super;
  Val x43 = x37[5]._super;
  Val x44 = x37[6]._super;
  Val x45 = x37[7]._super;
  Val x46 = x37[8]._super;
  Val x47 = x37[9]._super;
  Val x48 = x37[10]._super;
  Val x49 = x37[11]._super;
  Val x50 = x37[12]._super;
  Val x51 = x37[13]._super;
  Val x52 = x37[14]._super;
  Val x53 = x37[15]._super;
  Val x54 = x37[16]._super;
  Val x55 = x37[17]._super;
  Val x56 = x37[18]._super;
  Val x57 = x37[19]._super;
  Val x58 = x37[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:317)
  Val x59 = ((((((x38 + (x39 * Val(2))) + (x40 * Val(4))) + (x41 * Val(8))) + (x42 * Val(16))) +
              (x43 * Val(32))) +
             (x44 * Val(64)));
  Val x60 =
      ((((((x59 + (x45 * Val(128))) + (x46 * Val(256))) + (x47 * Val(512))) + (x48 * Val(1024))) +
        (x49 * Val(2048))) +
       (x50 * Val(4096)));
  Val x61 = ((((((x60 + (x51 * Val(8192))) + (x52 * Val(16384))) + (x53 * Val(32768))) +
               (x54 * Val(65536))) +
              (x55 * Val(131072))) +
             (x56 * Val(262144)));
  EQZ((((x61 + (x57 * Val(524288))) + (x58 * Val(1048576))) - x35),
      "rho_minor1(zirgen/circuit/keccak/keccak.zir:317)");
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:321)
  Val x62 = x6[8]._super;
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:328)
  ToBits_21_Struct x63 = exec_ToBits_21_(ctx, x62, LAYOUT_LOOKUP(layout2, unpackXy3));
  NondetRegStruct21Array x64 = x63._super;
  Val x65 = x64[0]._super;
  Val x66 = x64[1]._super;
  Val x67 = x64[2]._super;
  Val x68 = x64[3]._super;
  Val x69 = x64[4]._super;
  Val x70 = x64[5]._super;
  Val x71 = x64[6]._super;
  Val x72 = x64[7]._super;
  Val x73 = x64[8]._super;
  Val x74 = x64[9]._super;
  Val x75 = x64[10]._super;
  Val x76 = x64[11]._super;
  Val x77 = x64[12]._super;
  Val x78 = x64[13]._super;
  Val x79 = x64[14]._super;
  Val x80 = x64[15]._super;
  Val x81 = x64[16]._super;
  Val x82 = x64[17]._super;
  Val x83 = x64[18]._super;
  Val x84 = x64[19]._super;
  Val x85 = x64[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:329)
  Val x86 = ((((((x65 + (x66 * Val(2))) + (x67 * Val(4))) + (x68 * Val(8))) + (x69 * Val(16))) +
              (x70 * Val(32))) +
             (x71 * Val(64)));
  Val x87 =
      ((((((x86 + (x72 * Val(128))) + (x73 * Val(256))) + (x74 * Val(512))) + (x75 * Val(1024))) +
        (x76 * Val(2048))) +
       (x77 * Val(4096)));
  Val x88 = ((((((x87 + (x78 * Val(8192))) + (x79 * Val(16384))) + (x80 * Val(32768))) +
               (x81 * Val(65536))) +
              (x82 * Val(131072))) +
             (x83 * Val(262144)));
  EQZ((((x88 + (x84 * Val(524288))) + (x85 * Val(1048576))) - x62),
      "rho_minor1(zirgen/circuit/keccak/keccak.zir:329)");
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  NondetRegStruct22Array x89 = x5.arrA;
  NondetRegStruct24Array x90 = x5.arrD;
  Val x91 = x89[0]._super;
  Val x92 = x90[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x93 = ((x10 * x91) + ((Val(1) - x10) * (Val(1) - x91)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x94 = x89[1]._super;
  Val x95 = x90[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x96 = ((x11 * x94) + ((Val(1) - x11) * (Val(1) - x94)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x97 = x89[2]._super;
  Val x98 = x90[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x99 = ((x12 * x97) + ((Val(1) - x12) * (Val(1) - x97)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x100 = x89[3]._super;
  Val x101 = x90[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x102 = ((x13 * x100) + ((Val(1) - x13) * (Val(1) - x100)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x103 = x89[4]._super;
  Val x104 = x90[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x105 = ((x14 * x103) + ((Val(1) - x14) * (Val(1) - x103)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x106 = x89[5]._super;
  Val x107 = x90[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x108 = ((x15 * x106) + ((Val(1) - x15) * (Val(1) - x106)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x109 = x89[6]._super;
  Val x110 = x90[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x111 = ((x16 * x109) + ((Val(1) - x16) * (Val(1) - x109)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x112 = x89[7]._super;
  Val x113 = x90[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x114 = ((x17 * x112) + ((Val(1) - x17) * (Val(1) - x112)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x115 = x89[8]._super;
  Val x116 = x90[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x117 = ((x18 * x115) + ((Val(1) - x18) * (Val(1) - x115)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x118 = x89[9]._super;
  Val x119 = x90[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x120 = ((x19 * x118) + ((Val(1) - x19) * (Val(1) - x118)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x121 = x89[10]._super;
  Val x122 = x90[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x123 = ((x20 * x121) + ((Val(1) - x20) * (Val(1) - x121)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x124 = x89[11]._super;
  Val x125 = x90[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x126 = ((x21 * x124) + ((Val(1) - x21) * (Val(1) - x124)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x127 = x89[12]._super;
  Val x128 = x90[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x129 = ((x22 * x127) + ((Val(1) - x22) * (Val(1) - x127)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x130 = x89[13]._super;
  Val x131 = x90[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x132 = ((x23 * x130) + ((Val(1) - x23) * (Val(1) - x130)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x133 = x89[14]._super;
  Val x134 = x90[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x135 = ((x24 * x133) + ((Val(1) - x24) * (Val(1) - x133)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x136 = x89[15]._super;
  Val x137 = x90[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x138 = ((x25 * x136) + ((Val(1) - x25) * (Val(1) - x136)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x139 = x89[16]._super;
  Val x140 = x90[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x141 = ((x26 * x139) + ((Val(1) - x26) * (Val(1) - x139)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x142 = x89[17]._super;
  Val x143 = x90[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x144 = ((x27 * x142) + ((Val(1) - x27) * (Val(1) - x142)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x145 = x89[18]._super;
  Val x146 = x90[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x147 = ((x28 * x145) + ((Val(1) - x28) * (Val(1) - x145)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x148 = x89[19]._super;
  Val x149 = x90[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x150 = ((x29 * x148) + ((Val(1) - x29) * (Val(1) - x148)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x151 = x89[20]._super;
  Val x152 = x90[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x153 = ((x30 * x151) + ((Val(1) - x30) * (Val(1) - x151)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x154 = x89[21]._super;
  Val x155 = x90[21]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:331)
  Val x156 = ((x31 * x154) + ((Val(1) - x31) * (Val(1) - x154)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  NondetRegStruct22Array x157 = x5.arrB;
  NondetRegStruct22Array x158 = x5.arrE;
  Val x159 = x157[0]._super;
  Val x160 = x158[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x161 = ((x38 * x159) + ((Val(1) - x38) * (Val(1) - x159)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x162 = x157[1]._super;
  Val x163 = x158[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x164 = ((x39 * x162) + ((Val(1) - x39) * (Val(1) - x162)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x165 = x157[2]._super;
  Val x166 = x158[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x167 = ((x40 * x165) + ((Val(1) - x40) * (Val(1) - x165)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x168 = x157[3]._super;
  Val x169 = x158[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x170 = ((x41 * x168) + ((Val(1) - x41) * (Val(1) - x168)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x171 = x157[4]._super;
  Val x172 = x158[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x173 = ((x42 * x171) + ((Val(1) - x42) * (Val(1) - x171)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x174 = x157[5]._super;
  Val x175 = x158[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x176 = ((x43 * x174) + ((Val(1) - x43) * (Val(1) - x174)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x177 = x157[6]._super;
  Val x178 = x158[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x179 = ((x44 * x177) + ((Val(1) - x44) * (Val(1) - x177)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x180 = x157[7]._super;
  Val x181 = x158[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x182 = ((x45 * x180) + ((Val(1) - x45) * (Val(1) - x180)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x183 = x157[8]._super;
  Val x184 = x158[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x185 = ((x46 * x183) + ((Val(1) - x46) * (Val(1) - x183)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x186 = x157[9]._super;
  Val x187 = x158[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x188 = ((x47 * x186) + ((Val(1) - x47) * (Val(1) - x186)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x189 = x157[10]._super;
  Val x190 = x158[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x191 = ((x48 * x189) + ((Val(1) - x48) * (Val(1) - x189)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x192 = x157[11]._super;
  Val x193 = x158[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x194 = ((x49 * x192) + ((Val(1) - x49) * (Val(1) - x192)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x195 = x157[12]._super;
  Val x196 = x158[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x197 = ((x50 * x195) + ((Val(1) - x50) * (Val(1) - x195)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x198 = x157[13]._super;
  Val x199 = x158[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x200 = ((x51 * x198) + ((Val(1) - x51) * (Val(1) - x198)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x201 = x157[14]._super;
  Val x202 = x158[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x203 = ((x52 * x201) + ((Val(1) - x52) * (Val(1) - x201)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x204 = x157[15]._super;
  Val x205 = x158[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x206 = ((x53 * x204) + ((Val(1) - x53) * (Val(1) - x204)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x207 = x157[16]._super;
  Val x208 = x158[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x209 = ((x54 * x207) + ((Val(1) - x54) * (Val(1) - x207)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x210 = x157[17]._super;
  Val x211 = x158[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x212 = ((x55 * x210) + ((Val(1) - x55) * (Val(1) - x210)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x213 = x157[18]._super;
  Val x214 = x158[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x215 = ((x56 * x213) + ((Val(1) - x56) * (Val(1) - x213)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x216 = x157[19]._super;
  Val x217 = x158[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x218 = ((x57 * x216) + ((Val(1) - x57) * (Val(1) - x216)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x219 = x157[20]._super;
  Val x220 = x158[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:332)
  Val x221 = ((x58 * x219) + ((Val(1) - x58) * (Val(1) - x219)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  NondetRegStruct22Array x222 = x5.arrC;
  NondetRegStruct22Array x223 = x5.arrF;
  Val x224 = x222[0]._super;
  Val x225 = x223[0]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x226 = ((x65 * x224) + ((Val(1) - x65) * (Val(1) - x224)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x227 = x222[1]._super;
  Val x228 = x223[1]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x229 = ((x66 * x227) + ((Val(1) - x66) * (Val(1) - x227)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x230 = x222[2]._super;
  Val x231 = x223[2]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x232 = ((x67 * x230) + ((Val(1) - x67) * (Val(1) - x230)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x233 = x222[3]._super;
  Val x234 = x223[3]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x235 = ((x68 * x233) + ((Val(1) - x68) * (Val(1) - x233)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x236 = x222[4]._super;
  Val x237 = x223[4]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x238 = ((x69 * x236) + ((Val(1) - x69) * (Val(1) - x236)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x239 = x222[5]._super;
  Val x240 = x223[5]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x241 = ((x70 * x239) + ((Val(1) - x70) * (Val(1) - x239)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x242 = x222[6]._super;
  Val x243 = x223[6]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x244 = ((x71 * x242) + ((Val(1) - x71) * (Val(1) - x242)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x245 = x222[7]._super;
  Val x246 = x223[7]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x247 = ((x72 * x245) + ((Val(1) - x72) * (Val(1) - x245)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x248 = x222[8]._super;
  Val x249 = x223[8]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x250 = ((x73 * x248) + ((Val(1) - x73) * (Val(1) - x248)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x251 = x222[9]._super;
  Val x252 = x223[9]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x253 = ((x74 * x251) + ((Val(1) - x74) * (Val(1) - x251)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x254 = x222[10]._super;
  Val x255 = x223[10]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x256 = ((x75 * x254) + ((Val(1) - x75) * (Val(1) - x254)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x257 = x222[11]._super;
  Val x258 = x223[11]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x259 = ((x76 * x257) + ((Val(1) - x76) * (Val(1) - x257)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x260 = x222[12]._super;
  Val x261 = x223[12]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x262 = ((x77 * x260) + ((Val(1) - x77) * (Val(1) - x260)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x263 = x222[13]._super;
  Val x264 = x223[13]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x265 = ((x78 * x263) + ((Val(1) - x78) * (Val(1) - x263)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x266 = x222[14]._super;
  Val x267 = x223[14]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x268 = ((x79 * x266) + ((Val(1) - x79) * (Val(1) - x266)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x269 = x222[15]._super;
  Val x270 = x223[15]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x271 = ((x80 * x269) + ((Val(1) - x80) * (Val(1) - x269)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x272 = x222[16]._super;
  Val x273 = x223[16]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x274 = ((x81 * x272) + ((Val(1) - x81) * (Val(1) - x272)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x275 = x222[17]._super;
  Val x276 = x223[17]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x277 = ((x82 * x275) + ((Val(1) - x82) * (Val(1) - x275)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x278 = x222[18]._super;
  Val x279 = x223[18]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x280 = ((x83 * x278) + ((Val(1) - x83) * (Val(1) - x278)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x281 = x222[19]._super;
  Val x282 = x223[19]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x283 = ((x84 * x281) + ((Val(1) - x84) * (Val(1) - x281)));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x284 = x222[20]._super;
  Val x285 = x223[20]._super;
  // xor3(zirgen/circuit/keccak/keccak.zir:110)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:333)
  Val x286 = ((x85 * x284) + ((Val(1) - x85) * (Val(1) - x284)));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:336)
  Val x287 = (((x247 * x246) + ((Val(1) - x247) * (Val(1) - x246))) +
              (((x250 * x249) + ((Val(1) - x250) * (Val(1) - x249))) * Val(2)));
  Val x288 = ((x287 + (((x253 * x252) + ((Val(1) - x253) * (Val(1) - x252))) * Val(4))) +
              (((x256 * x255) + ((Val(1) - x256) * (Val(1) - x255))) * Val(8)));
  Val x289 = ((x288 + (((x259 * x258) + ((Val(1) - x259) * (Val(1) - x258))) * Val(16))) +
              (((x262 * x261) + ((Val(1) - x262) * (Val(1) - x261))) * Val(32)));
  Val x290 = ((x289 + (((x265 * x264) + ((Val(1) - x265) * (Val(1) - x264))) * Val(64))) +
              (((x268 * x267) + ((Val(1) - x268) * (Val(1) - x267))) * Val(128)));
  Val x291 = ((x290 + (((x271 * x270) + ((Val(1) - x271) * (Val(1) - x270))) * Val(256))) +
              (((x274 * x273) + ((Val(1) - x274) * (Val(1) - x273))) * Val(512)));
  Val x292 = ((x291 + (((x277 * x276) + ((Val(1) - x277) * (Val(1) - x276))) * Val(1024))) +
              (((x280 * x279) + ((Val(1) - x280) * (Val(1) - x279))) * Val(2048)));
  Val x293 = ((x292 + (((x283 * x282) + ((Val(1) - x283) * (Val(1) - x282))) * Val(4096))) +
              (((x286 * x285) + ((Val(1) - x286) * (Val(1) - x285))) * Val(8192)));
  Val x294 = ((x293 + (((x93 * x92) + ((Val(1) - x93) * (Val(1) - x92))) * Val(16384))) +
              (((x96 * x95) + ((Val(1) - x96) * (Val(1) - x95))) * Val(32768)));
  Val x295 = ((x294 + (((x99 * x98) + ((Val(1) - x99) * (Val(1) - x98))) * Val(65536))) +
              (((x102 * x101) + ((Val(1) - x102) * (Val(1) - x101))) * Val(131072)));
  Val x296 = ((x295 + (((x105 * x104) + ((Val(1) - x105) * (Val(1) - x104))) * Val(262144))) +
              (((x108 * x107) + ((Val(1) - x108) * (Val(1) - x107))) * Val(524288)));
  Val x297 = ((x296 + (((x111 * x110) + ((Val(1) - x111) * (Val(1) - x110))) * Val(1048576))) +
              (((x114 * x113) + ((Val(1) - x114) * (Val(1) - x113))) * Val(2097152)));
  NondetRegStruct x298 = exec_Reg(ctx, x297, LAYOUT_LOOKUP(layout2, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:337)
  Val x299 = (((x117 * x116) + ((Val(1) - x117) * (Val(1) - x116))) +
              (((x120 * x119) + ((Val(1) - x120) * (Val(1) - x119))) * Val(2)));
  Val x300 = ((x299 + (((x123 * x122) + ((Val(1) - x123) * (Val(1) - x122))) * Val(4))) +
              (((x126 * x125) + ((Val(1) - x126) * (Val(1) - x125))) * Val(8)));
  Val x301 = ((x300 + (((x129 * x128) + ((Val(1) - x129) * (Val(1) - x128))) * Val(16))) +
              (((x132 * x131) + ((Val(1) - x132) * (Val(1) - x131))) * Val(32)));
  Val x302 = ((x301 + (((x135 * x134) + ((Val(1) - x135) * (Val(1) - x134))) * Val(64))) +
              (((x138 * x137) + ((Val(1) - x138) * (Val(1) - x137))) * Val(128)));
  Val x303 = ((x302 + (((x141 * x140) + ((Val(1) - x141) * (Val(1) - x140))) * Val(256))) +
              (((x144 * x143) + ((Val(1) - x144) * (Val(1) - x143))) * Val(512)));
  Val x304 = ((x303 + (((x147 * x146) + ((Val(1) - x147) * (Val(1) - x146))) * Val(1024))) +
              (((x150 * x149) + ((Val(1) - x150) * (Val(1) - x149))) * Val(2048)));
  Val x305 = ((x304 + (((x153 * x152) + ((Val(1) - x153) * (Val(1) - x152))) * Val(4096))) +
              (((x156 * x155) + ((Val(1) - x156) * (Val(1) - x155))) * Val(8192)));
  Val x306 = ((x305 + (((x161 * x160) + ((Val(1) - x161) * (Val(1) - x160))) * Val(16384))) +
              (((x164 * x163) + ((Val(1) - x164) * (Val(1) - x163))) * Val(32768)));
  Val x307 = ((x306 + (((x167 * x166) + ((Val(1) - x167) * (Val(1) - x166))) * Val(65536))) +
              (((x170 * x169) + ((Val(1) - x170) * (Val(1) - x169))) * Val(131072)));
  Val x308 = ((x307 + (((x173 * x172) + ((Val(1) - x173) * (Val(1) - x172))) * Val(262144))) +
              (((x176 * x175) + ((Val(1) - x176) * (Val(1) - x175))) * Val(524288)));
  NondetRegStruct x309 =
      exec_Reg(ctx,
               (x308 + (((x179 * x178) + ((Val(1) - x179) * (Val(1) - x178))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _1));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:338)
  Val x310 = (((x182 * x181) + ((Val(1) - x182) * (Val(1) - x181))) +
              (((x185 * x184) + ((Val(1) - x185) * (Val(1) - x184))) * Val(2)));
  Val x311 = ((x310 + (((x188 * x187) + ((Val(1) - x188) * (Val(1) - x187))) * Val(4))) +
              (((x191 * x190) + ((Val(1) - x191) * (Val(1) - x190))) * Val(8)));
  Val x312 = ((x311 + (((x194 * x193) + ((Val(1) - x194) * (Val(1) - x193))) * Val(16))) +
              (((x197 * x196) + ((Val(1) - x197) * (Val(1) - x196))) * Val(32)));
  Val x313 = ((x312 + (((x200 * x199) + ((Val(1) - x200) * (Val(1) - x199))) * Val(64))) +
              (((x203 * x202) + ((Val(1) - x203) * (Val(1) - x202))) * Val(128)));
  Val x314 = ((x313 + (((x206 * x205) + ((Val(1) - x206) * (Val(1) - x205))) * Val(256))) +
              (((x209 * x208) + ((Val(1) - x209) * (Val(1) - x208))) * Val(512)));
  Val x315 = ((x314 + (((x212 * x211) + ((Val(1) - x212) * (Val(1) - x211))) * Val(1024))) +
              (((x215 * x214) + ((Val(1) - x215) * (Val(1) - x214))) * Val(2048)));
  Val x316 = ((x315 + (((x218 * x217) + ((Val(1) - x218) * (Val(1) - x217))) * Val(4096))) +
              (((x221 * x220) + ((Val(1) - x221) * (Val(1) - x220))) * Val(8192)));
  Val x317 = ((x316 + (((x226 * x225) + ((Val(1) - x226) * (Val(1) - x225))) * Val(16384))) +
              (((x229 * x228) + ((Val(1) - x229) * (Val(1) - x228))) * Val(32768)));
  Val x318 = ((x317 + (((x232 * x231) + ((Val(1) - x232) * (Val(1) - x231))) * Val(65536))) +
              (((x235 * x234) + ((Val(1) - x235) * (Val(1) - x234))) * Val(131072)));
  Val x319 = ((x318 + (((x238 * x237) + ((Val(1) - x238) * (Val(1) - x237))) * Val(262144))) +
              (((x241 * x240) + ((Val(1) - x241) * (Val(1) - x240))) * Val(524288)));
  NondetRegStruct x320 =
      exec_Reg(ctx,
               (x319 + (((x244 * x243) + ((Val(1) - x244) * (Val(1) - x243))) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, _2));
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:341)
  BoundLayout<RhoMinor1_4__4_Arm1_SuperLayout> x321 = LAYOUT_LOOKUP(x3, arm1);
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:342)
  Val22Array x322 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  Val24Array x323 = Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:339)
  Val22Array x324 =
      Val22Array{x298._super, x309._super, x320._super, Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0), Val(0), Val(0),
                 Val(0),      Val(0),      Val(0),      Val(0), Val(0), Val(0)};
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:293)
  Val x325 = x5.rnd._super;
  Val x326 = x5.blk._super;
  Val x327 = x5.midx._super;
  if (to_size_t(Val(1))) {
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:342)
    RetTupleStruct x328 = exec_RetTuple(ctx,
                                        x322,
                                        x322,
                                        x322,
                                        x323,
                                        x322,
                                        x324,
                                        Val(8),
                                        Val(9),
                                        x325,
                                        x326,
                                        x327,
                                        LAYOUT_LOOKUP(x3, arm0));
  }
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:292)
  Val x329 = x6[21]._super;
  Val x330 = x6[22]._super;
  Val x331 = x6[23]._super;
  if (to_size_t(Val(0))) {
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:345)
    ToBits_22_Struct x332 = exec_ToBits_22_(ctx, x329, LAYOUT_LOOKUP(x321, unpackM1));
    NondetRegStruct22Array x333 = x332._super;
    Val x334 = x333[0]._super;
    Val x335 = x333[1]._super;
    Val x336 = x333[2]._super;
    Val x337 = x333[3]._super;
    Val x338 = x333[4]._super;
    Val x339 = x333[5]._super;
    Val x340 = x333[6]._super;
    Val x341 = x333[7]._super;
    Val x342 = x333[8]._super;
    Val x343 = x333[9]._super;
    Val x344 = x333[10]._super;
    Val x345 = x333[11]._super;
    Val x346 = x333[12]._super;
    Val x347 = x333[13]._super;
    Val x348 = x333[14]._super;
    Val x349 = x333[15]._super;
    Val x350 = x333[16]._super;
    Val x351 = x333[17]._super;
    Val x352 = x333[18]._super;
    Val x353 = x333[19]._super;
    Val x354 = x333[20]._super;
    Val x355 = x333[21]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:346)
    Val x356 =
        ((((((x334 + (x335 * Val(2))) + (x336 * Val(4))) + (x337 * Val(8))) + (x338 * Val(16))) +
          (x339 * Val(32))) +
         (x340 * Val(64)));
    Val x357 = ((((((x356 + (x341 * Val(128))) + (x342 * Val(256))) + (x343 * Val(512))) +
                  (x344 * Val(1024))) +
                 (x345 * Val(2048))) +
                (x346 * Val(4096)));
    Val x358 = ((((((x357 + (x347 * Val(8192))) + (x348 * Val(16384))) + (x349 * Val(32768))) +
                  (x350 * Val(65536))) +
                 (x351 * Val(131072))) +
                (x352 * Val(262144)));
    EQZ(((((x358 + (x353 * Val(524288))) + (x354 * Val(1048576))) + (x355 * Val(2097152))) - x329),
        "rho_minor1(zirgen/circuit/keccak/keccak.zir:346)");
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:349)
    ToBits_21_Struct x359 = exec_ToBits_21_(ctx, x330, LAYOUT_LOOKUP(x321, unpackM2));
    NondetRegStruct21Array x360 = x359._super;
    Val x361 = x360[0]._super;
    Val x362 = x360[1]._super;
    Val x363 = x360[2]._super;
    Val x364 = x360[3]._super;
    Val x365 = x360[4]._super;
    Val x366 = x360[5]._super;
    Val x367 = x360[6]._super;
    Val x368 = x360[7]._super;
    Val x369 = x360[8]._super;
    Val x370 = x360[9]._super;
    Val x371 = x360[10]._super;
    Val x372 = x360[11]._super;
    Val x373 = x360[12]._super;
    Val x374 = x360[13]._super;
    Val x375 = x360[14]._super;
    Val x376 = x360[15]._super;
    Val x377 = x360[16]._super;
    Val x378 = x360[17]._super;
    Val x379 = x360[18]._super;
    Val x380 = x360[19]._super;
    Val x381 = x360[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:350)
    Val x382 =
        ((((((x361 + (x362 * Val(2))) + (x363 * Val(4))) + (x364 * Val(8))) + (x365 * Val(16))) +
          (x366 * Val(32))) +
         (x367 * Val(64)));
    Val x383 = ((((((x382 + (x368 * Val(128))) + (x369 * Val(256))) + (x370 * Val(512))) +
                  (x371 * Val(1024))) +
                 (x372 * Val(2048))) +
                (x373 * Val(4096)));
    Val x384 = ((((((x383 + (x374 * Val(8192))) + (x375 * Val(16384))) + (x376 * Val(32768))) +
                  (x377 * Val(65536))) +
                 (x378 * Val(131072))) +
                (x379 * Val(262144)));
    EQZ((((x384 + (x380 * Val(524288))) + (x381 * Val(1048576))) - x330),
        "rho_minor1(zirgen/circuit/keccak/keccak.zir:350)");
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:354)
    ToBits_21_Struct x385 = exec_ToBits_21_(ctx, x331, LAYOUT_LOOKUP(x321, unpackM3));
    NondetRegStruct21Array x386 = x385._super;
    Val x387 = x386[0]._super;
    Val x388 = x386[1]._super;
    Val x389 = x386[2]._super;
    Val x390 = x386[3]._super;
    Val x391 = x386[4]._super;
    Val x392 = x386[5]._super;
    Val x393 = x386[6]._super;
    Val x394 = x386[7]._super;
    Val x395 = x386[8]._super;
    Val x396 = x386[9]._super;
    Val x397 = x386[10]._super;
    Val x398 = x386[11]._super;
    Val x399 = x386[12]._super;
    Val x400 = x386[13]._super;
    Val x401 = x386[14]._super;
    Val x402 = x386[15]._super;
    Val x403 = x386[16]._super;
    Val x404 = x386[17]._super;
    Val x405 = x386[18]._super;
    Val x406 = x386[19]._super;
    Val x407 = x386[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:355)
    Val x408 =
        ((((((x387 + (x388 * Val(2))) + (x389 * Val(4))) + (x390 * Val(8))) + (x391 * Val(16))) +
          (x392 * Val(32))) +
         (x393 * Val(64)));
    Val x409 = ((((((x408 + (x394 * Val(128))) + (x395 * Val(256))) + (x396 * Val(512))) +
                  (x397 * Val(1024))) +
                 (x398 * Val(2048))) +
                (x399 * Val(4096)));
    Val x410 = ((((((x409 + (x400 * Val(8192))) + (x401 * Val(16384))) + (x402 * Val(32768))) +
                  (x403 * Val(65536))) +
                 (x404 * Val(131072))) +
                (x405 * Val(262144)));
    EQZ((((x410 + (x406 * Val(524288))) + (x407 * Val(1048576))) - x331),
        "rho_minor1(zirgen/circuit/keccak/keccak.zir:355)");
    // rho_minor1(zirgen/circuit/keccak/keccak.zir:358)
    RetTupleStruct x411 = exec_RetTuple(
        ctx,
        Val22Array{x334, x335, x336, x337, x338, x339, x340, x341, x342, x343, x344,
                   x345, x346, x347, x348, x349, x350, x351, x352, x353, x354, x355},
        Val22Array{x361, x362, x363, x364, x365, x366, x367, x368, x369, x370, x371,
                   x372, x373, x374, x375, x376, x377, x378, x379, x380, x381, Val(0)},
        Val22Array{x387, x388, x389, x390, x391, x392, x393, x394, x395, x396, x397,
                   x398, x399, x400, x401, x402, x403, x404, x405, x406, x407, Val(0)},
        x323,
        x322,
        x324,
        Val(8),
        Val(9),
        x325,
        x326,
        x327,
        LAYOUT_LOOKUP(x321, _super));
  }
  // rho_minor1(zirgen/circuit/keccak/keccak.zir:341)
  RetTupleStruct x412 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x412;
}
RetTupleStruct execRhoMinor3_4_(ExecContext& ctx,
                                RetTupleStruct arg0,
                                BoundLayout<RetTupleLayout> arg1,
                                BoundLayout<RhoMinor3_4__SuperLayout> layout2) {
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:432)
  RetTupleStruct x3 = back_RetTuple(ctx, 1, arg1);
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:433)
  RetTupleStruct x4 = back_RetTuple(ctx, 3, arg1);
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:434)
  RetTupleStruct x5 = back_RetTuple(ctx, 4, arg1);
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:435)
  RetTupleStruct x6 = back_RetTuple(ctx, 6, arg1);
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:436)
  RetTupleStruct x7 = back_RetTuple(ctx, 7, arg1);
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:437)
  RetTupleStruct x8 = back_RetTuple(ctx, 9, arg1);
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:439)
  BoundLayout<RhoMinor3_4_Arm1_SuperLayout> x9 = LAYOUT_LOOKUP(layout2, arm1);
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:436)
  NondetRegStruct22Array x10 = x7.arrF;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:435)
  NondetRegStruct22Array x11 = x6.arrF;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:444)
  Val x12 = x10[0]._super;
  Val x13 = x10[1]._super;
  Val x14 = x10[2]._super;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:445)
  Val x15 = x11[0]._super;
  Val x16 = x11[1]._super;
  Val x17 = x11[2]._super;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:434)
  NondetRegStruct22Array x18 = x5.arrF;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:446)
  Val x19 = x18[0]._super;
  Val x20 = x18[1]._super;
  Val x21 = x18[2]._super;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:433)
  NondetRegStruct22Array x22 = x4.arrF;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:447)
  Val x23 = x22[0]._super;
  Val x24 = x22[1]._super;
  Val x25 = x22[2]._super;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:432)
  NondetRegStruct22Array x26 = x3.arrF;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:448)
  Val x27 = x26[0]._super;
  Val x28 = x26[1]._super;
  Val x29 = x26[2]._super;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:437)
  NondetRegStruct22Array x30 = x8.arrA;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:449)
  Val x31 = x30[15]._super;
  Val x32 = x30[16]._super;
  Val x33 = x30[17]._super;
  Val x34 = x30[18]._super;
  Val x35 = x30[19]._super;
  Val x36 = x30[20]._super;
  Val x37 = x30[21]._super;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:437)
  NondetRegStruct22Array x38 = x8.arrB;
  NondetRegStruct22Array x39 = x8.arrC;
  NondetRegStruct24Array x40 = x8.arrD;
  Val x41 = x38[0]._super;
  Val x42 = x38[1]._super;
  Val x43 = x38[2]._super;
  Val x44 = x38[3]._super;
  Val x45 = x38[4]._super;
  Val x46 = x38[5]._super;
  Val x47 = x38[6]._super;
  Val x48 = x38[7]._super;
  Val x49 = x38[8]._super;
  Val x50 = x38[9]._super;
  Val x51 = x38[10]._super;
  Val x52 = x38[11]._super;
  Val x53 = x38[12]._super;
  Val x54 = x38[13]._super;
  Val x55 = x38[14]._super;
  Val x56 = x38[15]._super;
  Val x57 = x38[16]._super;
  Val x58 = x38[17]._super;
  Val x59 = x38[18]._super;
  Val x60 = x38[19]._super;
  Val x61 = x38[20]._super;
  Val x62 = x38[21]._super;
  Val22Array x63 = Val22Array{x41, x42, x43, x44, x45, x46, x47, x48, x49, x50, x51,
                              x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62};
  Val x64 = x39[0]._super;
  Val x65 = x39[1]._super;
  Val x66 = x39[2]._super;
  Val x67 = x39[3]._super;
  Val x68 = x39[4]._super;
  Val x69 = x39[5]._super;
  Val x70 = x39[6]._super;
  Val x71 = x39[7]._super;
  Val x72 = x39[8]._super;
  Val x73 = x39[9]._super;
  Val x74 = x39[10]._super;
  Val x75 = x39[11]._super;
  Val x76 = x39[12]._super;
  Val x77 = x39[13]._super;
  Val x78 = x39[14]._super;
  Val x79 = x39[15]._super;
  Val x80 = x39[16]._super;
  Val x81 = x39[17]._super;
  Val x82 = x39[18]._super;
  Val x83 = x39[19]._super;
  Val x84 = x39[20]._super;
  Val x85 = x39[21]._super;
  Val22Array x86 = Val22Array{x64, x65, x66, x67, x68, x69, x70, x71, x72, x73, x74,
                              x75, x76, x77, x78, x79, x80, x81, x82, x83, x84, x85};
  Val24Array x87 =
      Val24Array{x40[0]._super,  x40[1]._super,  x40[2]._super,  x40[3]._super,  x40[4]._super,
                 x40[5]._super,  x40[6]._super,  x40[7]._super,  x40[8]._super,  x40[9]._super,
                 x40[10]._super, x40[11]._super, x40[12]._super, x40[13]._super, x40[14]._super,
                 x40[15]._super, x40[16]._super, x40[17]._super, x40[18]._super, x40[19]._super,
                 x40[20]._super, x40[21]._super, x40[22]._super, x40[23]._super};
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:451)
  Val22Array x88 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:432)
  Val x89 = x3.rnd._super;
  Val x90 = x3.blk._super;
  Val x91 = x3.midx._super;
  if (to_size_t(Val(0))) {
    // rho_minor3(zirgen/circuit/keccak/keccak.zir:450)
    RetTupleStruct x92 =
        exec_RetTuple(ctx,
                      Val22Array{x12, x13, x14, x15, x16, x17, x19, x20, x21, x23, x24,
                                 x25, x27, x28, x29, x31, x32, x33, x34, x35, x36, x37},
                      x63,
                      x86,
                      x87,
                      x88,
                      x88,
                      Val(0),
                      Val(6),
                      x89,
                      x90,
                      x91,
                      LAYOUT_LOOKUP(layout2, arm0));
  }
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:453)
  BoundLayout<RhoMinor3_4_Arm1Arm1_SuperLayout> x93 = LAYOUT_LOOKUP(x9, arm1);
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:457)
  Val x94 = x30[0]._super;
  Val x95 = x30[1]._super;
  Val x96 = x30[2]._super;
  Val x97 = x30[3]._super;
  Val x98 = x30[4]._super;
  Val x99 = x30[5]._super;
  Val x100 = x30[6]._super;
  Val x101 = x30[7]._super;
  Val x102 = x30[8]._super;
  Val x103 = x30[9]._super;
  Val x104 = x30[10]._super;
  Val x105 = x30[11]._super;
  Val x106 = x30[12]._super;
  Val x107 = x30[13]._super;
  Val x108 = x30[14]._super;
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:465)
  BoundLayout<RhoMinor3_4_Arm1Arm1Arm1_SuperLayout> x109 = LAYOUT_LOOKUP(x93, arm1);
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:437)
  Val22Array x110 = Val22Array{x94,  x95,  x96,  x97,  x98, x99, x100, x101, x102, x103, x104,
                               x105, x106, x107, x108, x31, x32, x33,  x34,  x35,  x36,  x37};
  if (to_size_t(Val(1))) {
    if (to_size_t(Val(0))) {
      // rho_minor3(zirgen/circuit/keccak/keccak.zir:462)
      RetTupleStruct x111 =
          exec_RetTuple(ctx,
                        Val22Array{x94,  x95,  x96,  x97,  x98, x99, x100, x101, x102, x103, x104,
                                   x105, x106, x107, x108, x12, x13, x14,  x15,  x16,  x17,  x19},
                        Val22Array{x20, x21, x23, x24, x25, x27, x28, x29, x49, x50, x51,
                                   x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62},
                        x86,
                        x87,
                        x88,
                        x88,
                        Val(0),
                        Val(7),
                        x89,
                        x90,
                        x91,
                        LAYOUT_LOOKUP(x9, arm0));
    }
    if (to_size_t(Val(1))) {
      if (to_size_t(Val(0))) {
        // rho_minor3(zirgen/circuit/keccak/keccak.zir:474)
        RetTupleStruct x112 =
            exec_RetTuple(ctx,
                          x110,
                          Val22Array{x41, x42, x43, x44, x45, x46, x47, x48, x12, x13, x14,
                                     x15, x16, x17, x19, x20, x21, x23, x24, x25, x27, x28},
                          Val22Array{x29, x65, x66, x67, x68, x69, x70, x71, x72, x73, x74,
                                     x75, x76, x77, x78, x79, x80, x81, x82, x83, x84, x85},
                          x87,
                          x88,
                          x88,
                          Val(0),
                          Val(8),
                          x89,
                          x90,
                          x91,
                          LAYOUT_LOOKUP(x93, arm0));
      }
      if (to_size_t(Val(1))) {
        if (to_size_t(Val(0))) {
          // rho_minor3(zirgen/circuit/keccak/keccak.zir:485)
          RetTupleStruct x113 =
              exec_RetTuple(ctx,
                            x110,
                            x63,
                            Val22Array{x64, x12, x13, x14, x15, x16, x17, x19, x20, x21, x23,
                                       x24, x25, x27, x28, x29, x80, x81, x82, x83, x84, x85},
                            x87,
                            x88,
                            x88,
                            Val(0),
                            Val(9),
                            x89,
                            x90,
                            x91,
                            LAYOUT_LOOKUP(x109, arm0));
        }
        if (to_size_t(Val(1))) {
          // rho_minor3(zirgen/circuit/keccak/keccak.zir:522)
          RetTupleStruct x114 = exec_RetTuple(
              ctx,
              Val22Array{x94, x95, x96, x34, x35,  x36,  x55,  x56, x57, x74, x75,
                         x76, x27, x28, x29, x103, x104, x105, x46, x47, x48, x49},
              Val22Array{x50, x51, x68, x69, x70, x19, x20, x21, x97, x98, x99,
                         x37, x41, x42, x58, x59, x60, x77, x78, x79, x12, x13},
              Val22Array{x14, x106, x107, x108, x31, x32,  x33,  x52,  x53, x54, x71,
                         x72, x73,  x23,  x24,  x25, x100, x101, x102, x43, x44, x45},
              Val24Array{x61,    x62,    x64,    x65,    x66,    x67,    x15,    x16,
                         x17,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                         Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
              x88,
              x88,
              Val(0),
              Val(10),
              x89,
              x90,
              x91,
              LAYOUT_LOOKUP(x109, arm1));
        }
        // rho_minor3(zirgen/circuit/keccak/keccak.zir:477)
        RetTupleStruct x115 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x109, _super));
      }
      // rho_minor3(zirgen/circuit/keccak/keccak.zir:465)
      RetTupleStruct x116 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x93, _super));
    }
    // rho_minor3(zirgen/circuit/keccak/keccak.zir:453)
    RetTupleStruct x117 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x9, _super));
  }
  // rho_minor3(zirgen/circuit/keccak/keccak.zir:439)
  RetTupleStruct x118 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(layout2, _super));
  return x118;
}
RetTupleStruct execRhoMajor_4_(ExecContext& ctx,
                               RetTupleStruct arg0,
                               BoundLayout<RetTupleLayout> arg1,
                               BoundLayout<RhoMajor_4_Layout> layout2) {
  // rho_major(zirgen/circuit/keccak/keccak.zir:529)
  BoundLayout<RhoMajor_4__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // rho_major(zirgen/circuit/keccak/keccak.zir:528)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  OneHot_9_Struct x5 = exec_OneHot_9_(ctx, x4.minor._super, LAYOUT_LOOKUP(layout2, minorOnehot));
  NondetRegStruct9Array x6 = x5._super;
  if (to_size_t(x6[0]._super)) {
    // rho_major(zirgen/circuit/keccak/keccak.zir:530)
    RetTupleStruct x7 = execRhoMinor0_0__4_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm0));
  }
  if (to_size_t(x6[1]._super)) {
    // rho_major(zirgen/circuit/keccak/keccak.zir:531)
    RetTupleStruct x8 = execRhoMinor1_0__4_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm1));
  }
  if (to_size_t(x6[2]._super)) {
    // rho_major(zirgen/circuit/keccak/keccak.zir:532)
    RetTupleStruct x9 = execRhoMinor2_0__4_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm2));
  }
  if (to_size_t(x6[3]._super)) {
    // rho_major(zirgen/circuit/keccak/keccak.zir:533)
    RetTupleStruct x10 = execRhoMinor0_2__4_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm3));
  }
  if (to_size_t(x6[4]._super)) {
    // rho_major(zirgen/circuit/keccak/keccak.zir:534)
    RetTupleStruct x11 = execRhoMinor1_2__4_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm4));
  }
  if (to_size_t(x6[5]._super)) {
    // rho_major(zirgen/circuit/keccak/keccak.zir:535)
    RetTupleStruct x12 = execRhoMinor2_2__4_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm5));
  }
  if (to_size_t(x6[6]._super)) {
    // rho_major(zirgen/circuit/keccak/keccak.zir:536)
    RetTupleStruct x13 = execRhoMinor0_4__4_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm6));
  }
  if (to_size_t(x6[7]._super)) {
    // rho_major(zirgen/circuit/keccak/keccak.zir:537)
    RetTupleStruct x14 = execRhoMinor1_4__4_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm7));
  }
  if (to_size_t(x6[8]._super)) {
    // rho_major(zirgen/circuit/keccak/keccak.zir:538)
    RetTupleStruct x15 = execRhoMinor3_4_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm8));
  }
  // rho_major(zirgen/circuit/keccak/keccak.zir:529)
  RetTupleStruct x16 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x16;
}
RetTupleStruct execChiMinor0_0__0_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<ChiMinor0_0__0_Layout> layout1) {
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:542)
  NondetRegStruct22Array x2 = arg0.arrA;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:546)
  Val x3 = x2[3]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:554)
  ToBits_22_Struct x4 = exec_ToBits_22_(ctx, x3, LAYOUT_LOOKUP(layout1, unpack_0xp1));
  NondetRegStruct22Array x5 = x4._super;
  Val x6 = x5[0]._super;
  Val x7 = x5[1]._super;
  Val x8 = x5[2]._super;
  Val x9 = x5[3]._super;
  Val x10 = x5[4]._super;
  Val x11 = x5[5]._super;
  Val x12 = x5[6]._super;
  Val x13 = x5[7]._super;
  Val x14 = x5[8]._super;
  Val x15 = x5[9]._super;
  Val x16 = x5[10]._super;
  Val x17 = x5[11]._super;
  Val x18 = x5[12]._super;
  Val x19 = x5[13]._super;
  Val x20 = x5[14]._super;
  Val x21 = x5[15]._super;
  Val x22 = x5[16]._super;
  Val x23 = x5[17]._super;
  Val x24 = x5[18]._super;
  Val x25 = x5[19]._super;
  Val x26 = x5[20]._super;
  Val x27 = x5[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:555)
  Val x28 = ((((((x6 + (x7 * Val(2))) + (x8 * Val(4))) + (x9 * Val(8))) + (x10 * Val(16))) +
              (x11 * Val(32))) +
             (x12 * Val(64)));
  Val x29 =
      ((((((x28 + (x13 * Val(128))) + (x14 * Val(256))) + (x15 * Val(512))) + (x16 * Val(1024))) +
        (x17 * Val(2048))) +
       (x18 * Val(4096)));
  Val x30 = ((((((x29 + (x19 * Val(8192))) + (x20 * Val(16384))) + (x21 * Val(32768))) +
               (x22 * Val(65536))) +
              (x23 * Val(131072))) +
             (x24 * Val(262144)));
  EQZ(((((x30 + (x25 * Val(524288))) + (x26 * Val(1048576))) + (x27 * Val(2097152))) - x3),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:555)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:559)
  Val x31 = x2[4]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:567)
  ToBits_21_Struct x32 = exec_ToBits_21_(ctx, x31, LAYOUT_LOOKUP(layout1, unpack_1xp1));
  NondetRegStruct21Array x33 = x32._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:568)
  Val x55 = ((((((x34 + (x35 * Val(2))) + (x36 * Val(4))) + (x37 * Val(8))) + (x38 * Val(16))) +
              (x39 * Val(32))) +
             (x40 * Val(64)));
  Val x56 =
      ((((((x55 + (x41 * Val(128))) + (x42 * Val(256))) + (x43 * Val(512))) + (x44 * Val(1024))) +
        (x45 * Val(2048))) +
       (x46 * Val(4096)));
  Val x57 = ((((((x56 + (x47 * Val(8192))) + (x48 * Val(16384))) + (x49 * Val(32768))) +
               (x50 * Val(65536))) +
              (x51 * Val(131072))) +
             (x52 * Val(262144)));
  EQZ((((x57 + (x53 * Val(524288))) + (x54 * Val(1048576))) - x31),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:568)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:573)
  Val x58 = x2[6]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:581)
  ToBits_22_Struct x59 = exec_ToBits_22_(ctx, x58, LAYOUT_LOOKUP(layout1, unpack_0xp2));
  NondetRegStruct22Array x60 = x59._super;
  Val x61 = x60[0]._super;
  Val x62 = x60[1]._super;
  Val x63 = x60[2]._super;
  Val x64 = x60[3]._super;
  Val x65 = x60[4]._super;
  Val x66 = x60[5]._super;
  Val x67 = x60[6]._super;
  Val x68 = x60[7]._super;
  Val x69 = x60[8]._super;
  Val x70 = x60[9]._super;
  Val x71 = x60[10]._super;
  Val x72 = x60[11]._super;
  Val x73 = x60[12]._super;
  Val x74 = x60[13]._super;
  Val x75 = x60[14]._super;
  Val x76 = x60[15]._super;
  Val x77 = x60[16]._super;
  Val x78 = x60[17]._super;
  Val x79 = x60[18]._super;
  Val x80 = x60[19]._super;
  Val x81 = x60[20]._super;
  Val x82 = x60[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:582)
  Val x83 = ((((((x61 + (x62 * Val(2))) + (x63 * Val(4))) + (x64 * Val(8))) + (x65 * Val(16))) +
              (x66 * Val(32))) +
             (x67 * Val(64)));
  Val x84 =
      ((((((x83 + (x68 * Val(128))) + (x69 * Val(256))) + (x70 * Val(512))) + (x71 * Val(1024))) +
        (x72 * Val(2048))) +
       (x73 * Val(4096)));
  Val x85 = ((((((x84 + (x74 * Val(8192))) + (x75 * Val(16384))) + (x76 * Val(32768))) +
               (x77 * Val(65536))) +
              (x78 * Val(131072))) +
             (x79 * Val(262144)));
  EQZ(((((x85 + (x80 * Val(524288))) + (x81 * Val(1048576))) + (x82 * Val(2097152))) - x58),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:582)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:586)
  Val x86 = x2[7]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:594)
  ToBits_21_Struct x87 = exec_ToBits_21_(ctx, x86, LAYOUT_LOOKUP(layout1, unpack_1xp2));
  NondetRegStruct21Array x88 = x87._super;
  Val x89 = x88[0]._super;
  Val x90 = x88[1]._super;
  Val x91 = x88[2]._super;
  Val x92 = x88[3]._super;
  Val x93 = x88[4]._super;
  Val x94 = x88[5]._super;
  Val x95 = x88[6]._super;
  Val x96 = x88[7]._super;
  Val x97 = x88[8]._super;
  Val x98 = x88[9]._super;
  Val x99 = x88[10]._super;
  Val x100 = x88[11]._super;
  Val x101 = x88[12]._super;
  Val x102 = x88[13]._super;
  Val x103 = x88[14]._super;
  Val x104 = x88[15]._super;
  Val x105 = x88[16]._super;
  Val x106 = x88[17]._super;
  Val x107 = x88[18]._super;
  Val x108 = x88[19]._super;
  Val x109 = x88[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:595)
  Val x110 = ((((((x89 + (x90 * Val(2))) + (x91 * Val(4))) + (x92 * Val(8))) + (x93 * Val(16))) +
               (x94 * Val(32))) +
              (x95 * Val(64)));
  Val x111 =
      ((((((x110 + (x96 * Val(128))) + (x97 * Val(256))) + (x98 * Val(512))) + (x99 * Val(1024))) +
        (x100 * Val(2048))) +
       (x101 * Val(4096)));
  Val x112 = ((((((x111 + (x102 * Val(8192))) + (x103 * Val(16384))) + (x104 * Val(32768))) +
                (x105 * Val(65536))) +
               (x106 * Val(131072))) +
              (x107 * Val(262144)));
  EQZ((((x112 + (x108 * Val(524288))) + (x109 * Val(1048576))) - x86),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:595)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:599)
  Val x113 = x2[0]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:607)
  ToBits_22_Struct x114 = exec_ToBits_22_(ctx, x113, LAYOUT_LOOKUP(layout1, unpack_0x));
  NondetRegStruct22Array x115 = x114._super;
  Val x116 = x115[0]._super;
  Val x117 = x115[1]._super;
  Val x118 = x115[2]._super;
  Val x119 = x115[3]._super;
  Val x120 = x115[4]._super;
  Val x121 = x115[5]._super;
  Val x122 = x115[6]._super;
  Val x123 = x115[7]._super;
  Val x124 = x115[8]._super;
  Val x125 = x115[9]._super;
  Val x126 = x115[10]._super;
  Val x127 = x115[11]._super;
  Val x128 = x115[12]._super;
  Val x129 = x115[13]._super;
  Val x130 = x115[14]._super;
  Val x131 = x115[15]._super;
  Val x132 = x115[16]._super;
  Val x133 = x115[17]._super;
  Val x134 = x115[18]._super;
  Val x135 = x115[19]._super;
  Val x136 = x115[20]._super;
  Val x137 = x115[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:608)
  Val x138 = (x117 * Val(2));
  Val x139 = ((((((x116 + x138) + (x118 * Val(4))) + (x119 * Val(8))) + (x120 * Val(16))) +
               (x121 * Val(32))) +
              (x122 * Val(64)));
  Val x140 = ((((((x139 + (x123 * Val(128))) + (x124 * Val(256))) + (x125 * Val(512))) +
                (x126 * Val(1024))) +
               (x127 * Val(2048))) +
              (x128 * Val(4096)));
  Val x141 = ((((((x140 + (x129 * Val(8192))) + (x130 * Val(16384))) + (x131 * Val(32768))) +
                (x132 * Val(65536))) +
               (x133 * Val(131072))) +
              (x134 * Val(262144)));
  EQZ(((((x141 + (x135 * Val(524288))) + (x136 * Val(1048576))) + (x137 * Val(2097152))) - x113),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:608)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:612)
  Val x142 = x2[1]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:620)
  ToBits_21_Struct x143 = exec_ToBits_21_(ctx, x142, LAYOUT_LOOKUP(layout1, unpack_1x));
  NondetRegStruct21Array x144 = x143._super;
  Val x145 = x144[0]._super;
  Val x146 = x144[1]._super;
  Val x147 = x144[2]._super;
  Val x148 = x144[3]._super;
  Val x149 = x144[4]._super;
  Val x150 = x144[5]._super;
  Val x151 = x144[6]._super;
  Val x152 = x144[7]._super;
  Val x153 = x144[8]._super;
  Val x154 = x144[9]._super;
  Val x155 = x144[10]._super;
  Val x156 = x144[11]._super;
  Val x157 = x144[12]._super;
  Val x158 = x144[13]._super;
  Val x159 = x144[14]._super;
  Val x160 = x144[15]._super;
  Val x161 = x144[16]._super;
  Val x162 = x144[17]._super;
  Val x163 = x144[18]._super;
  Val x164 = x144[19]._super;
  Val x165 = x144[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:621)
  Val x166 = (x146 * Val(2));
  Val x167 = ((((((x145 + x166) + (x147 * Val(4))) + (x148 * Val(8))) + (x149 * Val(16))) +
               (x150 * Val(32))) +
              (x151 * Val(64)));
  Val x168 = ((((((x167 + (x152 * Val(128))) + (x153 * Val(256))) + (x154 * Val(512))) +
                (x155 * Val(1024))) +
               (x156 * Val(2048))) +
              (x157 * Val(4096)));
  Val x169 = ((((((x168 + (x158 * Val(8192))) + (x159 * Val(16384))) + (x160 * Val(32768))) +
                (x161 * Val(65536))) +
               (x162 * Val(131072))) +
              (x163 * Val(262144)));
  EQZ((((x169 + (x164 * Val(524288))) + (x165 * Val(1048576))) - x142),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:621)");
  // andnxor(zirgen/circuit/keccak/keccak.zir:118)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:623)
  Val x170 = ((Val(1) - x6) * x61);
  Val x171 = ((Val(1) - x7) * x62);
  Val x172 = ((Val(1) - x8) * x63);
  Val x173 = ((Val(1) - x9) * x64);
  Val x174 = ((Val(1) - x10) * x65);
  Val x175 = ((Val(1) - x11) * x66);
  Val x176 = ((Val(1) - x12) * x67);
  Val x177 = ((Val(1) - x13) * x68);
  Val x178 = ((Val(1) - x14) * x69);
  Val x179 = ((Val(1) - x15) * x70);
  Val x180 = ((Val(1) - x16) * x71);
  Val x181 = ((Val(1) - x17) * x72);
  Val x182 = ((Val(1) - x18) * x73);
  Val x183 = ((Val(1) - x19) * x74);
  Val x184 = ((Val(1) - x20) * x75);
  Val x185 = ((Val(1) - x21) * x76);
  Val x186 = ((Val(1) - x22) * x77);
  Val x187 = ((Val(1) - x23) * x78);
  Val x188 = ((Val(1) - x24) * x79);
  Val x189 = ((Val(1) - x25) * x80);
  Val x190 = ((Val(1) - x26) * x81);
  Val x191 = ((Val(1) - x27) * x82);
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:624)
  Val x192 = ((Val(1) - x34) * x89);
  Val x193 = ((Val(1) - x35) * x90);
  Val x194 = ((Val(1) - x36) * x91);
  Val x195 = ((Val(1) - x37) * x92);
  Val x196 = ((Val(1) - x38) * x93);
  Val x197 = ((Val(1) - x39) * x94);
  Val x198 = ((Val(1) - x40) * x95);
  Val x199 = ((Val(1) - x41) * x96);
  Val x200 = ((Val(1) - x42) * x97);
  Val x201 = ((Val(1) - x43) * x98);
  Val x202 = ((Val(1) - x44) * x99);
  Val x203 = ((Val(1) - x45) * x100);
  Val x204 = ((Val(1) - x46) * x101);
  Val x205 = ((Val(1) - x47) * x102);
  Val x206 = ((Val(1) - x48) * x103);
  Val x207 = ((Val(1) - x49) * x104);
  Val x208 = ((Val(1) - x50) * x105);
  Val x209 = ((Val(1) - x51) * x106);
  Val x210 = ((Val(1) - x52) * x107);
  Val x211 = ((Val(1) - x53) * x108);
  Val x212 = ((Val(1) - x54) * x109);
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:625)
  Val x213 =
      (((((x116 + x170) - ((x116 * Val(2)) * x170)) + (((x117 + x171) - (x138 * x171)) * Val(2))) +
        (((x118 + x172) - ((x118 * Val(2)) * x172)) * Val(4))) +
       (((x119 + x173) - ((x119 * Val(2)) * x173)) * Val(8)));
  Val x214 = (((x213 + (((x120 + x174) - ((x120 * Val(2)) * x174)) * Val(16))) +
               (((x121 + x175) - ((x121 * Val(2)) * x175)) * Val(32))) +
              (((x122 + x176) - ((x122 * Val(2)) * x176)) * Val(64)));
  Val x215 = (((x214 + (((x123 + x177) - ((x123 * Val(2)) * x177)) * Val(128))) +
               (((x124 + x178) - ((x124 * Val(2)) * x178)) * Val(256))) +
              (((x125 + x179) - ((x125 * Val(2)) * x179)) * Val(512)));
  Val x216 = (((x215 + (((x126 + x180) - ((x126 * Val(2)) * x180)) * Val(1024))) +
               (((x127 + x181) - ((x127 * Val(2)) * x181)) * Val(2048))) +
              (((x128 + x182) - ((x128 * Val(2)) * x182)) * Val(4096)));
  Val x217 = (((x216 + (((x129 + x183) - ((x129 * Val(2)) * x183)) * Val(8192))) +
               (((x130 + x184) - ((x130 * Val(2)) * x184)) * Val(16384))) +
              (((x131 + x185) - ((x131 * Val(2)) * x185)) * Val(32768)));
  Val x218 = (((x217 + (((x132 + x186) - ((x132 * Val(2)) * x186)) * Val(65536))) +
               (((x133 + x187) - ((x133 * Val(2)) * x187)) * Val(131072))) +
              (((x134 + x188) - ((x134 * Val(2)) * x188)) * Val(262144)));
  Val x219 = (((x218 + (((x135 + x189) - ((x135 * Val(2)) * x189)) * Val(524288))) +
               (((x136 + x190) - ((x136 * Val(2)) * x190)) * Val(1048576))) +
              (((x137 + x191) - ((x137 * Val(2)) * x191)) * Val(2097152)));
  NondetRegStruct x220 = exec_Reg(ctx, x219, LAYOUT_LOOKUP(layout1, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  Val x221 =
      (((((x145 + x192) - ((x145 * Val(2)) * x192)) + (((x146 + x193) - (x166 * x193)) * Val(2))) +
        (((x147 + x194) - ((x147 * Val(2)) * x194)) * Val(4))) +
       (((x148 + x195) - ((x148 * Val(2)) * x195)) * Val(8)));
  Val x222 = (((x221 + (((x149 + x196) - ((x149 * Val(2)) * x196)) * Val(16))) +
               (((x150 + x197) - ((x150 * Val(2)) * x197)) * Val(32))) +
              (((x151 + x198) - ((x151 * Val(2)) * x198)) * Val(64)));
  Val x223 = (((x222 + (((x152 + x199) - ((x152 * Val(2)) * x199)) * Val(128))) +
               (((x153 + x200) - ((x153 * Val(2)) * x200)) * Val(256))) +
              (((x154 + x201) - ((x154 * Val(2)) * x201)) * Val(512)));
  Val x224 = (((x223 + (((x155 + x202) - ((x155 * Val(2)) * x202)) * Val(1024))) +
               (((x156 + x203) - ((x156 * Val(2)) * x203)) * Val(2048))) +
              (((x157 + x204) - ((x157 * Val(2)) * x204)) * Val(4096)));
  Val x225 = (((x224 + (((x158 + x205) - ((x158 * Val(2)) * x205)) * Val(8192))) +
               (((x159 + x206) - ((x159 * Val(2)) * x206)) * Val(16384))) +
              (((x160 + x207) - ((x160 * Val(2)) * x207)) * Val(32768)));
  Val x226 = (((x225 + (((x161 + x208) - ((x161 * Val(2)) * x208)) * Val(65536))) +
               (((x162 + x209) - ((x162 * Val(2)) * x209)) * Val(131072))) +
              (((x163 + x210) - ((x163 * Val(2)) * x210)) * Val(262144)));
  NondetRegStruct x227 =
      exec_Reg(ctx,
               ((x226 + (((x164 + x211) - ((x164 * Val(2)) * x211)) * Val(524288))) +
                (((x165 + x212) - ((x165 * Val(2)) * x212)) * Val(1048576))),
               LAYOUT_LOOKUP(layout1, _1));
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:630)
  Val22Array x228 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x229 = exec_RetTuple(
      ctx,
      x228,
      x228,
      x228,
      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), x220._super, x227._super},
      x228,
      x228,
      Val(1),
      Val(10),
      arg0.rnd._super,
      arg0.blk._super,
      arg0.midx._super,
      LAYOUT_LOOKUP(layout1, _super));
  return x229;
}
RetTupleStruct execChiMinor1_0__0_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<ChiMinor1_0__0_Layout> layout2) {
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:685)
  BoundLayout<ChiMinor1_0__0__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:635)
  RetTupleStruct x4 = back_RetTuple(ctx, 2, arg1);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:636)
  RetTupleStruct x5 = back_RetTuple(ctx, 1, arg1);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:635)
  NondetRegStruct22Array x6 = x4.arrA;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:640)
  Val x7 = x6[2]._super;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:648)
  ToBits_21_Struct x8 = exec_ToBits_21_(ctx, x7, LAYOUT_LOOKUP(layout2, unpack_2x));
  NondetRegStruct21Array x9 = x8._super;
  Val x10 = x9[0]._super;
  Val x11 = x9[1]._super;
  Val x12 = x9[2]._super;
  Val x13 = x9[3]._super;
  Val x14 = x9[4]._super;
  Val x15 = x9[5]._super;
  Val x16 = x9[6]._super;
  Val x17 = x9[7]._super;
  Val x18 = x9[8]._super;
  Val x19 = x9[9]._super;
  Val x20 = x9[10]._super;
  Val x21 = x9[11]._super;
  Val x22 = x9[12]._super;
  Val x23 = x9[13]._super;
  Val x24 = x9[14]._super;
  Val x25 = x9[15]._super;
  Val x26 = x9[16]._super;
  Val x27 = x9[17]._super;
  Val x28 = x9[18]._super;
  Val x29 = x9[19]._super;
  Val x30 = x9[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:649)
  Val x31 = (x11 * Val(2));
  Val x32 =
      ((((((x10 + x31) + (x12 * Val(4))) + (x13 * Val(8))) + (x14 * Val(16))) + (x15 * Val(32))) +
       (x16 * Val(64)));
  Val x33 =
      ((((((x32 + (x17 * Val(128))) + (x18 * Val(256))) + (x19 * Val(512))) + (x20 * Val(1024))) +
        (x21 * Val(2048))) +
       (x22 * Val(4096)));
  Val x34 = ((((((x33 + (x23 * Val(8192))) + (x24 * Val(16384))) + (x25 * Val(32768))) +
               (x26 * Val(65536))) +
              (x27 * Val(131072))) +
             (x28 * Val(262144)));
  EQZ((((x34 + (x29 * Val(524288))) + (x30 * Val(1048576))) - x7),
      "chi_minor1(zirgen/circuit/keccak/keccak.zir:649)");
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:654)
  Val x35 = x6[5]._super;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:662)
  ToBits_21_Struct x36 = exec_ToBits_21_(ctx, x35, LAYOUT_LOOKUP(layout2, unpack_2xp1));
  NondetRegStruct21Array x37 = x36._super;
  Val x38 = x37[0]._super;
  Val x39 = x37[1]._super;
  Val x40 = x37[2]._super;
  Val x41 = x37[3]._super;
  Val x42 = x37[4]._super;
  Val x43 = x37[5]._super;
  Val x44 = x37[6]._super;
  Val x45 = x37[7]._super;
  Val x46 = x37[8]._super;
  Val x47 = x37[9]._super;
  Val x48 = x37[10]._super;
  Val x49 = x37[11]._super;
  Val x50 = x37[12]._super;
  Val x51 = x37[13]._super;
  Val x52 = x37[14]._super;
  Val x53 = x37[15]._super;
  Val x54 = x37[16]._super;
  Val x55 = x37[17]._super;
  Val x56 = x37[18]._super;
  Val x57 = x37[19]._super;
  Val x58 = x37[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:663)
  Val x59 = ((((((x38 + (x39 * Val(2))) + (x40 * Val(4))) + (x41 * Val(8))) + (x42 * Val(16))) +
              (x43 * Val(32))) +
             (x44 * Val(64)));
  Val x60 =
      ((((((x59 + (x45 * Val(128))) + (x46 * Val(256))) + (x47 * Val(512))) + (x48 * Val(1024))) +
        (x49 * Val(2048))) +
       (x50 * Val(4096)));
  Val x61 = ((((((x60 + (x51 * Val(8192))) + (x52 * Val(16384))) + (x53 * Val(32768))) +
               (x54 * Val(65536))) +
              (x55 * Val(131072))) +
             (x56 * Val(262144)));
  EQZ((((x61 + (x57 * Val(524288))) + (x58 * Val(1048576))) - x35),
      "chi_minor1(zirgen/circuit/keccak/keccak.zir:663)");
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:667)
  Val x62 = x6[8]._super;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:675)
  ToBits_21_Struct x63 = exec_ToBits_21_(ctx, x62, LAYOUT_LOOKUP(layout2, unpack_2xp2));
  NondetRegStruct21Array x64 = x63._super;
  Val x65 = x64[0]._super;
  Val x66 = x64[1]._super;
  Val x67 = x64[2]._super;
  Val x68 = x64[3]._super;
  Val x69 = x64[4]._super;
  Val x70 = x64[5]._super;
  Val x71 = x64[6]._super;
  Val x72 = x64[7]._super;
  Val x73 = x64[8]._super;
  Val x74 = x64[9]._super;
  Val x75 = x64[10]._super;
  Val x76 = x64[11]._super;
  Val x77 = x64[12]._super;
  Val x78 = x64[13]._super;
  Val x79 = x64[14]._super;
  Val x80 = x64[15]._super;
  Val x81 = x64[16]._super;
  Val x82 = x64[17]._super;
  Val x83 = x64[18]._super;
  Val x84 = x64[19]._super;
  Val x85 = x64[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:676)
  Val x86 = ((((((x65 + (x66 * Val(2))) + (x67 * Val(4))) + (x68 * Val(8))) + (x69 * Val(16))) +
              (x70 * Val(32))) +
             (x71 * Val(64)));
  Val x87 =
      ((((((x86 + (x72 * Val(128))) + (x73 * Val(256))) + (x74 * Val(512))) + (x75 * Val(1024))) +
        (x76 * Val(2048))) +
       (x77 * Val(4096)));
  Val x88 = ((((((x87 + (x78 * Val(8192))) + (x79 * Val(16384))) + (x80 * Val(32768))) +
               (x81 * Val(65536))) +
              (x82 * Val(131072))) +
             (x83 * Val(262144)));
  EQZ((((x88 + (x84 * Val(524288))) + (x85 * Val(1048576))) - x62),
      "chi_minor1(zirgen/circuit/keccak/keccak.zir:676)");
  // andnxor(zirgen/circuit/keccak/keccak.zir:118)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:678)
  Val x89 = ((Val(1) - x38) * x65);
  Val x90 = ((Val(1) - x39) * x66);
  Val x91 = ((Val(1) - x40) * x67);
  Val x92 = ((Val(1) - x41) * x68);
  Val x93 = ((Val(1) - x42) * x69);
  Val x94 = ((Val(1) - x43) * x70);
  Val x95 = ((Val(1) - x44) * x71);
  Val x96 = ((Val(1) - x45) * x72);
  Val x97 = ((Val(1) - x46) * x73);
  Val x98 = ((Val(1) - x47) * x74);
  Val x99 = ((Val(1) - x48) * x75);
  Val x100 = ((Val(1) - x49) * x76);
  Val x101 = ((Val(1) - x50) * x77);
  Val x102 = ((Val(1) - x51) * x78);
  Val x103 = ((Val(1) - x52) * x79);
  Val x104 = ((Val(1) - x53) * x80);
  Val x105 = ((Val(1) - x54) * x81);
  Val x106 = ((Val(1) - x55) * x82);
  Val x107 = ((Val(1) - x56) * x83);
  Val x108 = ((Val(1) - x57) * x84);
  Val x109 = ((Val(1) - x58) * x85);
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:679)
  Val x110 = (((((x10 + x89) - ((x10 * Val(2)) * x89)) + (((x11 + x90) - (x31 * x90)) * Val(2))) +
               (((x12 + x91) - ((x12 * Val(2)) * x91)) * Val(4))) +
              (((x13 + x92) - ((x13 * Val(2)) * x92)) * Val(8)));
  Val x111 = (((x110 + (((x14 + x93) - ((x14 * Val(2)) * x93)) * Val(16))) +
               (((x15 + x94) - ((x15 * Val(2)) * x94)) * Val(32))) +
              (((x16 + x95) - ((x16 * Val(2)) * x95)) * Val(64)));
  Val x112 = (((x111 + (((x17 + x96) - ((x17 * Val(2)) * x96)) * Val(128))) +
               (((x18 + x97) - ((x18 * Val(2)) * x97)) * Val(256))) +
              (((x19 + x98) - ((x19 * Val(2)) * x98)) * Val(512)));
  Val x113 = (((x112 + (((x20 + x99) - ((x20 * Val(2)) * x99)) * Val(1024))) +
               (((x21 + x100) - ((x21 * Val(2)) * x100)) * Val(2048))) +
              (((x22 + x101) - ((x22 * Val(2)) * x101)) * Val(4096)));
  Val x114 = (((x113 + (((x23 + x102) - ((x23 * Val(2)) * x102)) * Val(8192))) +
               (((x24 + x103) - ((x24 * Val(2)) * x103)) * Val(16384))) +
              (((x25 + x104) - ((x25 * Val(2)) * x104)) * Val(32768)));
  Val x115 = (((x114 + (((x26 + x105) - ((x26 * Val(2)) * x105)) * Val(65536))) +
               (((x27 + x106) - ((x27 * Val(2)) * x106)) * Val(131072))) +
              (((x28 + x107) - ((x28 * Val(2)) * x107)) * Val(262144)));
  NondetRegStruct x116 =
      exec_Reg(ctx,
               ((x115 + (((x29 + x108) - ((x29 * Val(2)) * x108)) * Val(524288))) +
                (((x30 + x109) - ((x30 * Val(2)) * x109)) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, res3));
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:636)
  NondetRegStruct24Array x117 = x5.arrD;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:685)
  BoundLayout<ChiMinor1_0__0_Arm1_SuperLayout> x118 = LAYOUT_LOOKUP(x3, arm1);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:680)
  Val22Array x119 =
      Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), x117[22]._super};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:681)
  Val22Array x120 =
      Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), x117[23]._super};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:682)
  Val22Array x121 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), x116._super};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:686)
  Val24Array x122 = Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  Val22Array x123 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:636)
  Val x124 = x5.rnd._super;
  Val x125 = x5.blk._super;
  Val x126 = x5.midx._super;
  if (to_size_t(Val(0))) {
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:686)
    RetTupleStruct x127 = exec_RetTuple(ctx,
                                        x119,
                                        x120,
                                        x121,
                                        x122,
                                        x123,
                                        x123,
                                        Val(2),
                                        Val(10),
                                        x124,
                                        x125,
                                        x126,
                                        LAYOUT_LOOKUP(x3, arm0));
  }
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:718)
  Val x128 = x6[11]._super;
  if (to_size_t(Val(1))) {
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:699)
    ToBits_21_Struct x129 = exec_ToBits_21_(ctx, x35, LAYOUT_LOOKUP(x118, unpack_2nx));
    NondetRegStruct21Array x130 = x129._super;
    Val x131 = x130[0]._super;
    Val x132 = x130[1]._super;
    Val x133 = x130[2]._super;
    Val x134 = x130[3]._super;
    Val x135 = x130[4]._super;
    Val x136 = x130[5]._super;
    Val x137 = x130[6]._super;
    Val x138 = x130[7]._super;
    Val x139 = x130[8]._super;
    Val x140 = x130[9]._super;
    Val x141 = x130[10]._super;
    Val x142 = x130[11]._super;
    Val x143 = x130[12]._super;
    Val x144 = x130[13]._super;
    Val x145 = x130[14]._super;
    Val x146 = x130[15]._super;
    Val x147 = x130[16]._super;
    Val x148 = x130[17]._super;
    Val x149 = x130[18]._super;
    Val x150 = x130[19]._super;
    Val x151 = x130[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:700)
    Val x152 = (x132 * Val(2));
    Val x153 = ((((((x131 + x152) + (x133 * Val(4))) + (x134 * Val(8))) + (x135 * Val(16))) +
                 (x136 * Val(32))) +
                (x137 * Val(64)));
    Val x154 = ((((((x153 + (x138 * Val(128))) + (x139 * Val(256))) + (x140 * Val(512))) +
                  (x141 * Val(1024))) +
                 (x142 * Val(2048))) +
                (x143 * Val(4096)));
    Val x155 = ((((((x154 + (x144 * Val(8192))) + (x145 * Val(16384))) + (x146 * Val(32768))) +
                  (x147 * Val(65536))) +
                 (x148 * Val(131072))) +
                (x149 * Val(262144)));
    EQZ((((x155 + (x150 * Val(524288))) + (x151 * Val(1048576))) - x35),
        "chi_minor1(zirgen/circuit/keccak/keccak.zir:700)");
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:713)
    ToBits_21_Struct x156 = exec_ToBits_21_(ctx, x62, LAYOUT_LOOKUP(x118, unpack_2nxp1));
    NondetRegStruct21Array x157 = x156._super;
    Val x158 = x157[0]._super;
    Val x159 = x157[1]._super;
    Val x160 = x157[2]._super;
    Val x161 = x157[3]._super;
    Val x162 = x157[4]._super;
    Val x163 = x157[5]._super;
    Val x164 = x157[6]._super;
    Val x165 = x157[7]._super;
    Val x166 = x157[8]._super;
    Val x167 = x157[9]._super;
    Val x168 = x157[10]._super;
    Val x169 = x157[11]._super;
    Val x170 = x157[12]._super;
    Val x171 = x157[13]._super;
    Val x172 = x157[14]._super;
    Val x173 = x157[15]._super;
    Val x174 = x157[16]._super;
    Val x175 = x157[17]._super;
    Val x176 = x157[18]._super;
    Val x177 = x157[19]._super;
    Val x178 = x157[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:714)
    Val x179 =
        ((((((x158 + (x159 * Val(2))) + (x160 * Val(4))) + (x161 * Val(8))) + (x162 * Val(16))) +
          (x163 * Val(32))) +
         (x164 * Val(64)));
    Val x180 = ((((((x179 + (x165 * Val(128))) + (x166 * Val(256))) + (x167 * Val(512))) +
                  (x168 * Val(1024))) +
                 (x169 * Val(2048))) +
                (x170 * Val(4096)));
    Val x181 = ((((((x180 + (x171 * Val(8192))) + (x172 * Val(16384))) + (x173 * Val(32768))) +
                  (x174 * Val(65536))) +
                 (x175 * Val(131072))) +
                (x176 * Val(262144)));
    EQZ((((x181 + (x177 * Val(524288))) + (x178 * Val(1048576))) - x62),
        "chi_minor1(zirgen/circuit/keccak/keccak.zir:714)");
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:726)
    ToBits_21_Struct x182 = exec_ToBits_21_(ctx, x128, LAYOUT_LOOKUP(x118, unpack_2nxp2));
    NondetRegStruct21Array x183 = x182._super;
    Val x184 = x183[0]._super;
    Val x185 = x183[1]._super;
    Val x186 = x183[2]._super;
    Val x187 = x183[3]._super;
    Val x188 = x183[4]._super;
    Val x189 = x183[5]._super;
    Val x190 = x183[6]._super;
    Val x191 = x183[7]._super;
    Val x192 = x183[8]._super;
    Val x193 = x183[9]._super;
    Val x194 = x183[10]._super;
    Val x195 = x183[11]._super;
    Val x196 = x183[12]._super;
    Val x197 = x183[13]._super;
    Val x198 = x183[14]._super;
    Val x199 = x183[15]._super;
    Val x200 = x183[16]._super;
    Val x201 = x183[17]._super;
    Val x202 = x183[18]._super;
    Val x203 = x183[19]._super;
    Val x204 = x183[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:727)
    Val x205 =
        ((((((x184 + (x185 * Val(2))) + (x186 * Val(4))) + (x187 * Val(8))) + (x188 * Val(16))) +
          (x189 * Val(32))) +
         (x190 * Val(64)));
    Val x206 = ((((((x205 + (x191 * Val(128))) + (x192 * Val(256))) + (x193 * Val(512))) +
                  (x194 * Val(1024))) +
                 (x195 * Val(2048))) +
                (x196 * Val(4096)));
    Val x207 = ((((((x206 + (x197 * Val(8192))) + (x198 * Val(16384))) + (x199 * Val(32768))) +
                  (x200 * Val(65536))) +
                 (x201 * Val(131072))) +
                (x202 * Val(262144)));
    EQZ((((x207 + (x203 * Val(524288))) + (x204 * Val(1048576))) - x128),
        "chi_minor1(zirgen/circuit/keccak/keccak.zir:727)");
    // andnxor(zirgen/circuit/keccak/keccak.zir:118)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:729)
    Val x208 = ((Val(1) - x158) * x184);
    Val x209 = ((Val(1) - x159) * x185);
    Val x210 = ((Val(1) - x160) * x186);
    Val x211 = ((Val(1) - x161) * x187);
    Val x212 = ((Val(1) - x162) * x188);
    Val x213 = ((Val(1) - x163) * x189);
    Val x214 = ((Val(1) - x164) * x190);
    Val x215 = ((Val(1) - x165) * x191);
    Val x216 = ((Val(1) - x166) * x192);
    Val x217 = ((Val(1) - x167) * x193);
    Val x218 = ((Val(1) - x168) * x194);
    Val x219 = ((Val(1) - x169) * x195);
    Val x220 = ((Val(1) - x170) * x196);
    Val x221 = ((Val(1) - x171) * x197);
    Val x222 = ((Val(1) - x172) * x198);
    Val x223 = ((Val(1) - x173) * x199);
    Val x224 = ((Val(1) - x174) * x200);
    Val x225 = ((Val(1) - x175) * x201);
    Val x226 = ((Val(1) - x176) * x202);
    Val x227 = ((Val(1) - x177) * x203);
    Val x228 = ((Val(1) - x178) * x204);
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:730)
    Val x229 = (((((x131 + x208) - ((x131 * Val(2)) * x208)) +
                  (((x132 + x209) - (x152 * x209)) * Val(2))) +
                 (((x133 + x210) - ((x133 * Val(2)) * x210)) * Val(4))) +
                (((x134 + x211) - ((x134 * Val(2)) * x211)) * Val(8)));
    Val x230 = (((x229 + (((x135 + x212) - ((x135 * Val(2)) * x212)) * Val(16))) +
                 (((x136 + x213) - ((x136 * Val(2)) * x213)) * Val(32))) +
                (((x137 + x214) - ((x137 * Val(2)) * x214)) * Val(64)));
    Val x231 = (((x230 + (((x138 + x215) - ((x138 * Val(2)) * x215)) * Val(128))) +
                 (((x139 + x216) - ((x139 * Val(2)) * x216)) * Val(256))) +
                (((x140 + x217) - ((x140 * Val(2)) * x217)) * Val(512)));
    Val x232 = (((x231 + (((x141 + x218) - ((x141 * Val(2)) * x218)) * Val(1024))) +
                 (((x142 + x219) - ((x142 * Val(2)) * x219)) * Val(2048))) +
                (((x143 + x220) - ((x143 * Val(2)) * x220)) * Val(4096)));
    Val x233 = (((x232 + (((x144 + x221) - ((x144 * Val(2)) * x221)) * Val(8192))) +
                 (((x145 + x222) - ((x145 * Val(2)) * x222)) * Val(16384))) +
                (((x146 + x223) - ((x146 * Val(2)) * x223)) * Val(32768)));
    Val x234 = (((x233 + (((x147 + x224) - ((x147 * Val(2)) * x224)) * Val(65536))) +
                 (((x148 + x225) - ((x148 * Val(2)) * x225)) * Val(131072))) +
                (((x149 + x226) - ((x149 * Val(2)) * x226)) * Val(262144)));
    NondetRegStruct x235 =
        exec_Reg(ctx,
                 ((x234 + (((x150 + x227) - ((x150 * Val(2)) * x227)) * Val(524288))) +
                  (((x151 + x228) - ((x151 * Val(2)) * x228)) * Val(1048576))),
                 LAYOUT_LOOKUP(x118, res3n));
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:733)
    RetTupleStruct x236 =
        exec_RetTuple(ctx,
                      x119,
                      x120,
                      x121,
                      x122,
                      x123,
                      Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), x235._super},
                      Val(2),
                      Val(10),
                      x124,
                      x125,
                      x126,
                      LAYOUT_LOOKUP(x118, _super));
  }
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:685)
  RetTupleStruct x237 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x237;
}
RetTupleStruct execChiMinor0_1__0_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<ChiMinor0_1__0_Layout> layout1) {
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:542)
  NondetRegStruct22Array x2 = arg0.arrA;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:546)
  Val x3 = x2[6]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:554)
  ToBits_22_Struct x4 = exec_ToBits_22_(ctx, x3, LAYOUT_LOOKUP(layout1, unpack_0xp1));
  NondetRegStruct22Array x5 = x4._super;
  Val x6 = x5[0]._super;
  Val x7 = x5[1]._super;
  Val x8 = x5[2]._super;
  Val x9 = x5[3]._super;
  Val x10 = x5[4]._super;
  Val x11 = x5[5]._super;
  Val x12 = x5[6]._super;
  Val x13 = x5[7]._super;
  Val x14 = x5[8]._super;
  Val x15 = x5[9]._super;
  Val x16 = x5[10]._super;
  Val x17 = x5[11]._super;
  Val x18 = x5[12]._super;
  Val x19 = x5[13]._super;
  Val x20 = x5[14]._super;
  Val x21 = x5[15]._super;
  Val x22 = x5[16]._super;
  Val x23 = x5[17]._super;
  Val x24 = x5[18]._super;
  Val x25 = x5[19]._super;
  Val x26 = x5[20]._super;
  Val x27 = x5[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:555)
  Val x28 = ((((((x6 + (x7 * Val(2))) + (x8 * Val(4))) + (x9 * Val(8))) + (x10 * Val(16))) +
              (x11 * Val(32))) +
             (x12 * Val(64)));
  Val x29 =
      ((((((x28 + (x13 * Val(128))) + (x14 * Val(256))) + (x15 * Val(512))) + (x16 * Val(1024))) +
        (x17 * Val(2048))) +
       (x18 * Val(4096)));
  Val x30 = ((((((x29 + (x19 * Val(8192))) + (x20 * Val(16384))) + (x21 * Val(32768))) +
               (x22 * Val(65536))) +
              (x23 * Val(131072))) +
             (x24 * Val(262144)));
  EQZ(((((x30 + (x25 * Val(524288))) + (x26 * Val(1048576))) + (x27 * Val(2097152))) - x3),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:555)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:559)
  Val x31 = x2[7]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:567)
  ToBits_21_Struct x32 = exec_ToBits_21_(ctx, x31, LAYOUT_LOOKUP(layout1, unpack_1xp1));
  NondetRegStruct21Array x33 = x32._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:568)
  Val x55 = ((((((x34 + (x35 * Val(2))) + (x36 * Val(4))) + (x37 * Val(8))) + (x38 * Val(16))) +
              (x39 * Val(32))) +
             (x40 * Val(64)));
  Val x56 =
      ((((((x55 + (x41 * Val(128))) + (x42 * Val(256))) + (x43 * Val(512))) + (x44 * Val(1024))) +
        (x45 * Val(2048))) +
       (x46 * Val(4096)));
  Val x57 = ((((((x56 + (x47 * Val(8192))) + (x48 * Val(16384))) + (x49 * Val(32768))) +
               (x50 * Val(65536))) +
              (x51 * Val(131072))) +
             (x52 * Val(262144)));
  EQZ((((x57 + (x53 * Val(524288))) + (x54 * Val(1048576))) - x31),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:568)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:573)
  Val x58 = x2[9]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:581)
  ToBits_22_Struct x59 = exec_ToBits_22_(ctx, x58, LAYOUT_LOOKUP(layout1, unpack_0xp2));
  NondetRegStruct22Array x60 = x59._super;
  Val x61 = x60[0]._super;
  Val x62 = x60[1]._super;
  Val x63 = x60[2]._super;
  Val x64 = x60[3]._super;
  Val x65 = x60[4]._super;
  Val x66 = x60[5]._super;
  Val x67 = x60[6]._super;
  Val x68 = x60[7]._super;
  Val x69 = x60[8]._super;
  Val x70 = x60[9]._super;
  Val x71 = x60[10]._super;
  Val x72 = x60[11]._super;
  Val x73 = x60[12]._super;
  Val x74 = x60[13]._super;
  Val x75 = x60[14]._super;
  Val x76 = x60[15]._super;
  Val x77 = x60[16]._super;
  Val x78 = x60[17]._super;
  Val x79 = x60[18]._super;
  Val x80 = x60[19]._super;
  Val x81 = x60[20]._super;
  Val x82 = x60[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:582)
  Val x83 = ((((((x61 + (x62 * Val(2))) + (x63 * Val(4))) + (x64 * Val(8))) + (x65 * Val(16))) +
              (x66 * Val(32))) +
             (x67 * Val(64)));
  Val x84 =
      ((((((x83 + (x68 * Val(128))) + (x69 * Val(256))) + (x70 * Val(512))) + (x71 * Val(1024))) +
        (x72 * Val(2048))) +
       (x73 * Val(4096)));
  Val x85 = ((((((x84 + (x74 * Val(8192))) + (x75 * Val(16384))) + (x76 * Val(32768))) +
               (x77 * Val(65536))) +
              (x78 * Val(131072))) +
             (x79 * Val(262144)));
  EQZ(((((x85 + (x80 * Val(524288))) + (x81 * Val(1048576))) + (x82 * Val(2097152))) - x58),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:582)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:586)
  Val x86 = x2[10]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:594)
  ToBits_21_Struct x87 = exec_ToBits_21_(ctx, x86, LAYOUT_LOOKUP(layout1, unpack_1xp2));
  NondetRegStruct21Array x88 = x87._super;
  Val x89 = x88[0]._super;
  Val x90 = x88[1]._super;
  Val x91 = x88[2]._super;
  Val x92 = x88[3]._super;
  Val x93 = x88[4]._super;
  Val x94 = x88[5]._super;
  Val x95 = x88[6]._super;
  Val x96 = x88[7]._super;
  Val x97 = x88[8]._super;
  Val x98 = x88[9]._super;
  Val x99 = x88[10]._super;
  Val x100 = x88[11]._super;
  Val x101 = x88[12]._super;
  Val x102 = x88[13]._super;
  Val x103 = x88[14]._super;
  Val x104 = x88[15]._super;
  Val x105 = x88[16]._super;
  Val x106 = x88[17]._super;
  Val x107 = x88[18]._super;
  Val x108 = x88[19]._super;
  Val x109 = x88[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:595)
  Val x110 = ((((((x89 + (x90 * Val(2))) + (x91 * Val(4))) + (x92 * Val(8))) + (x93 * Val(16))) +
               (x94 * Val(32))) +
              (x95 * Val(64)));
  Val x111 =
      ((((((x110 + (x96 * Val(128))) + (x97 * Val(256))) + (x98 * Val(512))) + (x99 * Val(1024))) +
        (x100 * Val(2048))) +
       (x101 * Val(4096)));
  Val x112 = ((((((x111 + (x102 * Val(8192))) + (x103 * Val(16384))) + (x104 * Val(32768))) +
                (x105 * Val(65536))) +
               (x106 * Val(131072))) +
              (x107 * Val(262144)));
  EQZ((((x112 + (x108 * Val(524288))) + (x109 * Val(1048576))) - x86),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:595)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:599)
  Val x113 = x2[3]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:607)
  ToBits_22_Struct x114 = exec_ToBits_22_(ctx, x113, LAYOUT_LOOKUP(layout1, unpack_0x));
  NondetRegStruct22Array x115 = x114._super;
  Val x116 = x115[0]._super;
  Val x117 = x115[1]._super;
  Val x118 = x115[2]._super;
  Val x119 = x115[3]._super;
  Val x120 = x115[4]._super;
  Val x121 = x115[5]._super;
  Val x122 = x115[6]._super;
  Val x123 = x115[7]._super;
  Val x124 = x115[8]._super;
  Val x125 = x115[9]._super;
  Val x126 = x115[10]._super;
  Val x127 = x115[11]._super;
  Val x128 = x115[12]._super;
  Val x129 = x115[13]._super;
  Val x130 = x115[14]._super;
  Val x131 = x115[15]._super;
  Val x132 = x115[16]._super;
  Val x133 = x115[17]._super;
  Val x134 = x115[18]._super;
  Val x135 = x115[19]._super;
  Val x136 = x115[20]._super;
  Val x137 = x115[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:608)
  Val x138 = (x117 * Val(2));
  Val x139 = ((((((x116 + x138) + (x118 * Val(4))) + (x119 * Val(8))) + (x120 * Val(16))) +
               (x121 * Val(32))) +
              (x122 * Val(64)));
  Val x140 = ((((((x139 + (x123 * Val(128))) + (x124 * Val(256))) + (x125 * Val(512))) +
                (x126 * Val(1024))) +
               (x127 * Val(2048))) +
              (x128 * Val(4096)));
  Val x141 = ((((((x140 + (x129 * Val(8192))) + (x130 * Val(16384))) + (x131 * Val(32768))) +
                (x132 * Val(65536))) +
               (x133 * Val(131072))) +
              (x134 * Val(262144)));
  EQZ(((((x141 + (x135 * Val(524288))) + (x136 * Val(1048576))) + (x137 * Val(2097152))) - x113),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:608)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:612)
  Val x142 = x2[4]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:620)
  ToBits_21_Struct x143 = exec_ToBits_21_(ctx, x142, LAYOUT_LOOKUP(layout1, unpack_1x));
  NondetRegStruct21Array x144 = x143._super;
  Val x145 = x144[0]._super;
  Val x146 = x144[1]._super;
  Val x147 = x144[2]._super;
  Val x148 = x144[3]._super;
  Val x149 = x144[4]._super;
  Val x150 = x144[5]._super;
  Val x151 = x144[6]._super;
  Val x152 = x144[7]._super;
  Val x153 = x144[8]._super;
  Val x154 = x144[9]._super;
  Val x155 = x144[10]._super;
  Val x156 = x144[11]._super;
  Val x157 = x144[12]._super;
  Val x158 = x144[13]._super;
  Val x159 = x144[14]._super;
  Val x160 = x144[15]._super;
  Val x161 = x144[16]._super;
  Val x162 = x144[17]._super;
  Val x163 = x144[18]._super;
  Val x164 = x144[19]._super;
  Val x165 = x144[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:621)
  Val x166 = (x146 * Val(2));
  Val x167 = ((((((x145 + x166) + (x147 * Val(4))) + (x148 * Val(8))) + (x149 * Val(16))) +
               (x150 * Val(32))) +
              (x151 * Val(64)));
  Val x168 = ((((((x167 + (x152 * Val(128))) + (x153 * Val(256))) + (x154 * Val(512))) +
                (x155 * Val(1024))) +
               (x156 * Val(2048))) +
              (x157 * Val(4096)));
  Val x169 = ((((((x168 + (x158 * Val(8192))) + (x159 * Val(16384))) + (x160 * Val(32768))) +
                (x161 * Val(65536))) +
               (x162 * Val(131072))) +
              (x163 * Val(262144)));
  EQZ((((x169 + (x164 * Val(524288))) + (x165 * Val(1048576))) - x142),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:621)");
  // andnxor(zirgen/circuit/keccak/keccak.zir:118)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:623)
  Val x170 = ((Val(1) - x6) * x61);
  Val x171 = ((Val(1) - x7) * x62);
  Val x172 = ((Val(1) - x8) * x63);
  Val x173 = ((Val(1) - x9) * x64);
  Val x174 = ((Val(1) - x10) * x65);
  Val x175 = ((Val(1) - x11) * x66);
  Val x176 = ((Val(1) - x12) * x67);
  Val x177 = ((Val(1) - x13) * x68);
  Val x178 = ((Val(1) - x14) * x69);
  Val x179 = ((Val(1) - x15) * x70);
  Val x180 = ((Val(1) - x16) * x71);
  Val x181 = ((Val(1) - x17) * x72);
  Val x182 = ((Val(1) - x18) * x73);
  Val x183 = ((Val(1) - x19) * x74);
  Val x184 = ((Val(1) - x20) * x75);
  Val x185 = ((Val(1) - x21) * x76);
  Val x186 = ((Val(1) - x22) * x77);
  Val x187 = ((Val(1) - x23) * x78);
  Val x188 = ((Val(1) - x24) * x79);
  Val x189 = ((Val(1) - x25) * x80);
  Val x190 = ((Val(1) - x26) * x81);
  Val x191 = ((Val(1) - x27) * x82);
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:624)
  Val x192 = ((Val(1) - x34) * x89);
  Val x193 = ((Val(1) - x35) * x90);
  Val x194 = ((Val(1) - x36) * x91);
  Val x195 = ((Val(1) - x37) * x92);
  Val x196 = ((Val(1) - x38) * x93);
  Val x197 = ((Val(1) - x39) * x94);
  Val x198 = ((Val(1) - x40) * x95);
  Val x199 = ((Val(1) - x41) * x96);
  Val x200 = ((Val(1) - x42) * x97);
  Val x201 = ((Val(1) - x43) * x98);
  Val x202 = ((Val(1) - x44) * x99);
  Val x203 = ((Val(1) - x45) * x100);
  Val x204 = ((Val(1) - x46) * x101);
  Val x205 = ((Val(1) - x47) * x102);
  Val x206 = ((Val(1) - x48) * x103);
  Val x207 = ((Val(1) - x49) * x104);
  Val x208 = ((Val(1) - x50) * x105);
  Val x209 = ((Val(1) - x51) * x106);
  Val x210 = ((Val(1) - x52) * x107);
  Val x211 = ((Val(1) - x53) * x108);
  Val x212 = ((Val(1) - x54) * x109);
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:625)
  Val x213 =
      (((((x116 + x170) - ((x116 * Val(2)) * x170)) + (((x117 + x171) - (x138 * x171)) * Val(2))) +
        (((x118 + x172) - ((x118 * Val(2)) * x172)) * Val(4))) +
       (((x119 + x173) - ((x119 * Val(2)) * x173)) * Val(8)));
  Val x214 = (((x213 + (((x120 + x174) - ((x120 * Val(2)) * x174)) * Val(16))) +
               (((x121 + x175) - ((x121 * Val(2)) * x175)) * Val(32))) +
              (((x122 + x176) - ((x122 * Val(2)) * x176)) * Val(64)));
  Val x215 = (((x214 + (((x123 + x177) - ((x123 * Val(2)) * x177)) * Val(128))) +
               (((x124 + x178) - ((x124 * Val(2)) * x178)) * Val(256))) +
              (((x125 + x179) - ((x125 * Val(2)) * x179)) * Val(512)));
  Val x216 = (((x215 + (((x126 + x180) - ((x126 * Val(2)) * x180)) * Val(1024))) +
               (((x127 + x181) - ((x127 * Val(2)) * x181)) * Val(2048))) +
              (((x128 + x182) - ((x128 * Val(2)) * x182)) * Val(4096)));
  Val x217 = (((x216 + (((x129 + x183) - ((x129 * Val(2)) * x183)) * Val(8192))) +
               (((x130 + x184) - ((x130 * Val(2)) * x184)) * Val(16384))) +
              (((x131 + x185) - ((x131 * Val(2)) * x185)) * Val(32768)));
  Val x218 = (((x217 + (((x132 + x186) - ((x132 * Val(2)) * x186)) * Val(65536))) +
               (((x133 + x187) - ((x133 * Val(2)) * x187)) * Val(131072))) +
              (((x134 + x188) - ((x134 * Val(2)) * x188)) * Val(262144)));
  Val x219 = (((x218 + (((x135 + x189) - ((x135 * Val(2)) * x189)) * Val(524288))) +
               (((x136 + x190) - ((x136 * Val(2)) * x190)) * Val(1048576))) +
              (((x137 + x191) - ((x137 * Val(2)) * x191)) * Val(2097152)));
  NondetRegStruct x220 = exec_Reg(ctx, x219, LAYOUT_LOOKUP(layout1, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  Val x221 =
      (((((x145 + x192) - ((x145 * Val(2)) * x192)) + (((x146 + x193) - (x166 * x193)) * Val(2))) +
        (((x147 + x194) - ((x147 * Val(2)) * x194)) * Val(4))) +
       (((x148 + x195) - ((x148 * Val(2)) * x195)) * Val(8)));
  Val x222 = (((x221 + (((x149 + x196) - ((x149 * Val(2)) * x196)) * Val(16))) +
               (((x150 + x197) - ((x150 * Val(2)) * x197)) * Val(32))) +
              (((x151 + x198) - ((x151 * Val(2)) * x198)) * Val(64)));
  Val x223 = (((x222 + (((x152 + x199) - ((x152 * Val(2)) * x199)) * Val(128))) +
               (((x153 + x200) - ((x153 * Val(2)) * x200)) * Val(256))) +
              (((x154 + x201) - ((x154 * Val(2)) * x201)) * Val(512)));
  Val x224 = (((x223 + (((x155 + x202) - ((x155 * Val(2)) * x202)) * Val(1024))) +
               (((x156 + x203) - ((x156 * Val(2)) * x203)) * Val(2048))) +
              (((x157 + x204) - ((x157 * Val(2)) * x204)) * Val(4096)));
  Val x225 = (((x224 + (((x158 + x205) - ((x158 * Val(2)) * x205)) * Val(8192))) +
               (((x159 + x206) - ((x159 * Val(2)) * x206)) * Val(16384))) +
              (((x160 + x207) - ((x160 * Val(2)) * x207)) * Val(32768)));
  Val x226 = (((x225 + (((x161 + x208) - ((x161 * Val(2)) * x208)) * Val(65536))) +
               (((x162 + x209) - ((x162 * Val(2)) * x209)) * Val(131072))) +
              (((x163 + x210) - ((x163 * Val(2)) * x210)) * Val(262144)));
  NondetRegStruct x227 =
      exec_Reg(ctx,
               ((x226 + (((x164 + x211) - ((x164 * Val(2)) * x211)) * Val(524288))) +
                (((x165 + x212) - ((x165 * Val(2)) * x212)) * Val(1048576))),
               LAYOUT_LOOKUP(layout1, _1));
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:630)
  Val22Array x228 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x229 = exec_RetTuple(
      ctx,
      x228,
      x228,
      x228,
      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), x220._super, x227._super},
      x228,
      x228,
      Val(3),
      Val(10),
      arg0.rnd._super,
      arg0.blk._super,
      arg0.midx._super,
      LAYOUT_LOOKUP(layout1, _super));
  return x229;
}
RetTupleStruct execChiMinor0_2__0_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<ChiMinor0_2__0_Layout> layout1) {
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:542)
  NondetRegStruct22Array x2 = arg0.arrA;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:546)
  Val x3 = x2[9]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:554)
  ToBits_22_Struct x4 = exec_ToBits_22_(ctx, x3, LAYOUT_LOOKUP(layout1, unpack_0xp1));
  NondetRegStruct22Array x5 = x4._super;
  Val x6 = x5[0]._super;
  Val x7 = x5[1]._super;
  Val x8 = x5[2]._super;
  Val x9 = x5[3]._super;
  Val x10 = x5[4]._super;
  Val x11 = x5[5]._super;
  Val x12 = x5[6]._super;
  Val x13 = x5[7]._super;
  Val x14 = x5[8]._super;
  Val x15 = x5[9]._super;
  Val x16 = x5[10]._super;
  Val x17 = x5[11]._super;
  Val x18 = x5[12]._super;
  Val x19 = x5[13]._super;
  Val x20 = x5[14]._super;
  Val x21 = x5[15]._super;
  Val x22 = x5[16]._super;
  Val x23 = x5[17]._super;
  Val x24 = x5[18]._super;
  Val x25 = x5[19]._super;
  Val x26 = x5[20]._super;
  Val x27 = x5[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:555)
  Val x28 = ((((((x6 + (x7 * Val(2))) + (x8 * Val(4))) + (x9 * Val(8))) + (x10 * Val(16))) +
              (x11 * Val(32))) +
             (x12 * Val(64)));
  Val x29 =
      ((((((x28 + (x13 * Val(128))) + (x14 * Val(256))) + (x15 * Val(512))) + (x16 * Val(1024))) +
        (x17 * Val(2048))) +
       (x18 * Val(4096)));
  Val x30 = ((((((x29 + (x19 * Val(8192))) + (x20 * Val(16384))) + (x21 * Val(32768))) +
               (x22 * Val(65536))) +
              (x23 * Val(131072))) +
             (x24 * Val(262144)));
  EQZ(((((x30 + (x25 * Val(524288))) + (x26 * Val(1048576))) + (x27 * Val(2097152))) - x3),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:555)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:559)
  Val x31 = x2[10]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:567)
  ToBits_21_Struct x32 = exec_ToBits_21_(ctx, x31, LAYOUT_LOOKUP(layout1, unpack_1xp1));
  NondetRegStruct21Array x33 = x32._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:568)
  Val x55 = ((((((x34 + (x35 * Val(2))) + (x36 * Val(4))) + (x37 * Val(8))) + (x38 * Val(16))) +
              (x39 * Val(32))) +
             (x40 * Val(64)));
  Val x56 =
      ((((((x55 + (x41 * Val(128))) + (x42 * Val(256))) + (x43 * Val(512))) + (x44 * Val(1024))) +
        (x45 * Val(2048))) +
       (x46 * Val(4096)));
  Val x57 = ((((((x56 + (x47 * Val(8192))) + (x48 * Val(16384))) + (x49 * Val(32768))) +
               (x50 * Val(65536))) +
              (x51 * Val(131072))) +
             (x52 * Val(262144)));
  EQZ((((x57 + (x53 * Val(524288))) + (x54 * Val(1048576))) - x31),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:568)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:573)
  Val x58 = x2[12]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:581)
  ToBits_22_Struct x59 = exec_ToBits_22_(ctx, x58, LAYOUT_LOOKUP(layout1, unpack_0xp2));
  NondetRegStruct22Array x60 = x59._super;
  Val x61 = x60[0]._super;
  Val x62 = x60[1]._super;
  Val x63 = x60[2]._super;
  Val x64 = x60[3]._super;
  Val x65 = x60[4]._super;
  Val x66 = x60[5]._super;
  Val x67 = x60[6]._super;
  Val x68 = x60[7]._super;
  Val x69 = x60[8]._super;
  Val x70 = x60[9]._super;
  Val x71 = x60[10]._super;
  Val x72 = x60[11]._super;
  Val x73 = x60[12]._super;
  Val x74 = x60[13]._super;
  Val x75 = x60[14]._super;
  Val x76 = x60[15]._super;
  Val x77 = x60[16]._super;
  Val x78 = x60[17]._super;
  Val x79 = x60[18]._super;
  Val x80 = x60[19]._super;
  Val x81 = x60[20]._super;
  Val x82 = x60[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:582)
  Val x83 = ((((((x61 + (x62 * Val(2))) + (x63 * Val(4))) + (x64 * Val(8))) + (x65 * Val(16))) +
              (x66 * Val(32))) +
             (x67 * Val(64)));
  Val x84 =
      ((((((x83 + (x68 * Val(128))) + (x69 * Val(256))) + (x70 * Val(512))) + (x71 * Val(1024))) +
        (x72 * Val(2048))) +
       (x73 * Val(4096)));
  Val x85 = ((((((x84 + (x74 * Val(8192))) + (x75 * Val(16384))) + (x76 * Val(32768))) +
               (x77 * Val(65536))) +
              (x78 * Val(131072))) +
             (x79 * Val(262144)));
  EQZ(((((x85 + (x80 * Val(524288))) + (x81 * Val(1048576))) + (x82 * Val(2097152))) - x58),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:582)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:586)
  Val x86 = x2[13]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:594)
  ToBits_21_Struct x87 = exec_ToBits_21_(ctx, x86, LAYOUT_LOOKUP(layout1, unpack_1xp2));
  NondetRegStruct21Array x88 = x87._super;
  Val x89 = x88[0]._super;
  Val x90 = x88[1]._super;
  Val x91 = x88[2]._super;
  Val x92 = x88[3]._super;
  Val x93 = x88[4]._super;
  Val x94 = x88[5]._super;
  Val x95 = x88[6]._super;
  Val x96 = x88[7]._super;
  Val x97 = x88[8]._super;
  Val x98 = x88[9]._super;
  Val x99 = x88[10]._super;
  Val x100 = x88[11]._super;
  Val x101 = x88[12]._super;
  Val x102 = x88[13]._super;
  Val x103 = x88[14]._super;
  Val x104 = x88[15]._super;
  Val x105 = x88[16]._super;
  Val x106 = x88[17]._super;
  Val x107 = x88[18]._super;
  Val x108 = x88[19]._super;
  Val x109 = x88[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:595)
  Val x110 = ((((((x89 + (x90 * Val(2))) + (x91 * Val(4))) + (x92 * Val(8))) + (x93 * Val(16))) +
               (x94 * Val(32))) +
              (x95 * Val(64)));
  Val x111 =
      ((((((x110 + (x96 * Val(128))) + (x97 * Val(256))) + (x98 * Val(512))) + (x99 * Val(1024))) +
        (x100 * Val(2048))) +
       (x101 * Val(4096)));
  Val x112 = ((((((x111 + (x102 * Val(8192))) + (x103 * Val(16384))) + (x104 * Val(32768))) +
                (x105 * Val(65536))) +
               (x106 * Val(131072))) +
              (x107 * Val(262144)));
  EQZ((((x112 + (x108 * Val(524288))) + (x109 * Val(1048576))) - x86),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:595)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:599)
  Val x113 = x2[6]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:607)
  ToBits_22_Struct x114 = exec_ToBits_22_(ctx, x113, LAYOUT_LOOKUP(layout1, unpack_0x));
  NondetRegStruct22Array x115 = x114._super;
  Val x116 = x115[0]._super;
  Val x117 = x115[1]._super;
  Val x118 = x115[2]._super;
  Val x119 = x115[3]._super;
  Val x120 = x115[4]._super;
  Val x121 = x115[5]._super;
  Val x122 = x115[6]._super;
  Val x123 = x115[7]._super;
  Val x124 = x115[8]._super;
  Val x125 = x115[9]._super;
  Val x126 = x115[10]._super;
  Val x127 = x115[11]._super;
  Val x128 = x115[12]._super;
  Val x129 = x115[13]._super;
  Val x130 = x115[14]._super;
  Val x131 = x115[15]._super;
  Val x132 = x115[16]._super;
  Val x133 = x115[17]._super;
  Val x134 = x115[18]._super;
  Val x135 = x115[19]._super;
  Val x136 = x115[20]._super;
  Val x137 = x115[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:608)
  Val x138 = (x117 * Val(2));
  Val x139 = ((((((x116 + x138) + (x118 * Val(4))) + (x119 * Val(8))) + (x120 * Val(16))) +
               (x121 * Val(32))) +
              (x122 * Val(64)));
  Val x140 = ((((((x139 + (x123 * Val(128))) + (x124 * Val(256))) + (x125 * Val(512))) +
                (x126 * Val(1024))) +
               (x127 * Val(2048))) +
              (x128 * Val(4096)));
  Val x141 = ((((((x140 + (x129 * Val(8192))) + (x130 * Val(16384))) + (x131 * Val(32768))) +
                (x132 * Val(65536))) +
               (x133 * Val(131072))) +
              (x134 * Val(262144)));
  EQZ(((((x141 + (x135 * Val(524288))) + (x136 * Val(1048576))) + (x137 * Val(2097152))) - x113),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:608)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:612)
  Val x142 = x2[7]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:620)
  ToBits_21_Struct x143 = exec_ToBits_21_(ctx, x142, LAYOUT_LOOKUP(layout1, unpack_1x));
  NondetRegStruct21Array x144 = x143._super;
  Val x145 = x144[0]._super;
  Val x146 = x144[1]._super;
  Val x147 = x144[2]._super;
  Val x148 = x144[3]._super;
  Val x149 = x144[4]._super;
  Val x150 = x144[5]._super;
  Val x151 = x144[6]._super;
  Val x152 = x144[7]._super;
  Val x153 = x144[8]._super;
  Val x154 = x144[9]._super;
  Val x155 = x144[10]._super;
  Val x156 = x144[11]._super;
  Val x157 = x144[12]._super;
  Val x158 = x144[13]._super;
  Val x159 = x144[14]._super;
  Val x160 = x144[15]._super;
  Val x161 = x144[16]._super;
  Val x162 = x144[17]._super;
  Val x163 = x144[18]._super;
  Val x164 = x144[19]._super;
  Val x165 = x144[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:621)
  Val x166 = (x146 * Val(2));
  Val x167 = ((((((x145 + x166) + (x147 * Val(4))) + (x148 * Val(8))) + (x149 * Val(16))) +
               (x150 * Val(32))) +
              (x151 * Val(64)));
  Val x168 = ((((((x167 + (x152 * Val(128))) + (x153 * Val(256))) + (x154 * Val(512))) +
                (x155 * Val(1024))) +
               (x156 * Val(2048))) +
              (x157 * Val(4096)));
  Val x169 = ((((((x168 + (x158 * Val(8192))) + (x159 * Val(16384))) + (x160 * Val(32768))) +
                (x161 * Val(65536))) +
               (x162 * Val(131072))) +
              (x163 * Val(262144)));
  EQZ((((x169 + (x164 * Val(524288))) + (x165 * Val(1048576))) - x142),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:621)");
  // andnxor(zirgen/circuit/keccak/keccak.zir:118)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:623)
  Val x170 = ((Val(1) - x6) * x61);
  Val x171 = ((Val(1) - x7) * x62);
  Val x172 = ((Val(1) - x8) * x63);
  Val x173 = ((Val(1) - x9) * x64);
  Val x174 = ((Val(1) - x10) * x65);
  Val x175 = ((Val(1) - x11) * x66);
  Val x176 = ((Val(1) - x12) * x67);
  Val x177 = ((Val(1) - x13) * x68);
  Val x178 = ((Val(1) - x14) * x69);
  Val x179 = ((Val(1) - x15) * x70);
  Val x180 = ((Val(1) - x16) * x71);
  Val x181 = ((Val(1) - x17) * x72);
  Val x182 = ((Val(1) - x18) * x73);
  Val x183 = ((Val(1) - x19) * x74);
  Val x184 = ((Val(1) - x20) * x75);
  Val x185 = ((Val(1) - x21) * x76);
  Val x186 = ((Val(1) - x22) * x77);
  Val x187 = ((Val(1) - x23) * x78);
  Val x188 = ((Val(1) - x24) * x79);
  Val x189 = ((Val(1) - x25) * x80);
  Val x190 = ((Val(1) - x26) * x81);
  Val x191 = ((Val(1) - x27) * x82);
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:624)
  Val x192 = ((Val(1) - x34) * x89);
  Val x193 = ((Val(1) - x35) * x90);
  Val x194 = ((Val(1) - x36) * x91);
  Val x195 = ((Val(1) - x37) * x92);
  Val x196 = ((Val(1) - x38) * x93);
  Val x197 = ((Val(1) - x39) * x94);
  Val x198 = ((Val(1) - x40) * x95);
  Val x199 = ((Val(1) - x41) * x96);
  Val x200 = ((Val(1) - x42) * x97);
  Val x201 = ((Val(1) - x43) * x98);
  Val x202 = ((Val(1) - x44) * x99);
  Val x203 = ((Val(1) - x45) * x100);
  Val x204 = ((Val(1) - x46) * x101);
  Val x205 = ((Val(1) - x47) * x102);
  Val x206 = ((Val(1) - x48) * x103);
  Val x207 = ((Val(1) - x49) * x104);
  Val x208 = ((Val(1) - x50) * x105);
  Val x209 = ((Val(1) - x51) * x106);
  Val x210 = ((Val(1) - x52) * x107);
  Val x211 = ((Val(1) - x53) * x108);
  Val x212 = ((Val(1) - x54) * x109);
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:625)
  Val x213 =
      (((((x116 + x170) - ((x116 * Val(2)) * x170)) + (((x117 + x171) - (x138 * x171)) * Val(2))) +
        (((x118 + x172) - ((x118 * Val(2)) * x172)) * Val(4))) +
       (((x119 + x173) - ((x119 * Val(2)) * x173)) * Val(8)));
  Val x214 = (((x213 + (((x120 + x174) - ((x120 * Val(2)) * x174)) * Val(16))) +
               (((x121 + x175) - ((x121 * Val(2)) * x175)) * Val(32))) +
              (((x122 + x176) - ((x122 * Val(2)) * x176)) * Val(64)));
  Val x215 = (((x214 + (((x123 + x177) - ((x123 * Val(2)) * x177)) * Val(128))) +
               (((x124 + x178) - ((x124 * Val(2)) * x178)) * Val(256))) +
              (((x125 + x179) - ((x125 * Val(2)) * x179)) * Val(512)));
  Val x216 = (((x215 + (((x126 + x180) - ((x126 * Val(2)) * x180)) * Val(1024))) +
               (((x127 + x181) - ((x127 * Val(2)) * x181)) * Val(2048))) +
              (((x128 + x182) - ((x128 * Val(2)) * x182)) * Val(4096)));
  Val x217 = (((x216 + (((x129 + x183) - ((x129 * Val(2)) * x183)) * Val(8192))) +
               (((x130 + x184) - ((x130 * Val(2)) * x184)) * Val(16384))) +
              (((x131 + x185) - ((x131 * Val(2)) * x185)) * Val(32768)));
  Val x218 = (((x217 + (((x132 + x186) - ((x132 * Val(2)) * x186)) * Val(65536))) +
               (((x133 + x187) - ((x133 * Val(2)) * x187)) * Val(131072))) +
              (((x134 + x188) - ((x134 * Val(2)) * x188)) * Val(262144)));
  Val x219 = (((x218 + (((x135 + x189) - ((x135 * Val(2)) * x189)) * Val(524288))) +
               (((x136 + x190) - ((x136 * Val(2)) * x190)) * Val(1048576))) +
              (((x137 + x191) - ((x137 * Val(2)) * x191)) * Val(2097152)));
  NondetRegStruct x220 = exec_Reg(ctx, x219, LAYOUT_LOOKUP(layout1, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  Val x221 =
      (((((x145 + x192) - ((x145 * Val(2)) * x192)) + (((x146 + x193) - (x166 * x193)) * Val(2))) +
        (((x147 + x194) - ((x147 * Val(2)) * x194)) * Val(4))) +
       (((x148 + x195) - ((x148 * Val(2)) * x195)) * Val(8)));
  Val x222 = (((x221 + (((x149 + x196) - ((x149 * Val(2)) * x196)) * Val(16))) +
               (((x150 + x197) - ((x150 * Val(2)) * x197)) * Val(32))) +
              (((x151 + x198) - ((x151 * Val(2)) * x198)) * Val(64)));
  Val x223 = (((x222 + (((x152 + x199) - ((x152 * Val(2)) * x199)) * Val(128))) +
               (((x153 + x200) - ((x153 * Val(2)) * x200)) * Val(256))) +
              (((x154 + x201) - ((x154 * Val(2)) * x201)) * Val(512)));
  Val x224 = (((x223 + (((x155 + x202) - ((x155 * Val(2)) * x202)) * Val(1024))) +
               (((x156 + x203) - ((x156 * Val(2)) * x203)) * Val(2048))) +
              (((x157 + x204) - ((x157 * Val(2)) * x204)) * Val(4096)));
  Val x225 = (((x224 + (((x158 + x205) - ((x158 * Val(2)) * x205)) * Val(8192))) +
               (((x159 + x206) - ((x159 * Val(2)) * x206)) * Val(16384))) +
              (((x160 + x207) - ((x160 * Val(2)) * x207)) * Val(32768)));
  Val x226 = (((x225 + (((x161 + x208) - ((x161 * Val(2)) * x208)) * Val(65536))) +
               (((x162 + x209) - ((x162 * Val(2)) * x209)) * Val(131072))) +
              (((x163 + x210) - ((x163 * Val(2)) * x210)) * Val(262144)));
  NondetRegStruct x227 =
      exec_Reg(ctx,
               ((x226 + (((x164 + x211) - ((x164 * Val(2)) * x211)) * Val(524288))) +
                (((x165 + x212) - ((x165 * Val(2)) * x212)) * Val(1048576))),
               LAYOUT_LOOKUP(layout1, _1));
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:630)
  Val22Array x228 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x229 = exec_RetTuple(
      ctx,
      x228,
      x228,
      x228,
      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), x220._super, x227._super},
      x228,
      x228,
      Val(4),
      Val(10),
      arg0.rnd._super,
      arg0.blk._super,
      arg0.midx._super,
      LAYOUT_LOOKUP(layout1, _super));
  return x229;
}
RetTupleStruct execChiMinor1_2__0_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<ChiMinor1_2__0_Layout> layout2) {
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:685)
  BoundLayout<ChiMinor1_2__0__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:635)
  RetTupleStruct x4 = back_RetTuple(ctx, 5, arg1);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:636)
  RetTupleStruct x5 = back_RetTuple(ctx, 1, arg1);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:635)
  NondetRegStruct22Array x6 = x4.arrA;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:640)
  Val x7 = x6[8]._super;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:648)
  ToBits_21_Struct x8 = exec_ToBits_21_(ctx, x7, LAYOUT_LOOKUP(layout2, unpack_2x));
  NondetRegStruct21Array x9 = x8._super;
  Val x10 = x9[0]._super;
  Val x11 = x9[1]._super;
  Val x12 = x9[2]._super;
  Val x13 = x9[3]._super;
  Val x14 = x9[4]._super;
  Val x15 = x9[5]._super;
  Val x16 = x9[6]._super;
  Val x17 = x9[7]._super;
  Val x18 = x9[8]._super;
  Val x19 = x9[9]._super;
  Val x20 = x9[10]._super;
  Val x21 = x9[11]._super;
  Val x22 = x9[12]._super;
  Val x23 = x9[13]._super;
  Val x24 = x9[14]._super;
  Val x25 = x9[15]._super;
  Val x26 = x9[16]._super;
  Val x27 = x9[17]._super;
  Val x28 = x9[18]._super;
  Val x29 = x9[19]._super;
  Val x30 = x9[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:649)
  Val x31 = (x11 * Val(2));
  Val x32 =
      ((((((x10 + x31) + (x12 * Val(4))) + (x13 * Val(8))) + (x14 * Val(16))) + (x15 * Val(32))) +
       (x16 * Val(64)));
  Val x33 =
      ((((((x32 + (x17 * Val(128))) + (x18 * Val(256))) + (x19 * Val(512))) + (x20 * Val(1024))) +
        (x21 * Val(2048))) +
       (x22 * Val(4096)));
  Val x34 = ((((((x33 + (x23 * Val(8192))) + (x24 * Val(16384))) + (x25 * Val(32768))) +
               (x26 * Val(65536))) +
              (x27 * Val(131072))) +
             (x28 * Val(262144)));
  EQZ((((x34 + (x29 * Val(524288))) + (x30 * Val(1048576))) - x7),
      "chi_minor1(zirgen/circuit/keccak/keccak.zir:649)");
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:654)
  Val x35 = x6[11]._super;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:662)
  ToBits_21_Struct x36 = exec_ToBits_21_(ctx, x35, LAYOUT_LOOKUP(layout2, unpack_2xp1));
  NondetRegStruct21Array x37 = x36._super;
  Val x38 = x37[0]._super;
  Val x39 = x37[1]._super;
  Val x40 = x37[2]._super;
  Val x41 = x37[3]._super;
  Val x42 = x37[4]._super;
  Val x43 = x37[5]._super;
  Val x44 = x37[6]._super;
  Val x45 = x37[7]._super;
  Val x46 = x37[8]._super;
  Val x47 = x37[9]._super;
  Val x48 = x37[10]._super;
  Val x49 = x37[11]._super;
  Val x50 = x37[12]._super;
  Val x51 = x37[13]._super;
  Val x52 = x37[14]._super;
  Val x53 = x37[15]._super;
  Val x54 = x37[16]._super;
  Val x55 = x37[17]._super;
  Val x56 = x37[18]._super;
  Val x57 = x37[19]._super;
  Val x58 = x37[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:663)
  Val x59 = ((((((x38 + (x39 * Val(2))) + (x40 * Val(4))) + (x41 * Val(8))) + (x42 * Val(16))) +
              (x43 * Val(32))) +
             (x44 * Val(64)));
  Val x60 =
      ((((((x59 + (x45 * Val(128))) + (x46 * Val(256))) + (x47 * Val(512))) + (x48 * Val(1024))) +
        (x49 * Val(2048))) +
       (x50 * Val(4096)));
  Val x61 = ((((((x60 + (x51 * Val(8192))) + (x52 * Val(16384))) + (x53 * Val(32768))) +
               (x54 * Val(65536))) +
              (x55 * Val(131072))) +
             (x56 * Val(262144)));
  EQZ((((x61 + (x57 * Val(524288))) + (x58 * Val(1048576))) - x35),
      "chi_minor1(zirgen/circuit/keccak/keccak.zir:663)");
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:667)
  Val x62 = x6[14]._super;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:675)
  ToBits_21_Struct x63 = exec_ToBits_21_(ctx, x62, LAYOUT_LOOKUP(layout2, unpack_2xp2));
  NondetRegStruct21Array x64 = x63._super;
  Val x65 = x64[0]._super;
  Val x66 = x64[1]._super;
  Val x67 = x64[2]._super;
  Val x68 = x64[3]._super;
  Val x69 = x64[4]._super;
  Val x70 = x64[5]._super;
  Val x71 = x64[6]._super;
  Val x72 = x64[7]._super;
  Val x73 = x64[8]._super;
  Val x74 = x64[9]._super;
  Val x75 = x64[10]._super;
  Val x76 = x64[11]._super;
  Val x77 = x64[12]._super;
  Val x78 = x64[13]._super;
  Val x79 = x64[14]._super;
  Val x80 = x64[15]._super;
  Val x81 = x64[16]._super;
  Val x82 = x64[17]._super;
  Val x83 = x64[18]._super;
  Val x84 = x64[19]._super;
  Val x85 = x64[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:676)
  Val x86 = ((((((x65 + (x66 * Val(2))) + (x67 * Val(4))) + (x68 * Val(8))) + (x69 * Val(16))) +
              (x70 * Val(32))) +
             (x71 * Val(64)));
  Val x87 =
      ((((((x86 + (x72 * Val(128))) + (x73 * Val(256))) + (x74 * Val(512))) + (x75 * Val(1024))) +
        (x76 * Val(2048))) +
       (x77 * Val(4096)));
  Val x88 = ((((((x87 + (x78 * Val(8192))) + (x79 * Val(16384))) + (x80 * Val(32768))) +
               (x81 * Val(65536))) +
              (x82 * Val(131072))) +
             (x83 * Val(262144)));
  EQZ((((x88 + (x84 * Val(524288))) + (x85 * Val(1048576))) - x62),
      "chi_minor1(zirgen/circuit/keccak/keccak.zir:676)");
  // andnxor(zirgen/circuit/keccak/keccak.zir:118)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:678)
  Val x89 = ((Val(1) - x38) * x65);
  Val x90 = ((Val(1) - x39) * x66);
  Val x91 = ((Val(1) - x40) * x67);
  Val x92 = ((Val(1) - x41) * x68);
  Val x93 = ((Val(1) - x42) * x69);
  Val x94 = ((Val(1) - x43) * x70);
  Val x95 = ((Val(1) - x44) * x71);
  Val x96 = ((Val(1) - x45) * x72);
  Val x97 = ((Val(1) - x46) * x73);
  Val x98 = ((Val(1) - x47) * x74);
  Val x99 = ((Val(1) - x48) * x75);
  Val x100 = ((Val(1) - x49) * x76);
  Val x101 = ((Val(1) - x50) * x77);
  Val x102 = ((Val(1) - x51) * x78);
  Val x103 = ((Val(1) - x52) * x79);
  Val x104 = ((Val(1) - x53) * x80);
  Val x105 = ((Val(1) - x54) * x81);
  Val x106 = ((Val(1) - x55) * x82);
  Val x107 = ((Val(1) - x56) * x83);
  Val x108 = ((Val(1) - x57) * x84);
  Val x109 = ((Val(1) - x58) * x85);
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:679)
  Val x110 = (((((x10 + x89) - ((x10 * Val(2)) * x89)) + (((x11 + x90) - (x31 * x90)) * Val(2))) +
               (((x12 + x91) - ((x12 * Val(2)) * x91)) * Val(4))) +
              (((x13 + x92) - ((x13 * Val(2)) * x92)) * Val(8)));
  Val x111 = (((x110 + (((x14 + x93) - ((x14 * Val(2)) * x93)) * Val(16))) +
               (((x15 + x94) - ((x15 * Val(2)) * x94)) * Val(32))) +
              (((x16 + x95) - ((x16 * Val(2)) * x95)) * Val(64)));
  Val x112 = (((x111 + (((x17 + x96) - ((x17 * Val(2)) * x96)) * Val(128))) +
               (((x18 + x97) - ((x18 * Val(2)) * x97)) * Val(256))) +
              (((x19 + x98) - ((x19 * Val(2)) * x98)) * Val(512)));
  Val x113 = (((x112 + (((x20 + x99) - ((x20 * Val(2)) * x99)) * Val(1024))) +
               (((x21 + x100) - ((x21 * Val(2)) * x100)) * Val(2048))) +
              (((x22 + x101) - ((x22 * Val(2)) * x101)) * Val(4096)));
  Val x114 = (((x113 + (((x23 + x102) - ((x23 * Val(2)) * x102)) * Val(8192))) +
               (((x24 + x103) - ((x24 * Val(2)) * x103)) * Val(16384))) +
              (((x25 + x104) - ((x25 * Val(2)) * x104)) * Val(32768)));
  Val x115 = (((x114 + (((x26 + x105) - ((x26 * Val(2)) * x105)) * Val(65536))) +
               (((x27 + x106) - ((x27 * Val(2)) * x106)) * Val(131072))) +
              (((x28 + x107) - ((x28 * Val(2)) * x107)) * Val(262144)));
  NondetRegStruct x116 =
      exec_Reg(ctx,
               ((x115 + (((x29 + x108) - ((x29 * Val(2)) * x108)) * Val(524288))) +
                (((x30 + x109) - ((x30 * Val(2)) * x109)) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, res3));
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:636)
  NondetRegStruct24Array x117 = x5.arrD;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:685)
  BoundLayout<ChiMinor1_2__0_Arm1_SuperLayout> x118 = LAYOUT_LOOKUP(x3, arm1);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:680)
  Val22Array x119 =
      Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), x117[22]._super};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:681)
  Val22Array x120 =
      Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), x117[23]._super};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:682)
  Val22Array x121 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), x116._super};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:686)
  Val24Array x122 = Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  Val22Array x123 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:636)
  Val x124 = x5.rnd._super;
  Val x125 = x5.blk._super;
  Val x126 = x5.midx._super;
  if (to_size_t(Val(0))) {
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:686)
    RetTupleStruct x127 = exec_RetTuple(ctx,
                                        x119,
                                        x120,
                                        x121,
                                        x122,
                                        x123,
                                        x123,
                                        Val(5),
                                        Val(10),
                                        x124,
                                        x125,
                                        x126,
                                        LAYOUT_LOOKUP(x3, arm0));
  }
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:718)
  Val x128 = x6[2]._super;
  if (to_size_t(Val(1))) {
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:699)
    ToBits_21_Struct x129 = exec_ToBits_21_(ctx, x35, LAYOUT_LOOKUP(x118, unpack_2nx));
    NondetRegStruct21Array x130 = x129._super;
    Val x131 = x130[0]._super;
    Val x132 = x130[1]._super;
    Val x133 = x130[2]._super;
    Val x134 = x130[3]._super;
    Val x135 = x130[4]._super;
    Val x136 = x130[5]._super;
    Val x137 = x130[6]._super;
    Val x138 = x130[7]._super;
    Val x139 = x130[8]._super;
    Val x140 = x130[9]._super;
    Val x141 = x130[10]._super;
    Val x142 = x130[11]._super;
    Val x143 = x130[12]._super;
    Val x144 = x130[13]._super;
    Val x145 = x130[14]._super;
    Val x146 = x130[15]._super;
    Val x147 = x130[16]._super;
    Val x148 = x130[17]._super;
    Val x149 = x130[18]._super;
    Val x150 = x130[19]._super;
    Val x151 = x130[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:700)
    Val x152 = (x132 * Val(2));
    Val x153 = ((((((x131 + x152) + (x133 * Val(4))) + (x134 * Val(8))) + (x135 * Val(16))) +
                 (x136 * Val(32))) +
                (x137 * Val(64)));
    Val x154 = ((((((x153 + (x138 * Val(128))) + (x139 * Val(256))) + (x140 * Val(512))) +
                  (x141 * Val(1024))) +
                 (x142 * Val(2048))) +
                (x143 * Val(4096)));
    Val x155 = ((((((x154 + (x144 * Val(8192))) + (x145 * Val(16384))) + (x146 * Val(32768))) +
                  (x147 * Val(65536))) +
                 (x148 * Val(131072))) +
                (x149 * Val(262144)));
    EQZ((((x155 + (x150 * Val(524288))) + (x151 * Val(1048576))) - x35),
        "chi_minor1(zirgen/circuit/keccak/keccak.zir:700)");
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:713)
    ToBits_21_Struct x156 = exec_ToBits_21_(ctx, x62, LAYOUT_LOOKUP(x118, unpack_2nxp1));
    NondetRegStruct21Array x157 = x156._super;
    Val x158 = x157[0]._super;
    Val x159 = x157[1]._super;
    Val x160 = x157[2]._super;
    Val x161 = x157[3]._super;
    Val x162 = x157[4]._super;
    Val x163 = x157[5]._super;
    Val x164 = x157[6]._super;
    Val x165 = x157[7]._super;
    Val x166 = x157[8]._super;
    Val x167 = x157[9]._super;
    Val x168 = x157[10]._super;
    Val x169 = x157[11]._super;
    Val x170 = x157[12]._super;
    Val x171 = x157[13]._super;
    Val x172 = x157[14]._super;
    Val x173 = x157[15]._super;
    Val x174 = x157[16]._super;
    Val x175 = x157[17]._super;
    Val x176 = x157[18]._super;
    Val x177 = x157[19]._super;
    Val x178 = x157[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:714)
    Val x179 =
        ((((((x158 + (x159 * Val(2))) + (x160 * Val(4))) + (x161 * Val(8))) + (x162 * Val(16))) +
          (x163 * Val(32))) +
         (x164 * Val(64)));
    Val x180 = ((((((x179 + (x165 * Val(128))) + (x166 * Val(256))) + (x167 * Val(512))) +
                  (x168 * Val(1024))) +
                 (x169 * Val(2048))) +
                (x170 * Val(4096)));
    Val x181 = ((((((x180 + (x171 * Val(8192))) + (x172 * Val(16384))) + (x173 * Val(32768))) +
                  (x174 * Val(65536))) +
                 (x175 * Val(131072))) +
                (x176 * Val(262144)));
    EQZ((((x181 + (x177 * Val(524288))) + (x178 * Val(1048576))) - x62),
        "chi_minor1(zirgen/circuit/keccak/keccak.zir:714)");
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:726)
    ToBits_21_Struct x182 = exec_ToBits_21_(ctx, x128, LAYOUT_LOOKUP(x118, unpack_2nxp2));
    NondetRegStruct21Array x183 = x182._super;
    Val x184 = x183[0]._super;
    Val x185 = x183[1]._super;
    Val x186 = x183[2]._super;
    Val x187 = x183[3]._super;
    Val x188 = x183[4]._super;
    Val x189 = x183[5]._super;
    Val x190 = x183[6]._super;
    Val x191 = x183[7]._super;
    Val x192 = x183[8]._super;
    Val x193 = x183[9]._super;
    Val x194 = x183[10]._super;
    Val x195 = x183[11]._super;
    Val x196 = x183[12]._super;
    Val x197 = x183[13]._super;
    Val x198 = x183[14]._super;
    Val x199 = x183[15]._super;
    Val x200 = x183[16]._super;
    Val x201 = x183[17]._super;
    Val x202 = x183[18]._super;
    Val x203 = x183[19]._super;
    Val x204 = x183[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:727)
    Val x205 =
        ((((((x184 + (x185 * Val(2))) + (x186 * Val(4))) + (x187 * Val(8))) + (x188 * Val(16))) +
          (x189 * Val(32))) +
         (x190 * Val(64)));
    Val x206 = ((((((x205 + (x191 * Val(128))) + (x192 * Val(256))) + (x193 * Val(512))) +
                  (x194 * Val(1024))) +
                 (x195 * Val(2048))) +
                (x196 * Val(4096)));
    Val x207 = ((((((x206 + (x197 * Val(8192))) + (x198 * Val(16384))) + (x199 * Val(32768))) +
                  (x200 * Val(65536))) +
                 (x201 * Val(131072))) +
                (x202 * Val(262144)));
    EQZ((((x207 + (x203 * Val(524288))) + (x204 * Val(1048576))) - x128),
        "chi_minor1(zirgen/circuit/keccak/keccak.zir:727)");
    // andnxor(zirgen/circuit/keccak/keccak.zir:118)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:729)
    Val x208 = ((Val(1) - x158) * x184);
    Val x209 = ((Val(1) - x159) * x185);
    Val x210 = ((Val(1) - x160) * x186);
    Val x211 = ((Val(1) - x161) * x187);
    Val x212 = ((Val(1) - x162) * x188);
    Val x213 = ((Val(1) - x163) * x189);
    Val x214 = ((Val(1) - x164) * x190);
    Val x215 = ((Val(1) - x165) * x191);
    Val x216 = ((Val(1) - x166) * x192);
    Val x217 = ((Val(1) - x167) * x193);
    Val x218 = ((Val(1) - x168) * x194);
    Val x219 = ((Val(1) - x169) * x195);
    Val x220 = ((Val(1) - x170) * x196);
    Val x221 = ((Val(1) - x171) * x197);
    Val x222 = ((Val(1) - x172) * x198);
    Val x223 = ((Val(1) - x173) * x199);
    Val x224 = ((Val(1) - x174) * x200);
    Val x225 = ((Val(1) - x175) * x201);
    Val x226 = ((Val(1) - x176) * x202);
    Val x227 = ((Val(1) - x177) * x203);
    Val x228 = ((Val(1) - x178) * x204);
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:730)
    Val x229 = (((((x131 + x208) - ((x131 * Val(2)) * x208)) +
                  (((x132 + x209) - (x152 * x209)) * Val(2))) +
                 (((x133 + x210) - ((x133 * Val(2)) * x210)) * Val(4))) +
                (((x134 + x211) - ((x134 * Val(2)) * x211)) * Val(8)));
    Val x230 = (((x229 + (((x135 + x212) - ((x135 * Val(2)) * x212)) * Val(16))) +
                 (((x136 + x213) - ((x136 * Val(2)) * x213)) * Val(32))) +
                (((x137 + x214) - ((x137 * Val(2)) * x214)) * Val(64)));
    Val x231 = (((x230 + (((x138 + x215) - ((x138 * Val(2)) * x215)) * Val(128))) +
                 (((x139 + x216) - ((x139 * Val(2)) * x216)) * Val(256))) +
                (((x140 + x217) - ((x140 * Val(2)) * x217)) * Val(512)));
    Val x232 = (((x231 + (((x141 + x218) - ((x141 * Val(2)) * x218)) * Val(1024))) +
                 (((x142 + x219) - ((x142 * Val(2)) * x219)) * Val(2048))) +
                (((x143 + x220) - ((x143 * Val(2)) * x220)) * Val(4096)));
    Val x233 = (((x232 + (((x144 + x221) - ((x144 * Val(2)) * x221)) * Val(8192))) +
                 (((x145 + x222) - ((x145 * Val(2)) * x222)) * Val(16384))) +
                (((x146 + x223) - ((x146 * Val(2)) * x223)) * Val(32768)));
    Val x234 = (((x233 + (((x147 + x224) - ((x147 * Val(2)) * x224)) * Val(65536))) +
                 (((x148 + x225) - ((x148 * Val(2)) * x225)) * Val(131072))) +
                (((x149 + x226) - ((x149 * Val(2)) * x226)) * Val(262144)));
    NondetRegStruct x235 =
        exec_Reg(ctx,
                 ((x234 + (((x150 + x227) - ((x150 * Val(2)) * x227)) * Val(524288))) +
                  (((x151 + x228) - ((x151 * Val(2)) * x228)) * Val(1048576))),
                 LAYOUT_LOOKUP(x118, res3n));
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:733)
    RetTupleStruct x236 =
        exec_RetTuple(ctx,
                      x119,
                      x120,
                      x121,
                      x122,
                      x123,
                      Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), x235._super},
                      Val(5),
                      Val(10),
                      x124,
                      x125,
                      x126,
                      LAYOUT_LOOKUP(x118, _super));
  }
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:685)
  RetTupleStruct x237 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x237;
}
RetTupleStruct execChiMinor0_3__0_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<ChiMinor0_3__0_Layout> layout1) {
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:542)
  NondetRegStruct22Array x2 = arg0.arrA;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:546)
  Val x3 = x2[12]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:554)
  ToBits_22_Struct x4 = exec_ToBits_22_(ctx, x3, LAYOUT_LOOKUP(layout1, unpack_0xp1));
  NondetRegStruct22Array x5 = x4._super;
  Val x6 = x5[0]._super;
  Val x7 = x5[1]._super;
  Val x8 = x5[2]._super;
  Val x9 = x5[3]._super;
  Val x10 = x5[4]._super;
  Val x11 = x5[5]._super;
  Val x12 = x5[6]._super;
  Val x13 = x5[7]._super;
  Val x14 = x5[8]._super;
  Val x15 = x5[9]._super;
  Val x16 = x5[10]._super;
  Val x17 = x5[11]._super;
  Val x18 = x5[12]._super;
  Val x19 = x5[13]._super;
  Val x20 = x5[14]._super;
  Val x21 = x5[15]._super;
  Val x22 = x5[16]._super;
  Val x23 = x5[17]._super;
  Val x24 = x5[18]._super;
  Val x25 = x5[19]._super;
  Val x26 = x5[20]._super;
  Val x27 = x5[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:555)
  Val x28 = ((((((x6 + (x7 * Val(2))) + (x8 * Val(4))) + (x9 * Val(8))) + (x10 * Val(16))) +
              (x11 * Val(32))) +
             (x12 * Val(64)));
  Val x29 =
      ((((((x28 + (x13 * Val(128))) + (x14 * Val(256))) + (x15 * Val(512))) + (x16 * Val(1024))) +
        (x17 * Val(2048))) +
       (x18 * Val(4096)));
  Val x30 = ((((((x29 + (x19 * Val(8192))) + (x20 * Val(16384))) + (x21 * Val(32768))) +
               (x22 * Val(65536))) +
              (x23 * Val(131072))) +
             (x24 * Val(262144)));
  EQZ(((((x30 + (x25 * Val(524288))) + (x26 * Val(1048576))) + (x27 * Val(2097152))) - x3),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:555)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:559)
  Val x31 = x2[13]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:567)
  ToBits_21_Struct x32 = exec_ToBits_21_(ctx, x31, LAYOUT_LOOKUP(layout1, unpack_1xp1));
  NondetRegStruct21Array x33 = x32._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:568)
  Val x55 = ((((((x34 + (x35 * Val(2))) + (x36 * Val(4))) + (x37 * Val(8))) + (x38 * Val(16))) +
              (x39 * Val(32))) +
             (x40 * Val(64)));
  Val x56 =
      ((((((x55 + (x41 * Val(128))) + (x42 * Val(256))) + (x43 * Val(512))) + (x44 * Val(1024))) +
        (x45 * Val(2048))) +
       (x46 * Val(4096)));
  Val x57 = ((((((x56 + (x47 * Val(8192))) + (x48 * Val(16384))) + (x49 * Val(32768))) +
               (x50 * Val(65536))) +
              (x51 * Val(131072))) +
             (x52 * Val(262144)));
  EQZ((((x57 + (x53 * Val(524288))) + (x54 * Val(1048576))) - x31),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:568)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:573)
  Val x58 = x2[0]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:581)
  ToBits_22_Struct x59 = exec_ToBits_22_(ctx, x58, LAYOUT_LOOKUP(layout1, unpack_0xp2));
  NondetRegStruct22Array x60 = x59._super;
  Val x61 = x60[0]._super;
  Val x62 = x60[1]._super;
  Val x63 = x60[2]._super;
  Val x64 = x60[3]._super;
  Val x65 = x60[4]._super;
  Val x66 = x60[5]._super;
  Val x67 = x60[6]._super;
  Val x68 = x60[7]._super;
  Val x69 = x60[8]._super;
  Val x70 = x60[9]._super;
  Val x71 = x60[10]._super;
  Val x72 = x60[11]._super;
  Val x73 = x60[12]._super;
  Val x74 = x60[13]._super;
  Val x75 = x60[14]._super;
  Val x76 = x60[15]._super;
  Val x77 = x60[16]._super;
  Val x78 = x60[17]._super;
  Val x79 = x60[18]._super;
  Val x80 = x60[19]._super;
  Val x81 = x60[20]._super;
  Val x82 = x60[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:582)
  Val x83 = ((((((x61 + (x62 * Val(2))) + (x63 * Val(4))) + (x64 * Val(8))) + (x65 * Val(16))) +
              (x66 * Val(32))) +
             (x67 * Val(64)));
  Val x84 =
      ((((((x83 + (x68 * Val(128))) + (x69 * Val(256))) + (x70 * Val(512))) + (x71 * Val(1024))) +
        (x72 * Val(2048))) +
       (x73 * Val(4096)));
  Val x85 = ((((((x84 + (x74 * Val(8192))) + (x75 * Val(16384))) + (x76 * Val(32768))) +
               (x77 * Val(65536))) +
              (x78 * Val(131072))) +
             (x79 * Val(262144)));
  EQZ(((((x85 + (x80 * Val(524288))) + (x81 * Val(1048576))) + (x82 * Val(2097152))) - x58),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:582)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:586)
  Val x86 = x2[1]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:594)
  ToBits_21_Struct x87 = exec_ToBits_21_(ctx, x86, LAYOUT_LOOKUP(layout1, unpack_1xp2));
  NondetRegStruct21Array x88 = x87._super;
  Val x89 = x88[0]._super;
  Val x90 = x88[1]._super;
  Val x91 = x88[2]._super;
  Val x92 = x88[3]._super;
  Val x93 = x88[4]._super;
  Val x94 = x88[5]._super;
  Val x95 = x88[6]._super;
  Val x96 = x88[7]._super;
  Val x97 = x88[8]._super;
  Val x98 = x88[9]._super;
  Val x99 = x88[10]._super;
  Val x100 = x88[11]._super;
  Val x101 = x88[12]._super;
  Val x102 = x88[13]._super;
  Val x103 = x88[14]._super;
  Val x104 = x88[15]._super;
  Val x105 = x88[16]._super;
  Val x106 = x88[17]._super;
  Val x107 = x88[18]._super;
  Val x108 = x88[19]._super;
  Val x109 = x88[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:595)
  Val x110 = ((((((x89 + (x90 * Val(2))) + (x91 * Val(4))) + (x92 * Val(8))) + (x93 * Val(16))) +
               (x94 * Val(32))) +
              (x95 * Val(64)));
  Val x111 =
      ((((((x110 + (x96 * Val(128))) + (x97 * Val(256))) + (x98 * Val(512))) + (x99 * Val(1024))) +
        (x100 * Val(2048))) +
       (x101 * Val(4096)));
  Val x112 = ((((((x111 + (x102 * Val(8192))) + (x103 * Val(16384))) + (x104 * Val(32768))) +
                (x105 * Val(65536))) +
               (x106 * Val(131072))) +
              (x107 * Val(262144)));
  EQZ((((x112 + (x108 * Val(524288))) + (x109 * Val(1048576))) - x86),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:595)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:599)
  Val x113 = x2[9]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:607)
  ToBits_22_Struct x114 = exec_ToBits_22_(ctx, x113, LAYOUT_LOOKUP(layout1, unpack_0x));
  NondetRegStruct22Array x115 = x114._super;
  Val x116 = x115[0]._super;
  Val x117 = x115[1]._super;
  Val x118 = x115[2]._super;
  Val x119 = x115[3]._super;
  Val x120 = x115[4]._super;
  Val x121 = x115[5]._super;
  Val x122 = x115[6]._super;
  Val x123 = x115[7]._super;
  Val x124 = x115[8]._super;
  Val x125 = x115[9]._super;
  Val x126 = x115[10]._super;
  Val x127 = x115[11]._super;
  Val x128 = x115[12]._super;
  Val x129 = x115[13]._super;
  Val x130 = x115[14]._super;
  Val x131 = x115[15]._super;
  Val x132 = x115[16]._super;
  Val x133 = x115[17]._super;
  Val x134 = x115[18]._super;
  Val x135 = x115[19]._super;
  Val x136 = x115[20]._super;
  Val x137 = x115[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:608)
  Val x138 = (x117 * Val(2));
  Val x139 = ((((((x116 + x138) + (x118 * Val(4))) + (x119 * Val(8))) + (x120 * Val(16))) +
               (x121 * Val(32))) +
              (x122 * Val(64)));
  Val x140 = ((((((x139 + (x123 * Val(128))) + (x124 * Val(256))) + (x125 * Val(512))) +
                (x126 * Val(1024))) +
               (x127 * Val(2048))) +
              (x128 * Val(4096)));
  Val x141 = ((((((x140 + (x129 * Val(8192))) + (x130 * Val(16384))) + (x131 * Val(32768))) +
                (x132 * Val(65536))) +
               (x133 * Val(131072))) +
              (x134 * Val(262144)));
  EQZ(((((x141 + (x135 * Val(524288))) + (x136 * Val(1048576))) + (x137 * Val(2097152))) - x113),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:608)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:612)
  Val x142 = x2[10]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:620)
  ToBits_21_Struct x143 = exec_ToBits_21_(ctx, x142, LAYOUT_LOOKUP(layout1, unpack_1x));
  NondetRegStruct21Array x144 = x143._super;
  Val x145 = x144[0]._super;
  Val x146 = x144[1]._super;
  Val x147 = x144[2]._super;
  Val x148 = x144[3]._super;
  Val x149 = x144[4]._super;
  Val x150 = x144[5]._super;
  Val x151 = x144[6]._super;
  Val x152 = x144[7]._super;
  Val x153 = x144[8]._super;
  Val x154 = x144[9]._super;
  Val x155 = x144[10]._super;
  Val x156 = x144[11]._super;
  Val x157 = x144[12]._super;
  Val x158 = x144[13]._super;
  Val x159 = x144[14]._super;
  Val x160 = x144[15]._super;
  Val x161 = x144[16]._super;
  Val x162 = x144[17]._super;
  Val x163 = x144[18]._super;
  Val x164 = x144[19]._super;
  Val x165 = x144[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:621)
  Val x166 = (x146 * Val(2));
  Val x167 = ((((((x145 + x166) + (x147 * Val(4))) + (x148 * Val(8))) + (x149 * Val(16))) +
               (x150 * Val(32))) +
              (x151 * Val(64)));
  Val x168 = ((((((x167 + (x152 * Val(128))) + (x153 * Val(256))) + (x154 * Val(512))) +
                (x155 * Val(1024))) +
               (x156 * Val(2048))) +
              (x157 * Val(4096)));
  Val x169 = ((((((x168 + (x158 * Val(8192))) + (x159 * Val(16384))) + (x160 * Val(32768))) +
                (x161 * Val(65536))) +
               (x162 * Val(131072))) +
              (x163 * Val(262144)));
  EQZ((((x169 + (x164 * Val(524288))) + (x165 * Val(1048576))) - x142),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:621)");
  // andnxor(zirgen/circuit/keccak/keccak.zir:118)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:623)
  Val x170 = ((Val(1) - x6) * x61);
  Val x171 = ((Val(1) - x7) * x62);
  Val x172 = ((Val(1) - x8) * x63);
  Val x173 = ((Val(1) - x9) * x64);
  Val x174 = ((Val(1) - x10) * x65);
  Val x175 = ((Val(1) - x11) * x66);
  Val x176 = ((Val(1) - x12) * x67);
  Val x177 = ((Val(1) - x13) * x68);
  Val x178 = ((Val(1) - x14) * x69);
  Val x179 = ((Val(1) - x15) * x70);
  Val x180 = ((Val(1) - x16) * x71);
  Val x181 = ((Val(1) - x17) * x72);
  Val x182 = ((Val(1) - x18) * x73);
  Val x183 = ((Val(1) - x19) * x74);
  Val x184 = ((Val(1) - x20) * x75);
  Val x185 = ((Val(1) - x21) * x76);
  Val x186 = ((Val(1) - x22) * x77);
  Val x187 = ((Val(1) - x23) * x78);
  Val x188 = ((Val(1) - x24) * x79);
  Val x189 = ((Val(1) - x25) * x80);
  Val x190 = ((Val(1) - x26) * x81);
  Val x191 = ((Val(1) - x27) * x82);
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:624)
  Val x192 = ((Val(1) - x34) * x89);
  Val x193 = ((Val(1) - x35) * x90);
  Val x194 = ((Val(1) - x36) * x91);
  Val x195 = ((Val(1) - x37) * x92);
  Val x196 = ((Val(1) - x38) * x93);
  Val x197 = ((Val(1) - x39) * x94);
  Val x198 = ((Val(1) - x40) * x95);
  Val x199 = ((Val(1) - x41) * x96);
  Val x200 = ((Val(1) - x42) * x97);
  Val x201 = ((Val(1) - x43) * x98);
  Val x202 = ((Val(1) - x44) * x99);
  Val x203 = ((Val(1) - x45) * x100);
  Val x204 = ((Val(1) - x46) * x101);
  Val x205 = ((Val(1) - x47) * x102);
  Val x206 = ((Val(1) - x48) * x103);
  Val x207 = ((Val(1) - x49) * x104);
  Val x208 = ((Val(1) - x50) * x105);
  Val x209 = ((Val(1) - x51) * x106);
  Val x210 = ((Val(1) - x52) * x107);
  Val x211 = ((Val(1) - x53) * x108);
  Val x212 = ((Val(1) - x54) * x109);
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:625)
  Val x213 =
      (((((x116 + x170) - ((x116 * Val(2)) * x170)) + (((x117 + x171) - (x138 * x171)) * Val(2))) +
        (((x118 + x172) - ((x118 * Val(2)) * x172)) * Val(4))) +
       (((x119 + x173) - ((x119 * Val(2)) * x173)) * Val(8)));
  Val x214 = (((x213 + (((x120 + x174) - ((x120 * Val(2)) * x174)) * Val(16))) +
               (((x121 + x175) - ((x121 * Val(2)) * x175)) * Val(32))) +
              (((x122 + x176) - ((x122 * Val(2)) * x176)) * Val(64)));
  Val x215 = (((x214 + (((x123 + x177) - ((x123 * Val(2)) * x177)) * Val(128))) +
               (((x124 + x178) - ((x124 * Val(2)) * x178)) * Val(256))) +
              (((x125 + x179) - ((x125 * Val(2)) * x179)) * Val(512)));
  Val x216 = (((x215 + (((x126 + x180) - ((x126 * Val(2)) * x180)) * Val(1024))) +
               (((x127 + x181) - ((x127 * Val(2)) * x181)) * Val(2048))) +
              (((x128 + x182) - ((x128 * Val(2)) * x182)) * Val(4096)));
  Val x217 = (((x216 + (((x129 + x183) - ((x129 * Val(2)) * x183)) * Val(8192))) +
               (((x130 + x184) - ((x130 * Val(2)) * x184)) * Val(16384))) +
              (((x131 + x185) - ((x131 * Val(2)) * x185)) * Val(32768)));
  Val x218 = (((x217 + (((x132 + x186) - ((x132 * Val(2)) * x186)) * Val(65536))) +
               (((x133 + x187) - ((x133 * Val(2)) * x187)) * Val(131072))) +
              (((x134 + x188) - ((x134 * Val(2)) * x188)) * Val(262144)));
  Val x219 = (((x218 + (((x135 + x189) - ((x135 * Val(2)) * x189)) * Val(524288))) +
               (((x136 + x190) - ((x136 * Val(2)) * x190)) * Val(1048576))) +
              (((x137 + x191) - ((x137 * Val(2)) * x191)) * Val(2097152)));
  NondetRegStruct x220 = exec_Reg(ctx, x219, LAYOUT_LOOKUP(layout1, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  Val x221 =
      (((((x145 + x192) - ((x145 * Val(2)) * x192)) + (((x146 + x193) - (x166 * x193)) * Val(2))) +
        (((x147 + x194) - ((x147 * Val(2)) * x194)) * Val(4))) +
       (((x148 + x195) - ((x148 * Val(2)) * x195)) * Val(8)));
  Val x222 = (((x221 + (((x149 + x196) - ((x149 * Val(2)) * x196)) * Val(16))) +
               (((x150 + x197) - ((x150 * Val(2)) * x197)) * Val(32))) +
              (((x151 + x198) - ((x151 * Val(2)) * x198)) * Val(64)));
  Val x223 = (((x222 + (((x152 + x199) - ((x152 * Val(2)) * x199)) * Val(128))) +
               (((x153 + x200) - ((x153 * Val(2)) * x200)) * Val(256))) +
              (((x154 + x201) - ((x154 * Val(2)) * x201)) * Val(512)));
  Val x224 = (((x223 + (((x155 + x202) - ((x155 * Val(2)) * x202)) * Val(1024))) +
               (((x156 + x203) - ((x156 * Val(2)) * x203)) * Val(2048))) +
              (((x157 + x204) - ((x157 * Val(2)) * x204)) * Val(4096)));
  Val x225 = (((x224 + (((x158 + x205) - ((x158 * Val(2)) * x205)) * Val(8192))) +
               (((x159 + x206) - ((x159 * Val(2)) * x206)) * Val(16384))) +
              (((x160 + x207) - ((x160 * Val(2)) * x207)) * Val(32768)));
  Val x226 = (((x225 + (((x161 + x208) - ((x161 * Val(2)) * x208)) * Val(65536))) +
               (((x162 + x209) - ((x162 * Val(2)) * x209)) * Val(131072))) +
              (((x163 + x210) - ((x163 * Val(2)) * x210)) * Val(262144)));
  NondetRegStruct x227 =
      exec_Reg(ctx,
               ((x226 + (((x164 + x211) - ((x164 * Val(2)) * x211)) * Val(524288))) +
                (((x165 + x212) - ((x165 * Val(2)) * x212)) * Val(1048576))),
               LAYOUT_LOOKUP(layout1, _1));
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:630)
  Val22Array x228 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x229 = exec_RetTuple(
      ctx,
      x228,
      x228,
      x228,
      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), x220._super, x227._super},
      x228,
      x228,
      Val(6),
      Val(10),
      arg0.rnd._super,
      arg0.blk._super,
      arg0.midx._super,
      LAYOUT_LOOKUP(layout1, _super));
  return x229;
}
RetTupleStruct execChiMinor0_4__0_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<ChiMinor0_4__0_Layout> layout1) {
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:542)
  NondetRegStruct22Array x2 = arg0.arrA;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:546)
  Val x3 = x2[0]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:554)
  ToBits_22_Struct x4 = exec_ToBits_22_(ctx, x3, LAYOUT_LOOKUP(layout1, unpack_0xp1));
  NondetRegStruct22Array x5 = x4._super;
  Val x6 = x5[0]._super;
  Val x7 = x5[1]._super;
  Val x8 = x5[2]._super;
  Val x9 = x5[3]._super;
  Val x10 = x5[4]._super;
  Val x11 = x5[5]._super;
  Val x12 = x5[6]._super;
  Val x13 = x5[7]._super;
  Val x14 = x5[8]._super;
  Val x15 = x5[9]._super;
  Val x16 = x5[10]._super;
  Val x17 = x5[11]._super;
  Val x18 = x5[12]._super;
  Val x19 = x5[13]._super;
  Val x20 = x5[14]._super;
  Val x21 = x5[15]._super;
  Val x22 = x5[16]._super;
  Val x23 = x5[17]._super;
  Val x24 = x5[18]._super;
  Val x25 = x5[19]._super;
  Val x26 = x5[20]._super;
  Val x27 = x5[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:555)
  Val x28 = ((((((x6 + (x7 * Val(2))) + (x8 * Val(4))) + (x9 * Val(8))) + (x10 * Val(16))) +
              (x11 * Val(32))) +
             (x12 * Val(64)));
  Val x29 =
      ((((((x28 + (x13 * Val(128))) + (x14 * Val(256))) + (x15 * Val(512))) + (x16 * Val(1024))) +
        (x17 * Val(2048))) +
       (x18 * Val(4096)));
  Val x30 = ((((((x29 + (x19 * Val(8192))) + (x20 * Val(16384))) + (x21 * Val(32768))) +
               (x22 * Val(65536))) +
              (x23 * Val(131072))) +
             (x24 * Val(262144)));
  EQZ(((((x30 + (x25 * Val(524288))) + (x26 * Val(1048576))) + (x27 * Val(2097152))) - x3),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:555)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:559)
  Val x31 = x2[1]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:567)
  ToBits_21_Struct x32 = exec_ToBits_21_(ctx, x31, LAYOUT_LOOKUP(layout1, unpack_1xp1));
  NondetRegStruct21Array x33 = x32._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:568)
  Val x55 = ((((((x34 + (x35 * Val(2))) + (x36 * Val(4))) + (x37 * Val(8))) + (x38 * Val(16))) +
              (x39 * Val(32))) +
             (x40 * Val(64)));
  Val x56 =
      ((((((x55 + (x41 * Val(128))) + (x42 * Val(256))) + (x43 * Val(512))) + (x44 * Val(1024))) +
        (x45 * Val(2048))) +
       (x46 * Val(4096)));
  Val x57 = ((((((x56 + (x47 * Val(8192))) + (x48 * Val(16384))) + (x49 * Val(32768))) +
               (x50 * Val(65536))) +
              (x51 * Val(131072))) +
             (x52 * Val(262144)));
  EQZ((((x57 + (x53 * Val(524288))) + (x54 * Val(1048576))) - x31),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:568)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:573)
  Val x58 = x2[3]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:581)
  ToBits_22_Struct x59 = exec_ToBits_22_(ctx, x58, LAYOUT_LOOKUP(layout1, unpack_0xp2));
  NondetRegStruct22Array x60 = x59._super;
  Val x61 = x60[0]._super;
  Val x62 = x60[1]._super;
  Val x63 = x60[2]._super;
  Val x64 = x60[3]._super;
  Val x65 = x60[4]._super;
  Val x66 = x60[5]._super;
  Val x67 = x60[6]._super;
  Val x68 = x60[7]._super;
  Val x69 = x60[8]._super;
  Val x70 = x60[9]._super;
  Val x71 = x60[10]._super;
  Val x72 = x60[11]._super;
  Val x73 = x60[12]._super;
  Val x74 = x60[13]._super;
  Val x75 = x60[14]._super;
  Val x76 = x60[15]._super;
  Val x77 = x60[16]._super;
  Val x78 = x60[17]._super;
  Val x79 = x60[18]._super;
  Val x80 = x60[19]._super;
  Val x81 = x60[20]._super;
  Val x82 = x60[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:582)
  Val x83 = ((((((x61 + (x62 * Val(2))) + (x63 * Val(4))) + (x64 * Val(8))) + (x65 * Val(16))) +
              (x66 * Val(32))) +
             (x67 * Val(64)));
  Val x84 =
      ((((((x83 + (x68 * Val(128))) + (x69 * Val(256))) + (x70 * Val(512))) + (x71 * Val(1024))) +
        (x72 * Val(2048))) +
       (x73 * Val(4096)));
  Val x85 = ((((((x84 + (x74 * Val(8192))) + (x75 * Val(16384))) + (x76 * Val(32768))) +
               (x77 * Val(65536))) +
              (x78 * Val(131072))) +
             (x79 * Val(262144)));
  EQZ(((((x85 + (x80 * Val(524288))) + (x81 * Val(1048576))) + (x82 * Val(2097152))) - x58),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:582)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:586)
  Val x86 = x2[4]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:594)
  ToBits_21_Struct x87 = exec_ToBits_21_(ctx, x86, LAYOUT_LOOKUP(layout1, unpack_1xp2));
  NondetRegStruct21Array x88 = x87._super;
  Val x89 = x88[0]._super;
  Val x90 = x88[1]._super;
  Val x91 = x88[2]._super;
  Val x92 = x88[3]._super;
  Val x93 = x88[4]._super;
  Val x94 = x88[5]._super;
  Val x95 = x88[6]._super;
  Val x96 = x88[7]._super;
  Val x97 = x88[8]._super;
  Val x98 = x88[9]._super;
  Val x99 = x88[10]._super;
  Val x100 = x88[11]._super;
  Val x101 = x88[12]._super;
  Val x102 = x88[13]._super;
  Val x103 = x88[14]._super;
  Val x104 = x88[15]._super;
  Val x105 = x88[16]._super;
  Val x106 = x88[17]._super;
  Val x107 = x88[18]._super;
  Val x108 = x88[19]._super;
  Val x109 = x88[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:595)
  Val x110 = ((((((x89 + (x90 * Val(2))) + (x91 * Val(4))) + (x92 * Val(8))) + (x93 * Val(16))) +
               (x94 * Val(32))) +
              (x95 * Val(64)));
  Val x111 =
      ((((((x110 + (x96 * Val(128))) + (x97 * Val(256))) + (x98 * Val(512))) + (x99 * Val(1024))) +
        (x100 * Val(2048))) +
       (x101 * Val(4096)));
  Val x112 = ((((((x111 + (x102 * Val(8192))) + (x103 * Val(16384))) + (x104 * Val(32768))) +
                (x105 * Val(65536))) +
               (x106 * Val(131072))) +
              (x107 * Val(262144)));
  EQZ((((x112 + (x108 * Val(524288))) + (x109 * Val(1048576))) - x86),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:595)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:599)
  Val x113 = x2[12]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:607)
  ToBits_22_Struct x114 = exec_ToBits_22_(ctx, x113, LAYOUT_LOOKUP(layout1, unpack_0x));
  NondetRegStruct22Array x115 = x114._super;
  Val x116 = x115[0]._super;
  Val x117 = x115[1]._super;
  Val x118 = x115[2]._super;
  Val x119 = x115[3]._super;
  Val x120 = x115[4]._super;
  Val x121 = x115[5]._super;
  Val x122 = x115[6]._super;
  Val x123 = x115[7]._super;
  Val x124 = x115[8]._super;
  Val x125 = x115[9]._super;
  Val x126 = x115[10]._super;
  Val x127 = x115[11]._super;
  Val x128 = x115[12]._super;
  Val x129 = x115[13]._super;
  Val x130 = x115[14]._super;
  Val x131 = x115[15]._super;
  Val x132 = x115[16]._super;
  Val x133 = x115[17]._super;
  Val x134 = x115[18]._super;
  Val x135 = x115[19]._super;
  Val x136 = x115[20]._super;
  Val x137 = x115[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:608)
  Val x138 = (x117 * Val(2));
  Val x139 = ((((((x116 + x138) + (x118 * Val(4))) + (x119 * Val(8))) + (x120 * Val(16))) +
               (x121 * Val(32))) +
              (x122 * Val(64)));
  Val x140 = ((((((x139 + (x123 * Val(128))) + (x124 * Val(256))) + (x125 * Val(512))) +
                (x126 * Val(1024))) +
               (x127 * Val(2048))) +
              (x128 * Val(4096)));
  Val x141 = ((((((x140 + (x129 * Val(8192))) + (x130 * Val(16384))) + (x131 * Val(32768))) +
                (x132 * Val(65536))) +
               (x133 * Val(131072))) +
              (x134 * Val(262144)));
  EQZ(((((x141 + (x135 * Val(524288))) + (x136 * Val(1048576))) + (x137 * Val(2097152))) - x113),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:608)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:612)
  Val x142 = x2[13]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:620)
  ToBits_21_Struct x143 = exec_ToBits_21_(ctx, x142, LAYOUT_LOOKUP(layout1, unpack_1x));
  NondetRegStruct21Array x144 = x143._super;
  Val x145 = x144[0]._super;
  Val x146 = x144[1]._super;
  Val x147 = x144[2]._super;
  Val x148 = x144[3]._super;
  Val x149 = x144[4]._super;
  Val x150 = x144[5]._super;
  Val x151 = x144[6]._super;
  Val x152 = x144[7]._super;
  Val x153 = x144[8]._super;
  Val x154 = x144[9]._super;
  Val x155 = x144[10]._super;
  Val x156 = x144[11]._super;
  Val x157 = x144[12]._super;
  Val x158 = x144[13]._super;
  Val x159 = x144[14]._super;
  Val x160 = x144[15]._super;
  Val x161 = x144[16]._super;
  Val x162 = x144[17]._super;
  Val x163 = x144[18]._super;
  Val x164 = x144[19]._super;
  Val x165 = x144[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:621)
  Val x166 = (x146 * Val(2));
  Val x167 = ((((((x145 + x166) + (x147 * Val(4))) + (x148 * Val(8))) + (x149 * Val(16))) +
               (x150 * Val(32))) +
              (x151 * Val(64)));
  Val x168 = ((((((x167 + (x152 * Val(128))) + (x153 * Val(256))) + (x154 * Val(512))) +
                (x155 * Val(1024))) +
               (x156 * Val(2048))) +
              (x157 * Val(4096)));
  Val x169 = ((((((x168 + (x158 * Val(8192))) + (x159 * Val(16384))) + (x160 * Val(32768))) +
                (x161 * Val(65536))) +
               (x162 * Val(131072))) +
              (x163 * Val(262144)));
  EQZ((((x169 + (x164 * Val(524288))) + (x165 * Val(1048576))) - x142),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:621)");
  // andnxor(zirgen/circuit/keccak/keccak.zir:118)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:623)
  Val x170 = ((Val(1) - x6) * x61);
  Val x171 = ((Val(1) - x7) * x62);
  Val x172 = ((Val(1) - x8) * x63);
  Val x173 = ((Val(1) - x9) * x64);
  Val x174 = ((Val(1) - x10) * x65);
  Val x175 = ((Val(1) - x11) * x66);
  Val x176 = ((Val(1) - x12) * x67);
  Val x177 = ((Val(1) - x13) * x68);
  Val x178 = ((Val(1) - x14) * x69);
  Val x179 = ((Val(1) - x15) * x70);
  Val x180 = ((Val(1) - x16) * x71);
  Val x181 = ((Val(1) - x17) * x72);
  Val x182 = ((Val(1) - x18) * x73);
  Val x183 = ((Val(1) - x19) * x74);
  Val x184 = ((Val(1) - x20) * x75);
  Val x185 = ((Val(1) - x21) * x76);
  Val x186 = ((Val(1) - x22) * x77);
  Val x187 = ((Val(1) - x23) * x78);
  Val x188 = ((Val(1) - x24) * x79);
  Val x189 = ((Val(1) - x25) * x80);
  Val x190 = ((Val(1) - x26) * x81);
  Val x191 = ((Val(1) - x27) * x82);
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:624)
  Val x192 = ((Val(1) - x34) * x89);
  Val x193 = ((Val(1) - x35) * x90);
  Val x194 = ((Val(1) - x36) * x91);
  Val x195 = ((Val(1) - x37) * x92);
  Val x196 = ((Val(1) - x38) * x93);
  Val x197 = ((Val(1) - x39) * x94);
  Val x198 = ((Val(1) - x40) * x95);
  Val x199 = ((Val(1) - x41) * x96);
  Val x200 = ((Val(1) - x42) * x97);
  Val x201 = ((Val(1) - x43) * x98);
  Val x202 = ((Val(1) - x44) * x99);
  Val x203 = ((Val(1) - x45) * x100);
  Val x204 = ((Val(1) - x46) * x101);
  Val x205 = ((Val(1) - x47) * x102);
  Val x206 = ((Val(1) - x48) * x103);
  Val x207 = ((Val(1) - x49) * x104);
  Val x208 = ((Val(1) - x50) * x105);
  Val x209 = ((Val(1) - x51) * x106);
  Val x210 = ((Val(1) - x52) * x107);
  Val x211 = ((Val(1) - x53) * x108);
  Val x212 = ((Val(1) - x54) * x109);
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:625)
  Val x213 =
      (((((x116 + x170) - ((x116 * Val(2)) * x170)) + (((x117 + x171) - (x138 * x171)) * Val(2))) +
        (((x118 + x172) - ((x118 * Val(2)) * x172)) * Val(4))) +
       (((x119 + x173) - ((x119 * Val(2)) * x173)) * Val(8)));
  Val x214 = (((x213 + (((x120 + x174) - ((x120 * Val(2)) * x174)) * Val(16))) +
               (((x121 + x175) - ((x121 * Val(2)) * x175)) * Val(32))) +
              (((x122 + x176) - ((x122 * Val(2)) * x176)) * Val(64)));
  Val x215 = (((x214 + (((x123 + x177) - ((x123 * Val(2)) * x177)) * Val(128))) +
               (((x124 + x178) - ((x124 * Val(2)) * x178)) * Val(256))) +
              (((x125 + x179) - ((x125 * Val(2)) * x179)) * Val(512)));
  Val x216 = (((x215 + (((x126 + x180) - ((x126 * Val(2)) * x180)) * Val(1024))) +
               (((x127 + x181) - ((x127 * Val(2)) * x181)) * Val(2048))) +
              (((x128 + x182) - ((x128 * Val(2)) * x182)) * Val(4096)));
  Val x217 = (((x216 + (((x129 + x183) - ((x129 * Val(2)) * x183)) * Val(8192))) +
               (((x130 + x184) - ((x130 * Val(2)) * x184)) * Val(16384))) +
              (((x131 + x185) - ((x131 * Val(2)) * x185)) * Val(32768)));
  Val x218 = (((x217 + (((x132 + x186) - ((x132 * Val(2)) * x186)) * Val(65536))) +
               (((x133 + x187) - ((x133 * Val(2)) * x187)) * Val(131072))) +
              (((x134 + x188) - ((x134 * Val(2)) * x188)) * Val(262144)));
  Val x219 = (((x218 + (((x135 + x189) - ((x135 * Val(2)) * x189)) * Val(524288))) +
               (((x136 + x190) - ((x136 * Val(2)) * x190)) * Val(1048576))) +
              (((x137 + x191) - ((x137 * Val(2)) * x191)) * Val(2097152)));
  NondetRegStruct x220 = exec_Reg(ctx, x219, LAYOUT_LOOKUP(layout1, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  Val x221 =
      (((((x145 + x192) - ((x145 * Val(2)) * x192)) + (((x146 + x193) - (x166 * x193)) * Val(2))) +
        (((x147 + x194) - ((x147 * Val(2)) * x194)) * Val(4))) +
       (((x148 + x195) - ((x148 * Val(2)) * x195)) * Val(8)));
  Val x222 = (((x221 + (((x149 + x196) - ((x149 * Val(2)) * x196)) * Val(16))) +
               (((x150 + x197) - ((x150 * Val(2)) * x197)) * Val(32))) +
              (((x151 + x198) - ((x151 * Val(2)) * x198)) * Val(64)));
  Val x223 = (((x222 + (((x152 + x199) - ((x152 * Val(2)) * x199)) * Val(128))) +
               (((x153 + x200) - ((x153 * Val(2)) * x200)) * Val(256))) +
              (((x154 + x201) - ((x154 * Val(2)) * x201)) * Val(512)));
  Val x224 = (((x223 + (((x155 + x202) - ((x155 * Val(2)) * x202)) * Val(1024))) +
               (((x156 + x203) - ((x156 * Val(2)) * x203)) * Val(2048))) +
              (((x157 + x204) - ((x157 * Val(2)) * x204)) * Val(4096)));
  Val x225 = (((x224 + (((x158 + x205) - ((x158 * Val(2)) * x205)) * Val(8192))) +
               (((x159 + x206) - ((x159 * Val(2)) * x206)) * Val(16384))) +
              (((x160 + x207) - ((x160 * Val(2)) * x207)) * Val(32768)));
  Val x226 = (((x225 + (((x161 + x208) - ((x161 * Val(2)) * x208)) * Val(65536))) +
               (((x162 + x209) - ((x162 * Val(2)) * x209)) * Val(131072))) +
              (((x163 + x210) - ((x163 * Val(2)) * x210)) * Val(262144)));
  NondetRegStruct x227 =
      exec_Reg(ctx,
               ((x226 + (((x164 + x211) - ((x164 * Val(2)) * x211)) * Val(524288))) +
                (((x165 + x212) - ((x165 * Val(2)) * x212)) * Val(1048576))),
               LAYOUT_LOOKUP(layout1, _1));
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:630)
  Val22Array x228 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x229 = exec_RetTuple(
      ctx,
      x228,
      x228,
      x228,
      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), x220._super, x227._super},
      x228,
      x228,
      Val(7),
      Val(10),
      arg0.rnd._super,
      arg0.blk._super,
      arg0.midx._super,
      LAYOUT_LOOKUP(layout1, _super));
  return x229;
}
RetTupleStruct execChiMinor1_4__0_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<ChiMinor1_4__0_Layout> layout2) {
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:685)
  BoundLayout<ChiMinor1_4__0__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:635)
  RetTupleStruct x4 = back_RetTuple(ctx, 8, arg1);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:636)
  RetTupleStruct x5 = back_RetTuple(ctx, 1, arg1);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:635)
  NondetRegStruct22Array x6 = x4.arrA;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:640)
  Val x7 = x6[14]._super;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:648)
  ToBits_21_Struct x8 = exec_ToBits_21_(ctx, x7, LAYOUT_LOOKUP(layout2, unpack_2x));
  NondetRegStruct21Array x9 = x8._super;
  Val x10 = x9[0]._super;
  Val x11 = x9[1]._super;
  Val x12 = x9[2]._super;
  Val x13 = x9[3]._super;
  Val x14 = x9[4]._super;
  Val x15 = x9[5]._super;
  Val x16 = x9[6]._super;
  Val x17 = x9[7]._super;
  Val x18 = x9[8]._super;
  Val x19 = x9[9]._super;
  Val x20 = x9[10]._super;
  Val x21 = x9[11]._super;
  Val x22 = x9[12]._super;
  Val x23 = x9[13]._super;
  Val x24 = x9[14]._super;
  Val x25 = x9[15]._super;
  Val x26 = x9[16]._super;
  Val x27 = x9[17]._super;
  Val x28 = x9[18]._super;
  Val x29 = x9[19]._super;
  Val x30 = x9[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:649)
  Val x31 = (x11 * Val(2));
  Val x32 =
      ((((((x10 + x31) + (x12 * Val(4))) + (x13 * Val(8))) + (x14 * Val(16))) + (x15 * Val(32))) +
       (x16 * Val(64)));
  Val x33 =
      ((((((x32 + (x17 * Val(128))) + (x18 * Val(256))) + (x19 * Val(512))) + (x20 * Val(1024))) +
        (x21 * Val(2048))) +
       (x22 * Val(4096)));
  Val x34 = ((((((x33 + (x23 * Val(8192))) + (x24 * Val(16384))) + (x25 * Val(32768))) +
               (x26 * Val(65536))) +
              (x27 * Val(131072))) +
             (x28 * Val(262144)));
  EQZ((((x34 + (x29 * Val(524288))) + (x30 * Val(1048576))) - x7),
      "chi_minor1(zirgen/circuit/keccak/keccak.zir:649)");
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:654)
  Val x35 = x6[2]._super;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:662)
  ToBits_21_Struct x36 = exec_ToBits_21_(ctx, x35, LAYOUT_LOOKUP(layout2, unpack_2xp1));
  NondetRegStruct21Array x37 = x36._super;
  Val x38 = x37[0]._super;
  Val x39 = x37[1]._super;
  Val x40 = x37[2]._super;
  Val x41 = x37[3]._super;
  Val x42 = x37[4]._super;
  Val x43 = x37[5]._super;
  Val x44 = x37[6]._super;
  Val x45 = x37[7]._super;
  Val x46 = x37[8]._super;
  Val x47 = x37[9]._super;
  Val x48 = x37[10]._super;
  Val x49 = x37[11]._super;
  Val x50 = x37[12]._super;
  Val x51 = x37[13]._super;
  Val x52 = x37[14]._super;
  Val x53 = x37[15]._super;
  Val x54 = x37[16]._super;
  Val x55 = x37[17]._super;
  Val x56 = x37[18]._super;
  Val x57 = x37[19]._super;
  Val x58 = x37[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:663)
  Val x59 = ((((((x38 + (x39 * Val(2))) + (x40 * Val(4))) + (x41 * Val(8))) + (x42 * Val(16))) +
              (x43 * Val(32))) +
             (x44 * Val(64)));
  Val x60 =
      ((((((x59 + (x45 * Val(128))) + (x46 * Val(256))) + (x47 * Val(512))) + (x48 * Val(1024))) +
        (x49 * Val(2048))) +
       (x50 * Val(4096)));
  Val x61 = ((((((x60 + (x51 * Val(8192))) + (x52 * Val(16384))) + (x53 * Val(32768))) +
               (x54 * Val(65536))) +
              (x55 * Val(131072))) +
             (x56 * Val(262144)));
  EQZ((((x61 + (x57 * Val(524288))) + (x58 * Val(1048576))) - x35),
      "chi_minor1(zirgen/circuit/keccak/keccak.zir:663)");
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:667)
  Val x62 = x6[5]._super;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:675)
  ToBits_21_Struct x63 = exec_ToBits_21_(ctx, x62, LAYOUT_LOOKUP(layout2, unpack_2xp2));
  NondetRegStruct21Array x64 = x63._super;
  Val x65 = x64[0]._super;
  Val x66 = x64[1]._super;
  Val x67 = x64[2]._super;
  Val x68 = x64[3]._super;
  Val x69 = x64[4]._super;
  Val x70 = x64[5]._super;
  Val x71 = x64[6]._super;
  Val x72 = x64[7]._super;
  Val x73 = x64[8]._super;
  Val x74 = x64[9]._super;
  Val x75 = x64[10]._super;
  Val x76 = x64[11]._super;
  Val x77 = x64[12]._super;
  Val x78 = x64[13]._super;
  Val x79 = x64[14]._super;
  Val x80 = x64[15]._super;
  Val x81 = x64[16]._super;
  Val x82 = x64[17]._super;
  Val x83 = x64[18]._super;
  Val x84 = x64[19]._super;
  Val x85 = x64[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:676)
  Val x86 = ((((((x65 + (x66 * Val(2))) + (x67 * Val(4))) + (x68 * Val(8))) + (x69 * Val(16))) +
              (x70 * Val(32))) +
             (x71 * Val(64)));
  Val x87 =
      ((((((x86 + (x72 * Val(128))) + (x73 * Val(256))) + (x74 * Val(512))) + (x75 * Val(1024))) +
        (x76 * Val(2048))) +
       (x77 * Val(4096)));
  Val x88 = ((((((x87 + (x78 * Val(8192))) + (x79 * Val(16384))) + (x80 * Val(32768))) +
               (x81 * Val(65536))) +
              (x82 * Val(131072))) +
             (x83 * Val(262144)));
  EQZ((((x88 + (x84 * Val(524288))) + (x85 * Val(1048576))) - x62),
      "chi_minor1(zirgen/circuit/keccak/keccak.zir:676)");
  // andnxor(zirgen/circuit/keccak/keccak.zir:118)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:678)
  Val x89 = ((Val(1) - x38) * x65);
  Val x90 = ((Val(1) - x39) * x66);
  Val x91 = ((Val(1) - x40) * x67);
  Val x92 = ((Val(1) - x41) * x68);
  Val x93 = ((Val(1) - x42) * x69);
  Val x94 = ((Val(1) - x43) * x70);
  Val x95 = ((Val(1) - x44) * x71);
  Val x96 = ((Val(1) - x45) * x72);
  Val x97 = ((Val(1) - x46) * x73);
  Val x98 = ((Val(1) - x47) * x74);
  Val x99 = ((Val(1) - x48) * x75);
  Val x100 = ((Val(1) - x49) * x76);
  Val x101 = ((Val(1) - x50) * x77);
  Val x102 = ((Val(1) - x51) * x78);
  Val x103 = ((Val(1) - x52) * x79);
  Val x104 = ((Val(1) - x53) * x80);
  Val x105 = ((Val(1) - x54) * x81);
  Val x106 = ((Val(1) - x55) * x82);
  Val x107 = ((Val(1) - x56) * x83);
  Val x108 = ((Val(1) - x57) * x84);
  Val x109 = ((Val(1) - x58) * x85);
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:679)
  Val x110 = (((((x10 + x89) - ((x10 * Val(2)) * x89)) + (((x11 + x90) - (x31 * x90)) * Val(2))) +
               (((x12 + x91) - ((x12 * Val(2)) * x91)) * Val(4))) +
              (((x13 + x92) - ((x13 * Val(2)) * x92)) * Val(8)));
  Val x111 = (((x110 + (((x14 + x93) - ((x14 * Val(2)) * x93)) * Val(16))) +
               (((x15 + x94) - ((x15 * Val(2)) * x94)) * Val(32))) +
              (((x16 + x95) - ((x16 * Val(2)) * x95)) * Val(64)));
  Val x112 = (((x111 + (((x17 + x96) - ((x17 * Val(2)) * x96)) * Val(128))) +
               (((x18 + x97) - ((x18 * Val(2)) * x97)) * Val(256))) +
              (((x19 + x98) - ((x19 * Val(2)) * x98)) * Val(512)));
  Val x113 = (((x112 + (((x20 + x99) - ((x20 * Val(2)) * x99)) * Val(1024))) +
               (((x21 + x100) - ((x21 * Val(2)) * x100)) * Val(2048))) +
              (((x22 + x101) - ((x22 * Val(2)) * x101)) * Val(4096)));
  Val x114 = (((x113 + (((x23 + x102) - ((x23 * Val(2)) * x102)) * Val(8192))) +
               (((x24 + x103) - ((x24 * Val(2)) * x103)) * Val(16384))) +
              (((x25 + x104) - ((x25 * Val(2)) * x104)) * Val(32768)));
  Val x115 = (((x114 + (((x26 + x105) - ((x26 * Val(2)) * x105)) * Val(65536))) +
               (((x27 + x106) - ((x27 * Val(2)) * x106)) * Val(131072))) +
              (((x28 + x107) - ((x28 * Val(2)) * x107)) * Val(262144)));
  NondetRegStruct x116 =
      exec_Reg(ctx,
               ((x115 + (((x29 + x108) - ((x29 * Val(2)) * x108)) * Val(524288))) +
                (((x30 + x109) - ((x30 * Val(2)) * x109)) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, res3));
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:636)
  NondetRegStruct24Array x117 = x5.arrD;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:685)
  BoundLayout<ChiMinor1_4__0_Arm1_SuperLayout> x118 = LAYOUT_LOOKUP(x3, arm1);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:680)
  Val22Array x119 =
      Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), x117[22]._super};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:681)
  Val22Array x120 =
      Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), x117[23]._super};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:682)
  Val22Array x121 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), x116._super};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:686)
  Val24Array x122 = Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  Val22Array x123 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:636)
  Val x124 = x5.rnd._super;
  Val x125 = x5.blk._super;
  Val x126 = x5.midx._super;
  if (to_size_t(Val(1))) {
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:686)
    RetTupleStruct x127 = exec_RetTuple(ctx,
                                        x119,
                                        x120,
                                        x121,
                                        x122,
                                        x123,
                                        x123,
                                        Val(8),
                                        Val(10),
                                        x124,
                                        x125,
                                        x126,
                                        LAYOUT_LOOKUP(x3, arm0));
  }
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:718)
  Val x128 = x6[8]._super;
  if (to_size_t(Val(0))) {
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:699)
    ToBits_21_Struct x129 = exec_ToBits_21_(ctx, x35, LAYOUT_LOOKUP(x118, unpack_2nx));
    NondetRegStruct21Array x130 = x129._super;
    Val x131 = x130[0]._super;
    Val x132 = x130[1]._super;
    Val x133 = x130[2]._super;
    Val x134 = x130[3]._super;
    Val x135 = x130[4]._super;
    Val x136 = x130[5]._super;
    Val x137 = x130[6]._super;
    Val x138 = x130[7]._super;
    Val x139 = x130[8]._super;
    Val x140 = x130[9]._super;
    Val x141 = x130[10]._super;
    Val x142 = x130[11]._super;
    Val x143 = x130[12]._super;
    Val x144 = x130[13]._super;
    Val x145 = x130[14]._super;
    Val x146 = x130[15]._super;
    Val x147 = x130[16]._super;
    Val x148 = x130[17]._super;
    Val x149 = x130[18]._super;
    Val x150 = x130[19]._super;
    Val x151 = x130[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:700)
    Val x152 = (x132 * Val(2));
    Val x153 = ((((((x131 + x152) + (x133 * Val(4))) + (x134 * Val(8))) + (x135 * Val(16))) +
                 (x136 * Val(32))) +
                (x137 * Val(64)));
    Val x154 = ((((((x153 + (x138 * Val(128))) + (x139 * Val(256))) + (x140 * Val(512))) +
                  (x141 * Val(1024))) +
                 (x142 * Val(2048))) +
                (x143 * Val(4096)));
    Val x155 = ((((((x154 + (x144 * Val(8192))) + (x145 * Val(16384))) + (x146 * Val(32768))) +
                  (x147 * Val(65536))) +
                 (x148 * Val(131072))) +
                (x149 * Val(262144)));
    EQZ((((x155 + (x150 * Val(524288))) + (x151 * Val(1048576))) - x35),
        "chi_minor1(zirgen/circuit/keccak/keccak.zir:700)");
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:713)
    ToBits_21_Struct x156 = exec_ToBits_21_(ctx, x62, LAYOUT_LOOKUP(x118, unpack_2nxp1));
    NondetRegStruct21Array x157 = x156._super;
    Val x158 = x157[0]._super;
    Val x159 = x157[1]._super;
    Val x160 = x157[2]._super;
    Val x161 = x157[3]._super;
    Val x162 = x157[4]._super;
    Val x163 = x157[5]._super;
    Val x164 = x157[6]._super;
    Val x165 = x157[7]._super;
    Val x166 = x157[8]._super;
    Val x167 = x157[9]._super;
    Val x168 = x157[10]._super;
    Val x169 = x157[11]._super;
    Val x170 = x157[12]._super;
    Val x171 = x157[13]._super;
    Val x172 = x157[14]._super;
    Val x173 = x157[15]._super;
    Val x174 = x157[16]._super;
    Val x175 = x157[17]._super;
    Val x176 = x157[18]._super;
    Val x177 = x157[19]._super;
    Val x178 = x157[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:714)
    Val x179 =
        ((((((x158 + (x159 * Val(2))) + (x160 * Val(4))) + (x161 * Val(8))) + (x162 * Val(16))) +
          (x163 * Val(32))) +
         (x164 * Val(64)));
    Val x180 = ((((((x179 + (x165 * Val(128))) + (x166 * Val(256))) + (x167 * Val(512))) +
                  (x168 * Val(1024))) +
                 (x169 * Val(2048))) +
                (x170 * Val(4096)));
    Val x181 = ((((((x180 + (x171 * Val(8192))) + (x172 * Val(16384))) + (x173 * Val(32768))) +
                  (x174 * Val(65536))) +
                 (x175 * Val(131072))) +
                (x176 * Val(262144)));
    EQZ((((x181 + (x177 * Val(524288))) + (x178 * Val(1048576))) - x62),
        "chi_minor1(zirgen/circuit/keccak/keccak.zir:714)");
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:726)
    ToBits_21_Struct x182 = exec_ToBits_21_(ctx, x128, LAYOUT_LOOKUP(x118, unpack_2nxp2));
    NondetRegStruct21Array x183 = x182._super;
    Val x184 = x183[0]._super;
    Val x185 = x183[1]._super;
    Val x186 = x183[2]._super;
    Val x187 = x183[3]._super;
    Val x188 = x183[4]._super;
    Val x189 = x183[5]._super;
    Val x190 = x183[6]._super;
    Val x191 = x183[7]._super;
    Val x192 = x183[8]._super;
    Val x193 = x183[9]._super;
    Val x194 = x183[10]._super;
    Val x195 = x183[11]._super;
    Val x196 = x183[12]._super;
    Val x197 = x183[13]._super;
    Val x198 = x183[14]._super;
    Val x199 = x183[15]._super;
    Val x200 = x183[16]._super;
    Val x201 = x183[17]._super;
    Val x202 = x183[18]._super;
    Val x203 = x183[19]._super;
    Val x204 = x183[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:727)
    Val x205 =
        ((((((x184 + (x185 * Val(2))) + (x186 * Val(4))) + (x187 * Val(8))) + (x188 * Val(16))) +
          (x189 * Val(32))) +
         (x190 * Val(64)));
    Val x206 = ((((((x205 + (x191 * Val(128))) + (x192 * Val(256))) + (x193 * Val(512))) +
                  (x194 * Val(1024))) +
                 (x195 * Val(2048))) +
                (x196 * Val(4096)));
    Val x207 = ((((((x206 + (x197 * Val(8192))) + (x198 * Val(16384))) + (x199 * Val(32768))) +
                  (x200 * Val(65536))) +
                 (x201 * Val(131072))) +
                (x202 * Val(262144)));
    EQZ((((x207 + (x203 * Val(524288))) + (x204 * Val(1048576))) - x128),
        "chi_minor1(zirgen/circuit/keccak/keccak.zir:727)");
    // andnxor(zirgen/circuit/keccak/keccak.zir:118)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:729)
    Val x208 = ((Val(1) - x158) * x184);
    Val x209 = ((Val(1) - x159) * x185);
    Val x210 = ((Val(1) - x160) * x186);
    Val x211 = ((Val(1) - x161) * x187);
    Val x212 = ((Val(1) - x162) * x188);
    Val x213 = ((Val(1) - x163) * x189);
    Val x214 = ((Val(1) - x164) * x190);
    Val x215 = ((Val(1) - x165) * x191);
    Val x216 = ((Val(1) - x166) * x192);
    Val x217 = ((Val(1) - x167) * x193);
    Val x218 = ((Val(1) - x168) * x194);
    Val x219 = ((Val(1) - x169) * x195);
    Val x220 = ((Val(1) - x170) * x196);
    Val x221 = ((Val(1) - x171) * x197);
    Val x222 = ((Val(1) - x172) * x198);
    Val x223 = ((Val(1) - x173) * x199);
    Val x224 = ((Val(1) - x174) * x200);
    Val x225 = ((Val(1) - x175) * x201);
    Val x226 = ((Val(1) - x176) * x202);
    Val x227 = ((Val(1) - x177) * x203);
    Val x228 = ((Val(1) - x178) * x204);
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:730)
    Val x229 = (((((x131 + x208) - ((x131 * Val(2)) * x208)) +
                  (((x132 + x209) - (x152 * x209)) * Val(2))) +
                 (((x133 + x210) - ((x133 * Val(2)) * x210)) * Val(4))) +
                (((x134 + x211) - ((x134 * Val(2)) * x211)) * Val(8)));
    Val x230 = (((x229 + (((x135 + x212) - ((x135 * Val(2)) * x212)) * Val(16))) +
                 (((x136 + x213) - ((x136 * Val(2)) * x213)) * Val(32))) +
                (((x137 + x214) - ((x137 * Val(2)) * x214)) * Val(64)));
    Val x231 = (((x230 + (((x138 + x215) - ((x138 * Val(2)) * x215)) * Val(128))) +
                 (((x139 + x216) - ((x139 * Val(2)) * x216)) * Val(256))) +
                (((x140 + x217) - ((x140 * Val(2)) * x217)) * Val(512)));
    Val x232 = (((x231 + (((x141 + x218) - ((x141 * Val(2)) * x218)) * Val(1024))) +
                 (((x142 + x219) - ((x142 * Val(2)) * x219)) * Val(2048))) +
                (((x143 + x220) - ((x143 * Val(2)) * x220)) * Val(4096)));
    Val x233 = (((x232 + (((x144 + x221) - ((x144 * Val(2)) * x221)) * Val(8192))) +
                 (((x145 + x222) - ((x145 * Val(2)) * x222)) * Val(16384))) +
                (((x146 + x223) - ((x146 * Val(2)) * x223)) * Val(32768)));
    Val x234 = (((x233 + (((x147 + x224) - ((x147 * Val(2)) * x224)) * Val(65536))) +
                 (((x148 + x225) - ((x148 * Val(2)) * x225)) * Val(131072))) +
                (((x149 + x226) - ((x149 * Val(2)) * x226)) * Val(262144)));
    NondetRegStruct x235 =
        exec_Reg(ctx,
                 ((x234 + (((x150 + x227) - ((x150 * Val(2)) * x227)) * Val(524288))) +
                  (((x151 + x228) - ((x151 * Val(2)) * x228)) * Val(1048576))),
                 LAYOUT_LOOKUP(x118, res3n));
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:733)
    RetTupleStruct x236 =
        exec_RetTuple(ctx,
                      x119,
                      x120,
                      x121,
                      x122,
                      x123,
                      Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), x235._super},
                      Val(8),
                      Val(10),
                      x124,
                      x125,
                      x126,
                      LAYOUT_LOOKUP(x118, _super));
  }
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:685)
  RetTupleStruct x237 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x237;
}
OneHot_24_Struct
exec_OneHot_24_(ExecContext& ctx, Val arg0, BoundLayout<OneHot_24_Layout> layout1) {
  // OneHot(zirgen/circuit/keccak/one_hot.zir:7)
  NondetRegStruct24Array x2 =
      map(Val24Array{Val(0),  Val(1),  Val(2),  Val(3),  Val(4),  Val(5),  Val(6),  Val(7),
                     Val(8),  Val(9),  Val(10), Val(11), Val(12), Val(13), Val(14), Val(15),
                     Val(16), Val(17), Val(18), Val(19), Val(20), Val(21), Val(22), Val(23)},
          LAYOUT_LOOKUP(layout1, _super),
          std::function([&](Val24Array::value_type x3,
                            BoundLayout<NondetRegLayout24LayoutArray::value_type> x4) {
            NondetRegStruct x5 = exec_NondetBitReg(ctx, isz((x3 - arg0)), x4);
            return x5;
          }));
  // OneHot(zirgen/circuit/keccak/one_hot.zir:9)
  Val x6 = x2[1]._super;
  Val x7 = x2[2]._super;
  Val x8 = x2[3]._super;
  Val x9 = x2[4]._super;
  Val x10 = ((((x2[0]._super + x6) + x7) + x8) + x9);
  Val x11 = x2[5]._super;
  Val x12 = x2[6]._super;
  Val x13 = x2[7]._super;
  Val x14 = x2[8]._super;
  Val x15 = x2[9]._super;
  Val x16 = x2[10]._super;
  Val x17 = ((((((x10 + x11) + x12) + x13) + x14) + x15) + x16);
  Val x18 = x2[11]._super;
  Val x19 = x2[12]._super;
  Val x20 = x2[13]._super;
  Val x21 = x2[14]._super;
  Val x22 = x2[15]._super;
  Val x23 = x2[16]._super;
  Val x24 = ((((((x17 + x18) + x19) + x20) + x21) + x22) + x23);
  Val x25 = x2[17]._super;
  Val x26 = x2[18]._super;
  Val x27 = x2[19]._super;
  Val x28 = x2[20]._super;
  Val x29 = x2[21]._super;
  Val x30 = x2[22]._super;
  Val x31 = ((((((x24 + x25) + x26) + x27) + x28) + x29) + x30);
  Val x32 = x2[23]._super;
  EQZ(((x31 + x32) - Val(1)), "OneHot(zirgen/circuit/keccak/one_hot.zir:9)");
  // OneHot(zirgen/circuit/keccak/one_hot.zir:11)
  Val x33 = ((((((x6 + (x7 * Val(2))) + (x8 * Val(3))) + (x9 * Val(4))) + (x11 * Val(5))) +
              (x12 * Val(6))) +
             (x13 * Val(7)));
  Val x34 = ((((((x33 + (x14 * Val(8))) + (x15 * Val(9))) + (x16 * Val(10))) + (x18 * Val(11))) +
              (x19 * Val(12))) +
             (x20 * Val(13)));
  Val x35 = ((((((x34 + (x21 * Val(14))) + (x22 * Val(15))) + (x23 * Val(16))) + (x25 * Val(17))) +
              (x26 * Val(18))) +
             (x27 * Val(19)));
  EQZ((((((x35 + (x28 * Val(20))) + (x29 * Val(21))) + (x30 * Val(22))) + (x32 * Val(23))) - arg0),
      "OneHot(zirgen/circuit/keccak/one_hot.zir:11)");
  return OneHot_24_Struct{._super = x2};
}
RetTupleStruct execChiMinor2_0_(ExecContext& ctx,
                                RetTupleStruct arg0,
                                BoundLayout<RetTupleLayout> arg1,
                                BoundLayout<ChiMinor2_0__SuperLayout> layout2) {
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:739)
  RetTupleStruct x3 = back_RetTuple(ctx, 1, arg1);
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:740)
  RetTupleStruct x4 = back_RetTuple(ctx, 3, arg1);
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:741)
  RetTupleStruct x5 = back_RetTuple(ctx, 4, arg1);
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:742)
  RetTupleStruct x6 = back_RetTuple(ctx, 6, arg1);
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:743)
  RetTupleStruct x7 = back_RetTuple(ctx, 7, arg1);
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:744)
  RetTupleStruct x8 = back_RetTuple(ctx, 9, arg1);
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:746)
  BoundLayout<ChiMinor2_0_Arm1_SuperLayout> x9 = LAYOUT_LOOKUP(layout2, arm1);
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:742)
  NondetRegStruct24Array x10 = x6.arrD;
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:740)
  NondetRegStruct24Array x11 = x4.arrD;
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:744)
  NondetRegStruct22Array x12 = x8.arrA;
  NondetRegStruct22Array x13 = x8.arrB;
  NondetRegStruct22Array x14 = x8.arrC;
  NondetRegStruct24Array x15 = x8.arrD;
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:747)
  Val x16 = x7.arrA[21]._super;
  Val x17 = x7.arrB[21]._super;
  Val x18 = x7.arrC[21]._super;
  Val x19 = x10[22]._super;
  Val x20 = x10[23]._super;
  Val x21 = x7.arrF[21]._super;
  Val x22 = x5.arrA[21]._super;
  Val x23 = x5.arrB[21]._super;
  Val x24 = x5.arrC[21]._super;
  Val x25 = x11[22]._super;
  Val x26 = x11[23]._super;
  Val x27 = x5.arrF[21]._super;
  Val x28 = x3.arrA[21]._super;
  Val x29 = x3.arrB[21]._super;
  Val x30 = x3.arrC[21]._super;
  Val x31 = x12[15]._super;
  Val x32 = x12[16]._super;
  Val x33 = x12[17]._super;
  Val x34 = x12[18]._super;
  Val x35 = x12[19]._super;
  Val x36 = x12[20]._super;
  Val x37 = x12[21]._super;
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:744)
  Val x38 = x13[0]._super;
  Val x39 = x13[1]._super;
  Val x40 = x13[2]._super;
  Val x41 = x13[3]._super;
  Val x42 = x13[4]._super;
  Val x43 = x13[5]._super;
  Val x44 = x13[6]._super;
  Val x45 = x13[7]._super;
  Val x46 = x13[8]._super;
  Val x47 = x13[9]._super;
  Val x48 = x13[10]._super;
  Val x49 = x13[11]._super;
  Val x50 = x13[12]._super;
  Val x51 = x13[13]._super;
  Val x52 = x13[14]._super;
  Val x53 = x13[15]._super;
  Val x54 = x13[16]._super;
  Val x55 = x13[17]._super;
  Val x56 = x13[18]._super;
  Val x57 = x13[19]._super;
  Val x58 = x13[20]._super;
  Val x59 = x13[21]._super;
  Val22Array x60 = Val22Array{x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48,
                              x49, x50, x51, x52, x53, x54, x55, x56, x57, x58, x59};
  Val x61 = x14[0]._super;
  Val x62 = x14[1]._super;
  Val x63 = x14[2]._super;
  Val x64 = x14[3]._super;
  Val x65 = x14[4]._super;
  Val x66 = x14[5]._super;
  Val x67 = x14[6]._super;
  Val x68 = x14[7]._super;
  Val x69 = x14[8]._super;
  Val x70 = x14[9]._super;
  Val x71 = x14[10]._super;
  Val x72 = x14[11]._super;
  Val x73 = x14[12]._super;
  Val x74 = x14[13]._super;
  Val x75 = x14[14]._super;
  Val x76 = x14[15]._super;
  Val x77 = x14[16]._super;
  Val x78 = x14[17]._super;
  Val x79 = x14[18]._super;
  Val x80 = x14[19]._super;
  Val x81 = x14[20]._super;
  Val x82 = x14[21]._super;
  Val22Array x83 = Val22Array{x61, x62, x63, x64, x65, x66, x67, x68, x69, x70, x71,
                              x72, x73, x74, x75, x76, x77, x78, x79, x80, x81, x82};
  Val24Array x84 =
      Val24Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x15[22]._super, x15[23]._super};
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:755)
  Val22Array x85 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:739)
  Val x86 = x3.rnd._super;
  Val x87 = x3.blk._super;
  Val x88 = x3.midx._super;
  if (to_size_t(Val(1))) {
    // chi_minor2(zirgen/circuit/keccak/keccak.zir:755)
    RetTupleStruct x89 =
        exec_RetTuple(ctx,
                      Val22Array{x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26,
                                 x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37},
                      x60,
                      x83,
                      x84,
                      x85,
                      x85,
                      Val(0),
                      Val(11),
                      x86,
                      x87,
                      x88,
                      LAYOUT_LOOKUP(layout2, arm0));
  }
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:758)
  BoundLayout<ChiMinor2_0_Arm1Arm1_SuperLayout> x90 = LAYOUT_LOOKUP(x9, arm1);
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:762)
  Val x91 = x12[0]._super;
  Val x92 = x12[1]._super;
  Val x93 = x12[2]._super;
  Val x94 = x12[3]._super;
  Val x95 = x12[4]._super;
  Val x96 = x12[5]._super;
  Val x97 = x12[6]._super;
  Val x98 = x12[7]._super;
  Val x99 = x12[8]._super;
  Val x100 = x12[9]._super;
  Val x101 = x12[10]._super;
  Val x102 = x12[11]._super;
  Val x103 = x12[12]._super;
  Val x104 = x12[13]._super;
  Val x105 = x12[14]._super;
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:770)
  BoundLayout<ChiMinor2_0_Arm1Arm1Arm1_SuperLayout> x106 = LAYOUT_LOOKUP(x90, arm1);
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:744)
  Val22Array x107 = Val22Array{x91,  x92,  x93,  x94,  x95, x96, x97, x98, x99, x100, x101,
                               x102, x103, x104, x105, x31, x32, x33, x34, x35, x36,  x37};
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:782)
  BoundLayout<ChiMinor2_0_Arm1Arm1Arm1Arm1_SuperLayout> x108 = LAYOUT_LOOKUP(x106, arm1);
  if (to_size_t(Val(0))) {
    if (to_size_t(Val(0))) {
      // chi_minor2(zirgen/circuit/keccak/keccak.zir:767)
      RetTupleStruct x109 =
          exec_RetTuple(ctx,
                        Val22Array{x91,  x92,  x93,  x94,  x95, x96, x97, x98, x99, x100, x101,
                                   x102, x103, x104, x105, x16, x17, x18, x19, x20, x21,  x22},
                        Val22Array{x23, x24, x25, x26, x27, x28, x29, x30, x46, x47, x48,
                                   x49, x50, x51, x52, x53, x54, x55, x56, x57, x58, x59},
                        x83,
                        x84,
                        x85,
                        x85,
                        Val(0),
                        Val(12),
                        x86,
                        x87,
                        x88,
                        LAYOUT_LOOKUP(x9, arm0));
    }
    if (to_size_t(Val(1))) {
      if (to_size_t(Val(0))) {
        // chi_minor2(zirgen/circuit/keccak/keccak.zir:779)
        RetTupleStruct x110 =
            exec_RetTuple(ctx,
                          x107,
                          Val22Array{x38, x39, x40, x41, x42, x43, x44, x45, x16, x17, x18,
                                     x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29},
                          Val22Array{x30, x62, x63, x64, x65, x66, x67, x68, x69, x70, x71,
                                     x72, x73, x74, x75, x76, x77, x78, x79, x80, x81, x82},
                          x84,
                          x85,
                          x85,
                          Val(0),
                          Val(13),
                          x86,
                          x87,
                          x88,
                          LAYOUT_LOOKUP(x90, arm0));
      }
      if (to_size_t(Val(1))) {
        if (to_size_t(Val(0))) {
          // chi_minor2(zirgen/circuit/keccak/keccak.zir:790)
          RetTupleStruct x111 =
              exec_RetTuple(ctx,
                            x107,
                            x60,
                            Val22Array{x61, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25,
                                       x26, x27, x28, x29, x30, x77, x78, x79, x80, x81, x82},
                            x84,
                            x85,
                            x85,
                            Val(0),
                            Val(14),
                            x86,
                            x87,
                            x88,
                            LAYOUT_LOOKUP(x106, arm0));
        }
        if (to_size_t(Val(1))) {
          // chi_minor2(zirgen/circuit/keccak/keccak.zir:800)
          OneHot_24_Struct x112 = exec_OneHot_24_(ctx, x86, LAYOUT_LOOKUP(x108, unpackRnd));
          // chi_minor2(zirgen/circuit/keccak/keccak.zir:801)
          ToBits_22_Struct x113 = exec_ToBits_22_(ctx, x93, LAYOUT_LOOKUP(x108, unpackA002));
          // chi_minor2(zirgen/circuit/keccak/keccak.zir:800)
          NondetRegStruct24Array x114 = x112._super;
          // chi_minor2(zirgen/circuit/keccak/keccak.zir:801)
          NondetRegStruct22Array x115 = x113._super;
          // chi_minor2(zirgen/circuit/keccak/keccak.zir:802)
          RetTupleStruct x116 = exec_RetTuple(
              ctx,
              x107,
              x60,
              Val22Array{x61, x62, x63, x64, x65, x66, x67, x68, x69, x70, x71,
                         x72, x73, x74, x75, x76, x16, x17, x18, x19, x20, x21},
              Val24Array{x114[0]._super,  x114[1]._super,  x114[2]._super,  x114[3]._super,
                         x114[4]._super,  x114[5]._super,  x114[6]._super,  x114[7]._super,
                         x114[8]._super,  x114[9]._super,  x114[10]._super, x114[11]._super,
                         x114[12]._super, x114[13]._super, x114[14]._super, x114[15]._super,
                         x114[16]._super, x114[17]._super, x114[18]._super, x114[19]._super,
                         x114[20]._super, x114[21]._super, x114[22]._super, x114[23]._super},
              Val22Array{x22,    x23,    x24,    x25,    x26,    x27,    x28,    x29,
                         x30,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                         Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
              Val22Array{x115[0]._super,  x115[1]._super,  x115[2]._super,  x115[3]._super,
                         x115[4]._super,  x115[5]._super,  x115[6]._super,  x115[7]._super,
                         x115[8]._super,  x115[9]._super,  x115[10]._super, x115[11]._super,
                         x115[12]._super, x115[13]._super, x115[14]._super, x115[15]._super,
                         x115[16]._super, x115[17]._super, x115[18]._super, x115[19]._super,
                         x115[20]._super, x115[21]._super},
              Val(9),
              Val(14),
              x86,
              x87,
              x88,
              LAYOUT_LOOKUP(x108, _super));
        }
        // chi_minor2(zirgen/circuit/keccak/keccak.zir:782)
        RetTupleStruct x117 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x106, _super));
      }
      // chi_minor2(zirgen/circuit/keccak/keccak.zir:770)
      RetTupleStruct x118 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x90, _super));
    }
    // chi_minor2(zirgen/circuit/keccak/keccak.zir:758)
    RetTupleStruct x119 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x9, _super));
  }
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:746)
  RetTupleStruct x120 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(layout2, _super));
  return x120;
}
RetTupleStruct execChiMajor_0_(ExecContext& ctx,
                               RetTupleStruct arg0,
                               BoundLayout<RetTupleLayout> arg1,
                               BoundLayout<ChiMajor_0_Layout> layout2) {
  // chi_major(zirgen/circuit/keccak/keccak.zir:841)
  BoundLayout<ChiMajor_0__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // chi_major(zirgen/circuit/keccak/keccak.zir:840)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  OneHot_10_Struct x5 = exec_OneHot_10_(ctx, x4.minor._super, LAYOUT_LOOKUP(layout2, minorOnehot));
  NondetRegStruct10Array x6 = x5._super;
  if (to_size_t(x6[0]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:842)
    RetTupleStruct x7 = back_RetTuple(ctx, 1, arg1);
    RetTupleStruct x8 = execChiMinor0_0__0_(ctx, x7, LAYOUT_LOOKUP(x3, arm0));
  }
  if (to_size_t(x6[1]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:843)
    RetTupleStruct x9 = execChiMinor1_0__0_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm1));
  }
  if (to_size_t(x6[2]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:844)
    RetTupleStruct x10 = back_RetTuple(ctx, 3, arg1);
    RetTupleStruct x11 = execChiMinor0_1__0_(ctx, x10, LAYOUT_LOOKUP(x3, arm2));
  }
  if (to_size_t(x6[3]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:845)
    RetTupleStruct x12 = back_RetTuple(ctx, 4, arg1);
    RetTupleStruct x13 = execChiMinor0_2__0_(ctx, x12, LAYOUT_LOOKUP(x3, arm3));
  }
  if (to_size_t(x6[4]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:846)
    RetTupleStruct x14 = execChiMinor1_2__0_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm4));
  }
  if (to_size_t(x6[5]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:847)
    RetTupleStruct x15 = back_RetTuple(ctx, 6, arg1);
    RetTupleStruct x16 = execChiMinor0_3__0_(ctx, x15, LAYOUT_LOOKUP(x3, arm5));
  }
  if (to_size_t(x6[6]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:848)
    RetTupleStruct x17 = back_RetTuple(ctx, 7, arg1);
    RetTupleStruct x18 = execChiMinor0_4__0_(ctx, x17, LAYOUT_LOOKUP(x3, arm6));
  }
  if (to_size_t(x6[7]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:849)
    RetTupleStruct x19 = execChiMinor1_4__0_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm7));
  }
  if (to_size_t(x6[8]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:850)
    RetTupleStruct x20 = execChiMinor2_0_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm8));
  }
  if (to_size_t(x6[9]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:851)
    RetTupleStruct x21 = back_RetTuple(ctx, 1, arg1);
    RetTupleStruct x22 = execIotaXorRc(ctx, x21, LAYOUT_LOOKUP(x3, arm9));
  }
  // chi_major(zirgen/circuit/keccak/keccak.zir:841)
  RetTupleStruct x23 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x23;
}
RetTupleStruct execChiMinor0_0__1_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<ChiMinor0_0__1_Layout> layout1) {
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:542)
  NondetRegStruct22Array x2 = arg0.arrA;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:546)
  Val x3 = x2[18]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:554)
  ToBits_22_Struct x4 = exec_ToBits_22_(ctx, x3, LAYOUT_LOOKUP(layout1, unpack_0xp1));
  NondetRegStruct22Array x5 = x4._super;
  Val x6 = x5[0]._super;
  Val x7 = x5[1]._super;
  Val x8 = x5[2]._super;
  Val x9 = x5[3]._super;
  Val x10 = x5[4]._super;
  Val x11 = x5[5]._super;
  Val x12 = x5[6]._super;
  Val x13 = x5[7]._super;
  Val x14 = x5[8]._super;
  Val x15 = x5[9]._super;
  Val x16 = x5[10]._super;
  Val x17 = x5[11]._super;
  Val x18 = x5[12]._super;
  Val x19 = x5[13]._super;
  Val x20 = x5[14]._super;
  Val x21 = x5[15]._super;
  Val x22 = x5[16]._super;
  Val x23 = x5[17]._super;
  Val x24 = x5[18]._super;
  Val x25 = x5[19]._super;
  Val x26 = x5[20]._super;
  Val x27 = x5[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:555)
  Val x28 = ((((((x6 + (x7 * Val(2))) + (x8 * Val(4))) + (x9 * Val(8))) + (x10 * Val(16))) +
              (x11 * Val(32))) +
             (x12 * Val(64)));
  Val x29 =
      ((((((x28 + (x13 * Val(128))) + (x14 * Val(256))) + (x15 * Val(512))) + (x16 * Val(1024))) +
        (x17 * Val(2048))) +
       (x18 * Val(4096)));
  Val x30 = ((((((x29 + (x19 * Val(8192))) + (x20 * Val(16384))) + (x21 * Val(32768))) +
               (x22 * Val(65536))) +
              (x23 * Val(131072))) +
             (x24 * Val(262144)));
  EQZ(((((x30 + (x25 * Val(524288))) + (x26 * Val(1048576))) + (x27 * Val(2097152))) - x3),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:555)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:559)
  Val x31 = x2[19]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:567)
  ToBits_21_Struct x32 = exec_ToBits_21_(ctx, x31, LAYOUT_LOOKUP(layout1, unpack_1xp1));
  NondetRegStruct21Array x33 = x32._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:568)
  Val x55 = ((((((x34 + (x35 * Val(2))) + (x36 * Val(4))) + (x37 * Val(8))) + (x38 * Val(16))) +
              (x39 * Val(32))) +
             (x40 * Val(64)));
  Val x56 =
      ((((((x55 + (x41 * Val(128))) + (x42 * Val(256))) + (x43 * Val(512))) + (x44 * Val(1024))) +
        (x45 * Val(2048))) +
       (x46 * Val(4096)));
  Val x57 = ((((((x56 + (x47 * Val(8192))) + (x48 * Val(16384))) + (x49 * Val(32768))) +
               (x50 * Val(65536))) +
              (x51 * Val(131072))) +
             (x52 * Val(262144)));
  EQZ((((x57 + (x53 * Val(524288))) + (x54 * Val(1048576))) - x31),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:568)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:573)
  Val x58 = x2[21]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:581)
  ToBits_22_Struct x59 = exec_ToBits_22_(ctx, x58, LAYOUT_LOOKUP(layout1, unpack_0xp2));
  NondetRegStruct22Array x60 = x59._super;
  Val x61 = x60[0]._super;
  Val x62 = x60[1]._super;
  Val x63 = x60[2]._super;
  Val x64 = x60[3]._super;
  Val x65 = x60[4]._super;
  Val x66 = x60[5]._super;
  Val x67 = x60[6]._super;
  Val x68 = x60[7]._super;
  Val x69 = x60[8]._super;
  Val x70 = x60[9]._super;
  Val x71 = x60[10]._super;
  Val x72 = x60[11]._super;
  Val x73 = x60[12]._super;
  Val x74 = x60[13]._super;
  Val x75 = x60[14]._super;
  Val x76 = x60[15]._super;
  Val x77 = x60[16]._super;
  Val x78 = x60[17]._super;
  Val x79 = x60[18]._super;
  Val x80 = x60[19]._super;
  Val x81 = x60[20]._super;
  Val x82 = x60[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:582)
  Val x83 = ((((((x61 + (x62 * Val(2))) + (x63 * Val(4))) + (x64 * Val(8))) + (x65 * Val(16))) +
              (x66 * Val(32))) +
             (x67 * Val(64)));
  Val x84 =
      ((((((x83 + (x68 * Val(128))) + (x69 * Val(256))) + (x70 * Val(512))) + (x71 * Val(1024))) +
        (x72 * Val(2048))) +
       (x73 * Val(4096)));
  Val x85 = ((((((x84 + (x74 * Val(8192))) + (x75 * Val(16384))) + (x76 * Val(32768))) +
               (x77 * Val(65536))) +
              (x78 * Val(131072))) +
             (x79 * Val(262144)));
  EQZ(((((x85 + (x80 * Val(524288))) + (x81 * Val(1048576))) + (x82 * Val(2097152))) - x58),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:582)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:586)
  Val x86 = arg0.arrB[0]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:594)
  ToBits_21_Struct x87 = exec_ToBits_21_(ctx, x86, LAYOUT_LOOKUP(layout1, unpack_1xp2));
  NondetRegStruct21Array x88 = x87._super;
  Val x89 = x88[0]._super;
  Val x90 = x88[1]._super;
  Val x91 = x88[2]._super;
  Val x92 = x88[3]._super;
  Val x93 = x88[4]._super;
  Val x94 = x88[5]._super;
  Val x95 = x88[6]._super;
  Val x96 = x88[7]._super;
  Val x97 = x88[8]._super;
  Val x98 = x88[9]._super;
  Val x99 = x88[10]._super;
  Val x100 = x88[11]._super;
  Val x101 = x88[12]._super;
  Val x102 = x88[13]._super;
  Val x103 = x88[14]._super;
  Val x104 = x88[15]._super;
  Val x105 = x88[16]._super;
  Val x106 = x88[17]._super;
  Val x107 = x88[18]._super;
  Val x108 = x88[19]._super;
  Val x109 = x88[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:595)
  Val x110 = ((((((x89 + (x90 * Val(2))) + (x91 * Val(4))) + (x92 * Val(8))) + (x93 * Val(16))) +
               (x94 * Val(32))) +
              (x95 * Val(64)));
  Val x111 =
      ((((((x110 + (x96 * Val(128))) + (x97 * Val(256))) + (x98 * Val(512))) + (x99 * Val(1024))) +
        (x100 * Val(2048))) +
       (x101 * Val(4096)));
  Val x112 = ((((((x111 + (x102 * Val(8192))) + (x103 * Val(16384))) + (x104 * Val(32768))) +
                (x105 * Val(65536))) +
               (x106 * Val(131072))) +
              (x107 * Val(262144)));
  EQZ((((x112 + (x108 * Val(524288))) + (x109 * Val(1048576))) - x86),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:595)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:599)
  Val x113 = x2[15]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:607)
  ToBits_22_Struct x114 = exec_ToBits_22_(ctx, x113, LAYOUT_LOOKUP(layout1, unpack_0x));
  NondetRegStruct22Array x115 = x114._super;
  Val x116 = x115[0]._super;
  Val x117 = x115[1]._super;
  Val x118 = x115[2]._super;
  Val x119 = x115[3]._super;
  Val x120 = x115[4]._super;
  Val x121 = x115[5]._super;
  Val x122 = x115[6]._super;
  Val x123 = x115[7]._super;
  Val x124 = x115[8]._super;
  Val x125 = x115[9]._super;
  Val x126 = x115[10]._super;
  Val x127 = x115[11]._super;
  Val x128 = x115[12]._super;
  Val x129 = x115[13]._super;
  Val x130 = x115[14]._super;
  Val x131 = x115[15]._super;
  Val x132 = x115[16]._super;
  Val x133 = x115[17]._super;
  Val x134 = x115[18]._super;
  Val x135 = x115[19]._super;
  Val x136 = x115[20]._super;
  Val x137 = x115[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:608)
  Val x138 = (x117 * Val(2));
  Val x139 = ((((((x116 + x138) + (x118 * Val(4))) + (x119 * Val(8))) + (x120 * Val(16))) +
               (x121 * Val(32))) +
              (x122 * Val(64)));
  Val x140 = ((((((x139 + (x123 * Val(128))) + (x124 * Val(256))) + (x125 * Val(512))) +
                (x126 * Val(1024))) +
               (x127 * Val(2048))) +
              (x128 * Val(4096)));
  Val x141 = ((((((x140 + (x129 * Val(8192))) + (x130 * Val(16384))) + (x131 * Val(32768))) +
                (x132 * Val(65536))) +
               (x133 * Val(131072))) +
              (x134 * Val(262144)));
  EQZ(((((x141 + (x135 * Val(524288))) + (x136 * Val(1048576))) + (x137 * Val(2097152))) - x113),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:608)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:612)
  Val x142 = x2[16]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:620)
  ToBits_21_Struct x143 = exec_ToBits_21_(ctx, x142, LAYOUT_LOOKUP(layout1, unpack_1x));
  NondetRegStruct21Array x144 = x143._super;
  Val x145 = x144[0]._super;
  Val x146 = x144[1]._super;
  Val x147 = x144[2]._super;
  Val x148 = x144[3]._super;
  Val x149 = x144[4]._super;
  Val x150 = x144[5]._super;
  Val x151 = x144[6]._super;
  Val x152 = x144[7]._super;
  Val x153 = x144[8]._super;
  Val x154 = x144[9]._super;
  Val x155 = x144[10]._super;
  Val x156 = x144[11]._super;
  Val x157 = x144[12]._super;
  Val x158 = x144[13]._super;
  Val x159 = x144[14]._super;
  Val x160 = x144[15]._super;
  Val x161 = x144[16]._super;
  Val x162 = x144[17]._super;
  Val x163 = x144[18]._super;
  Val x164 = x144[19]._super;
  Val x165 = x144[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:621)
  Val x166 = (x146 * Val(2));
  Val x167 = ((((((x145 + x166) + (x147 * Val(4))) + (x148 * Val(8))) + (x149 * Val(16))) +
               (x150 * Val(32))) +
              (x151 * Val(64)));
  Val x168 = ((((((x167 + (x152 * Val(128))) + (x153 * Val(256))) + (x154 * Val(512))) +
                (x155 * Val(1024))) +
               (x156 * Val(2048))) +
              (x157 * Val(4096)));
  Val x169 = ((((((x168 + (x158 * Val(8192))) + (x159 * Val(16384))) + (x160 * Val(32768))) +
                (x161 * Val(65536))) +
               (x162 * Val(131072))) +
              (x163 * Val(262144)));
  EQZ((((x169 + (x164 * Val(524288))) + (x165 * Val(1048576))) - x142),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:621)");
  // andnxor(zirgen/circuit/keccak/keccak.zir:118)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:623)
  Val x170 = ((Val(1) - x6) * x61);
  Val x171 = ((Val(1) - x7) * x62);
  Val x172 = ((Val(1) - x8) * x63);
  Val x173 = ((Val(1) - x9) * x64);
  Val x174 = ((Val(1) - x10) * x65);
  Val x175 = ((Val(1) - x11) * x66);
  Val x176 = ((Val(1) - x12) * x67);
  Val x177 = ((Val(1) - x13) * x68);
  Val x178 = ((Val(1) - x14) * x69);
  Val x179 = ((Val(1) - x15) * x70);
  Val x180 = ((Val(1) - x16) * x71);
  Val x181 = ((Val(1) - x17) * x72);
  Val x182 = ((Val(1) - x18) * x73);
  Val x183 = ((Val(1) - x19) * x74);
  Val x184 = ((Val(1) - x20) * x75);
  Val x185 = ((Val(1) - x21) * x76);
  Val x186 = ((Val(1) - x22) * x77);
  Val x187 = ((Val(1) - x23) * x78);
  Val x188 = ((Val(1) - x24) * x79);
  Val x189 = ((Val(1) - x25) * x80);
  Val x190 = ((Val(1) - x26) * x81);
  Val x191 = ((Val(1) - x27) * x82);
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:624)
  Val x192 = ((Val(1) - x34) * x89);
  Val x193 = ((Val(1) - x35) * x90);
  Val x194 = ((Val(1) - x36) * x91);
  Val x195 = ((Val(1) - x37) * x92);
  Val x196 = ((Val(1) - x38) * x93);
  Val x197 = ((Val(1) - x39) * x94);
  Val x198 = ((Val(1) - x40) * x95);
  Val x199 = ((Val(1) - x41) * x96);
  Val x200 = ((Val(1) - x42) * x97);
  Val x201 = ((Val(1) - x43) * x98);
  Val x202 = ((Val(1) - x44) * x99);
  Val x203 = ((Val(1) - x45) * x100);
  Val x204 = ((Val(1) - x46) * x101);
  Val x205 = ((Val(1) - x47) * x102);
  Val x206 = ((Val(1) - x48) * x103);
  Val x207 = ((Val(1) - x49) * x104);
  Val x208 = ((Val(1) - x50) * x105);
  Val x209 = ((Val(1) - x51) * x106);
  Val x210 = ((Val(1) - x52) * x107);
  Val x211 = ((Val(1) - x53) * x108);
  Val x212 = ((Val(1) - x54) * x109);
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:625)
  Val x213 =
      (((((x116 + x170) - ((x116 * Val(2)) * x170)) + (((x117 + x171) - (x138 * x171)) * Val(2))) +
        (((x118 + x172) - ((x118 * Val(2)) * x172)) * Val(4))) +
       (((x119 + x173) - ((x119 * Val(2)) * x173)) * Val(8)));
  Val x214 = (((x213 + (((x120 + x174) - ((x120 * Val(2)) * x174)) * Val(16))) +
               (((x121 + x175) - ((x121 * Val(2)) * x175)) * Val(32))) +
              (((x122 + x176) - ((x122 * Val(2)) * x176)) * Val(64)));
  Val x215 = (((x214 + (((x123 + x177) - ((x123 * Val(2)) * x177)) * Val(128))) +
               (((x124 + x178) - ((x124 * Val(2)) * x178)) * Val(256))) +
              (((x125 + x179) - ((x125 * Val(2)) * x179)) * Val(512)));
  Val x216 = (((x215 + (((x126 + x180) - ((x126 * Val(2)) * x180)) * Val(1024))) +
               (((x127 + x181) - ((x127 * Val(2)) * x181)) * Val(2048))) +
              (((x128 + x182) - ((x128 * Val(2)) * x182)) * Val(4096)));
  Val x217 = (((x216 + (((x129 + x183) - ((x129 * Val(2)) * x183)) * Val(8192))) +
               (((x130 + x184) - ((x130 * Val(2)) * x184)) * Val(16384))) +
              (((x131 + x185) - ((x131 * Val(2)) * x185)) * Val(32768)));
  Val x218 = (((x217 + (((x132 + x186) - ((x132 * Val(2)) * x186)) * Val(65536))) +
               (((x133 + x187) - ((x133 * Val(2)) * x187)) * Val(131072))) +
              (((x134 + x188) - ((x134 * Val(2)) * x188)) * Val(262144)));
  Val x219 = (((x218 + (((x135 + x189) - ((x135 * Val(2)) * x189)) * Val(524288))) +
               (((x136 + x190) - ((x136 * Val(2)) * x190)) * Val(1048576))) +
              (((x137 + x191) - ((x137 * Val(2)) * x191)) * Val(2097152)));
  NondetRegStruct x220 = exec_Reg(ctx, x219, LAYOUT_LOOKUP(layout1, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  Val x221 =
      (((((x145 + x192) - ((x145 * Val(2)) * x192)) + (((x146 + x193) - (x166 * x193)) * Val(2))) +
        (((x147 + x194) - ((x147 * Val(2)) * x194)) * Val(4))) +
       (((x148 + x195) - ((x148 * Val(2)) * x195)) * Val(8)));
  Val x222 = (((x221 + (((x149 + x196) - ((x149 * Val(2)) * x196)) * Val(16))) +
               (((x150 + x197) - ((x150 * Val(2)) * x197)) * Val(32))) +
              (((x151 + x198) - ((x151 * Val(2)) * x198)) * Val(64)));
  Val x223 = (((x222 + (((x152 + x199) - ((x152 * Val(2)) * x199)) * Val(128))) +
               (((x153 + x200) - ((x153 * Val(2)) * x200)) * Val(256))) +
              (((x154 + x201) - ((x154 * Val(2)) * x201)) * Val(512)));
  Val x224 = (((x223 + (((x155 + x202) - ((x155 * Val(2)) * x202)) * Val(1024))) +
               (((x156 + x203) - ((x156 * Val(2)) * x203)) * Val(2048))) +
              (((x157 + x204) - ((x157 * Val(2)) * x204)) * Val(4096)));
  Val x225 = (((x224 + (((x158 + x205) - ((x158 * Val(2)) * x205)) * Val(8192))) +
               (((x159 + x206) - ((x159 * Val(2)) * x206)) * Val(16384))) +
              (((x160 + x207) - ((x160 * Val(2)) * x207)) * Val(32768)));
  Val x226 = (((x225 + (((x161 + x208) - ((x161 * Val(2)) * x208)) * Val(65536))) +
               (((x162 + x209) - ((x162 * Val(2)) * x209)) * Val(131072))) +
              (((x163 + x210) - ((x163 * Val(2)) * x210)) * Val(262144)));
  NondetRegStruct x227 =
      exec_Reg(ctx,
               ((x226 + (((x164 + x211) - ((x164 * Val(2)) * x211)) * Val(524288))) +
                (((x165 + x212) - ((x165 * Val(2)) * x212)) * Val(1048576))),
               LAYOUT_LOOKUP(layout1, _1));
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:630)
  Val22Array x228 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x229 = exec_RetTuple(
      ctx,
      x228,
      x228,
      x228,
      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), x220._super, x227._super},
      x228,
      x228,
      Val(1),
      Val(11),
      arg0.rnd._super,
      arg0.blk._super,
      arg0.midx._super,
      LAYOUT_LOOKUP(layout1, _super));
  return x229;
}
RetTupleStruct execChiMinor1_0__1_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<ChiMinor1_0__1_Layout> layout2) {
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:685)
  BoundLayout<ChiMinor1_0__1__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:635)
  RetTupleStruct x4 = back_RetTuple(ctx, 2, arg1);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:636)
  RetTupleStruct x5 = back_RetTuple(ctx, 1, arg1);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:635)
  NondetRegStruct22Array x6 = x4.arrA;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:640)
  Val x7 = x6[17]._super;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:648)
  ToBits_21_Struct x8 = exec_ToBits_21_(ctx, x7, LAYOUT_LOOKUP(layout2, unpack_2x));
  NondetRegStruct21Array x9 = x8._super;
  Val x10 = x9[0]._super;
  Val x11 = x9[1]._super;
  Val x12 = x9[2]._super;
  Val x13 = x9[3]._super;
  Val x14 = x9[4]._super;
  Val x15 = x9[5]._super;
  Val x16 = x9[6]._super;
  Val x17 = x9[7]._super;
  Val x18 = x9[8]._super;
  Val x19 = x9[9]._super;
  Val x20 = x9[10]._super;
  Val x21 = x9[11]._super;
  Val x22 = x9[12]._super;
  Val x23 = x9[13]._super;
  Val x24 = x9[14]._super;
  Val x25 = x9[15]._super;
  Val x26 = x9[16]._super;
  Val x27 = x9[17]._super;
  Val x28 = x9[18]._super;
  Val x29 = x9[19]._super;
  Val x30 = x9[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:649)
  Val x31 = (x11 * Val(2));
  Val x32 =
      ((((((x10 + x31) + (x12 * Val(4))) + (x13 * Val(8))) + (x14 * Val(16))) + (x15 * Val(32))) +
       (x16 * Val(64)));
  Val x33 =
      ((((((x32 + (x17 * Val(128))) + (x18 * Val(256))) + (x19 * Val(512))) + (x20 * Val(1024))) +
        (x21 * Val(2048))) +
       (x22 * Val(4096)));
  Val x34 = ((((((x33 + (x23 * Val(8192))) + (x24 * Val(16384))) + (x25 * Val(32768))) +
               (x26 * Val(65536))) +
              (x27 * Val(131072))) +
             (x28 * Val(262144)));
  EQZ((((x34 + (x29 * Val(524288))) + (x30 * Val(1048576))) - x7),
      "chi_minor1(zirgen/circuit/keccak/keccak.zir:649)");
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:654)
  Val x35 = x6[20]._super;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:662)
  ToBits_21_Struct x36 = exec_ToBits_21_(ctx, x35, LAYOUT_LOOKUP(layout2, unpack_2xp1));
  NondetRegStruct21Array x37 = x36._super;
  Val x38 = x37[0]._super;
  Val x39 = x37[1]._super;
  Val x40 = x37[2]._super;
  Val x41 = x37[3]._super;
  Val x42 = x37[4]._super;
  Val x43 = x37[5]._super;
  Val x44 = x37[6]._super;
  Val x45 = x37[7]._super;
  Val x46 = x37[8]._super;
  Val x47 = x37[9]._super;
  Val x48 = x37[10]._super;
  Val x49 = x37[11]._super;
  Val x50 = x37[12]._super;
  Val x51 = x37[13]._super;
  Val x52 = x37[14]._super;
  Val x53 = x37[15]._super;
  Val x54 = x37[16]._super;
  Val x55 = x37[17]._super;
  Val x56 = x37[18]._super;
  Val x57 = x37[19]._super;
  Val x58 = x37[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:663)
  Val x59 = ((((((x38 + (x39 * Val(2))) + (x40 * Val(4))) + (x41 * Val(8))) + (x42 * Val(16))) +
              (x43 * Val(32))) +
             (x44 * Val(64)));
  Val x60 =
      ((((((x59 + (x45 * Val(128))) + (x46 * Val(256))) + (x47 * Val(512))) + (x48 * Val(1024))) +
        (x49 * Val(2048))) +
       (x50 * Val(4096)));
  Val x61 = ((((((x60 + (x51 * Val(8192))) + (x52 * Val(16384))) + (x53 * Val(32768))) +
               (x54 * Val(65536))) +
              (x55 * Val(131072))) +
             (x56 * Val(262144)));
  EQZ((((x61 + (x57 * Val(524288))) + (x58 * Val(1048576))) - x35),
      "chi_minor1(zirgen/circuit/keccak/keccak.zir:663)");
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:635)
  NondetRegStruct22Array x62 = x4.arrB;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:667)
  Val x63 = x62[1]._super;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:675)
  ToBits_21_Struct x64 = exec_ToBits_21_(ctx, x63, LAYOUT_LOOKUP(layout2, unpack_2xp2));
  NondetRegStruct21Array x65 = x64._super;
  Val x66 = x65[0]._super;
  Val x67 = x65[1]._super;
  Val x68 = x65[2]._super;
  Val x69 = x65[3]._super;
  Val x70 = x65[4]._super;
  Val x71 = x65[5]._super;
  Val x72 = x65[6]._super;
  Val x73 = x65[7]._super;
  Val x74 = x65[8]._super;
  Val x75 = x65[9]._super;
  Val x76 = x65[10]._super;
  Val x77 = x65[11]._super;
  Val x78 = x65[12]._super;
  Val x79 = x65[13]._super;
  Val x80 = x65[14]._super;
  Val x81 = x65[15]._super;
  Val x82 = x65[16]._super;
  Val x83 = x65[17]._super;
  Val x84 = x65[18]._super;
  Val x85 = x65[19]._super;
  Val x86 = x65[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:676)
  Val x87 = ((((((x66 + (x67 * Val(2))) + (x68 * Val(4))) + (x69 * Val(8))) + (x70 * Val(16))) +
              (x71 * Val(32))) +
             (x72 * Val(64)));
  Val x88 =
      ((((((x87 + (x73 * Val(128))) + (x74 * Val(256))) + (x75 * Val(512))) + (x76 * Val(1024))) +
        (x77 * Val(2048))) +
       (x78 * Val(4096)));
  Val x89 = ((((((x88 + (x79 * Val(8192))) + (x80 * Val(16384))) + (x81 * Val(32768))) +
               (x82 * Val(65536))) +
              (x83 * Val(131072))) +
             (x84 * Val(262144)));
  EQZ((((x89 + (x85 * Val(524288))) + (x86 * Val(1048576))) - x63),
      "chi_minor1(zirgen/circuit/keccak/keccak.zir:676)");
  // andnxor(zirgen/circuit/keccak/keccak.zir:118)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:678)
  Val x90 = ((Val(1) - x38) * x66);
  Val x91 = ((Val(1) - x39) * x67);
  Val x92 = ((Val(1) - x40) * x68);
  Val x93 = ((Val(1) - x41) * x69);
  Val x94 = ((Val(1) - x42) * x70);
  Val x95 = ((Val(1) - x43) * x71);
  Val x96 = ((Val(1) - x44) * x72);
  Val x97 = ((Val(1) - x45) * x73);
  Val x98 = ((Val(1) - x46) * x74);
  Val x99 = ((Val(1) - x47) * x75);
  Val x100 = ((Val(1) - x48) * x76);
  Val x101 = ((Val(1) - x49) * x77);
  Val x102 = ((Val(1) - x50) * x78);
  Val x103 = ((Val(1) - x51) * x79);
  Val x104 = ((Val(1) - x52) * x80);
  Val x105 = ((Val(1) - x53) * x81);
  Val x106 = ((Val(1) - x54) * x82);
  Val x107 = ((Val(1) - x55) * x83);
  Val x108 = ((Val(1) - x56) * x84);
  Val x109 = ((Val(1) - x57) * x85);
  Val x110 = ((Val(1) - x58) * x86);
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:679)
  Val x111 = (((((x10 + x90) - ((x10 * Val(2)) * x90)) + (((x11 + x91) - (x31 * x91)) * Val(2))) +
               (((x12 + x92) - ((x12 * Val(2)) * x92)) * Val(4))) +
              (((x13 + x93) - ((x13 * Val(2)) * x93)) * Val(8)));
  Val x112 = (((x111 + (((x14 + x94) - ((x14 * Val(2)) * x94)) * Val(16))) +
               (((x15 + x95) - ((x15 * Val(2)) * x95)) * Val(32))) +
              (((x16 + x96) - ((x16 * Val(2)) * x96)) * Val(64)));
  Val x113 = (((x112 + (((x17 + x97) - ((x17 * Val(2)) * x97)) * Val(128))) +
               (((x18 + x98) - ((x18 * Val(2)) * x98)) * Val(256))) +
              (((x19 + x99) - ((x19 * Val(2)) * x99)) * Val(512)));
  Val x114 = (((x113 + (((x20 + x100) - ((x20 * Val(2)) * x100)) * Val(1024))) +
               (((x21 + x101) - ((x21 * Val(2)) * x101)) * Val(2048))) +
              (((x22 + x102) - ((x22 * Val(2)) * x102)) * Val(4096)));
  Val x115 = (((x114 + (((x23 + x103) - ((x23 * Val(2)) * x103)) * Val(8192))) +
               (((x24 + x104) - ((x24 * Val(2)) * x104)) * Val(16384))) +
              (((x25 + x105) - ((x25 * Val(2)) * x105)) * Val(32768)));
  Val x116 = (((x115 + (((x26 + x106) - ((x26 * Val(2)) * x106)) * Val(65536))) +
               (((x27 + x107) - ((x27 * Val(2)) * x107)) * Val(131072))) +
              (((x28 + x108) - ((x28 * Val(2)) * x108)) * Val(262144)));
  NondetRegStruct x117 =
      exec_Reg(ctx,
               ((x116 + (((x29 + x109) - ((x29 * Val(2)) * x109)) * Val(524288))) +
                (((x30 + x110) - ((x30 * Val(2)) * x110)) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, res3));
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:636)
  NondetRegStruct24Array x118 = x5.arrD;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:685)
  BoundLayout<ChiMinor1_0__1_Arm1_SuperLayout> x119 = LAYOUT_LOOKUP(x3, arm1);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:680)
  Val22Array x120 =
      Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), x118[22]._super};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:681)
  Val22Array x121 =
      Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), x118[23]._super};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:682)
  Val22Array x122 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), x117._super};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:686)
  Val24Array x123 = Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  Val22Array x124 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:636)
  Val x125 = x5.rnd._super;
  Val x126 = x5.blk._super;
  Val x127 = x5.midx._super;
  if (to_size_t(Val(0))) {
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:686)
    RetTupleStruct x128 = exec_RetTuple(ctx,
                                        x120,
                                        x121,
                                        x122,
                                        x123,
                                        x124,
                                        x124,
                                        Val(2),
                                        Val(11),
                                        x125,
                                        x126,
                                        x127,
                                        LAYOUT_LOOKUP(x3, arm0));
  }
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:718)
  Val x129 = x62[4]._super;
  if (to_size_t(Val(1))) {
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:699)
    ToBits_21_Struct x130 = exec_ToBits_21_(ctx, x35, LAYOUT_LOOKUP(x119, unpack_2nx));
    NondetRegStruct21Array x131 = x130._super;
    Val x132 = x131[0]._super;
    Val x133 = x131[1]._super;
    Val x134 = x131[2]._super;
    Val x135 = x131[3]._super;
    Val x136 = x131[4]._super;
    Val x137 = x131[5]._super;
    Val x138 = x131[6]._super;
    Val x139 = x131[7]._super;
    Val x140 = x131[8]._super;
    Val x141 = x131[9]._super;
    Val x142 = x131[10]._super;
    Val x143 = x131[11]._super;
    Val x144 = x131[12]._super;
    Val x145 = x131[13]._super;
    Val x146 = x131[14]._super;
    Val x147 = x131[15]._super;
    Val x148 = x131[16]._super;
    Val x149 = x131[17]._super;
    Val x150 = x131[18]._super;
    Val x151 = x131[19]._super;
    Val x152 = x131[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:700)
    Val x153 = (x133 * Val(2));
    Val x154 = ((((((x132 + x153) + (x134 * Val(4))) + (x135 * Val(8))) + (x136 * Val(16))) +
                 (x137 * Val(32))) +
                (x138 * Val(64)));
    Val x155 = ((((((x154 + (x139 * Val(128))) + (x140 * Val(256))) + (x141 * Val(512))) +
                  (x142 * Val(1024))) +
                 (x143 * Val(2048))) +
                (x144 * Val(4096)));
    Val x156 = ((((((x155 + (x145 * Val(8192))) + (x146 * Val(16384))) + (x147 * Val(32768))) +
                  (x148 * Val(65536))) +
                 (x149 * Val(131072))) +
                (x150 * Val(262144)));
    EQZ((((x156 + (x151 * Val(524288))) + (x152 * Val(1048576))) - x35),
        "chi_minor1(zirgen/circuit/keccak/keccak.zir:700)");
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:713)
    ToBits_21_Struct x157 = exec_ToBits_21_(ctx, x63, LAYOUT_LOOKUP(x119, unpack_2nxp1));
    NondetRegStruct21Array x158 = x157._super;
    Val x159 = x158[0]._super;
    Val x160 = x158[1]._super;
    Val x161 = x158[2]._super;
    Val x162 = x158[3]._super;
    Val x163 = x158[4]._super;
    Val x164 = x158[5]._super;
    Val x165 = x158[6]._super;
    Val x166 = x158[7]._super;
    Val x167 = x158[8]._super;
    Val x168 = x158[9]._super;
    Val x169 = x158[10]._super;
    Val x170 = x158[11]._super;
    Val x171 = x158[12]._super;
    Val x172 = x158[13]._super;
    Val x173 = x158[14]._super;
    Val x174 = x158[15]._super;
    Val x175 = x158[16]._super;
    Val x176 = x158[17]._super;
    Val x177 = x158[18]._super;
    Val x178 = x158[19]._super;
    Val x179 = x158[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:714)
    Val x180 =
        ((((((x159 + (x160 * Val(2))) + (x161 * Val(4))) + (x162 * Val(8))) + (x163 * Val(16))) +
          (x164 * Val(32))) +
         (x165 * Val(64)));
    Val x181 = ((((((x180 + (x166 * Val(128))) + (x167 * Val(256))) + (x168 * Val(512))) +
                  (x169 * Val(1024))) +
                 (x170 * Val(2048))) +
                (x171 * Val(4096)));
    Val x182 = ((((((x181 + (x172 * Val(8192))) + (x173 * Val(16384))) + (x174 * Val(32768))) +
                  (x175 * Val(65536))) +
                 (x176 * Val(131072))) +
                (x177 * Val(262144)));
    EQZ((((x182 + (x178 * Val(524288))) + (x179 * Val(1048576))) - x63),
        "chi_minor1(zirgen/circuit/keccak/keccak.zir:714)");
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:726)
    ToBits_21_Struct x183 = exec_ToBits_21_(ctx, x129, LAYOUT_LOOKUP(x119, unpack_2nxp2));
    NondetRegStruct21Array x184 = x183._super;
    Val x185 = x184[0]._super;
    Val x186 = x184[1]._super;
    Val x187 = x184[2]._super;
    Val x188 = x184[3]._super;
    Val x189 = x184[4]._super;
    Val x190 = x184[5]._super;
    Val x191 = x184[6]._super;
    Val x192 = x184[7]._super;
    Val x193 = x184[8]._super;
    Val x194 = x184[9]._super;
    Val x195 = x184[10]._super;
    Val x196 = x184[11]._super;
    Val x197 = x184[12]._super;
    Val x198 = x184[13]._super;
    Val x199 = x184[14]._super;
    Val x200 = x184[15]._super;
    Val x201 = x184[16]._super;
    Val x202 = x184[17]._super;
    Val x203 = x184[18]._super;
    Val x204 = x184[19]._super;
    Val x205 = x184[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:727)
    Val x206 =
        ((((((x185 + (x186 * Val(2))) + (x187 * Val(4))) + (x188 * Val(8))) + (x189 * Val(16))) +
          (x190 * Val(32))) +
         (x191 * Val(64)));
    Val x207 = ((((((x206 + (x192 * Val(128))) + (x193 * Val(256))) + (x194 * Val(512))) +
                  (x195 * Val(1024))) +
                 (x196 * Val(2048))) +
                (x197 * Val(4096)));
    Val x208 = ((((((x207 + (x198 * Val(8192))) + (x199 * Val(16384))) + (x200 * Val(32768))) +
                  (x201 * Val(65536))) +
                 (x202 * Val(131072))) +
                (x203 * Val(262144)));
    EQZ((((x208 + (x204 * Val(524288))) + (x205 * Val(1048576))) - x129),
        "chi_minor1(zirgen/circuit/keccak/keccak.zir:727)");
    // andnxor(zirgen/circuit/keccak/keccak.zir:118)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:729)
    Val x209 = ((Val(1) - x159) * x185);
    Val x210 = ((Val(1) - x160) * x186);
    Val x211 = ((Val(1) - x161) * x187);
    Val x212 = ((Val(1) - x162) * x188);
    Val x213 = ((Val(1) - x163) * x189);
    Val x214 = ((Val(1) - x164) * x190);
    Val x215 = ((Val(1) - x165) * x191);
    Val x216 = ((Val(1) - x166) * x192);
    Val x217 = ((Val(1) - x167) * x193);
    Val x218 = ((Val(1) - x168) * x194);
    Val x219 = ((Val(1) - x169) * x195);
    Val x220 = ((Val(1) - x170) * x196);
    Val x221 = ((Val(1) - x171) * x197);
    Val x222 = ((Val(1) - x172) * x198);
    Val x223 = ((Val(1) - x173) * x199);
    Val x224 = ((Val(1) - x174) * x200);
    Val x225 = ((Val(1) - x175) * x201);
    Val x226 = ((Val(1) - x176) * x202);
    Val x227 = ((Val(1) - x177) * x203);
    Val x228 = ((Val(1) - x178) * x204);
    Val x229 = ((Val(1) - x179) * x205);
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:730)
    Val x230 = (((((x132 + x209) - ((x132 * Val(2)) * x209)) +
                  (((x133 + x210) - (x153 * x210)) * Val(2))) +
                 (((x134 + x211) - ((x134 * Val(2)) * x211)) * Val(4))) +
                (((x135 + x212) - ((x135 * Val(2)) * x212)) * Val(8)));
    Val x231 = (((x230 + (((x136 + x213) - ((x136 * Val(2)) * x213)) * Val(16))) +
                 (((x137 + x214) - ((x137 * Val(2)) * x214)) * Val(32))) +
                (((x138 + x215) - ((x138 * Val(2)) * x215)) * Val(64)));
    Val x232 = (((x231 + (((x139 + x216) - ((x139 * Val(2)) * x216)) * Val(128))) +
                 (((x140 + x217) - ((x140 * Val(2)) * x217)) * Val(256))) +
                (((x141 + x218) - ((x141 * Val(2)) * x218)) * Val(512)));
    Val x233 = (((x232 + (((x142 + x219) - ((x142 * Val(2)) * x219)) * Val(1024))) +
                 (((x143 + x220) - ((x143 * Val(2)) * x220)) * Val(2048))) +
                (((x144 + x221) - ((x144 * Val(2)) * x221)) * Val(4096)));
    Val x234 = (((x233 + (((x145 + x222) - ((x145 * Val(2)) * x222)) * Val(8192))) +
                 (((x146 + x223) - ((x146 * Val(2)) * x223)) * Val(16384))) +
                (((x147 + x224) - ((x147 * Val(2)) * x224)) * Val(32768)));
    Val x235 = (((x234 + (((x148 + x225) - ((x148 * Val(2)) * x225)) * Val(65536))) +
                 (((x149 + x226) - ((x149 * Val(2)) * x226)) * Val(131072))) +
                (((x150 + x227) - ((x150 * Val(2)) * x227)) * Val(262144)));
    NondetRegStruct x236 =
        exec_Reg(ctx,
                 ((x235 + (((x151 + x228) - ((x151 * Val(2)) * x228)) * Val(524288))) +
                  (((x152 + x229) - ((x152 * Val(2)) * x229)) * Val(1048576))),
                 LAYOUT_LOOKUP(x119, res3n));
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:733)
    RetTupleStruct x237 =
        exec_RetTuple(ctx,
                      x120,
                      x121,
                      x122,
                      x123,
                      x124,
                      Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), x236._super},
                      Val(2),
                      Val(11),
                      x125,
                      x126,
                      x127,
                      LAYOUT_LOOKUP(x119, _super));
  }
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:685)
  RetTupleStruct x238 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x238;
}
RetTupleStruct execChiMinor0_1__1_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<ChiMinor0_1__1_Layout> layout1) {
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:542)
  NondetRegStruct22Array x2 = arg0.arrA;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:546)
  Val x3 = x2[21]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:554)
  ToBits_22_Struct x4 = exec_ToBits_22_(ctx, x3, LAYOUT_LOOKUP(layout1, unpack_0xp1));
  NondetRegStruct22Array x5 = x4._super;
  Val x6 = x5[0]._super;
  Val x7 = x5[1]._super;
  Val x8 = x5[2]._super;
  Val x9 = x5[3]._super;
  Val x10 = x5[4]._super;
  Val x11 = x5[5]._super;
  Val x12 = x5[6]._super;
  Val x13 = x5[7]._super;
  Val x14 = x5[8]._super;
  Val x15 = x5[9]._super;
  Val x16 = x5[10]._super;
  Val x17 = x5[11]._super;
  Val x18 = x5[12]._super;
  Val x19 = x5[13]._super;
  Val x20 = x5[14]._super;
  Val x21 = x5[15]._super;
  Val x22 = x5[16]._super;
  Val x23 = x5[17]._super;
  Val x24 = x5[18]._super;
  Val x25 = x5[19]._super;
  Val x26 = x5[20]._super;
  Val x27 = x5[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:555)
  Val x28 = ((((((x6 + (x7 * Val(2))) + (x8 * Val(4))) + (x9 * Val(8))) + (x10 * Val(16))) +
              (x11 * Val(32))) +
             (x12 * Val(64)));
  Val x29 =
      ((((((x28 + (x13 * Val(128))) + (x14 * Val(256))) + (x15 * Val(512))) + (x16 * Val(1024))) +
        (x17 * Val(2048))) +
       (x18 * Val(4096)));
  Val x30 = ((((((x29 + (x19 * Val(8192))) + (x20 * Val(16384))) + (x21 * Val(32768))) +
               (x22 * Val(65536))) +
              (x23 * Val(131072))) +
             (x24 * Val(262144)));
  EQZ(((((x30 + (x25 * Val(524288))) + (x26 * Val(1048576))) + (x27 * Val(2097152))) - x3),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:555)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:542)
  NondetRegStruct22Array x31 = arg0.arrB;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:559)
  Val x32 = x31[0]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:567)
  ToBits_21_Struct x33 = exec_ToBits_21_(ctx, x32, LAYOUT_LOOKUP(layout1, unpack_1xp1));
  NondetRegStruct21Array x34 = x33._super;
  Val x35 = x34[0]._super;
  Val x36 = x34[1]._super;
  Val x37 = x34[2]._super;
  Val x38 = x34[3]._super;
  Val x39 = x34[4]._super;
  Val x40 = x34[5]._super;
  Val x41 = x34[6]._super;
  Val x42 = x34[7]._super;
  Val x43 = x34[8]._super;
  Val x44 = x34[9]._super;
  Val x45 = x34[10]._super;
  Val x46 = x34[11]._super;
  Val x47 = x34[12]._super;
  Val x48 = x34[13]._super;
  Val x49 = x34[14]._super;
  Val x50 = x34[15]._super;
  Val x51 = x34[16]._super;
  Val x52 = x34[17]._super;
  Val x53 = x34[18]._super;
  Val x54 = x34[19]._super;
  Val x55 = x34[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:568)
  Val x56 = ((((((x35 + (x36 * Val(2))) + (x37 * Val(4))) + (x38 * Val(8))) + (x39 * Val(16))) +
              (x40 * Val(32))) +
             (x41 * Val(64)));
  Val x57 =
      ((((((x56 + (x42 * Val(128))) + (x43 * Val(256))) + (x44 * Val(512))) + (x45 * Val(1024))) +
        (x46 * Val(2048))) +
       (x47 * Val(4096)));
  Val x58 = ((((((x57 + (x48 * Val(8192))) + (x49 * Val(16384))) + (x50 * Val(32768))) +
               (x51 * Val(65536))) +
              (x52 * Val(131072))) +
             (x53 * Val(262144)));
  EQZ((((x58 + (x54 * Val(524288))) + (x55 * Val(1048576))) - x32),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:568)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:573)
  Val x59 = x31[2]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:581)
  ToBits_22_Struct x60 = exec_ToBits_22_(ctx, x59, LAYOUT_LOOKUP(layout1, unpack_0xp2));
  NondetRegStruct22Array x61 = x60._super;
  Val x62 = x61[0]._super;
  Val x63 = x61[1]._super;
  Val x64 = x61[2]._super;
  Val x65 = x61[3]._super;
  Val x66 = x61[4]._super;
  Val x67 = x61[5]._super;
  Val x68 = x61[6]._super;
  Val x69 = x61[7]._super;
  Val x70 = x61[8]._super;
  Val x71 = x61[9]._super;
  Val x72 = x61[10]._super;
  Val x73 = x61[11]._super;
  Val x74 = x61[12]._super;
  Val x75 = x61[13]._super;
  Val x76 = x61[14]._super;
  Val x77 = x61[15]._super;
  Val x78 = x61[16]._super;
  Val x79 = x61[17]._super;
  Val x80 = x61[18]._super;
  Val x81 = x61[19]._super;
  Val x82 = x61[20]._super;
  Val x83 = x61[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:582)
  Val x84 = ((((((x62 + (x63 * Val(2))) + (x64 * Val(4))) + (x65 * Val(8))) + (x66 * Val(16))) +
              (x67 * Val(32))) +
             (x68 * Val(64)));
  Val x85 =
      ((((((x84 + (x69 * Val(128))) + (x70 * Val(256))) + (x71 * Val(512))) + (x72 * Val(1024))) +
        (x73 * Val(2048))) +
       (x74 * Val(4096)));
  Val x86 = ((((((x85 + (x75 * Val(8192))) + (x76 * Val(16384))) + (x77 * Val(32768))) +
               (x78 * Val(65536))) +
              (x79 * Val(131072))) +
             (x80 * Val(262144)));
  EQZ(((((x86 + (x81 * Val(524288))) + (x82 * Val(1048576))) + (x83 * Val(2097152))) - x59),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:582)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:586)
  Val x87 = x31[3]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:594)
  ToBits_21_Struct x88 = exec_ToBits_21_(ctx, x87, LAYOUT_LOOKUP(layout1, unpack_1xp2));
  NondetRegStruct21Array x89 = x88._super;
  Val x90 = x89[0]._super;
  Val x91 = x89[1]._super;
  Val x92 = x89[2]._super;
  Val x93 = x89[3]._super;
  Val x94 = x89[4]._super;
  Val x95 = x89[5]._super;
  Val x96 = x89[6]._super;
  Val x97 = x89[7]._super;
  Val x98 = x89[8]._super;
  Val x99 = x89[9]._super;
  Val x100 = x89[10]._super;
  Val x101 = x89[11]._super;
  Val x102 = x89[12]._super;
  Val x103 = x89[13]._super;
  Val x104 = x89[14]._super;
  Val x105 = x89[15]._super;
  Val x106 = x89[16]._super;
  Val x107 = x89[17]._super;
  Val x108 = x89[18]._super;
  Val x109 = x89[19]._super;
  Val x110 = x89[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:595)
  Val x111 = ((((((x90 + (x91 * Val(2))) + (x92 * Val(4))) + (x93 * Val(8))) + (x94 * Val(16))) +
               (x95 * Val(32))) +
              (x96 * Val(64)));
  Val x112 =
      ((((((x111 + (x97 * Val(128))) + (x98 * Val(256))) + (x99 * Val(512))) + (x100 * Val(1024))) +
        (x101 * Val(2048))) +
       (x102 * Val(4096)));
  Val x113 = ((((((x112 + (x103 * Val(8192))) + (x104 * Val(16384))) + (x105 * Val(32768))) +
                (x106 * Val(65536))) +
               (x107 * Val(131072))) +
              (x108 * Val(262144)));
  EQZ((((x113 + (x109 * Val(524288))) + (x110 * Val(1048576))) - x87),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:595)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:599)
  Val x114 = x2[18]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:607)
  ToBits_22_Struct x115 = exec_ToBits_22_(ctx, x114, LAYOUT_LOOKUP(layout1, unpack_0x));
  NondetRegStruct22Array x116 = x115._super;
  Val x117 = x116[0]._super;
  Val x118 = x116[1]._super;
  Val x119 = x116[2]._super;
  Val x120 = x116[3]._super;
  Val x121 = x116[4]._super;
  Val x122 = x116[5]._super;
  Val x123 = x116[6]._super;
  Val x124 = x116[7]._super;
  Val x125 = x116[8]._super;
  Val x126 = x116[9]._super;
  Val x127 = x116[10]._super;
  Val x128 = x116[11]._super;
  Val x129 = x116[12]._super;
  Val x130 = x116[13]._super;
  Val x131 = x116[14]._super;
  Val x132 = x116[15]._super;
  Val x133 = x116[16]._super;
  Val x134 = x116[17]._super;
  Val x135 = x116[18]._super;
  Val x136 = x116[19]._super;
  Val x137 = x116[20]._super;
  Val x138 = x116[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:608)
  Val x139 = (x118 * Val(2));
  Val x140 = ((((((x117 + x139) + (x119 * Val(4))) + (x120 * Val(8))) + (x121 * Val(16))) +
               (x122 * Val(32))) +
              (x123 * Val(64)));
  Val x141 = ((((((x140 + (x124 * Val(128))) + (x125 * Val(256))) + (x126 * Val(512))) +
                (x127 * Val(1024))) +
               (x128 * Val(2048))) +
              (x129 * Val(4096)));
  Val x142 = ((((((x141 + (x130 * Val(8192))) + (x131 * Val(16384))) + (x132 * Val(32768))) +
                (x133 * Val(65536))) +
               (x134 * Val(131072))) +
              (x135 * Val(262144)));
  EQZ(((((x142 + (x136 * Val(524288))) + (x137 * Val(1048576))) + (x138 * Val(2097152))) - x114),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:608)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:612)
  Val x143 = x2[19]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:620)
  ToBits_21_Struct x144 = exec_ToBits_21_(ctx, x143, LAYOUT_LOOKUP(layout1, unpack_1x));
  NondetRegStruct21Array x145 = x144._super;
  Val x146 = x145[0]._super;
  Val x147 = x145[1]._super;
  Val x148 = x145[2]._super;
  Val x149 = x145[3]._super;
  Val x150 = x145[4]._super;
  Val x151 = x145[5]._super;
  Val x152 = x145[6]._super;
  Val x153 = x145[7]._super;
  Val x154 = x145[8]._super;
  Val x155 = x145[9]._super;
  Val x156 = x145[10]._super;
  Val x157 = x145[11]._super;
  Val x158 = x145[12]._super;
  Val x159 = x145[13]._super;
  Val x160 = x145[14]._super;
  Val x161 = x145[15]._super;
  Val x162 = x145[16]._super;
  Val x163 = x145[17]._super;
  Val x164 = x145[18]._super;
  Val x165 = x145[19]._super;
  Val x166 = x145[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:621)
  Val x167 = (x147 * Val(2));
  Val x168 = ((((((x146 + x167) + (x148 * Val(4))) + (x149 * Val(8))) + (x150 * Val(16))) +
               (x151 * Val(32))) +
              (x152 * Val(64)));
  Val x169 = ((((((x168 + (x153 * Val(128))) + (x154 * Val(256))) + (x155 * Val(512))) +
                (x156 * Val(1024))) +
               (x157 * Val(2048))) +
              (x158 * Val(4096)));
  Val x170 = ((((((x169 + (x159 * Val(8192))) + (x160 * Val(16384))) + (x161 * Val(32768))) +
                (x162 * Val(65536))) +
               (x163 * Val(131072))) +
              (x164 * Val(262144)));
  EQZ((((x170 + (x165 * Val(524288))) + (x166 * Val(1048576))) - x143),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:621)");
  // andnxor(zirgen/circuit/keccak/keccak.zir:118)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:623)
  Val x171 = ((Val(1) - x6) * x62);
  Val x172 = ((Val(1) - x7) * x63);
  Val x173 = ((Val(1) - x8) * x64);
  Val x174 = ((Val(1) - x9) * x65);
  Val x175 = ((Val(1) - x10) * x66);
  Val x176 = ((Val(1) - x11) * x67);
  Val x177 = ((Val(1) - x12) * x68);
  Val x178 = ((Val(1) - x13) * x69);
  Val x179 = ((Val(1) - x14) * x70);
  Val x180 = ((Val(1) - x15) * x71);
  Val x181 = ((Val(1) - x16) * x72);
  Val x182 = ((Val(1) - x17) * x73);
  Val x183 = ((Val(1) - x18) * x74);
  Val x184 = ((Val(1) - x19) * x75);
  Val x185 = ((Val(1) - x20) * x76);
  Val x186 = ((Val(1) - x21) * x77);
  Val x187 = ((Val(1) - x22) * x78);
  Val x188 = ((Val(1) - x23) * x79);
  Val x189 = ((Val(1) - x24) * x80);
  Val x190 = ((Val(1) - x25) * x81);
  Val x191 = ((Val(1) - x26) * x82);
  Val x192 = ((Val(1) - x27) * x83);
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:624)
  Val x193 = ((Val(1) - x35) * x90);
  Val x194 = ((Val(1) - x36) * x91);
  Val x195 = ((Val(1) - x37) * x92);
  Val x196 = ((Val(1) - x38) * x93);
  Val x197 = ((Val(1) - x39) * x94);
  Val x198 = ((Val(1) - x40) * x95);
  Val x199 = ((Val(1) - x41) * x96);
  Val x200 = ((Val(1) - x42) * x97);
  Val x201 = ((Val(1) - x43) * x98);
  Val x202 = ((Val(1) - x44) * x99);
  Val x203 = ((Val(1) - x45) * x100);
  Val x204 = ((Val(1) - x46) * x101);
  Val x205 = ((Val(1) - x47) * x102);
  Val x206 = ((Val(1) - x48) * x103);
  Val x207 = ((Val(1) - x49) * x104);
  Val x208 = ((Val(1) - x50) * x105);
  Val x209 = ((Val(1) - x51) * x106);
  Val x210 = ((Val(1) - x52) * x107);
  Val x211 = ((Val(1) - x53) * x108);
  Val x212 = ((Val(1) - x54) * x109);
  Val x213 = ((Val(1) - x55) * x110);
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:625)
  Val x214 =
      (((((x117 + x171) - ((x117 * Val(2)) * x171)) + (((x118 + x172) - (x139 * x172)) * Val(2))) +
        (((x119 + x173) - ((x119 * Val(2)) * x173)) * Val(4))) +
       (((x120 + x174) - ((x120 * Val(2)) * x174)) * Val(8)));
  Val x215 = (((x214 + (((x121 + x175) - ((x121 * Val(2)) * x175)) * Val(16))) +
               (((x122 + x176) - ((x122 * Val(2)) * x176)) * Val(32))) +
              (((x123 + x177) - ((x123 * Val(2)) * x177)) * Val(64)));
  Val x216 = (((x215 + (((x124 + x178) - ((x124 * Val(2)) * x178)) * Val(128))) +
               (((x125 + x179) - ((x125 * Val(2)) * x179)) * Val(256))) +
              (((x126 + x180) - ((x126 * Val(2)) * x180)) * Val(512)));
  Val x217 = (((x216 + (((x127 + x181) - ((x127 * Val(2)) * x181)) * Val(1024))) +
               (((x128 + x182) - ((x128 * Val(2)) * x182)) * Val(2048))) +
              (((x129 + x183) - ((x129 * Val(2)) * x183)) * Val(4096)));
  Val x218 = (((x217 + (((x130 + x184) - ((x130 * Val(2)) * x184)) * Val(8192))) +
               (((x131 + x185) - ((x131 * Val(2)) * x185)) * Val(16384))) +
              (((x132 + x186) - ((x132 * Val(2)) * x186)) * Val(32768)));
  Val x219 = (((x218 + (((x133 + x187) - ((x133 * Val(2)) * x187)) * Val(65536))) +
               (((x134 + x188) - ((x134 * Val(2)) * x188)) * Val(131072))) +
              (((x135 + x189) - ((x135 * Val(2)) * x189)) * Val(262144)));
  Val x220 = (((x219 + (((x136 + x190) - ((x136 * Val(2)) * x190)) * Val(524288))) +
               (((x137 + x191) - ((x137 * Val(2)) * x191)) * Val(1048576))) +
              (((x138 + x192) - ((x138 * Val(2)) * x192)) * Val(2097152)));
  NondetRegStruct x221 = exec_Reg(ctx, x220, LAYOUT_LOOKUP(layout1, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  Val x222 =
      (((((x146 + x193) - ((x146 * Val(2)) * x193)) + (((x147 + x194) - (x167 * x194)) * Val(2))) +
        (((x148 + x195) - ((x148 * Val(2)) * x195)) * Val(4))) +
       (((x149 + x196) - ((x149 * Val(2)) * x196)) * Val(8)));
  Val x223 = (((x222 + (((x150 + x197) - ((x150 * Val(2)) * x197)) * Val(16))) +
               (((x151 + x198) - ((x151 * Val(2)) * x198)) * Val(32))) +
              (((x152 + x199) - ((x152 * Val(2)) * x199)) * Val(64)));
  Val x224 = (((x223 + (((x153 + x200) - ((x153 * Val(2)) * x200)) * Val(128))) +
               (((x154 + x201) - ((x154 * Val(2)) * x201)) * Val(256))) +
              (((x155 + x202) - ((x155 * Val(2)) * x202)) * Val(512)));
  Val x225 = (((x224 + (((x156 + x203) - ((x156 * Val(2)) * x203)) * Val(1024))) +
               (((x157 + x204) - ((x157 * Val(2)) * x204)) * Val(2048))) +
              (((x158 + x205) - ((x158 * Val(2)) * x205)) * Val(4096)));
  Val x226 = (((x225 + (((x159 + x206) - ((x159 * Val(2)) * x206)) * Val(8192))) +
               (((x160 + x207) - ((x160 * Val(2)) * x207)) * Val(16384))) +
              (((x161 + x208) - ((x161 * Val(2)) * x208)) * Val(32768)));
  Val x227 = (((x226 + (((x162 + x209) - ((x162 * Val(2)) * x209)) * Val(65536))) +
               (((x163 + x210) - ((x163 * Val(2)) * x210)) * Val(131072))) +
              (((x164 + x211) - ((x164 * Val(2)) * x211)) * Val(262144)));
  NondetRegStruct x228 =
      exec_Reg(ctx,
               ((x227 + (((x165 + x212) - ((x165 * Val(2)) * x212)) * Val(524288))) +
                (((x166 + x213) - ((x166 * Val(2)) * x213)) * Val(1048576))),
               LAYOUT_LOOKUP(layout1, _1));
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:630)
  Val22Array x229 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x230 = exec_RetTuple(
      ctx,
      x229,
      x229,
      x229,
      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), x221._super, x228._super},
      x229,
      x229,
      Val(3),
      Val(11),
      arg0.rnd._super,
      arg0.blk._super,
      arg0.midx._super,
      LAYOUT_LOOKUP(layout1, _super));
  return x230;
}
RetTupleStruct execChiMinor0_2__1_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<ChiMinor0_2__1_Layout> layout1) {
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:542)
  NondetRegStruct22Array x2 = arg0.arrB;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:546)
  Val x3 = x2[2]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:554)
  ToBits_22_Struct x4 = exec_ToBits_22_(ctx, x3, LAYOUT_LOOKUP(layout1, unpack_0xp1));
  NondetRegStruct22Array x5 = x4._super;
  Val x6 = x5[0]._super;
  Val x7 = x5[1]._super;
  Val x8 = x5[2]._super;
  Val x9 = x5[3]._super;
  Val x10 = x5[4]._super;
  Val x11 = x5[5]._super;
  Val x12 = x5[6]._super;
  Val x13 = x5[7]._super;
  Val x14 = x5[8]._super;
  Val x15 = x5[9]._super;
  Val x16 = x5[10]._super;
  Val x17 = x5[11]._super;
  Val x18 = x5[12]._super;
  Val x19 = x5[13]._super;
  Val x20 = x5[14]._super;
  Val x21 = x5[15]._super;
  Val x22 = x5[16]._super;
  Val x23 = x5[17]._super;
  Val x24 = x5[18]._super;
  Val x25 = x5[19]._super;
  Val x26 = x5[20]._super;
  Val x27 = x5[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:555)
  Val x28 = ((((((x6 + (x7 * Val(2))) + (x8 * Val(4))) + (x9 * Val(8))) + (x10 * Val(16))) +
              (x11 * Val(32))) +
             (x12 * Val(64)));
  Val x29 =
      ((((((x28 + (x13 * Val(128))) + (x14 * Val(256))) + (x15 * Val(512))) + (x16 * Val(1024))) +
        (x17 * Val(2048))) +
       (x18 * Val(4096)));
  Val x30 = ((((((x29 + (x19 * Val(8192))) + (x20 * Val(16384))) + (x21 * Val(32768))) +
               (x22 * Val(65536))) +
              (x23 * Val(131072))) +
             (x24 * Val(262144)));
  EQZ(((((x30 + (x25 * Val(524288))) + (x26 * Val(1048576))) + (x27 * Val(2097152))) - x3),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:555)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:559)
  Val x31 = x2[3]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:567)
  ToBits_21_Struct x32 = exec_ToBits_21_(ctx, x31, LAYOUT_LOOKUP(layout1, unpack_1xp1));
  NondetRegStruct21Array x33 = x32._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:568)
  Val x55 = ((((((x34 + (x35 * Val(2))) + (x36 * Val(4))) + (x37 * Val(8))) + (x38 * Val(16))) +
              (x39 * Val(32))) +
             (x40 * Val(64)));
  Val x56 =
      ((((((x55 + (x41 * Val(128))) + (x42 * Val(256))) + (x43 * Val(512))) + (x44 * Val(1024))) +
        (x45 * Val(2048))) +
       (x46 * Val(4096)));
  Val x57 = ((((((x56 + (x47 * Val(8192))) + (x48 * Val(16384))) + (x49 * Val(32768))) +
               (x50 * Val(65536))) +
              (x51 * Val(131072))) +
             (x52 * Val(262144)));
  EQZ((((x57 + (x53 * Val(524288))) + (x54 * Val(1048576))) - x31),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:568)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:573)
  Val x58 = x2[5]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:581)
  ToBits_22_Struct x59 = exec_ToBits_22_(ctx, x58, LAYOUT_LOOKUP(layout1, unpack_0xp2));
  NondetRegStruct22Array x60 = x59._super;
  Val x61 = x60[0]._super;
  Val x62 = x60[1]._super;
  Val x63 = x60[2]._super;
  Val x64 = x60[3]._super;
  Val x65 = x60[4]._super;
  Val x66 = x60[5]._super;
  Val x67 = x60[6]._super;
  Val x68 = x60[7]._super;
  Val x69 = x60[8]._super;
  Val x70 = x60[9]._super;
  Val x71 = x60[10]._super;
  Val x72 = x60[11]._super;
  Val x73 = x60[12]._super;
  Val x74 = x60[13]._super;
  Val x75 = x60[14]._super;
  Val x76 = x60[15]._super;
  Val x77 = x60[16]._super;
  Val x78 = x60[17]._super;
  Val x79 = x60[18]._super;
  Val x80 = x60[19]._super;
  Val x81 = x60[20]._super;
  Val x82 = x60[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:582)
  Val x83 = ((((((x61 + (x62 * Val(2))) + (x63 * Val(4))) + (x64 * Val(8))) + (x65 * Val(16))) +
              (x66 * Val(32))) +
             (x67 * Val(64)));
  Val x84 =
      ((((((x83 + (x68 * Val(128))) + (x69 * Val(256))) + (x70 * Val(512))) + (x71 * Val(1024))) +
        (x72 * Val(2048))) +
       (x73 * Val(4096)));
  Val x85 = ((((((x84 + (x74 * Val(8192))) + (x75 * Val(16384))) + (x76 * Val(32768))) +
               (x77 * Val(65536))) +
              (x78 * Val(131072))) +
             (x79 * Val(262144)));
  EQZ(((((x85 + (x80 * Val(524288))) + (x81 * Val(1048576))) + (x82 * Val(2097152))) - x58),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:582)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:586)
  Val x86 = x2[6]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:594)
  ToBits_21_Struct x87 = exec_ToBits_21_(ctx, x86, LAYOUT_LOOKUP(layout1, unpack_1xp2));
  NondetRegStruct21Array x88 = x87._super;
  Val x89 = x88[0]._super;
  Val x90 = x88[1]._super;
  Val x91 = x88[2]._super;
  Val x92 = x88[3]._super;
  Val x93 = x88[4]._super;
  Val x94 = x88[5]._super;
  Val x95 = x88[6]._super;
  Val x96 = x88[7]._super;
  Val x97 = x88[8]._super;
  Val x98 = x88[9]._super;
  Val x99 = x88[10]._super;
  Val x100 = x88[11]._super;
  Val x101 = x88[12]._super;
  Val x102 = x88[13]._super;
  Val x103 = x88[14]._super;
  Val x104 = x88[15]._super;
  Val x105 = x88[16]._super;
  Val x106 = x88[17]._super;
  Val x107 = x88[18]._super;
  Val x108 = x88[19]._super;
  Val x109 = x88[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:595)
  Val x110 = ((((((x89 + (x90 * Val(2))) + (x91 * Val(4))) + (x92 * Val(8))) + (x93 * Val(16))) +
               (x94 * Val(32))) +
              (x95 * Val(64)));
  Val x111 =
      ((((((x110 + (x96 * Val(128))) + (x97 * Val(256))) + (x98 * Val(512))) + (x99 * Val(1024))) +
        (x100 * Val(2048))) +
       (x101 * Val(4096)));
  Val x112 = ((((((x111 + (x102 * Val(8192))) + (x103 * Val(16384))) + (x104 * Val(32768))) +
                (x105 * Val(65536))) +
               (x106 * Val(131072))) +
              (x107 * Val(262144)));
  EQZ((((x112 + (x108 * Val(524288))) + (x109 * Val(1048576))) - x86),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:595)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:599)
  Val x113 = arg0.arrA[21]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:607)
  ToBits_22_Struct x114 = exec_ToBits_22_(ctx, x113, LAYOUT_LOOKUP(layout1, unpack_0x));
  NondetRegStruct22Array x115 = x114._super;
  Val x116 = x115[0]._super;
  Val x117 = x115[1]._super;
  Val x118 = x115[2]._super;
  Val x119 = x115[3]._super;
  Val x120 = x115[4]._super;
  Val x121 = x115[5]._super;
  Val x122 = x115[6]._super;
  Val x123 = x115[7]._super;
  Val x124 = x115[8]._super;
  Val x125 = x115[9]._super;
  Val x126 = x115[10]._super;
  Val x127 = x115[11]._super;
  Val x128 = x115[12]._super;
  Val x129 = x115[13]._super;
  Val x130 = x115[14]._super;
  Val x131 = x115[15]._super;
  Val x132 = x115[16]._super;
  Val x133 = x115[17]._super;
  Val x134 = x115[18]._super;
  Val x135 = x115[19]._super;
  Val x136 = x115[20]._super;
  Val x137 = x115[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:608)
  Val x138 = (x117 * Val(2));
  Val x139 = ((((((x116 + x138) + (x118 * Val(4))) + (x119 * Val(8))) + (x120 * Val(16))) +
               (x121 * Val(32))) +
              (x122 * Val(64)));
  Val x140 = ((((((x139 + (x123 * Val(128))) + (x124 * Val(256))) + (x125 * Val(512))) +
                (x126 * Val(1024))) +
               (x127 * Val(2048))) +
              (x128 * Val(4096)));
  Val x141 = ((((((x140 + (x129 * Val(8192))) + (x130 * Val(16384))) + (x131 * Val(32768))) +
                (x132 * Val(65536))) +
               (x133 * Val(131072))) +
              (x134 * Val(262144)));
  EQZ(((((x141 + (x135 * Val(524288))) + (x136 * Val(1048576))) + (x137 * Val(2097152))) - x113),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:608)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:612)
  Val x142 = x2[0]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:620)
  ToBits_21_Struct x143 = exec_ToBits_21_(ctx, x142, LAYOUT_LOOKUP(layout1, unpack_1x));
  NondetRegStruct21Array x144 = x143._super;
  Val x145 = x144[0]._super;
  Val x146 = x144[1]._super;
  Val x147 = x144[2]._super;
  Val x148 = x144[3]._super;
  Val x149 = x144[4]._super;
  Val x150 = x144[5]._super;
  Val x151 = x144[6]._super;
  Val x152 = x144[7]._super;
  Val x153 = x144[8]._super;
  Val x154 = x144[9]._super;
  Val x155 = x144[10]._super;
  Val x156 = x144[11]._super;
  Val x157 = x144[12]._super;
  Val x158 = x144[13]._super;
  Val x159 = x144[14]._super;
  Val x160 = x144[15]._super;
  Val x161 = x144[16]._super;
  Val x162 = x144[17]._super;
  Val x163 = x144[18]._super;
  Val x164 = x144[19]._super;
  Val x165 = x144[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:621)
  Val x166 = (x146 * Val(2));
  Val x167 = ((((((x145 + x166) + (x147 * Val(4))) + (x148 * Val(8))) + (x149 * Val(16))) +
               (x150 * Val(32))) +
              (x151 * Val(64)));
  Val x168 = ((((((x167 + (x152 * Val(128))) + (x153 * Val(256))) + (x154 * Val(512))) +
                (x155 * Val(1024))) +
               (x156 * Val(2048))) +
              (x157 * Val(4096)));
  Val x169 = ((((((x168 + (x158 * Val(8192))) + (x159 * Val(16384))) + (x160 * Val(32768))) +
                (x161 * Val(65536))) +
               (x162 * Val(131072))) +
              (x163 * Val(262144)));
  EQZ((((x169 + (x164 * Val(524288))) + (x165 * Val(1048576))) - x142),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:621)");
  // andnxor(zirgen/circuit/keccak/keccak.zir:118)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:623)
  Val x170 = ((Val(1) - x6) * x61);
  Val x171 = ((Val(1) - x7) * x62);
  Val x172 = ((Val(1) - x8) * x63);
  Val x173 = ((Val(1) - x9) * x64);
  Val x174 = ((Val(1) - x10) * x65);
  Val x175 = ((Val(1) - x11) * x66);
  Val x176 = ((Val(1) - x12) * x67);
  Val x177 = ((Val(1) - x13) * x68);
  Val x178 = ((Val(1) - x14) * x69);
  Val x179 = ((Val(1) - x15) * x70);
  Val x180 = ((Val(1) - x16) * x71);
  Val x181 = ((Val(1) - x17) * x72);
  Val x182 = ((Val(1) - x18) * x73);
  Val x183 = ((Val(1) - x19) * x74);
  Val x184 = ((Val(1) - x20) * x75);
  Val x185 = ((Val(1) - x21) * x76);
  Val x186 = ((Val(1) - x22) * x77);
  Val x187 = ((Val(1) - x23) * x78);
  Val x188 = ((Val(1) - x24) * x79);
  Val x189 = ((Val(1) - x25) * x80);
  Val x190 = ((Val(1) - x26) * x81);
  Val x191 = ((Val(1) - x27) * x82);
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:624)
  Val x192 = ((Val(1) - x34) * x89);
  Val x193 = ((Val(1) - x35) * x90);
  Val x194 = ((Val(1) - x36) * x91);
  Val x195 = ((Val(1) - x37) * x92);
  Val x196 = ((Val(1) - x38) * x93);
  Val x197 = ((Val(1) - x39) * x94);
  Val x198 = ((Val(1) - x40) * x95);
  Val x199 = ((Val(1) - x41) * x96);
  Val x200 = ((Val(1) - x42) * x97);
  Val x201 = ((Val(1) - x43) * x98);
  Val x202 = ((Val(1) - x44) * x99);
  Val x203 = ((Val(1) - x45) * x100);
  Val x204 = ((Val(1) - x46) * x101);
  Val x205 = ((Val(1) - x47) * x102);
  Val x206 = ((Val(1) - x48) * x103);
  Val x207 = ((Val(1) - x49) * x104);
  Val x208 = ((Val(1) - x50) * x105);
  Val x209 = ((Val(1) - x51) * x106);
  Val x210 = ((Val(1) - x52) * x107);
  Val x211 = ((Val(1) - x53) * x108);
  Val x212 = ((Val(1) - x54) * x109);
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:625)
  Val x213 =
      (((((x116 + x170) - ((x116 * Val(2)) * x170)) + (((x117 + x171) - (x138 * x171)) * Val(2))) +
        (((x118 + x172) - ((x118 * Val(2)) * x172)) * Val(4))) +
       (((x119 + x173) - ((x119 * Val(2)) * x173)) * Val(8)));
  Val x214 = (((x213 + (((x120 + x174) - ((x120 * Val(2)) * x174)) * Val(16))) +
               (((x121 + x175) - ((x121 * Val(2)) * x175)) * Val(32))) +
              (((x122 + x176) - ((x122 * Val(2)) * x176)) * Val(64)));
  Val x215 = (((x214 + (((x123 + x177) - ((x123 * Val(2)) * x177)) * Val(128))) +
               (((x124 + x178) - ((x124 * Val(2)) * x178)) * Val(256))) +
              (((x125 + x179) - ((x125 * Val(2)) * x179)) * Val(512)));
  Val x216 = (((x215 + (((x126 + x180) - ((x126 * Val(2)) * x180)) * Val(1024))) +
               (((x127 + x181) - ((x127 * Val(2)) * x181)) * Val(2048))) +
              (((x128 + x182) - ((x128 * Val(2)) * x182)) * Val(4096)));
  Val x217 = (((x216 + (((x129 + x183) - ((x129 * Val(2)) * x183)) * Val(8192))) +
               (((x130 + x184) - ((x130 * Val(2)) * x184)) * Val(16384))) +
              (((x131 + x185) - ((x131 * Val(2)) * x185)) * Val(32768)));
  Val x218 = (((x217 + (((x132 + x186) - ((x132 * Val(2)) * x186)) * Val(65536))) +
               (((x133 + x187) - ((x133 * Val(2)) * x187)) * Val(131072))) +
              (((x134 + x188) - ((x134 * Val(2)) * x188)) * Val(262144)));
  Val x219 = (((x218 + (((x135 + x189) - ((x135 * Val(2)) * x189)) * Val(524288))) +
               (((x136 + x190) - ((x136 * Val(2)) * x190)) * Val(1048576))) +
              (((x137 + x191) - ((x137 * Val(2)) * x191)) * Val(2097152)));
  NondetRegStruct x220 = exec_Reg(ctx, x219, LAYOUT_LOOKUP(layout1, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  Val x221 =
      (((((x145 + x192) - ((x145 * Val(2)) * x192)) + (((x146 + x193) - (x166 * x193)) * Val(2))) +
        (((x147 + x194) - ((x147 * Val(2)) * x194)) * Val(4))) +
       (((x148 + x195) - ((x148 * Val(2)) * x195)) * Val(8)));
  Val x222 = (((x221 + (((x149 + x196) - ((x149 * Val(2)) * x196)) * Val(16))) +
               (((x150 + x197) - ((x150 * Val(2)) * x197)) * Val(32))) +
              (((x151 + x198) - ((x151 * Val(2)) * x198)) * Val(64)));
  Val x223 = (((x222 + (((x152 + x199) - ((x152 * Val(2)) * x199)) * Val(128))) +
               (((x153 + x200) - ((x153 * Val(2)) * x200)) * Val(256))) +
              (((x154 + x201) - ((x154 * Val(2)) * x201)) * Val(512)));
  Val x224 = (((x223 + (((x155 + x202) - ((x155 * Val(2)) * x202)) * Val(1024))) +
               (((x156 + x203) - ((x156 * Val(2)) * x203)) * Val(2048))) +
              (((x157 + x204) - ((x157 * Val(2)) * x204)) * Val(4096)));
  Val x225 = (((x224 + (((x158 + x205) - ((x158 * Val(2)) * x205)) * Val(8192))) +
               (((x159 + x206) - ((x159 * Val(2)) * x206)) * Val(16384))) +
              (((x160 + x207) - ((x160 * Val(2)) * x207)) * Val(32768)));
  Val x226 = (((x225 + (((x161 + x208) - ((x161 * Val(2)) * x208)) * Val(65536))) +
               (((x162 + x209) - ((x162 * Val(2)) * x209)) * Val(131072))) +
              (((x163 + x210) - ((x163 * Val(2)) * x210)) * Val(262144)));
  NondetRegStruct x227 =
      exec_Reg(ctx,
               ((x226 + (((x164 + x211) - ((x164 * Val(2)) * x211)) * Val(524288))) +
                (((x165 + x212) - ((x165 * Val(2)) * x212)) * Val(1048576))),
               LAYOUT_LOOKUP(layout1, _1));
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:630)
  Val22Array x228 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x229 = exec_RetTuple(
      ctx,
      x228,
      x228,
      x228,
      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), x220._super, x227._super},
      x228,
      x228,
      Val(4),
      Val(11),
      arg0.rnd._super,
      arg0.blk._super,
      arg0.midx._super,
      LAYOUT_LOOKUP(layout1, _super));
  return x229;
}
RetTupleStruct execChiMinor1_2__1_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<ChiMinor1_2__1_Layout> layout2) {
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:685)
  BoundLayout<ChiMinor1_2__1__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:635)
  RetTupleStruct x4 = back_RetTuple(ctx, 5, arg1);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:636)
  RetTupleStruct x5 = back_RetTuple(ctx, 1, arg1);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:635)
  NondetRegStruct22Array x6 = x4.arrB;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:640)
  Val x7 = x6[1]._super;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:648)
  ToBits_21_Struct x8 = exec_ToBits_21_(ctx, x7, LAYOUT_LOOKUP(layout2, unpack_2x));
  NondetRegStruct21Array x9 = x8._super;
  Val x10 = x9[0]._super;
  Val x11 = x9[1]._super;
  Val x12 = x9[2]._super;
  Val x13 = x9[3]._super;
  Val x14 = x9[4]._super;
  Val x15 = x9[5]._super;
  Val x16 = x9[6]._super;
  Val x17 = x9[7]._super;
  Val x18 = x9[8]._super;
  Val x19 = x9[9]._super;
  Val x20 = x9[10]._super;
  Val x21 = x9[11]._super;
  Val x22 = x9[12]._super;
  Val x23 = x9[13]._super;
  Val x24 = x9[14]._super;
  Val x25 = x9[15]._super;
  Val x26 = x9[16]._super;
  Val x27 = x9[17]._super;
  Val x28 = x9[18]._super;
  Val x29 = x9[19]._super;
  Val x30 = x9[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:649)
  Val x31 = (x11 * Val(2));
  Val x32 =
      ((((((x10 + x31) + (x12 * Val(4))) + (x13 * Val(8))) + (x14 * Val(16))) + (x15 * Val(32))) +
       (x16 * Val(64)));
  Val x33 =
      ((((((x32 + (x17 * Val(128))) + (x18 * Val(256))) + (x19 * Val(512))) + (x20 * Val(1024))) +
        (x21 * Val(2048))) +
       (x22 * Val(4096)));
  Val x34 = ((((((x33 + (x23 * Val(8192))) + (x24 * Val(16384))) + (x25 * Val(32768))) +
               (x26 * Val(65536))) +
              (x27 * Val(131072))) +
             (x28 * Val(262144)));
  EQZ((((x34 + (x29 * Val(524288))) + (x30 * Val(1048576))) - x7),
      "chi_minor1(zirgen/circuit/keccak/keccak.zir:649)");
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:654)
  Val x35 = x6[4]._super;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:662)
  ToBits_21_Struct x36 = exec_ToBits_21_(ctx, x35, LAYOUT_LOOKUP(layout2, unpack_2xp1));
  NondetRegStruct21Array x37 = x36._super;
  Val x38 = x37[0]._super;
  Val x39 = x37[1]._super;
  Val x40 = x37[2]._super;
  Val x41 = x37[3]._super;
  Val x42 = x37[4]._super;
  Val x43 = x37[5]._super;
  Val x44 = x37[6]._super;
  Val x45 = x37[7]._super;
  Val x46 = x37[8]._super;
  Val x47 = x37[9]._super;
  Val x48 = x37[10]._super;
  Val x49 = x37[11]._super;
  Val x50 = x37[12]._super;
  Val x51 = x37[13]._super;
  Val x52 = x37[14]._super;
  Val x53 = x37[15]._super;
  Val x54 = x37[16]._super;
  Val x55 = x37[17]._super;
  Val x56 = x37[18]._super;
  Val x57 = x37[19]._super;
  Val x58 = x37[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:663)
  Val x59 = ((((((x38 + (x39 * Val(2))) + (x40 * Val(4))) + (x41 * Val(8))) + (x42 * Val(16))) +
              (x43 * Val(32))) +
             (x44 * Val(64)));
  Val x60 =
      ((((((x59 + (x45 * Val(128))) + (x46 * Val(256))) + (x47 * Val(512))) + (x48 * Val(1024))) +
        (x49 * Val(2048))) +
       (x50 * Val(4096)));
  Val x61 = ((((((x60 + (x51 * Val(8192))) + (x52 * Val(16384))) + (x53 * Val(32768))) +
               (x54 * Val(65536))) +
              (x55 * Val(131072))) +
             (x56 * Val(262144)));
  EQZ((((x61 + (x57 * Val(524288))) + (x58 * Val(1048576))) - x35),
      "chi_minor1(zirgen/circuit/keccak/keccak.zir:663)");
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:667)
  Val x62 = x6[7]._super;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:675)
  ToBits_21_Struct x63 = exec_ToBits_21_(ctx, x62, LAYOUT_LOOKUP(layout2, unpack_2xp2));
  NondetRegStruct21Array x64 = x63._super;
  Val x65 = x64[0]._super;
  Val x66 = x64[1]._super;
  Val x67 = x64[2]._super;
  Val x68 = x64[3]._super;
  Val x69 = x64[4]._super;
  Val x70 = x64[5]._super;
  Val x71 = x64[6]._super;
  Val x72 = x64[7]._super;
  Val x73 = x64[8]._super;
  Val x74 = x64[9]._super;
  Val x75 = x64[10]._super;
  Val x76 = x64[11]._super;
  Val x77 = x64[12]._super;
  Val x78 = x64[13]._super;
  Val x79 = x64[14]._super;
  Val x80 = x64[15]._super;
  Val x81 = x64[16]._super;
  Val x82 = x64[17]._super;
  Val x83 = x64[18]._super;
  Val x84 = x64[19]._super;
  Val x85 = x64[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:676)
  Val x86 = ((((((x65 + (x66 * Val(2))) + (x67 * Val(4))) + (x68 * Val(8))) + (x69 * Val(16))) +
              (x70 * Val(32))) +
             (x71 * Val(64)));
  Val x87 =
      ((((((x86 + (x72 * Val(128))) + (x73 * Val(256))) + (x74 * Val(512))) + (x75 * Val(1024))) +
        (x76 * Val(2048))) +
       (x77 * Val(4096)));
  Val x88 = ((((((x87 + (x78 * Val(8192))) + (x79 * Val(16384))) + (x80 * Val(32768))) +
               (x81 * Val(65536))) +
              (x82 * Val(131072))) +
             (x83 * Val(262144)));
  EQZ((((x88 + (x84 * Val(524288))) + (x85 * Val(1048576))) - x62),
      "chi_minor1(zirgen/circuit/keccak/keccak.zir:676)");
  // andnxor(zirgen/circuit/keccak/keccak.zir:118)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:678)
  Val x89 = ((Val(1) - x38) * x65);
  Val x90 = ((Val(1) - x39) * x66);
  Val x91 = ((Val(1) - x40) * x67);
  Val x92 = ((Val(1) - x41) * x68);
  Val x93 = ((Val(1) - x42) * x69);
  Val x94 = ((Val(1) - x43) * x70);
  Val x95 = ((Val(1) - x44) * x71);
  Val x96 = ((Val(1) - x45) * x72);
  Val x97 = ((Val(1) - x46) * x73);
  Val x98 = ((Val(1) - x47) * x74);
  Val x99 = ((Val(1) - x48) * x75);
  Val x100 = ((Val(1) - x49) * x76);
  Val x101 = ((Val(1) - x50) * x77);
  Val x102 = ((Val(1) - x51) * x78);
  Val x103 = ((Val(1) - x52) * x79);
  Val x104 = ((Val(1) - x53) * x80);
  Val x105 = ((Val(1) - x54) * x81);
  Val x106 = ((Val(1) - x55) * x82);
  Val x107 = ((Val(1) - x56) * x83);
  Val x108 = ((Val(1) - x57) * x84);
  Val x109 = ((Val(1) - x58) * x85);
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:679)
  Val x110 = (((((x10 + x89) - ((x10 * Val(2)) * x89)) + (((x11 + x90) - (x31 * x90)) * Val(2))) +
               (((x12 + x91) - ((x12 * Val(2)) * x91)) * Val(4))) +
              (((x13 + x92) - ((x13 * Val(2)) * x92)) * Val(8)));
  Val x111 = (((x110 + (((x14 + x93) - ((x14 * Val(2)) * x93)) * Val(16))) +
               (((x15 + x94) - ((x15 * Val(2)) * x94)) * Val(32))) +
              (((x16 + x95) - ((x16 * Val(2)) * x95)) * Val(64)));
  Val x112 = (((x111 + (((x17 + x96) - ((x17 * Val(2)) * x96)) * Val(128))) +
               (((x18 + x97) - ((x18 * Val(2)) * x97)) * Val(256))) +
              (((x19 + x98) - ((x19 * Val(2)) * x98)) * Val(512)));
  Val x113 = (((x112 + (((x20 + x99) - ((x20 * Val(2)) * x99)) * Val(1024))) +
               (((x21 + x100) - ((x21 * Val(2)) * x100)) * Val(2048))) +
              (((x22 + x101) - ((x22 * Val(2)) * x101)) * Val(4096)));
  Val x114 = (((x113 + (((x23 + x102) - ((x23 * Val(2)) * x102)) * Val(8192))) +
               (((x24 + x103) - ((x24 * Val(2)) * x103)) * Val(16384))) +
              (((x25 + x104) - ((x25 * Val(2)) * x104)) * Val(32768)));
  Val x115 = (((x114 + (((x26 + x105) - ((x26 * Val(2)) * x105)) * Val(65536))) +
               (((x27 + x106) - ((x27 * Val(2)) * x106)) * Val(131072))) +
              (((x28 + x107) - ((x28 * Val(2)) * x107)) * Val(262144)));
  NondetRegStruct x116 =
      exec_Reg(ctx,
               ((x115 + (((x29 + x108) - ((x29 * Val(2)) * x108)) * Val(524288))) +
                (((x30 + x109) - ((x30 * Val(2)) * x109)) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, res3));
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:636)
  NondetRegStruct24Array x117 = x5.arrD;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:685)
  BoundLayout<ChiMinor1_2__1_Arm1_SuperLayout> x118 = LAYOUT_LOOKUP(x3, arm1);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:680)
  Val22Array x119 =
      Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), x117[22]._super};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:681)
  Val22Array x120 =
      Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), x117[23]._super};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:682)
  Val22Array x121 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), x116._super};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:686)
  Val24Array x122 = Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  Val22Array x123 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:636)
  Val x124 = x5.rnd._super;
  Val x125 = x5.blk._super;
  Val x126 = x5.midx._super;
  if (to_size_t(Val(0))) {
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:686)
    RetTupleStruct x127 = exec_RetTuple(ctx,
                                        x119,
                                        x120,
                                        x121,
                                        x122,
                                        x123,
                                        x123,
                                        Val(5),
                                        Val(11),
                                        x124,
                                        x125,
                                        x126,
                                        LAYOUT_LOOKUP(x3, arm0));
  }
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:718)
  Val x128 = x4.arrA[17]._super;
  if (to_size_t(Val(1))) {
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:699)
    ToBits_21_Struct x129 = exec_ToBits_21_(ctx, x35, LAYOUT_LOOKUP(x118, unpack_2nx));
    NondetRegStruct21Array x130 = x129._super;
    Val x131 = x130[0]._super;
    Val x132 = x130[1]._super;
    Val x133 = x130[2]._super;
    Val x134 = x130[3]._super;
    Val x135 = x130[4]._super;
    Val x136 = x130[5]._super;
    Val x137 = x130[6]._super;
    Val x138 = x130[7]._super;
    Val x139 = x130[8]._super;
    Val x140 = x130[9]._super;
    Val x141 = x130[10]._super;
    Val x142 = x130[11]._super;
    Val x143 = x130[12]._super;
    Val x144 = x130[13]._super;
    Val x145 = x130[14]._super;
    Val x146 = x130[15]._super;
    Val x147 = x130[16]._super;
    Val x148 = x130[17]._super;
    Val x149 = x130[18]._super;
    Val x150 = x130[19]._super;
    Val x151 = x130[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:700)
    Val x152 = (x132 * Val(2));
    Val x153 = ((((((x131 + x152) + (x133 * Val(4))) + (x134 * Val(8))) + (x135 * Val(16))) +
                 (x136 * Val(32))) +
                (x137 * Val(64)));
    Val x154 = ((((((x153 + (x138 * Val(128))) + (x139 * Val(256))) + (x140 * Val(512))) +
                  (x141 * Val(1024))) +
                 (x142 * Val(2048))) +
                (x143 * Val(4096)));
    Val x155 = ((((((x154 + (x144 * Val(8192))) + (x145 * Val(16384))) + (x146 * Val(32768))) +
                  (x147 * Val(65536))) +
                 (x148 * Val(131072))) +
                (x149 * Val(262144)));
    EQZ((((x155 + (x150 * Val(524288))) + (x151 * Val(1048576))) - x35),
        "chi_minor1(zirgen/circuit/keccak/keccak.zir:700)");
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:713)
    ToBits_21_Struct x156 = exec_ToBits_21_(ctx, x62, LAYOUT_LOOKUP(x118, unpack_2nxp1));
    NondetRegStruct21Array x157 = x156._super;
    Val x158 = x157[0]._super;
    Val x159 = x157[1]._super;
    Val x160 = x157[2]._super;
    Val x161 = x157[3]._super;
    Val x162 = x157[4]._super;
    Val x163 = x157[5]._super;
    Val x164 = x157[6]._super;
    Val x165 = x157[7]._super;
    Val x166 = x157[8]._super;
    Val x167 = x157[9]._super;
    Val x168 = x157[10]._super;
    Val x169 = x157[11]._super;
    Val x170 = x157[12]._super;
    Val x171 = x157[13]._super;
    Val x172 = x157[14]._super;
    Val x173 = x157[15]._super;
    Val x174 = x157[16]._super;
    Val x175 = x157[17]._super;
    Val x176 = x157[18]._super;
    Val x177 = x157[19]._super;
    Val x178 = x157[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:714)
    Val x179 =
        ((((((x158 + (x159 * Val(2))) + (x160 * Val(4))) + (x161 * Val(8))) + (x162 * Val(16))) +
          (x163 * Val(32))) +
         (x164 * Val(64)));
    Val x180 = ((((((x179 + (x165 * Val(128))) + (x166 * Val(256))) + (x167 * Val(512))) +
                  (x168 * Val(1024))) +
                 (x169 * Val(2048))) +
                (x170 * Val(4096)));
    Val x181 = ((((((x180 + (x171 * Val(8192))) + (x172 * Val(16384))) + (x173 * Val(32768))) +
                  (x174 * Val(65536))) +
                 (x175 * Val(131072))) +
                (x176 * Val(262144)));
    EQZ((((x181 + (x177 * Val(524288))) + (x178 * Val(1048576))) - x62),
        "chi_minor1(zirgen/circuit/keccak/keccak.zir:714)");
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:726)
    ToBits_21_Struct x182 = exec_ToBits_21_(ctx, x128, LAYOUT_LOOKUP(x118, unpack_2nxp2));
    NondetRegStruct21Array x183 = x182._super;
    Val x184 = x183[0]._super;
    Val x185 = x183[1]._super;
    Val x186 = x183[2]._super;
    Val x187 = x183[3]._super;
    Val x188 = x183[4]._super;
    Val x189 = x183[5]._super;
    Val x190 = x183[6]._super;
    Val x191 = x183[7]._super;
    Val x192 = x183[8]._super;
    Val x193 = x183[9]._super;
    Val x194 = x183[10]._super;
    Val x195 = x183[11]._super;
    Val x196 = x183[12]._super;
    Val x197 = x183[13]._super;
    Val x198 = x183[14]._super;
    Val x199 = x183[15]._super;
    Val x200 = x183[16]._super;
    Val x201 = x183[17]._super;
    Val x202 = x183[18]._super;
    Val x203 = x183[19]._super;
    Val x204 = x183[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:727)
    Val x205 =
        ((((((x184 + (x185 * Val(2))) + (x186 * Val(4))) + (x187 * Val(8))) + (x188 * Val(16))) +
          (x189 * Val(32))) +
         (x190 * Val(64)));
    Val x206 = ((((((x205 + (x191 * Val(128))) + (x192 * Val(256))) + (x193 * Val(512))) +
                  (x194 * Val(1024))) +
                 (x195 * Val(2048))) +
                (x196 * Val(4096)));
    Val x207 = ((((((x206 + (x197 * Val(8192))) + (x198 * Val(16384))) + (x199 * Val(32768))) +
                  (x200 * Val(65536))) +
                 (x201 * Val(131072))) +
                (x202 * Val(262144)));
    EQZ((((x207 + (x203 * Val(524288))) + (x204 * Val(1048576))) - x128),
        "chi_minor1(zirgen/circuit/keccak/keccak.zir:727)");
    // andnxor(zirgen/circuit/keccak/keccak.zir:118)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:729)
    Val x208 = ((Val(1) - x158) * x184);
    Val x209 = ((Val(1) - x159) * x185);
    Val x210 = ((Val(1) - x160) * x186);
    Val x211 = ((Val(1) - x161) * x187);
    Val x212 = ((Val(1) - x162) * x188);
    Val x213 = ((Val(1) - x163) * x189);
    Val x214 = ((Val(1) - x164) * x190);
    Val x215 = ((Val(1) - x165) * x191);
    Val x216 = ((Val(1) - x166) * x192);
    Val x217 = ((Val(1) - x167) * x193);
    Val x218 = ((Val(1) - x168) * x194);
    Val x219 = ((Val(1) - x169) * x195);
    Val x220 = ((Val(1) - x170) * x196);
    Val x221 = ((Val(1) - x171) * x197);
    Val x222 = ((Val(1) - x172) * x198);
    Val x223 = ((Val(1) - x173) * x199);
    Val x224 = ((Val(1) - x174) * x200);
    Val x225 = ((Val(1) - x175) * x201);
    Val x226 = ((Val(1) - x176) * x202);
    Val x227 = ((Val(1) - x177) * x203);
    Val x228 = ((Val(1) - x178) * x204);
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:730)
    Val x229 = (((((x131 + x208) - ((x131 * Val(2)) * x208)) +
                  (((x132 + x209) - (x152 * x209)) * Val(2))) +
                 (((x133 + x210) - ((x133 * Val(2)) * x210)) * Val(4))) +
                (((x134 + x211) - ((x134 * Val(2)) * x211)) * Val(8)));
    Val x230 = (((x229 + (((x135 + x212) - ((x135 * Val(2)) * x212)) * Val(16))) +
                 (((x136 + x213) - ((x136 * Val(2)) * x213)) * Val(32))) +
                (((x137 + x214) - ((x137 * Val(2)) * x214)) * Val(64)));
    Val x231 = (((x230 + (((x138 + x215) - ((x138 * Val(2)) * x215)) * Val(128))) +
                 (((x139 + x216) - ((x139 * Val(2)) * x216)) * Val(256))) +
                (((x140 + x217) - ((x140 * Val(2)) * x217)) * Val(512)));
    Val x232 = (((x231 + (((x141 + x218) - ((x141 * Val(2)) * x218)) * Val(1024))) +
                 (((x142 + x219) - ((x142 * Val(2)) * x219)) * Val(2048))) +
                (((x143 + x220) - ((x143 * Val(2)) * x220)) * Val(4096)));
    Val x233 = (((x232 + (((x144 + x221) - ((x144 * Val(2)) * x221)) * Val(8192))) +
                 (((x145 + x222) - ((x145 * Val(2)) * x222)) * Val(16384))) +
                (((x146 + x223) - ((x146 * Val(2)) * x223)) * Val(32768)));
    Val x234 = (((x233 + (((x147 + x224) - ((x147 * Val(2)) * x224)) * Val(65536))) +
                 (((x148 + x225) - ((x148 * Val(2)) * x225)) * Val(131072))) +
                (((x149 + x226) - ((x149 * Val(2)) * x226)) * Val(262144)));
    NondetRegStruct x235 =
        exec_Reg(ctx,
                 ((x234 + (((x150 + x227) - ((x150 * Val(2)) * x227)) * Val(524288))) +
                  (((x151 + x228) - ((x151 * Val(2)) * x228)) * Val(1048576))),
                 LAYOUT_LOOKUP(x118, res3n));
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:733)
    RetTupleStruct x236 =
        exec_RetTuple(ctx,
                      x119,
                      x120,
                      x121,
                      x122,
                      x123,
                      Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), x235._super},
                      Val(5),
                      Val(11),
                      x124,
                      x125,
                      x126,
                      LAYOUT_LOOKUP(x118, _super));
  }
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:685)
  RetTupleStruct x237 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x237;
}
RetTupleStruct execChiMinor0_3__1_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<ChiMinor0_3__1_Layout> layout1) {
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:542)
  NondetRegStruct22Array x2 = arg0.arrB;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:546)
  Val x3 = x2[5]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:554)
  ToBits_22_Struct x4 = exec_ToBits_22_(ctx, x3, LAYOUT_LOOKUP(layout1, unpack_0xp1));
  NondetRegStruct22Array x5 = x4._super;
  Val x6 = x5[0]._super;
  Val x7 = x5[1]._super;
  Val x8 = x5[2]._super;
  Val x9 = x5[3]._super;
  Val x10 = x5[4]._super;
  Val x11 = x5[5]._super;
  Val x12 = x5[6]._super;
  Val x13 = x5[7]._super;
  Val x14 = x5[8]._super;
  Val x15 = x5[9]._super;
  Val x16 = x5[10]._super;
  Val x17 = x5[11]._super;
  Val x18 = x5[12]._super;
  Val x19 = x5[13]._super;
  Val x20 = x5[14]._super;
  Val x21 = x5[15]._super;
  Val x22 = x5[16]._super;
  Val x23 = x5[17]._super;
  Val x24 = x5[18]._super;
  Val x25 = x5[19]._super;
  Val x26 = x5[20]._super;
  Val x27 = x5[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:555)
  Val x28 = ((((((x6 + (x7 * Val(2))) + (x8 * Val(4))) + (x9 * Val(8))) + (x10 * Val(16))) +
              (x11 * Val(32))) +
             (x12 * Val(64)));
  Val x29 =
      ((((((x28 + (x13 * Val(128))) + (x14 * Val(256))) + (x15 * Val(512))) + (x16 * Val(1024))) +
        (x17 * Val(2048))) +
       (x18 * Val(4096)));
  Val x30 = ((((((x29 + (x19 * Val(8192))) + (x20 * Val(16384))) + (x21 * Val(32768))) +
               (x22 * Val(65536))) +
              (x23 * Val(131072))) +
             (x24 * Val(262144)));
  EQZ(((((x30 + (x25 * Val(524288))) + (x26 * Val(1048576))) + (x27 * Val(2097152))) - x3),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:555)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:559)
  Val x31 = x2[6]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:567)
  ToBits_21_Struct x32 = exec_ToBits_21_(ctx, x31, LAYOUT_LOOKUP(layout1, unpack_1xp1));
  NondetRegStruct21Array x33 = x32._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:568)
  Val x55 = ((((((x34 + (x35 * Val(2))) + (x36 * Val(4))) + (x37 * Val(8))) + (x38 * Val(16))) +
              (x39 * Val(32))) +
             (x40 * Val(64)));
  Val x56 =
      ((((((x55 + (x41 * Val(128))) + (x42 * Val(256))) + (x43 * Val(512))) + (x44 * Val(1024))) +
        (x45 * Val(2048))) +
       (x46 * Val(4096)));
  Val x57 = ((((((x56 + (x47 * Val(8192))) + (x48 * Val(16384))) + (x49 * Val(32768))) +
               (x50 * Val(65536))) +
              (x51 * Val(131072))) +
             (x52 * Val(262144)));
  EQZ((((x57 + (x53 * Val(524288))) + (x54 * Val(1048576))) - x31),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:568)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:542)
  NondetRegStruct22Array x58 = arg0.arrA;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:573)
  Val x59 = x58[15]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:581)
  ToBits_22_Struct x60 = exec_ToBits_22_(ctx, x59, LAYOUT_LOOKUP(layout1, unpack_0xp2));
  NondetRegStruct22Array x61 = x60._super;
  Val x62 = x61[0]._super;
  Val x63 = x61[1]._super;
  Val x64 = x61[2]._super;
  Val x65 = x61[3]._super;
  Val x66 = x61[4]._super;
  Val x67 = x61[5]._super;
  Val x68 = x61[6]._super;
  Val x69 = x61[7]._super;
  Val x70 = x61[8]._super;
  Val x71 = x61[9]._super;
  Val x72 = x61[10]._super;
  Val x73 = x61[11]._super;
  Val x74 = x61[12]._super;
  Val x75 = x61[13]._super;
  Val x76 = x61[14]._super;
  Val x77 = x61[15]._super;
  Val x78 = x61[16]._super;
  Val x79 = x61[17]._super;
  Val x80 = x61[18]._super;
  Val x81 = x61[19]._super;
  Val x82 = x61[20]._super;
  Val x83 = x61[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:582)
  Val x84 = ((((((x62 + (x63 * Val(2))) + (x64 * Val(4))) + (x65 * Val(8))) + (x66 * Val(16))) +
              (x67 * Val(32))) +
             (x68 * Val(64)));
  Val x85 =
      ((((((x84 + (x69 * Val(128))) + (x70 * Val(256))) + (x71 * Val(512))) + (x72 * Val(1024))) +
        (x73 * Val(2048))) +
       (x74 * Val(4096)));
  Val x86 = ((((((x85 + (x75 * Val(8192))) + (x76 * Val(16384))) + (x77 * Val(32768))) +
               (x78 * Val(65536))) +
              (x79 * Val(131072))) +
             (x80 * Val(262144)));
  EQZ(((((x86 + (x81 * Val(524288))) + (x82 * Val(1048576))) + (x83 * Val(2097152))) - x59),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:582)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:586)
  Val x87 = x58[16]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:594)
  ToBits_21_Struct x88 = exec_ToBits_21_(ctx, x87, LAYOUT_LOOKUP(layout1, unpack_1xp2));
  NondetRegStruct21Array x89 = x88._super;
  Val x90 = x89[0]._super;
  Val x91 = x89[1]._super;
  Val x92 = x89[2]._super;
  Val x93 = x89[3]._super;
  Val x94 = x89[4]._super;
  Val x95 = x89[5]._super;
  Val x96 = x89[6]._super;
  Val x97 = x89[7]._super;
  Val x98 = x89[8]._super;
  Val x99 = x89[9]._super;
  Val x100 = x89[10]._super;
  Val x101 = x89[11]._super;
  Val x102 = x89[12]._super;
  Val x103 = x89[13]._super;
  Val x104 = x89[14]._super;
  Val x105 = x89[15]._super;
  Val x106 = x89[16]._super;
  Val x107 = x89[17]._super;
  Val x108 = x89[18]._super;
  Val x109 = x89[19]._super;
  Val x110 = x89[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:595)
  Val x111 = ((((((x90 + (x91 * Val(2))) + (x92 * Val(4))) + (x93 * Val(8))) + (x94 * Val(16))) +
               (x95 * Val(32))) +
              (x96 * Val(64)));
  Val x112 =
      ((((((x111 + (x97 * Val(128))) + (x98 * Val(256))) + (x99 * Val(512))) + (x100 * Val(1024))) +
        (x101 * Val(2048))) +
       (x102 * Val(4096)));
  Val x113 = ((((((x112 + (x103 * Val(8192))) + (x104 * Val(16384))) + (x105 * Val(32768))) +
                (x106 * Val(65536))) +
               (x107 * Val(131072))) +
              (x108 * Val(262144)));
  EQZ((((x113 + (x109 * Val(524288))) + (x110 * Val(1048576))) - x87),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:595)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:599)
  Val x114 = x2[2]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:607)
  ToBits_22_Struct x115 = exec_ToBits_22_(ctx, x114, LAYOUT_LOOKUP(layout1, unpack_0x));
  NondetRegStruct22Array x116 = x115._super;
  Val x117 = x116[0]._super;
  Val x118 = x116[1]._super;
  Val x119 = x116[2]._super;
  Val x120 = x116[3]._super;
  Val x121 = x116[4]._super;
  Val x122 = x116[5]._super;
  Val x123 = x116[6]._super;
  Val x124 = x116[7]._super;
  Val x125 = x116[8]._super;
  Val x126 = x116[9]._super;
  Val x127 = x116[10]._super;
  Val x128 = x116[11]._super;
  Val x129 = x116[12]._super;
  Val x130 = x116[13]._super;
  Val x131 = x116[14]._super;
  Val x132 = x116[15]._super;
  Val x133 = x116[16]._super;
  Val x134 = x116[17]._super;
  Val x135 = x116[18]._super;
  Val x136 = x116[19]._super;
  Val x137 = x116[20]._super;
  Val x138 = x116[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:608)
  Val x139 = (x118 * Val(2));
  Val x140 = ((((((x117 + x139) + (x119 * Val(4))) + (x120 * Val(8))) + (x121 * Val(16))) +
               (x122 * Val(32))) +
              (x123 * Val(64)));
  Val x141 = ((((((x140 + (x124 * Val(128))) + (x125 * Val(256))) + (x126 * Val(512))) +
                (x127 * Val(1024))) +
               (x128 * Val(2048))) +
              (x129 * Val(4096)));
  Val x142 = ((((((x141 + (x130 * Val(8192))) + (x131 * Val(16384))) + (x132 * Val(32768))) +
                (x133 * Val(65536))) +
               (x134 * Val(131072))) +
              (x135 * Val(262144)));
  EQZ(((((x142 + (x136 * Val(524288))) + (x137 * Val(1048576))) + (x138 * Val(2097152))) - x114),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:608)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:612)
  Val x143 = x2[3]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:620)
  ToBits_21_Struct x144 = exec_ToBits_21_(ctx, x143, LAYOUT_LOOKUP(layout1, unpack_1x));
  NondetRegStruct21Array x145 = x144._super;
  Val x146 = x145[0]._super;
  Val x147 = x145[1]._super;
  Val x148 = x145[2]._super;
  Val x149 = x145[3]._super;
  Val x150 = x145[4]._super;
  Val x151 = x145[5]._super;
  Val x152 = x145[6]._super;
  Val x153 = x145[7]._super;
  Val x154 = x145[8]._super;
  Val x155 = x145[9]._super;
  Val x156 = x145[10]._super;
  Val x157 = x145[11]._super;
  Val x158 = x145[12]._super;
  Val x159 = x145[13]._super;
  Val x160 = x145[14]._super;
  Val x161 = x145[15]._super;
  Val x162 = x145[16]._super;
  Val x163 = x145[17]._super;
  Val x164 = x145[18]._super;
  Val x165 = x145[19]._super;
  Val x166 = x145[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:621)
  Val x167 = (x147 * Val(2));
  Val x168 = ((((((x146 + x167) + (x148 * Val(4))) + (x149 * Val(8))) + (x150 * Val(16))) +
               (x151 * Val(32))) +
              (x152 * Val(64)));
  Val x169 = ((((((x168 + (x153 * Val(128))) + (x154 * Val(256))) + (x155 * Val(512))) +
                (x156 * Val(1024))) +
               (x157 * Val(2048))) +
              (x158 * Val(4096)));
  Val x170 = ((((((x169 + (x159 * Val(8192))) + (x160 * Val(16384))) + (x161 * Val(32768))) +
                (x162 * Val(65536))) +
               (x163 * Val(131072))) +
              (x164 * Val(262144)));
  EQZ((((x170 + (x165 * Val(524288))) + (x166 * Val(1048576))) - x143),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:621)");
  // andnxor(zirgen/circuit/keccak/keccak.zir:118)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:623)
  Val x171 = ((Val(1) - x6) * x62);
  Val x172 = ((Val(1) - x7) * x63);
  Val x173 = ((Val(1) - x8) * x64);
  Val x174 = ((Val(1) - x9) * x65);
  Val x175 = ((Val(1) - x10) * x66);
  Val x176 = ((Val(1) - x11) * x67);
  Val x177 = ((Val(1) - x12) * x68);
  Val x178 = ((Val(1) - x13) * x69);
  Val x179 = ((Val(1) - x14) * x70);
  Val x180 = ((Val(1) - x15) * x71);
  Val x181 = ((Val(1) - x16) * x72);
  Val x182 = ((Val(1) - x17) * x73);
  Val x183 = ((Val(1) - x18) * x74);
  Val x184 = ((Val(1) - x19) * x75);
  Val x185 = ((Val(1) - x20) * x76);
  Val x186 = ((Val(1) - x21) * x77);
  Val x187 = ((Val(1) - x22) * x78);
  Val x188 = ((Val(1) - x23) * x79);
  Val x189 = ((Val(1) - x24) * x80);
  Val x190 = ((Val(1) - x25) * x81);
  Val x191 = ((Val(1) - x26) * x82);
  Val x192 = ((Val(1) - x27) * x83);
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:624)
  Val x193 = ((Val(1) - x34) * x90);
  Val x194 = ((Val(1) - x35) * x91);
  Val x195 = ((Val(1) - x36) * x92);
  Val x196 = ((Val(1) - x37) * x93);
  Val x197 = ((Val(1) - x38) * x94);
  Val x198 = ((Val(1) - x39) * x95);
  Val x199 = ((Val(1) - x40) * x96);
  Val x200 = ((Val(1) - x41) * x97);
  Val x201 = ((Val(1) - x42) * x98);
  Val x202 = ((Val(1) - x43) * x99);
  Val x203 = ((Val(1) - x44) * x100);
  Val x204 = ((Val(1) - x45) * x101);
  Val x205 = ((Val(1) - x46) * x102);
  Val x206 = ((Val(1) - x47) * x103);
  Val x207 = ((Val(1) - x48) * x104);
  Val x208 = ((Val(1) - x49) * x105);
  Val x209 = ((Val(1) - x50) * x106);
  Val x210 = ((Val(1) - x51) * x107);
  Val x211 = ((Val(1) - x52) * x108);
  Val x212 = ((Val(1) - x53) * x109);
  Val x213 = ((Val(1) - x54) * x110);
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:625)
  Val x214 =
      (((((x117 + x171) - ((x117 * Val(2)) * x171)) + (((x118 + x172) - (x139 * x172)) * Val(2))) +
        (((x119 + x173) - ((x119 * Val(2)) * x173)) * Val(4))) +
       (((x120 + x174) - ((x120 * Val(2)) * x174)) * Val(8)));
  Val x215 = (((x214 + (((x121 + x175) - ((x121 * Val(2)) * x175)) * Val(16))) +
               (((x122 + x176) - ((x122 * Val(2)) * x176)) * Val(32))) +
              (((x123 + x177) - ((x123 * Val(2)) * x177)) * Val(64)));
  Val x216 = (((x215 + (((x124 + x178) - ((x124 * Val(2)) * x178)) * Val(128))) +
               (((x125 + x179) - ((x125 * Val(2)) * x179)) * Val(256))) +
              (((x126 + x180) - ((x126 * Val(2)) * x180)) * Val(512)));
  Val x217 = (((x216 + (((x127 + x181) - ((x127 * Val(2)) * x181)) * Val(1024))) +
               (((x128 + x182) - ((x128 * Val(2)) * x182)) * Val(2048))) +
              (((x129 + x183) - ((x129 * Val(2)) * x183)) * Val(4096)));
  Val x218 = (((x217 + (((x130 + x184) - ((x130 * Val(2)) * x184)) * Val(8192))) +
               (((x131 + x185) - ((x131 * Val(2)) * x185)) * Val(16384))) +
              (((x132 + x186) - ((x132 * Val(2)) * x186)) * Val(32768)));
  Val x219 = (((x218 + (((x133 + x187) - ((x133 * Val(2)) * x187)) * Val(65536))) +
               (((x134 + x188) - ((x134 * Val(2)) * x188)) * Val(131072))) +
              (((x135 + x189) - ((x135 * Val(2)) * x189)) * Val(262144)));
  Val x220 = (((x219 + (((x136 + x190) - ((x136 * Val(2)) * x190)) * Val(524288))) +
               (((x137 + x191) - ((x137 * Val(2)) * x191)) * Val(1048576))) +
              (((x138 + x192) - ((x138 * Val(2)) * x192)) * Val(2097152)));
  NondetRegStruct x221 = exec_Reg(ctx, x220, LAYOUT_LOOKUP(layout1, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  Val x222 =
      (((((x146 + x193) - ((x146 * Val(2)) * x193)) + (((x147 + x194) - (x167 * x194)) * Val(2))) +
        (((x148 + x195) - ((x148 * Val(2)) * x195)) * Val(4))) +
       (((x149 + x196) - ((x149 * Val(2)) * x196)) * Val(8)));
  Val x223 = (((x222 + (((x150 + x197) - ((x150 * Val(2)) * x197)) * Val(16))) +
               (((x151 + x198) - ((x151 * Val(2)) * x198)) * Val(32))) +
              (((x152 + x199) - ((x152 * Val(2)) * x199)) * Val(64)));
  Val x224 = (((x223 + (((x153 + x200) - ((x153 * Val(2)) * x200)) * Val(128))) +
               (((x154 + x201) - ((x154 * Val(2)) * x201)) * Val(256))) +
              (((x155 + x202) - ((x155 * Val(2)) * x202)) * Val(512)));
  Val x225 = (((x224 + (((x156 + x203) - ((x156 * Val(2)) * x203)) * Val(1024))) +
               (((x157 + x204) - ((x157 * Val(2)) * x204)) * Val(2048))) +
              (((x158 + x205) - ((x158 * Val(2)) * x205)) * Val(4096)));
  Val x226 = (((x225 + (((x159 + x206) - ((x159 * Val(2)) * x206)) * Val(8192))) +
               (((x160 + x207) - ((x160 * Val(2)) * x207)) * Val(16384))) +
              (((x161 + x208) - ((x161 * Val(2)) * x208)) * Val(32768)));
  Val x227 = (((x226 + (((x162 + x209) - ((x162 * Val(2)) * x209)) * Val(65536))) +
               (((x163 + x210) - ((x163 * Val(2)) * x210)) * Val(131072))) +
              (((x164 + x211) - ((x164 * Val(2)) * x211)) * Val(262144)));
  NondetRegStruct x228 =
      exec_Reg(ctx,
               ((x227 + (((x165 + x212) - ((x165 * Val(2)) * x212)) * Val(524288))) +
                (((x166 + x213) - ((x166 * Val(2)) * x213)) * Val(1048576))),
               LAYOUT_LOOKUP(layout1, _1));
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:630)
  Val22Array x229 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x230 = exec_RetTuple(
      ctx,
      x229,
      x229,
      x229,
      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), x221._super, x228._super},
      x229,
      x229,
      Val(6),
      Val(11),
      arg0.rnd._super,
      arg0.blk._super,
      arg0.midx._super,
      LAYOUT_LOOKUP(layout1, _super));
  return x230;
}
RetTupleStruct execChiMinor0_4__1_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<ChiMinor0_4__1_Layout> layout1) {
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:542)
  NondetRegStruct22Array x2 = arg0.arrA;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:546)
  Val x3 = x2[15]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:554)
  ToBits_22_Struct x4 = exec_ToBits_22_(ctx, x3, LAYOUT_LOOKUP(layout1, unpack_0xp1));
  NondetRegStruct22Array x5 = x4._super;
  Val x6 = x5[0]._super;
  Val x7 = x5[1]._super;
  Val x8 = x5[2]._super;
  Val x9 = x5[3]._super;
  Val x10 = x5[4]._super;
  Val x11 = x5[5]._super;
  Val x12 = x5[6]._super;
  Val x13 = x5[7]._super;
  Val x14 = x5[8]._super;
  Val x15 = x5[9]._super;
  Val x16 = x5[10]._super;
  Val x17 = x5[11]._super;
  Val x18 = x5[12]._super;
  Val x19 = x5[13]._super;
  Val x20 = x5[14]._super;
  Val x21 = x5[15]._super;
  Val x22 = x5[16]._super;
  Val x23 = x5[17]._super;
  Val x24 = x5[18]._super;
  Val x25 = x5[19]._super;
  Val x26 = x5[20]._super;
  Val x27 = x5[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:555)
  Val x28 = ((((((x6 + (x7 * Val(2))) + (x8 * Val(4))) + (x9 * Val(8))) + (x10 * Val(16))) +
              (x11 * Val(32))) +
             (x12 * Val(64)));
  Val x29 =
      ((((((x28 + (x13 * Val(128))) + (x14 * Val(256))) + (x15 * Val(512))) + (x16 * Val(1024))) +
        (x17 * Val(2048))) +
       (x18 * Val(4096)));
  Val x30 = ((((((x29 + (x19 * Val(8192))) + (x20 * Val(16384))) + (x21 * Val(32768))) +
               (x22 * Val(65536))) +
              (x23 * Val(131072))) +
             (x24 * Val(262144)));
  EQZ(((((x30 + (x25 * Val(524288))) + (x26 * Val(1048576))) + (x27 * Val(2097152))) - x3),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:555)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:559)
  Val x31 = x2[16]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:567)
  ToBits_21_Struct x32 = exec_ToBits_21_(ctx, x31, LAYOUT_LOOKUP(layout1, unpack_1xp1));
  NondetRegStruct21Array x33 = x32._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:568)
  Val x55 = ((((((x34 + (x35 * Val(2))) + (x36 * Val(4))) + (x37 * Val(8))) + (x38 * Val(16))) +
              (x39 * Val(32))) +
             (x40 * Val(64)));
  Val x56 =
      ((((((x55 + (x41 * Val(128))) + (x42 * Val(256))) + (x43 * Val(512))) + (x44 * Val(1024))) +
        (x45 * Val(2048))) +
       (x46 * Val(4096)));
  Val x57 = ((((((x56 + (x47 * Val(8192))) + (x48 * Val(16384))) + (x49 * Val(32768))) +
               (x50 * Val(65536))) +
              (x51 * Val(131072))) +
             (x52 * Val(262144)));
  EQZ((((x57 + (x53 * Val(524288))) + (x54 * Val(1048576))) - x31),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:568)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:573)
  Val x58 = x2[18]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:581)
  ToBits_22_Struct x59 = exec_ToBits_22_(ctx, x58, LAYOUT_LOOKUP(layout1, unpack_0xp2));
  NondetRegStruct22Array x60 = x59._super;
  Val x61 = x60[0]._super;
  Val x62 = x60[1]._super;
  Val x63 = x60[2]._super;
  Val x64 = x60[3]._super;
  Val x65 = x60[4]._super;
  Val x66 = x60[5]._super;
  Val x67 = x60[6]._super;
  Val x68 = x60[7]._super;
  Val x69 = x60[8]._super;
  Val x70 = x60[9]._super;
  Val x71 = x60[10]._super;
  Val x72 = x60[11]._super;
  Val x73 = x60[12]._super;
  Val x74 = x60[13]._super;
  Val x75 = x60[14]._super;
  Val x76 = x60[15]._super;
  Val x77 = x60[16]._super;
  Val x78 = x60[17]._super;
  Val x79 = x60[18]._super;
  Val x80 = x60[19]._super;
  Val x81 = x60[20]._super;
  Val x82 = x60[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:582)
  Val x83 = ((((((x61 + (x62 * Val(2))) + (x63 * Val(4))) + (x64 * Val(8))) + (x65 * Val(16))) +
              (x66 * Val(32))) +
             (x67 * Val(64)));
  Val x84 =
      ((((((x83 + (x68 * Val(128))) + (x69 * Val(256))) + (x70 * Val(512))) + (x71 * Val(1024))) +
        (x72 * Val(2048))) +
       (x73 * Val(4096)));
  Val x85 = ((((((x84 + (x74 * Val(8192))) + (x75 * Val(16384))) + (x76 * Val(32768))) +
               (x77 * Val(65536))) +
              (x78 * Val(131072))) +
             (x79 * Val(262144)));
  EQZ(((((x85 + (x80 * Val(524288))) + (x81 * Val(1048576))) + (x82 * Val(2097152))) - x58),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:582)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:586)
  Val x86 = x2[19]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:594)
  ToBits_21_Struct x87 = exec_ToBits_21_(ctx, x86, LAYOUT_LOOKUP(layout1, unpack_1xp2));
  NondetRegStruct21Array x88 = x87._super;
  Val x89 = x88[0]._super;
  Val x90 = x88[1]._super;
  Val x91 = x88[2]._super;
  Val x92 = x88[3]._super;
  Val x93 = x88[4]._super;
  Val x94 = x88[5]._super;
  Val x95 = x88[6]._super;
  Val x96 = x88[7]._super;
  Val x97 = x88[8]._super;
  Val x98 = x88[9]._super;
  Val x99 = x88[10]._super;
  Val x100 = x88[11]._super;
  Val x101 = x88[12]._super;
  Val x102 = x88[13]._super;
  Val x103 = x88[14]._super;
  Val x104 = x88[15]._super;
  Val x105 = x88[16]._super;
  Val x106 = x88[17]._super;
  Val x107 = x88[18]._super;
  Val x108 = x88[19]._super;
  Val x109 = x88[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:595)
  Val x110 = ((((((x89 + (x90 * Val(2))) + (x91 * Val(4))) + (x92 * Val(8))) + (x93 * Val(16))) +
               (x94 * Val(32))) +
              (x95 * Val(64)));
  Val x111 =
      ((((((x110 + (x96 * Val(128))) + (x97 * Val(256))) + (x98 * Val(512))) + (x99 * Val(1024))) +
        (x100 * Val(2048))) +
       (x101 * Val(4096)));
  Val x112 = ((((((x111 + (x102 * Val(8192))) + (x103 * Val(16384))) + (x104 * Val(32768))) +
                (x105 * Val(65536))) +
               (x106 * Val(131072))) +
              (x107 * Val(262144)));
  EQZ((((x112 + (x108 * Val(524288))) + (x109 * Val(1048576))) - x86),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:595)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:542)
  NondetRegStruct22Array x113 = arg0.arrB;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:599)
  Val x114 = x113[5]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:607)
  ToBits_22_Struct x115 = exec_ToBits_22_(ctx, x114, LAYOUT_LOOKUP(layout1, unpack_0x));
  NondetRegStruct22Array x116 = x115._super;
  Val x117 = x116[0]._super;
  Val x118 = x116[1]._super;
  Val x119 = x116[2]._super;
  Val x120 = x116[3]._super;
  Val x121 = x116[4]._super;
  Val x122 = x116[5]._super;
  Val x123 = x116[6]._super;
  Val x124 = x116[7]._super;
  Val x125 = x116[8]._super;
  Val x126 = x116[9]._super;
  Val x127 = x116[10]._super;
  Val x128 = x116[11]._super;
  Val x129 = x116[12]._super;
  Val x130 = x116[13]._super;
  Val x131 = x116[14]._super;
  Val x132 = x116[15]._super;
  Val x133 = x116[16]._super;
  Val x134 = x116[17]._super;
  Val x135 = x116[18]._super;
  Val x136 = x116[19]._super;
  Val x137 = x116[20]._super;
  Val x138 = x116[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:608)
  Val x139 = (x118 * Val(2));
  Val x140 = ((((((x117 + x139) + (x119 * Val(4))) + (x120 * Val(8))) + (x121 * Val(16))) +
               (x122 * Val(32))) +
              (x123 * Val(64)));
  Val x141 = ((((((x140 + (x124 * Val(128))) + (x125 * Val(256))) + (x126 * Val(512))) +
                (x127 * Val(1024))) +
               (x128 * Val(2048))) +
              (x129 * Val(4096)));
  Val x142 = ((((((x141 + (x130 * Val(8192))) + (x131 * Val(16384))) + (x132 * Val(32768))) +
                (x133 * Val(65536))) +
               (x134 * Val(131072))) +
              (x135 * Val(262144)));
  EQZ(((((x142 + (x136 * Val(524288))) + (x137 * Val(1048576))) + (x138 * Val(2097152))) - x114),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:608)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:612)
  Val x143 = x113[6]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:620)
  ToBits_21_Struct x144 = exec_ToBits_21_(ctx, x143, LAYOUT_LOOKUP(layout1, unpack_1x));
  NondetRegStruct21Array x145 = x144._super;
  Val x146 = x145[0]._super;
  Val x147 = x145[1]._super;
  Val x148 = x145[2]._super;
  Val x149 = x145[3]._super;
  Val x150 = x145[4]._super;
  Val x151 = x145[5]._super;
  Val x152 = x145[6]._super;
  Val x153 = x145[7]._super;
  Val x154 = x145[8]._super;
  Val x155 = x145[9]._super;
  Val x156 = x145[10]._super;
  Val x157 = x145[11]._super;
  Val x158 = x145[12]._super;
  Val x159 = x145[13]._super;
  Val x160 = x145[14]._super;
  Val x161 = x145[15]._super;
  Val x162 = x145[16]._super;
  Val x163 = x145[17]._super;
  Val x164 = x145[18]._super;
  Val x165 = x145[19]._super;
  Val x166 = x145[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:621)
  Val x167 = (x147 * Val(2));
  Val x168 = ((((((x146 + x167) + (x148 * Val(4))) + (x149 * Val(8))) + (x150 * Val(16))) +
               (x151 * Val(32))) +
              (x152 * Val(64)));
  Val x169 = ((((((x168 + (x153 * Val(128))) + (x154 * Val(256))) + (x155 * Val(512))) +
                (x156 * Val(1024))) +
               (x157 * Val(2048))) +
              (x158 * Val(4096)));
  Val x170 = ((((((x169 + (x159 * Val(8192))) + (x160 * Val(16384))) + (x161 * Val(32768))) +
                (x162 * Val(65536))) +
               (x163 * Val(131072))) +
              (x164 * Val(262144)));
  EQZ((((x170 + (x165 * Val(524288))) + (x166 * Val(1048576))) - x143),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:621)");
  // andnxor(zirgen/circuit/keccak/keccak.zir:118)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:623)
  Val x171 = ((Val(1) - x6) * x61);
  Val x172 = ((Val(1) - x7) * x62);
  Val x173 = ((Val(1) - x8) * x63);
  Val x174 = ((Val(1) - x9) * x64);
  Val x175 = ((Val(1) - x10) * x65);
  Val x176 = ((Val(1) - x11) * x66);
  Val x177 = ((Val(1) - x12) * x67);
  Val x178 = ((Val(1) - x13) * x68);
  Val x179 = ((Val(1) - x14) * x69);
  Val x180 = ((Val(1) - x15) * x70);
  Val x181 = ((Val(1) - x16) * x71);
  Val x182 = ((Val(1) - x17) * x72);
  Val x183 = ((Val(1) - x18) * x73);
  Val x184 = ((Val(1) - x19) * x74);
  Val x185 = ((Val(1) - x20) * x75);
  Val x186 = ((Val(1) - x21) * x76);
  Val x187 = ((Val(1) - x22) * x77);
  Val x188 = ((Val(1) - x23) * x78);
  Val x189 = ((Val(1) - x24) * x79);
  Val x190 = ((Val(1) - x25) * x80);
  Val x191 = ((Val(1) - x26) * x81);
  Val x192 = ((Val(1) - x27) * x82);
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:624)
  Val x193 = ((Val(1) - x34) * x89);
  Val x194 = ((Val(1) - x35) * x90);
  Val x195 = ((Val(1) - x36) * x91);
  Val x196 = ((Val(1) - x37) * x92);
  Val x197 = ((Val(1) - x38) * x93);
  Val x198 = ((Val(1) - x39) * x94);
  Val x199 = ((Val(1) - x40) * x95);
  Val x200 = ((Val(1) - x41) * x96);
  Val x201 = ((Val(1) - x42) * x97);
  Val x202 = ((Val(1) - x43) * x98);
  Val x203 = ((Val(1) - x44) * x99);
  Val x204 = ((Val(1) - x45) * x100);
  Val x205 = ((Val(1) - x46) * x101);
  Val x206 = ((Val(1) - x47) * x102);
  Val x207 = ((Val(1) - x48) * x103);
  Val x208 = ((Val(1) - x49) * x104);
  Val x209 = ((Val(1) - x50) * x105);
  Val x210 = ((Val(1) - x51) * x106);
  Val x211 = ((Val(1) - x52) * x107);
  Val x212 = ((Val(1) - x53) * x108);
  Val x213 = ((Val(1) - x54) * x109);
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:625)
  Val x214 =
      (((((x117 + x171) - ((x117 * Val(2)) * x171)) + (((x118 + x172) - (x139 * x172)) * Val(2))) +
        (((x119 + x173) - ((x119 * Val(2)) * x173)) * Val(4))) +
       (((x120 + x174) - ((x120 * Val(2)) * x174)) * Val(8)));
  Val x215 = (((x214 + (((x121 + x175) - ((x121 * Val(2)) * x175)) * Val(16))) +
               (((x122 + x176) - ((x122 * Val(2)) * x176)) * Val(32))) +
              (((x123 + x177) - ((x123 * Val(2)) * x177)) * Val(64)));
  Val x216 = (((x215 + (((x124 + x178) - ((x124 * Val(2)) * x178)) * Val(128))) +
               (((x125 + x179) - ((x125 * Val(2)) * x179)) * Val(256))) +
              (((x126 + x180) - ((x126 * Val(2)) * x180)) * Val(512)));
  Val x217 = (((x216 + (((x127 + x181) - ((x127 * Val(2)) * x181)) * Val(1024))) +
               (((x128 + x182) - ((x128 * Val(2)) * x182)) * Val(2048))) +
              (((x129 + x183) - ((x129 * Val(2)) * x183)) * Val(4096)));
  Val x218 = (((x217 + (((x130 + x184) - ((x130 * Val(2)) * x184)) * Val(8192))) +
               (((x131 + x185) - ((x131 * Val(2)) * x185)) * Val(16384))) +
              (((x132 + x186) - ((x132 * Val(2)) * x186)) * Val(32768)));
  Val x219 = (((x218 + (((x133 + x187) - ((x133 * Val(2)) * x187)) * Val(65536))) +
               (((x134 + x188) - ((x134 * Val(2)) * x188)) * Val(131072))) +
              (((x135 + x189) - ((x135 * Val(2)) * x189)) * Val(262144)));
  Val x220 = (((x219 + (((x136 + x190) - ((x136 * Val(2)) * x190)) * Val(524288))) +
               (((x137 + x191) - ((x137 * Val(2)) * x191)) * Val(1048576))) +
              (((x138 + x192) - ((x138 * Val(2)) * x192)) * Val(2097152)));
  NondetRegStruct x221 = exec_Reg(ctx, x220, LAYOUT_LOOKUP(layout1, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  Val x222 =
      (((((x146 + x193) - ((x146 * Val(2)) * x193)) + (((x147 + x194) - (x167 * x194)) * Val(2))) +
        (((x148 + x195) - ((x148 * Val(2)) * x195)) * Val(4))) +
       (((x149 + x196) - ((x149 * Val(2)) * x196)) * Val(8)));
  Val x223 = (((x222 + (((x150 + x197) - ((x150 * Val(2)) * x197)) * Val(16))) +
               (((x151 + x198) - ((x151 * Val(2)) * x198)) * Val(32))) +
              (((x152 + x199) - ((x152 * Val(2)) * x199)) * Val(64)));
  Val x224 = (((x223 + (((x153 + x200) - ((x153 * Val(2)) * x200)) * Val(128))) +
               (((x154 + x201) - ((x154 * Val(2)) * x201)) * Val(256))) +
              (((x155 + x202) - ((x155 * Val(2)) * x202)) * Val(512)));
  Val x225 = (((x224 + (((x156 + x203) - ((x156 * Val(2)) * x203)) * Val(1024))) +
               (((x157 + x204) - ((x157 * Val(2)) * x204)) * Val(2048))) +
              (((x158 + x205) - ((x158 * Val(2)) * x205)) * Val(4096)));
  Val x226 = (((x225 + (((x159 + x206) - ((x159 * Val(2)) * x206)) * Val(8192))) +
               (((x160 + x207) - ((x160 * Val(2)) * x207)) * Val(16384))) +
              (((x161 + x208) - ((x161 * Val(2)) * x208)) * Val(32768)));
  Val x227 = (((x226 + (((x162 + x209) - ((x162 * Val(2)) * x209)) * Val(65536))) +
               (((x163 + x210) - ((x163 * Val(2)) * x210)) * Val(131072))) +
              (((x164 + x211) - ((x164 * Val(2)) * x211)) * Val(262144)));
  NondetRegStruct x228 =
      exec_Reg(ctx,
               ((x227 + (((x165 + x212) - ((x165 * Val(2)) * x212)) * Val(524288))) +
                (((x166 + x213) - ((x166 * Val(2)) * x213)) * Val(1048576))),
               LAYOUT_LOOKUP(layout1, _1));
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:630)
  Val22Array x229 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x230 = exec_RetTuple(
      ctx,
      x229,
      x229,
      x229,
      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), x221._super, x228._super},
      x229,
      x229,
      Val(7),
      Val(11),
      arg0.rnd._super,
      arg0.blk._super,
      arg0.midx._super,
      LAYOUT_LOOKUP(layout1, _super));
  return x230;
}
RetTupleStruct execChiMinor1_4__1_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<ChiMinor1_4__1_Layout> layout2) {
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:685)
  BoundLayout<ChiMinor1_4__1__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:635)
  RetTupleStruct x4 = back_RetTuple(ctx, 8, arg1);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:636)
  RetTupleStruct x5 = back_RetTuple(ctx, 1, arg1);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:635)
  NondetRegStruct22Array x6 = x4.arrB;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:640)
  Val x7 = x6[7]._super;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:648)
  ToBits_21_Struct x8 = exec_ToBits_21_(ctx, x7, LAYOUT_LOOKUP(layout2, unpack_2x));
  NondetRegStruct21Array x9 = x8._super;
  Val x10 = x9[0]._super;
  Val x11 = x9[1]._super;
  Val x12 = x9[2]._super;
  Val x13 = x9[3]._super;
  Val x14 = x9[4]._super;
  Val x15 = x9[5]._super;
  Val x16 = x9[6]._super;
  Val x17 = x9[7]._super;
  Val x18 = x9[8]._super;
  Val x19 = x9[9]._super;
  Val x20 = x9[10]._super;
  Val x21 = x9[11]._super;
  Val x22 = x9[12]._super;
  Val x23 = x9[13]._super;
  Val x24 = x9[14]._super;
  Val x25 = x9[15]._super;
  Val x26 = x9[16]._super;
  Val x27 = x9[17]._super;
  Val x28 = x9[18]._super;
  Val x29 = x9[19]._super;
  Val x30 = x9[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:649)
  Val x31 = (x11 * Val(2));
  Val x32 =
      ((((((x10 + x31) + (x12 * Val(4))) + (x13 * Val(8))) + (x14 * Val(16))) + (x15 * Val(32))) +
       (x16 * Val(64)));
  Val x33 =
      ((((((x32 + (x17 * Val(128))) + (x18 * Val(256))) + (x19 * Val(512))) + (x20 * Val(1024))) +
        (x21 * Val(2048))) +
       (x22 * Val(4096)));
  Val x34 = ((((((x33 + (x23 * Val(8192))) + (x24 * Val(16384))) + (x25 * Val(32768))) +
               (x26 * Val(65536))) +
              (x27 * Val(131072))) +
             (x28 * Val(262144)));
  EQZ((((x34 + (x29 * Val(524288))) + (x30 * Val(1048576))) - x7),
      "chi_minor1(zirgen/circuit/keccak/keccak.zir:649)");
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:635)
  NondetRegStruct22Array x35 = x4.arrA;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:654)
  Val x36 = x35[17]._super;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:662)
  ToBits_21_Struct x37 = exec_ToBits_21_(ctx, x36, LAYOUT_LOOKUP(layout2, unpack_2xp1));
  NondetRegStruct21Array x38 = x37._super;
  Val x39 = x38[0]._super;
  Val x40 = x38[1]._super;
  Val x41 = x38[2]._super;
  Val x42 = x38[3]._super;
  Val x43 = x38[4]._super;
  Val x44 = x38[5]._super;
  Val x45 = x38[6]._super;
  Val x46 = x38[7]._super;
  Val x47 = x38[8]._super;
  Val x48 = x38[9]._super;
  Val x49 = x38[10]._super;
  Val x50 = x38[11]._super;
  Val x51 = x38[12]._super;
  Val x52 = x38[13]._super;
  Val x53 = x38[14]._super;
  Val x54 = x38[15]._super;
  Val x55 = x38[16]._super;
  Val x56 = x38[17]._super;
  Val x57 = x38[18]._super;
  Val x58 = x38[19]._super;
  Val x59 = x38[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:663)
  Val x60 = ((((((x39 + (x40 * Val(2))) + (x41 * Val(4))) + (x42 * Val(8))) + (x43 * Val(16))) +
              (x44 * Val(32))) +
             (x45 * Val(64)));
  Val x61 =
      ((((((x60 + (x46 * Val(128))) + (x47 * Val(256))) + (x48 * Val(512))) + (x49 * Val(1024))) +
        (x50 * Val(2048))) +
       (x51 * Val(4096)));
  Val x62 = ((((((x61 + (x52 * Val(8192))) + (x53 * Val(16384))) + (x54 * Val(32768))) +
               (x55 * Val(65536))) +
              (x56 * Val(131072))) +
             (x57 * Val(262144)));
  EQZ((((x62 + (x58 * Val(524288))) + (x59 * Val(1048576))) - x36),
      "chi_minor1(zirgen/circuit/keccak/keccak.zir:663)");
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:667)
  Val x63 = x35[20]._super;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:675)
  ToBits_21_Struct x64 = exec_ToBits_21_(ctx, x63, LAYOUT_LOOKUP(layout2, unpack_2xp2));
  NondetRegStruct21Array x65 = x64._super;
  Val x66 = x65[0]._super;
  Val x67 = x65[1]._super;
  Val x68 = x65[2]._super;
  Val x69 = x65[3]._super;
  Val x70 = x65[4]._super;
  Val x71 = x65[5]._super;
  Val x72 = x65[6]._super;
  Val x73 = x65[7]._super;
  Val x74 = x65[8]._super;
  Val x75 = x65[9]._super;
  Val x76 = x65[10]._super;
  Val x77 = x65[11]._super;
  Val x78 = x65[12]._super;
  Val x79 = x65[13]._super;
  Val x80 = x65[14]._super;
  Val x81 = x65[15]._super;
  Val x82 = x65[16]._super;
  Val x83 = x65[17]._super;
  Val x84 = x65[18]._super;
  Val x85 = x65[19]._super;
  Val x86 = x65[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:676)
  Val x87 = ((((((x66 + (x67 * Val(2))) + (x68 * Val(4))) + (x69 * Val(8))) + (x70 * Val(16))) +
              (x71 * Val(32))) +
             (x72 * Val(64)));
  Val x88 =
      ((((((x87 + (x73 * Val(128))) + (x74 * Val(256))) + (x75 * Val(512))) + (x76 * Val(1024))) +
        (x77 * Val(2048))) +
       (x78 * Val(4096)));
  Val x89 = ((((((x88 + (x79 * Val(8192))) + (x80 * Val(16384))) + (x81 * Val(32768))) +
               (x82 * Val(65536))) +
              (x83 * Val(131072))) +
             (x84 * Val(262144)));
  EQZ((((x89 + (x85 * Val(524288))) + (x86 * Val(1048576))) - x63),
      "chi_minor1(zirgen/circuit/keccak/keccak.zir:676)");
  // andnxor(zirgen/circuit/keccak/keccak.zir:118)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:678)
  Val x90 = ((Val(1) - x39) * x66);
  Val x91 = ((Val(1) - x40) * x67);
  Val x92 = ((Val(1) - x41) * x68);
  Val x93 = ((Val(1) - x42) * x69);
  Val x94 = ((Val(1) - x43) * x70);
  Val x95 = ((Val(1) - x44) * x71);
  Val x96 = ((Val(1) - x45) * x72);
  Val x97 = ((Val(1) - x46) * x73);
  Val x98 = ((Val(1) - x47) * x74);
  Val x99 = ((Val(1) - x48) * x75);
  Val x100 = ((Val(1) - x49) * x76);
  Val x101 = ((Val(1) - x50) * x77);
  Val x102 = ((Val(1) - x51) * x78);
  Val x103 = ((Val(1) - x52) * x79);
  Val x104 = ((Val(1) - x53) * x80);
  Val x105 = ((Val(1) - x54) * x81);
  Val x106 = ((Val(1) - x55) * x82);
  Val x107 = ((Val(1) - x56) * x83);
  Val x108 = ((Val(1) - x57) * x84);
  Val x109 = ((Val(1) - x58) * x85);
  Val x110 = ((Val(1) - x59) * x86);
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:679)
  Val x111 = (((((x10 + x90) - ((x10 * Val(2)) * x90)) + (((x11 + x91) - (x31 * x91)) * Val(2))) +
               (((x12 + x92) - ((x12 * Val(2)) * x92)) * Val(4))) +
              (((x13 + x93) - ((x13 * Val(2)) * x93)) * Val(8)));
  Val x112 = (((x111 + (((x14 + x94) - ((x14 * Val(2)) * x94)) * Val(16))) +
               (((x15 + x95) - ((x15 * Val(2)) * x95)) * Val(32))) +
              (((x16 + x96) - ((x16 * Val(2)) * x96)) * Val(64)));
  Val x113 = (((x112 + (((x17 + x97) - ((x17 * Val(2)) * x97)) * Val(128))) +
               (((x18 + x98) - ((x18 * Val(2)) * x98)) * Val(256))) +
              (((x19 + x99) - ((x19 * Val(2)) * x99)) * Val(512)));
  Val x114 = (((x113 + (((x20 + x100) - ((x20 * Val(2)) * x100)) * Val(1024))) +
               (((x21 + x101) - ((x21 * Val(2)) * x101)) * Val(2048))) +
              (((x22 + x102) - ((x22 * Val(2)) * x102)) * Val(4096)));
  Val x115 = (((x114 + (((x23 + x103) - ((x23 * Val(2)) * x103)) * Val(8192))) +
               (((x24 + x104) - ((x24 * Val(2)) * x104)) * Val(16384))) +
              (((x25 + x105) - ((x25 * Val(2)) * x105)) * Val(32768)));
  Val x116 = (((x115 + (((x26 + x106) - ((x26 * Val(2)) * x106)) * Val(65536))) +
               (((x27 + x107) - ((x27 * Val(2)) * x107)) * Val(131072))) +
              (((x28 + x108) - ((x28 * Val(2)) * x108)) * Val(262144)));
  NondetRegStruct x117 =
      exec_Reg(ctx,
               ((x116 + (((x29 + x109) - ((x29 * Val(2)) * x109)) * Val(524288))) +
                (((x30 + x110) - ((x30 * Val(2)) * x110)) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, res3));
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:636)
  NondetRegStruct24Array x118 = x5.arrD;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:685)
  BoundLayout<ChiMinor1_4__1_Arm1_SuperLayout> x119 = LAYOUT_LOOKUP(x3, arm1);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:680)
  Val22Array x120 =
      Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), x118[22]._super};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:681)
  Val22Array x121 =
      Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), x118[23]._super};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:682)
  Val22Array x122 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), x117._super};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:686)
  Val24Array x123 = Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  Val22Array x124 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:636)
  Val x125 = x5.rnd._super;
  Val x126 = x5.blk._super;
  Val x127 = x5.midx._super;
  if (to_size_t(Val(1))) {
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:686)
    RetTupleStruct x128 = exec_RetTuple(ctx,
                                        x120,
                                        x121,
                                        x122,
                                        x123,
                                        x124,
                                        x124,
                                        Val(8),
                                        Val(11),
                                        x125,
                                        x126,
                                        x127,
                                        LAYOUT_LOOKUP(x3, arm0));
  }
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:718)
  Val x129 = x6[1]._super;
  if (to_size_t(Val(0))) {
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:699)
    ToBits_21_Struct x130 = exec_ToBits_21_(ctx, x36, LAYOUT_LOOKUP(x119, unpack_2nx));
    NondetRegStruct21Array x131 = x130._super;
    Val x132 = x131[0]._super;
    Val x133 = x131[1]._super;
    Val x134 = x131[2]._super;
    Val x135 = x131[3]._super;
    Val x136 = x131[4]._super;
    Val x137 = x131[5]._super;
    Val x138 = x131[6]._super;
    Val x139 = x131[7]._super;
    Val x140 = x131[8]._super;
    Val x141 = x131[9]._super;
    Val x142 = x131[10]._super;
    Val x143 = x131[11]._super;
    Val x144 = x131[12]._super;
    Val x145 = x131[13]._super;
    Val x146 = x131[14]._super;
    Val x147 = x131[15]._super;
    Val x148 = x131[16]._super;
    Val x149 = x131[17]._super;
    Val x150 = x131[18]._super;
    Val x151 = x131[19]._super;
    Val x152 = x131[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:700)
    Val x153 = (x133 * Val(2));
    Val x154 = ((((((x132 + x153) + (x134 * Val(4))) + (x135 * Val(8))) + (x136 * Val(16))) +
                 (x137 * Val(32))) +
                (x138 * Val(64)));
    Val x155 = ((((((x154 + (x139 * Val(128))) + (x140 * Val(256))) + (x141 * Val(512))) +
                  (x142 * Val(1024))) +
                 (x143 * Val(2048))) +
                (x144 * Val(4096)));
    Val x156 = ((((((x155 + (x145 * Val(8192))) + (x146 * Val(16384))) + (x147 * Val(32768))) +
                  (x148 * Val(65536))) +
                 (x149 * Val(131072))) +
                (x150 * Val(262144)));
    EQZ((((x156 + (x151 * Val(524288))) + (x152 * Val(1048576))) - x36),
        "chi_minor1(zirgen/circuit/keccak/keccak.zir:700)");
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:713)
    ToBits_21_Struct x157 = exec_ToBits_21_(ctx, x63, LAYOUT_LOOKUP(x119, unpack_2nxp1));
    NondetRegStruct21Array x158 = x157._super;
    Val x159 = x158[0]._super;
    Val x160 = x158[1]._super;
    Val x161 = x158[2]._super;
    Val x162 = x158[3]._super;
    Val x163 = x158[4]._super;
    Val x164 = x158[5]._super;
    Val x165 = x158[6]._super;
    Val x166 = x158[7]._super;
    Val x167 = x158[8]._super;
    Val x168 = x158[9]._super;
    Val x169 = x158[10]._super;
    Val x170 = x158[11]._super;
    Val x171 = x158[12]._super;
    Val x172 = x158[13]._super;
    Val x173 = x158[14]._super;
    Val x174 = x158[15]._super;
    Val x175 = x158[16]._super;
    Val x176 = x158[17]._super;
    Val x177 = x158[18]._super;
    Val x178 = x158[19]._super;
    Val x179 = x158[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:714)
    Val x180 =
        ((((((x159 + (x160 * Val(2))) + (x161 * Val(4))) + (x162 * Val(8))) + (x163 * Val(16))) +
          (x164 * Val(32))) +
         (x165 * Val(64)));
    Val x181 = ((((((x180 + (x166 * Val(128))) + (x167 * Val(256))) + (x168 * Val(512))) +
                  (x169 * Val(1024))) +
                 (x170 * Val(2048))) +
                (x171 * Val(4096)));
    Val x182 = ((((((x181 + (x172 * Val(8192))) + (x173 * Val(16384))) + (x174 * Val(32768))) +
                  (x175 * Val(65536))) +
                 (x176 * Val(131072))) +
                (x177 * Val(262144)));
    EQZ((((x182 + (x178 * Val(524288))) + (x179 * Val(1048576))) - x63),
        "chi_minor1(zirgen/circuit/keccak/keccak.zir:714)");
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:726)
    ToBits_21_Struct x183 = exec_ToBits_21_(ctx, x129, LAYOUT_LOOKUP(x119, unpack_2nxp2));
    NondetRegStruct21Array x184 = x183._super;
    Val x185 = x184[0]._super;
    Val x186 = x184[1]._super;
    Val x187 = x184[2]._super;
    Val x188 = x184[3]._super;
    Val x189 = x184[4]._super;
    Val x190 = x184[5]._super;
    Val x191 = x184[6]._super;
    Val x192 = x184[7]._super;
    Val x193 = x184[8]._super;
    Val x194 = x184[9]._super;
    Val x195 = x184[10]._super;
    Val x196 = x184[11]._super;
    Val x197 = x184[12]._super;
    Val x198 = x184[13]._super;
    Val x199 = x184[14]._super;
    Val x200 = x184[15]._super;
    Val x201 = x184[16]._super;
    Val x202 = x184[17]._super;
    Val x203 = x184[18]._super;
    Val x204 = x184[19]._super;
    Val x205 = x184[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:727)
    Val x206 =
        ((((((x185 + (x186 * Val(2))) + (x187 * Val(4))) + (x188 * Val(8))) + (x189 * Val(16))) +
          (x190 * Val(32))) +
         (x191 * Val(64)));
    Val x207 = ((((((x206 + (x192 * Val(128))) + (x193 * Val(256))) + (x194 * Val(512))) +
                  (x195 * Val(1024))) +
                 (x196 * Val(2048))) +
                (x197 * Val(4096)));
    Val x208 = ((((((x207 + (x198 * Val(8192))) + (x199 * Val(16384))) + (x200 * Val(32768))) +
                  (x201 * Val(65536))) +
                 (x202 * Val(131072))) +
                (x203 * Val(262144)));
    EQZ((((x208 + (x204 * Val(524288))) + (x205 * Val(1048576))) - x129),
        "chi_minor1(zirgen/circuit/keccak/keccak.zir:727)");
    // andnxor(zirgen/circuit/keccak/keccak.zir:118)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:729)
    Val x209 = ((Val(1) - x159) * x185);
    Val x210 = ((Val(1) - x160) * x186);
    Val x211 = ((Val(1) - x161) * x187);
    Val x212 = ((Val(1) - x162) * x188);
    Val x213 = ((Val(1) - x163) * x189);
    Val x214 = ((Val(1) - x164) * x190);
    Val x215 = ((Val(1) - x165) * x191);
    Val x216 = ((Val(1) - x166) * x192);
    Val x217 = ((Val(1) - x167) * x193);
    Val x218 = ((Val(1) - x168) * x194);
    Val x219 = ((Val(1) - x169) * x195);
    Val x220 = ((Val(1) - x170) * x196);
    Val x221 = ((Val(1) - x171) * x197);
    Val x222 = ((Val(1) - x172) * x198);
    Val x223 = ((Val(1) - x173) * x199);
    Val x224 = ((Val(1) - x174) * x200);
    Val x225 = ((Val(1) - x175) * x201);
    Val x226 = ((Val(1) - x176) * x202);
    Val x227 = ((Val(1) - x177) * x203);
    Val x228 = ((Val(1) - x178) * x204);
    Val x229 = ((Val(1) - x179) * x205);
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:730)
    Val x230 = (((((x132 + x209) - ((x132 * Val(2)) * x209)) +
                  (((x133 + x210) - (x153 * x210)) * Val(2))) +
                 (((x134 + x211) - ((x134 * Val(2)) * x211)) * Val(4))) +
                (((x135 + x212) - ((x135 * Val(2)) * x212)) * Val(8)));
    Val x231 = (((x230 + (((x136 + x213) - ((x136 * Val(2)) * x213)) * Val(16))) +
                 (((x137 + x214) - ((x137 * Val(2)) * x214)) * Val(32))) +
                (((x138 + x215) - ((x138 * Val(2)) * x215)) * Val(64)));
    Val x232 = (((x231 + (((x139 + x216) - ((x139 * Val(2)) * x216)) * Val(128))) +
                 (((x140 + x217) - ((x140 * Val(2)) * x217)) * Val(256))) +
                (((x141 + x218) - ((x141 * Val(2)) * x218)) * Val(512)));
    Val x233 = (((x232 + (((x142 + x219) - ((x142 * Val(2)) * x219)) * Val(1024))) +
                 (((x143 + x220) - ((x143 * Val(2)) * x220)) * Val(2048))) +
                (((x144 + x221) - ((x144 * Val(2)) * x221)) * Val(4096)));
    Val x234 = (((x233 + (((x145 + x222) - ((x145 * Val(2)) * x222)) * Val(8192))) +
                 (((x146 + x223) - ((x146 * Val(2)) * x223)) * Val(16384))) +
                (((x147 + x224) - ((x147 * Val(2)) * x224)) * Val(32768)));
    Val x235 = (((x234 + (((x148 + x225) - ((x148 * Val(2)) * x225)) * Val(65536))) +
                 (((x149 + x226) - ((x149 * Val(2)) * x226)) * Val(131072))) +
                (((x150 + x227) - ((x150 * Val(2)) * x227)) * Val(262144)));
    NondetRegStruct x236 =
        exec_Reg(ctx,
                 ((x235 + (((x151 + x228) - ((x151 * Val(2)) * x228)) * Val(524288))) +
                  (((x152 + x229) - ((x152 * Val(2)) * x229)) * Val(1048576))),
                 LAYOUT_LOOKUP(x119, res3n));
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:733)
    RetTupleStruct x237 =
        exec_RetTuple(ctx,
                      x120,
                      x121,
                      x122,
                      x123,
                      x124,
                      Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), x236._super},
                      Val(8),
                      Val(11),
                      x125,
                      x126,
                      x127,
                      LAYOUT_LOOKUP(x119, _super));
  }
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:685)
  RetTupleStruct x238 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x238;
}
RetTupleStruct execChiMinor2_1_(ExecContext& ctx,
                                RetTupleStruct arg0,
                                BoundLayout<RetTupleLayout> arg1,
                                BoundLayout<ChiMinor2_1__SuperLayout> layout2) {
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:739)
  RetTupleStruct x3 = back_RetTuple(ctx, 1, arg1);
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:740)
  RetTupleStruct x4 = back_RetTuple(ctx, 3, arg1);
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:741)
  RetTupleStruct x5 = back_RetTuple(ctx, 4, arg1);
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:742)
  RetTupleStruct x6 = back_RetTuple(ctx, 6, arg1);
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:743)
  RetTupleStruct x7 = back_RetTuple(ctx, 7, arg1);
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:744)
  RetTupleStruct x8 = back_RetTuple(ctx, 9, arg1);
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:746)
  BoundLayout<ChiMinor2_1_Arm1_SuperLayout> x9 = LAYOUT_LOOKUP(layout2, arm1);
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:742)
  NondetRegStruct24Array x10 = x6.arrD;
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:740)
  NondetRegStruct24Array x11 = x4.arrD;
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:744)
  NondetRegStruct22Array x12 = x8.arrA;
  NondetRegStruct22Array x13 = x8.arrB;
  NondetRegStruct22Array x14 = x8.arrC;
  NondetRegStruct24Array x15 = x8.arrD;
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:747)
  Val x16 = x7.arrA[21]._super;
  Val x17 = x7.arrB[21]._super;
  Val x18 = x7.arrC[21]._super;
  Val x19 = x10[22]._super;
  Val x20 = x10[23]._super;
  Val x21 = x7.arrF[21]._super;
  Val x22 = x5.arrA[21]._super;
  Val x23 = x5.arrB[21]._super;
  Val x24 = x5.arrC[21]._super;
  Val x25 = x11[22]._super;
  Val x26 = x11[23]._super;
  Val x27 = x5.arrF[21]._super;
  Val x28 = x3.arrA[21]._super;
  Val x29 = x3.arrB[21]._super;
  Val x30 = x3.arrC[21]._super;
  Val x31 = x12[15]._super;
  Val x32 = x12[16]._super;
  Val x33 = x12[17]._super;
  Val x34 = x12[18]._super;
  Val x35 = x12[19]._super;
  Val x36 = x12[20]._super;
  Val x37 = x12[21]._super;
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:744)
  Val x38 = x13[0]._super;
  Val x39 = x13[1]._super;
  Val x40 = x13[2]._super;
  Val x41 = x13[3]._super;
  Val x42 = x13[4]._super;
  Val x43 = x13[5]._super;
  Val x44 = x13[6]._super;
  Val x45 = x13[7]._super;
  Val x46 = x13[8]._super;
  Val x47 = x13[9]._super;
  Val x48 = x13[10]._super;
  Val x49 = x13[11]._super;
  Val x50 = x13[12]._super;
  Val x51 = x13[13]._super;
  Val x52 = x13[14]._super;
  Val x53 = x13[15]._super;
  Val x54 = x13[16]._super;
  Val x55 = x13[17]._super;
  Val x56 = x13[18]._super;
  Val x57 = x13[19]._super;
  Val x58 = x13[20]._super;
  Val x59 = x13[21]._super;
  Val22Array x60 = Val22Array{x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48,
                              x49, x50, x51, x52, x53, x54, x55, x56, x57, x58, x59};
  Val x61 = x14[0]._super;
  Val x62 = x14[1]._super;
  Val x63 = x14[2]._super;
  Val x64 = x14[3]._super;
  Val x65 = x14[4]._super;
  Val x66 = x14[5]._super;
  Val x67 = x14[6]._super;
  Val x68 = x14[7]._super;
  Val x69 = x14[8]._super;
  Val x70 = x14[9]._super;
  Val x71 = x14[10]._super;
  Val x72 = x14[11]._super;
  Val x73 = x14[12]._super;
  Val x74 = x14[13]._super;
  Val x75 = x14[14]._super;
  Val x76 = x14[15]._super;
  Val x77 = x14[16]._super;
  Val x78 = x14[17]._super;
  Val x79 = x14[18]._super;
  Val x80 = x14[19]._super;
  Val x81 = x14[20]._super;
  Val x82 = x14[21]._super;
  Val22Array x83 = Val22Array{x61, x62, x63, x64, x65, x66, x67, x68, x69, x70, x71,
                              x72, x73, x74, x75, x76, x77, x78, x79, x80, x81, x82};
  Val24Array x84 =
      Val24Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x15[22]._super, x15[23]._super};
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:755)
  Val22Array x85 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:739)
  Val x86 = x3.rnd._super;
  Val x87 = x3.blk._super;
  Val x88 = x3.midx._super;
  if (to_size_t(Val(0))) {
    // chi_minor2(zirgen/circuit/keccak/keccak.zir:755)
    RetTupleStruct x89 =
        exec_RetTuple(ctx,
                      Val22Array{x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26,
                                 x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37},
                      x60,
                      x83,
                      x84,
                      x85,
                      x85,
                      Val(0),
                      Val(11),
                      x86,
                      x87,
                      x88,
                      LAYOUT_LOOKUP(layout2, arm0));
  }
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:758)
  BoundLayout<ChiMinor2_1_Arm1Arm1_SuperLayout> x90 = LAYOUT_LOOKUP(x9, arm1);
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:762)
  Val x91 = x12[0]._super;
  Val x92 = x12[1]._super;
  Val x93 = x12[2]._super;
  Val x94 = x12[3]._super;
  Val x95 = x12[4]._super;
  Val x96 = x12[5]._super;
  Val x97 = x12[6]._super;
  Val x98 = x12[7]._super;
  Val x99 = x12[8]._super;
  Val x100 = x12[9]._super;
  Val x101 = x12[10]._super;
  Val x102 = x12[11]._super;
  Val x103 = x12[12]._super;
  Val x104 = x12[13]._super;
  Val x105 = x12[14]._super;
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:770)
  BoundLayout<ChiMinor2_1_Arm1Arm1Arm1_SuperLayout> x106 = LAYOUT_LOOKUP(x90, arm1);
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:744)
  Val22Array x107 = Val22Array{x91,  x92,  x93,  x94,  x95, x96, x97, x98, x99, x100, x101,
                               x102, x103, x104, x105, x31, x32, x33, x34, x35, x36,  x37};
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:782)
  BoundLayout<ChiMinor2_1_Arm1Arm1Arm1Arm1_SuperLayout> x108 = LAYOUT_LOOKUP(x106, arm1);
  if (to_size_t(Val(1))) {
    if (to_size_t(Val(1))) {
      // chi_minor2(zirgen/circuit/keccak/keccak.zir:767)
      RetTupleStruct x109 =
          exec_RetTuple(ctx,
                        Val22Array{x91,  x92,  x93,  x94,  x95, x96, x97, x98, x99, x100, x101,
                                   x102, x103, x104, x105, x16, x17, x18, x19, x20, x21,  x22},
                        Val22Array{x23, x24, x25, x26, x27, x28, x29, x30, x46, x47, x48,
                                   x49, x50, x51, x52, x53, x54, x55, x56, x57, x58, x59},
                        x83,
                        x84,
                        x85,
                        x85,
                        Val(0),
                        Val(12),
                        x86,
                        x87,
                        x88,
                        LAYOUT_LOOKUP(x9, arm0));
    }
    if (to_size_t(Val(0))) {
      if (to_size_t(Val(0))) {
        // chi_minor2(zirgen/circuit/keccak/keccak.zir:779)
        RetTupleStruct x110 =
            exec_RetTuple(ctx,
                          x107,
                          Val22Array{x38, x39, x40, x41, x42, x43, x44, x45, x16, x17, x18,
                                     x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29},
                          Val22Array{x30, x62, x63, x64, x65, x66, x67, x68, x69, x70, x71,
                                     x72, x73, x74, x75, x76, x77, x78, x79, x80, x81, x82},
                          x84,
                          x85,
                          x85,
                          Val(0),
                          Val(13),
                          x86,
                          x87,
                          x88,
                          LAYOUT_LOOKUP(x90, arm0));
      }
      if (to_size_t(Val(1))) {
        if (to_size_t(Val(0))) {
          // chi_minor2(zirgen/circuit/keccak/keccak.zir:790)
          RetTupleStruct x111 =
              exec_RetTuple(ctx,
                            x107,
                            x60,
                            Val22Array{x61, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25,
                                       x26, x27, x28, x29, x30, x77, x78, x79, x80, x81, x82},
                            x84,
                            x85,
                            x85,
                            Val(0),
                            Val(14),
                            x86,
                            x87,
                            x88,
                            LAYOUT_LOOKUP(x106, arm0));
        }
        if (to_size_t(Val(1))) {
          // chi_minor2(zirgen/circuit/keccak/keccak.zir:800)
          OneHot_24_Struct x112 = exec_OneHot_24_(ctx, x86, LAYOUT_LOOKUP(x108, unpackRnd));
          // chi_minor2(zirgen/circuit/keccak/keccak.zir:801)
          ToBits_22_Struct x113 = exec_ToBits_22_(ctx, x93, LAYOUT_LOOKUP(x108, unpackA002));
          // chi_minor2(zirgen/circuit/keccak/keccak.zir:800)
          NondetRegStruct24Array x114 = x112._super;
          // chi_minor2(zirgen/circuit/keccak/keccak.zir:801)
          NondetRegStruct22Array x115 = x113._super;
          // chi_minor2(zirgen/circuit/keccak/keccak.zir:802)
          RetTupleStruct x116 = exec_RetTuple(
              ctx,
              x107,
              x60,
              Val22Array{x61, x62, x63, x64, x65, x66, x67, x68, x69, x70, x71,
                         x72, x73, x74, x75, x76, x16, x17, x18, x19, x20, x21},
              Val24Array{x114[0]._super,  x114[1]._super,  x114[2]._super,  x114[3]._super,
                         x114[4]._super,  x114[5]._super,  x114[6]._super,  x114[7]._super,
                         x114[8]._super,  x114[9]._super,  x114[10]._super, x114[11]._super,
                         x114[12]._super, x114[13]._super, x114[14]._super, x114[15]._super,
                         x114[16]._super, x114[17]._super, x114[18]._super, x114[19]._super,
                         x114[20]._super, x114[21]._super, x114[22]._super, x114[23]._super},
              Val22Array{x22,    x23,    x24,    x25,    x26,    x27,    x28,    x29,
                         x30,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                         Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
              Val22Array{x115[0]._super,  x115[1]._super,  x115[2]._super,  x115[3]._super,
                         x115[4]._super,  x115[5]._super,  x115[6]._super,  x115[7]._super,
                         x115[8]._super,  x115[9]._super,  x115[10]._super, x115[11]._super,
                         x115[12]._super, x115[13]._super, x115[14]._super, x115[15]._super,
                         x115[16]._super, x115[17]._super, x115[18]._super, x115[19]._super,
                         x115[20]._super, x115[21]._super},
              Val(9),
              Val(14),
              x86,
              x87,
              x88,
              LAYOUT_LOOKUP(x108, _super));
        }
        // chi_minor2(zirgen/circuit/keccak/keccak.zir:782)
        RetTupleStruct x117 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x106, _super));
      }
      // chi_minor2(zirgen/circuit/keccak/keccak.zir:770)
      RetTupleStruct x118 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x90, _super));
    }
    // chi_minor2(zirgen/circuit/keccak/keccak.zir:758)
    RetTupleStruct x119 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x9, _super));
  }
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:746)
  RetTupleStruct x120 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(layout2, _super));
  return x120;
}
RetTupleStruct execChiMajor_1_(ExecContext& ctx,
                               RetTupleStruct arg0,
                               BoundLayout<RetTupleLayout> arg1,
                               BoundLayout<ChiMajor_1_Layout> layout2) {
  // chi_major(zirgen/circuit/keccak/keccak.zir:841)
  BoundLayout<ChiMajor_1__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // chi_major(zirgen/circuit/keccak/keccak.zir:840)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  OneHot_10_Struct x5 = exec_OneHot_10_(ctx, x4.minor._super, LAYOUT_LOOKUP(layout2, minorOnehot));
  NondetRegStruct10Array x6 = x5._super;
  if (to_size_t(x6[0]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:842)
    RetTupleStruct x7 = back_RetTuple(ctx, 1, arg1);
    RetTupleStruct x8 = execChiMinor0_0__1_(ctx, x7, LAYOUT_LOOKUP(x3, arm0));
  }
  if (to_size_t(x6[1]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:843)
    RetTupleStruct x9 = execChiMinor1_0__1_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm1));
  }
  if (to_size_t(x6[2]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:844)
    RetTupleStruct x10 = back_RetTuple(ctx, 3, arg1);
    RetTupleStruct x11 = execChiMinor0_1__1_(ctx, x10, LAYOUT_LOOKUP(x3, arm2));
  }
  if (to_size_t(x6[3]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:845)
    RetTupleStruct x12 = back_RetTuple(ctx, 4, arg1);
    RetTupleStruct x13 = execChiMinor0_2__1_(ctx, x12, LAYOUT_LOOKUP(x3, arm3));
  }
  if (to_size_t(x6[4]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:846)
    RetTupleStruct x14 = execChiMinor1_2__1_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm4));
  }
  if (to_size_t(x6[5]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:847)
    RetTupleStruct x15 = back_RetTuple(ctx, 6, arg1);
    RetTupleStruct x16 = execChiMinor0_3__1_(ctx, x15, LAYOUT_LOOKUP(x3, arm5));
  }
  if (to_size_t(x6[6]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:848)
    RetTupleStruct x17 = back_RetTuple(ctx, 7, arg1);
    RetTupleStruct x18 = execChiMinor0_4__1_(ctx, x17, LAYOUT_LOOKUP(x3, arm6));
  }
  if (to_size_t(x6[7]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:849)
    RetTupleStruct x19 = execChiMinor1_4__1_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm7));
  }
  if (to_size_t(x6[8]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:850)
    RetTupleStruct x20 = execChiMinor2_1_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm8));
  }
  if (to_size_t(x6[9]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:851)
    RetTupleStruct x21 = back_RetTuple(ctx, 1, arg1);
    RetTupleStruct x22 = execIotaXorRc(ctx, x21, LAYOUT_LOOKUP(x3, arm9));
  }
  // chi_major(zirgen/circuit/keccak/keccak.zir:841)
  RetTupleStruct x23 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x23;
}
RetTupleStruct execChiMinor0_0__2_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<ChiMinor0_0__2_Layout> layout1) {
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:542)
  NondetRegStruct22Array x2 = arg0.arrB;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:546)
  Val x3 = x2[11]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:554)
  ToBits_22_Struct x4 = exec_ToBits_22_(ctx, x3, LAYOUT_LOOKUP(layout1, unpack_0xp1));
  NondetRegStruct22Array x5 = x4._super;
  Val x6 = x5[0]._super;
  Val x7 = x5[1]._super;
  Val x8 = x5[2]._super;
  Val x9 = x5[3]._super;
  Val x10 = x5[4]._super;
  Val x11 = x5[5]._super;
  Val x12 = x5[6]._super;
  Val x13 = x5[7]._super;
  Val x14 = x5[8]._super;
  Val x15 = x5[9]._super;
  Val x16 = x5[10]._super;
  Val x17 = x5[11]._super;
  Val x18 = x5[12]._super;
  Val x19 = x5[13]._super;
  Val x20 = x5[14]._super;
  Val x21 = x5[15]._super;
  Val x22 = x5[16]._super;
  Val x23 = x5[17]._super;
  Val x24 = x5[18]._super;
  Val x25 = x5[19]._super;
  Val x26 = x5[20]._super;
  Val x27 = x5[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:555)
  Val x28 = ((((((x6 + (x7 * Val(2))) + (x8 * Val(4))) + (x9 * Val(8))) + (x10 * Val(16))) +
              (x11 * Val(32))) +
             (x12 * Val(64)));
  Val x29 =
      ((((((x28 + (x13 * Val(128))) + (x14 * Val(256))) + (x15 * Val(512))) + (x16 * Val(1024))) +
        (x17 * Val(2048))) +
       (x18 * Val(4096)));
  Val x30 = ((((((x29 + (x19 * Val(8192))) + (x20 * Val(16384))) + (x21 * Val(32768))) +
               (x22 * Val(65536))) +
              (x23 * Val(131072))) +
             (x24 * Val(262144)));
  EQZ(((((x30 + (x25 * Val(524288))) + (x26 * Val(1048576))) + (x27 * Val(2097152))) - x3),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:555)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:559)
  Val x31 = x2[12]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:567)
  ToBits_21_Struct x32 = exec_ToBits_21_(ctx, x31, LAYOUT_LOOKUP(layout1, unpack_1xp1));
  NondetRegStruct21Array x33 = x32._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:568)
  Val x55 = ((((((x34 + (x35 * Val(2))) + (x36 * Val(4))) + (x37 * Val(8))) + (x38 * Val(16))) +
              (x39 * Val(32))) +
             (x40 * Val(64)));
  Val x56 =
      ((((((x55 + (x41 * Val(128))) + (x42 * Val(256))) + (x43 * Val(512))) + (x44 * Val(1024))) +
        (x45 * Val(2048))) +
       (x46 * Val(4096)));
  Val x57 = ((((((x56 + (x47 * Val(8192))) + (x48 * Val(16384))) + (x49 * Val(32768))) +
               (x50 * Val(65536))) +
              (x51 * Val(131072))) +
             (x52 * Val(262144)));
  EQZ((((x57 + (x53 * Val(524288))) + (x54 * Val(1048576))) - x31),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:568)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:573)
  Val x58 = x2[14]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:581)
  ToBits_22_Struct x59 = exec_ToBits_22_(ctx, x58, LAYOUT_LOOKUP(layout1, unpack_0xp2));
  NondetRegStruct22Array x60 = x59._super;
  Val x61 = x60[0]._super;
  Val x62 = x60[1]._super;
  Val x63 = x60[2]._super;
  Val x64 = x60[3]._super;
  Val x65 = x60[4]._super;
  Val x66 = x60[5]._super;
  Val x67 = x60[6]._super;
  Val x68 = x60[7]._super;
  Val x69 = x60[8]._super;
  Val x70 = x60[9]._super;
  Val x71 = x60[10]._super;
  Val x72 = x60[11]._super;
  Val x73 = x60[12]._super;
  Val x74 = x60[13]._super;
  Val x75 = x60[14]._super;
  Val x76 = x60[15]._super;
  Val x77 = x60[16]._super;
  Val x78 = x60[17]._super;
  Val x79 = x60[18]._super;
  Val x80 = x60[19]._super;
  Val x81 = x60[20]._super;
  Val x82 = x60[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:582)
  Val x83 = ((((((x61 + (x62 * Val(2))) + (x63 * Val(4))) + (x64 * Val(8))) + (x65 * Val(16))) +
              (x66 * Val(32))) +
             (x67 * Val(64)));
  Val x84 =
      ((((((x83 + (x68 * Val(128))) + (x69 * Val(256))) + (x70 * Val(512))) + (x71 * Val(1024))) +
        (x72 * Val(2048))) +
       (x73 * Val(4096)));
  Val x85 = ((((((x84 + (x74 * Val(8192))) + (x75 * Val(16384))) + (x76 * Val(32768))) +
               (x77 * Val(65536))) +
              (x78 * Val(131072))) +
             (x79 * Val(262144)));
  EQZ(((((x85 + (x80 * Val(524288))) + (x81 * Val(1048576))) + (x82 * Val(2097152))) - x58),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:582)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:586)
  Val x86 = x2[15]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:594)
  ToBits_21_Struct x87 = exec_ToBits_21_(ctx, x86, LAYOUT_LOOKUP(layout1, unpack_1xp2));
  NondetRegStruct21Array x88 = x87._super;
  Val x89 = x88[0]._super;
  Val x90 = x88[1]._super;
  Val x91 = x88[2]._super;
  Val x92 = x88[3]._super;
  Val x93 = x88[4]._super;
  Val x94 = x88[5]._super;
  Val x95 = x88[6]._super;
  Val x96 = x88[7]._super;
  Val x97 = x88[8]._super;
  Val x98 = x88[9]._super;
  Val x99 = x88[10]._super;
  Val x100 = x88[11]._super;
  Val x101 = x88[12]._super;
  Val x102 = x88[13]._super;
  Val x103 = x88[14]._super;
  Val x104 = x88[15]._super;
  Val x105 = x88[16]._super;
  Val x106 = x88[17]._super;
  Val x107 = x88[18]._super;
  Val x108 = x88[19]._super;
  Val x109 = x88[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:595)
  Val x110 = ((((((x89 + (x90 * Val(2))) + (x91 * Val(4))) + (x92 * Val(8))) + (x93 * Val(16))) +
               (x94 * Val(32))) +
              (x95 * Val(64)));
  Val x111 =
      ((((((x110 + (x96 * Val(128))) + (x97 * Val(256))) + (x98 * Val(512))) + (x99 * Val(1024))) +
        (x100 * Val(2048))) +
       (x101 * Val(4096)));
  Val x112 = ((((((x111 + (x102 * Val(8192))) + (x103 * Val(16384))) + (x104 * Val(32768))) +
                (x105 * Val(65536))) +
               (x106 * Val(131072))) +
              (x107 * Val(262144)));
  EQZ((((x112 + (x108 * Val(524288))) + (x109 * Val(1048576))) - x86),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:595)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:599)
  Val x113 = x2[8]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:607)
  ToBits_22_Struct x114 = exec_ToBits_22_(ctx, x113, LAYOUT_LOOKUP(layout1, unpack_0x));
  NondetRegStruct22Array x115 = x114._super;
  Val x116 = x115[0]._super;
  Val x117 = x115[1]._super;
  Val x118 = x115[2]._super;
  Val x119 = x115[3]._super;
  Val x120 = x115[4]._super;
  Val x121 = x115[5]._super;
  Val x122 = x115[6]._super;
  Val x123 = x115[7]._super;
  Val x124 = x115[8]._super;
  Val x125 = x115[9]._super;
  Val x126 = x115[10]._super;
  Val x127 = x115[11]._super;
  Val x128 = x115[12]._super;
  Val x129 = x115[13]._super;
  Val x130 = x115[14]._super;
  Val x131 = x115[15]._super;
  Val x132 = x115[16]._super;
  Val x133 = x115[17]._super;
  Val x134 = x115[18]._super;
  Val x135 = x115[19]._super;
  Val x136 = x115[20]._super;
  Val x137 = x115[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:608)
  Val x138 = (x117 * Val(2));
  Val x139 = ((((((x116 + x138) + (x118 * Val(4))) + (x119 * Val(8))) + (x120 * Val(16))) +
               (x121 * Val(32))) +
              (x122 * Val(64)));
  Val x140 = ((((((x139 + (x123 * Val(128))) + (x124 * Val(256))) + (x125 * Val(512))) +
                (x126 * Val(1024))) +
               (x127 * Val(2048))) +
              (x128 * Val(4096)));
  Val x141 = ((((((x140 + (x129 * Val(8192))) + (x130 * Val(16384))) + (x131 * Val(32768))) +
                (x132 * Val(65536))) +
               (x133 * Val(131072))) +
              (x134 * Val(262144)));
  EQZ(((((x141 + (x135 * Val(524288))) + (x136 * Val(1048576))) + (x137 * Val(2097152))) - x113),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:608)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:612)
  Val x142 = x2[9]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:620)
  ToBits_21_Struct x143 = exec_ToBits_21_(ctx, x142, LAYOUT_LOOKUP(layout1, unpack_1x));
  NondetRegStruct21Array x144 = x143._super;
  Val x145 = x144[0]._super;
  Val x146 = x144[1]._super;
  Val x147 = x144[2]._super;
  Val x148 = x144[3]._super;
  Val x149 = x144[4]._super;
  Val x150 = x144[5]._super;
  Val x151 = x144[6]._super;
  Val x152 = x144[7]._super;
  Val x153 = x144[8]._super;
  Val x154 = x144[9]._super;
  Val x155 = x144[10]._super;
  Val x156 = x144[11]._super;
  Val x157 = x144[12]._super;
  Val x158 = x144[13]._super;
  Val x159 = x144[14]._super;
  Val x160 = x144[15]._super;
  Val x161 = x144[16]._super;
  Val x162 = x144[17]._super;
  Val x163 = x144[18]._super;
  Val x164 = x144[19]._super;
  Val x165 = x144[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:621)
  Val x166 = (x146 * Val(2));
  Val x167 = ((((((x145 + x166) + (x147 * Val(4))) + (x148 * Val(8))) + (x149 * Val(16))) +
               (x150 * Val(32))) +
              (x151 * Val(64)));
  Val x168 = ((((((x167 + (x152 * Val(128))) + (x153 * Val(256))) + (x154 * Val(512))) +
                (x155 * Val(1024))) +
               (x156 * Val(2048))) +
              (x157 * Val(4096)));
  Val x169 = ((((((x168 + (x158 * Val(8192))) + (x159 * Val(16384))) + (x160 * Val(32768))) +
                (x161 * Val(65536))) +
               (x162 * Val(131072))) +
              (x163 * Val(262144)));
  EQZ((((x169 + (x164 * Val(524288))) + (x165 * Val(1048576))) - x142),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:621)");
  // andnxor(zirgen/circuit/keccak/keccak.zir:118)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:623)
  Val x170 = ((Val(1) - x6) * x61);
  Val x171 = ((Val(1) - x7) * x62);
  Val x172 = ((Val(1) - x8) * x63);
  Val x173 = ((Val(1) - x9) * x64);
  Val x174 = ((Val(1) - x10) * x65);
  Val x175 = ((Val(1) - x11) * x66);
  Val x176 = ((Val(1) - x12) * x67);
  Val x177 = ((Val(1) - x13) * x68);
  Val x178 = ((Val(1) - x14) * x69);
  Val x179 = ((Val(1) - x15) * x70);
  Val x180 = ((Val(1) - x16) * x71);
  Val x181 = ((Val(1) - x17) * x72);
  Val x182 = ((Val(1) - x18) * x73);
  Val x183 = ((Val(1) - x19) * x74);
  Val x184 = ((Val(1) - x20) * x75);
  Val x185 = ((Val(1) - x21) * x76);
  Val x186 = ((Val(1) - x22) * x77);
  Val x187 = ((Val(1) - x23) * x78);
  Val x188 = ((Val(1) - x24) * x79);
  Val x189 = ((Val(1) - x25) * x80);
  Val x190 = ((Val(1) - x26) * x81);
  Val x191 = ((Val(1) - x27) * x82);
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:624)
  Val x192 = ((Val(1) - x34) * x89);
  Val x193 = ((Val(1) - x35) * x90);
  Val x194 = ((Val(1) - x36) * x91);
  Val x195 = ((Val(1) - x37) * x92);
  Val x196 = ((Val(1) - x38) * x93);
  Val x197 = ((Val(1) - x39) * x94);
  Val x198 = ((Val(1) - x40) * x95);
  Val x199 = ((Val(1) - x41) * x96);
  Val x200 = ((Val(1) - x42) * x97);
  Val x201 = ((Val(1) - x43) * x98);
  Val x202 = ((Val(1) - x44) * x99);
  Val x203 = ((Val(1) - x45) * x100);
  Val x204 = ((Val(1) - x46) * x101);
  Val x205 = ((Val(1) - x47) * x102);
  Val x206 = ((Val(1) - x48) * x103);
  Val x207 = ((Val(1) - x49) * x104);
  Val x208 = ((Val(1) - x50) * x105);
  Val x209 = ((Val(1) - x51) * x106);
  Val x210 = ((Val(1) - x52) * x107);
  Val x211 = ((Val(1) - x53) * x108);
  Val x212 = ((Val(1) - x54) * x109);
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:625)
  Val x213 =
      (((((x116 + x170) - ((x116 * Val(2)) * x170)) + (((x117 + x171) - (x138 * x171)) * Val(2))) +
        (((x118 + x172) - ((x118 * Val(2)) * x172)) * Val(4))) +
       (((x119 + x173) - ((x119 * Val(2)) * x173)) * Val(8)));
  Val x214 = (((x213 + (((x120 + x174) - ((x120 * Val(2)) * x174)) * Val(16))) +
               (((x121 + x175) - ((x121 * Val(2)) * x175)) * Val(32))) +
              (((x122 + x176) - ((x122 * Val(2)) * x176)) * Val(64)));
  Val x215 = (((x214 + (((x123 + x177) - ((x123 * Val(2)) * x177)) * Val(128))) +
               (((x124 + x178) - ((x124 * Val(2)) * x178)) * Val(256))) +
              (((x125 + x179) - ((x125 * Val(2)) * x179)) * Val(512)));
  Val x216 = (((x215 + (((x126 + x180) - ((x126 * Val(2)) * x180)) * Val(1024))) +
               (((x127 + x181) - ((x127 * Val(2)) * x181)) * Val(2048))) +
              (((x128 + x182) - ((x128 * Val(2)) * x182)) * Val(4096)));
  Val x217 = (((x216 + (((x129 + x183) - ((x129 * Val(2)) * x183)) * Val(8192))) +
               (((x130 + x184) - ((x130 * Val(2)) * x184)) * Val(16384))) +
              (((x131 + x185) - ((x131 * Val(2)) * x185)) * Val(32768)));
  Val x218 = (((x217 + (((x132 + x186) - ((x132 * Val(2)) * x186)) * Val(65536))) +
               (((x133 + x187) - ((x133 * Val(2)) * x187)) * Val(131072))) +
              (((x134 + x188) - ((x134 * Val(2)) * x188)) * Val(262144)));
  Val x219 = (((x218 + (((x135 + x189) - ((x135 * Val(2)) * x189)) * Val(524288))) +
               (((x136 + x190) - ((x136 * Val(2)) * x190)) * Val(1048576))) +
              (((x137 + x191) - ((x137 * Val(2)) * x191)) * Val(2097152)));
  NondetRegStruct x220 = exec_Reg(ctx, x219, LAYOUT_LOOKUP(layout1, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  Val x221 =
      (((((x145 + x192) - ((x145 * Val(2)) * x192)) + (((x146 + x193) - (x166 * x193)) * Val(2))) +
        (((x147 + x194) - ((x147 * Val(2)) * x194)) * Val(4))) +
       (((x148 + x195) - ((x148 * Val(2)) * x195)) * Val(8)));
  Val x222 = (((x221 + (((x149 + x196) - ((x149 * Val(2)) * x196)) * Val(16))) +
               (((x150 + x197) - ((x150 * Val(2)) * x197)) * Val(32))) +
              (((x151 + x198) - ((x151 * Val(2)) * x198)) * Val(64)));
  Val x223 = (((x222 + (((x152 + x199) - ((x152 * Val(2)) * x199)) * Val(128))) +
               (((x153 + x200) - ((x153 * Val(2)) * x200)) * Val(256))) +
              (((x154 + x201) - ((x154 * Val(2)) * x201)) * Val(512)));
  Val x224 = (((x223 + (((x155 + x202) - ((x155 * Val(2)) * x202)) * Val(1024))) +
               (((x156 + x203) - ((x156 * Val(2)) * x203)) * Val(2048))) +
              (((x157 + x204) - ((x157 * Val(2)) * x204)) * Val(4096)));
  Val x225 = (((x224 + (((x158 + x205) - ((x158 * Val(2)) * x205)) * Val(8192))) +
               (((x159 + x206) - ((x159 * Val(2)) * x206)) * Val(16384))) +
              (((x160 + x207) - ((x160 * Val(2)) * x207)) * Val(32768)));
  Val x226 = (((x225 + (((x161 + x208) - ((x161 * Val(2)) * x208)) * Val(65536))) +
               (((x162 + x209) - ((x162 * Val(2)) * x209)) * Val(131072))) +
              (((x163 + x210) - ((x163 * Val(2)) * x210)) * Val(262144)));
  NondetRegStruct x227 =
      exec_Reg(ctx,
               ((x226 + (((x164 + x211) - ((x164 * Val(2)) * x211)) * Val(524288))) +
                (((x165 + x212) - ((x165 * Val(2)) * x212)) * Val(1048576))),
               LAYOUT_LOOKUP(layout1, _1));
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:630)
  Val22Array x228 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x229 = exec_RetTuple(
      ctx,
      x228,
      x228,
      x228,
      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), x220._super, x227._super},
      x228,
      x228,
      Val(1),
      Val(12),
      arg0.rnd._super,
      arg0.blk._super,
      arg0.midx._super,
      LAYOUT_LOOKUP(layout1, _super));
  return x229;
}
RetTupleStruct execChiMinor1_0__2_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<ChiMinor1_0__2_Layout> layout2) {
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:685)
  BoundLayout<ChiMinor1_0__2__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:635)
  RetTupleStruct x4 = back_RetTuple(ctx, 2, arg1);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:636)
  RetTupleStruct x5 = back_RetTuple(ctx, 1, arg1);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:635)
  NondetRegStruct22Array x6 = x4.arrB;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:640)
  Val x7 = x6[10]._super;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:648)
  ToBits_21_Struct x8 = exec_ToBits_21_(ctx, x7, LAYOUT_LOOKUP(layout2, unpack_2x));
  NondetRegStruct21Array x9 = x8._super;
  Val x10 = x9[0]._super;
  Val x11 = x9[1]._super;
  Val x12 = x9[2]._super;
  Val x13 = x9[3]._super;
  Val x14 = x9[4]._super;
  Val x15 = x9[5]._super;
  Val x16 = x9[6]._super;
  Val x17 = x9[7]._super;
  Val x18 = x9[8]._super;
  Val x19 = x9[9]._super;
  Val x20 = x9[10]._super;
  Val x21 = x9[11]._super;
  Val x22 = x9[12]._super;
  Val x23 = x9[13]._super;
  Val x24 = x9[14]._super;
  Val x25 = x9[15]._super;
  Val x26 = x9[16]._super;
  Val x27 = x9[17]._super;
  Val x28 = x9[18]._super;
  Val x29 = x9[19]._super;
  Val x30 = x9[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:649)
  Val x31 = (x11 * Val(2));
  Val x32 =
      ((((((x10 + x31) + (x12 * Val(4))) + (x13 * Val(8))) + (x14 * Val(16))) + (x15 * Val(32))) +
       (x16 * Val(64)));
  Val x33 =
      ((((((x32 + (x17 * Val(128))) + (x18 * Val(256))) + (x19 * Val(512))) + (x20 * Val(1024))) +
        (x21 * Val(2048))) +
       (x22 * Val(4096)));
  Val x34 = ((((((x33 + (x23 * Val(8192))) + (x24 * Val(16384))) + (x25 * Val(32768))) +
               (x26 * Val(65536))) +
              (x27 * Val(131072))) +
             (x28 * Val(262144)));
  EQZ((((x34 + (x29 * Val(524288))) + (x30 * Val(1048576))) - x7),
      "chi_minor1(zirgen/circuit/keccak/keccak.zir:649)");
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:654)
  Val x35 = x6[13]._super;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:662)
  ToBits_21_Struct x36 = exec_ToBits_21_(ctx, x35, LAYOUT_LOOKUP(layout2, unpack_2xp1));
  NondetRegStruct21Array x37 = x36._super;
  Val x38 = x37[0]._super;
  Val x39 = x37[1]._super;
  Val x40 = x37[2]._super;
  Val x41 = x37[3]._super;
  Val x42 = x37[4]._super;
  Val x43 = x37[5]._super;
  Val x44 = x37[6]._super;
  Val x45 = x37[7]._super;
  Val x46 = x37[8]._super;
  Val x47 = x37[9]._super;
  Val x48 = x37[10]._super;
  Val x49 = x37[11]._super;
  Val x50 = x37[12]._super;
  Val x51 = x37[13]._super;
  Val x52 = x37[14]._super;
  Val x53 = x37[15]._super;
  Val x54 = x37[16]._super;
  Val x55 = x37[17]._super;
  Val x56 = x37[18]._super;
  Val x57 = x37[19]._super;
  Val x58 = x37[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:663)
  Val x59 = ((((((x38 + (x39 * Val(2))) + (x40 * Val(4))) + (x41 * Val(8))) + (x42 * Val(16))) +
              (x43 * Val(32))) +
             (x44 * Val(64)));
  Val x60 =
      ((((((x59 + (x45 * Val(128))) + (x46 * Val(256))) + (x47 * Val(512))) + (x48 * Val(1024))) +
        (x49 * Val(2048))) +
       (x50 * Val(4096)));
  Val x61 = ((((((x60 + (x51 * Val(8192))) + (x52 * Val(16384))) + (x53 * Val(32768))) +
               (x54 * Val(65536))) +
              (x55 * Val(131072))) +
             (x56 * Val(262144)));
  EQZ((((x61 + (x57 * Val(524288))) + (x58 * Val(1048576))) - x35),
      "chi_minor1(zirgen/circuit/keccak/keccak.zir:663)");
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:667)
  Val x62 = x6[16]._super;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:675)
  ToBits_21_Struct x63 = exec_ToBits_21_(ctx, x62, LAYOUT_LOOKUP(layout2, unpack_2xp2));
  NondetRegStruct21Array x64 = x63._super;
  Val x65 = x64[0]._super;
  Val x66 = x64[1]._super;
  Val x67 = x64[2]._super;
  Val x68 = x64[3]._super;
  Val x69 = x64[4]._super;
  Val x70 = x64[5]._super;
  Val x71 = x64[6]._super;
  Val x72 = x64[7]._super;
  Val x73 = x64[8]._super;
  Val x74 = x64[9]._super;
  Val x75 = x64[10]._super;
  Val x76 = x64[11]._super;
  Val x77 = x64[12]._super;
  Val x78 = x64[13]._super;
  Val x79 = x64[14]._super;
  Val x80 = x64[15]._super;
  Val x81 = x64[16]._super;
  Val x82 = x64[17]._super;
  Val x83 = x64[18]._super;
  Val x84 = x64[19]._super;
  Val x85 = x64[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:676)
  Val x86 = ((((((x65 + (x66 * Val(2))) + (x67 * Val(4))) + (x68 * Val(8))) + (x69 * Val(16))) +
              (x70 * Val(32))) +
             (x71 * Val(64)));
  Val x87 =
      ((((((x86 + (x72 * Val(128))) + (x73 * Val(256))) + (x74 * Val(512))) + (x75 * Val(1024))) +
        (x76 * Val(2048))) +
       (x77 * Val(4096)));
  Val x88 = ((((((x87 + (x78 * Val(8192))) + (x79 * Val(16384))) + (x80 * Val(32768))) +
               (x81 * Val(65536))) +
              (x82 * Val(131072))) +
             (x83 * Val(262144)));
  EQZ((((x88 + (x84 * Val(524288))) + (x85 * Val(1048576))) - x62),
      "chi_minor1(zirgen/circuit/keccak/keccak.zir:676)");
  // andnxor(zirgen/circuit/keccak/keccak.zir:118)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:678)
  Val x89 = ((Val(1) - x38) * x65);
  Val x90 = ((Val(1) - x39) * x66);
  Val x91 = ((Val(1) - x40) * x67);
  Val x92 = ((Val(1) - x41) * x68);
  Val x93 = ((Val(1) - x42) * x69);
  Val x94 = ((Val(1) - x43) * x70);
  Val x95 = ((Val(1) - x44) * x71);
  Val x96 = ((Val(1) - x45) * x72);
  Val x97 = ((Val(1) - x46) * x73);
  Val x98 = ((Val(1) - x47) * x74);
  Val x99 = ((Val(1) - x48) * x75);
  Val x100 = ((Val(1) - x49) * x76);
  Val x101 = ((Val(1) - x50) * x77);
  Val x102 = ((Val(1) - x51) * x78);
  Val x103 = ((Val(1) - x52) * x79);
  Val x104 = ((Val(1) - x53) * x80);
  Val x105 = ((Val(1) - x54) * x81);
  Val x106 = ((Val(1) - x55) * x82);
  Val x107 = ((Val(1) - x56) * x83);
  Val x108 = ((Val(1) - x57) * x84);
  Val x109 = ((Val(1) - x58) * x85);
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:679)
  Val x110 = (((((x10 + x89) - ((x10 * Val(2)) * x89)) + (((x11 + x90) - (x31 * x90)) * Val(2))) +
               (((x12 + x91) - ((x12 * Val(2)) * x91)) * Val(4))) +
              (((x13 + x92) - ((x13 * Val(2)) * x92)) * Val(8)));
  Val x111 = (((x110 + (((x14 + x93) - ((x14 * Val(2)) * x93)) * Val(16))) +
               (((x15 + x94) - ((x15 * Val(2)) * x94)) * Val(32))) +
              (((x16 + x95) - ((x16 * Val(2)) * x95)) * Val(64)));
  Val x112 = (((x111 + (((x17 + x96) - ((x17 * Val(2)) * x96)) * Val(128))) +
               (((x18 + x97) - ((x18 * Val(2)) * x97)) * Val(256))) +
              (((x19 + x98) - ((x19 * Val(2)) * x98)) * Val(512)));
  Val x113 = (((x112 + (((x20 + x99) - ((x20 * Val(2)) * x99)) * Val(1024))) +
               (((x21 + x100) - ((x21 * Val(2)) * x100)) * Val(2048))) +
              (((x22 + x101) - ((x22 * Val(2)) * x101)) * Val(4096)));
  Val x114 = (((x113 + (((x23 + x102) - ((x23 * Val(2)) * x102)) * Val(8192))) +
               (((x24 + x103) - ((x24 * Val(2)) * x103)) * Val(16384))) +
              (((x25 + x104) - ((x25 * Val(2)) * x104)) * Val(32768)));
  Val x115 = (((x114 + (((x26 + x105) - ((x26 * Val(2)) * x105)) * Val(65536))) +
               (((x27 + x106) - ((x27 * Val(2)) * x106)) * Val(131072))) +
              (((x28 + x107) - ((x28 * Val(2)) * x107)) * Val(262144)));
  NondetRegStruct x116 =
      exec_Reg(ctx,
               ((x115 + (((x29 + x108) - ((x29 * Val(2)) * x108)) * Val(524288))) +
                (((x30 + x109) - ((x30 * Val(2)) * x109)) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, res3));
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:636)
  NondetRegStruct24Array x117 = x5.arrD;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:685)
  BoundLayout<ChiMinor1_0__2_Arm1_SuperLayout> x118 = LAYOUT_LOOKUP(x3, arm1);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:680)
  Val22Array x119 =
      Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), x117[22]._super};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:681)
  Val22Array x120 =
      Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), x117[23]._super};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:682)
  Val22Array x121 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), x116._super};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:686)
  Val24Array x122 = Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  Val22Array x123 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:636)
  Val x124 = x5.rnd._super;
  Val x125 = x5.blk._super;
  Val x126 = x5.midx._super;
  if (to_size_t(Val(0))) {
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:686)
    RetTupleStruct x127 = exec_RetTuple(ctx,
                                        x119,
                                        x120,
                                        x121,
                                        x122,
                                        x123,
                                        x123,
                                        Val(2),
                                        Val(12),
                                        x124,
                                        x125,
                                        x126,
                                        LAYOUT_LOOKUP(x3, arm0));
  }
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:718)
  Val x128 = x6[19]._super;
  if (to_size_t(Val(1))) {
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:699)
    ToBits_21_Struct x129 = exec_ToBits_21_(ctx, x35, LAYOUT_LOOKUP(x118, unpack_2nx));
    NondetRegStruct21Array x130 = x129._super;
    Val x131 = x130[0]._super;
    Val x132 = x130[1]._super;
    Val x133 = x130[2]._super;
    Val x134 = x130[3]._super;
    Val x135 = x130[4]._super;
    Val x136 = x130[5]._super;
    Val x137 = x130[6]._super;
    Val x138 = x130[7]._super;
    Val x139 = x130[8]._super;
    Val x140 = x130[9]._super;
    Val x141 = x130[10]._super;
    Val x142 = x130[11]._super;
    Val x143 = x130[12]._super;
    Val x144 = x130[13]._super;
    Val x145 = x130[14]._super;
    Val x146 = x130[15]._super;
    Val x147 = x130[16]._super;
    Val x148 = x130[17]._super;
    Val x149 = x130[18]._super;
    Val x150 = x130[19]._super;
    Val x151 = x130[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:700)
    Val x152 = (x132 * Val(2));
    Val x153 = ((((((x131 + x152) + (x133 * Val(4))) + (x134 * Val(8))) + (x135 * Val(16))) +
                 (x136 * Val(32))) +
                (x137 * Val(64)));
    Val x154 = ((((((x153 + (x138 * Val(128))) + (x139 * Val(256))) + (x140 * Val(512))) +
                  (x141 * Val(1024))) +
                 (x142 * Val(2048))) +
                (x143 * Val(4096)));
    Val x155 = ((((((x154 + (x144 * Val(8192))) + (x145 * Val(16384))) + (x146 * Val(32768))) +
                  (x147 * Val(65536))) +
                 (x148 * Val(131072))) +
                (x149 * Val(262144)));
    EQZ((((x155 + (x150 * Val(524288))) + (x151 * Val(1048576))) - x35),
        "chi_minor1(zirgen/circuit/keccak/keccak.zir:700)");
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:713)
    ToBits_21_Struct x156 = exec_ToBits_21_(ctx, x62, LAYOUT_LOOKUP(x118, unpack_2nxp1));
    NondetRegStruct21Array x157 = x156._super;
    Val x158 = x157[0]._super;
    Val x159 = x157[1]._super;
    Val x160 = x157[2]._super;
    Val x161 = x157[3]._super;
    Val x162 = x157[4]._super;
    Val x163 = x157[5]._super;
    Val x164 = x157[6]._super;
    Val x165 = x157[7]._super;
    Val x166 = x157[8]._super;
    Val x167 = x157[9]._super;
    Val x168 = x157[10]._super;
    Val x169 = x157[11]._super;
    Val x170 = x157[12]._super;
    Val x171 = x157[13]._super;
    Val x172 = x157[14]._super;
    Val x173 = x157[15]._super;
    Val x174 = x157[16]._super;
    Val x175 = x157[17]._super;
    Val x176 = x157[18]._super;
    Val x177 = x157[19]._super;
    Val x178 = x157[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:714)
    Val x179 =
        ((((((x158 + (x159 * Val(2))) + (x160 * Val(4))) + (x161 * Val(8))) + (x162 * Val(16))) +
          (x163 * Val(32))) +
         (x164 * Val(64)));
    Val x180 = ((((((x179 + (x165 * Val(128))) + (x166 * Val(256))) + (x167 * Val(512))) +
                  (x168 * Val(1024))) +
                 (x169 * Val(2048))) +
                (x170 * Val(4096)));
    Val x181 = ((((((x180 + (x171 * Val(8192))) + (x172 * Val(16384))) + (x173 * Val(32768))) +
                  (x174 * Val(65536))) +
                 (x175 * Val(131072))) +
                (x176 * Val(262144)));
    EQZ((((x181 + (x177 * Val(524288))) + (x178 * Val(1048576))) - x62),
        "chi_minor1(zirgen/circuit/keccak/keccak.zir:714)");
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:726)
    ToBits_21_Struct x182 = exec_ToBits_21_(ctx, x128, LAYOUT_LOOKUP(x118, unpack_2nxp2));
    NondetRegStruct21Array x183 = x182._super;
    Val x184 = x183[0]._super;
    Val x185 = x183[1]._super;
    Val x186 = x183[2]._super;
    Val x187 = x183[3]._super;
    Val x188 = x183[4]._super;
    Val x189 = x183[5]._super;
    Val x190 = x183[6]._super;
    Val x191 = x183[7]._super;
    Val x192 = x183[8]._super;
    Val x193 = x183[9]._super;
    Val x194 = x183[10]._super;
    Val x195 = x183[11]._super;
    Val x196 = x183[12]._super;
    Val x197 = x183[13]._super;
    Val x198 = x183[14]._super;
    Val x199 = x183[15]._super;
    Val x200 = x183[16]._super;
    Val x201 = x183[17]._super;
    Val x202 = x183[18]._super;
    Val x203 = x183[19]._super;
    Val x204 = x183[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:727)
    Val x205 =
        ((((((x184 + (x185 * Val(2))) + (x186 * Val(4))) + (x187 * Val(8))) + (x188 * Val(16))) +
          (x189 * Val(32))) +
         (x190 * Val(64)));
    Val x206 = ((((((x205 + (x191 * Val(128))) + (x192 * Val(256))) + (x193 * Val(512))) +
                  (x194 * Val(1024))) +
                 (x195 * Val(2048))) +
                (x196 * Val(4096)));
    Val x207 = ((((((x206 + (x197 * Val(8192))) + (x198 * Val(16384))) + (x199 * Val(32768))) +
                  (x200 * Val(65536))) +
                 (x201 * Val(131072))) +
                (x202 * Val(262144)));
    EQZ((((x207 + (x203 * Val(524288))) + (x204 * Val(1048576))) - x128),
        "chi_minor1(zirgen/circuit/keccak/keccak.zir:727)");
    // andnxor(zirgen/circuit/keccak/keccak.zir:118)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:729)
    Val x208 = ((Val(1) - x158) * x184);
    Val x209 = ((Val(1) - x159) * x185);
    Val x210 = ((Val(1) - x160) * x186);
    Val x211 = ((Val(1) - x161) * x187);
    Val x212 = ((Val(1) - x162) * x188);
    Val x213 = ((Val(1) - x163) * x189);
    Val x214 = ((Val(1) - x164) * x190);
    Val x215 = ((Val(1) - x165) * x191);
    Val x216 = ((Val(1) - x166) * x192);
    Val x217 = ((Val(1) - x167) * x193);
    Val x218 = ((Val(1) - x168) * x194);
    Val x219 = ((Val(1) - x169) * x195);
    Val x220 = ((Val(1) - x170) * x196);
    Val x221 = ((Val(1) - x171) * x197);
    Val x222 = ((Val(1) - x172) * x198);
    Val x223 = ((Val(1) - x173) * x199);
    Val x224 = ((Val(1) - x174) * x200);
    Val x225 = ((Val(1) - x175) * x201);
    Val x226 = ((Val(1) - x176) * x202);
    Val x227 = ((Val(1) - x177) * x203);
    Val x228 = ((Val(1) - x178) * x204);
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:730)
    Val x229 = (((((x131 + x208) - ((x131 * Val(2)) * x208)) +
                  (((x132 + x209) - (x152 * x209)) * Val(2))) +
                 (((x133 + x210) - ((x133 * Val(2)) * x210)) * Val(4))) +
                (((x134 + x211) - ((x134 * Val(2)) * x211)) * Val(8)));
    Val x230 = (((x229 + (((x135 + x212) - ((x135 * Val(2)) * x212)) * Val(16))) +
                 (((x136 + x213) - ((x136 * Val(2)) * x213)) * Val(32))) +
                (((x137 + x214) - ((x137 * Val(2)) * x214)) * Val(64)));
    Val x231 = (((x230 + (((x138 + x215) - ((x138 * Val(2)) * x215)) * Val(128))) +
                 (((x139 + x216) - ((x139 * Val(2)) * x216)) * Val(256))) +
                (((x140 + x217) - ((x140 * Val(2)) * x217)) * Val(512)));
    Val x232 = (((x231 + (((x141 + x218) - ((x141 * Val(2)) * x218)) * Val(1024))) +
                 (((x142 + x219) - ((x142 * Val(2)) * x219)) * Val(2048))) +
                (((x143 + x220) - ((x143 * Val(2)) * x220)) * Val(4096)));
    Val x233 = (((x232 + (((x144 + x221) - ((x144 * Val(2)) * x221)) * Val(8192))) +
                 (((x145 + x222) - ((x145 * Val(2)) * x222)) * Val(16384))) +
                (((x146 + x223) - ((x146 * Val(2)) * x223)) * Val(32768)));
    Val x234 = (((x233 + (((x147 + x224) - ((x147 * Val(2)) * x224)) * Val(65536))) +
                 (((x148 + x225) - ((x148 * Val(2)) * x225)) * Val(131072))) +
                (((x149 + x226) - ((x149 * Val(2)) * x226)) * Val(262144)));
    NondetRegStruct x235 =
        exec_Reg(ctx,
                 ((x234 + (((x150 + x227) - ((x150 * Val(2)) * x227)) * Val(524288))) +
                  (((x151 + x228) - ((x151 * Val(2)) * x228)) * Val(1048576))),
                 LAYOUT_LOOKUP(x118, res3n));
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:733)
    RetTupleStruct x236 =
        exec_RetTuple(ctx,
                      x119,
                      x120,
                      x121,
                      x122,
                      x123,
                      Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), x235._super},
                      Val(2),
                      Val(12),
                      x124,
                      x125,
                      x126,
                      LAYOUT_LOOKUP(x118, _super));
  }
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:685)
  RetTupleStruct x237 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x237;
}
RetTupleStruct execChiMinor0_1__2_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<ChiMinor0_1__2_Layout> layout1) {
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:542)
  NondetRegStruct22Array x2 = arg0.arrB;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:546)
  Val x3 = x2[14]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:554)
  ToBits_22_Struct x4 = exec_ToBits_22_(ctx, x3, LAYOUT_LOOKUP(layout1, unpack_0xp1));
  NondetRegStruct22Array x5 = x4._super;
  Val x6 = x5[0]._super;
  Val x7 = x5[1]._super;
  Val x8 = x5[2]._super;
  Val x9 = x5[3]._super;
  Val x10 = x5[4]._super;
  Val x11 = x5[5]._super;
  Val x12 = x5[6]._super;
  Val x13 = x5[7]._super;
  Val x14 = x5[8]._super;
  Val x15 = x5[9]._super;
  Val x16 = x5[10]._super;
  Val x17 = x5[11]._super;
  Val x18 = x5[12]._super;
  Val x19 = x5[13]._super;
  Val x20 = x5[14]._super;
  Val x21 = x5[15]._super;
  Val x22 = x5[16]._super;
  Val x23 = x5[17]._super;
  Val x24 = x5[18]._super;
  Val x25 = x5[19]._super;
  Val x26 = x5[20]._super;
  Val x27 = x5[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:555)
  Val x28 = ((((((x6 + (x7 * Val(2))) + (x8 * Val(4))) + (x9 * Val(8))) + (x10 * Val(16))) +
              (x11 * Val(32))) +
             (x12 * Val(64)));
  Val x29 =
      ((((((x28 + (x13 * Val(128))) + (x14 * Val(256))) + (x15 * Val(512))) + (x16 * Val(1024))) +
        (x17 * Val(2048))) +
       (x18 * Val(4096)));
  Val x30 = ((((((x29 + (x19 * Val(8192))) + (x20 * Val(16384))) + (x21 * Val(32768))) +
               (x22 * Val(65536))) +
              (x23 * Val(131072))) +
             (x24 * Val(262144)));
  EQZ(((((x30 + (x25 * Val(524288))) + (x26 * Val(1048576))) + (x27 * Val(2097152))) - x3),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:555)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:559)
  Val x31 = x2[15]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:567)
  ToBits_21_Struct x32 = exec_ToBits_21_(ctx, x31, LAYOUT_LOOKUP(layout1, unpack_1xp1));
  NondetRegStruct21Array x33 = x32._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:568)
  Val x55 = ((((((x34 + (x35 * Val(2))) + (x36 * Val(4))) + (x37 * Val(8))) + (x38 * Val(16))) +
              (x39 * Val(32))) +
             (x40 * Val(64)));
  Val x56 =
      ((((((x55 + (x41 * Val(128))) + (x42 * Val(256))) + (x43 * Val(512))) + (x44 * Val(1024))) +
        (x45 * Val(2048))) +
       (x46 * Val(4096)));
  Val x57 = ((((((x56 + (x47 * Val(8192))) + (x48 * Val(16384))) + (x49 * Val(32768))) +
               (x50 * Val(65536))) +
              (x51 * Val(131072))) +
             (x52 * Val(262144)));
  EQZ((((x57 + (x53 * Val(524288))) + (x54 * Val(1048576))) - x31),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:568)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:573)
  Val x58 = x2[17]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:581)
  ToBits_22_Struct x59 = exec_ToBits_22_(ctx, x58, LAYOUT_LOOKUP(layout1, unpack_0xp2));
  NondetRegStruct22Array x60 = x59._super;
  Val x61 = x60[0]._super;
  Val x62 = x60[1]._super;
  Val x63 = x60[2]._super;
  Val x64 = x60[3]._super;
  Val x65 = x60[4]._super;
  Val x66 = x60[5]._super;
  Val x67 = x60[6]._super;
  Val x68 = x60[7]._super;
  Val x69 = x60[8]._super;
  Val x70 = x60[9]._super;
  Val x71 = x60[10]._super;
  Val x72 = x60[11]._super;
  Val x73 = x60[12]._super;
  Val x74 = x60[13]._super;
  Val x75 = x60[14]._super;
  Val x76 = x60[15]._super;
  Val x77 = x60[16]._super;
  Val x78 = x60[17]._super;
  Val x79 = x60[18]._super;
  Val x80 = x60[19]._super;
  Val x81 = x60[20]._super;
  Val x82 = x60[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:582)
  Val x83 = ((((((x61 + (x62 * Val(2))) + (x63 * Val(4))) + (x64 * Val(8))) + (x65 * Val(16))) +
              (x66 * Val(32))) +
             (x67 * Val(64)));
  Val x84 =
      ((((((x83 + (x68 * Val(128))) + (x69 * Val(256))) + (x70 * Val(512))) + (x71 * Val(1024))) +
        (x72 * Val(2048))) +
       (x73 * Val(4096)));
  Val x85 = ((((((x84 + (x74 * Val(8192))) + (x75 * Val(16384))) + (x76 * Val(32768))) +
               (x77 * Val(65536))) +
              (x78 * Val(131072))) +
             (x79 * Val(262144)));
  EQZ(((((x85 + (x80 * Val(524288))) + (x81 * Val(1048576))) + (x82 * Val(2097152))) - x58),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:582)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:586)
  Val x86 = x2[18]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:594)
  ToBits_21_Struct x87 = exec_ToBits_21_(ctx, x86, LAYOUT_LOOKUP(layout1, unpack_1xp2));
  NondetRegStruct21Array x88 = x87._super;
  Val x89 = x88[0]._super;
  Val x90 = x88[1]._super;
  Val x91 = x88[2]._super;
  Val x92 = x88[3]._super;
  Val x93 = x88[4]._super;
  Val x94 = x88[5]._super;
  Val x95 = x88[6]._super;
  Val x96 = x88[7]._super;
  Val x97 = x88[8]._super;
  Val x98 = x88[9]._super;
  Val x99 = x88[10]._super;
  Val x100 = x88[11]._super;
  Val x101 = x88[12]._super;
  Val x102 = x88[13]._super;
  Val x103 = x88[14]._super;
  Val x104 = x88[15]._super;
  Val x105 = x88[16]._super;
  Val x106 = x88[17]._super;
  Val x107 = x88[18]._super;
  Val x108 = x88[19]._super;
  Val x109 = x88[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:595)
  Val x110 = ((((((x89 + (x90 * Val(2))) + (x91 * Val(4))) + (x92 * Val(8))) + (x93 * Val(16))) +
               (x94 * Val(32))) +
              (x95 * Val(64)));
  Val x111 =
      ((((((x110 + (x96 * Val(128))) + (x97 * Val(256))) + (x98 * Val(512))) + (x99 * Val(1024))) +
        (x100 * Val(2048))) +
       (x101 * Val(4096)));
  Val x112 = ((((((x111 + (x102 * Val(8192))) + (x103 * Val(16384))) + (x104 * Val(32768))) +
                (x105 * Val(65536))) +
               (x106 * Val(131072))) +
              (x107 * Val(262144)));
  EQZ((((x112 + (x108 * Val(524288))) + (x109 * Val(1048576))) - x86),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:595)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:599)
  Val x113 = x2[11]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:607)
  ToBits_22_Struct x114 = exec_ToBits_22_(ctx, x113, LAYOUT_LOOKUP(layout1, unpack_0x));
  NondetRegStruct22Array x115 = x114._super;
  Val x116 = x115[0]._super;
  Val x117 = x115[1]._super;
  Val x118 = x115[2]._super;
  Val x119 = x115[3]._super;
  Val x120 = x115[4]._super;
  Val x121 = x115[5]._super;
  Val x122 = x115[6]._super;
  Val x123 = x115[7]._super;
  Val x124 = x115[8]._super;
  Val x125 = x115[9]._super;
  Val x126 = x115[10]._super;
  Val x127 = x115[11]._super;
  Val x128 = x115[12]._super;
  Val x129 = x115[13]._super;
  Val x130 = x115[14]._super;
  Val x131 = x115[15]._super;
  Val x132 = x115[16]._super;
  Val x133 = x115[17]._super;
  Val x134 = x115[18]._super;
  Val x135 = x115[19]._super;
  Val x136 = x115[20]._super;
  Val x137 = x115[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:608)
  Val x138 = (x117 * Val(2));
  Val x139 = ((((((x116 + x138) + (x118 * Val(4))) + (x119 * Val(8))) + (x120 * Val(16))) +
               (x121 * Val(32))) +
              (x122 * Val(64)));
  Val x140 = ((((((x139 + (x123 * Val(128))) + (x124 * Val(256))) + (x125 * Val(512))) +
                (x126 * Val(1024))) +
               (x127 * Val(2048))) +
              (x128 * Val(4096)));
  Val x141 = ((((((x140 + (x129 * Val(8192))) + (x130 * Val(16384))) + (x131 * Val(32768))) +
                (x132 * Val(65536))) +
               (x133 * Val(131072))) +
              (x134 * Val(262144)));
  EQZ(((((x141 + (x135 * Val(524288))) + (x136 * Val(1048576))) + (x137 * Val(2097152))) - x113),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:608)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:612)
  Val x142 = x2[12]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:620)
  ToBits_21_Struct x143 = exec_ToBits_21_(ctx, x142, LAYOUT_LOOKUP(layout1, unpack_1x));
  NondetRegStruct21Array x144 = x143._super;
  Val x145 = x144[0]._super;
  Val x146 = x144[1]._super;
  Val x147 = x144[2]._super;
  Val x148 = x144[3]._super;
  Val x149 = x144[4]._super;
  Val x150 = x144[5]._super;
  Val x151 = x144[6]._super;
  Val x152 = x144[7]._super;
  Val x153 = x144[8]._super;
  Val x154 = x144[9]._super;
  Val x155 = x144[10]._super;
  Val x156 = x144[11]._super;
  Val x157 = x144[12]._super;
  Val x158 = x144[13]._super;
  Val x159 = x144[14]._super;
  Val x160 = x144[15]._super;
  Val x161 = x144[16]._super;
  Val x162 = x144[17]._super;
  Val x163 = x144[18]._super;
  Val x164 = x144[19]._super;
  Val x165 = x144[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:621)
  Val x166 = (x146 * Val(2));
  Val x167 = ((((((x145 + x166) + (x147 * Val(4))) + (x148 * Val(8))) + (x149 * Val(16))) +
               (x150 * Val(32))) +
              (x151 * Val(64)));
  Val x168 = ((((((x167 + (x152 * Val(128))) + (x153 * Val(256))) + (x154 * Val(512))) +
                (x155 * Val(1024))) +
               (x156 * Val(2048))) +
              (x157 * Val(4096)));
  Val x169 = ((((((x168 + (x158 * Val(8192))) + (x159 * Val(16384))) + (x160 * Val(32768))) +
                (x161 * Val(65536))) +
               (x162 * Val(131072))) +
              (x163 * Val(262144)));
  EQZ((((x169 + (x164 * Val(524288))) + (x165 * Val(1048576))) - x142),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:621)");
  // andnxor(zirgen/circuit/keccak/keccak.zir:118)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:623)
  Val x170 = ((Val(1) - x6) * x61);
  Val x171 = ((Val(1) - x7) * x62);
  Val x172 = ((Val(1) - x8) * x63);
  Val x173 = ((Val(1) - x9) * x64);
  Val x174 = ((Val(1) - x10) * x65);
  Val x175 = ((Val(1) - x11) * x66);
  Val x176 = ((Val(1) - x12) * x67);
  Val x177 = ((Val(1) - x13) * x68);
  Val x178 = ((Val(1) - x14) * x69);
  Val x179 = ((Val(1) - x15) * x70);
  Val x180 = ((Val(1) - x16) * x71);
  Val x181 = ((Val(1) - x17) * x72);
  Val x182 = ((Val(1) - x18) * x73);
  Val x183 = ((Val(1) - x19) * x74);
  Val x184 = ((Val(1) - x20) * x75);
  Val x185 = ((Val(1) - x21) * x76);
  Val x186 = ((Val(1) - x22) * x77);
  Val x187 = ((Val(1) - x23) * x78);
  Val x188 = ((Val(1) - x24) * x79);
  Val x189 = ((Val(1) - x25) * x80);
  Val x190 = ((Val(1) - x26) * x81);
  Val x191 = ((Val(1) - x27) * x82);
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:624)
  Val x192 = ((Val(1) - x34) * x89);
  Val x193 = ((Val(1) - x35) * x90);
  Val x194 = ((Val(1) - x36) * x91);
  Val x195 = ((Val(1) - x37) * x92);
  Val x196 = ((Val(1) - x38) * x93);
  Val x197 = ((Val(1) - x39) * x94);
  Val x198 = ((Val(1) - x40) * x95);
  Val x199 = ((Val(1) - x41) * x96);
  Val x200 = ((Val(1) - x42) * x97);
  Val x201 = ((Val(1) - x43) * x98);
  Val x202 = ((Val(1) - x44) * x99);
  Val x203 = ((Val(1) - x45) * x100);
  Val x204 = ((Val(1) - x46) * x101);
  Val x205 = ((Val(1) - x47) * x102);
  Val x206 = ((Val(1) - x48) * x103);
  Val x207 = ((Val(1) - x49) * x104);
  Val x208 = ((Val(1) - x50) * x105);
  Val x209 = ((Val(1) - x51) * x106);
  Val x210 = ((Val(1) - x52) * x107);
  Val x211 = ((Val(1) - x53) * x108);
  Val x212 = ((Val(1) - x54) * x109);
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:625)
  Val x213 =
      (((((x116 + x170) - ((x116 * Val(2)) * x170)) + (((x117 + x171) - (x138 * x171)) * Val(2))) +
        (((x118 + x172) - ((x118 * Val(2)) * x172)) * Val(4))) +
       (((x119 + x173) - ((x119 * Val(2)) * x173)) * Val(8)));
  Val x214 = (((x213 + (((x120 + x174) - ((x120 * Val(2)) * x174)) * Val(16))) +
               (((x121 + x175) - ((x121 * Val(2)) * x175)) * Val(32))) +
              (((x122 + x176) - ((x122 * Val(2)) * x176)) * Val(64)));
  Val x215 = (((x214 + (((x123 + x177) - ((x123 * Val(2)) * x177)) * Val(128))) +
               (((x124 + x178) - ((x124 * Val(2)) * x178)) * Val(256))) +
              (((x125 + x179) - ((x125 * Val(2)) * x179)) * Val(512)));
  Val x216 = (((x215 + (((x126 + x180) - ((x126 * Val(2)) * x180)) * Val(1024))) +
               (((x127 + x181) - ((x127 * Val(2)) * x181)) * Val(2048))) +
              (((x128 + x182) - ((x128 * Val(2)) * x182)) * Val(4096)));
  Val x217 = (((x216 + (((x129 + x183) - ((x129 * Val(2)) * x183)) * Val(8192))) +
               (((x130 + x184) - ((x130 * Val(2)) * x184)) * Val(16384))) +
              (((x131 + x185) - ((x131 * Val(2)) * x185)) * Val(32768)));
  Val x218 = (((x217 + (((x132 + x186) - ((x132 * Val(2)) * x186)) * Val(65536))) +
               (((x133 + x187) - ((x133 * Val(2)) * x187)) * Val(131072))) +
              (((x134 + x188) - ((x134 * Val(2)) * x188)) * Val(262144)));
  Val x219 = (((x218 + (((x135 + x189) - ((x135 * Val(2)) * x189)) * Val(524288))) +
               (((x136 + x190) - ((x136 * Val(2)) * x190)) * Val(1048576))) +
              (((x137 + x191) - ((x137 * Val(2)) * x191)) * Val(2097152)));
  NondetRegStruct x220 = exec_Reg(ctx, x219, LAYOUT_LOOKUP(layout1, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  Val x221 =
      (((((x145 + x192) - ((x145 * Val(2)) * x192)) + (((x146 + x193) - (x166 * x193)) * Val(2))) +
        (((x147 + x194) - ((x147 * Val(2)) * x194)) * Val(4))) +
       (((x148 + x195) - ((x148 * Val(2)) * x195)) * Val(8)));
  Val x222 = (((x221 + (((x149 + x196) - ((x149 * Val(2)) * x196)) * Val(16))) +
               (((x150 + x197) - ((x150 * Val(2)) * x197)) * Val(32))) +
              (((x151 + x198) - ((x151 * Val(2)) * x198)) * Val(64)));
  Val x223 = (((x222 + (((x152 + x199) - ((x152 * Val(2)) * x199)) * Val(128))) +
               (((x153 + x200) - ((x153 * Val(2)) * x200)) * Val(256))) +
              (((x154 + x201) - ((x154 * Val(2)) * x201)) * Val(512)));
  Val x224 = (((x223 + (((x155 + x202) - ((x155 * Val(2)) * x202)) * Val(1024))) +
               (((x156 + x203) - ((x156 * Val(2)) * x203)) * Val(2048))) +
              (((x157 + x204) - ((x157 * Val(2)) * x204)) * Val(4096)));
  Val x225 = (((x224 + (((x158 + x205) - ((x158 * Val(2)) * x205)) * Val(8192))) +
               (((x159 + x206) - ((x159 * Val(2)) * x206)) * Val(16384))) +
              (((x160 + x207) - ((x160 * Val(2)) * x207)) * Val(32768)));
  Val x226 = (((x225 + (((x161 + x208) - ((x161 * Val(2)) * x208)) * Val(65536))) +
               (((x162 + x209) - ((x162 * Val(2)) * x209)) * Val(131072))) +
              (((x163 + x210) - ((x163 * Val(2)) * x210)) * Val(262144)));
  NondetRegStruct x227 =
      exec_Reg(ctx,
               ((x226 + (((x164 + x211) - ((x164 * Val(2)) * x211)) * Val(524288))) +
                (((x165 + x212) - ((x165 * Val(2)) * x212)) * Val(1048576))),
               LAYOUT_LOOKUP(layout1, _1));
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:630)
  Val22Array x228 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x229 = exec_RetTuple(
      ctx,
      x228,
      x228,
      x228,
      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), x220._super, x227._super},
      x228,
      x228,
      Val(3),
      Val(12),
      arg0.rnd._super,
      arg0.blk._super,
      arg0.midx._super,
      LAYOUT_LOOKUP(layout1, _super));
  return x229;
}
RetTupleStruct execChiMinor0_2__2_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<ChiMinor0_2__2_Layout> layout1) {
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:542)
  NondetRegStruct22Array x2 = arg0.arrB;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:546)
  Val x3 = x2[17]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:554)
  ToBits_22_Struct x4 = exec_ToBits_22_(ctx, x3, LAYOUT_LOOKUP(layout1, unpack_0xp1));
  NondetRegStruct22Array x5 = x4._super;
  Val x6 = x5[0]._super;
  Val x7 = x5[1]._super;
  Val x8 = x5[2]._super;
  Val x9 = x5[3]._super;
  Val x10 = x5[4]._super;
  Val x11 = x5[5]._super;
  Val x12 = x5[6]._super;
  Val x13 = x5[7]._super;
  Val x14 = x5[8]._super;
  Val x15 = x5[9]._super;
  Val x16 = x5[10]._super;
  Val x17 = x5[11]._super;
  Val x18 = x5[12]._super;
  Val x19 = x5[13]._super;
  Val x20 = x5[14]._super;
  Val x21 = x5[15]._super;
  Val x22 = x5[16]._super;
  Val x23 = x5[17]._super;
  Val x24 = x5[18]._super;
  Val x25 = x5[19]._super;
  Val x26 = x5[20]._super;
  Val x27 = x5[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:555)
  Val x28 = ((((((x6 + (x7 * Val(2))) + (x8 * Val(4))) + (x9 * Val(8))) + (x10 * Val(16))) +
              (x11 * Val(32))) +
             (x12 * Val(64)));
  Val x29 =
      ((((((x28 + (x13 * Val(128))) + (x14 * Val(256))) + (x15 * Val(512))) + (x16 * Val(1024))) +
        (x17 * Val(2048))) +
       (x18 * Val(4096)));
  Val x30 = ((((((x29 + (x19 * Val(8192))) + (x20 * Val(16384))) + (x21 * Val(32768))) +
               (x22 * Val(65536))) +
              (x23 * Val(131072))) +
             (x24 * Val(262144)));
  EQZ(((((x30 + (x25 * Val(524288))) + (x26 * Val(1048576))) + (x27 * Val(2097152))) - x3),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:555)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:559)
  Val x31 = x2[18]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:567)
  ToBits_21_Struct x32 = exec_ToBits_21_(ctx, x31, LAYOUT_LOOKUP(layout1, unpack_1xp1));
  NondetRegStruct21Array x33 = x32._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:568)
  Val x55 = ((((((x34 + (x35 * Val(2))) + (x36 * Val(4))) + (x37 * Val(8))) + (x38 * Val(16))) +
              (x39 * Val(32))) +
             (x40 * Val(64)));
  Val x56 =
      ((((((x55 + (x41 * Val(128))) + (x42 * Val(256))) + (x43 * Val(512))) + (x44 * Val(1024))) +
        (x45 * Val(2048))) +
       (x46 * Val(4096)));
  Val x57 = ((((((x56 + (x47 * Val(8192))) + (x48 * Val(16384))) + (x49 * Val(32768))) +
               (x50 * Val(65536))) +
              (x51 * Val(131072))) +
             (x52 * Val(262144)));
  EQZ((((x57 + (x53 * Val(524288))) + (x54 * Val(1048576))) - x31),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:568)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:573)
  Val x58 = x2[20]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:581)
  ToBits_22_Struct x59 = exec_ToBits_22_(ctx, x58, LAYOUT_LOOKUP(layout1, unpack_0xp2));
  NondetRegStruct22Array x60 = x59._super;
  Val x61 = x60[0]._super;
  Val x62 = x60[1]._super;
  Val x63 = x60[2]._super;
  Val x64 = x60[3]._super;
  Val x65 = x60[4]._super;
  Val x66 = x60[5]._super;
  Val x67 = x60[6]._super;
  Val x68 = x60[7]._super;
  Val x69 = x60[8]._super;
  Val x70 = x60[9]._super;
  Val x71 = x60[10]._super;
  Val x72 = x60[11]._super;
  Val x73 = x60[12]._super;
  Val x74 = x60[13]._super;
  Val x75 = x60[14]._super;
  Val x76 = x60[15]._super;
  Val x77 = x60[16]._super;
  Val x78 = x60[17]._super;
  Val x79 = x60[18]._super;
  Val x80 = x60[19]._super;
  Val x81 = x60[20]._super;
  Val x82 = x60[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:582)
  Val x83 = ((((((x61 + (x62 * Val(2))) + (x63 * Val(4))) + (x64 * Val(8))) + (x65 * Val(16))) +
              (x66 * Val(32))) +
             (x67 * Val(64)));
  Val x84 =
      ((((((x83 + (x68 * Val(128))) + (x69 * Val(256))) + (x70 * Val(512))) + (x71 * Val(1024))) +
        (x72 * Val(2048))) +
       (x73 * Val(4096)));
  Val x85 = ((((((x84 + (x74 * Val(8192))) + (x75 * Val(16384))) + (x76 * Val(32768))) +
               (x77 * Val(65536))) +
              (x78 * Val(131072))) +
             (x79 * Val(262144)));
  EQZ(((((x85 + (x80 * Val(524288))) + (x81 * Val(1048576))) + (x82 * Val(2097152))) - x58),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:582)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:586)
  Val x86 = x2[21]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:594)
  ToBits_21_Struct x87 = exec_ToBits_21_(ctx, x86, LAYOUT_LOOKUP(layout1, unpack_1xp2));
  NondetRegStruct21Array x88 = x87._super;
  Val x89 = x88[0]._super;
  Val x90 = x88[1]._super;
  Val x91 = x88[2]._super;
  Val x92 = x88[3]._super;
  Val x93 = x88[4]._super;
  Val x94 = x88[5]._super;
  Val x95 = x88[6]._super;
  Val x96 = x88[7]._super;
  Val x97 = x88[8]._super;
  Val x98 = x88[9]._super;
  Val x99 = x88[10]._super;
  Val x100 = x88[11]._super;
  Val x101 = x88[12]._super;
  Val x102 = x88[13]._super;
  Val x103 = x88[14]._super;
  Val x104 = x88[15]._super;
  Val x105 = x88[16]._super;
  Val x106 = x88[17]._super;
  Val x107 = x88[18]._super;
  Val x108 = x88[19]._super;
  Val x109 = x88[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:595)
  Val x110 = ((((((x89 + (x90 * Val(2))) + (x91 * Val(4))) + (x92 * Val(8))) + (x93 * Val(16))) +
               (x94 * Val(32))) +
              (x95 * Val(64)));
  Val x111 =
      ((((((x110 + (x96 * Val(128))) + (x97 * Val(256))) + (x98 * Val(512))) + (x99 * Val(1024))) +
        (x100 * Val(2048))) +
       (x101 * Val(4096)));
  Val x112 = ((((((x111 + (x102 * Val(8192))) + (x103 * Val(16384))) + (x104 * Val(32768))) +
                (x105 * Val(65536))) +
               (x106 * Val(131072))) +
              (x107 * Val(262144)));
  EQZ((((x112 + (x108 * Val(524288))) + (x109 * Val(1048576))) - x86),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:595)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:599)
  Val x113 = x2[14]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:607)
  ToBits_22_Struct x114 = exec_ToBits_22_(ctx, x113, LAYOUT_LOOKUP(layout1, unpack_0x));
  NondetRegStruct22Array x115 = x114._super;
  Val x116 = x115[0]._super;
  Val x117 = x115[1]._super;
  Val x118 = x115[2]._super;
  Val x119 = x115[3]._super;
  Val x120 = x115[4]._super;
  Val x121 = x115[5]._super;
  Val x122 = x115[6]._super;
  Val x123 = x115[7]._super;
  Val x124 = x115[8]._super;
  Val x125 = x115[9]._super;
  Val x126 = x115[10]._super;
  Val x127 = x115[11]._super;
  Val x128 = x115[12]._super;
  Val x129 = x115[13]._super;
  Val x130 = x115[14]._super;
  Val x131 = x115[15]._super;
  Val x132 = x115[16]._super;
  Val x133 = x115[17]._super;
  Val x134 = x115[18]._super;
  Val x135 = x115[19]._super;
  Val x136 = x115[20]._super;
  Val x137 = x115[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:608)
  Val x138 = (x117 * Val(2));
  Val x139 = ((((((x116 + x138) + (x118 * Val(4))) + (x119 * Val(8))) + (x120 * Val(16))) +
               (x121 * Val(32))) +
              (x122 * Val(64)));
  Val x140 = ((((((x139 + (x123 * Val(128))) + (x124 * Val(256))) + (x125 * Val(512))) +
                (x126 * Val(1024))) +
               (x127 * Val(2048))) +
              (x128 * Val(4096)));
  Val x141 = ((((((x140 + (x129 * Val(8192))) + (x130 * Val(16384))) + (x131 * Val(32768))) +
                (x132 * Val(65536))) +
               (x133 * Val(131072))) +
              (x134 * Val(262144)));
  EQZ(((((x141 + (x135 * Val(524288))) + (x136 * Val(1048576))) + (x137 * Val(2097152))) - x113),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:608)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:612)
  Val x142 = x2[15]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:620)
  ToBits_21_Struct x143 = exec_ToBits_21_(ctx, x142, LAYOUT_LOOKUP(layout1, unpack_1x));
  NondetRegStruct21Array x144 = x143._super;
  Val x145 = x144[0]._super;
  Val x146 = x144[1]._super;
  Val x147 = x144[2]._super;
  Val x148 = x144[3]._super;
  Val x149 = x144[4]._super;
  Val x150 = x144[5]._super;
  Val x151 = x144[6]._super;
  Val x152 = x144[7]._super;
  Val x153 = x144[8]._super;
  Val x154 = x144[9]._super;
  Val x155 = x144[10]._super;
  Val x156 = x144[11]._super;
  Val x157 = x144[12]._super;
  Val x158 = x144[13]._super;
  Val x159 = x144[14]._super;
  Val x160 = x144[15]._super;
  Val x161 = x144[16]._super;
  Val x162 = x144[17]._super;
  Val x163 = x144[18]._super;
  Val x164 = x144[19]._super;
  Val x165 = x144[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:621)
  Val x166 = (x146 * Val(2));
  Val x167 = ((((((x145 + x166) + (x147 * Val(4))) + (x148 * Val(8))) + (x149 * Val(16))) +
               (x150 * Val(32))) +
              (x151 * Val(64)));
  Val x168 = ((((((x167 + (x152 * Val(128))) + (x153 * Val(256))) + (x154 * Val(512))) +
                (x155 * Val(1024))) +
               (x156 * Val(2048))) +
              (x157 * Val(4096)));
  Val x169 = ((((((x168 + (x158 * Val(8192))) + (x159 * Val(16384))) + (x160 * Val(32768))) +
                (x161 * Val(65536))) +
               (x162 * Val(131072))) +
              (x163 * Val(262144)));
  EQZ((((x169 + (x164 * Val(524288))) + (x165 * Val(1048576))) - x142),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:621)");
  // andnxor(zirgen/circuit/keccak/keccak.zir:118)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:623)
  Val x170 = ((Val(1) - x6) * x61);
  Val x171 = ((Val(1) - x7) * x62);
  Val x172 = ((Val(1) - x8) * x63);
  Val x173 = ((Val(1) - x9) * x64);
  Val x174 = ((Val(1) - x10) * x65);
  Val x175 = ((Val(1) - x11) * x66);
  Val x176 = ((Val(1) - x12) * x67);
  Val x177 = ((Val(1) - x13) * x68);
  Val x178 = ((Val(1) - x14) * x69);
  Val x179 = ((Val(1) - x15) * x70);
  Val x180 = ((Val(1) - x16) * x71);
  Val x181 = ((Val(1) - x17) * x72);
  Val x182 = ((Val(1) - x18) * x73);
  Val x183 = ((Val(1) - x19) * x74);
  Val x184 = ((Val(1) - x20) * x75);
  Val x185 = ((Val(1) - x21) * x76);
  Val x186 = ((Val(1) - x22) * x77);
  Val x187 = ((Val(1) - x23) * x78);
  Val x188 = ((Val(1) - x24) * x79);
  Val x189 = ((Val(1) - x25) * x80);
  Val x190 = ((Val(1) - x26) * x81);
  Val x191 = ((Val(1) - x27) * x82);
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:624)
  Val x192 = ((Val(1) - x34) * x89);
  Val x193 = ((Val(1) - x35) * x90);
  Val x194 = ((Val(1) - x36) * x91);
  Val x195 = ((Val(1) - x37) * x92);
  Val x196 = ((Val(1) - x38) * x93);
  Val x197 = ((Val(1) - x39) * x94);
  Val x198 = ((Val(1) - x40) * x95);
  Val x199 = ((Val(1) - x41) * x96);
  Val x200 = ((Val(1) - x42) * x97);
  Val x201 = ((Val(1) - x43) * x98);
  Val x202 = ((Val(1) - x44) * x99);
  Val x203 = ((Val(1) - x45) * x100);
  Val x204 = ((Val(1) - x46) * x101);
  Val x205 = ((Val(1) - x47) * x102);
  Val x206 = ((Val(1) - x48) * x103);
  Val x207 = ((Val(1) - x49) * x104);
  Val x208 = ((Val(1) - x50) * x105);
  Val x209 = ((Val(1) - x51) * x106);
  Val x210 = ((Val(1) - x52) * x107);
  Val x211 = ((Val(1) - x53) * x108);
  Val x212 = ((Val(1) - x54) * x109);
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:625)
  Val x213 =
      (((((x116 + x170) - ((x116 * Val(2)) * x170)) + (((x117 + x171) - (x138 * x171)) * Val(2))) +
        (((x118 + x172) - ((x118 * Val(2)) * x172)) * Val(4))) +
       (((x119 + x173) - ((x119 * Val(2)) * x173)) * Val(8)));
  Val x214 = (((x213 + (((x120 + x174) - ((x120 * Val(2)) * x174)) * Val(16))) +
               (((x121 + x175) - ((x121 * Val(2)) * x175)) * Val(32))) +
              (((x122 + x176) - ((x122 * Val(2)) * x176)) * Val(64)));
  Val x215 = (((x214 + (((x123 + x177) - ((x123 * Val(2)) * x177)) * Val(128))) +
               (((x124 + x178) - ((x124 * Val(2)) * x178)) * Val(256))) +
              (((x125 + x179) - ((x125 * Val(2)) * x179)) * Val(512)));
  Val x216 = (((x215 + (((x126 + x180) - ((x126 * Val(2)) * x180)) * Val(1024))) +
               (((x127 + x181) - ((x127 * Val(2)) * x181)) * Val(2048))) +
              (((x128 + x182) - ((x128 * Val(2)) * x182)) * Val(4096)));
  Val x217 = (((x216 + (((x129 + x183) - ((x129 * Val(2)) * x183)) * Val(8192))) +
               (((x130 + x184) - ((x130 * Val(2)) * x184)) * Val(16384))) +
              (((x131 + x185) - ((x131 * Val(2)) * x185)) * Val(32768)));
  Val x218 = (((x217 + (((x132 + x186) - ((x132 * Val(2)) * x186)) * Val(65536))) +
               (((x133 + x187) - ((x133 * Val(2)) * x187)) * Val(131072))) +
              (((x134 + x188) - ((x134 * Val(2)) * x188)) * Val(262144)));
  Val x219 = (((x218 + (((x135 + x189) - ((x135 * Val(2)) * x189)) * Val(524288))) +
               (((x136 + x190) - ((x136 * Val(2)) * x190)) * Val(1048576))) +
              (((x137 + x191) - ((x137 * Val(2)) * x191)) * Val(2097152)));
  NondetRegStruct x220 = exec_Reg(ctx, x219, LAYOUT_LOOKUP(layout1, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  Val x221 =
      (((((x145 + x192) - ((x145 * Val(2)) * x192)) + (((x146 + x193) - (x166 * x193)) * Val(2))) +
        (((x147 + x194) - ((x147 * Val(2)) * x194)) * Val(4))) +
       (((x148 + x195) - ((x148 * Val(2)) * x195)) * Val(8)));
  Val x222 = (((x221 + (((x149 + x196) - ((x149 * Val(2)) * x196)) * Val(16))) +
               (((x150 + x197) - ((x150 * Val(2)) * x197)) * Val(32))) +
              (((x151 + x198) - ((x151 * Val(2)) * x198)) * Val(64)));
  Val x223 = (((x222 + (((x152 + x199) - ((x152 * Val(2)) * x199)) * Val(128))) +
               (((x153 + x200) - ((x153 * Val(2)) * x200)) * Val(256))) +
              (((x154 + x201) - ((x154 * Val(2)) * x201)) * Val(512)));
  Val x224 = (((x223 + (((x155 + x202) - ((x155 * Val(2)) * x202)) * Val(1024))) +
               (((x156 + x203) - ((x156 * Val(2)) * x203)) * Val(2048))) +
              (((x157 + x204) - ((x157 * Val(2)) * x204)) * Val(4096)));
  Val x225 = (((x224 + (((x158 + x205) - ((x158 * Val(2)) * x205)) * Val(8192))) +
               (((x159 + x206) - ((x159 * Val(2)) * x206)) * Val(16384))) +
              (((x160 + x207) - ((x160 * Val(2)) * x207)) * Val(32768)));
  Val x226 = (((x225 + (((x161 + x208) - ((x161 * Val(2)) * x208)) * Val(65536))) +
               (((x162 + x209) - ((x162 * Val(2)) * x209)) * Val(131072))) +
              (((x163 + x210) - ((x163 * Val(2)) * x210)) * Val(262144)));
  NondetRegStruct x227 =
      exec_Reg(ctx,
               ((x226 + (((x164 + x211) - ((x164 * Val(2)) * x211)) * Val(524288))) +
                (((x165 + x212) - ((x165 * Val(2)) * x212)) * Val(1048576))),
               LAYOUT_LOOKUP(layout1, _1));
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:630)
  Val22Array x228 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x229 = exec_RetTuple(
      ctx,
      x228,
      x228,
      x228,
      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), x220._super, x227._super},
      x228,
      x228,
      Val(4),
      Val(12),
      arg0.rnd._super,
      arg0.blk._super,
      arg0.midx._super,
      LAYOUT_LOOKUP(layout1, _super));
  return x229;
}
RetTupleStruct execChiMinor1_2__2_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<ChiMinor1_2__2_Layout> layout2) {
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:685)
  BoundLayout<ChiMinor1_2__2__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:635)
  RetTupleStruct x4 = back_RetTuple(ctx, 5, arg1);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:636)
  RetTupleStruct x5 = back_RetTuple(ctx, 1, arg1);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:635)
  NondetRegStruct22Array x6 = x4.arrB;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:640)
  Val x7 = x6[16]._super;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:648)
  ToBits_21_Struct x8 = exec_ToBits_21_(ctx, x7, LAYOUT_LOOKUP(layout2, unpack_2x));
  NondetRegStruct21Array x9 = x8._super;
  Val x10 = x9[0]._super;
  Val x11 = x9[1]._super;
  Val x12 = x9[2]._super;
  Val x13 = x9[3]._super;
  Val x14 = x9[4]._super;
  Val x15 = x9[5]._super;
  Val x16 = x9[6]._super;
  Val x17 = x9[7]._super;
  Val x18 = x9[8]._super;
  Val x19 = x9[9]._super;
  Val x20 = x9[10]._super;
  Val x21 = x9[11]._super;
  Val x22 = x9[12]._super;
  Val x23 = x9[13]._super;
  Val x24 = x9[14]._super;
  Val x25 = x9[15]._super;
  Val x26 = x9[16]._super;
  Val x27 = x9[17]._super;
  Val x28 = x9[18]._super;
  Val x29 = x9[19]._super;
  Val x30 = x9[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:649)
  Val x31 = (x11 * Val(2));
  Val x32 =
      ((((((x10 + x31) + (x12 * Val(4))) + (x13 * Val(8))) + (x14 * Val(16))) + (x15 * Val(32))) +
       (x16 * Val(64)));
  Val x33 =
      ((((((x32 + (x17 * Val(128))) + (x18 * Val(256))) + (x19 * Val(512))) + (x20 * Val(1024))) +
        (x21 * Val(2048))) +
       (x22 * Val(4096)));
  Val x34 = ((((((x33 + (x23 * Val(8192))) + (x24 * Val(16384))) + (x25 * Val(32768))) +
               (x26 * Val(65536))) +
              (x27 * Val(131072))) +
             (x28 * Val(262144)));
  EQZ((((x34 + (x29 * Val(524288))) + (x30 * Val(1048576))) - x7),
      "chi_minor1(zirgen/circuit/keccak/keccak.zir:649)");
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:654)
  Val x35 = x6[19]._super;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:662)
  ToBits_21_Struct x36 = exec_ToBits_21_(ctx, x35, LAYOUT_LOOKUP(layout2, unpack_2xp1));
  NondetRegStruct21Array x37 = x36._super;
  Val x38 = x37[0]._super;
  Val x39 = x37[1]._super;
  Val x40 = x37[2]._super;
  Val x41 = x37[3]._super;
  Val x42 = x37[4]._super;
  Val x43 = x37[5]._super;
  Val x44 = x37[6]._super;
  Val x45 = x37[7]._super;
  Val x46 = x37[8]._super;
  Val x47 = x37[9]._super;
  Val x48 = x37[10]._super;
  Val x49 = x37[11]._super;
  Val x50 = x37[12]._super;
  Val x51 = x37[13]._super;
  Val x52 = x37[14]._super;
  Val x53 = x37[15]._super;
  Val x54 = x37[16]._super;
  Val x55 = x37[17]._super;
  Val x56 = x37[18]._super;
  Val x57 = x37[19]._super;
  Val x58 = x37[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:663)
  Val x59 = ((((((x38 + (x39 * Val(2))) + (x40 * Val(4))) + (x41 * Val(8))) + (x42 * Val(16))) +
              (x43 * Val(32))) +
             (x44 * Val(64)));
  Val x60 =
      ((((((x59 + (x45 * Val(128))) + (x46 * Val(256))) + (x47 * Val(512))) + (x48 * Val(1024))) +
        (x49 * Val(2048))) +
       (x50 * Val(4096)));
  Val x61 = ((((((x60 + (x51 * Val(8192))) + (x52 * Val(16384))) + (x53 * Val(32768))) +
               (x54 * Val(65536))) +
              (x55 * Val(131072))) +
             (x56 * Val(262144)));
  EQZ((((x61 + (x57 * Val(524288))) + (x58 * Val(1048576))) - x35),
      "chi_minor1(zirgen/circuit/keccak/keccak.zir:663)");
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:667)
  Val x62 = x4.arrC[0]._super;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:675)
  ToBits_21_Struct x63 = exec_ToBits_21_(ctx, x62, LAYOUT_LOOKUP(layout2, unpack_2xp2));
  NondetRegStruct21Array x64 = x63._super;
  Val x65 = x64[0]._super;
  Val x66 = x64[1]._super;
  Val x67 = x64[2]._super;
  Val x68 = x64[3]._super;
  Val x69 = x64[4]._super;
  Val x70 = x64[5]._super;
  Val x71 = x64[6]._super;
  Val x72 = x64[7]._super;
  Val x73 = x64[8]._super;
  Val x74 = x64[9]._super;
  Val x75 = x64[10]._super;
  Val x76 = x64[11]._super;
  Val x77 = x64[12]._super;
  Val x78 = x64[13]._super;
  Val x79 = x64[14]._super;
  Val x80 = x64[15]._super;
  Val x81 = x64[16]._super;
  Val x82 = x64[17]._super;
  Val x83 = x64[18]._super;
  Val x84 = x64[19]._super;
  Val x85 = x64[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:676)
  Val x86 = ((((((x65 + (x66 * Val(2))) + (x67 * Val(4))) + (x68 * Val(8))) + (x69 * Val(16))) +
              (x70 * Val(32))) +
             (x71 * Val(64)));
  Val x87 =
      ((((((x86 + (x72 * Val(128))) + (x73 * Val(256))) + (x74 * Val(512))) + (x75 * Val(1024))) +
        (x76 * Val(2048))) +
       (x77 * Val(4096)));
  Val x88 = ((((((x87 + (x78 * Val(8192))) + (x79 * Val(16384))) + (x80 * Val(32768))) +
               (x81 * Val(65536))) +
              (x82 * Val(131072))) +
             (x83 * Val(262144)));
  EQZ((((x88 + (x84 * Val(524288))) + (x85 * Val(1048576))) - x62),
      "chi_minor1(zirgen/circuit/keccak/keccak.zir:676)");
  // andnxor(zirgen/circuit/keccak/keccak.zir:118)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:678)
  Val x89 = ((Val(1) - x38) * x65);
  Val x90 = ((Val(1) - x39) * x66);
  Val x91 = ((Val(1) - x40) * x67);
  Val x92 = ((Val(1) - x41) * x68);
  Val x93 = ((Val(1) - x42) * x69);
  Val x94 = ((Val(1) - x43) * x70);
  Val x95 = ((Val(1) - x44) * x71);
  Val x96 = ((Val(1) - x45) * x72);
  Val x97 = ((Val(1) - x46) * x73);
  Val x98 = ((Val(1) - x47) * x74);
  Val x99 = ((Val(1) - x48) * x75);
  Val x100 = ((Val(1) - x49) * x76);
  Val x101 = ((Val(1) - x50) * x77);
  Val x102 = ((Val(1) - x51) * x78);
  Val x103 = ((Val(1) - x52) * x79);
  Val x104 = ((Val(1) - x53) * x80);
  Val x105 = ((Val(1) - x54) * x81);
  Val x106 = ((Val(1) - x55) * x82);
  Val x107 = ((Val(1) - x56) * x83);
  Val x108 = ((Val(1) - x57) * x84);
  Val x109 = ((Val(1) - x58) * x85);
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:679)
  Val x110 = (((((x10 + x89) - ((x10 * Val(2)) * x89)) + (((x11 + x90) - (x31 * x90)) * Val(2))) +
               (((x12 + x91) - ((x12 * Val(2)) * x91)) * Val(4))) +
              (((x13 + x92) - ((x13 * Val(2)) * x92)) * Val(8)));
  Val x111 = (((x110 + (((x14 + x93) - ((x14 * Val(2)) * x93)) * Val(16))) +
               (((x15 + x94) - ((x15 * Val(2)) * x94)) * Val(32))) +
              (((x16 + x95) - ((x16 * Val(2)) * x95)) * Val(64)));
  Val x112 = (((x111 + (((x17 + x96) - ((x17 * Val(2)) * x96)) * Val(128))) +
               (((x18 + x97) - ((x18 * Val(2)) * x97)) * Val(256))) +
              (((x19 + x98) - ((x19 * Val(2)) * x98)) * Val(512)));
  Val x113 = (((x112 + (((x20 + x99) - ((x20 * Val(2)) * x99)) * Val(1024))) +
               (((x21 + x100) - ((x21 * Val(2)) * x100)) * Val(2048))) +
              (((x22 + x101) - ((x22 * Val(2)) * x101)) * Val(4096)));
  Val x114 = (((x113 + (((x23 + x102) - ((x23 * Val(2)) * x102)) * Val(8192))) +
               (((x24 + x103) - ((x24 * Val(2)) * x103)) * Val(16384))) +
              (((x25 + x104) - ((x25 * Val(2)) * x104)) * Val(32768)));
  Val x115 = (((x114 + (((x26 + x105) - ((x26 * Val(2)) * x105)) * Val(65536))) +
               (((x27 + x106) - ((x27 * Val(2)) * x106)) * Val(131072))) +
              (((x28 + x107) - ((x28 * Val(2)) * x107)) * Val(262144)));
  NondetRegStruct x116 =
      exec_Reg(ctx,
               ((x115 + (((x29 + x108) - ((x29 * Val(2)) * x108)) * Val(524288))) +
                (((x30 + x109) - ((x30 * Val(2)) * x109)) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, res3));
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:636)
  NondetRegStruct24Array x117 = x5.arrD;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:685)
  BoundLayout<ChiMinor1_2__2_Arm1_SuperLayout> x118 = LAYOUT_LOOKUP(x3, arm1);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:680)
  Val22Array x119 =
      Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), x117[22]._super};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:681)
  Val22Array x120 =
      Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), x117[23]._super};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:682)
  Val22Array x121 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), x116._super};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:686)
  Val24Array x122 = Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  Val22Array x123 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:636)
  Val x124 = x5.rnd._super;
  Val x125 = x5.blk._super;
  Val x126 = x5.midx._super;
  if (to_size_t(Val(0))) {
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:686)
    RetTupleStruct x127 = exec_RetTuple(ctx,
                                        x119,
                                        x120,
                                        x121,
                                        x122,
                                        x123,
                                        x123,
                                        Val(5),
                                        Val(12),
                                        x124,
                                        x125,
                                        x126,
                                        LAYOUT_LOOKUP(x3, arm0));
  }
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:718)
  Val x128 = x6[10]._super;
  if (to_size_t(Val(1))) {
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:699)
    ToBits_21_Struct x129 = exec_ToBits_21_(ctx, x35, LAYOUT_LOOKUP(x118, unpack_2nx));
    NondetRegStruct21Array x130 = x129._super;
    Val x131 = x130[0]._super;
    Val x132 = x130[1]._super;
    Val x133 = x130[2]._super;
    Val x134 = x130[3]._super;
    Val x135 = x130[4]._super;
    Val x136 = x130[5]._super;
    Val x137 = x130[6]._super;
    Val x138 = x130[7]._super;
    Val x139 = x130[8]._super;
    Val x140 = x130[9]._super;
    Val x141 = x130[10]._super;
    Val x142 = x130[11]._super;
    Val x143 = x130[12]._super;
    Val x144 = x130[13]._super;
    Val x145 = x130[14]._super;
    Val x146 = x130[15]._super;
    Val x147 = x130[16]._super;
    Val x148 = x130[17]._super;
    Val x149 = x130[18]._super;
    Val x150 = x130[19]._super;
    Val x151 = x130[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:700)
    Val x152 = (x132 * Val(2));
    Val x153 = ((((((x131 + x152) + (x133 * Val(4))) + (x134 * Val(8))) + (x135 * Val(16))) +
                 (x136 * Val(32))) +
                (x137 * Val(64)));
    Val x154 = ((((((x153 + (x138 * Val(128))) + (x139 * Val(256))) + (x140 * Val(512))) +
                  (x141 * Val(1024))) +
                 (x142 * Val(2048))) +
                (x143 * Val(4096)));
    Val x155 = ((((((x154 + (x144 * Val(8192))) + (x145 * Val(16384))) + (x146 * Val(32768))) +
                  (x147 * Val(65536))) +
                 (x148 * Val(131072))) +
                (x149 * Val(262144)));
    EQZ((((x155 + (x150 * Val(524288))) + (x151 * Val(1048576))) - x35),
        "chi_minor1(zirgen/circuit/keccak/keccak.zir:700)");
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:713)
    ToBits_21_Struct x156 = exec_ToBits_21_(ctx, x62, LAYOUT_LOOKUP(x118, unpack_2nxp1));
    NondetRegStruct21Array x157 = x156._super;
    Val x158 = x157[0]._super;
    Val x159 = x157[1]._super;
    Val x160 = x157[2]._super;
    Val x161 = x157[3]._super;
    Val x162 = x157[4]._super;
    Val x163 = x157[5]._super;
    Val x164 = x157[6]._super;
    Val x165 = x157[7]._super;
    Val x166 = x157[8]._super;
    Val x167 = x157[9]._super;
    Val x168 = x157[10]._super;
    Val x169 = x157[11]._super;
    Val x170 = x157[12]._super;
    Val x171 = x157[13]._super;
    Val x172 = x157[14]._super;
    Val x173 = x157[15]._super;
    Val x174 = x157[16]._super;
    Val x175 = x157[17]._super;
    Val x176 = x157[18]._super;
    Val x177 = x157[19]._super;
    Val x178 = x157[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:714)
    Val x179 =
        ((((((x158 + (x159 * Val(2))) + (x160 * Val(4))) + (x161 * Val(8))) + (x162 * Val(16))) +
          (x163 * Val(32))) +
         (x164 * Val(64)));
    Val x180 = ((((((x179 + (x165 * Val(128))) + (x166 * Val(256))) + (x167 * Val(512))) +
                  (x168 * Val(1024))) +
                 (x169 * Val(2048))) +
                (x170 * Val(4096)));
    Val x181 = ((((((x180 + (x171 * Val(8192))) + (x172 * Val(16384))) + (x173 * Val(32768))) +
                  (x174 * Val(65536))) +
                 (x175 * Val(131072))) +
                (x176 * Val(262144)));
    EQZ((((x181 + (x177 * Val(524288))) + (x178 * Val(1048576))) - x62),
        "chi_minor1(zirgen/circuit/keccak/keccak.zir:714)");
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:726)
    ToBits_21_Struct x182 = exec_ToBits_21_(ctx, x128, LAYOUT_LOOKUP(x118, unpack_2nxp2));
    NondetRegStruct21Array x183 = x182._super;
    Val x184 = x183[0]._super;
    Val x185 = x183[1]._super;
    Val x186 = x183[2]._super;
    Val x187 = x183[3]._super;
    Val x188 = x183[4]._super;
    Val x189 = x183[5]._super;
    Val x190 = x183[6]._super;
    Val x191 = x183[7]._super;
    Val x192 = x183[8]._super;
    Val x193 = x183[9]._super;
    Val x194 = x183[10]._super;
    Val x195 = x183[11]._super;
    Val x196 = x183[12]._super;
    Val x197 = x183[13]._super;
    Val x198 = x183[14]._super;
    Val x199 = x183[15]._super;
    Val x200 = x183[16]._super;
    Val x201 = x183[17]._super;
    Val x202 = x183[18]._super;
    Val x203 = x183[19]._super;
    Val x204 = x183[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:727)
    Val x205 =
        ((((((x184 + (x185 * Val(2))) + (x186 * Val(4))) + (x187 * Val(8))) + (x188 * Val(16))) +
          (x189 * Val(32))) +
         (x190 * Val(64)));
    Val x206 = ((((((x205 + (x191 * Val(128))) + (x192 * Val(256))) + (x193 * Val(512))) +
                  (x194 * Val(1024))) +
                 (x195 * Val(2048))) +
                (x196 * Val(4096)));
    Val x207 = ((((((x206 + (x197 * Val(8192))) + (x198 * Val(16384))) + (x199 * Val(32768))) +
                  (x200 * Val(65536))) +
                 (x201 * Val(131072))) +
                (x202 * Val(262144)));
    EQZ((((x207 + (x203 * Val(524288))) + (x204 * Val(1048576))) - x128),
        "chi_minor1(zirgen/circuit/keccak/keccak.zir:727)");
    // andnxor(zirgen/circuit/keccak/keccak.zir:118)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:729)
    Val x208 = ((Val(1) - x158) * x184);
    Val x209 = ((Val(1) - x159) * x185);
    Val x210 = ((Val(1) - x160) * x186);
    Val x211 = ((Val(1) - x161) * x187);
    Val x212 = ((Val(1) - x162) * x188);
    Val x213 = ((Val(1) - x163) * x189);
    Val x214 = ((Val(1) - x164) * x190);
    Val x215 = ((Val(1) - x165) * x191);
    Val x216 = ((Val(1) - x166) * x192);
    Val x217 = ((Val(1) - x167) * x193);
    Val x218 = ((Val(1) - x168) * x194);
    Val x219 = ((Val(1) - x169) * x195);
    Val x220 = ((Val(1) - x170) * x196);
    Val x221 = ((Val(1) - x171) * x197);
    Val x222 = ((Val(1) - x172) * x198);
    Val x223 = ((Val(1) - x173) * x199);
    Val x224 = ((Val(1) - x174) * x200);
    Val x225 = ((Val(1) - x175) * x201);
    Val x226 = ((Val(1) - x176) * x202);
    Val x227 = ((Val(1) - x177) * x203);
    Val x228 = ((Val(1) - x178) * x204);
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:730)
    Val x229 = (((((x131 + x208) - ((x131 * Val(2)) * x208)) +
                  (((x132 + x209) - (x152 * x209)) * Val(2))) +
                 (((x133 + x210) - ((x133 * Val(2)) * x210)) * Val(4))) +
                (((x134 + x211) - ((x134 * Val(2)) * x211)) * Val(8)));
    Val x230 = (((x229 + (((x135 + x212) - ((x135 * Val(2)) * x212)) * Val(16))) +
                 (((x136 + x213) - ((x136 * Val(2)) * x213)) * Val(32))) +
                (((x137 + x214) - ((x137 * Val(2)) * x214)) * Val(64)));
    Val x231 = (((x230 + (((x138 + x215) - ((x138 * Val(2)) * x215)) * Val(128))) +
                 (((x139 + x216) - ((x139 * Val(2)) * x216)) * Val(256))) +
                (((x140 + x217) - ((x140 * Val(2)) * x217)) * Val(512)));
    Val x232 = (((x231 + (((x141 + x218) - ((x141 * Val(2)) * x218)) * Val(1024))) +
                 (((x142 + x219) - ((x142 * Val(2)) * x219)) * Val(2048))) +
                (((x143 + x220) - ((x143 * Val(2)) * x220)) * Val(4096)));
    Val x233 = (((x232 + (((x144 + x221) - ((x144 * Val(2)) * x221)) * Val(8192))) +
                 (((x145 + x222) - ((x145 * Val(2)) * x222)) * Val(16384))) +
                (((x146 + x223) - ((x146 * Val(2)) * x223)) * Val(32768)));
    Val x234 = (((x233 + (((x147 + x224) - ((x147 * Val(2)) * x224)) * Val(65536))) +
                 (((x148 + x225) - ((x148 * Val(2)) * x225)) * Val(131072))) +
                (((x149 + x226) - ((x149 * Val(2)) * x226)) * Val(262144)));
    NondetRegStruct x235 =
        exec_Reg(ctx,
                 ((x234 + (((x150 + x227) - ((x150 * Val(2)) * x227)) * Val(524288))) +
                  (((x151 + x228) - ((x151 * Val(2)) * x228)) * Val(1048576))),
                 LAYOUT_LOOKUP(x118, res3n));
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:733)
    RetTupleStruct x236 =
        exec_RetTuple(ctx,
                      x119,
                      x120,
                      x121,
                      x122,
                      x123,
                      Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), x235._super},
                      Val(5),
                      Val(12),
                      x124,
                      x125,
                      x126,
                      LAYOUT_LOOKUP(x118, _super));
  }
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:685)
  RetTupleStruct x237 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x237;
}
RetTupleStruct execChiMinor0_3__2_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<ChiMinor0_3__2_Layout> layout1) {
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:542)
  NondetRegStruct22Array x2 = arg0.arrB;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:546)
  Val x3 = x2[20]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:554)
  ToBits_22_Struct x4 = exec_ToBits_22_(ctx, x3, LAYOUT_LOOKUP(layout1, unpack_0xp1));
  NondetRegStruct22Array x5 = x4._super;
  Val x6 = x5[0]._super;
  Val x7 = x5[1]._super;
  Val x8 = x5[2]._super;
  Val x9 = x5[3]._super;
  Val x10 = x5[4]._super;
  Val x11 = x5[5]._super;
  Val x12 = x5[6]._super;
  Val x13 = x5[7]._super;
  Val x14 = x5[8]._super;
  Val x15 = x5[9]._super;
  Val x16 = x5[10]._super;
  Val x17 = x5[11]._super;
  Val x18 = x5[12]._super;
  Val x19 = x5[13]._super;
  Val x20 = x5[14]._super;
  Val x21 = x5[15]._super;
  Val x22 = x5[16]._super;
  Val x23 = x5[17]._super;
  Val x24 = x5[18]._super;
  Val x25 = x5[19]._super;
  Val x26 = x5[20]._super;
  Val x27 = x5[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:555)
  Val x28 = ((((((x6 + (x7 * Val(2))) + (x8 * Val(4))) + (x9 * Val(8))) + (x10 * Val(16))) +
              (x11 * Val(32))) +
             (x12 * Val(64)));
  Val x29 =
      ((((((x28 + (x13 * Val(128))) + (x14 * Val(256))) + (x15 * Val(512))) + (x16 * Val(1024))) +
        (x17 * Val(2048))) +
       (x18 * Val(4096)));
  Val x30 = ((((((x29 + (x19 * Val(8192))) + (x20 * Val(16384))) + (x21 * Val(32768))) +
               (x22 * Val(65536))) +
              (x23 * Val(131072))) +
             (x24 * Val(262144)));
  EQZ(((((x30 + (x25 * Val(524288))) + (x26 * Val(1048576))) + (x27 * Val(2097152))) - x3),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:555)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:559)
  Val x31 = x2[21]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:567)
  ToBits_21_Struct x32 = exec_ToBits_21_(ctx, x31, LAYOUT_LOOKUP(layout1, unpack_1xp1));
  NondetRegStruct21Array x33 = x32._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:568)
  Val x55 = ((((((x34 + (x35 * Val(2))) + (x36 * Val(4))) + (x37 * Val(8))) + (x38 * Val(16))) +
              (x39 * Val(32))) +
             (x40 * Val(64)));
  Val x56 =
      ((((((x55 + (x41 * Val(128))) + (x42 * Val(256))) + (x43 * Val(512))) + (x44 * Val(1024))) +
        (x45 * Val(2048))) +
       (x46 * Val(4096)));
  Val x57 = ((((((x56 + (x47 * Val(8192))) + (x48 * Val(16384))) + (x49 * Val(32768))) +
               (x50 * Val(65536))) +
              (x51 * Val(131072))) +
             (x52 * Val(262144)));
  EQZ((((x57 + (x53 * Val(524288))) + (x54 * Val(1048576))) - x31),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:568)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:573)
  Val x58 = x2[8]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:581)
  ToBits_22_Struct x59 = exec_ToBits_22_(ctx, x58, LAYOUT_LOOKUP(layout1, unpack_0xp2));
  NondetRegStruct22Array x60 = x59._super;
  Val x61 = x60[0]._super;
  Val x62 = x60[1]._super;
  Val x63 = x60[2]._super;
  Val x64 = x60[3]._super;
  Val x65 = x60[4]._super;
  Val x66 = x60[5]._super;
  Val x67 = x60[6]._super;
  Val x68 = x60[7]._super;
  Val x69 = x60[8]._super;
  Val x70 = x60[9]._super;
  Val x71 = x60[10]._super;
  Val x72 = x60[11]._super;
  Val x73 = x60[12]._super;
  Val x74 = x60[13]._super;
  Val x75 = x60[14]._super;
  Val x76 = x60[15]._super;
  Val x77 = x60[16]._super;
  Val x78 = x60[17]._super;
  Val x79 = x60[18]._super;
  Val x80 = x60[19]._super;
  Val x81 = x60[20]._super;
  Val x82 = x60[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:582)
  Val x83 = ((((((x61 + (x62 * Val(2))) + (x63 * Val(4))) + (x64 * Val(8))) + (x65 * Val(16))) +
              (x66 * Val(32))) +
             (x67 * Val(64)));
  Val x84 =
      ((((((x83 + (x68 * Val(128))) + (x69 * Val(256))) + (x70 * Val(512))) + (x71 * Val(1024))) +
        (x72 * Val(2048))) +
       (x73 * Val(4096)));
  Val x85 = ((((((x84 + (x74 * Val(8192))) + (x75 * Val(16384))) + (x76 * Val(32768))) +
               (x77 * Val(65536))) +
              (x78 * Val(131072))) +
             (x79 * Val(262144)));
  EQZ(((((x85 + (x80 * Val(524288))) + (x81 * Val(1048576))) + (x82 * Val(2097152))) - x58),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:582)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:586)
  Val x86 = x2[9]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:594)
  ToBits_21_Struct x87 = exec_ToBits_21_(ctx, x86, LAYOUT_LOOKUP(layout1, unpack_1xp2));
  NondetRegStruct21Array x88 = x87._super;
  Val x89 = x88[0]._super;
  Val x90 = x88[1]._super;
  Val x91 = x88[2]._super;
  Val x92 = x88[3]._super;
  Val x93 = x88[4]._super;
  Val x94 = x88[5]._super;
  Val x95 = x88[6]._super;
  Val x96 = x88[7]._super;
  Val x97 = x88[8]._super;
  Val x98 = x88[9]._super;
  Val x99 = x88[10]._super;
  Val x100 = x88[11]._super;
  Val x101 = x88[12]._super;
  Val x102 = x88[13]._super;
  Val x103 = x88[14]._super;
  Val x104 = x88[15]._super;
  Val x105 = x88[16]._super;
  Val x106 = x88[17]._super;
  Val x107 = x88[18]._super;
  Val x108 = x88[19]._super;
  Val x109 = x88[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:595)
  Val x110 = ((((((x89 + (x90 * Val(2))) + (x91 * Val(4))) + (x92 * Val(8))) + (x93 * Val(16))) +
               (x94 * Val(32))) +
              (x95 * Val(64)));
  Val x111 =
      ((((((x110 + (x96 * Val(128))) + (x97 * Val(256))) + (x98 * Val(512))) + (x99 * Val(1024))) +
        (x100 * Val(2048))) +
       (x101 * Val(4096)));
  Val x112 = ((((((x111 + (x102 * Val(8192))) + (x103 * Val(16384))) + (x104 * Val(32768))) +
                (x105 * Val(65536))) +
               (x106 * Val(131072))) +
              (x107 * Val(262144)));
  EQZ((((x112 + (x108 * Val(524288))) + (x109 * Val(1048576))) - x86),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:595)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:599)
  Val x113 = x2[17]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:607)
  ToBits_22_Struct x114 = exec_ToBits_22_(ctx, x113, LAYOUT_LOOKUP(layout1, unpack_0x));
  NondetRegStruct22Array x115 = x114._super;
  Val x116 = x115[0]._super;
  Val x117 = x115[1]._super;
  Val x118 = x115[2]._super;
  Val x119 = x115[3]._super;
  Val x120 = x115[4]._super;
  Val x121 = x115[5]._super;
  Val x122 = x115[6]._super;
  Val x123 = x115[7]._super;
  Val x124 = x115[8]._super;
  Val x125 = x115[9]._super;
  Val x126 = x115[10]._super;
  Val x127 = x115[11]._super;
  Val x128 = x115[12]._super;
  Val x129 = x115[13]._super;
  Val x130 = x115[14]._super;
  Val x131 = x115[15]._super;
  Val x132 = x115[16]._super;
  Val x133 = x115[17]._super;
  Val x134 = x115[18]._super;
  Val x135 = x115[19]._super;
  Val x136 = x115[20]._super;
  Val x137 = x115[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:608)
  Val x138 = (x117 * Val(2));
  Val x139 = ((((((x116 + x138) + (x118 * Val(4))) + (x119 * Val(8))) + (x120 * Val(16))) +
               (x121 * Val(32))) +
              (x122 * Val(64)));
  Val x140 = ((((((x139 + (x123 * Val(128))) + (x124 * Val(256))) + (x125 * Val(512))) +
                (x126 * Val(1024))) +
               (x127 * Val(2048))) +
              (x128 * Val(4096)));
  Val x141 = ((((((x140 + (x129 * Val(8192))) + (x130 * Val(16384))) + (x131 * Val(32768))) +
                (x132 * Val(65536))) +
               (x133 * Val(131072))) +
              (x134 * Val(262144)));
  EQZ(((((x141 + (x135 * Val(524288))) + (x136 * Val(1048576))) + (x137 * Val(2097152))) - x113),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:608)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:612)
  Val x142 = x2[18]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:620)
  ToBits_21_Struct x143 = exec_ToBits_21_(ctx, x142, LAYOUT_LOOKUP(layout1, unpack_1x));
  NondetRegStruct21Array x144 = x143._super;
  Val x145 = x144[0]._super;
  Val x146 = x144[1]._super;
  Val x147 = x144[2]._super;
  Val x148 = x144[3]._super;
  Val x149 = x144[4]._super;
  Val x150 = x144[5]._super;
  Val x151 = x144[6]._super;
  Val x152 = x144[7]._super;
  Val x153 = x144[8]._super;
  Val x154 = x144[9]._super;
  Val x155 = x144[10]._super;
  Val x156 = x144[11]._super;
  Val x157 = x144[12]._super;
  Val x158 = x144[13]._super;
  Val x159 = x144[14]._super;
  Val x160 = x144[15]._super;
  Val x161 = x144[16]._super;
  Val x162 = x144[17]._super;
  Val x163 = x144[18]._super;
  Val x164 = x144[19]._super;
  Val x165 = x144[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:621)
  Val x166 = (x146 * Val(2));
  Val x167 = ((((((x145 + x166) + (x147 * Val(4))) + (x148 * Val(8))) + (x149 * Val(16))) +
               (x150 * Val(32))) +
              (x151 * Val(64)));
  Val x168 = ((((((x167 + (x152 * Val(128))) + (x153 * Val(256))) + (x154 * Val(512))) +
                (x155 * Val(1024))) +
               (x156 * Val(2048))) +
              (x157 * Val(4096)));
  Val x169 = ((((((x168 + (x158 * Val(8192))) + (x159 * Val(16384))) + (x160 * Val(32768))) +
                (x161 * Val(65536))) +
               (x162 * Val(131072))) +
              (x163 * Val(262144)));
  EQZ((((x169 + (x164 * Val(524288))) + (x165 * Val(1048576))) - x142),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:621)");
  // andnxor(zirgen/circuit/keccak/keccak.zir:118)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:623)
  Val x170 = ((Val(1) - x6) * x61);
  Val x171 = ((Val(1) - x7) * x62);
  Val x172 = ((Val(1) - x8) * x63);
  Val x173 = ((Val(1) - x9) * x64);
  Val x174 = ((Val(1) - x10) * x65);
  Val x175 = ((Val(1) - x11) * x66);
  Val x176 = ((Val(1) - x12) * x67);
  Val x177 = ((Val(1) - x13) * x68);
  Val x178 = ((Val(1) - x14) * x69);
  Val x179 = ((Val(1) - x15) * x70);
  Val x180 = ((Val(1) - x16) * x71);
  Val x181 = ((Val(1) - x17) * x72);
  Val x182 = ((Val(1) - x18) * x73);
  Val x183 = ((Val(1) - x19) * x74);
  Val x184 = ((Val(1) - x20) * x75);
  Val x185 = ((Val(1) - x21) * x76);
  Val x186 = ((Val(1) - x22) * x77);
  Val x187 = ((Val(1) - x23) * x78);
  Val x188 = ((Val(1) - x24) * x79);
  Val x189 = ((Val(1) - x25) * x80);
  Val x190 = ((Val(1) - x26) * x81);
  Val x191 = ((Val(1) - x27) * x82);
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:624)
  Val x192 = ((Val(1) - x34) * x89);
  Val x193 = ((Val(1) - x35) * x90);
  Val x194 = ((Val(1) - x36) * x91);
  Val x195 = ((Val(1) - x37) * x92);
  Val x196 = ((Val(1) - x38) * x93);
  Val x197 = ((Val(1) - x39) * x94);
  Val x198 = ((Val(1) - x40) * x95);
  Val x199 = ((Val(1) - x41) * x96);
  Val x200 = ((Val(1) - x42) * x97);
  Val x201 = ((Val(1) - x43) * x98);
  Val x202 = ((Val(1) - x44) * x99);
  Val x203 = ((Val(1) - x45) * x100);
  Val x204 = ((Val(1) - x46) * x101);
  Val x205 = ((Val(1) - x47) * x102);
  Val x206 = ((Val(1) - x48) * x103);
  Val x207 = ((Val(1) - x49) * x104);
  Val x208 = ((Val(1) - x50) * x105);
  Val x209 = ((Val(1) - x51) * x106);
  Val x210 = ((Val(1) - x52) * x107);
  Val x211 = ((Val(1) - x53) * x108);
  Val x212 = ((Val(1) - x54) * x109);
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:625)
  Val x213 =
      (((((x116 + x170) - ((x116 * Val(2)) * x170)) + (((x117 + x171) - (x138 * x171)) * Val(2))) +
        (((x118 + x172) - ((x118 * Val(2)) * x172)) * Val(4))) +
       (((x119 + x173) - ((x119 * Val(2)) * x173)) * Val(8)));
  Val x214 = (((x213 + (((x120 + x174) - ((x120 * Val(2)) * x174)) * Val(16))) +
               (((x121 + x175) - ((x121 * Val(2)) * x175)) * Val(32))) +
              (((x122 + x176) - ((x122 * Val(2)) * x176)) * Val(64)));
  Val x215 = (((x214 + (((x123 + x177) - ((x123 * Val(2)) * x177)) * Val(128))) +
               (((x124 + x178) - ((x124 * Val(2)) * x178)) * Val(256))) +
              (((x125 + x179) - ((x125 * Val(2)) * x179)) * Val(512)));
  Val x216 = (((x215 + (((x126 + x180) - ((x126 * Val(2)) * x180)) * Val(1024))) +
               (((x127 + x181) - ((x127 * Val(2)) * x181)) * Val(2048))) +
              (((x128 + x182) - ((x128 * Val(2)) * x182)) * Val(4096)));
  Val x217 = (((x216 + (((x129 + x183) - ((x129 * Val(2)) * x183)) * Val(8192))) +
               (((x130 + x184) - ((x130 * Val(2)) * x184)) * Val(16384))) +
              (((x131 + x185) - ((x131 * Val(2)) * x185)) * Val(32768)));
  Val x218 = (((x217 + (((x132 + x186) - ((x132 * Val(2)) * x186)) * Val(65536))) +
               (((x133 + x187) - ((x133 * Val(2)) * x187)) * Val(131072))) +
              (((x134 + x188) - ((x134 * Val(2)) * x188)) * Val(262144)));
  Val x219 = (((x218 + (((x135 + x189) - ((x135 * Val(2)) * x189)) * Val(524288))) +
               (((x136 + x190) - ((x136 * Val(2)) * x190)) * Val(1048576))) +
              (((x137 + x191) - ((x137 * Val(2)) * x191)) * Val(2097152)));
  NondetRegStruct x220 = exec_Reg(ctx, x219, LAYOUT_LOOKUP(layout1, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  Val x221 =
      (((((x145 + x192) - ((x145 * Val(2)) * x192)) + (((x146 + x193) - (x166 * x193)) * Val(2))) +
        (((x147 + x194) - ((x147 * Val(2)) * x194)) * Val(4))) +
       (((x148 + x195) - ((x148 * Val(2)) * x195)) * Val(8)));
  Val x222 = (((x221 + (((x149 + x196) - ((x149 * Val(2)) * x196)) * Val(16))) +
               (((x150 + x197) - ((x150 * Val(2)) * x197)) * Val(32))) +
              (((x151 + x198) - ((x151 * Val(2)) * x198)) * Val(64)));
  Val x223 = (((x222 + (((x152 + x199) - ((x152 * Val(2)) * x199)) * Val(128))) +
               (((x153 + x200) - ((x153 * Val(2)) * x200)) * Val(256))) +
              (((x154 + x201) - ((x154 * Val(2)) * x201)) * Val(512)));
  Val x224 = (((x223 + (((x155 + x202) - ((x155 * Val(2)) * x202)) * Val(1024))) +
               (((x156 + x203) - ((x156 * Val(2)) * x203)) * Val(2048))) +
              (((x157 + x204) - ((x157 * Val(2)) * x204)) * Val(4096)));
  Val x225 = (((x224 + (((x158 + x205) - ((x158 * Val(2)) * x205)) * Val(8192))) +
               (((x159 + x206) - ((x159 * Val(2)) * x206)) * Val(16384))) +
              (((x160 + x207) - ((x160 * Val(2)) * x207)) * Val(32768)));
  Val x226 = (((x225 + (((x161 + x208) - ((x161 * Val(2)) * x208)) * Val(65536))) +
               (((x162 + x209) - ((x162 * Val(2)) * x209)) * Val(131072))) +
              (((x163 + x210) - ((x163 * Val(2)) * x210)) * Val(262144)));
  NondetRegStruct x227 =
      exec_Reg(ctx,
               ((x226 + (((x164 + x211) - ((x164 * Val(2)) * x211)) * Val(524288))) +
                (((x165 + x212) - ((x165 * Val(2)) * x212)) * Val(1048576))),
               LAYOUT_LOOKUP(layout1, _1));
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:630)
  Val22Array x228 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x229 = exec_RetTuple(
      ctx,
      x228,
      x228,
      x228,
      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), x220._super, x227._super},
      x228,
      x228,
      Val(6),
      Val(12),
      arg0.rnd._super,
      arg0.blk._super,
      arg0.midx._super,
      LAYOUT_LOOKUP(layout1, _super));
  return x229;
}
RetTupleStruct execChiMinor0_4__2_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<ChiMinor0_4__2_Layout> layout1) {
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:542)
  NondetRegStruct22Array x2 = arg0.arrB;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:546)
  Val x3 = x2[8]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:554)
  ToBits_22_Struct x4 = exec_ToBits_22_(ctx, x3, LAYOUT_LOOKUP(layout1, unpack_0xp1));
  NondetRegStruct22Array x5 = x4._super;
  Val x6 = x5[0]._super;
  Val x7 = x5[1]._super;
  Val x8 = x5[2]._super;
  Val x9 = x5[3]._super;
  Val x10 = x5[4]._super;
  Val x11 = x5[5]._super;
  Val x12 = x5[6]._super;
  Val x13 = x5[7]._super;
  Val x14 = x5[8]._super;
  Val x15 = x5[9]._super;
  Val x16 = x5[10]._super;
  Val x17 = x5[11]._super;
  Val x18 = x5[12]._super;
  Val x19 = x5[13]._super;
  Val x20 = x5[14]._super;
  Val x21 = x5[15]._super;
  Val x22 = x5[16]._super;
  Val x23 = x5[17]._super;
  Val x24 = x5[18]._super;
  Val x25 = x5[19]._super;
  Val x26 = x5[20]._super;
  Val x27 = x5[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:555)
  Val x28 = ((((((x6 + (x7 * Val(2))) + (x8 * Val(4))) + (x9 * Val(8))) + (x10 * Val(16))) +
              (x11 * Val(32))) +
             (x12 * Val(64)));
  Val x29 =
      ((((((x28 + (x13 * Val(128))) + (x14 * Val(256))) + (x15 * Val(512))) + (x16 * Val(1024))) +
        (x17 * Val(2048))) +
       (x18 * Val(4096)));
  Val x30 = ((((((x29 + (x19 * Val(8192))) + (x20 * Val(16384))) + (x21 * Val(32768))) +
               (x22 * Val(65536))) +
              (x23 * Val(131072))) +
             (x24 * Val(262144)));
  EQZ(((((x30 + (x25 * Val(524288))) + (x26 * Val(1048576))) + (x27 * Val(2097152))) - x3),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:555)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:559)
  Val x31 = x2[9]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:567)
  ToBits_21_Struct x32 = exec_ToBits_21_(ctx, x31, LAYOUT_LOOKUP(layout1, unpack_1xp1));
  NondetRegStruct21Array x33 = x32._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:568)
  Val x55 = ((((((x34 + (x35 * Val(2))) + (x36 * Val(4))) + (x37 * Val(8))) + (x38 * Val(16))) +
              (x39 * Val(32))) +
             (x40 * Val(64)));
  Val x56 =
      ((((((x55 + (x41 * Val(128))) + (x42 * Val(256))) + (x43 * Val(512))) + (x44 * Val(1024))) +
        (x45 * Val(2048))) +
       (x46 * Val(4096)));
  Val x57 = ((((((x56 + (x47 * Val(8192))) + (x48 * Val(16384))) + (x49 * Val(32768))) +
               (x50 * Val(65536))) +
              (x51 * Val(131072))) +
             (x52 * Val(262144)));
  EQZ((((x57 + (x53 * Val(524288))) + (x54 * Val(1048576))) - x31),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:568)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:573)
  Val x58 = x2[11]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:581)
  ToBits_22_Struct x59 = exec_ToBits_22_(ctx, x58, LAYOUT_LOOKUP(layout1, unpack_0xp2));
  NondetRegStruct22Array x60 = x59._super;
  Val x61 = x60[0]._super;
  Val x62 = x60[1]._super;
  Val x63 = x60[2]._super;
  Val x64 = x60[3]._super;
  Val x65 = x60[4]._super;
  Val x66 = x60[5]._super;
  Val x67 = x60[6]._super;
  Val x68 = x60[7]._super;
  Val x69 = x60[8]._super;
  Val x70 = x60[9]._super;
  Val x71 = x60[10]._super;
  Val x72 = x60[11]._super;
  Val x73 = x60[12]._super;
  Val x74 = x60[13]._super;
  Val x75 = x60[14]._super;
  Val x76 = x60[15]._super;
  Val x77 = x60[16]._super;
  Val x78 = x60[17]._super;
  Val x79 = x60[18]._super;
  Val x80 = x60[19]._super;
  Val x81 = x60[20]._super;
  Val x82 = x60[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:582)
  Val x83 = ((((((x61 + (x62 * Val(2))) + (x63 * Val(4))) + (x64 * Val(8))) + (x65 * Val(16))) +
              (x66 * Val(32))) +
             (x67 * Val(64)));
  Val x84 =
      ((((((x83 + (x68 * Val(128))) + (x69 * Val(256))) + (x70 * Val(512))) + (x71 * Val(1024))) +
        (x72 * Val(2048))) +
       (x73 * Val(4096)));
  Val x85 = ((((((x84 + (x74 * Val(8192))) + (x75 * Val(16384))) + (x76 * Val(32768))) +
               (x77 * Val(65536))) +
              (x78 * Val(131072))) +
             (x79 * Val(262144)));
  EQZ(((((x85 + (x80 * Val(524288))) + (x81 * Val(1048576))) + (x82 * Val(2097152))) - x58),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:582)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:586)
  Val x86 = x2[12]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:594)
  ToBits_21_Struct x87 = exec_ToBits_21_(ctx, x86, LAYOUT_LOOKUP(layout1, unpack_1xp2));
  NondetRegStruct21Array x88 = x87._super;
  Val x89 = x88[0]._super;
  Val x90 = x88[1]._super;
  Val x91 = x88[2]._super;
  Val x92 = x88[3]._super;
  Val x93 = x88[4]._super;
  Val x94 = x88[5]._super;
  Val x95 = x88[6]._super;
  Val x96 = x88[7]._super;
  Val x97 = x88[8]._super;
  Val x98 = x88[9]._super;
  Val x99 = x88[10]._super;
  Val x100 = x88[11]._super;
  Val x101 = x88[12]._super;
  Val x102 = x88[13]._super;
  Val x103 = x88[14]._super;
  Val x104 = x88[15]._super;
  Val x105 = x88[16]._super;
  Val x106 = x88[17]._super;
  Val x107 = x88[18]._super;
  Val x108 = x88[19]._super;
  Val x109 = x88[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:595)
  Val x110 = ((((((x89 + (x90 * Val(2))) + (x91 * Val(4))) + (x92 * Val(8))) + (x93 * Val(16))) +
               (x94 * Val(32))) +
              (x95 * Val(64)));
  Val x111 =
      ((((((x110 + (x96 * Val(128))) + (x97 * Val(256))) + (x98 * Val(512))) + (x99 * Val(1024))) +
        (x100 * Val(2048))) +
       (x101 * Val(4096)));
  Val x112 = ((((((x111 + (x102 * Val(8192))) + (x103 * Val(16384))) + (x104 * Val(32768))) +
                (x105 * Val(65536))) +
               (x106 * Val(131072))) +
              (x107 * Val(262144)));
  EQZ((((x112 + (x108 * Val(524288))) + (x109 * Val(1048576))) - x86),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:595)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:599)
  Val x113 = x2[20]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:607)
  ToBits_22_Struct x114 = exec_ToBits_22_(ctx, x113, LAYOUT_LOOKUP(layout1, unpack_0x));
  NondetRegStruct22Array x115 = x114._super;
  Val x116 = x115[0]._super;
  Val x117 = x115[1]._super;
  Val x118 = x115[2]._super;
  Val x119 = x115[3]._super;
  Val x120 = x115[4]._super;
  Val x121 = x115[5]._super;
  Val x122 = x115[6]._super;
  Val x123 = x115[7]._super;
  Val x124 = x115[8]._super;
  Val x125 = x115[9]._super;
  Val x126 = x115[10]._super;
  Val x127 = x115[11]._super;
  Val x128 = x115[12]._super;
  Val x129 = x115[13]._super;
  Val x130 = x115[14]._super;
  Val x131 = x115[15]._super;
  Val x132 = x115[16]._super;
  Val x133 = x115[17]._super;
  Val x134 = x115[18]._super;
  Val x135 = x115[19]._super;
  Val x136 = x115[20]._super;
  Val x137 = x115[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:608)
  Val x138 = (x117 * Val(2));
  Val x139 = ((((((x116 + x138) + (x118 * Val(4))) + (x119 * Val(8))) + (x120 * Val(16))) +
               (x121 * Val(32))) +
              (x122 * Val(64)));
  Val x140 = ((((((x139 + (x123 * Val(128))) + (x124 * Val(256))) + (x125 * Val(512))) +
                (x126 * Val(1024))) +
               (x127 * Val(2048))) +
              (x128 * Val(4096)));
  Val x141 = ((((((x140 + (x129 * Val(8192))) + (x130 * Val(16384))) + (x131 * Val(32768))) +
                (x132 * Val(65536))) +
               (x133 * Val(131072))) +
              (x134 * Val(262144)));
  EQZ(((((x141 + (x135 * Val(524288))) + (x136 * Val(1048576))) + (x137 * Val(2097152))) - x113),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:608)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:612)
  Val x142 = x2[21]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:620)
  ToBits_21_Struct x143 = exec_ToBits_21_(ctx, x142, LAYOUT_LOOKUP(layout1, unpack_1x));
  NondetRegStruct21Array x144 = x143._super;
  Val x145 = x144[0]._super;
  Val x146 = x144[1]._super;
  Val x147 = x144[2]._super;
  Val x148 = x144[3]._super;
  Val x149 = x144[4]._super;
  Val x150 = x144[5]._super;
  Val x151 = x144[6]._super;
  Val x152 = x144[7]._super;
  Val x153 = x144[8]._super;
  Val x154 = x144[9]._super;
  Val x155 = x144[10]._super;
  Val x156 = x144[11]._super;
  Val x157 = x144[12]._super;
  Val x158 = x144[13]._super;
  Val x159 = x144[14]._super;
  Val x160 = x144[15]._super;
  Val x161 = x144[16]._super;
  Val x162 = x144[17]._super;
  Val x163 = x144[18]._super;
  Val x164 = x144[19]._super;
  Val x165 = x144[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:621)
  Val x166 = (x146 * Val(2));
  Val x167 = ((((((x145 + x166) + (x147 * Val(4))) + (x148 * Val(8))) + (x149 * Val(16))) +
               (x150 * Val(32))) +
              (x151 * Val(64)));
  Val x168 = ((((((x167 + (x152 * Val(128))) + (x153 * Val(256))) + (x154 * Val(512))) +
                (x155 * Val(1024))) +
               (x156 * Val(2048))) +
              (x157 * Val(4096)));
  Val x169 = ((((((x168 + (x158 * Val(8192))) + (x159 * Val(16384))) + (x160 * Val(32768))) +
                (x161 * Val(65536))) +
               (x162 * Val(131072))) +
              (x163 * Val(262144)));
  EQZ((((x169 + (x164 * Val(524288))) + (x165 * Val(1048576))) - x142),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:621)");
  // andnxor(zirgen/circuit/keccak/keccak.zir:118)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:623)
  Val x170 = ((Val(1) - x6) * x61);
  Val x171 = ((Val(1) - x7) * x62);
  Val x172 = ((Val(1) - x8) * x63);
  Val x173 = ((Val(1) - x9) * x64);
  Val x174 = ((Val(1) - x10) * x65);
  Val x175 = ((Val(1) - x11) * x66);
  Val x176 = ((Val(1) - x12) * x67);
  Val x177 = ((Val(1) - x13) * x68);
  Val x178 = ((Val(1) - x14) * x69);
  Val x179 = ((Val(1) - x15) * x70);
  Val x180 = ((Val(1) - x16) * x71);
  Val x181 = ((Val(1) - x17) * x72);
  Val x182 = ((Val(1) - x18) * x73);
  Val x183 = ((Val(1) - x19) * x74);
  Val x184 = ((Val(1) - x20) * x75);
  Val x185 = ((Val(1) - x21) * x76);
  Val x186 = ((Val(1) - x22) * x77);
  Val x187 = ((Val(1) - x23) * x78);
  Val x188 = ((Val(1) - x24) * x79);
  Val x189 = ((Val(1) - x25) * x80);
  Val x190 = ((Val(1) - x26) * x81);
  Val x191 = ((Val(1) - x27) * x82);
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:624)
  Val x192 = ((Val(1) - x34) * x89);
  Val x193 = ((Val(1) - x35) * x90);
  Val x194 = ((Val(1) - x36) * x91);
  Val x195 = ((Val(1) - x37) * x92);
  Val x196 = ((Val(1) - x38) * x93);
  Val x197 = ((Val(1) - x39) * x94);
  Val x198 = ((Val(1) - x40) * x95);
  Val x199 = ((Val(1) - x41) * x96);
  Val x200 = ((Val(1) - x42) * x97);
  Val x201 = ((Val(1) - x43) * x98);
  Val x202 = ((Val(1) - x44) * x99);
  Val x203 = ((Val(1) - x45) * x100);
  Val x204 = ((Val(1) - x46) * x101);
  Val x205 = ((Val(1) - x47) * x102);
  Val x206 = ((Val(1) - x48) * x103);
  Val x207 = ((Val(1) - x49) * x104);
  Val x208 = ((Val(1) - x50) * x105);
  Val x209 = ((Val(1) - x51) * x106);
  Val x210 = ((Val(1) - x52) * x107);
  Val x211 = ((Val(1) - x53) * x108);
  Val x212 = ((Val(1) - x54) * x109);
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:625)
  Val x213 =
      (((((x116 + x170) - ((x116 * Val(2)) * x170)) + (((x117 + x171) - (x138 * x171)) * Val(2))) +
        (((x118 + x172) - ((x118 * Val(2)) * x172)) * Val(4))) +
       (((x119 + x173) - ((x119 * Val(2)) * x173)) * Val(8)));
  Val x214 = (((x213 + (((x120 + x174) - ((x120 * Val(2)) * x174)) * Val(16))) +
               (((x121 + x175) - ((x121 * Val(2)) * x175)) * Val(32))) +
              (((x122 + x176) - ((x122 * Val(2)) * x176)) * Val(64)));
  Val x215 = (((x214 + (((x123 + x177) - ((x123 * Val(2)) * x177)) * Val(128))) +
               (((x124 + x178) - ((x124 * Val(2)) * x178)) * Val(256))) +
              (((x125 + x179) - ((x125 * Val(2)) * x179)) * Val(512)));
  Val x216 = (((x215 + (((x126 + x180) - ((x126 * Val(2)) * x180)) * Val(1024))) +
               (((x127 + x181) - ((x127 * Val(2)) * x181)) * Val(2048))) +
              (((x128 + x182) - ((x128 * Val(2)) * x182)) * Val(4096)));
  Val x217 = (((x216 + (((x129 + x183) - ((x129 * Val(2)) * x183)) * Val(8192))) +
               (((x130 + x184) - ((x130 * Val(2)) * x184)) * Val(16384))) +
              (((x131 + x185) - ((x131 * Val(2)) * x185)) * Val(32768)));
  Val x218 = (((x217 + (((x132 + x186) - ((x132 * Val(2)) * x186)) * Val(65536))) +
               (((x133 + x187) - ((x133 * Val(2)) * x187)) * Val(131072))) +
              (((x134 + x188) - ((x134 * Val(2)) * x188)) * Val(262144)));
  Val x219 = (((x218 + (((x135 + x189) - ((x135 * Val(2)) * x189)) * Val(524288))) +
               (((x136 + x190) - ((x136 * Val(2)) * x190)) * Val(1048576))) +
              (((x137 + x191) - ((x137 * Val(2)) * x191)) * Val(2097152)));
  NondetRegStruct x220 = exec_Reg(ctx, x219, LAYOUT_LOOKUP(layout1, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  Val x221 =
      (((((x145 + x192) - ((x145 * Val(2)) * x192)) + (((x146 + x193) - (x166 * x193)) * Val(2))) +
        (((x147 + x194) - ((x147 * Val(2)) * x194)) * Val(4))) +
       (((x148 + x195) - ((x148 * Val(2)) * x195)) * Val(8)));
  Val x222 = (((x221 + (((x149 + x196) - ((x149 * Val(2)) * x196)) * Val(16))) +
               (((x150 + x197) - ((x150 * Val(2)) * x197)) * Val(32))) +
              (((x151 + x198) - ((x151 * Val(2)) * x198)) * Val(64)));
  Val x223 = (((x222 + (((x152 + x199) - ((x152 * Val(2)) * x199)) * Val(128))) +
               (((x153 + x200) - ((x153 * Val(2)) * x200)) * Val(256))) +
              (((x154 + x201) - ((x154 * Val(2)) * x201)) * Val(512)));
  Val x224 = (((x223 + (((x155 + x202) - ((x155 * Val(2)) * x202)) * Val(1024))) +
               (((x156 + x203) - ((x156 * Val(2)) * x203)) * Val(2048))) +
              (((x157 + x204) - ((x157 * Val(2)) * x204)) * Val(4096)));
  Val x225 = (((x224 + (((x158 + x205) - ((x158 * Val(2)) * x205)) * Val(8192))) +
               (((x159 + x206) - ((x159 * Val(2)) * x206)) * Val(16384))) +
              (((x160 + x207) - ((x160 * Val(2)) * x207)) * Val(32768)));
  Val x226 = (((x225 + (((x161 + x208) - ((x161 * Val(2)) * x208)) * Val(65536))) +
               (((x162 + x209) - ((x162 * Val(2)) * x209)) * Val(131072))) +
              (((x163 + x210) - ((x163 * Val(2)) * x210)) * Val(262144)));
  NondetRegStruct x227 =
      exec_Reg(ctx,
               ((x226 + (((x164 + x211) - ((x164 * Val(2)) * x211)) * Val(524288))) +
                (((x165 + x212) - ((x165 * Val(2)) * x212)) * Val(1048576))),
               LAYOUT_LOOKUP(layout1, _1));
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:630)
  Val22Array x228 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x229 = exec_RetTuple(
      ctx,
      x228,
      x228,
      x228,
      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), x220._super, x227._super},
      x228,
      x228,
      Val(7),
      Val(12),
      arg0.rnd._super,
      arg0.blk._super,
      arg0.midx._super,
      LAYOUT_LOOKUP(layout1, _super));
  return x229;
}
RetTupleStruct execChiMinor1_4__2_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<ChiMinor1_4__2_Layout> layout2) {
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:685)
  BoundLayout<ChiMinor1_4__2__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:635)
  RetTupleStruct x4 = back_RetTuple(ctx, 8, arg1);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:636)
  RetTupleStruct x5 = back_RetTuple(ctx, 1, arg1);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:640)
  Val x6 = x4.arrC[0]._super;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:648)
  ToBits_21_Struct x7 = exec_ToBits_21_(ctx, x6, LAYOUT_LOOKUP(layout2, unpack_2x));
  NondetRegStruct21Array x8 = x7._super;
  Val x9 = x8[0]._super;
  Val x10 = x8[1]._super;
  Val x11 = x8[2]._super;
  Val x12 = x8[3]._super;
  Val x13 = x8[4]._super;
  Val x14 = x8[5]._super;
  Val x15 = x8[6]._super;
  Val x16 = x8[7]._super;
  Val x17 = x8[8]._super;
  Val x18 = x8[9]._super;
  Val x19 = x8[10]._super;
  Val x20 = x8[11]._super;
  Val x21 = x8[12]._super;
  Val x22 = x8[13]._super;
  Val x23 = x8[14]._super;
  Val x24 = x8[15]._super;
  Val x25 = x8[16]._super;
  Val x26 = x8[17]._super;
  Val x27 = x8[18]._super;
  Val x28 = x8[19]._super;
  Val x29 = x8[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:649)
  Val x30 = (x10 * Val(2));
  Val x31 =
      ((((((x9 + x30) + (x11 * Val(4))) + (x12 * Val(8))) + (x13 * Val(16))) + (x14 * Val(32))) +
       (x15 * Val(64)));
  Val x32 =
      ((((((x31 + (x16 * Val(128))) + (x17 * Val(256))) + (x18 * Val(512))) + (x19 * Val(1024))) +
        (x20 * Val(2048))) +
       (x21 * Val(4096)));
  Val x33 = ((((((x32 + (x22 * Val(8192))) + (x23 * Val(16384))) + (x24 * Val(32768))) +
               (x25 * Val(65536))) +
              (x26 * Val(131072))) +
             (x27 * Val(262144)));
  EQZ((((x33 + (x28 * Val(524288))) + (x29 * Val(1048576))) - x6),
      "chi_minor1(zirgen/circuit/keccak/keccak.zir:649)");
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:635)
  NondetRegStruct22Array x34 = x4.arrB;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:654)
  Val x35 = x34[10]._super;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:662)
  ToBits_21_Struct x36 = exec_ToBits_21_(ctx, x35, LAYOUT_LOOKUP(layout2, unpack_2xp1));
  NondetRegStruct21Array x37 = x36._super;
  Val x38 = x37[0]._super;
  Val x39 = x37[1]._super;
  Val x40 = x37[2]._super;
  Val x41 = x37[3]._super;
  Val x42 = x37[4]._super;
  Val x43 = x37[5]._super;
  Val x44 = x37[6]._super;
  Val x45 = x37[7]._super;
  Val x46 = x37[8]._super;
  Val x47 = x37[9]._super;
  Val x48 = x37[10]._super;
  Val x49 = x37[11]._super;
  Val x50 = x37[12]._super;
  Val x51 = x37[13]._super;
  Val x52 = x37[14]._super;
  Val x53 = x37[15]._super;
  Val x54 = x37[16]._super;
  Val x55 = x37[17]._super;
  Val x56 = x37[18]._super;
  Val x57 = x37[19]._super;
  Val x58 = x37[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:663)
  Val x59 = ((((((x38 + (x39 * Val(2))) + (x40 * Val(4))) + (x41 * Val(8))) + (x42 * Val(16))) +
              (x43 * Val(32))) +
             (x44 * Val(64)));
  Val x60 =
      ((((((x59 + (x45 * Val(128))) + (x46 * Val(256))) + (x47 * Val(512))) + (x48 * Val(1024))) +
        (x49 * Val(2048))) +
       (x50 * Val(4096)));
  Val x61 = ((((((x60 + (x51 * Val(8192))) + (x52 * Val(16384))) + (x53 * Val(32768))) +
               (x54 * Val(65536))) +
              (x55 * Val(131072))) +
             (x56 * Val(262144)));
  EQZ((((x61 + (x57 * Val(524288))) + (x58 * Val(1048576))) - x35),
      "chi_minor1(zirgen/circuit/keccak/keccak.zir:663)");
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:667)
  Val x62 = x34[13]._super;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:675)
  ToBits_21_Struct x63 = exec_ToBits_21_(ctx, x62, LAYOUT_LOOKUP(layout2, unpack_2xp2));
  NondetRegStruct21Array x64 = x63._super;
  Val x65 = x64[0]._super;
  Val x66 = x64[1]._super;
  Val x67 = x64[2]._super;
  Val x68 = x64[3]._super;
  Val x69 = x64[4]._super;
  Val x70 = x64[5]._super;
  Val x71 = x64[6]._super;
  Val x72 = x64[7]._super;
  Val x73 = x64[8]._super;
  Val x74 = x64[9]._super;
  Val x75 = x64[10]._super;
  Val x76 = x64[11]._super;
  Val x77 = x64[12]._super;
  Val x78 = x64[13]._super;
  Val x79 = x64[14]._super;
  Val x80 = x64[15]._super;
  Val x81 = x64[16]._super;
  Val x82 = x64[17]._super;
  Val x83 = x64[18]._super;
  Val x84 = x64[19]._super;
  Val x85 = x64[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:676)
  Val x86 = ((((((x65 + (x66 * Val(2))) + (x67 * Val(4))) + (x68 * Val(8))) + (x69 * Val(16))) +
              (x70 * Val(32))) +
             (x71 * Val(64)));
  Val x87 =
      ((((((x86 + (x72 * Val(128))) + (x73 * Val(256))) + (x74 * Val(512))) + (x75 * Val(1024))) +
        (x76 * Val(2048))) +
       (x77 * Val(4096)));
  Val x88 = ((((((x87 + (x78 * Val(8192))) + (x79 * Val(16384))) + (x80 * Val(32768))) +
               (x81 * Val(65536))) +
              (x82 * Val(131072))) +
             (x83 * Val(262144)));
  EQZ((((x88 + (x84 * Val(524288))) + (x85 * Val(1048576))) - x62),
      "chi_minor1(zirgen/circuit/keccak/keccak.zir:676)");
  // andnxor(zirgen/circuit/keccak/keccak.zir:118)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:678)
  Val x89 = ((Val(1) - x38) * x65);
  Val x90 = ((Val(1) - x39) * x66);
  Val x91 = ((Val(1) - x40) * x67);
  Val x92 = ((Val(1) - x41) * x68);
  Val x93 = ((Val(1) - x42) * x69);
  Val x94 = ((Val(1) - x43) * x70);
  Val x95 = ((Val(1) - x44) * x71);
  Val x96 = ((Val(1) - x45) * x72);
  Val x97 = ((Val(1) - x46) * x73);
  Val x98 = ((Val(1) - x47) * x74);
  Val x99 = ((Val(1) - x48) * x75);
  Val x100 = ((Val(1) - x49) * x76);
  Val x101 = ((Val(1) - x50) * x77);
  Val x102 = ((Val(1) - x51) * x78);
  Val x103 = ((Val(1) - x52) * x79);
  Val x104 = ((Val(1) - x53) * x80);
  Val x105 = ((Val(1) - x54) * x81);
  Val x106 = ((Val(1) - x55) * x82);
  Val x107 = ((Val(1) - x56) * x83);
  Val x108 = ((Val(1) - x57) * x84);
  Val x109 = ((Val(1) - x58) * x85);
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:679)
  Val x110 = (((((x9 + x89) - ((x9 * Val(2)) * x89)) + (((x10 + x90) - (x30 * x90)) * Val(2))) +
               (((x11 + x91) - ((x11 * Val(2)) * x91)) * Val(4))) +
              (((x12 + x92) - ((x12 * Val(2)) * x92)) * Val(8)));
  Val x111 = (((x110 + (((x13 + x93) - ((x13 * Val(2)) * x93)) * Val(16))) +
               (((x14 + x94) - ((x14 * Val(2)) * x94)) * Val(32))) +
              (((x15 + x95) - ((x15 * Val(2)) * x95)) * Val(64)));
  Val x112 = (((x111 + (((x16 + x96) - ((x16 * Val(2)) * x96)) * Val(128))) +
               (((x17 + x97) - ((x17 * Val(2)) * x97)) * Val(256))) +
              (((x18 + x98) - ((x18 * Val(2)) * x98)) * Val(512)));
  Val x113 = (((x112 + (((x19 + x99) - ((x19 * Val(2)) * x99)) * Val(1024))) +
               (((x20 + x100) - ((x20 * Val(2)) * x100)) * Val(2048))) +
              (((x21 + x101) - ((x21 * Val(2)) * x101)) * Val(4096)));
  Val x114 = (((x113 + (((x22 + x102) - ((x22 * Val(2)) * x102)) * Val(8192))) +
               (((x23 + x103) - ((x23 * Val(2)) * x103)) * Val(16384))) +
              (((x24 + x104) - ((x24 * Val(2)) * x104)) * Val(32768)));
  Val x115 = (((x114 + (((x25 + x105) - ((x25 * Val(2)) * x105)) * Val(65536))) +
               (((x26 + x106) - ((x26 * Val(2)) * x106)) * Val(131072))) +
              (((x27 + x107) - ((x27 * Val(2)) * x107)) * Val(262144)));
  NondetRegStruct x116 =
      exec_Reg(ctx,
               ((x115 + (((x28 + x108) - ((x28 * Val(2)) * x108)) * Val(524288))) +
                (((x29 + x109) - ((x29 * Val(2)) * x109)) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, res3));
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:636)
  NondetRegStruct24Array x117 = x5.arrD;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:685)
  BoundLayout<ChiMinor1_4__2_Arm1_SuperLayout> x118 = LAYOUT_LOOKUP(x3, arm1);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:680)
  Val22Array x119 =
      Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), x117[22]._super};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:681)
  Val22Array x120 =
      Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), x117[23]._super};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:682)
  Val22Array x121 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), x116._super};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:686)
  Val24Array x122 = Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  Val22Array x123 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:636)
  Val x124 = x5.rnd._super;
  Val x125 = x5.blk._super;
  Val x126 = x5.midx._super;
  if (to_size_t(Val(1))) {
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:686)
    RetTupleStruct x127 = exec_RetTuple(ctx,
                                        x119,
                                        x120,
                                        x121,
                                        x122,
                                        x123,
                                        x123,
                                        Val(8),
                                        Val(12),
                                        x124,
                                        x125,
                                        x126,
                                        LAYOUT_LOOKUP(x3, arm0));
  }
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:718)
  Val x128 = x34[16]._super;
  if (to_size_t(Val(0))) {
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:699)
    ToBits_21_Struct x129 = exec_ToBits_21_(ctx, x35, LAYOUT_LOOKUP(x118, unpack_2nx));
    NondetRegStruct21Array x130 = x129._super;
    Val x131 = x130[0]._super;
    Val x132 = x130[1]._super;
    Val x133 = x130[2]._super;
    Val x134 = x130[3]._super;
    Val x135 = x130[4]._super;
    Val x136 = x130[5]._super;
    Val x137 = x130[6]._super;
    Val x138 = x130[7]._super;
    Val x139 = x130[8]._super;
    Val x140 = x130[9]._super;
    Val x141 = x130[10]._super;
    Val x142 = x130[11]._super;
    Val x143 = x130[12]._super;
    Val x144 = x130[13]._super;
    Val x145 = x130[14]._super;
    Val x146 = x130[15]._super;
    Val x147 = x130[16]._super;
    Val x148 = x130[17]._super;
    Val x149 = x130[18]._super;
    Val x150 = x130[19]._super;
    Val x151 = x130[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:700)
    Val x152 = (x132 * Val(2));
    Val x153 = ((((((x131 + x152) + (x133 * Val(4))) + (x134 * Val(8))) + (x135 * Val(16))) +
                 (x136 * Val(32))) +
                (x137 * Val(64)));
    Val x154 = ((((((x153 + (x138 * Val(128))) + (x139 * Val(256))) + (x140 * Val(512))) +
                  (x141 * Val(1024))) +
                 (x142 * Val(2048))) +
                (x143 * Val(4096)));
    Val x155 = ((((((x154 + (x144 * Val(8192))) + (x145 * Val(16384))) + (x146 * Val(32768))) +
                  (x147 * Val(65536))) +
                 (x148 * Val(131072))) +
                (x149 * Val(262144)));
    EQZ((((x155 + (x150 * Val(524288))) + (x151 * Val(1048576))) - x35),
        "chi_minor1(zirgen/circuit/keccak/keccak.zir:700)");
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:713)
    ToBits_21_Struct x156 = exec_ToBits_21_(ctx, x62, LAYOUT_LOOKUP(x118, unpack_2nxp1));
    NondetRegStruct21Array x157 = x156._super;
    Val x158 = x157[0]._super;
    Val x159 = x157[1]._super;
    Val x160 = x157[2]._super;
    Val x161 = x157[3]._super;
    Val x162 = x157[4]._super;
    Val x163 = x157[5]._super;
    Val x164 = x157[6]._super;
    Val x165 = x157[7]._super;
    Val x166 = x157[8]._super;
    Val x167 = x157[9]._super;
    Val x168 = x157[10]._super;
    Val x169 = x157[11]._super;
    Val x170 = x157[12]._super;
    Val x171 = x157[13]._super;
    Val x172 = x157[14]._super;
    Val x173 = x157[15]._super;
    Val x174 = x157[16]._super;
    Val x175 = x157[17]._super;
    Val x176 = x157[18]._super;
    Val x177 = x157[19]._super;
    Val x178 = x157[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:714)
    Val x179 =
        ((((((x158 + (x159 * Val(2))) + (x160 * Val(4))) + (x161 * Val(8))) + (x162 * Val(16))) +
          (x163 * Val(32))) +
         (x164 * Val(64)));
    Val x180 = ((((((x179 + (x165 * Val(128))) + (x166 * Val(256))) + (x167 * Val(512))) +
                  (x168 * Val(1024))) +
                 (x169 * Val(2048))) +
                (x170 * Val(4096)));
    Val x181 = ((((((x180 + (x171 * Val(8192))) + (x172 * Val(16384))) + (x173 * Val(32768))) +
                  (x174 * Val(65536))) +
                 (x175 * Val(131072))) +
                (x176 * Val(262144)));
    EQZ((((x181 + (x177 * Val(524288))) + (x178 * Val(1048576))) - x62),
        "chi_minor1(zirgen/circuit/keccak/keccak.zir:714)");
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:726)
    ToBits_21_Struct x182 = exec_ToBits_21_(ctx, x128, LAYOUT_LOOKUP(x118, unpack_2nxp2));
    NondetRegStruct21Array x183 = x182._super;
    Val x184 = x183[0]._super;
    Val x185 = x183[1]._super;
    Val x186 = x183[2]._super;
    Val x187 = x183[3]._super;
    Val x188 = x183[4]._super;
    Val x189 = x183[5]._super;
    Val x190 = x183[6]._super;
    Val x191 = x183[7]._super;
    Val x192 = x183[8]._super;
    Val x193 = x183[9]._super;
    Val x194 = x183[10]._super;
    Val x195 = x183[11]._super;
    Val x196 = x183[12]._super;
    Val x197 = x183[13]._super;
    Val x198 = x183[14]._super;
    Val x199 = x183[15]._super;
    Val x200 = x183[16]._super;
    Val x201 = x183[17]._super;
    Val x202 = x183[18]._super;
    Val x203 = x183[19]._super;
    Val x204 = x183[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:727)
    Val x205 =
        ((((((x184 + (x185 * Val(2))) + (x186 * Val(4))) + (x187 * Val(8))) + (x188 * Val(16))) +
          (x189 * Val(32))) +
         (x190 * Val(64)));
    Val x206 = ((((((x205 + (x191 * Val(128))) + (x192 * Val(256))) + (x193 * Val(512))) +
                  (x194 * Val(1024))) +
                 (x195 * Val(2048))) +
                (x196 * Val(4096)));
    Val x207 = ((((((x206 + (x197 * Val(8192))) + (x198 * Val(16384))) + (x199 * Val(32768))) +
                  (x200 * Val(65536))) +
                 (x201 * Val(131072))) +
                (x202 * Val(262144)));
    EQZ((((x207 + (x203 * Val(524288))) + (x204 * Val(1048576))) - x128),
        "chi_minor1(zirgen/circuit/keccak/keccak.zir:727)");
    // andnxor(zirgen/circuit/keccak/keccak.zir:118)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:729)
    Val x208 = ((Val(1) - x158) * x184);
    Val x209 = ((Val(1) - x159) * x185);
    Val x210 = ((Val(1) - x160) * x186);
    Val x211 = ((Val(1) - x161) * x187);
    Val x212 = ((Val(1) - x162) * x188);
    Val x213 = ((Val(1) - x163) * x189);
    Val x214 = ((Val(1) - x164) * x190);
    Val x215 = ((Val(1) - x165) * x191);
    Val x216 = ((Val(1) - x166) * x192);
    Val x217 = ((Val(1) - x167) * x193);
    Val x218 = ((Val(1) - x168) * x194);
    Val x219 = ((Val(1) - x169) * x195);
    Val x220 = ((Val(1) - x170) * x196);
    Val x221 = ((Val(1) - x171) * x197);
    Val x222 = ((Val(1) - x172) * x198);
    Val x223 = ((Val(1) - x173) * x199);
    Val x224 = ((Val(1) - x174) * x200);
    Val x225 = ((Val(1) - x175) * x201);
    Val x226 = ((Val(1) - x176) * x202);
    Val x227 = ((Val(1) - x177) * x203);
    Val x228 = ((Val(1) - x178) * x204);
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:730)
    Val x229 = (((((x131 + x208) - ((x131 * Val(2)) * x208)) +
                  (((x132 + x209) - (x152 * x209)) * Val(2))) +
                 (((x133 + x210) - ((x133 * Val(2)) * x210)) * Val(4))) +
                (((x134 + x211) - ((x134 * Val(2)) * x211)) * Val(8)));
    Val x230 = (((x229 + (((x135 + x212) - ((x135 * Val(2)) * x212)) * Val(16))) +
                 (((x136 + x213) - ((x136 * Val(2)) * x213)) * Val(32))) +
                (((x137 + x214) - ((x137 * Val(2)) * x214)) * Val(64)));
    Val x231 = (((x230 + (((x138 + x215) - ((x138 * Val(2)) * x215)) * Val(128))) +
                 (((x139 + x216) - ((x139 * Val(2)) * x216)) * Val(256))) +
                (((x140 + x217) - ((x140 * Val(2)) * x217)) * Val(512)));
    Val x232 = (((x231 + (((x141 + x218) - ((x141 * Val(2)) * x218)) * Val(1024))) +
                 (((x142 + x219) - ((x142 * Val(2)) * x219)) * Val(2048))) +
                (((x143 + x220) - ((x143 * Val(2)) * x220)) * Val(4096)));
    Val x233 = (((x232 + (((x144 + x221) - ((x144 * Val(2)) * x221)) * Val(8192))) +
                 (((x145 + x222) - ((x145 * Val(2)) * x222)) * Val(16384))) +
                (((x146 + x223) - ((x146 * Val(2)) * x223)) * Val(32768)));
    Val x234 = (((x233 + (((x147 + x224) - ((x147 * Val(2)) * x224)) * Val(65536))) +
                 (((x148 + x225) - ((x148 * Val(2)) * x225)) * Val(131072))) +
                (((x149 + x226) - ((x149 * Val(2)) * x226)) * Val(262144)));
    NondetRegStruct x235 =
        exec_Reg(ctx,
                 ((x234 + (((x150 + x227) - ((x150 * Val(2)) * x227)) * Val(524288))) +
                  (((x151 + x228) - ((x151 * Val(2)) * x228)) * Val(1048576))),
                 LAYOUT_LOOKUP(x118, res3n));
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:733)
    RetTupleStruct x236 =
        exec_RetTuple(ctx,
                      x119,
                      x120,
                      x121,
                      x122,
                      x123,
                      Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), x235._super},
                      Val(8),
                      Val(12),
                      x124,
                      x125,
                      x126,
                      LAYOUT_LOOKUP(x118, _super));
  }
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:685)
  RetTupleStruct x237 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x237;
}
RetTupleStruct execChiMinor2_2_(ExecContext& ctx,
                                RetTupleStruct arg0,
                                BoundLayout<RetTupleLayout> arg1,
                                BoundLayout<ChiMinor2_2__SuperLayout> layout2) {
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:739)
  RetTupleStruct x3 = back_RetTuple(ctx, 1, arg1);
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:740)
  RetTupleStruct x4 = back_RetTuple(ctx, 3, arg1);
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:741)
  RetTupleStruct x5 = back_RetTuple(ctx, 4, arg1);
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:742)
  RetTupleStruct x6 = back_RetTuple(ctx, 6, arg1);
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:743)
  RetTupleStruct x7 = back_RetTuple(ctx, 7, arg1);
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:744)
  RetTupleStruct x8 = back_RetTuple(ctx, 9, arg1);
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:746)
  BoundLayout<ChiMinor2_2_Arm1_SuperLayout> x9 = LAYOUT_LOOKUP(layout2, arm1);
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:742)
  NondetRegStruct24Array x10 = x6.arrD;
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:740)
  NondetRegStruct24Array x11 = x4.arrD;
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:744)
  NondetRegStruct22Array x12 = x8.arrA;
  NondetRegStruct22Array x13 = x8.arrB;
  NondetRegStruct22Array x14 = x8.arrC;
  NondetRegStruct24Array x15 = x8.arrD;
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:747)
  Val x16 = x7.arrA[21]._super;
  Val x17 = x7.arrB[21]._super;
  Val x18 = x7.arrC[21]._super;
  Val x19 = x10[22]._super;
  Val x20 = x10[23]._super;
  Val x21 = x7.arrF[21]._super;
  Val x22 = x5.arrA[21]._super;
  Val x23 = x5.arrB[21]._super;
  Val x24 = x5.arrC[21]._super;
  Val x25 = x11[22]._super;
  Val x26 = x11[23]._super;
  Val x27 = x5.arrF[21]._super;
  Val x28 = x3.arrA[21]._super;
  Val x29 = x3.arrB[21]._super;
  Val x30 = x3.arrC[21]._super;
  Val x31 = x12[15]._super;
  Val x32 = x12[16]._super;
  Val x33 = x12[17]._super;
  Val x34 = x12[18]._super;
  Val x35 = x12[19]._super;
  Val x36 = x12[20]._super;
  Val x37 = x12[21]._super;
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:744)
  Val x38 = x13[0]._super;
  Val x39 = x13[1]._super;
  Val x40 = x13[2]._super;
  Val x41 = x13[3]._super;
  Val x42 = x13[4]._super;
  Val x43 = x13[5]._super;
  Val x44 = x13[6]._super;
  Val x45 = x13[7]._super;
  Val x46 = x13[8]._super;
  Val x47 = x13[9]._super;
  Val x48 = x13[10]._super;
  Val x49 = x13[11]._super;
  Val x50 = x13[12]._super;
  Val x51 = x13[13]._super;
  Val x52 = x13[14]._super;
  Val x53 = x13[15]._super;
  Val x54 = x13[16]._super;
  Val x55 = x13[17]._super;
  Val x56 = x13[18]._super;
  Val x57 = x13[19]._super;
  Val x58 = x13[20]._super;
  Val x59 = x13[21]._super;
  Val22Array x60 = Val22Array{x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48,
                              x49, x50, x51, x52, x53, x54, x55, x56, x57, x58, x59};
  Val x61 = x14[0]._super;
  Val x62 = x14[1]._super;
  Val x63 = x14[2]._super;
  Val x64 = x14[3]._super;
  Val x65 = x14[4]._super;
  Val x66 = x14[5]._super;
  Val x67 = x14[6]._super;
  Val x68 = x14[7]._super;
  Val x69 = x14[8]._super;
  Val x70 = x14[9]._super;
  Val x71 = x14[10]._super;
  Val x72 = x14[11]._super;
  Val x73 = x14[12]._super;
  Val x74 = x14[13]._super;
  Val x75 = x14[14]._super;
  Val x76 = x14[15]._super;
  Val x77 = x14[16]._super;
  Val x78 = x14[17]._super;
  Val x79 = x14[18]._super;
  Val x80 = x14[19]._super;
  Val x81 = x14[20]._super;
  Val x82 = x14[21]._super;
  Val22Array x83 = Val22Array{x61, x62, x63, x64, x65, x66, x67, x68, x69, x70, x71,
                              x72, x73, x74, x75, x76, x77, x78, x79, x80, x81, x82};
  Val24Array x84 =
      Val24Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x15[22]._super, x15[23]._super};
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:755)
  Val22Array x85 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:739)
  Val x86 = x3.rnd._super;
  Val x87 = x3.blk._super;
  Val x88 = x3.midx._super;
  if (to_size_t(Val(0))) {
    // chi_minor2(zirgen/circuit/keccak/keccak.zir:755)
    RetTupleStruct x89 =
        exec_RetTuple(ctx,
                      Val22Array{x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26,
                                 x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37},
                      x60,
                      x83,
                      x84,
                      x85,
                      x85,
                      Val(0),
                      Val(11),
                      x86,
                      x87,
                      x88,
                      LAYOUT_LOOKUP(layout2, arm0));
  }
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:758)
  BoundLayout<ChiMinor2_2_Arm1Arm1_SuperLayout> x90 = LAYOUT_LOOKUP(x9, arm1);
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:762)
  Val x91 = x12[0]._super;
  Val x92 = x12[1]._super;
  Val x93 = x12[2]._super;
  Val x94 = x12[3]._super;
  Val x95 = x12[4]._super;
  Val x96 = x12[5]._super;
  Val x97 = x12[6]._super;
  Val x98 = x12[7]._super;
  Val x99 = x12[8]._super;
  Val x100 = x12[9]._super;
  Val x101 = x12[10]._super;
  Val x102 = x12[11]._super;
  Val x103 = x12[12]._super;
  Val x104 = x12[13]._super;
  Val x105 = x12[14]._super;
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:770)
  BoundLayout<ChiMinor2_2_Arm1Arm1Arm1_SuperLayout> x106 = LAYOUT_LOOKUP(x90, arm1);
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:744)
  Val22Array x107 = Val22Array{x91,  x92,  x93,  x94,  x95, x96, x97, x98, x99, x100, x101,
                               x102, x103, x104, x105, x31, x32, x33, x34, x35, x36,  x37};
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:782)
  BoundLayout<ChiMinor2_2_Arm1Arm1Arm1Arm1_SuperLayout> x108 = LAYOUT_LOOKUP(x106, arm1);
  if (to_size_t(Val(1))) {
    if (to_size_t(Val(0))) {
      // chi_minor2(zirgen/circuit/keccak/keccak.zir:767)
      RetTupleStruct x109 =
          exec_RetTuple(ctx,
                        Val22Array{x91,  x92,  x93,  x94,  x95, x96, x97, x98, x99, x100, x101,
                                   x102, x103, x104, x105, x16, x17, x18, x19, x20, x21,  x22},
                        Val22Array{x23, x24, x25, x26, x27, x28, x29, x30, x46, x47, x48,
                                   x49, x50, x51, x52, x53, x54, x55, x56, x57, x58, x59},
                        x83,
                        x84,
                        x85,
                        x85,
                        Val(0),
                        Val(12),
                        x86,
                        x87,
                        x88,
                        LAYOUT_LOOKUP(x9, arm0));
    }
    if (to_size_t(Val(1))) {
      if (to_size_t(Val(1))) {
        // chi_minor2(zirgen/circuit/keccak/keccak.zir:779)
        RetTupleStruct x110 =
            exec_RetTuple(ctx,
                          x107,
                          Val22Array{x38, x39, x40, x41, x42, x43, x44, x45, x16, x17, x18,
                                     x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29},
                          Val22Array{x30, x62, x63, x64, x65, x66, x67, x68, x69, x70, x71,
                                     x72, x73, x74, x75, x76, x77, x78, x79, x80, x81, x82},
                          x84,
                          x85,
                          x85,
                          Val(0),
                          Val(13),
                          x86,
                          x87,
                          x88,
                          LAYOUT_LOOKUP(x90, arm0));
      }
      if (to_size_t(Val(0))) {
        if (to_size_t(Val(0))) {
          // chi_minor2(zirgen/circuit/keccak/keccak.zir:790)
          RetTupleStruct x111 =
              exec_RetTuple(ctx,
                            x107,
                            x60,
                            Val22Array{x61, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25,
                                       x26, x27, x28, x29, x30, x77, x78, x79, x80, x81, x82},
                            x84,
                            x85,
                            x85,
                            Val(0),
                            Val(14),
                            x86,
                            x87,
                            x88,
                            LAYOUT_LOOKUP(x106, arm0));
        }
        if (to_size_t(Val(1))) {
          // chi_minor2(zirgen/circuit/keccak/keccak.zir:800)
          OneHot_24_Struct x112 = exec_OneHot_24_(ctx, x86, LAYOUT_LOOKUP(x108, unpackRnd));
          // chi_minor2(zirgen/circuit/keccak/keccak.zir:801)
          ToBits_22_Struct x113 = exec_ToBits_22_(ctx, x93, LAYOUT_LOOKUP(x108, unpackA002));
          // chi_minor2(zirgen/circuit/keccak/keccak.zir:800)
          NondetRegStruct24Array x114 = x112._super;
          // chi_minor2(zirgen/circuit/keccak/keccak.zir:801)
          NondetRegStruct22Array x115 = x113._super;
          // chi_minor2(zirgen/circuit/keccak/keccak.zir:802)
          RetTupleStruct x116 = exec_RetTuple(
              ctx,
              x107,
              x60,
              Val22Array{x61, x62, x63, x64, x65, x66, x67, x68, x69, x70, x71,
                         x72, x73, x74, x75, x76, x16, x17, x18, x19, x20, x21},
              Val24Array{x114[0]._super,  x114[1]._super,  x114[2]._super,  x114[3]._super,
                         x114[4]._super,  x114[5]._super,  x114[6]._super,  x114[7]._super,
                         x114[8]._super,  x114[9]._super,  x114[10]._super, x114[11]._super,
                         x114[12]._super, x114[13]._super, x114[14]._super, x114[15]._super,
                         x114[16]._super, x114[17]._super, x114[18]._super, x114[19]._super,
                         x114[20]._super, x114[21]._super, x114[22]._super, x114[23]._super},
              Val22Array{x22,    x23,    x24,    x25,    x26,    x27,    x28,    x29,
                         x30,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                         Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
              Val22Array{x115[0]._super,  x115[1]._super,  x115[2]._super,  x115[3]._super,
                         x115[4]._super,  x115[5]._super,  x115[6]._super,  x115[7]._super,
                         x115[8]._super,  x115[9]._super,  x115[10]._super, x115[11]._super,
                         x115[12]._super, x115[13]._super, x115[14]._super, x115[15]._super,
                         x115[16]._super, x115[17]._super, x115[18]._super, x115[19]._super,
                         x115[20]._super, x115[21]._super},
              Val(9),
              Val(14),
              x86,
              x87,
              x88,
              LAYOUT_LOOKUP(x108, _super));
        }
        // chi_minor2(zirgen/circuit/keccak/keccak.zir:782)
        RetTupleStruct x117 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x106, _super));
      }
      // chi_minor2(zirgen/circuit/keccak/keccak.zir:770)
      RetTupleStruct x118 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x90, _super));
    }
    // chi_minor2(zirgen/circuit/keccak/keccak.zir:758)
    RetTupleStruct x119 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x9, _super));
  }
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:746)
  RetTupleStruct x120 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(layout2, _super));
  return x120;
}
RetTupleStruct execChiMajor_2_(ExecContext& ctx,
                               RetTupleStruct arg0,
                               BoundLayout<RetTupleLayout> arg1,
                               BoundLayout<ChiMajor_2_Layout> layout2) {
  // chi_major(zirgen/circuit/keccak/keccak.zir:841)
  BoundLayout<ChiMajor_2__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // chi_major(zirgen/circuit/keccak/keccak.zir:840)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  OneHot_10_Struct x5 = exec_OneHot_10_(ctx, x4.minor._super, LAYOUT_LOOKUP(layout2, minorOnehot));
  NondetRegStruct10Array x6 = x5._super;
  if (to_size_t(x6[0]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:842)
    RetTupleStruct x7 = back_RetTuple(ctx, 1, arg1);
    RetTupleStruct x8 = execChiMinor0_0__2_(ctx, x7, LAYOUT_LOOKUP(x3, arm0));
  }
  if (to_size_t(x6[1]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:843)
    RetTupleStruct x9 = execChiMinor1_0__2_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm1));
  }
  if (to_size_t(x6[2]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:844)
    RetTupleStruct x10 = back_RetTuple(ctx, 3, arg1);
    RetTupleStruct x11 = execChiMinor0_1__2_(ctx, x10, LAYOUT_LOOKUP(x3, arm2));
  }
  if (to_size_t(x6[3]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:845)
    RetTupleStruct x12 = back_RetTuple(ctx, 4, arg1);
    RetTupleStruct x13 = execChiMinor0_2__2_(ctx, x12, LAYOUT_LOOKUP(x3, arm3));
  }
  if (to_size_t(x6[4]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:846)
    RetTupleStruct x14 = execChiMinor1_2__2_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm4));
  }
  if (to_size_t(x6[5]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:847)
    RetTupleStruct x15 = back_RetTuple(ctx, 6, arg1);
    RetTupleStruct x16 = execChiMinor0_3__2_(ctx, x15, LAYOUT_LOOKUP(x3, arm5));
  }
  if (to_size_t(x6[6]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:848)
    RetTupleStruct x17 = back_RetTuple(ctx, 7, arg1);
    RetTupleStruct x18 = execChiMinor0_4__2_(ctx, x17, LAYOUT_LOOKUP(x3, arm6));
  }
  if (to_size_t(x6[7]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:849)
    RetTupleStruct x19 = execChiMinor1_4__2_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm7));
  }
  if (to_size_t(x6[8]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:850)
    RetTupleStruct x20 = execChiMinor2_2_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm8));
  }
  if (to_size_t(x6[9]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:851)
    RetTupleStruct x21 = back_RetTuple(ctx, 1, arg1);
    RetTupleStruct x22 = execIotaXorRc(ctx, x21, LAYOUT_LOOKUP(x3, arm9));
  }
  // chi_major(zirgen/circuit/keccak/keccak.zir:841)
  RetTupleStruct x23 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x23;
}
RetTupleStruct execChiMinor0_0__3_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<ChiMinor0_0__3_Layout> layout1) {
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:542)
  NondetRegStruct22Array x2 = arg0.arrC;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:546)
  Val x3 = x2[4]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:554)
  ToBits_22_Struct x4 = exec_ToBits_22_(ctx, x3, LAYOUT_LOOKUP(layout1, unpack_0xp1));
  NondetRegStruct22Array x5 = x4._super;
  Val x6 = x5[0]._super;
  Val x7 = x5[1]._super;
  Val x8 = x5[2]._super;
  Val x9 = x5[3]._super;
  Val x10 = x5[4]._super;
  Val x11 = x5[5]._super;
  Val x12 = x5[6]._super;
  Val x13 = x5[7]._super;
  Val x14 = x5[8]._super;
  Val x15 = x5[9]._super;
  Val x16 = x5[10]._super;
  Val x17 = x5[11]._super;
  Val x18 = x5[12]._super;
  Val x19 = x5[13]._super;
  Val x20 = x5[14]._super;
  Val x21 = x5[15]._super;
  Val x22 = x5[16]._super;
  Val x23 = x5[17]._super;
  Val x24 = x5[18]._super;
  Val x25 = x5[19]._super;
  Val x26 = x5[20]._super;
  Val x27 = x5[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:555)
  Val x28 = ((((((x6 + (x7 * Val(2))) + (x8 * Val(4))) + (x9 * Val(8))) + (x10 * Val(16))) +
              (x11 * Val(32))) +
             (x12 * Val(64)));
  Val x29 =
      ((((((x28 + (x13 * Val(128))) + (x14 * Val(256))) + (x15 * Val(512))) + (x16 * Val(1024))) +
        (x17 * Val(2048))) +
       (x18 * Val(4096)));
  Val x30 = ((((((x29 + (x19 * Val(8192))) + (x20 * Val(16384))) + (x21 * Val(32768))) +
               (x22 * Val(65536))) +
              (x23 * Val(131072))) +
             (x24 * Val(262144)));
  EQZ(((((x30 + (x25 * Val(524288))) + (x26 * Val(1048576))) + (x27 * Val(2097152))) - x3),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:555)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:559)
  Val x31 = x2[5]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:567)
  ToBits_21_Struct x32 = exec_ToBits_21_(ctx, x31, LAYOUT_LOOKUP(layout1, unpack_1xp1));
  NondetRegStruct21Array x33 = x32._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:568)
  Val x55 = ((((((x34 + (x35 * Val(2))) + (x36 * Val(4))) + (x37 * Val(8))) + (x38 * Val(16))) +
              (x39 * Val(32))) +
             (x40 * Val(64)));
  Val x56 =
      ((((((x55 + (x41 * Val(128))) + (x42 * Val(256))) + (x43 * Val(512))) + (x44 * Val(1024))) +
        (x45 * Val(2048))) +
       (x46 * Val(4096)));
  Val x57 = ((((((x56 + (x47 * Val(8192))) + (x48 * Val(16384))) + (x49 * Val(32768))) +
               (x50 * Val(65536))) +
              (x51 * Val(131072))) +
             (x52 * Val(262144)));
  EQZ((((x57 + (x53 * Val(524288))) + (x54 * Val(1048576))) - x31),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:568)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:573)
  Val x58 = x2[7]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:581)
  ToBits_22_Struct x59 = exec_ToBits_22_(ctx, x58, LAYOUT_LOOKUP(layout1, unpack_0xp2));
  NondetRegStruct22Array x60 = x59._super;
  Val x61 = x60[0]._super;
  Val x62 = x60[1]._super;
  Val x63 = x60[2]._super;
  Val x64 = x60[3]._super;
  Val x65 = x60[4]._super;
  Val x66 = x60[5]._super;
  Val x67 = x60[6]._super;
  Val x68 = x60[7]._super;
  Val x69 = x60[8]._super;
  Val x70 = x60[9]._super;
  Val x71 = x60[10]._super;
  Val x72 = x60[11]._super;
  Val x73 = x60[12]._super;
  Val x74 = x60[13]._super;
  Val x75 = x60[14]._super;
  Val x76 = x60[15]._super;
  Val x77 = x60[16]._super;
  Val x78 = x60[17]._super;
  Val x79 = x60[18]._super;
  Val x80 = x60[19]._super;
  Val x81 = x60[20]._super;
  Val x82 = x60[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:582)
  Val x83 = ((((((x61 + (x62 * Val(2))) + (x63 * Val(4))) + (x64 * Val(8))) + (x65 * Val(16))) +
              (x66 * Val(32))) +
             (x67 * Val(64)));
  Val x84 =
      ((((((x83 + (x68 * Val(128))) + (x69 * Val(256))) + (x70 * Val(512))) + (x71 * Val(1024))) +
        (x72 * Val(2048))) +
       (x73 * Val(4096)));
  Val x85 = ((((((x84 + (x74 * Val(8192))) + (x75 * Val(16384))) + (x76 * Val(32768))) +
               (x77 * Val(65536))) +
              (x78 * Val(131072))) +
             (x79 * Val(262144)));
  EQZ(((((x85 + (x80 * Val(524288))) + (x81 * Val(1048576))) + (x82 * Val(2097152))) - x58),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:582)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:586)
  Val x86 = x2[8]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:594)
  ToBits_21_Struct x87 = exec_ToBits_21_(ctx, x86, LAYOUT_LOOKUP(layout1, unpack_1xp2));
  NondetRegStruct21Array x88 = x87._super;
  Val x89 = x88[0]._super;
  Val x90 = x88[1]._super;
  Val x91 = x88[2]._super;
  Val x92 = x88[3]._super;
  Val x93 = x88[4]._super;
  Val x94 = x88[5]._super;
  Val x95 = x88[6]._super;
  Val x96 = x88[7]._super;
  Val x97 = x88[8]._super;
  Val x98 = x88[9]._super;
  Val x99 = x88[10]._super;
  Val x100 = x88[11]._super;
  Val x101 = x88[12]._super;
  Val x102 = x88[13]._super;
  Val x103 = x88[14]._super;
  Val x104 = x88[15]._super;
  Val x105 = x88[16]._super;
  Val x106 = x88[17]._super;
  Val x107 = x88[18]._super;
  Val x108 = x88[19]._super;
  Val x109 = x88[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:595)
  Val x110 = ((((((x89 + (x90 * Val(2))) + (x91 * Val(4))) + (x92 * Val(8))) + (x93 * Val(16))) +
               (x94 * Val(32))) +
              (x95 * Val(64)));
  Val x111 =
      ((((((x110 + (x96 * Val(128))) + (x97 * Val(256))) + (x98 * Val(512))) + (x99 * Val(1024))) +
        (x100 * Val(2048))) +
       (x101 * Val(4096)));
  Val x112 = ((((((x111 + (x102 * Val(8192))) + (x103 * Val(16384))) + (x104 * Val(32768))) +
                (x105 * Val(65536))) +
               (x106 * Val(131072))) +
              (x107 * Val(262144)));
  EQZ((((x112 + (x108 * Val(524288))) + (x109 * Val(1048576))) - x86),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:595)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:599)
  Val x113 = x2[1]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:607)
  ToBits_22_Struct x114 = exec_ToBits_22_(ctx, x113, LAYOUT_LOOKUP(layout1, unpack_0x));
  NondetRegStruct22Array x115 = x114._super;
  Val x116 = x115[0]._super;
  Val x117 = x115[1]._super;
  Val x118 = x115[2]._super;
  Val x119 = x115[3]._super;
  Val x120 = x115[4]._super;
  Val x121 = x115[5]._super;
  Val x122 = x115[6]._super;
  Val x123 = x115[7]._super;
  Val x124 = x115[8]._super;
  Val x125 = x115[9]._super;
  Val x126 = x115[10]._super;
  Val x127 = x115[11]._super;
  Val x128 = x115[12]._super;
  Val x129 = x115[13]._super;
  Val x130 = x115[14]._super;
  Val x131 = x115[15]._super;
  Val x132 = x115[16]._super;
  Val x133 = x115[17]._super;
  Val x134 = x115[18]._super;
  Val x135 = x115[19]._super;
  Val x136 = x115[20]._super;
  Val x137 = x115[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:608)
  Val x138 = (x117 * Val(2));
  Val x139 = ((((((x116 + x138) + (x118 * Val(4))) + (x119 * Val(8))) + (x120 * Val(16))) +
               (x121 * Val(32))) +
              (x122 * Val(64)));
  Val x140 = ((((((x139 + (x123 * Val(128))) + (x124 * Val(256))) + (x125 * Val(512))) +
                (x126 * Val(1024))) +
               (x127 * Val(2048))) +
              (x128 * Val(4096)));
  Val x141 = ((((((x140 + (x129 * Val(8192))) + (x130 * Val(16384))) + (x131 * Val(32768))) +
                (x132 * Val(65536))) +
               (x133 * Val(131072))) +
              (x134 * Val(262144)));
  EQZ(((((x141 + (x135 * Val(524288))) + (x136 * Val(1048576))) + (x137 * Val(2097152))) - x113),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:608)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:612)
  Val x142 = x2[2]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:620)
  ToBits_21_Struct x143 = exec_ToBits_21_(ctx, x142, LAYOUT_LOOKUP(layout1, unpack_1x));
  NondetRegStruct21Array x144 = x143._super;
  Val x145 = x144[0]._super;
  Val x146 = x144[1]._super;
  Val x147 = x144[2]._super;
  Val x148 = x144[3]._super;
  Val x149 = x144[4]._super;
  Val x150 = x144[5]._super;
  Val x151 = x144[6]._super;
  Val x152 = x144[7]._super;
  Val x153 = x144[8]._super;
  Val x154 = x144[9]._super;
  Val x155 = x144[10]._super;
  Val x156 = x144[11]._super;
  Val x157 = x144[12]._super;
  Val x158 = x144[13]._super;
  Val x159 = x144[14]._super;
  Val x160 = x144[15]._super;
  Val x161 = x144[16]._super;
  Val x162 = x144[17]._super;
  Val x163 = x144[18]._super;
  Val x164 = x144[19]._super;
  Val x165 = x144[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:621)
  Val x166 = (x146 * Val(2));
  Val x167 = ((((((x145 + x166) + (x147 * Val(4))) + (x148 * Val(8))) + (x149 * Val(16))) +
               (x150 * Val(32))) +
              (x151 * Val(64)));
  Val x168 = ((((((x167 + (x152 * Val(128))) + (x153 * Val(256))) + (x154 * Val(512))) +
                (x155 * Val(1024))) +
               (x156 * Val(2048))) +
              (x157 * Val(4096)));
  Val x169 = ((((((x168 + (x158 * Val(8192))) + (x159 * Val(16384))) + (x160 * Val(32768))) +
                (x161 * Val(65536))) +
               (x162 * Val(131072))) +
              (x163 * Val(262144)));
  EQZ((((x169 + (x164 * Val(524288))) + (x165 * Val(1048576))) - x142),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:621)");
  // andnxor(zirgen/circuit/keccak/keccak.zir:118)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:623)
  Val x170 = ((Val(1) - x6) * x61);
  Val x171 = ((Val(1) - x7) * x62);
  Val x172 = ((Val(1) - x8) * x63);
  Val x173 = ((Val(1) - x9) * x64);
  Val x174 = ((Val(1) - x10) * x65);
  Val x175 = ((Val(1) - x11) * x66);
  Val x176 = ((Val(1) - x12) * x67);
  Val x177 = ((Val(1) - x13) * x68);
  Val x178 = ((Val(1) - x14) * x69);
  Val x179 = ((Val(1) - x15) * x70);
  Val x180 = ((Val(1) - x16) * x71);
  Val x181 = ((Val(1) - x17) * x72);
  Val x182 = ((Val(1) - x18) * x73);
  Val x183 = ((Val(1) - x19) * x74);
  Val x184 = ((Val(1) - x20) * x75);
  Val x185 = ((Val(1) - x21) * x76);
  Val x186 = ((Val(1) - x22) * x77);
  Val x187 = ((Val(1) - x23) * x78);
  Val x188 = ((Val(1) - x24) * x79);
  Val x189 = ((Val(1) - x25) * x80);
  Val x190 = ((Val(1) - x26) * x81);
  Val x191 = ((Val(1) - x27) * x82);
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:624)
  Val x192 = ((Val(1) - x34) * x89);
  Val x193 = ((Val(1) - x35) * x90);
  Val x194 = ((Val(1) - x36) * x91);
  Val x195 = ((Val(1) - x37) * x92);
  Val x196 = ((Val(1) - x38) * x93);
  Val x197 = ((Val(1) - x39) * x94);
  Val x198 = ((Val(1) - x40) * x95);
  Val x199 = ((Val(1) - x41) * x96);
  Val x200 = ((Val(1) - x42) * x97);
  Val x201 = ((Val(1) - x43) * x98);
  Val x202 = ((Val(1) - x44) * x99);
  Val x203 = ((Val(1) - x45) * x100);
  Val x204 = ((Val(1) - x46) * x101);
  Val x205 = ((Val(1) - x47) * x102);
  Val x206 = ((Val(1) - x48) * x103);
  Val x207 = ((Val(1) - x49) * x104);
  Val x208 = ((Val(1) - x50) * x105);
  Val x209 = ((Val(1) - x51) * x106);
  Val x210 = ((Val(1) - x52) * x107);
  Val x211 = ((Val(1) - x53) * x108);
  Val x212 = ((Val(1) - x54) * x109);
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:625)
  Val x213 =
      (((((x116 + x170) - ((x116 * Val(2)) * x170)) + (((x117 + x171) - (x138 * x171)) * Val(2))) +
        (((x118 + x172) - ((x118 * Val(2)) * x172)) * Val(4))) +
       (((x119 + x173) - ((x119 * Val(2)) * x173)) * Val(8)));
  Val x214 = (((x213 + (((x120 + x174) - ((x120 * Val(2)) * x174)) * Val(16))) +
               (((x121 + x175) - ((x121 * Val(2)) * x175)) * Val(32))) +
              (((x122 + x176) - ((x122 * Val(2)) * x176)) * Val(64)));
  Val x215 = (((x214 + (((x123 + x177) - ((x123 * Val(2)) * x177)) * Val(128))) +
               (((x124 + x178) - ((x124 * Val(2)) * x178)) * Val(256))) +
              (((x125 + x179) - ((x125 * Val(2)) * x179)) * Val(512)));
  Val x216 = (((x215 + (((x126 + x180) - ((x126 * Val(2)) * x180)) * Val(1024))) +
               (((x127 + x181) - ((x127 * Val(2)) * x181)) * Val(2048))) +
              (((x128 + x182) - ((x128 * Val(2)) * x182)) * Val(4096)));
  Val x217 = (((x216 + (((x129 + x183) - ((x129 * Val(2)) * x183)) * Val(8192))) +
               (((x130 + x184) - ((x130 * Val(2)) * x184)) * Val(16384))) +
              (((x131 + x185) - ((x131 * Val(2)) * x185)) * Val(32768)));
  Val x218 = (((x217 + (((x132 + x186) - ((x132 * Val(2)) * x186)) * Val(65536))) +
               (((x133 + x187) - ((x133 * Val(2)) * x187)) * Val(131072))) +
              (((x134 + x188) - ((x134 * Val(2)) * x188)) * Val(262144)));
  Val x219 = (((x218 + (((x135 + x189) - ((x135 * Val(2)) * x189)) * Val(524288))) +
               (((x136 + x190) - ((x136 * Val(2)) * x190)) * Val(1048576))) +
              (((x137 + x191) - ((x137 * Val(2)) * x191)) * Val(2097152)));
  NondetRegStruct x220 = exec_Reg(ctx, x219, LAYOUT_LOOKUP(layout1, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  Val x221 =
      (((((x145 + x192) - ((x145 * Val(2)) * x192)) + (((x146 + x193) - (x166 * x193)) * Val(2))) +
        (((x147 + x194) - ((x147 * Val(2)) * x194)) * Val(4))) +
       (((x148 + x195) - ((x148 * Val(2)) * x195)) * Val(8)));
  Val x222 = (((x221 + (((x149 + x196) - ((x149 * Val(2)) * x196)) * Val(16))) +
               (((x150 + x197) - ((x150 * Val(2)) * x197)) * Val(32))) +
              (((x151 + x198) - ((x151 * Val(2)) * x198)) * Val(64)));
  Val x223 = (((x222 + (((x152 + x199) - ((x152 * Val(2)) * x199)) * Val(128))) +
               (((x153 + x200) - ((x153 * Val(2)) * x200)) * Val(256))) +
              (((x154 + x201) - ((x154 * Val(2)) * x201)) * Val(512)));
  Val x224 = (((x223 + (((x155 + x202) - ((x155 * Val(2)) * x202)) * Val(1024))) +
               (((x156 + x203) - ((x156 * Val(2)) * x203)) * Val(2048))) +
              (((x157 + x204) - ((x157 * Val(2)) * x204)) * Val(4096)));
  Val x225 = (((x224 + (((x158 + x205) - ((x158 * Val(2)) * x205)) * Val(8192))) +
               (((x159 + x206) - ((x159 * Val(2)) * x206)) * Val(16384))) +
              (((x160 + x207) - ((x160 * Val(2)) * x207)) * Val(32768)));
  Val x226 = (((x225 + (((x161 + x208) - ((x161 * Val(2)) * x208)) * Val(65536))) +
               (((x162 + x209) - ((x162 * Val(2)) * x209)) * Val(131072))) +
              (((x163 + x210) - ((x163 * Val(2)) * x210)) * Val(262144)));
  NondetRegStruct x227 =
      exec_Reg(ctx,
               ((x226 + (((x164 + x211) - ((x164 * Val(2)) * x211)) * Val(524288))) +
                (((x165 + x212) - ((x165 * Val(2)) * x212)) * Val(1048576))),
               LAYOUT_LOOKUP(layout1, _1));
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:630)
  Val22Array x228 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x229 = exec_RetTuple(
      ctx,
      x228,
      x228,
      x228,
      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), x220._super, x227._super},
      x228,
      x228,
      Val(1),
      Val(13),
      arg0.rnd._super,
      arg0.blk._super,
      arg0.midx._super,
      LAYOUT_LOOKUP(layout1, _super));
  return x229;
}
RetTupleStruct execChiMinor1_0__3_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<ChiMinor1_0__3_Layout> layout2) {
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:685)
  BoundLayout<ChiMinor1_0__3__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:635)
  RetTupleStruct x4 = back_RetTuple(ctx, 2, arg1);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:636)
  RetTupleStruct x5 = back_RetTuple(ctx, 1, arg1);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:635)
  NondetRegStruct22Array x6 = x4.arrC;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:640)
  Val x7 = x6[3]._super;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:648)
  ToBits_21_Struct x8 = exec_ToBits_21_(ctx, x7, LAYOUT_LOOKUP(layout2, unpack_2x));
  NondetRegStruct21Array x9 = x8._super;
  Val x10 = x9[0]._super;
  Val x11 = x9[1]._super;
  Val x12 = x9[2]._super;
  Val x13 = x9[3]._super;
  Val x14 = x9[4]._super;
  Val x15 = x9[5]._super;
  Val x16 = x9[6]._super;
  Val x17 = x9[7]._super;
  Val x18 = x9[8]._super;
  Val x19 = x9[9]._super;
  Val x20 = x9[10]._super;
  Val x21 = x9[11]._super;
  Val x22 = x9[12]._super;
  Val x23 = x9[13]._super;
  Val x24 = x9[14]._super;
  Val x25 = x9[15]._super;
  Val x26 = x9[16]._super;
  Val x27 = x9[17]._super;
  Val x28 = x9[18]._super;
  Val x29 = x9[19]._super;
  Val x30 = x9[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:649)
  Val x31 = (x11 * Val(2));
  Val x32 =
      ((((((x10 + x31) + (x12 * Val(4))) + (x13 * Val(8))) + (x14 * Val(16))) + (x15 * Val(32))) +
       (x16 * Val(64)));
  Val x33 =
      ((((((x32 + (x17 * Val(128))) + (x18 * Val(256))) + (x19 * Val(512))) + (x20 * Val(1024))) +
        (x21 * Val(2048))) +
       (x22 * Val(4096)));
  Val x34 = ((((((x33 + (x23 * Val(8192))) + (x24 * Val(16384))) + (x25 * Val(32768))) +
               (x26 * Val(65536))) +
              (x27 * Val(131072))) +
             (x28 * Val(262144)));
  EQZ((((x34 + (x29 * Val(524288))) + (x30 * Val(1048576))) - x7),
      "chi_minor1(zirgen/circuit/keccak/keccak.zir:649)");
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:654)
  Val x35 = x6[6]._super;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:662)
  ToBits_21_Struct x36 = exec_ToBits_21_(ctx, x35, LAYOUT_LOOKUP(layout2, unpack_2xp1));
  NondetRegStruct21Array x37 = x36._super;
  Val x38 = x37[0]._super;
  Val x39 = x37[1]._super;
  Val x40 = x37[2]._super;
  Val x41 = x37[3]._super;
  Val x42 = x37[4]._super;
  Val x43 = x37[5]._super;
  Val x44 = x37[6]._super;
  Val x45 = x37[7]._super;
  Val x46 = x37[8]._super;
  Val x47 = x37[9]._super;
  Val x48 = x37[10]._super;
  Val x49 = x37[11]._super;
  Val x50 = x37[12]._super;
  Val x51 = x37[13]._super;
  Val x52 = x37[14]._super;
  Val x53 = x37[15]._super;
  Val x54 = x37[16]._super;
  Val x55 = x37[17]._super;
  Val x56 = x37[18]._super;
  Val x57 = x37[19]._super;
  Val x58 = x37[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:663)
  Val x59 = ((((((x38 + (x39 * Val(2))) + (x40 * Val(4))) + (x41 * Val(8))) + (x42 * Val(16))) +
              (x43 * Val(32))) +
             (x44 * Val(64)));
  Val x60 =
      ((((((x59 + (x45 * Val(128))) + (x46 * Val(256))) + (x47 * Val(512))) + (x48 * Val(1024))) +
        (x49 * Val(2048))) +
       (x50 * Val(4096)));
  Val x61 = ((((((x60 + (x51 * Val(8192))) + (x52 * Val(16384))) + (x53 * Val(32768))) +
               (x54 * Val(65536))) +
              (x55 * Val(131072))) +
             (x56 * Val(262144)));
  EQZ((((x61 + (x57 * Val(524288))) + (x58 * Val(1048576))) - x35),
      "chi_minor1(zirgen/circuit/keccak/keccak.zir:663)");
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:667)
  Val x62 = x6[9]._super;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:675)
  ToBits_21_Struct x63 = exec_ToBits_21_(ctx, x62, LAYOUT_LOOKUP(layout2, unpack_2xp2));
  NondetRegStruct21Array x64 = x63._super;
  Val x65 = x64[0]._super;
  Val x66 = x64[1]._super;
  Val x67 = x64[2]._super;
  Val x68 = x64[3]._super;
  Val x69 = x64[4]._super;
  Val x70 = x64[5]._super;
  Val x71 = x64[6]._super;
  Val x72 = x64[7]._super;
  Val x73 = x64[8]._super;
  Val x74 = x64[9]._super;
  Val x75 = x64[10]._super;
  Val x76 = x64[11]._super;
  Val x77 = x64[12]._super;
  Val x78 = x64[13]._super;
  Val x79 = x64[14]._super;
  Val x80 = x64[15]._super;
  Val x81 = x64[16]._super;
  Val x82 = x64[17]._super;
  Val x83 = x64[18]._super;
  Val x84 = x64[19]._super;
  Val x85 = x64[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:676)
  Val x86 = ((((((x65 + (x66 * Val(2))) + (x67 * Val(4))) + (x68 * Val(8))) + (x69 * Val(16))) +
              (x70 * Val(32))) +
             (x71 * Val(64)));
  Val x87 =
      ((((((x86 + (x72 * Val(128))) + (x73 * Val(256))) + (x74 * Val(512))) + (x75 * Val(1024))) +
        (x76 * Val(2048))) +
       (x77 * Val(4096)));
  Val x88 = ((((((x87 + (x78 * Val(8192))) + (x79 * Val(16384))) + (x80 * Val(32768))) +
               (x81 * Val(65536))) +
              (x82 * Val(131072))) +
             (x83 * Val(262144)));
  EQZ((((x88 + (x84 * Val(524288))) + (x85 * Val(1048576))) - x62),
      "chi_minor1(zirgen/circuit/keccak/keccak.zir:676)");
  // andnxor(zirgen/circuit/keccak/keccak.zir:118)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:678)
  Val x89 = ((Val(1) - x38) * x65);
  Val x90 = ((Val(1) - x39) * x66);
  Val x91 = ((Val(1) - x40) * x67);
  Val x92 = ((Val(1) - x41) * x68);
  Val x93 = ((Val(1) - x42) * x69);
  Val x94 = ((Val(1) - x43) * x70);
  Val x95 = ((Val(1) - x44) * x71);
  Val x96 = ((Val(1) - x45) * x72);
  Val x97 = ((Val(1) - x46) * x73);
  Val x98 = ((Val(1) - x47) * x74);
  Val x99 = ((Val(1) - x48) * x75);
  Val x100 = ((Val(1) - x49) * x76);
  Val x101 = ((Val(1) - x50) * x77);
  Val x102 = ((Val(1) - x51) * x78);
  Val x103 = ((Val(1) - x52) * x79);
  Val x104 = ((Val(1) - x53) * x80);
  Val x105 = ((Val(1) - x54) * x81);
  Val x106 = ((Val(1) - x55) * x82);
  Val x107 = ((Val(1) - x56) * x83);
  Val x108 = ((Val(1) - x57) * x84);
  Val x109 = ((Val(1) - x58) * x85);
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:679)
  Val x110 = (((((x10 + x89) - ((x10 * Val(2)) * x89)) + (((x11 + x90) - (x31 * x90)) * Val(2))) +
               (((x12 + x91) - ((x12 * Val(2)) * x91)) * Val(4))) +
              (((x13 + x92) - ((x13 * Val(2)) * x92)) * Val(8)));
  Val x111 = (((x110 + (((x14 + x93) - ((x14 * Val(2)) * x93)) * Val(16))) +
               (((x15 + x94) - ((x15 * Val(2)) * x94)) * Val(32))) +
              (((x16 + x95) - ((x16 * Val(2)) * x95)) * Val(64)));
  Val x112 = (((x111 + (((x17 + x96) - ((x17 * Val(2)) * x96)) * Val(128))) +
               (((x18 + x97) - ((x18 * Val(2)) * x97)) * Val(256))) +
              (((x19 + x98) - ((x19 * Val(2)) * x98)) * Val(512)));
  Val x113 = (((x112 + (((x20 + x99) - ((x20 * Val(2)) * x99)) * Val(1024))) +
               (((x21 + x100) - ((x21 * Val(2)) * x100)) * Val(2048))) +
              (((x22 + x101) - ((x22 * Val(2)) * x101)) * Val(4096)));
  Val x114 = (((x113 + (((x23 + x102) - ((x23 * Val(2)) * x102)) * Val(8192))) +
               (((x24 + x103) - ((x24 * Val(2)) * x103)) * Val(16384))) +
              (((x25 + x104) - ((x25 * Val(2)) * x104)) * Val(32768)));
  Val x115 = (((x114 + (((x26 + x105) - ((x26 * Val(2)) * x105)) * Val(65536))) +
               (((x27 + x106) - ((x27 * Val(2)) * x106)) * Val(131072))) +
              (((x28 + x107) - ((x28 * Val(2)) * x107)) * Val(262144)));
  NondetRegStruct x116 =
      exec_Reg(ctx,
               ((x115 + (((x29 + x108) - ((x29 * Val(2)) * x108)) * Val(524288))) +
                (((x30 + x109) - ((x30 * Val(2)) * x109)) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, res3));
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:636)
  NondetRegStruct24Array x117 = x5.arrD;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:685)
  BoundLayout<ChiMinor1_0__3_Arm1_SuperLayout> x118 = LAYOUT_LOOKUP(x3, arm1);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:680)
  Val22Array x119 =
      Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), x117[22]._super};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:681)
  Val22Array x120 =
      Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), x117[23]._super};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:682)
  Val22Array x121 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), x116._super};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:686)
  Val24Array x122 = Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  Val22Array x123 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:636)
  Val x124 = x5.rnd._super;
  Val x125 = x5.blk._super;
  Val x126 = x5.midx._super;
  if (to_size_t(Val(0))) {
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:686)
    RetTupleStruct x127 = exec_RetTuple(ctx,
                                        x119,
                                        x120,
                                        x121,
                                        x122,
                                        x123,
                                        x123,
                                        Val(2),
                                        Val(13),
                                        x124,
                                        x125,
                                        x126,
                                        LAYOUT_LOOKUP(x3, arm0));
  }
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:718)
  Val x128 = x6[12]._super;
  if (to_size_t(Val(1))) {
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:699)
    ToBits_21_Struct x129 = exec_ToBits_21_(ctx, x35, LAYOUT_LOOKUP(x118, unpack_2nx));
    NondetRegStruct21Array x130 = x129._super;
    Val x131 = x130[0]._super;
    Val x132 = x130[1]._super;
    Val x133 = x130[2]._super;
    Val x134 = x130[3]._super;
    Val x135 = x130[4]._super;
    Val x136 = x130[5]._super;
    Val x137 = x130[6]._super;
    Val x138 = x130[7]._super;
    Val x139 = x130[8]._super;
    Val x140 = x130[9]._super;
    Val x141 = x130[10]._super;
    Val x142 = x130[11]._super;
    Val x143 = x130[12]._super;
    Val x144 = x130[13]._super;
    Val x145 = x130[14]._super;
    Val x146 = x130[15]._super;
    Val x147 = x130[16]._super;
    Val x148 = x130[17]._super;
    Val x149 = x130[18]._super;
    Val x150 = x130[19]._super;
    Val x151 = x130[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:700)
    Val x152 = (x132 * Val(2));
    Val x153 = ((((((x131 + x152) + (x133 * Val(4))) + (x134 * Val(8))) + (x135 * Val(16))) +
                 (x136 * Val(32))) +
                (x137 * Val(64)));
    Val x154 = ((((((x153 + (x138 * Val(128))) + (x139 * Val(256))) + (x140 * Val(512))) +
                  (x141 * Val(1024))) +
                 (x142 * Val(2048))) +
                (x143 * Val(4096)));
    Val x155 = ((((((x154 + (x144 * Val(8192))) + (x145 * Val(16384))) + (x146 * Val(32768))) +
                  (x147 * Val(65536))) +
                 (x148 * Val(131072))) +
                (x149 * Val(262144)));
    EQZ((((x155 + (x150 * Val(524288))) + (x151 * Val(1048576))) - x35),
        "chi_minor1(zirgen/circuit/keccak/keccak.zir:700)");
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:713)
    ToBits_21_Struct x156 = exec_ToBits_21_(ctx, x62, LAYOUT_LOOKUP(x118, unpack_2nxp1));
    NondetRegStruct21Array x157 = x156._super;
    Val x158 = x157[0]._super;
    Val x159 = x157[1]._super;
    Val x160 = x157[2]._super;
    Val x161 = x157[3]._super;
    Val x162 = x157[4]._super;
    Val x163 = x157[5]._super;
    Val x164 = x157[6]._super;
    Val x165 = x157[7]._super;
    Val x166 = x157[8]._super;
    Val x167 = x157[9]._super;
    Val x168 = x157[10]._super;
    Val x169 = x157[11]._super;
    Val x170 = x157[12]._super;
    Val x171 = x157[13]._super;
    Val x172 = x157[14]._super;
    Val x173 = x157[15]._super;
    Val x174 = x157[16]._super;
    Val x175 = x157[17]._super;
    Val x176 = x157[18]._super;
    Val x177 = x157[19]._super;
    Val x178 = x157[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:714)
    Val x179 =
        ((((((x158 + (x159 * Val(2))) + (x160 * Val(4))) + (x161 * Val(8))) + (x162 * Val(16))) +
          (x163 * Val(32))) +
         (x164 * Val(64)));
    Val x180 = ((((((x179 + (x165 * Val(128))) + (x166 * Val(256))) + (x167 * Val(512))) +
                  (x168 * Val(1024))) +
                 (x169 * Val(2048))) +
                (x170 * Val(4096)));
    Val x181 = ((((((x180 + (x171 * Val(8192))) + (x172 * Val(16384))) + (x173 * Val(32768))) +
                  (x174 * Val(65536))) +
                 (x175 * Val(131072))) +
                (x176 * Val(262144)));
    EQZ((((x181 + (x177 * Val(524288))) + (x178 * Val(1048576))) - x62),
        "chi_minor1(zirgen/circuit/keccak/keccak.zir:714)");
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:726)
    ToBits_21_Struct x182 = exec_ToBits_21_(ctx, x128, LAYOUT_LOOKUP(x118, unpack_2nxp2));
    NondetRegStruct21Array x183 = x182._super;
    Val x184 = x183[0]._super;
    Val x185 = x183[1]._super;
    Val x186 = x183[2]._super;
    Val x187 = x183[3]._super;
    Val x188 = x183[4]._super;
    Val x189 = x183[5]._super;
    Val x190 = x183[6]._super;
    Val x191 = x183[7]._super;
    Val x192 = x183[8]._super;
    Val x193 = x183[9]._super;
    Val x194 = x183[10]._super;
    Val x195 = x183[11]._super;
    Val x196 = x183[12]._super;
    Val x197 = x183[13]._super;
    Val x198 = x183[14]._super;
    Val x199 = x183[15]._super;
    Val x200 = x183[16]._super;
    Val x201 = x183[17]._super;
    Val x202 = x183[18]._super;
    Val x203 = x183[19]._super;
    Val x204 = x183[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:727)
    Val x205 =
        ((((((x184 + (x185 * Val(2))) + (x186 * Val(4))) + (x187 * Val(8))) + (x188 * Val(16))) +
          (x189 * Val(32))) +
         (x190 * Val(64)));
    Val x206 = ((((((x205 + (x191 * Val(128))) + (x192 * Val(256))) + (x193 * Val(512))) +
                  (x194 * Val(1024))) +
                 (x195 * Val(2048))) +
                (x196 * Val(4096)));
    Val x207 = ((((((x206 + (x197 * Val(8192))) + (x198 * Val(16384))) + (x199 * Val(32768))) +
                  (x200 * Val(65536))) +
                 (x201 * Val(131072))) +
                (x202 * Val(262144)));
    EQZ((((x207 + (x203 * Val(524288))) + (x204 * Val(1048576))) - x128),
        "chi_minor1(zirgen/circuit/keccak/keccak.zir:727)");
    // andnxor(zirgen/circuit/keccak/keccak.zir:118)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:729)
    Val x208 = ((Val(1) - x158) * x184);
    Val x209 = ((Val(1) - x159) * x185);
    Val x210 = ((Val(1) - x160) * x186);
    Val x211 = ((Val(1) - x161) * x187);
    Val x212 = ((Val(1) - x162) * x188);
    Val x213 = ((Val(1) - x163) * x189);
    Val x214 = ((Val(1) - x164) * x190);
    Val x215 = ((Val(1) - x165) * x191);
    Val x216 = ((Val(1) - x166) * x192);
    Val x217 = ((Val(1) - x167) * x193);
    Val x218 = ((Val(1) - x168) * x194);
    Val x219 = ((Val(1) - x169) * x195);
    Val x220 = ((Val(1) - x170) * x196);
    Val x221 = ((Val(1) - x171) * x197);
    Val x222 = ((Val(1) - x172) * x198);
    Val x223 = ((Val(1) - x173) * x199);
    Val x224 = ((Val(1) - x174) * x200);
    Val x225 = ((Val(1) - x175) * x201);
    Val x226 = ((Val(1) - x176) * x202);
    Val x227 = ((Val(1) - x177) * x203);
    Val x228 = ((Val(1) - x178) * x204);
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:730)
    Val x229 = (((((x131 + x208) - ((x131 * Val(2)) * x208)) +
                  (((x132 + x209) - (x152 * x209)) * Val(2))) +
                 (((x133 + x210) - ((x133 * Val(2)) * x210)) * Val(4))) +
                (((x134 + x211) - ((x134 * Val(2)) * x211)) * Val(8)));
    Val x230 = (((x229 + (((x135 + x212) - ((x135 * Val(2)) * x212)) * Val(16))) +
                 (((x136 + x213) - ((x136 * Val(2)) * x213)) * Val(32))) +
                (((x137 + x214) - ((x137 * Val(2)) * x214)) * Val(64)));
    Val x231 = (((x230 + (((x138 + x215) - ((x138 * Val(2)) * x215)) * Val(128))) +
                 (((x139 + x216) - ((x139 * Val(2)) * x216)) * Val(256))) +
                (((x140 + x217) - ((x140 * Val(2)) * x217)) * Val(512)));
    Val x232 = (((x231 + (((x141 + x218) - ((x141 * Val(2)) * x218)) * Val(1024))) +
                 (((x142 + x219) - ((x142 * Val(2)) * x219)) * Val(2048))) +
                (((x143 + x220) - ((x143 * Val(2)) * x220)) * Val(4096)));
    Val x233 = (((x232 + (((x144 + x221) - ((x144 * Val(2)) * x221)) * Val(8192))) +
                 (((x145 + x222) - ((x145 * Val(2)) * x222)) * Val(16384))) +
                (((x146 + x223) - ((x146 * Val(2)) * x223)) * Val(32768)));
    Val x234 = (((x233 + (((x147 + x224) - ((x147 * Val(2)) * x224)) * Val(65536))) +
                 (((x148 + x225) - ((x148 * Val(2)) * x225)) * Val(131072))) +
                (((x149 + x226) - ((x149 * Val(2)) * x226)) * Val(262144)));
    NondetRegStruct x235 =
        exec_Reg(ctx,
                 ((x234 + (((x150 + x227) - ((x150 * Val(2)) * x227)) * Val(524288))) +
                  (((x151 + x228) - ((x151 * Val(2)) * x228)) * Val(1048576))),
                 LAYOUT_LOOKUP(x118, res3n));
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:733)
    RetTupleStruct x236 =
        exec_RetTuple(ctx,
                      x119,
                      x120,
                      x121,
                      x122,
                      x123,
                      Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), x235._super},
                      Val(2),
                      Val(13),
                      x124,
                      x125,
                      x126,
                      LAYOUT_LOOKUP(x118, _super));
  }
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:685)
  RetTupleStruct x237 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x237;
}
RetTupleStruct execChiMinor0_1__3_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<ChiMinor0_1__3_Layout> layout1) {
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:542)
  NondetRegStruct22Array x2 = arg0.arrC;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:546)
  Val x3 = x2[7]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:554)
  ToBits_22_Struct x4 = exec_ToBits_22_(ctx, x3, LAYOUT_LOOKUP(layout1, unpack_0xp1));
  NondetRegStruct22Array x5 = x4._super;
  Val x6 = x5[0]._super;
  Val x7 = x5[1]._super;
  Val x8 = x5[2]._super;
  Val x9 = x5[3]._super;
  Val x10 = x5[4]._super;
  Val x11 = x5[5]._super;
  Val x12 = x5[6]._super;
  Val x13 = x5[7]._super;
  Val x14 = x5[8]._super;
  Val x15 = x5[9]._super;
  Val x16 = x5[10]._super;
  Val x17 = x5[11]._super;
  Val x18 = x5[12]._super;
  Val x19 = x5[13]._super;
  Val x20 = x5[14]._super;
  Val x21 = x5[15]._super;
  Val x22 = x5[16]._super;
  Val x23 = x5[17]._super;
  Val x24 = x5[18]._super;
  Val x25 = x5[19]._super;
  Val x26 = x5[20]._super;
  Val x27 = x5[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:555)
  Val x28 = ((((((x6 + (x7 * Val(2))) + (x8 * Val(4))) + (x9 * Val(8))) + (x10 * Val(16))) +
              (x11 * Val(32))) +
             (x12 * Val(64)));
  Val x29 =
      ((((((x28 + (x13 * Val(128))) + (x14 * Val(256))) + (x15 * Val(512))) + (x16 * Val(1024))) +
        (x17 * Val(2048))) +
       (x18 * Val(4096)));
  Val x30 = ((((((x29 + (x19 * Val(8192))) + (x20 * Val(16384))) + (x21 * Val(32768))) +
               (x22 * Val(65536))) +
              (x23 * Val(131072))) +
             (x24 * Val(262144)));
  EQZ(((((x30 + (x25 * Val(524288))) + (x26 * Val(1048576))) + (x27 * Val(2097152))) - x3),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:555)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:559)
  Val x31 = x2[8]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:567)
  ToBits_21_Struct x32 = exec_ToBits_21_(ctx, x31, LAYOUT_LOOKUP(layout1, unpack_1xp1));
  NondetRegStruct21Array x33 = x32._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:568)
  Val x55 = ((((((x34 + (x35 * Val(2))) + (x36 * Val(4))) + (x37 * Val(8))) + (x38 * Val(16))) +
              (x39 * Val(32))) +
             (x40 * Val(64)));
  Val x56 =
      ((((((x55 + (x41 * Val(128))) + (x42 * Val(256))) + (x43 * Val(512))) + (x44 * Val(1024))) +
        (x45 * Val(2048))) +
       (x46 * Val(4096)));
  Val x57 = ((((((x56 + (x47 * Val(8192))) + (x48 * Val(16384))) + (x49 * Val(32768))) +
               (x50 * Val(65536))) +
              (x51 * Val(131072))) +
             (x52 * Val(262144)));
  EQZ((((x57 + (x53 * Val(524288))) + (x54 * Val(1048576))) - x31),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:568)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:573)
  Val x58 = x2[10]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:581)
  ToBits_22_Struct x59 = exec_ToBits_22_(ctx, x58, LAYOUT_LOOKUP(layout1, unpack_0xp2));
  NondetRegStruct22Array x60 = x59._super;
  Val x61 = x60[0]._super;
  Val x62 = x60[1]._super;
  Val x63 = x60[2]._super;
  Val x64 = x60[3]._super;
  Val x65 = x60[4]._super;
  Val x66 = x60[5]._super;
  Val x67 = x60[6]._super;
  Val x68 = x60[7]._super;
  Val x69 = x60[8]._super;
  Val x70 = x60[9]._super;
  Val x71 = x60[10]._super;
  Val x72 = x60[11]._super;
  Val x73 = x60[12]._super;
  Val x74 = x60[13]._super;
  Val x75 = x60[14]._super;
  Val x76 = x60[15]._super;
  Val x77 = x60[16]._super;
  Val x78 = x60[17]._super;
  Val x79 = x60[18]._super;
  Val x80 = x60[19]._super;
  Val x81 = x60[20]._super;
  Val x82 = x60[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:582)
  Val x83 = ((((((x61 + (x62 * Val(2))) + (x63 * Val(4))) + (x64 * Val(8))) + (x65 * Val(16))) +
              (x66 * Val(32))) +
             (x67 * Val(64)));
  Val x84 =
      ((((((x83 + (x68 * Val(128))) + (x69 * Val(256))) + (x70 * Val(512))) + (x71 * Val(1024))) +
        (x72 * Val(2048))) +
       (x73 * Val(4096)));
  Val x85 = ((((((x84 + (x74 * Val(8192))) + (x75 * Val(16384))) + (x76 * Val(32768))) +
               (x77 * Val(65536))) +
              (x78 * Val(131072))) +
             (x79 * Val(262144)));
  EQZ(((((x85 + (x80 * Val(524288))) + (x81 * Val(1048576))) + (x82 * Val(2097152))) - x58),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:582)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:586)
  Val x86 = x2[11]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:594)
  ToBits_21_Struct x87 = exec_ToBits_21_(ctx, x86, LAYOUT_LOOKUP(layout1, unpack_1xp2));
  NondetRegStruct21Array x88 = x87._super;
  Val x89 = x88[0]._super;
  Val x90 = x88[1]._super;
  Val x91 = x88[2]._super;
  Val x92 = x88[3]._super;
  Val x93 = x88[4]._super;
  Val x94 = x88[5]._super;
  Val x95 = x88[6]._super;
  Val x96 = x88[7]._super;
  Val x97 = x88[8]._super;
  Val x98 = x88[9]._super;
  Val x99 = x88[10]._super;
  Val x100 = x88[11]._super;
  Val x101 = x88[12]._super;
  Val x102 = x88[13]._super;
  Val x103 = x88[14]._super;
  Val x104 = x88[15]._super;
  Val x105 = x88[16]._super;
  Val x106 = x88[17]._super;
  Val x107 = x88[18]._super;
  Val x108 = x88[19]._super;
  Val x109 = x88[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:595)
  Val x110 = ((((((x89 + (x90 * Val(2))) + (x91 * Val(4))) + (x92 * Val(8))) + (x93 * Val(16))) +
               (x94 * Val(32))) +
              (x95 * Val(64)));
  Val x111 =
      ((((((x110 + (x96 * Val(128))) + (x97 * Val(256))) + (x98 * Val(512))) + (x99 * Val(1024))) +
        (x100 * Val(2048))) +
       (x101 * Val(4096)));
  Val x112 = ((((((x111 + (x102 * Val(8192))) + (x103 * Val(16384))) + (x104 * Val(32768))) +
                (x105 * Val(65536))) +
               (x106 * Val(131072))) +
              (x107 * Val(262144)));
  EQZ((((x112 + (x108 * Val(524288))) + (x109 * Val(1048576))) - x86),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:595)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:599)
  Val x113 = x2[4]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:607)
  ToBits_22_Struct x114 = exec_ToBits_22_(ctx, x113, LAYOUT_LOOKUP(layout1, unpack_0x));
  NondetRegStruct22Array x115 = x114._super;
  Val x116 = x115[0]._super;
  Val x117 = x115[1]._super;
  Val x118 = x115[2]._super;
  Val x119 = x115[3]._super;
  Val x120 = x115[4]._super;
  Val x121 = x115[5]._super;
  Val x122 = x115[6]._super;
  Val x123 = x115[7]._super;
  Val x124 = x115[8]._super;
  Val x125 = x115[9]._super;
  Val x126 = x115[10]._super;
  Val x127 = x115[11]._super;
  Val x128 = x115[12]._super;
  Val x129 = x115[13]._super;
  Val x130 = x115[14]._super;
  Val x131 = x115[15]._super;
  Val x132 = x115[16]._super;
  Val x133 = x115[17]._super;
  Val x134 = x115[18]._super;
  Val x135 = x115[19]._super;
  Val x136 = x115[20]._super;
  Val x137 = x115[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:608)
  Val x138 = (x117 * Val(2));
  Val x139 = ((((((x116 + x138) + (x118 * Val(4))) + (x119 * Val(8))) + (x120 * Val(16))) +
               (x121 * Val(32))) +
              (x122 * Val(64)));
  Val x140 = ((((((x139 + (x123 * Val(128))) + (x124 * Val(256))) + (x125 * Val(512))) +
                (x126 * Val(1024))) +
               (x127 * Val(2048))) +
              (x128 * Val(4096)));
  Val x141 = ((((((x140 + (x129 * Val(8192))) + (x130 * Val(16384))) + (x131 * Val(32768))) +
                (x132 * Val(65536))) +
               (x133 * Val(131072))) +
              (x134 * Val(262144)));
  EQZ(((((x141 + (x135 * Val(524288))) + (x136 * Val(1048576))) + (x137 * Val(2097152))) - x113),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:608)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:612)
  Val x142 = x2[5]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:620)
  ToBits_21_Struct x143 = exec_ToBits_21_(ctx, x142, LAYOUT_LOOKUP(layout1, unpack_1x));
  NondetRegStruct21Array x144 = x143._super;
  Val x145 = x144[0]._super;
  Val x146 = x144[1]._super;
  Val x147 = x144[2]._super;
  Val x148 = x144[3]._super;
  Val x149 = x144[4]._super;
  Val x150 = x144[5]._super;
  Val x151 = x144[6]._super;
  Val x152 = x144[7]._super;
  Val x153 = x144[8]._super;
  Val x154 = x144[9]._super;
  Val x155 = x144[10]._super;
  Val x156 = x144[11]._super;
  Val x157 = x144[12]._super;
  Val x158 = x144[13]._super;
  Val x159 = x144[14]._super;
  Val x160 = x144[15]._super;
  Val x161 = x144[16]._super;
  Val x162 = x144[17]._super;
  Val x163 = x144[18]._super;
  Val x164 = x144[19]._super;
  Val x165 = x144[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:621)
  Val x166 = (x146 * Val(2));
  Val x167 = ((((((x145 + x166) + (x147 * Val(4))) + (x148 * Val(8))) + (x149 * Val(16))) +
               (x150 * Val(32))) +
              (x151 * Val(64)));
  Val x168 = ((((((x167 + (x152 * Val(128))) + (x153 * Val(256))) + (x154 * Val(512))) +
                (x155 * Val(1024))) +
               (x156 * Val(2048))) +
              (x157 * Val(4096)));
  Val x169 = ((((((x168 + (x158 * Val(8192))) + (x159 * Val(16384))) + (x160 * Val(32768))) +
                (x161 * Val(65536))) +
               (x162 * Val(131072))) +
              (x163 * Val(262144)));
  EQZ((((x169 + (x164 * Val(524288))) + (x165 * Val(1048576))) - x142),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:621)");
  // andnxor(zirgen/circuit/keccak/keccak.zir:118)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:623)
  Val x170 = ((Val(1) - x6) * x61);
  Val x171 = ((Val(1) - x7) * x62);
  Val x172 = ((Val(1) - x8) * x63);
  Val x173 = ((Val(1) - x9) * x64);
  Val x174 = ((Val(1) - x10) * x65);
  Val x175 = ((Val(1) - x11) * x66);
  Val x176 = ((Val(1) - x12) * x67);
  Val x177 = ((Val(1) - x13) * x68);
  Val x178 = ((Val(1) - x14) * x69);
  Val x179 = ((Val(1) - x15) * x70);
  Val x180 = ((Val(1) - x16) * x71);
  Val x181 = ((Val(1) - x17) * x72);
  Val x182 = ((Val(1) - x18) * x73);
  Val x183 = ((Val(1) - x19) * x74);
  Val x184 = ((Val(1) - x20) * x75);
  Val x185 = ((Val(1) - x21) * x76);
  Val x186 = ((Val(1) - x22) * x77);
  Val x187 = ((Val(1) - x23) * x78);
  Val x188 = ((Val(1) - x24) * x79);
  Val x189 = ((Val(1) - x25) * x80);
  Val x190 = ((Val(1) - x26) * x81);
  Val x191 = ((Val(1) - x27) * x82);
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:624)
  Val x192 = ((Val(1) - x34) * x89);
  Val x193 = ((Val(1) - x35) * x90);
  Val x194 = ((Val(1) - x36) * x91);
  Val x195 = ((Val(1) - x37) * x92);
  Val x196 = ((Val(1) - x38) * x93);
  Val x197 = ((Val(1) - x39) * x94);
  Val x198 = ((Val(1) - x40) * x95);
  Val x199 = ((Val(1) - x41) * x96);
  Val x200 = ((Val(1) - x42) * x97);
  Val x201 = ((Val(1) - x43) * x98);
  Val x202 = ((Val(1) - x44) * x99);
  Val x203 = ((Val(1) - x45) * x100);
  Val x204 = ((Val(1) - x46) * x101);
  Val x205 = ((Val(1) - x47) * x102);
  Val x206 = ((Val(1) - x48) * x103);
  Val x207 = ((Val(1) - x49) * x104);
  Val x208 = ((Val(1) - x50) * x105);
  Val x209 = ((Val(1) - x51) * x106);
  Val x210 = ((Val(1) - x52) * x107);
  Val x211 = ((Val(1) - x53) * x108);
  Val x212 = ((Val(1) - x54) * x109);
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:625)
  Val x213 =
      (((((x116 + x170) - ((x116 * Val(2)) * x170)) + (((x117 + x171) - (x138 * x171)) * Val(2))) +
        (((x118 + x172) - ((x118 * Val(2)) * x172)) * Val(4))) +
       (((x119 + x173) - ((x119 * Val(2)) * x173)) * Val(8)));
  Val x214 = (((x213 + (((x120 + x174) - ((x120 * Val(2)) * x174)) * Val(16))) +
               (((x121 + x175) - ((x121 * Val(2)) * x175)) * Val(32))) +
              (((x122 + x176) - ((x122 * Val(2)) * x176)) * Val(64)));
  Val x215 = (((x214 + (((x123 + x177) - ((x123 * Val(2)) * x177)) * Val(128))) +
               (((x124 + x178) - ((x124 * Val(2)) * x178)) * Val(256))) +
              (((x125 + x179) - ((x125 * Val(2)) * x179)) * Val(512)));
  Val x216 = (((x215 + (((x126 + x180) - ((x126 * Val(2)) * x180)) * Val(1024))) +
               (((x127 + x181) - ((x127 * Val(2)) * x181)) * Val(2048))) +
              (((x128 + x182) - ((x128 * Val(2)) * x182)) * Val(4096)));
  Val x217 = (((x216 + (((x129 + x183) - ((x129 * Val(2)) * x183)) * Val(8192))) +
               (((x130 + x184) - ((x130 * Val(2)) * x184)) * Val(16384))) +
              (((x131 + x185) - ((x131 * Val(2)) * x185)) * Val(32768)));
  Val x218 = (((x217 + (((x132 + x186) - ((x132 * Val(2)) * x186)) * Val(65536))) +
               (((x133 + x187) - ((x133 * Val(2)) * x187)) * Val(131072))) +
              (((x134 + x188) - ((x134 * Val(2)) * x188)) * Val(262144)));
  Val x219 = (((x218 + (((x135 + x189) - ((x135 * Val(2)) * x189)) * Val(524288))) +
               (((x136 + x190) - ((x136 * Val(2)) * x190)) * Val(1048576))) +
              (((x137 + x191) - ((x137 * Val(2)) * x191)) * Val(2097152)));
  NondetRegStruct x220 = exec_Reg(ctx, x219, LAYOUT_LOOKUP(layout1, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  Val x221 =
      (((((x145 + x192) - ((x145 * Val(2)) * x192)) + (((x146 + x193) - (x166 * x193)) * Val(2))) +
        (((x147 + x194) - ((x147 * Val(2)) * x194)) * Val(4))) +
       (((x148 + x195) - ((x148 * Val(2)) * x195)) * Val(8)));
  Val x222 = (((x221 + (((x149 + x196) - ((x149 * Val(2)) * x196)) * Val(16))) +
               (((x150 + x197) - ((x150 * Val(2)) * x197)) * Val(32))) +
              (((x151 + x198) - ((x151 * Val(2)) * x198)) * Val(64)));
  Val x223 = (((x222 + (((x152 + x199) - ((x152 * Val(2)) * x199)) * Val(128))) +
               (((x153 + x200) - ((x153 * Val(2)) * x200)) * Val(256))) +
              (((x154 + x201) - ((x154 * Val(2)) * x201)) * Val(512)));
  Val x224 = (((x223 + (((x155 + x202) - ((x155 * Val(2)) * x202)) * Val(1024))) +
               (((x156 + x203) - ((x156 * Val(2)) * x203)) * Val(2048))) +
              (((x157 + x204) - ((x157 * Val(2)) * x204)) * Val(4096)));
  Val x225 = (((x224 + (((x158 + x205) - ((x158 * Val(2)) * x205)) * Val(8192))) +
               (((x159 + x206) - ((x159 * Val(2)) * x206)) * Val(16384))) +
              (((x160 + x207) - ((x160 * Val(2)) * x207)) * Val(32768)));
  Val x226 = (((x225 + (((x161 + x208) - ((x161 * Val(2)) * x208)) * Val(65536))) +
               (((x162 + x209) - ((x162 * Val(2)) * x209)) * Val(131072))) +
              (((x163 + x210) - ((x163 * Val(2)) * x210)) * Val(262144)));
  NondetRegStruct x227 =
      exec_Reg(ctx,
               ((x226 + (((x164 + x211) - ((x164 * Val(2)) * x211)) * Val(524288))) +
                (((x165 + x212) - ((x165 * Val(2)) * x212)) * Val(1048576))),
               LAYOUT_LOOKUP(layout1, _1));
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:630)
  Val22Array x228 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x229 = exec_RetTuple(
      ctx,
      x228,
      x228,
      x228,
      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), x220._super, x227._super},
      x228,
      x228,
      Val(3),
      Val(13),
      arg0.rnd._super,
      arg0.blk._super,
      arg0.midx._super,
      LAYOUT_LOOKUP(layout1, _super));
  return x229;
}
RetTupleStruct execChiMinor0_2__3_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<ChiMinor0_2__3_Layout> layout1) {
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:542)
  NondetRegStruct22Array x2 = arg0.arrC;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:546)
  Val x3 = x2[10]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:554)
  ToBits_22_Struct x4 = exec_ToBits_22_(ctx, x3, LAYOUT_LOOKUP(layout1, unpack_0xp1));
  NondetRegStruct22Array x5 = x4._super;
  Val x6 = x5[0]._super;
  Val x7 = x5[1]._super;
  Val x8 = x5[2]._super;
  Val x9 = x5[3]._super;
  Val x10 = x5[4]._super;
  Val x11 = x5[5]._super;
  Val x12 = x5[6]._super;
  Val x13 = x5[7]._super;
  Val x14 = x5[8]._super;
  Val x15 = x5[9]._super;
  Val x16 = x5[10]._super;
  Val x17 = x5[11]._super;
  Val x18 = x5[12]._super;
  Val x19 = x5[13]._super;
  Val x20 = x5[14]._super;
  Val x21 = x5[15]._super;
  Val x22 = x5[16]._super;
  Val x23 = x5[17]._super;
  Val x24 = x5[18]._super;
  Val x25 = x5[19]._super;
  Val x26 = x5[20]._super;
  Val x27 = x5[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:555)
  Val x28 = ((((((x6 + (x7 * Val(2))) + (x8 * Val(4))) + (x9 * Val(8))) + (x10 * Val(16))) +
              (x11 * Val(32))) +
             (x12 * Val(64)));
  Val x29 =
      ((((((x28 + (x13 * Val(128))) + (x14 * Val(256))) + (x15 * Val(512))) + (x16 * Val(1024))) +
        (x17 * Val(2048))) +
       (x18 * Val(4096)));
  Val x30 = ((((((x29 + (x19 * Val(8192))) + (x20 * Val(16384))) + (x21 * Val(32768))) +
               (x22 * Val(65536))) +
              (x23 * Val(131072))) +
             (x24 * Val(262144)));
  EQZ(((((x30 + (x25 * Val(524288))) + (x26 * Val(1048576))) + (x27 * Val(2097152))) - x3),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:555)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:559)
  Val x31 = x2[11]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:567)
  ToBits_21_Struct x32 = exec_ToBits_21_(ctx, x31, LAYOUT_LOOKUP(layout1, unpack_1xp1));
  NondetRegStruct21Array x33 = x32._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:568)
  Val x55 = ((((((x34 + (x35 * Val(2))) + (x36 * Val(4))) + (x37 * Val(8))) + (x38 * Val(16))) +
              (x39 * Val(32))) +
             (x40 * Val(64)));
  Val x56 =
      ((((((x55 + (x41 * Val(128))) + (x42 * Val(256))) + (x43 * Val(512))) + (x44 * Val(1024))) +
        (x45 * Val(2048))) +
       (x46 * Val(4096)));
  Val x57 = ((((((x56 + (x47 * Val(8192))) + (x48 * Val(16384))) + (x49 * Val(32768))) +
               (x50 * Val(65536))) +
              (x51 * Val(131072))) +
             (x52 * Val(262144)));
  EQZ((((x57 + (x53 * Val(524288))) + (x54 * Val(1048576))) - x31),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:568)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:573)
  Val x58 = x2[13]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:581)
  ToBits_22_Struct x59 = exec_ToBits_22_(ctx, x58, LAYOUT_LOOKUP(layout1, unpack_0xp2));
  NondetRegStruct22Array x60 = x59._super;
  Val x61 = x60[0]._super;
  Val x62 = x60[1]._super;
  Val x63 = x60[2]._super;
  Val x64 = x60[3]._super;
  Val x65 = x60[4]._super;
  Val x66 = x60[5]._super;
  Val x67 = x60[6]._super;
  Val x68 = x60[7]._super;
  Val x69 = x60[8]._super;
  Val x70 = x60[9]._super;
  Val x71 = x60[10]._super;
  Val x72 = x60[11]._super;
  Val x73 = x60[12]._super;
  Val x74 = x60[13]._super;
  Val x75 = x60[14]._super;
  Val x76 = x60[15]._super;
  Val x77 = x60[16]._super;
  Val x78 = x60[17]._super;
  Val x79 = x60[18]._super;
  Val x80 = x60[19]._super;
  Val x81 = x60[20]._super;
  Val x82 = x60[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:582)
  Val x83 = ((((((x61 + (x62 * Val(2))) + (x63 * Val(4))) + (x64 * Val(8))) + (x65 * Val(16))) +
              (x66 * Val(32))) +
             (x67 * Val(64)));
  Val x84 =
      ((((((x83 + (x68 * Val(128))) + (x69 * Val(256))) + (x70 * Val(512))) + (x71 * Val(1024))) +
        (x72 * Val(2048))) +
       (x73 * Val(4096)));
  Val x85 = ((((((x84 + (x74 * Val(8192))) + (x75 * Val(16384))) + (x76 * Val(32768))) +
               (x77 * Val(65536))) +
              (x78 * Val(131072))) +
             (x79 * Val(262144)));
  EQZ(((((x85 + (x80 * Val(524288))) + (x81 * Val(1048576))) + (x82 * Val(2097152))) - x58),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:582)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:586)
  Val x86 = x2[14]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:594)
  ToBits_21_Struct x87 = exec_ToBits_21_(ctx, x86, LAYOUT_LOOKUP(layout1, unpack_1xp2));
  NondetRegStruct21Array x88 = x87._super;
  Val x89 = x88[0]._super;
  Val x90 = x88[1]._super;
  Val x91 = x88[2]._super;
  Val x92 = x88[3]._super;
  Val x93 = x88[4]._super;
  Val x94 = x88[5]._super;
  Val x95 = x88[6]._super;
  Val x96 = x88[7]._super;
  Val x97 = x88[8]._super;
  Val x98 = x88[9]._super;
  Val x99 = x88[10]._super;
  Val x100 = x88[11]._super;
  Val x101 = x88[12]._super;
  Val x102 = x88[13]._super;
  Val x103 = x88[14]._super;
  Val x104 = x88[15]._super;
  Val x105 = x88[16]._super;
  Val x106 = x88[17]._super;
  Val x107 = x88[18]._super;
  Val x108 = x88[19]._super;
  Val x109 = x88[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:595)
  Val x110 = ((((((x89 + (x90 * Val(2))) + (x91 * Val(4))) + (x92 * Val(8))) + (x93 * Val(16))) +
               (x94 * Val(32))) +
              (x95 * Val(64)));
  Val x111 =
      ((((((x110 + (x96 * Val(128))) + (x97 * Val(256))) + (x98 * Val(512))) + (x99 * Val(1024))) +
        (x100 * Val(2048))) +
       (x101 * Val(4096)));
  Val x112 = ((((((x111 + (x102 * Val(8192))) + (x103 * Val(16384))) + (x104 * Val(32768))) +
                (x105 * Val(65536))) +
               (x106 * Val(131072))) +
              (x107 * Val(262144)));
  EQZ((((x112 + (x108 * Val(524288))) + (x109 * Val(1048576))) - x86),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:595)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:599)
  Val x113 = x2[7]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:607)
  ToBits_22_Struct x114 = exec_ToBits_22_(ctx, x113, LAYOUT_LOOKUP(layout1, unpack_0x));
  NondetRegStruct22Array x115 = x114._super;
  Val x116 = x115[0]._super;
  Val x117 = x115[1]._super;
  Val x118 = x115[2]._super;
  Val x119 = x115[3]._super;
  Val x120 = x115[4]._super;
  Val x121 = x115[5]._super;
  Val x122 = x115[6]._super;
  Val x123 = x115[7]._super;
  Val x124 = x115[8]._super;
  Val x125 = x115[9]._super;
  Val x126 = x115[10]._super;
  Val x127 = x115[11]._super;
  Val x128 = x115[12]._super;
  Val x129 = x115[13]._super;
  Val x130 = x115[14]._super;
  Val x131 = x115[15]._super;
  Val x132 = x115[16]._super;
  Val x133 = x115[17]._super;
  Val x134 = x115[18]._super;
  Val x135 = x115[19]._super;
  Val x136 = x115[20]._super;
  Val x137 = x115[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:608)
  Val x138 = (x117 * Val(2));
  Val x139 = ((((((x116 + x138) + (x118 * Val(4))) + (x119 * Val(8))) + (x120 * Val(16))) +
               (x121 * Val(32))) +
              (x122 * Val(64)));
  Val x140 = ((((((x139 + (x123 * Val(128))) + (x124 * Val(256))) + (x125 * Val(512))) +
                (x126 * Val(1024))) +
               (x127 * Val(2048))) +
              (x128 * Val(4096)));
  Val x141 = ((((((x140 + (x129 * Val(8192))) + (x130 * Val(16384))) + (x131 * Val(32768))) +
                (x132 * Val(65536))) +
               (x133 * Val(131072))) +
              (x134 * Val(262144)));
  EQZ(((((x141 + (x135 * Val(524288))) + (x136 * Val(1048576))) + (x137 * Val(2097152))) - x113),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:608)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:612)
  Val x142 = x2[8]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:620)
  ToBits_21_Struct x143 = exec_ToBits_21_(ctx, x142, LAYOUT_LOOKUP(layout1, unpack_1x));
  NondetRegStruct21Array x144 = x143._super;
  Val x145 = x144[0]._super;
  Val x146 = x144[1]._super;
  Val x147 = x144[2]._super;
  Val x148 = x144[3]._super;
  Val x149 = x144[4]._super;
  Val x150 = x144[5]._super;
  Val x151 = x144[6]._super;
  Val x152 = x144[7]._super;
  Val x153 = x144[8]._super;
  Val x154 = x144[9]._super;
  Val x155 = x144[10]._super;
  Val x156 = x144[11]._super;
  Val x157 = x144[12]._super;
  Val x158 = x144[13]._super;
  Val x159 = x144[14]._super;
  Val x160 = x144[15]._super;
  Val x161 = x144[16]._super;
  Val x162 = x144[17]._super;
  Val x163 = x144[18]._super;
  Val x164 = x144[19]._super;
  Val x165 = x144[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:621)
  Val x166 = (x146 * Val(2));
  Val x167 = ((((((x145 + x166) + (x147 * Val(4))) + (x148 * Val(8))) + (x149 * Val(16))) +
               (x150 * Val(32))) +
              (x151 * Val(64)));
  Val x168 = ((((((x167 + (x152 * Val(128))) + (x153 * Val(256))) + (x154 * Val(512))) +
                (x155 * Val(1024))) +
               (x156 * Val(2048))) +
              (x157 * Val(4096)));
  Val x169 = ((((((x168 + (x158 * Val(8192))) + (x159 * Val(16384))) + (x160 * Val(32768))) +
                (x161 * Val(65536))) +
               (x162 * Val(131072))) +
              (x163 * Val(262144)));
  EQZ((((x169 + (x164 * Val(524288))) + (x165 * Val(1048576))) - x142),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:621)");
  // andnxor(zirgen/circuit/keccak/keccak.zir:118)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:623)
  Val x170 = ((Val(1) - x6) * x61);
  Val x171 = ((Val(1) - x7) * x62);
  Val x172 = ((Val(1) - x8) * x63);
  Val x173 = ((Val(1) - x9) * x64);
  Val x174 = ((Val(1) - x10) * x65);
  Val x175 = ((Val(1) - x11) * x66);
  Val x176 = ((Val(1) - x12) * x67);
  Val x177 = ((Val(1) - x13) * x68);
  Val x178 = ((Val(1) - x14) * x69);
  Val x179 = ((Val(1) - x15) * x70);
  Val x180 = ((Val(1) - x16) * x71);
  Val x181 = ((Val(1) - x17) * x72);
  Val x182 = ((Val(1) - x18) * x73);
  Val x183 = ((Val(1) - x19) * x74);
  Val x184 = ((Val(1) - x20) * x75);
  Val x185 = ((Val(1) - x21) * x76);
  Val x186 = ((Val(1) - x22) * x77);
  Val x187 = ((Val(1) - x23) * x78);
  Val x188 = ((Val(1) - x24) * x79);
  Val x189 = ((Val(1) - x25) * x80);
  Val x190 = ((Val(1) - x26) * x81);
  Val x191 = ((Val(1) - x27) * x82);
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:624)
  Val x192 = ((Val(1) - x34) * x89);
  Val x193 = ((Val(1) - x35) * x90);
  Val x194 = ((Val(1) - x36) * x91);
  Val x195 = ((Val(1) - x37) * x92);
  Val x196 = ((Val(1) - x38) * x93);
  Val x197 = ((Val(1) - x39) * x94);
  Val x198 = ((Val(1) - x40) * x95);
  Val x199 = ((Val(1) - x41) * x96);
  Val x200 = ((Val(1) - x42) * x97);
  Val x201 = ((Val(1) - x43) * x98);
  Val x202 = ((Val(1) - x44) * x99);
  Val x203 = ((Val(1) - x45) * x100);
  Val x204 = ((Val(1) - x46) * x101);
  Val x205 = ((Val(1) - x47) * x102);
  Val x206 = ((Val(1) - x48) * x103);
  Val x207 = ((Val(1) - x49) * x104);
  Val x208 = ((Val(1) - x50) * x105);
  Val x209 = ((Val(1) - x51) * x106);
  Val x210 = ((Val(1) - x52) * x107);
  Val x211 = ((Val(1) - x53) * x108);
  Val x212 = ((Val(1) - x54) * x109);
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:625)
  Val x213 =
      (((((x116 + x170) - ((x116 * Val(2)) * x170)) + (((x117 + x171) - (x138 * x171)) * Val(2))) +
        (((x118 + x172) - ((x118 * Val(2)) * x172)) * Val(4))) +
       (((x119 + x173) - ((x119 * Val(2)) * x173)) * Val(8)));
  Val x214 = (((x213 + (((x120 + x174) - ((x120 * Val(2)) * x174)) * Val(16))) +
               (((x121 + x175) - ((x121 * Val(2)) * x175)) * Val(32))) +
              (((x122 + x176) - ((x122 * Val(2)) * x176)) * Val(64)));
  Val x215 = (((x214 + (((x123 + x177) - ((x123 * Val(2)) * x177)) * Val(128))) +
               (((x124 + x178) - ((x124 * Val(2)) * x178)) * Val(256))) +
              (((x125 + x179) - ((x125 * Val(2)) * x179)) * Val(512)));
  Val x216 = (((x215 + (((x126 + x180) - ((x126 * Val(2)) * x180)) * Val(1024))) +
               (((x127 + x181) - ((x127 * Val(2)) * x181)) * Val(2048))) +
              (((x128 + x182) - ((x128 * Val(2)) * x182)) * Val(4096)));
  Val x217 = (((x216 + (((x129 + x183) - ((x129 * Val(2)) * x183)) * Val(8192))) +
               (((x130 + x184) - ((x130 * Val(2)) * x184)) * Val(16384))) +
              (((x131 + x185) - ((x131 * Val(2)) * x185)) * Val(32768)));
  Val x218 = (((x217 + (((x132 + x186) - ((x132 * Val(2)) * x186)) * Val(65536))) +
               (((x133 + x187) - ((x133 * Val(2)) * x187)) * Val(131072))) +
              (((x134 + x188) - ((x134 * Val(2)) * x188)) * Val(262144)));
  Val x219 = (((x218 + (((x135 + x189) - ((x135 * Val(2)) * x189)) * Val(524288))) +
               (((x136 + x190) - ((x136 * Val(2)) * x190)) * Val(1048576))) +
              (((x137 + x191) - ((x137 * Val(2)) * x191)) * Val(2097152)));
  NondetRegStruct x220 = exec_Reg(ctx, x219, LAYOUT_LOOKUP(layout1, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  Val x221 =
      (((((x145 + x192) - ((x145 * Val(2)) * x192)) + (((x146 + x193) - (x166 * x193)) * Val(2))) +
        (((x147 + x194) - ((x147 * Val(2)) * x194)) * Val(4))) +
       (((x148 + x195) - ((x148 * Val(2)) * x195)) * Val(8)));
  Val x222 = (((x221 + (((x149 + x196) - ((x149 * Val(2)) * x196)) * Val(16))) +
               (((x150 + x197) - ((x150 * Val(2)) * x197)) * Val(32))) +
              (((x151 + x198) - ((x151 * Val(2)) * x198)) * Val(64)));
  Val x223 = (((x222 + (((x152 + x199) - ((x152 * Val(2)) * x199)) * Val(128))) +
               (((x153 + x200) - ((x153 * Val(2)) * x200)) * Val(256))) +
              (((x154 + x201) - ((x154 * Val(2)) * x201)) * Val(512)));
  Val x224 = (((x223 + (((x155 + x202) - ((x155 * Val(2)) * x202)) * Val(1024))) +
               (((x156 + x203) - ((x156 * Val(2)) * x203)) * Val(2048))) +
              (((x157 + x204) - ((x157 * Val(2)) * x204)) * Val(4096)));
  Val x225 = (((x224 + (((x158 + x205) - ((x158 * Val(2)) * x205)) * Val(8192))) +
               (((x159 + x206) - ((x159 * Val(2)) * x206)) * Val(16384))) +
              (((x160 + x207) - ((x160 * Val(2)) * x207)) * Val(32768)));
  Val x226 = (((x225 + (((x161 + x208) - ((x161 * Val(2)) * x208)) * Val(65536))) +
               (((x162 + x209) - ((x162 * Val(2)) * x209)) * Val(131072))) +
              (((x163 + x210) - ((x163 * Val(2)) * x210)) * Val(262144)));
  NondetRegStruct x227 =
      exec_Reg(ctx,
               ((x226 + (((x164 + x211) - ((x164 * Val(2)) * x211)) * Val(524288))) +
                (((x165 + x212) - ((x165 * Val(2)) * x212)) * Val(1048576))),
               LAYOUT_LOOKUP(layout1, _1));
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:630)
  Val22Array x228 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x229 = exec_RetTuple(
      ctx,
      x228,
      x228,
      x228,
      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), x220._super, x227._super},
      x228,
      x228,
      Val(4),
      Val(13),
      arg0.rnd._super,
      arg0.blk._super,
      arg0.midx._super,
      LAYOUT_LOOKUP(layout1, _super));
  return x229;
}
RetTupleStruct execChiMinor1_2__3_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<ChiMinor1_2__3_Layout> layout2) {
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:685)
  BoundLayout<ChiMinor1_2__3__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:635)
  RetTupleStruct x4 = back_RetTuple(ctx, 5, arg1);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:636)
  RetTupleStruct x5 = back_RetTuple(ctx, 1, arg1);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:635)
  NondetRegStruct22Array x6 = x4.arrC;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:640)
  Val x7 = x6[9]._super;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:648)
  ToBits_21_Struct x8 = exec_ToBits_21_(ctx, x7, LAYOUT_LOOKUP(layout2, unpack_2x));
  NondetRegStruct21Array x9 = x8._super;
  Val x10 = x9[0]._super;
  Val x11 = x9[1]._super;
  Val x12 = x9[2]._super;
  Val x13 = x9[3]._super;
  Val x14 = x9[4]._super;
  Val x15 = x9[5]._super;
  Val x16 = x9[6]._super;
  Val x17 = x9[7]._super;
  Val x18 = x9[8]._super;
  Val x19 = x9[9]._super;
  Val x20 = x9[10]._super;
  Val x21 = x9[11]._super;
  Val x22 = x9[12]._super;
  Val x23 = x9[13]._super;
  Val x24 = x9[14]._super;
  Val x25 = x9[15]._super;
  Val x26 = x9[16]._super;
  Val x27 = x9[17]._super;
  Val x28 = x9[18]._super;
  Val x29 = x9[19]._super;
  Val x30 = x9[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:649)
  Val x31 = (x11 * Val(2));
  Val x32 =
      ((((((x10 + x31) + (x12 * Val(4))) + (x13 * Val(8))) + (x14 * Val(16))) + (x15 * Val(32))) +
       (x16 * Val(64)));
  Val x33 =
      ((((((x32 + (x17 * Val(128))) + (x18 * Val(256))) + (x19 * Val(512))) + (x20 * Val(1024))) +
        (x21 * Val(2048))) +
       (x22 * Val(4096)));
  Val x34 = ((((((x33 + (x23 * Val(8192))) + (x24 * Val(16384))) + (x25 * Val(32768))) +
               (x26 * Val(65536))) +
              (x27 * Val(131072))) +
             (x28 * Val(262144)));
  EQZ((((x34 + (x29 * Val(524288))) + (x30 * Val(1048576))) - x7),
      "chi_minor1(zirgen/circuit/keccak/keccak.zir:649)");
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:654)
  Val x35 = x6[12]._super;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:662)
  ToBits_21_Struct x36 = exec_ToBits_21_(ctx, x35, LAYOUT_LOOKUP(layout2, unpack_2xp1));
  NondetRegStruct21Array x37 = x36._super;
  Val x38 = x37[0]._super;
  Val x39 = x37[1]._super;
  Val x40 = x37[2]._super;
  Val x41 = x37[3]._super;
  Val x42 = x37[4]._super;
  Val x43 = x37[5]._super;
  Val x44 = x37[6]._super;
  Val x45 = x37[7]._super;
  Val x46 = x37[8]._super;
  Val x47 = x37[9]._super;
  Val x48 = x37[10]._super;
  Val x49 = x37[11]._super;
  Val x50 = x37[12]._super;
  Val x51 = x37[13]._super;
  Val x52 = x37[14]._super;
  Val x53 = x37[15]._super;
  Val x54 = x37[16]._super;
  Val x55 = x37[17]._super;
  Val x56 = x37[18]._super;
  Val x57 = x37[19]._super;
  Val x58 = x37[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:663)
  Val x59 = ((((((x38 + (x39 * Val(2))) + (x40 * Val(4))) + (x41 * Val(8))) + (x42 * Val(16))) +
              (x43 * Val(32))) +
             (x44 * Val(64)));
  Val x60 =
      ((((((x59 + (x45 * Val(128))) + (x46 * Val(256))) + (x47 * Val(512))) + (x48 * Val(1024))) +
        (x49 * Val(2048))) +
       (x50 * Val(4096)));
  Val x61 = ((((((x60 + (x51 * Val(8192))) + (x52 * Val(16384))) + (x53 * Val(32768))) +
               (x54 * Val(65536))) +
              (x55 * Val(131072))) +
             (x56 * Val(262144)));
  EQZ((((x61 + (x57 * Val(524288))) + (x58 * Val(1048576))) - x35),
      "chi_minor1(zirgen/circuit/keccak/keccak.zir:663)");
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:667)
  Val x62 = x6[15]._super;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:675)
  ToBits_21_Struct x63 = exec_ToBits_21_(ctx, x62, LAYOUT_LOOKUP(layout2, unpack_2xp2));
  NondetRegStruct21Array x64 = x63._super;
  Val x65 = x64[0]._super;
  Val x66 = x64[1]._super;
  Val x67 = x64[2]._super;
  Val x68 = x64[3]._super;
  Val x69 = x64[4]._super;
  Val x70 = x64[5]._super;
  Val x71 = x64[6]._super;
  Val x72 = x64[7]._super;
  Val x73 = x64[8]._super;
  Val x74 = x64[9]._super;
  Val x75 = x64[10]._super;
  Val x76 = x64[11]._super;
  Val x77 = x64[12]._super;
  Val x78 = x64[13]._super;
  Val x79 = x64[14]._super;
  Val x80 = x64[15]._super;
  Val x81 = x64[16]._super;
  Val x82 = x64[17]._super;
  Val x83 = x64[18]._super;
  Val x84 = x64[19]._super;
  Val x85 = x64[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:676)
  Val x86 = ((((((x65 + (x66 * Val(2))) + (x67 * Val(4))) + (x68 * Val(8))) + (x69 * Val(16))) +
              (x70 * Val(32))) +
             (x71 * Val(64)));
  Val x87 =
      ((((((x86 + (x72 * Val(128))) + (x73 * Val(256))) + (x74 * Val(512))) + (x75 * Val(1024))) +
        (x76 * Val(2048))) +
       (x77 * Val(4096)));
  Val x88 = ((((((x87 + (x78 * Val(8192))) + (x79 * Val(16384))) + (x80 * Val(32768))) +
               (x81 * Val(65536))) +
              (x82 * Val(131072))) +
             (x83 * Val(262144)));
  EQZ((((x88 + (x84 * Val(524288))) + (x85 * Val(1048576))) - x62),
      "chi_minor1(zirgen/circuit/keccak/keccak.zir:676)");
  // andnxor(zirgen/circuit/keccak/keccak.zir:118)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:678)
  Val x89 = ((Val(1) - x38) * x65);
  Val x90 = ((Val(1) - x39) * x66);
  Val x91 = ((Val(1) - x40) * x67);
  Val x92 = ((Val(1) - x41) * x68);
  Val x93 = ((Val(1) - x42) * x69);
  Val x94 = ((Val(1) - x43) * x70);
  Val x95 = ((Val(1) - x44) * x71);
  Val x96 = ((Val(1) - x45) * x72);
  Val x97 = ((Val(1) - x46) * x73);
  Val x98 = ((Val(1) - x47) * x74);
  Val x99 = ((Val(1) - x48) * x75);
  Val x100 = ((Val(1) - x49) * x76);
  Val x101 = ((Val(1) - x50) * x77);
  Val x102 = ((Val(1) - x51) * x78);
  Val x103 = ((Val(1) - x52) * x79);
  Val x104 = ((Val(1) - x53) * x80);
  Val x105 = ((Val(1) - x54) * x81);
  Val x106 = ((Val(1) - x55) * x82);
  Val x107 = ((Val(1) - x56) * x83);
  Val x108 = ((Val(1) - x57) * x84);
  Val x109 = ((Val(1) - x58) * x85);
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:679)
  Val x110 = (((((x10 + x89) - ((x10 * Val(2)) * x89)) + (((x11 + x90) - (x31 * x90)) * Val(2))) +
               (((x12 + x91) - ((x12 * Val(2)) * x91)) * Val(4))) +
              (((x13 + x92) - ((x13 * Val(2)) * x92)) * Val(8)));
  Val x111 = (((x110 + (((x14 + x93) - ((x14 * Val(2)) * x93)) * Val(16))) +
               (((x15 + x94) - ((x15 * Val(2)) * x94)) * Val(32))) +
              (((x16 + x95) - ((x16 * Val(2)) * x95)) * Val(64)));
  Val x112 = (((x111 + (((x17 + x96) - ((x17 * Val(2)) * x96)) * Val(128))) +
               (((x18 + x97) - ((x18 * Val(2)) * x97)) * Val(256))) +
              (((x19 + x98) - ((x19 * Val(2)) * x98)) * Val(512)));
  Val x113 = (((x112 + (((x20 + x99) - ((x20 * Val(2)) * x99)) * Val(1024))) +
               (((x21 + x100) - ((x21 * Val(2)) * x100)) * Val(2048))) +
              (((x22 + x101) - ((x22 * Val(2)) * x101)) * Val(4096)));
  Val x114 = (((x113 + (((x23 + x102) - ((x23 * Val(2)) * x102)) * Val(8192))) +
               (((x24 + x103) - ((x24 * Val(2)) * x103)) * Val(16384))) +
              (((x25 + x104) - ((x25 * Val(2)) * x104)) * Val(32768)));
  Val x115 = (((x114 + (((x26 + x105) - ((x26 * Val(2)) * x105)) * Val(65536))) +
               (((x27 + x106) - ((x27 * Val(2)) * x106)) * Val(131072))) +
              (((x28 + x107) - ((x28 * Val(2)) * x107)) * Val(262144)));
  NondetRegStruct x116 =
      exec_Reg(ctx,
               ((x115 + (((x29 + x108) - ((x29 * Val(2)) * x108)) * Val(524288))) +
                (((x30 + x109) - ((x30 * Val(2)) * x109)) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, res3));
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:636)
  NondetRegStruct24Array x117 = x5.arrD;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:685)
  BoundLayout<ChiMinor1_2__3_Arm1_SuperLayout> x118 = LAYOUT_LOOKUP(x3, arm1);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:680)
  Val22Array x119 =
      Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), x117[22]._super};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:681)
  Val22Array x120 =
      Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), x117[23]._super};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:682)
  Val22Array x121 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), x116._super};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:686)
  Val24Array x122 = Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  Val22Array x123 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:636)
  Val x124 = x5.rnd._super;
  Val x125 = x5.blk._super;
  Val x126 = x5.midx._super;
  if (to_size_t(Val(0))) {
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:686)
    RetTupleStruct x127 = exec_RetTuple(ctx,
                                        x119,
                                        x120,
                                        x121,
                                        x122,
                                        x123,
                                        x123,
                                        Val(5),
                                        Val(13),
                                        x124,
                                        x125,
                                        x126,
                                        LAYOUT_LOOKUP(x3, arm0));
  }
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:718)
  Val x128 = x6[3]._super;
  if (to_size_t(Val(1))) {
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:699)
    ToBits_21_Struct x129 = exec_ToBits_21_(ctx, x35, LAYOUT_LOOKUP(x118, unpack_2nx));
    NondetRegStruct21Array x130 = x129._super;
    Val x131 = x130[0]._super;
    Val x132 = x130[1]._super;
    Val x133 = x130[2]._super;
    Val x134 = x130[3]._super;
    Val x135 = x130[4]._super;
    Val x136 = x130[5]._super;
    Val x137 = x130[6]._super;
    Val x138 = x130[7]._super;
    Val x139 = x130[8]._super;
    Val x140 = x130[9]._super;
    Val x141 = x130[10]._super;
    Val x142 = x130[11]._super;
    Val x143 = x130[12]._super;
    Val x144 = x130[13]._super;
    Val x145 = x130[14]._super;
    Val x146 = x130[15]._super;
    Val x147 = x130[16]._super;
    Val x148 = x130[17]._super;
    Val x149 = x130[18]._super;
    Val x150 = x130[19]._super;
    Val x151 = x130[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:700)
    Val x152 = (x132 * Val(2));
    Val x153 = ((((((x131 + x152) + (x133 * Val(4))) + (x134 * Val(8))) + (x135 * Val(16))) +
                 (x136 * Val(32))) +
                (x137 * Val(64)));
    Val x154 = ((((((x153 + (x138 * Val(128))) + (x139 * Val(256))) + (x140 * Val(512))) +
                  (x141 * Val(1024))) +
                 (x142 * Val(2048))) +
                (x143 * Val(4096)));
    Val x155 = ((((((x154 + (x144 * Val(8192))) + (x145 * Val(16384))) + (x146 * Val(32768))) +
                  (x147 * Val(65536))) +
                 (x148 * Val(131072))) +
                (x149 * Val(262144)));
    EQZ((((x155 + (x150 * Val(524288))) + (x151 * Val(1048576))) - x35),
        "chi_minor1(zirgen/circuit/keccak/keccak.zir:700)");
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:713)
    ToBits_21_Struct x156 = exec_ToBits_21_(ctx, x62, LAYOUT_LOOKUP(x118, unpack_2nxp1));
    NondetRegStruct21Array x157 = x156._super;
    Val x158 = x157[0]._super;
    Val x159 = x157[1]._super;
    Val x160 = x157[2]._super;
    Val x161 = x157[3]._super;
    Val x162 = x157[4]._super;
    Val x163 = x157[5]._super;
    Val x164 = x157[6]._super;
    Val x165 = x157[7]._super;
    Val x166 = x157[8]._super;
    Val x167 = x157[9]._super;
    Val x168 = x157[10]._super;
    Val x169 = x157[11]._super;
    Val x170 = x157[12]._super;
    Val x171 = x157[13]._super;
    Val x172 = x157[14]._super;
    Val x173 = x157[15]._super;
    Val x174 = x157[16]._super;
    Val x175 = x157[17]._super;
    Val x176 = x157[18]._super;
    Val x177 = x157[19]._super;
    Val x178 = x157[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:714)
    Val x179 =
        ((((((x158 + (x159 * Val(2))) + (x160 * Val(4))) + (x161 * Val(8))) + (x162 * Val(16))) +
          (x163 * Val(32))) +
         (x164 * Val(64)));
    Val x180 = ((((((x179 + (x165 * Val(128))) + (x166 * Val(256))) + (x167 * Val(512))) +
                  (x168 * Val(1024))) +
                 (x169 * Val(2048))) +
                (x170 * Val(4096)));
    Val x181 = ((((((x180 + (x171 * Val(8192))) + (x172 * Val(16384))) + (x173 * Val(32768))) +
                  (x174 * Val(65536))) +
                 (x175 * Val(131072))) +
                (x176 * Val(262144)));
    EQZ((((x181 + (x177 * Val(524288))) + (x178 * Val(1048576))) - x62),
        "chi_minor1(zirgen/circuit/keccak/keccak.zir:714)");
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:726)
    ToBits_21_Struct x182 = exec_ToBits_21_(ctx, x128, LAYOUT_LOOKUP(x118, unpack_2nxp2));
    NondetRegStruct21Array x183 = x182._super;
    Val x184 = x183[0]._super;
    Val x185 = x183[1]._super;
    Val x186 = x183[2]._super;
    Val x187 = x183[3]._super;
    Val x188 = x183[4]._super;
    Val x189 = x183[5]._super;
    Val x190 = x183[6]._super;
    Val x191 = x183[7]._super;
    Val x192 = x183[8]._super;
    Val x193 = x183[9]._super;
    Val x194 = x183[10]._super;
    Val x195 = x183[11]._super;
    Val x196 = x183[12]._super;
    Val x197 = x183[13]._super;
    Val x198 = x183[14]._super;
    Val x199 = x183[15]._super;
    Val x200 = x183[16]._super;
    Val x201 = x183[17]._super;
    Val x202 = x183[18]._super;
    Val x203 = x183[19]._super;
    Val x204 = x183[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:727)
    Val x205 =
        ((((((x184 + (x185 * Val(2))) + (x186 * Val(4))) + (x187 * Val(8))) + (x188 * Val(16))) +
          (x189 * Val(32))) +
         (x190 * Val(64)));
    Val x206 = ((((((x205 + (x191 * Val(128))) + (x192 * Val(256))) + (x193 * Val(512))) +
                  (x194 * Val(1024))) +
                 (x195 * Val(2048))) +
                (x196 * Val(4096)));
    Val x207 = ((((((x206 + (x197 * Val(8192))) + (x198 * Val(16384))) + (x199 * Val(32768))) +
                  (x200 * Val(65536))) +
                 (x201 * Val(131072))) +
                (x202 * Val(262144)));
    EQZ((((x207 + (x203 * Val(524288))) + (x204 * Val(1048576))) - x128),
        "chi_minor1(zirgen/circuit/keccak/keccak.zir:727)");
    // andnxor(zirgen/circuit/keccak/keccak.zir:118)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:729)
    Val x208 = ((Val(1) - x158) * x184);
    Val x209 = ((Val(1) - x159) * x185);
    Val x210 = ((Val(1) - x160) * x186);
    Val x211 = ((Val(1) - x161) * x187);
    Val x212 = ((Val(1) - x162) * x188);
    Val x213 = ((Val(1) - x163) * x189);
    Val x214 = ((Val(1) - x164) * x190);
    Val x215 = ((Val(1) - x165) * x191);
    Val x216 = ((Val(1) - x166) * x192);
    Val x217 = ((Val(1) - x167) * x193);
    Val x218 = ((Val(1) - x168) * x194);
    Val x219 = ((Val(1) - x169) * x195);
    Val x220 = ((Val(1) - x170) * x196);
    Val x221 = ((Val(1) - x171) * x197);
    Val x222 = ((Val(1) - x172) * x198);
    Val x223 = ((Val(1) - x173) * x199);
    Val x224 = ((Val(1) - x174) * x200);
    Val x225 = ((Val(1) - x175) * x201);
    Val x226 = ((Val(1) - x176) * x202);
    Val x227 = ((Val(1) - x177) * x203);
    Val x228 = ((Val(1) - x178) * x204);
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:730)
    Val x229 = (((((x131 + x208) - ((x131 * Val(2)) * x208)) +
                  (((x132 + x209) - (x152 * x209)) * Val(2))) +
                 (((x133 + x210) - ((x133 * Val(2)) * x210)) * Val(4))) +
                (((x134 + x211) - ((x134 * Val(2)) * x211)) * Val(8)));
    Val x230 = (((x229 + (((x135 + x212) - ((x135 * Val(2)) * x212)) * Val(16))) +
                 (((x136 + x213) - ((x136 * Val(2)) * x213)) * Val(32))) +
                (((x137 + x214) - ((x137 * Val(2)) * x214)) * Val(64)));
    Val x231 = (((x230 + (((x138 + x215) - ((x138 * Val(2)) * x215)) * Val(128))) +
                 (((x139 + x216) - ((x139 * Val(2)) * x216)) * Val(256))) +
                (((x140 + x217) - ((x140 * Val(2)) * x217)) * Val(512)));
    Val x232 = (((x231 + (((x141 + x218) - ((x141 * Val(2)) * x218)) * Val(1024))) +
                 (((x142 + x219) - ((x142 * Val(2)) * x219)) * Val(2048))) +
                (((x143 + x220) - ((x143 * Val(2)) * x220)) * Val(4096)));
    Val x233 = (((x232 + (((x144 + x221) - ((x144 * Val(2)) * x221)) * Val(8192))) +
                 (((x145 + x222) - ((x145 * Val(2)) * x222)) * Val(16384))) +
                (((x146 + x223) - ((x146 * Val(2)) * x223)) * Val(32768)));
    Val x234 = (((x233 + (((x147 + x224) - ((x147 * Val(2)) * x224)) * Val(65536))) +
                 (((x148 + x225) - ((x148 * Val(2)) * x225)) * Val(131072))) +
                (((x149 + x226) - ((x149 * Val(2)) * x226)) * Val(262144)));
    NondetRegStruct x235 =
        exec_Reg(ctx,
                 ((x234 + (((x150 + x227) - ((x150 * Val(2)) * x227)) * Val(524288))) +
                  (((x151 + x228) - ((x151 * Val(2)) * x228)) * Val(1048576))),
                 LAYOUT_LOOKUP(x118, res3n));
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:733)
    RetTupleStruct x236 =
        exec_RetTuple(ctx,
                      x119,
                      x120,
                      x121,
                      x122,
                      x123,
                      Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), x235._super},
                      Val(5),
                      Val(13),
                      x124,
                      x125,
                      x126,
                      LAYOUT_LOOKUP(x118, _super));
  }
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:685)
  RetTupleStruct x237 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x237;
}
RetTupleStruct execChiMinor0_3__3_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<ChiMinor0_3__3_Layout> layout1) {
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:542)
  NondetRegStruct22Array x2 = arg0.arrC;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:546)
  Val x3 = x2[13]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:554)
  ToBits_22_Struct x4 = exec_ToBits_22_(ctx, x3, LAYOUT_LOOKUP(layout1, unpack_0xp1));
  NondetRegStruct22Array x5 = x4._super;
  Val x6 = x5[0]._super;
  Val x7 = x5[1]._super;
  Val x8 = x5[2]._super;
  Val x9 = x5[3]._super;
  Val x10 = x5[4]._super;
  Val x11 = x5[5]._super;
  Val x12 = x5[6]._super;
  Val x13 = x5[7]._super;
  Val x14 = x5[8]._super;
  Val x15 = x5[9]._super;
  Val x16 = x5[10]._super;
  Val x17 = x5[11]._super;
  Val x18 = x5[12]._super;
  Val x19 = x5[13]._super;
  Val x20 = x5[14]._super;
  Val x21 = x5[15]._super;
  Val x22 = x5[16]._super;
  Val x23 = x5[17]._super;
  Val x24 = x5[18]._super;
  Val x25 = x5[19]._super;
  Val x26 = x5[20]._super;
  Val x27 = x5[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:555)
  Val x28 = ((((((x6 + (x7 * Val(2))) + (x8 * Val(4))) + (x9 * Val(8))) + (x10 * Val(16))) +
              (x11 * Val(32))) +
             (x12 * Val(64)));
  Val x29 =
      ((((((x28 + (x13 * Val(128))) + (x14 * Val(256))) + (x15 * Val(512))) + (x16 * Val(1024))) +
        (x17 * Val(2048))) +
       (x18 * Val(4096)));
  Val x30 = ((((((x29 + (x19 * Val(8192))) + (x20 * Val(16384))) + (x21 * Val(32768))) +
               (x22 * Val(65536))) +
              (x23 * Val(131072))) +
             (x24 * Val(262144)));
  EQZ(((((x30 + (x25 * Val(524288))) + (x26 * Val(1048576))) + (x27 * Val(2097152))) - x3),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:555)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:559)
  Val x31 = x2[14]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:567)
  ToBits_21_Struct x32 = exec_ToBits_21_(ctx, x31, LAYOUT_LOOKUP(layout1, unpack_1xp1));
  NondetRegStruct21Array x33 = x32._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:568)
  Val x55 = ((((((x34 + (x35 * Val(2))) + (x36 * Val(4))) + (x37 * Val(8))) + (x38 * Val(16))) +
              (x39 * Val(32))) +
             (x40 * Val(64)));
  Val x56 =
      ((((((x55 + (x41 * Val(128))) + (x42 * Val(256))) + (x43 * Val(512))) + (x44 * Val(1024))) +
        (x45 * Val(2048))) +
       (x46 * Val(4096)));
  Val x57 = ((((((x56 + (x47 * Val(8192))) + (x48 * Val(16384))) + (x49 * Val(32768))) +
               (x50 * Val(65536))) +
              (x51 * Val(131072))) +
             (x52 * Val(262144)));
  EQZ((((x57 + (x53 * Val(524288))) + (x54 * Val(1048576))) - x31),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:568)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:573)
  Val x58 = x2[1]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:581)
  ToBits_22_Struct x59 = exec_ToBits_22_(ctx, x58, LAYOUT_LOOKUP(layout1, unpack_0xp2));
  NondetRegStruct22Array x60 = x59._super;
  Val x61 = x60[0]._super;
  Val x62 = x60[1]._super;
  Val x63 = x60[2]._super;
  Val x64 = x60[3]._super;
  Val x65 = x60[4]._super;
  Val x66 = x60[5]._super;
  Val x67 = x60[6]._super;
  Val x68 = x60[7]._super;
  Val x69 = x60[8]._super;
  Val x70 = x60[9]._super;
  Val x71 = x60[10]._super;
  Val x72 = x60[11]._super;
  Val x73 = x60[12]._super;
  Val x74 = x60[13]._super;
  Val x75 = x60[14]._super;
  Val x76 = x60[15]._super;
  Val x77 = x60[16]._super;
  Val x78 = x60[17]._super;
  Val x79 = x60[18]._super;
  Val x80 = x60[19]._super;
  Val x81 = x60[20]._super;
  Val x82 = x60[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:582)
  Val x83 = ((((((x61 + (x62 * Val(2))) + (x63 * Val(4))) + (x64 * Val(8))) + (x65 * Val(16))) +
              (x66 * Val(32))) +
             (x67 * Val(64)));
  Val x84 =
      ((((((x83 + (x68 * Val(128))) + (x69 * Val(256))) + (x70 * Val(512))) + (x71 * Val(1024))) +
        (x72 * Val(2048))) +
       (x73 * Val(4096)));
  Val x85 = ((((((x84 + (x74 * Val(8192))) + (x75 * Val(16384))) + (x76 * Val(32768))) +
               (x77 * Val(65536))) +
              (x78 * Val(131072))) +
             (x79 * Val(262144)));
  EQZ(((((x85 + (x80 * Val(524288))) + (x81 * Val(1048576))) + (x82 * Val(2097152))) - x58),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:582)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:586)
  Val x86 = x2[2]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:594)
  ToBits_21_Struct x87 = exec_ToBits_21_(ctx, x86, LAYOUT_LOOKUP(layout1, unpack_1xp2));
  NondetRegStruct21Array x88 = x87._super;
  Val x89 = x88[0]._super;
  Val x90 = x88[1]._super;
  Val x91 = x88[2]._super;
  Val x92 = x88[3]._super;
  Val x93 = x88[4]._super;
  Val x94 = x88[5]._super;
  Val x95 = x88[6]._super;
  Val x96 = x88[7]._super;
  Val x97 = x88[8]._super;
  Val x98 = x88[9]._super;
  Val x99 = x88[10]._super;
  Val x100 = x88[11]._super;
  Val x101 = x88[12]._super;
  Val x102 = x88[13]._super;
  Val x103 = x88[14]._super;
  Val x104 = x88[15]._super;
  Val x105 = x88[16]._super;
  Val x106 = x88[17]._super;
  Val x107 = x88[18]._super;
  Val x108 = x88[19]._super;
  Val x109 = x88[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:595)
  Val x110 = ((((((x89 + (x90 * Val(2))) + (x91 * Val(4))) + (x92 * Val(8))) + (x93 * Val(16))) +
               (x94 * Val(32))) +
              (x95 * Val(64)));
  Val x111 =
      ((((((x110 + (x96 * Val(128))) + (x97 * Val(256))) + (x98 * Val(512))) + (x99 * Val(1024))) +
        (x100 * Val(2048))) +
       (x101 * Val(4096)));
  Val x112 = ((((((x111 + (x102 * Val(8192))) + (x103 * Val(16384))) + (x104 * Val(32768))) +
                (x105 * Val(65536))) +
               (x106 * Val(131072))) +
              (x107 * Val(262144)));
  EQZ((((x112 + (x108 * Val(524288))) + (x109 * Val(1048576))) - x86),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:595)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:599)
  Val x113 = x2[10]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:607)
  ToBits_22_Struct x114 = exec_ToBits_22_(ctx, x113, LAYOUT_LOOKUP(layout1, unpack_0x));
  NondetRegStruct22Array x115 = x114._super;
  Val x116 = x115[0]._super;
  Val x117 = x115[1]._super;
  Val x118 = x115[2]._super;
  Val x119 = x115[3]._super;
  Val x120 = x115[4]._super;
  Val x121 = x115[5]._super;
  Val x122 = x115[6]._super;
  Val x123 = x115[7]._super;
  Val x124 = x115[8]._super;
  Val x125 = x115[9]._super;
  Val x126 = x115[10]._super;
  Val x127 = x115[11]._super;
  Val x128 = x115[12]._super;
  Val x129 = x115[13]._super;
  Val x130 = x115[14]._super;
  Val x131 = x115[15]._super;
  Val x132 = x115[16]._super;
  Val x133 = x115[17]._super;
  Val x134 = x115[18]._super;
  Val x135 = x115[19]._super;
  Val x136 = x115[20]._super;
  Val x137 = x115[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:608)
  Val x138 = (x117 * Val(2));
  Val x139 = ((((((x116 + x138) + (x118 * Val(4))) + (x119 * Val(8))) + (x120 * Val(16))) +
               (x121 * Val(32))) +
              (x122 * Val(64)));
  Val x140 = ((((((x139 + (x123 * Val(128))) + (x124 * Val(256))) + (x125 * Val(512))) +
                (x126 * Val(1024))) +
               (x127 * Val(2048))) +
              (x128 * Val(4096)));
  Val x141 = ((((((x140 + (x129 * Val(8192))) + (x130 * Val(16384))) + (x131 * Val(32768))) +
                (x132 * Val(65536))) +
               (x133 * Val(131072))) +
              (x134 * Val(262144)));
  EQZ(((((x141 + (x135 * Val(524288))) + (x136 * Val(1048576))) + (x137 * Val(2097152))) - x113),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:608)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:612)
  Val x142 = x2[11]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:620)
  ToBits_21_Struct x143 = exec_ToBits_21_(ctx, x142, LAYOUT_LOOKUP(layout1, unpack_1x));
  NondetRegStruct21Array x144 = x143._super;
  Val x145 = x144[0]._super;
  Val x146 = x144[1]._super;
  Val x147 = x144[2]._super;
  Val x148 = x144[3]._super;
  Val x149 = x144[4]._super;
  Val x150 = x144[5]._super;
  Val x151 = x144[6]._super;
  Val x152 = x144[7]._super;
  Val x153 = x144[8]._super;
  Val x154 = x144[9]._super;
  Val x155 = x144[10]._super;
  Val x156 = x144[11]._super;
  Val x157 = x144[12]._super;
  Val x158 = x144[13]._super;
  Val x159 = x144[14]._super;
  Val x160 = x144[15]._super;
  Val x161 = x144[16]._super;
  Val x162 = x144[17]._super;
  Val x163 = x144[18]._super;
  Val x164 = x144[19]._super;
  Val x165 = x144[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:621)
  Val x166 = (x146 * Val(2));
  Val x167 = ((((((x145 + x166) + (x147 * Val(4))) + (x148 * Val(8))) + (x149 * Val(16))) +
               (x150 * Val(32))) +
              (x151 * Val(64)));
  Val x168 = ((((((x167 + (x152 * Val(128))) + (x153 * Val(256))) + (x154 * Val(512))) +
                (x155 * Val(1024))) +
               (x156 * Val(2048))) +
              (x157 * Val(4096)));
  Val x169 = ((((((x168 + (x158 * Val(8192))) + (x159 * Val(16384))) + (x160 * Val(32768))) +
                (x161 * Val(65536))) +
               (x162 * Val(131072))) +
              (x163 * Val(262144)));
  EQZ((((x169 + (x164 * Val(524288))) + (x165 * Val(1048576))) - x142),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:621)");
  // andnxor(zirgen/circuit/keccak/keccak.zir:118)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:623)
  Val x170 = ((Val(1) - x6) * x61);
  Val x171 = ((Val(1) - x7) * x62);
  Val x172 = ((Val(1) - x8) * x63);
  Val x173 = ((Val(1) - x9) * x64);
  Val x174 = ((Val(1) - x10) * x65);
  Val x175 = ((Val(1) - x11) * x66);
  Val x176 = ((Val(1) - x12) * x67);
  Val x177 = ((Val(1) - x13) * x68);
  Val x178 = ((Val(1) - x14) * x69);
  Val x179 = ((Val(1) - x15) * x70);
  Val x180 = ((Val(1) - x16) * x71);
  Val x181 = ((Val(1) - x17) * x72);
  Val x182 = ((Val(1) - x18) * x73);
  Val x183 = ((Val(1) - x19) * x74);
  Val x184 = ((Val(1) - x20) * x75);
  Val x185 = ((Val(1) - x21) * x76);
  Val x186 = ((Val(1) - x22) * x77);
  Val x187 = ((Val(1) - x23) * x78);
  Val x188 = ((Val(1) - x24) * x79);
  Val x189 = ((Val(1) - x25) * x80);
  Val x190 = ((Val(1) - x26) * x81);
  Val x191 = ((Val(1) - x27) * x82);
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:624)
  Val x192 = ((Val(1) - x34) * x89);
  Val x193 = ((Val(1) - x35) * x90);
  Val x194 = ((Val(1) - x36) * x91);
  Val x195 = ((Val(1) - x37) * x92);
  Val x196 = ((Val(1) - x38) * x93);
  Val x197 = ((Val(1) - x39) * x94);
  Val x198 = ((Val(1) - x40) * x95);
  Val x199 = ((Val(1) - x41) * x96);
  Val x200 = ((Val(1) - x42) * x97);
  Val x201 = ((Val(1) - x43) * x98);
  Val x202 = ((Val(1) - x44) * x99);
  Val x203 = ((Val(1) - x45) * x100);
  Val x204 = ((Val(1) - x46) * x101);
  Val x205 = ((Val(1) - x47) * x102);
  Val x206 = ((Val(1) - x48) * x103);
  Val x207 = ((Val(1) - x49) * x104);
  Val x208 = ((Val(1) - x50) * x105);
  Val x209 = ((Val(1) - x51) * x106);
  Val x210 = ((Val(1) - x52) * x107);
  Val x211 = ((Val(1) - x53) * x108);
  Val x212 = ((Val(1) - x54) * x109);
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:625)
  Val x213 =
      (((((x116 + x170) - ((x116 * Val(2)) * x170)) + (((x117 + x171) - (x138 * x171)) * Val(2))) +
        (((x118 + x172) - ((x118 * Val(2)) * x172)) * Val(4))) +
       (((x119 + x173) - ((x119 * Val(2)) * x173)) * Val(8)));
  Val x214 = (((x213 + (((x120 + x174) - ((x120 * Val(2)) * x174)) * Val(16))) +
               (((x121 + x175) - ((x121 * Val(2)) * x175)) * Val(32))) +
              (((x122 + x176) - ((x122 * Val(2)) * x176)) * Val(64)));
  Val x215 = (((x214 + (((x123 + x177) - ((x123 * Val(2)) * x177)) * Val(128))) +
               (((x124 + x178) - ((x124 * Val(2)) * x178)) * Val(256))) +
              (((x125 + x179) - ((x125 * Val(2)) * x179)) * Val(512)));
  Val x216 = (((x215 + (((x126 + x180) - ((x126 * Val(2)) * x180)) * Val(1024))) +
               (((x127 + x181) - ((x127 * Val(2)) * x181)) * Val(2048))) +
              (((x128 + x182) - ((x128 * Val(2)) * x182)) * Val(4096)));
  Val x217 = (((x216 + (((x129 + x183) - ((x129 * Val(2)) * x183)) * Val(8192))) +
               (((x130 + x184) - ((x130 * Val(2)) * x184)) * Val(16384))) +
              (((x131 + x185) - ((x131 * Val(2)) * x185)) * Val(32768)));
  Val x218 = (((x217 + (((x132 + x186) - ((x132 * Val(2)) * x186)) * Val(65536))) +
               (((x133 + x187) - ((x133 * Val(2)) * x187)) * Val(131072))) +
              (((x134 + x188) - ((x134 * Val(2)) * x188)) * Val(262144)));
  Val x219 = (((x218 + (((x135 + x189) - ((x135 * Val(2)) * x189)) * Val(524288))) +
               (((x136 + x190) - ((x136 * Val(2)) * x190)) * Val(1048576))) +
              (((x137 + x191) - ((x137 * Val(2)) * x191)) * Val(2097152)));
  NondetRegStruct x220 = exec_Reg(ctx, x219, LAYOUT_LOOKUP(layout1, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  Val x221 =
      (((((x145 + x192) - ((x145 * Val(2)) * x192)) + (((x146 + x193) - (x166 * x193)) * Val(2))) +
        (((x147 + x194) - ((x147 * Val(2)) * x194)) * Val(4))) +
       (((x148 + x195) - ((x148 * Val(2)) * x195)) * Val(8)));
  Val x222 = (((x221 + (((x149 + x196) - ((x149 * Val(2)) * x196)) * Val(16))) +
               (((x150 + x197) - ((x150 * Val(2)) * x197)) * Val(32))) +
              (((x151 + x198) - ((x151 * Val(2)) * x198)) * Val(64)));
  Val x223 = (((x222 + (((x152 + x199) - ((x152 * Val(2)) * x199)) * Val(128))) +
               (((x153 + x200) - ((x153 * Val(2)) * x200)) * Val(256))) +
              (((x154 + x201) - ((x154 * Val(2)) * x201)) * Val(512)));
  Val x224 = (((x223 + (((x155 + x202) - ((x155 * Val(2)) * x202)) * Val(1024))) +
               (((x156 + x203) - ((x156 * Val(2)) * x203)) * Val(2048))) +
              (((x157 + x204) - ((x157 * Val(2)) * x204)) * Val(4096)));
  Val x225 = (((x224 + (((x158 + x205) - ((x158 * Val(2)) * x205)) * Val(8192))) +
               (((x159 + x206) - ((x159 * Val(2)) * x206)) * Val(16384))) +
              (((x160 + x207) - ((x160 * Val(2)) * x207)) * Val(32768)));
  Val x226 = (((x225 + (((x161 + x208) - ((x161 * Val(2)) * x208)) * Val(65536))) +
               (((x162 + x209) - ((x162 * Val(2)) * x209)) * Val(131072))) +
              (((x163 + x210) - ((x163 * Val(2)) * x210)) * Val(262144)));
  NondetRegStruct x227 =
      exec_Reg(ctx,
               ((x226 + (((x164 + x211) - ((x164 * Val(2)) * x211)) * Val(524288))) +
                (((x165 + x212) - ((x165 * Val(2)) * x212)) * Val(1048576))),
               LAYOUT_LOOKUP(layout1, _1));
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:630)
  Val22Array x228 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x229 = exec_RetTuple(
      ctx,
      x228,
      x228,
      x228,
      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), x220._super, x227._super},
      x228,
      x228,
      Val(6),
      Val(13),
      arg0.rnd._super,
      arg0.blk._super,
      arg0.midx._super,
      LAYOUT_LOOKUP(layout1, _super));
  return x229;
}
RetTupleStruct execChiMinor0_4__3_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<ChiMinor0_4__3_Layout> layout1) {
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:542)
  NondetRegStruct22Array x2 = arg0.arrC;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:546)
  Val x3 = x2[1]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:554)
  ToBits_22_Struct x4 = exec_ToBits_22_(ctx, x3, LAYOUT_LOOKUP(layout1, unpack_0xp1));
  NondetRegStruct22Array x5 = x4._super;
  Val x6 = x5[0]._super;
  Val x7 = x5[1]._super;
  Val x8 = x5[2]._super;
  Val x9 = x5[3]._super;
  Val x10 = x5[4]._super;
  Val x11 = x5[5]._super;
  Val x12 = x5[6]._super;
  Val x13 = x5[7]._super;
  Val x14 = x5[8]._super;
  Val x15 = x5[9]._super;
  Val x16 = x5[10]._super;
  Val x17 = x5[11]._super;
  Val x18 = x5[12]._super;
  Val x19 = x5[13]._super;
  Val x20 = x5[14]._super;
  Val x21 = x5[15]._super;
  Val x22 = x5[16]._super;
  Val x23 = x5[17]._super;
  Val x24 = x5[18]._super;
  Val x25 = x5[19]._super;
  Val x26 = x5[20]._super;
  Val x27 = x5[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:555)
  Val x28 = ((((((x6 + (x7 * Val(2))) + (x8 * Val(4))) + (x9 * Val(8))) + (x10 * Val(16))) +
              (x11 * Val(32))) +
             (x12 * Val(64)));
  Val x29 =
      ((((((x28 + (x13 * Val(128))) + (x14 * Val(256))) + (x15 * Val(512))) + (x16 * Val(1024))) +
        (x17 * Val(2048))) +
       (x18 * Val(4096)));
  Val x30 = ((((((x29 + (x19 * Val(8192))) + (x20 * Val(16384))) + (x21 * Val(32768))) +
               (x22 * Val(65536))) +
              (x23 * Val(131072))) +
             (x24 * Val(262144)));
  EQZ(((((x30 + (x25 * Val(524288))) + (x26 * Val(1048576))) + (x27 * Val(2097152))) - x3),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:555)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:559)
  Val x31 = x2[2]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:567)
  ToBits_21_Struct x32 = exec_ToBits_21_(ctx, x31, LAYOUT_LOOKUP(layout1, unpack_1xp1));
  NondetRegStruct21Array x33 = x32._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:568)
  Val x55 = ((((((x34 + (x35 * Val(2))) + (x36 * Val(4))) + (x37 * Val(8))) + (x38 * Val(16))) +
              (x39 * Val(32))) +
             (x40 * Val(64)));
  Val x56 =
      ((((((x55 + (x41 * Val(128))) + (x42 * Val(256))) + (x43 * Val(512))) + (x44 * Val(1024))) +
        (x45 * Val(2048))) +
       (x46 * Val(4096)));
  Val x57 = ((((((x56 + (x47 * Val(8192))) + (x48 * Val(16384))) + (x49 * Val(32768))) +
               (x50 * Val(65536))) +
              (x51 * Val(131072))) +
             (x52 * Val(262144)));
  EQZ((((x57 + (x53 * Val(524288))) + (x54 * Val(1048576))) - x31),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:568)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:573)
  Val x58 = x2[4]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:581)
  ToBits_22_Struct x59 = exec_ToBits_22_(ctx, x58, LAYOUT_LOOKUP(layout1, unpack_0xp2));
  NondetRegStruct22Array x60 = x59._super;
  Val x61 = x60[0]._super;
  Val x62 = x60[1]._super;
  Val x63 = x60[2]._super;
  Val x64 = x60[3]._super;
  Val x65 = x60[4]._super;
  Val x66 = x60[5]._super;
  Val x67 = x60[6]._super;
  Val x68 = x60[7]._super;
  Val x69 = x60[8]._super;
  Val x70 = x60[9]._super;
  Val x71 = x60[10]._super;
  Val x72 = x60[11]._super;
  Val x73 = x60[12]._super;
  Val x74 = x60[13]._super;
  Val x75 = x60[14]._super;
  Val x76 = x60[15]._super;
  Val x77 = x60[16]._super;
  Val x78 = x60[17]._super;
  Val x79 = x60[18]._super;
  Val x80 = x60[19]._super;
  Val x81 = x60[20]._super;
  Val x82 = x60[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:582)
  Val x83 = ((((((x61 + (x62 * Val(2))) + (x63 * Val(4))) + (x64 * Val(8))) + (x65 * Val(16))) +
              (x66 * Val(32))) +
             (x67 * Val(64)));
  Val x84 =
      ((((((x83 + (x68 * Val(128))) + (x69 * Val(256))) + (x70 * Val(512))) + (x71 * Val(1024))) +
        (x72 * Val(2048))) +
       (x73 * Val(4096)));
  Val x85 = ((((((x84 + (x74 * Val(8192))) + (x75 * Val(16384))) + (x76 * Val(32768))) +
               (x77 * Val(65536))) +
              (x78 * Val(131072))) +
             (x79 * Val(262144)));
  EQZ(((((x85 + (x80 * Val(524288))) + (x81 * Val(1048576))) + (x82 * Val(2097152))) - x58),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:582)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:586)
  Val x86 = x2[5]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:594)
  ToBits_21_Struct x87 = exec_ToBits_21_(ctx, x86, LAYOUT_LOOKUP(layout1, unpack_1xp2));
  NondetRegStruct21Array x88 = x87._super;
  Val x89 = x88[0]._super;
  Val x90 = x88[1]._super;
  Val x91 = x88[2]._super;
  Val x92 = x88[3]._super;
  Val x93 = x88[4]._super;
  Val x94 = x88[5]._super;
  Val x95 = x88[6]._super;
  Val x96 = x88[7]._super;
  Val x97 = x88[8]._super;
  Val x98 = x88[9]._super;
  Val x99 = x88[10]._super;
  Val x100 = x88[11]._super;
  Val x101 = x88[12]._super;
  Val x102 = x88[13]._super;
  Val x103 = x88[14]._super;
  Val x104 = x88[15]._super;
  Val x105 = x88[16]._super;
  Val x106 = x88[17]._super;
  Val x107 = x88[18]._super;
  Val x108 = x88[19]._super;
  Val x109 = x88[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:595)
  Val x110 = ((((((x89 + (x90 * Val(2))) + (x91 * Val(4))) + (x92 * Val(8))) + (x93 * Val(16))) +
               (x94 * Val(32))) +
              (x95 * Val(64)));
  Val x111 =
      ((((((x110 + (x96 * Val(128))) + (x97 * Val(256))) + (x98 * Val(512))) + (x99 * Val(1024))) +
        (x100 * Val(2048))) +
       (x101 * Val(4096)));
  Val x112 = ((((((x111 + (x102 * Val(8192))) + (x103 * Val(16384))) + (x104 * Val(32768))) +
                (x105 * Val(65536))) +
               (x106 * Val(131072))) +
              (x107 * Val(262144)));
  EQZ((((x112 + (x108 * Val(524288))) + (x109 * Val(1048576))) - x86),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:595)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:599)
  Val x113 = x2[13]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:607)
  ToBits_22_Struct x114 = exec_ToBits_22_(ctx, x113, LAYOUT_LOOKUP(layout1, unpack_0x));
  NondetRegStruct22Array x115 = x114._super;
  Val x116 = x115[0]._super;
  Val x117 = x115[1]._super;
  Val x118 = x115[2]._super;
  Val x119 = x115[3]._super;
  Val x120 = x115[4]._super;
  Val x121 = x115[5]._super;
  Val x122 = x115[6]._super;
  Val x123 = x115[7]._super;
  Val x124 = x115[8]._super;
  Val x125 = x115[9]._super;
  Val x126 = x115[10]._super;
  Val x127 = x115[11]._super;
  Val x128 = x115[12]._super;
  Val x129 = x115[13]._super;
  Val x130 = x115[14]._super;
  Val x131 = x115[15]._super;
  Val x132 = x115[16]._super;
  Val x133 = x115[17]._super;
  Val x134 = x115[18]._super;
  Val x135 = x115[19]._super;
  Val x136 = x115[20]._super;
  Val x137 = x115[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:608)
  Val x138 = (x117 * Val(2));
  Val x139 = ((((((x116 + x138) + (x118 * Val(4))) + (x119 * Val(8))) + (x120 * Val(16))) +
               (x121 * Val(32))) +
              (x122 * Val(64)));
  Val x140 = ((((((x139 + (x123 * Val(128))) + (x124 * Val(256))) + (x125 * Val(512))) +
                (x126 * Val(1024))) +
               (x127 * Val(2048))) +
              (x128 * Val(4096)));
  Val x141 = ((((((x140 + (x129 * Val(8192))) + (x130 * Val(16384))) + (x131 * Val(32768))) +
                (x132 * Val(65536))) +
               (x133 * Val(131072))) +
              (x134 * Val(262144)));
  EQZ(((((x141 + (x135 * Val(524288))) + (x136 * Val(1048576))) + (x137 * Val(2097152))) - x113),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:608)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:612)
  Val x142 = x2[14]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:620)
  ToBits_21_Struct x143 = exec_ToBits_21_(ctx, x142, LAYOUT_LOOKUP(layout1, unpack_1x));
  NondetRegStruct21Array x144 = x143._super;
  Val x145 = x144[0]._super;
  Val x146 = x144[1]._super;
  Val x147 = x144[2]._super;
  Val x148 = x144[3]._super;
  Val x149 = x144[4]._super;
  Val x150 = x144[5]._super;
  Val x151 = x144[6]._super;
  Val x152 = x144[7]._super;
  Val x153 = x144[8]._super;
  Val x154 = x144[9]._super;
  Val x155 = x144[10]._super;
  Val x156 = x144[11]._super;
  Val x157 = x144[12]._super;
  Val x158 = x144[13]._super;
  Val x159 = x144[14]._super;
  Val x160 = x144[15]._super;
  Val x161 = x144[16]._super;
  Val x162 = x144[17]._super;
  Val x163 = x144[18]._super;
  Val x164 = x144[19]._super;
  Val x165 = x144[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:621)
  Val x166 = (x146 * Val(2));
  Val x167 = ((((((x145 + x166) + (x147 * Val(4))) + (x148 * Val(8))) + (x149 * Val(16))) +
               (x150 * Val(32))) +
              (x151 * Val(64)));
  Val x168 = ((((((x167 + (x152 * Val(128))) + (x153 * Val(256))) + (x154 * Val(512))) +
                (x155 * Val(1024))) +
               (x156 * Val(2048))) +
              (x157 * Val(4096)));
  Val x169 = ((((((x168 + (x158 * Val(8192))) + (x159 * Val(16384))) + (x160 * Val(32768))) +
                (x161 * Val(65536))) +
               (x162 * Val(131072))) +
              (x163 * Val(262144)));
  EQZ((((x169 + (x164 * Val(524288))) + (x165 * Val(1048576))) - x142),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:621)");
  // andnxor(zirgen/circuit/keccak/keccak.zir:118)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:623)
  Val x170 = ((Val(1) - x6) * x61);
  Val x171 = ((Val(1) - x7) * x62);
  Val x172 = ((Val(1) - x8) * x63);
  Val x173 = ((Val(1) - x9) * x64);
  Val x174 = ((Val(1) - x10) * x65);
  Val x175 = ((Val(1) - x11) * x66);
  Val x176 = ((Val(1) - x12) * x67);
  Val x177 = ((Val(1) - x13) * x68);
  Val x178 = ((Val(1) - x14) * x69);
  Val x179 = ((Val(1) - x15) * x70);
  Val x180 = ((Val(1) - x16) * x71);
  Val x181 = ((Val(1) - x17) * x72);
  Val x182 = ((Val(1) - x18) * x73);
  Val x183 = ((Val(1) - x19) * x74);
  Val x184 = ((Val(1) - x20) * x75);
  Val x185 = ((Val(1) - x21) * x76);
  Val x186 = ((Val(1) - x22) * x77);
  Val x187 = ((Val(1) - x23) * x78);
  Val x188 = ((Val(1) - x24) * x79);
  Val x189 = ((Val(1) - x25) * x80);
  Val x190 = ((Val(1) - x26) * x81);
  Val x191 = ((Val(1) - x27) * x82);
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:624)
  Val x192 = ((Val(1) - x34) * x89);
  Val x193 = ((Val(1) - x35) * x90);
  Val x194 = ((Val(1) - x36) * x91);
  Val x195 = ((Val(1) - x37) * x92);
  Val x196 = ((Val(1) - x38) * x93);
  Val x197 = ((Val(1) - x39) * x94);
  Val x198 = ((Val(1) - x40) * x95);
  Val x199 = ((Val(1) - x41) * x96);
  Val x200 = ((Val(1) - x42) * x97);
  Val x201 = ((Val(1) - x43) * x98);
  Val x202 = ((Val(1) - x44) * x99);
  Val x203 = ((Val(1) - x45) * x100);
  Val x204 = ((Val(1) - x46) * x101);
  Val x205 = ((Val(1) - x47) * x102);
  Val x206 = ((Val(1) - x48) * x103);
  Val x207 = ((Val(1) - x49) * x104);
  Val x208 = ((Val(1) - x50) * x105);
  Val x209 = ((Val(1) - x51) * x106);
  Val x210 = ((Val(1) - x52) * x107);
  Val x211 = ((Val(1) - x53) * x108);
  Val x212 = ((Val(1) - x54) * x109);
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:625)
  Val x213 =
      (((((x116 + x170) - ((x116 * Val(2)) * x170)) + (((x117 + x171) - (x138 * x171)) * Val(2))) +
        (((x118 + x172) - ((x118 * Val(2)) * x172)) * Val(4))) +
       (((x119 + x173) - ((x119 * Val(2)) * x173)) * Val(8)));
  Val x214 = (((x213 + (((x120 + x174) - ((x120 * Val(2)) * x174)) * Val(16))) +
               (((x121 + x175) - ((x121 * Val(2)) * x175)) * Val(32))) +
              (((x122 + x176) - ((x122 * Val(2)) * x176)) * Val(64)));
  Val x215 = (((x214 + (((x123 + x177) - ((x123 * Val(2)) * x177)) * Val(128))) +
               (((x124 + x178) - ((x124 * Val(2)) * x178)) * Val(256))) +
              (((x125 + x179) - ((x125 * Val(2)) * x179)) * Val(512)));
  Val x216 = (((x215 + (((x126 + x180) - ((x126 * Val(2)) * x180)) * Val(1024))) +
               (((x127 + x181) - ((x127 * Val(2)) * x181)) * Val(2048))) +
              (((x128 + x182) - ((x128 * Val(2)) * x182)) * Val(4096)));
  Val x217 = (((x216 + (((x129 + x183) - ((x129 * Val(2)) * x183)) * Val(8192))) +
               (((x130 + x184) - ((x130 * Val(2)) * x184)) * Val(16384))) +
              (((x131 + x185) - ((x131 * Val(2)) * x185)) * Val(32768)));
  Val x218 = (((x217 + (((x132 + x186) - ((x132 * Val(2)) * x186)) * Val(65536))) +
               (((x133 + x187) - ((x133 * Val(2)) * x187)) * Val(131072))) +
              (((x134 + x188) - ((x134 * Val(2)) * x188)) * Val(262144)));
  Val x219 = (((x218 + (((x135 + x189) - ((x135 * Val(2)) * x189)) * Val(524288))) +
               (((x136 + x190) - ((x136 * Val(2)) * x190)) * Val(1048576))) +
              (((x137 + x191) - ((x137 * Val(2)) * x191)) * Val(2097152)));
  NondetRegStruct x220 = exec_Reg(ctx, x219, LAYOUT_LOOKUP(layout1, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  Val x221 =
      (((((x145 + x192) - ((x145 * Val(2)) * x192)) + (((x146 + x193) - (x166 * x193)) * Val(2))) +
        (((x147 + x194) - ((x147 * Val(2)) * x194)) * Val(4))) +
       (((x148 + x195) - ((x148 * Val(2)) * x195)) * Val(8)));
  Val x222 = (((x221 + (((x149 + x196) - ((x149 * Val(2)) * x196)) * Val(16))) +
               (((x150 + x197) - ((x150 * Val(2)) * x197)) * Val(32))) +
              (((x151 + x198) - ((x151 * Val(2)) * x198)) * Val(64)));
  Val x223 = (((x222 + (((x152 + x199) - ((x152 * Val(2)) * x199)) * Val(128))) +
               (((x153 + x200) - ((x153 * Val(2)) * x200)) * Val(256))) +
              (((x154 + x201) - ((x154 * Val(2)) * x201)) * Val(512)));
  Val x224 = (((x223 + (((x155 + x202) - ((x155 * Val(2)) * x202)) * Val(1024))) +
               (((x156 + x203) - ((x156 * Val(2)) * x203)) * Val(2048))) +
              (((x157 + x204) - ((x157 * Val(2)) * x204)) * Val(4096)));
  Val x225 = (((x224 + (((x158 + x205) - ((x158 * Val(2)) * x205)) * Val(8192))) +
               (((x159 + x206) - ((x159 * Val(2)) * x206)) * Val(16384))) +
              (((x160 + x207) - ((x160 * Val(2)) * x207)) * Val(32768)));
  Val x226 = (((x225 + (((x161 + x208) - ((x161 * Val(2)) * x208)) * Val(65536))) +
               (((x162 + x209) - ((x162 * Val(2)) * x209)) * Val(131072))) +
              (((x163 + x210) - ((x163 * Val(2)) * x210)) * Val(262144)));
  NondetRegStruct x227 =
      exec_Reg(ctx,
               ((x226 + (((x164 + x211) - ((x164 * Val(2)) * x211)) * Val(524288))) +
                (((x165 + x212) - ((x165 * Val(2)) * x212)) * Val(1048576))),
               LAYOUT_LOOKUP(layout1, _1));
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:630)
  Val22Array x228 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x229 = exec_RetTuple(
      ctx,
      x228,
      x228,
      x228,
      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), x220._super, x227._super},
      x228,
      x228,
      Val(7),
      Val(13),
      arg0.rnd._super,
      arg0.blk._super,
      arg0.midx._super,
      LAYOUT_LOOKUP(layout1, _super));
  return x229;
}
RetTupleStruct execChiMinor1_4__3_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<ChiMinor1_4__3_Layout> layout2) {
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:685)
  BoundLayout<ChiMinor1_4__3__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:635)
  RetTupleStruct x4 = back_RetTuple(ctx, 8, arg1);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:636)
  RetTupleStruct x5 = back_RetTuple(ctx, 1, arg1);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:635)
  NondetRegStruct22Array x6 = x4.arrC;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:640)
  Val x7 = x6[15]._super;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:648)
  ToBits_21_Struct x8 = exec_ToBits_21_(ctx, x7, LAYOUT_LOOKUP(layout2, unpack_2x));
  NondetRegStruct21Array x9 = x8._super;
  Val x10 = x9[0]._super;
  Val x11 = x9[1]._super;
  Val x12 = x9[2]._super;
  Val x13 = x9[3]._super;
  Val x14 = x9[4]._super;
  Val x15 = x9[5]._super;
  Val x16 = x9[6]._super;
  Val x17 = x9[7]._super;
  Val x18 = x9[8]._super;
  Val x19 = x9[9]._super;
  Val x20 = x9[10]._super;
  Val x21 = x9[11]._super;
  Val x22 = x9[12]._super;
  Val x23 = x9[13]._super;
  Val x24 = x9[14]._super;
  Val x25 = x9[15]._super;
  Val x26 = x9[16]._super;
  Val x27 = x9[17]._super;
  Val x28 = x9[18]._super;
  Val x29 = x9[19]._super;
  Val x30 = x9[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:649)
  Val x31 = (x11 * Val(2));
  Val x32 =
      ((((((x10 + x31) + (x12 * Val(4))) + (x13 * Val(8))) + (x14 * Val(16))) + (x15 * Val(32))) +
       (x16 * Val(64)));
  Val x33 =
      ((((((x32 + (x17 * Val(128))) + (x18 * Val(256))) + (x19 * Val(512))) + (x20 * Val(1024))) +
        (x21 * Val(2048))) +
       (x22 * Val(4096)));
  Val x34 = ((((((x33 + (x23 * Val(8192))) + (x24 * Val(16384))) + (x25 * Val(32768))) +
               (x26 * Val(65536))) +
              (x27 * Val(131072))) +
             (x28 * Val(262144)));
  EQZ((((x34 + (x29 * Val(524288))) + (x30 * Val(1048576))) - x7),
      "chi_minor1(zirgen/circuit/keccak/keccak.zir:649)");
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:654)
  Val x35 = x6[3]._super;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:662)
  ToBits_21_Struct x36 = exec_ToBits_21_(ctx, x35, LAYOUT_LOOKUP(layout2, unpack_2xp1));
  NondetRegStruct21Array x37 = x36._super;
  Val x38 = x37[0]._super;
  Val x39 = x37[1]._super;
  Val x40 = x37[2]._super;
  Val x41 = x37[3]._super;
  Val x42 = x37[4]._super;
  Val x43 = x37[5]._super;
  Val x44 = x37[6]._super;
  Val x45 = x37[7]._super;
  Val x46 = x37[8]._super;
  Val x47 = x37[9]._super;
  Val x48 = x37[10]._super;
  Val x49 = x37[11]._super;
  Val x50 = x37[12]._super;
  Val x51 = x37[13]._super;
  Val x52 = x37[14]._super;
  Val x53 = x37[15]._super;
  Val x54 = x37[16]._super;
  Val x55 = x37[17]._super;
  Val x56 = x37[18]._super;
  Val x57 = x37[19]._super;
  Val x58 = x37[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:663)
  Val x59 = ((((((x38 + (x39 * Val(2))) + (x40 * Val(4))) + (x41 * Val(8))) + (x42 * Val(16))) +
              (x43 * Val(32))) +
             (x44 * Val(64)));
  Val x60 =
      ((((((x59 + (x45 * Val(128))) + (x46 * Val(256))) + (x47 * Val(512))) + (x48 * Val(1024))) +
        (x49 * Val(2048))) +
       (x50 * Val(4096)));
  Val x61 = ((((((x60 + (x51 * Val(8192))) + (x52 * Val(16384))) + (x53 * Val(32768))) +
               (x54 * Val(65536))) +
              (x55 * Val(131072))) +
             (x56 * Val(262144)));
  EQZ((((x61 + (x57 * Val(524288))) + (x58 * Val(1048576))) - x35),
      "chi_minor1(zirgen/circuit/keccak/keccak.zir:663)");
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:667)
  Val x62 = x6[6]._super;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:675)
  ToBits_21_Struct x63 = exec_ToBits_21_(ctx, x62, LAYOUT_LOOKUP(layout2, unpack_2xp2));
  NondetRegStruct21Array x64 = x63._super;
  Val x65 = x64[0]._super;
  Val x66 = x64[1]._super;
  Val x67 = x64[2]._super;
  Val x68 = x64[3]._super;
  Val x69 = x64[4]._super;
  Val x70 = x64[5]._super;
  Val x71 = x64[6]._super;
  Val x72 = x64[7]._super;
  Val x73 = x64[8]._super;
  Val x74 = x64[9]._super;
  Val x75 = x64[10]._super;
  Val x76 = x64[11]._super;
  Val x77 = x64[12]._super;
  Val x78 = x64[13]._super;
  Val x79 = x64[14]._super;
  Val x80 = x64[15]._super;
  Val x81 = x64[16]._super;
  Val x82 = x64[17]._super;
  Val x83 = x64[18]._super;
  Val x84 = x64[19]._super;
  Val x85 = x64[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:676)
  Val x86 = ((((((x65 + (x66 * Val(2))) + (x67 * Val(4))) + (x68 * Val(8))) + (x69 * Val(16))) +
              (x70 * Val(32))) +
             (x71 * Val(64)));
  Val x87 =
      ((((((x86 + (x72 * Val(128))) + (x73 * Val(256))) + (x74 * Val(512))) + (x75 * Val(1024))) +
        (x76 * Val(2048))) +
       (x77 * Val(4096)));
  Val x88 = ((((((x87 + (x78 * Val(8192))) + (x79 * Val(16384))) + (x80 * Val(32768))) +
               (x81 * Val(65536))) +
              (x82 * Val(131072))) +
             (x83 * Val(262144)));
  EQZ((((x88 + (x84 * Val(524288))) + (x85 * Val(1048576))) - x62),
      "chi_minor1(zirgen/circuit/keccak/keccak.zir:676)");
  // andnxor(zirgen/circuit/keccak/keccak.zir:118)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:678)
  Val x89 = ((Val(1) - x38) * x65);
  Val x90 = ((Val(1) - x39) * x66);
  Val x91 = ((Val(1) - x40) * x67);
  Val x92 = ((Val(1) - x41) * x68);
  Val x93 = ((Val(1) - x42) * x69);
  Val x94 = ((Val(1) - x43) * x70);
  Val x95 = ((Val(1) - x44) * x71);
  Val x96 = ((Val(1) - x45) * x72);
  Val x97 = ((Val(1) - x46) * x73);
  Val x98 = ((Val(1) - x47) * x74);
  Val x99 = ((Val(1) - x48) * x75);
  Val x100 = ((Val(1) - x49) * x76);
  Val x101 = ((Val(1) - x50) * x77);
  Val x102 = ((Val(1) - x51) * x78);
  Val x103 = ((Val(1) - x52) * x79);
  Val x104 = ((Val(1) - x53) * x80);
  Val x105 = ((Val(1) - x54) * x81);
  Val x106 = ((Val(1) - x55) * x82);
  Val x107 = ((Val(1) - x56) * x83);
  Val x108 = ((Val(1) - x57) * x84);
  Val x109 = ((Val(1) - x58) * x85);
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:679)
  Val x110 = (((((x10 + x89) - ((x10 * Val(2)) * x89)) + (((x11 + x90) - (x31 * x90)) * Val(2))) +
               (((x12 + x91) - ((x12 * Val(2)) * x91)) * Val(4))) +
              (((x13 + x92) - ((x13 * Val(2)) * x92)) * Val(8)));
  Val x111 = (((x110 + (((x14 + x93) - ((x14 * Val(2)) * x93)) * Val(16))) +
               (((x15 + x94) - ((x15 * Val(2)) * x94)) * Val(32))) +
              (((x16 + x95) - ((x16 * Val(2)) * x95)) * Val(64)));
  Val x112 = (((x111 + (((x17 + x96) - ((x17 * Val(2)) * x96)) * Val(128))) +
               (((x18 + x97) - ((x18 * Val(2)) * x97)) * Val(256))) +
              (((x19 + x98) - ((x19 * Val(2)) * x98)) * Val(512)));
  Val x113 = (((x112 + (((x20 + x99) - ((x20 * Val(2)) * x99)) * Val(1024))) +
               (((x21 + x100) - ((x21 * Val(2)) * x100)) * Val(2048))) +
              (((x22 + x101) - ((x22 * Val(2)) * x101)) * Val(4096)));
  Val x114 = (((x113 + (((x23 + x102) - ((x23 * Val(2)) * x102)) * Val(8192))) +
               (((x24 + x103) - ((x24 * Val(2)) * x103)) * Val(16384))) +
              (((x25 + x104) - ((x25 * Val(2)) * x104)) * Val(32768)));
  Val x115 = (((x114 + (((x26 + x105) - ((x26 * Val(2)) * x105)) * Val(65536))) +
               (((x27 + x106) - ((x27 * Val(2)) * x106)) * Val(131072))) +
              (((x28 + x107) - ((x28 * Val(2)) * x107)) * Val(262144)));
  NondetRegStruct x116 =
      exec_Reg(ctx,
               ((x115 + (((x29 + x108) - ((x29 * Val(2)) * x108)) * Val(524288))) +
                (((x30 + x109) - ((x30 * Val(2)) * x109)) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, res3));
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:636)
  NondetRegStruct24Array x117 = x5.arrD;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:685)
  BoundLayout<ChiMinor1_4__3_Arm1_SuperLayout> x118 = LAYOUT_LOOKUP(x3, arm1);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:680)
  Val22Array x119 =
      Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), x117[22]._super};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:681)
  Val22Array x120 =
      Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), x117[23]._super};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:682)
  Val22Array x121 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), x116._super};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:686)
  Val24Array x122 = Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  Val22Array x123 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:636)
  Val x124 = x5.rnd._super;
  Val x125 = x5.blk._super;
  Val x126 = x5.midx._super;
  if (to_size_t(Val(1))) {
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:686)
    RetTupleStruct x127 = exec_RetTuple(ctx,
                                        x119,
                                        x120,
                                        x121,
                                        x122,
                                        x123,
                                        x123,
                                        Val(8),
                                        Val(13),
                                        x124,
                                        x125,
                                        x126,
                                        LAYOUT_LOOKUP(x3, arm0));
  }
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:718)
  Val x128 = x6[9]._super;
  if (to_size_t(Val(0))) {
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:699)
    ToBits_21_Struct x129 = exec_ToBits_21_(ctx, x35, LAYOUT_LOOKUP(x118, unpack_2nx));
    NondetRegStruct21Array x130 = x129._super;
    Val x131 = x130[0]._super;
    Val x132 = x130[1]._super;
    Val x133 = x130[2]._super;
    Val x134 = x130[3]._super;
    Val x135 = x130[4]._super;
    Val x136 = x130[5]._super;
    Val x137 = x130[6]._super;
    Val x138 = x130[7]._super;
    Val x139 = x130[8]._super;
    Val x140 = x130[9]._super;
    Val x141 = x130[10]._super;
    Val x142 = x130[11]._super;
    Val x143 = x130[12]._super;
    Val x144 = x130[13]._super;
    Val x145 = x130[14]._super;
    Val x146 = x130[15]._super;
    Val x147 = x130[16]._super;
    Val x148 = x130[17]._super;
    Val x149 = x130[18]._super;
    Val x150 = x130[19]._super;
    Val x151 = x130[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:700)
    Val x152 = (x132 * Val(2));
    Val x153 = ((((((x131 + x152) + (x133 * Val(4))) + (x134 * Val(8))) + (x135 * Val(16))) +
                 (x136 * Val(32))) +
                (x137 * Val(64)));
    Val x154 = ((((((x153 + (x138 * Val(128))) + (x139 * Val(256))) + (x140 * Val(512))) +
                  (x141 * Val(1024))) +
                 (x142 * Val(2048))) +
                (x143 * Val(4096)));
    Val x155 = ((((((x154 + (x144 * Val(8192))) + (x145 * Val(16384))) + (x146 * Val(32768))) +
                  (x147 * Val(65536))) +
                 (x148 * Val(131072))) +
                (x149 * Val(262144)));
    EQZ((((x155 + (x150 * Val(524288))) + (x151 * Val(1048576))) - x35),
        "chi_minor1(zirgen/circuit/keccak/keccak.zir:700)");
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:713)
    ToBits_21_Struct x156 = exec_ToBits_21_(ctx, x62, LAYOUT_LOOKUP(x118, unpack_2nxp1));
    NondetRegStruct21Array x157 = x156._super;
    Val x158 = x157[0]._super;
    Val x159 = x157[1]._super;
    Val x160 = x157[2]._super;
    Val x161 = x157[3]._super;
    Val x162 = x157[4]._super;
    Val x163 = x157[5]._super;
    Val x164 = x157[6]._super;
    Val x165 = x157[7]._super;
    Val x166 = x157[8]._super;
    Val x167 = x157[9]._super;
    Val x168 = x157[10]._super;
    Val x169 = x157[11]._super;
    Val x170 = x157[12]._super;
    Val x171 = x157[13]._super;
    Val x172 = x157[14]._super;
    Val x173 = x157[15]._super;
    Val x174 = x157[16]._super;
    Val x175 = x157[17]._super;
    Val x176 = x157[18]._super;
    Val x177 = x157[19]._super;
    Val x178 = x157[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:714)
    Val x179 =
        ((((((x158 + (x159 * Val(2))) + (x160 * Val(4))) + (x161 * Val(8))) + (x162 * Val(16))) +
          (x163 * Val(32))) +
         (x164 * Val(64)));
    Val x180 = ((((((x179 + (x165 * Val(128))) + (x166 * Val(256))) + (x167 * Val(512))) +
                  (x168 * Val(1024))) +
                 (x169 * Val(2048))) +
                (x170 * Val(4096)));
    Val x181 = ((((((x180 + (x171 * Val(8192))) + (x172 * Val(16384))) + (x173 * Val(32768))) +
                  (x174 * Val(65536))) +
                 (x175 * Val(131072))) +
                (x176 * Val(262144)));
    EQZ((((x181 + (x177 * Val(524288))) + (x178 * Val(1048576))) - x62),
        "chi_minor1(zirgen/circuit/keccak/keccak.zir:714)");
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:726)
    ToBits_21_Struct x182 = exec_ToBits_21_(ctx, x128, LAYOUT_LOOKUP(x118, unpack_2nxp2));
    NondetRegStruct21Array x183 = x182._super;
    Val x184 = x183[0]._super;
    Val x185 = x183[1]._super;
    Val x186 = x183[2]._super;
    Val x187 = x183[3]._super;
    Val x188 = x183[4]._super;
    Val x189 = x183[5]._super;
    Val x190 = x183[6]._super;
    Val x191 = x183[7]._super;
    Val x192 = x183[8]._super;
    Val x193 = x183[9]._super;
    Val x194 = x183[10]._super;
    Val x195 = x183[11]._super;
    Val x196 = x183[12]._super;
    Val x197 = x183[13]._super;
    Val x198 = x183[14]._super;
    Val x199 = x183[15]._super;
    Val x200 = x183[16]._super;
    Val x201 = x183[17]._super;
    Val x202 = x183[18]._super;
    Val x203 = x183[19]._super;
    Val x204 = x183[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:727)
    Val x205 =
        ((((((x184 + (x185 * Val(2))) + (x186 * Val(4))) + (x187 * Val(8))) + (x188 * Val(16))) +
          (x189 * Val(32))) +
         (x190 * Val(64)));
    Val x206 = ((((((x205 + (x191 * Val(128))) + (x192 * Val(256))) + (x193 * Val(512))) +
                  (x194 * Val(1024))) +
                 (x195 * Val(2048))) +
                (x196 * Val(4096)));
    Val x207 = ((((((x206 + (x197 * Val(8192))) + (x198 * Val(16384))) + (x199 * Val(32768))) +
                  (x200 * Val(65536))) +
                 (x201 * Val(131072))) +
                (x202 * Val(262144)));
    EQZ((((x207 + (x203 * Val(524288))) + (x204 * Val(1048576))) - x128),
        "chi_minor1(zirgen/circuit/keccak/keccak.zir:727)");
    // andnxor(zirgen/circuit/keccak/keccak.zir:118)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:729)
    Val x208 = ((Val(1) - x158) * x184);
    Val x209 = ((Val(1) - x159) * x185);
    Val x210 = ((Val(1) - x160) * x186);
    Val x211 = ((Val(1) - x161) * x187);
    Val x212 = ((Val(1) - x162) * x188);
    Val x213 = ((Val(1) - x163) * x189);
    Val x214 = ((Val(1) - x164) * x190);
    Val x215 = ((Val(1) - x165) * x191);
    Val x216 = ((Val(1) - x166) * x192);
    Val x217 = ((Val(1) - x167) * x193);
    Val x218 = ((Val(1) - x168) * x194);
    Val x219 = ((Val(1) - x169) * x195);
    Val x220 = ((Val(1) - x170) * x196);
    Val x221 = ((Val(1) - x171) * x197);
    Val x222 = ((Val(1) - x172) * x198);
    Val x223 = ((Val(1) - x173) * x199);
    Val x224 = ((Val(1) - x174) * x200);
    Val x225 = ((Val(1) - x175) * x201);
    Val x226 = ((Val(1) - x176) * x202);
    Val x227 = ((Val(1) - x177) * x203);
    Val x228 = ((Val(1) - x178) * x204);
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:730)
    Val x229 = (((((x131 + x208) - ((x131 * Val(2)) * x208)) +
                  (((x132 + x209) - (x152 * x209)) * Val(2))) +
                 (((x133 + x210) - ((x133 * Val(2)) * x210)) * Val(4))) +
                (((x134 + x211) - ((x134 * Val(2)) * x211)) * Val(8)));
    Val x230 = (((x229 + (((x135 + x212) - ((x135 * Val(2)) * x212)) * Val(16))) +
                 (((x136 + x213) - ((x136 * Val(2)) * x213)) * Val(32))) +
                (((x137 + x214) - ((x137 * Val(2)) * x214)) * Val(64)));
    Val x231 = (((x230 + (((x138 + x215) - ((x138 * Val(2)) * x215)) * Val(128))) +
                 (((x139 + x216) - ((x139 * Val(2)) * x216)) * Val(256))) +
                (((x140 + x217) - ((x140 * Val(2)) * x217)) * Val(512)));
    Val x232 = (((x231 + (((x141 + x218) - ((x141 * Val(2)) * x218)) * Val(1024))) +
                 (((x142 + x219) - ((x142 * Val(2)) * x219)) * Val(2048))) +
                (((x143 + x220) - ((x143 * Val(2)) * x220)) * Val(4096)));
    Val x233 = (((x232 + (((x144 + x221) - ((x144 * Val(2)) * x221)) * Val(8192))) +
                 (((x145 + x222) - ((x145 * Val(2)) * x222)) * Val(16384))) +
                (((x146 + x223) - ((x146 * Val(2)) * x223)) * Val(32768)));
    Val x234 = (((x233 + (((x147 + x224) - ((x147 * Val(2)) * x224)) * Val(65536))) +
                 (((x148 + x225) - ((x148 * Val(2)) * x225)) * Val(131072))) +
                (((x149 + x226) - ((x149 * Val(2)) * x226)) * Val(262144)));
    NondetRegStruct x235 =
        exec_Reg(ctx,
                 ((x234 + (((x150 + x227) - ((x150 * Val(2)) * x227)) * Val(524288))) +
                  (((x151 + x228) - ((x151 * Val(2)) * x228)) * Val(1048576))),
                 LAYOUT_LOOKUP(x118, res3n));
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:733)
    RetTupleStruct x236 =
        exec_RetTuple(ctx,
                      x119,
                      x120,
                      x121,
                      x122,
                      x123,
                      Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), x235._super},
                      Val(8),
                      Val(13),
                      x124,
                      x125,
                      x126,
                      LAYOUT_LOOKUP(x118, _super));
  }
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:685)
  RetTupleStruct x237 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x237;
}
RetTupleStruct execChiMinor2_3_(ExecContext& ctx,
                                RetTupleStruct arg0,
                                BoundLayout<RetTupleLayout> arg1,
                                BoundLayout<ChiMinor2_3__SuperLayout> layout2) {
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:739)
  RetTupleStruct x3 = back_RetTuple(ctx, 1, arg1);
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:740)
  RetTupleStruct x4 = back_RetTuple(ctx, 3, arg1);
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:741)
  RetTupleStruct x5 = back_RetTuple(ctx, 4, arg1);
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:742)
  RetTupleStruct x6 = back_RetTuple(ctx, 6, arg1);
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:743)
  RetTupleStruct x7 = back_RetTuple(ctx, 7, arg1);
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:744)
  RetTupleStruct x8 = back_RetTuple(ctx, 9, arg1);
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:746)
  BoundLayout<ChiMinor2_3_Arm1_SuperLayout> x9 = LAYOUT_LOOKUP(layout2, arm1);
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:742)
  NondetRegStruct24Array x10 = x6.arrD;
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:740)
  NondetRegStruct24Array x11 = x4.arrD;
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:744)
  NondetRegStruct22Array x12 = x8.arrA;
  NondetRegStruct22Array x13 = x8.arrB;
  NondetRegStruct22Array x14 = x8.arrC;
  NondetRegStruct24Array x15 = x8.arrD;
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:747)
  Val x16 = x7.arrA[21]._super;
  Val x17 = x7.arrB[21]._super;
  Val x18 = x7.arrC[21]._super;
  Val x19 = x10[22]._super;
  Val x20 = x10[23]._super;
  Val x21 = x7.arrF[21]._super;
  Val x22 = x5.arrA[21]._super;
  Val x23 = x5.arrB[21]._super;
  Val x24 = x5.arrC[21]._super;
  Val x25 = x11[22]._super;
  Val x26 = x11[23]._super;
  Val x27 = x5.arrF[21]._super;
  Val x28 = x3.arrA[21]._super;
  Val x29 = x3.arrB[21]._super;
  Val x30 = x3.arrC[21]._super;
  Val x31 = x12[15]._super;
  Val x32 = x12[16]._super;
  Val x33 = x12[17]._super;
  Val x34 = x12[18]._super;
  Val x35 = x12[19]._super;
  Val x36 = x12[20]._super;
  Val x37 = x12[21]._super;
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:744)
  Val x38 = x13[0]._super;
  Val x39 = x13[1]._super;
  Val x40 = x13[2]._super;
  Val x41 = x13[3]._super;
  Val x42 = x13[4]._super;
  Val x43 = x13[5]._super;
  Val x44 = x13[6]._super;
  Val x45 = x13[7]._super;
  Val x46 = x13[8]._super;
  Val x47 = x13[9]._super;
  Val x48 = x13[10]._super;
  Val x49 = x13[11]._super;
  Val x50 = x13[12]._super;
  Val x51 = x13[13]._super;
  Val x52 = x13[14]._super;
  Val x53 = x13[15]._super;
  Val x54 = x13[16]._super;
  Val x55 = x13[17]._super;
  Val x56 = x13[18]._super;
  Val x57 = x13[19]._super;
  Val x58 = x13[20]._super;
  Val x59 = x13[21]._super;
  Val22Array x60 = Val22Array{x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48,
                              x49, x50, x51, x52, x53, x54, x55, x56, x57, x58, x59};
  Val x61 = x14[0]._super;
  Val x62 = x14[1]._super;
  Val x63 = x14[2]._super;
  Val x64 = x14[3]._super;
  Val x65 = x14[4]._super;
  Val x66 = x14[5]._super;
  Val x67 = x14[6]._super;
  Val x68 = x14[7]._super;
  Val x69 = x14[8]._super;
  Val x70 = x14[9]._super;
  Val x71 = x14[10]._super;
  Val x72 = x14[11]._super;
  Val x73 = x14[12]._super;
  Val x74 = x14[13]._super;
  Val x75 = x14[14]._super;
  Val x76 = x14[15]._super;
  Val x77 = x14[16]._super;
  Val x78 = x14[17]._super;
  Val x79 = x14[18]._super;
  Val x80 = x14[19]._super;
  Val x81 = x14[20]._super;
  Val x82 = x14[21]._super;
  Val22Array x83 = Val22Array{x61, x62, x63, x64, x65, x66, x67, x68, x69, x70, x71,
                              x72, x73, x74, x75, x76, x77, x78, x79, x80, x81, x82};
  Val24Array x84 =
      Val24Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x15[22]._super, x15[23]._super};
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:755)
  Val22Array x85 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:739)
  Val x86 = x3.rnd._super;
  Val x87 = x3.blk._super;
  Val x88 = x3.midx._super;
  if (to_size_t(Val(0))) {
    // chi_minor2(zirgen/circuit/keccak/keccak.zir:755)
    RetTupleStruct x89 =
        exec_RetTuple(ctx,
                      Val22Array{x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26,
                                 x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37},
                      x60,
                      x83,
                      x84,
                      x85,
                      x85,
                      Val(0),
                      Val(11),
                      x86,
                      x87,
                      x88,
                      LAYOUT_LOOKUP(layout2, arm0));
  }
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:758)
  BoundLayout<ChiMinor2_3_Arm1Arm1_SuperLayout> x90 = LAYOUT_LOOKUP(x9, arm1);
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:762)
  Val x91 = x12[0]._super;
  Val x92 = x12[1]._super;
  Val x93 = x12[2]._super;
  Val x94 = x12[3]._super;
  Val x95 = x12[4]._super;
  Val x96 = x12[5]._super;
  Val x97 = x12[6]._super;
  Val x98 = x12[7]._super;
  Val x99 = x12[8]._super;
  Val x100 = x12[9]._super;
  Val x101 = x12[10]._super;
  Val x102 = x12[11]._super;
  Val x103 = x12[12]._super;
  Val x104 = x12[13]._super;
  Val x105 = x12[14]._super;
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:770)
  BoundLayout<ChiMinor2_3_Arm1Arm1Arm1_SuperLayout> x106 = LAYOUT_LOOKUP(x90, arm1);
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:744)
  Val22Array x107 = Val22Array{x91,  x92,  x93,  x94,  x95, x96, x97, x98, x99, x100, x101,
                               x102, x103, x104, x105, x31, x32, x33, x34, x35, x36,  x37};
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:782)
  BoundLayout<ChiMinor2_3_Arm1Arm1Arm1Arm1_SuperLayout> x108 = LAYOUT_LOOKUP(x106, arm1);
  if (to_size_t(Val(1))) {
    if (to_size_t(Val(0))) {
      // chi_minor2(zirgen/circuit/keccak/keccak.zir:767)
      RetTupleStruct x109 =
          exec_RetTuple(ctx,
                        Val22Array{x91,  x92,  x93,  x94,  x95, x96, x97, x98, x99, x100, x101,
                                   x102, x103, x104, x105, x16, x17, x18, x19, x20, x21,  x22},
                        Val22Array{x23, x24, x25, x26, x27, x28, x29, x30, x46, x47, x48,
                                   x49, x50, x51, x52, x53, x54, x55, x56, x57, x58, x59},
                        x83,
                        x84,
                        x85,
                        x85,
                        Val(0),
                        Val(12),
                        x86,
                        x87,
                        x88,
                        LAYOUT_LOOKUP(x9, arm0));
    }
    if (to_size_t(Val(1))) {
      if (to_size_t(Val(0))) {
        // chi_minor2(zirgen/circuit/keccak/keccak.zir:779)
        RetTupleStruct x110 =
            exec_RetTuple(ctx,
                          x107,
                          Val22Array{x38, x39, x40, x41, x42, x43, x44, x45, x16, x17, x18,
                                     x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29},
                          Val22Array{x30, x62, x63, x64, x65, x66, x67, x68, x69, x70, x71,
                                     x72, x73, x74, x75, x76, x77, x78, x79, x80, x81, x82},
                          x84,
                          x85,
                          x85,
                          Val(0),
                          Val(13),
                          x86,
                          x87,
                          x88,
                          LAYOUT_LOOKUP(x90, arm0));
      }
      if (to_size_t(Val(1))) {
        if (to_size_t(Val(1))) {
          // chi_minor2(zirgen/circuit/keccak/keccak.zir:790)
          RetTupleStruct x111 =
              exec_RetTuple(ctx,
                            x107,
                            x60,
                            Val22Array{x61, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25,
                                       x26, x27, x28, x29, x30, x77, x78, x79, x80, x81, x82},
                            x84,
                            x85,
                            x85,
                            Val(0),
                            Val(14),
                            x86,
                            x87,
                            x88,
                            LAYOUT_LOOKUP(x106, arm0));
        }
        if (to_size_t(Val(0))) {
          // chi_minor2(zirgen/circuit/keccak/keccak.zir:800)
          OneHot_24_Struct x112 = exec_OneHot_24_(ctx, x86, LAYOUT_LOOKUP(x108, unpackRnd));
          // chi_minor2(zirgen/circuit/keccak/keccak.zir:801)
          ToBits_22_Struct x113 = exec_ToBits_22_(ctx, x93, LAYOUT_LOOKUP(x108, unpackA002));
          // chi_minor2(zirgen/circuit/keccak/keccak.zir:800)
          NondetRegStruct24Array x114 = x112._super;
          // chi_minor2(zirgen/circuit/keccak/keccak.zir:801)
          NondetRegStruct22Array x115 = x113._super;
          // chi_minor2(zirgen/circuit/keccak/keccak.zir:802)
          RetTupleStruct x116 = exec_RetTuple(
              ctx,
              x107,
              x60,
              Val22Array{x61, x62, x63, x64, x65, x66, x67, x68, x69, x70, x71,
                         x72, x73, x74, x75, x76, x16, x17, x18, x19, x20, x21},
              Val24Array{x114[0]._super,  x114[1]._super,  x114[2]._super,  x114[3]._super,
                         x114[4]._super,  x114[5]._super,  x114[6]._super,  x114[7]._super,
                         x114[8]._super,  x114[9]._super,  x114[10]._super, x114[11]._super,
                         x114[12]._super, x114[13]._super, x114[14]._super, x114[15]._super,
                         x114[16]._super, x114[17]._super, x114[18]._super, x114[19]._super,
                         x114[20]._super, x114[21]._super, x114[22]._super, x114[23]._super},
              Val22Array{x22,    x23,    x24,    x25,    x26,    x27,    x28,    x29,
                         x30,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                         Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
              Val22Array{x115[0]._super,  x115[1]._super,  x115[2]._super,  x115[3]._super,
                         x115[4]._super,  x115[5]._super,  x115[6]._super,  x115[7]._super,
                         x115[8]._super,  x115[9]._super,  x115[10]._super, x115[11]._super,
                         x115[12]._super, x115[13]._super, x115[14]._super, x115[15]._super,
                         x115[16]._super, x115[17]._super, x115[18]._super, x115[19]._super,
                         x115[20]._super, x115[21]._super},
              Val(9),
              Val(14),
              x86,
              x87,
              x88,
              LAYOUT_LOOKUP(x108, _super));
        }
        // chi_minor2(zirgen/circuit/keccak/keccak.zir:782)
        RetTupleStruct x117 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x106, _super));
      }
      // chi_minor2(zirgen/circuit/keccak/keccak.zir:770)
      RetTupleStruct x118 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x90, _super));
    }
    // chi_minor2(zirgen/circuit/keccak/keccak.zir:758)
    RetTupleStruct x119 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x9, _super));
  }
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:746)
  RetTupleStruct x120 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(layout2, _super));
  return x120;
}
RetTupleStruct execChiMajor_3_(ExecContext& ctx,
                               RetTupleStruct arg0,
                               BoundLayout<RetTupleLayout> arg1,
                               BoundLayout<ChiMajor_3_Layout> layout2) {
  // chi_major(zirgen/circuit/keccak/keccak.zir:841)
  BoundLayout<ChiMajor_3__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // chi_major(zirgen/circuit/keccak/keccak.zir:840)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  OneHot_10_Struct x5 = exec_OneHot_10_(ctx, x4.minor._super, LAYOUT_LOOKUP(layout2, minorOnehot));
  NondetRegStruct10Array x6 = x5._super;
  if (to_size_t(x6[0]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:842)
    RetTupleStruct x7 = back_RetTuple(ctx, 1, arg1);
    RetTupleStruct x8 = execChiMinor0_0__3_(ctx, x7, LAYOUT_LOOKUP(x3, arm0));
  }
  if (to_size_t(x6[1]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:843)
    RetTupleStruct x9 = execChiMinor1_0__3_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm1));
  }
  if (to_size_t(x6[2]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:844)
    RetTupleStruct x10 = back_RetTuple(ctx, 3, arg1);
    RetTupleStruct x11 = execChiMinor0_1__3_(ctx, x10, LAYOUT_LOOKUP(x3, arm2));
  }
  if (to_size_t(x6[3]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:845)
    RetTupleStruct x12 = back_RetTuple(ctx, 4, arg1);
    RetTupleStruct x13 = execChiMinor0_2__3_(ctx, x12, LAYOUT_LOOKUP(x3, arm3));
  }
  if (to_size_t(x6[4]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:846)
    RetTupleStruct x14 = execChiMinor1_2__3_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm4));
  }
  if (to_size_t(x6[5]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:847)
    RetTupleStruct x15 = back_RetTuple(ctx, 6, arg1);
    RetTupleStruct x16 = execChiMinor0_3__3_(ctx, x15, LAYOUT_LOOKUP(x3, arm5));
  }
  if (to_size_t(x6[6]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:848)
    RetTupleStruct x17 = back_RetTuple(ctx, 7, arg1);
    RetTupleStruct x18 = execChiMinor0_4__3_(ctx, x17, LAYOUT_LOOKUP(x3, arm6));
  }
  if (to_size_t(x6[7]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:849)
    RetTupleStruct x19 = execChiMinor1_4__3_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm7));
  }
  if (to_size_t(x6[8]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:850)
    RetTupleStruct x20 = execChiMinor2_3_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm8));
  }
  if (to_size_t(x6[9]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:851)
    RetTupleStruct x21 = back_RetTuple(ctx, 1, arg1);
    RetTupleStruct x22 = execIotaXorRc(ctx, x21, LAYOUT_LOOKUP(x3, arm9));
  }
  // chi_major(zirgen/circuit/keccak/keccak.zir:841)
  RetTupleStruct x23 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x23;
}
RetTupleStruct execChiMinor0_0__4_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<ChiMinor0_0__4_Layout> layout1) {
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:542)
  NondetRegStruct22Array x2 = arg0.arrC;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:546)
  Val x3 = x2[19]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:554)
  ToBits_22_Struct x4 = exec_ToBits_22_(ctx, x3, LAYOUT_LOOKUP(layout1, unpack_0xp1));
  NondetRegStruct22Array x5 = x4._super;
  Val x6 = x5[0]._super;
  Val x7 = x5[1]._super;
  Val x8 = x5[2]._super;
  Val x9 = x5[3]._super;
  Val x10 = x5[4]._super;
  Val x11 = x5[5]._super;
  Val x12 = x5[6]._super;
  Val x13 = x5[7]._super;
  Val x14 = x5[8]._super;
  Val x15 = x5[9]._super;
  Val x16 = x5[10]._super;
  Val x17 = x5[11]._super;
  Val x18 = x5[12]._super;
  Val x19 = x5[13]._super;
  Val x20 = x5[14]._super;
  Val x21 = x5[15]._super;
  Val x22 = x5[16]._super;
  Val x23 = x5[17]._super;
  Val x24 = x5[18]._super;
  Val x25 = x5[19]._super;
  Val x26 = x5[20]._super;
  Val x27 = x5[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:555)
  Val x28 = ((((((x6 + (x7 * Val(2))) + (x8 * Val(4))) + (x9 * Val(8))) + (x10 * Val(16))) +
              (x11 * Val(32))) +
             (x12 * Val(64)));
  Val x29 =
      ((((((x28 + (x13 * Val(128))) + (x14 * Val(256))) + (x15 * Val(512))) + (x16 * Val(1024))) +
        (x17 * Val(2048))) +
       (x18 * Val(4096)));
  Val x30 = ((((((x29 + (x19 * Val(8192))) + (x20 * Val(16384))) + (x21 * Val(32768))) +
               (x22 * Val(65536))) +
              (x23 * Val(131072))) +
             (x24 * Val(262144)));
  EQZ(((((x30 + (x25 * Val(524288))) + (x26 * Val(1048576))) + (x27 * Val(2097152))) - x3),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:555)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:559)
  Val x31 = x2[20]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:567)
  ToBits_21_Struct x32 = exec_ToBits_21_(ctx, x31, LAYOUT_LOOKUP(layout1, unpack_1xp1));
  NondetRegStruct21Array x33 = x32._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:568)
  Val x55 = ((((((x34 + (x35 * Val(2))) + (x36 * Val(4))) + (x37 * Val(8))) + (x38 * Val(16))) +
              (x39 * Val(32))) +
             (x40 * Val(64)));
  Val x56 =
      ((((((x55 + (x41 * Val(128))) + (x42 * Val(256))) + (x43 * Val(512))) + (x44 * Val(1024))) +
        (x45 * Val(2048))) +
       (x46 * Val(4096)));
  Val x57 = ((((((x56 + (x47 * Val(8192))) + (x48 * Val(16384))) + (x49 * Val(32768))) +
               (x50 * Val(65536))) +
              (x51 * Val(131072))) +
             (x52 * Val(262144)));
  EQZ((((x57 + (x53 * Val(524288))) + (x54 * Val(1048576))) - x31),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:568)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:542)
  NondetRegStruct24Array x58 = arg0.arrD;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:573)
  Val x59 = x58[0]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:581)
  ToBits_22_Struct x60 = exec_ToBits_22_(ctx, x59, LAYOUT_LOOKUP(layout1, unpack_0xp2));
  NondetRegStruct22Array x61 = x60._super;
  Val x62 = x61[0]._super;
  Val x63 = x61[1]._super;
  Val x64 = x61[2]._super;
  Val x65 = x61[3]._super;
  Val x66 = x61[4]._super;
  Val x67 = x61[5]._super;
  Val x68 = x61[6]._super;
  Val x69 = x61[7]._super;
  Val x70 = x61[8]._super;
  Val x71 = x61[9]._super;
  Val x72 = x61[10]._super;
  Val x73 = x61[11]._super;
  Val x74 = x61[12]._super;
  Val x75 = x61[13]._super;
  Val x76 = x61[14]._super;
  Val x77 = x61[15]._super;
  Val x78 = x61[16]._super;
  Val x79 = x61[17]._super;
  Val x80 = x61[18]._super;
  Val x81 = x61[19]._super;
  Val x82 = x61[20]._super;
  Val x83 = x61[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:582)
  Val x84 = ((((((x62 + (x63 * Val(2))) + (x64 * Val(4))) + (x65 * Val(8))) + (x66 * Val(16))) +
              (x67 * Val(32))) +
             (x68 * Val(64)));
  Val x85 =
      ((((((x84 + (x69 * Val(128))) + (x70 * Val(256))) + (x71 * Val(512))) + (x72 * Val(1024))) +
        (x73 * Val(2048))) +
       (x74 * Val(4096)));
  Val x86 = ((((((x85 + (x75 * Val(8192))) + (x76 * Val(16384))) + (x77 * Val(32768))) +
               (x78 * Val(65536))) +
              (x79 * Val(131072))) +
             (x80 * Val(262144)));
  EQZ(((((x86 + (x81 * Val(524288))) + (x82 * Val(1048576))) + (x83 * Val(2097152))) - x59),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:582)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:586)
  Val x87 = x58[1]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:594)
  ToBits_21_Struct x88 = exec_ToBits_21_(ctx, x87, LAYOUT_LOOKUP(layout1, unpack_1xp2));
  NondetRegStruct21Array x89 = x88._super;
  Val x90 = x89[0]._super;
  Val x91 = x89[1]._super;
  Val x92 = x89[2]._super;
  Val x93 = x89[3]._super;
  Val x94 = x89[4]._super;
  Val x95 = x89[5]._super;
  Val x96 = x89[6]._super;
  Val x97 = x89[7]._super;
  Val x98 = x89[8]._super;
  Val x99 = x89[9]._super;
  Val x100 = x89[10]._super;
  Val x101 = x89[11]._super;
  Val x102 = x89[12]._super;
  Val x103 = x89[13]._super;
  Val x104 = x89[14]._super;
  Val x105 = x89[15]._super;
  Val x106 = x89[16]._super;
  Val x107 = x89[17]._super;
  Val x108 = x89[18]._super;
  Val x109 = x89[19]._super;
  Val x110 = x89[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:595)
  Val x111 = ((((((x90 + (x91 * Val(2))) + (x92 * Val(4))) + (x93 * Val(8))) + (x94 * Val(16))) +
               (x95 * Val(32))) +
              (x96 * Val(64)));
  Val x112 =
      ((((((x111 + (x97 * Val(128))) + (x98 * Val(256))) + (x99 * Val(512))) + (x100 * Val(1024))) +
        (x101 * Val(2048))) +
       (x102 * Val(4096)));
  Val x113 = ((((((x112 + (x103 * Val(8192))) + (x104 * Val(16384))) + (x105 * Val(32768))) +
                (x106 * Val(65536))) +
               (x107 * Val(131072))) +
              (x108 * Val(262144)));
  EQZ((((x113 + (x109 * Val(524288))) + (x110 * Val(1048576))) - x87),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:595)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:599)
  Val x114 = x2[16]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:607)
  ToBits_22_Struct x115 = exec_ToBits_22_(ctx, x114, LAYOUT_LOOKUP(layout1, unpack_0x));
  NondetRegStruct22Array x116 = x115._super;
  Val x117 = x116[0]._super;
  Val x118 = x116[1]._super;
  Val x119 = x116[2]._super;
  Val x120 = x116[3]._super;
  Val x121 = x116[4]._super;
  Val x122 = x116[5]._super;
  Val x123 = x116[6]._super;
  Val x124 = x116[7]._super;
  Val x125 = x116[8]._super;
  Val x126 = x116[9]._super;
  Val x127 = x116[10]._super;
  Val x128 = x116[11]._super;
  Val x129 = x116[12]._super;
  Val x130 = x116[13]._super;
  Val x131 = x116[14]._super;
  Val x132 = x116[15]._super;
  Val x133 = x116[16]._super;
  Val x134 = x116[17]._super;
  Val x135 = x116[18]._super;
  Val x136 = x116[19]._super;
  Val x137 = x116[20]._super;
  Val x138 = x116[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:608)
  Val x139 = (x118 * Val(2));
  Val x140 = ((((((x117 + x139) + (x119 * Val(4))) + (x120 * Val(8))) + (x121 * Val(16))) +
               (x122 * Val(32))) +
              (x123 * Val(64)));
  Val x141 = ((((((x140 + (x124 * Val(128))) + (x125 * Val(256))) + (x126 * Val(512))) +
                (x127 * Val(1024))) +
               (x128 * Val(2048))) +
              (x129 * Val(4096)));
  Val x142 = ((((((x141 + (x130 * Val(8192))) + (x131 * Val(16384))) + (x132 * Val(32768))) +
                (x133 * Val(65536))) +
               (x134 * Val(131072))) +
              (x135 * Val(262144)));
  EQZ(((((x142 + (x136 * Val(524288))) + (x137 * Val(1048576))) + (x138 * Val(2097152))) - x114),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:608)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:612)
  Val x143 = x2[17]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:620)
  ToBits_21_Struct x144 = exec_ToBits_21_(ctx, x143, LAYOUT_LOOKUP(layout1, unpack_1x));
  NondetRegStruct21Array x145 = x144._super;
  Val x146 = x145[0]._super;
  Val x147 = x145[1]._super;
  Val x148 = x145[2]._super;
  Val x149 = x145[3]._super;
  Val x150 = x145[4]._super;
  Val x151 = x145[5]._super;
  Val x152 = x145[6]._super;
  Val x153 = x145[7]._super;
  Val x154 = x145[8]._super;
  Val x155 = x145[9]._super;
  Val x156 = x145[10]._super;
  Val x157 = x145[11]._super;
  Val x158 = x145[12]._super;
  Val x159 = x145[13]._super;
  Val x160 = x145[14]._super;
  Val x161 = x145[15]._super;
  Val x162 = x145[16]._super;
  Val x163 = x145[17]._super;
  Val x164 = x145[18]._super;
  Val x165 = x145[19]._super;
  Val x166 = x145[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:621)
  Val x167 = (x147 * Val(2));
  Val x168 = ((((((x146 + x167) + (x148 * Val(4))) + (x149 * Val(8))) + (x150 * Val(16))) +
               (x151 * Val(32))) +
              (x152 * Val(64)));
  Val x169 = ((((((x168 + (x153 * Val(128))) + (x154 * Val(256))) + (x155 * Val(512))) +
                (x156 * Val(1024))) +
               (x157 * Val(2048))) +
              (x158 * Val(4096)));
  Val x170 = ((((((x169 + (x159 * Val(8192))) + (x160 * Val(16384))) + (x161 * Val(32768))) +
                (x162 * Val(65536))) +
               (x163 * Val(131072))) +
              (x164 * Val(262144)));
  EQZ((((x170 + (x165 * Val(524288))) + (x166 * Val(1048576))) - x143),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:621)");
  // andnxor(zirgen/circuit/keccak/keccak.zir:118)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:623)
  Val x171 = ((Val(1) - x6) * x62);
  Val x172 = ((Val(1) - x7) * x63);
  Val x173 = ((Val(1) - x8) * x64);
  Val x174 = ((Val(1) - x9) * x65);
  Val x175 = ((Val(1) - x10) * x66);
  Val x176 = ((Val(1) - x11) * x67);
  Val x177 = ((Val(1) - x12) * x68);
  Val x178 = ((Val(1) - x13) * x69);
  Val x179 = ((Val(1) - x14) * x70);
  Val x180 = ((Val(1) - x15) * x71);
  Val x181 = ((Val(1) - x16) * x72);
  Val x182 = ((Val(1) - x17) * x73);
  Val x183 = ((Val(1) - x18) * x74);
  Val x184 = ((Val(1) - x19) * x75);
  Val x185 = ((Val(1) - x20) * x76);
  Val x186 = ((Val(1) - x21) * x77);
  Val x187 = ((Val(1) - x22) * x78);
  Val x188 = ((Val(1) - x23) * x79);
  Val x189 = ((Val(1) - x24) * x80);
  Val x190 = ((Val(1) - x25) * x81);
  Val x191 = ((Val(1) - x26) * x82);
  Val x192 = ((Val(1) - x27) * x83);
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:624)
  Val x193 = ((Val(1) - x34) * x90);
  Val x194 = ((Val(1) - x35) * x91);
  Val x195 = ((Val(1) - x36) * x92);
  Val x196 = ((Val(1) - x37) * x93);
  Val x197 = ((Val(1) - x38) * x94);
  Val x198 = ((Val(1) - x39) * x95);
  Val x199 = ((Val(1) - x40) * x96);
  Val x200 = ((Val(1) - x41) * x97);
  Val x201 = ((Val(1) - x42) * x98);
  Val x202 = ((Val(1) - x43) * x99);
  Val x203 = ((Val(1) - x44) * x100);
  Val x204 = ((Val(1) - x45) * x101);
  Val x205 = ((Val(1) - x46) * x102);
  Val x206 = ((Val(1) - x47) * x103);
  Val x207 = ((Val(1) - x48) * x104);
  Val x208 = ((Val(1) - x49) * x105);
  Val x209 = ((Val(1) - x50) * x106);
  Val x210 = ((Val(1) - x51) * x107);
  Val x211 = ((Val(1) - x52) * x108);
  Val x212 = ((Val(1) - x53) * x109);
  Val x213 = ((Val(1) - x54) * x110);
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:625)
  Val x214 =
      (((((x117 + x171) - ((x117 * Val(2)) * x171)) + (((x118 + x172) - (x139 * x172)) * Val(2))) +
        (((x119 + x173) - ((x119 * Val(2)) * x173)) * Val(4))) +
       (((x120 + x174) - ((x120 * Val(2)) * x174)) * Val(8)));
  Val x215 = (((x214 + (((x121 + x175) - ((x121 * Val(2)) * x175)) * Val(16))) +
               (((x122 + x176) - ((x122 * Val(2)) * x176)) * Val(32))) +
              (((x123 + x177) - ((x123 * Val(2)) * x177)) * Val(64)));
  Val x216 = (((x215 + (((x124 + x178) - ((x124 * Val(2)) * x178)) * Val(128))) +
               (((x125 + x179) - ((x125 * Val(2)) * x179)) * Val(256))) +
              (((x126 + x180) - ((x126 * Val(2)) * x180)) * Val(512)));
  Val x217 = (((x216 + (((x127 + x181) - ((x127 * Val(2)) * x181)) * Val(1024))) +
               (((x128 + x182) - ((x128 * Val(2)) * x182)) * Val(2048))) +
              (((x129 + x183) - ((x129 * Val(2)) * x183)) * Val(4096)));
  Val x218 = (((x217 + (((x130 + x184) - ((x130 * Val(2)) * x184)) * Val(8192))) +
               (((x131 + x185) - ((x131 * Val(2)) * x185)) * Val(16384))) +
              (((x132 + x186) - ((x132 * Val(2)) * x186)) * Val(32768)));
  Val x219 = (((x218 + (((x133 + x187) - ((x133 * Val(2)) * x187)) * Val(65536))) +
               (((x134 + x188) - ((x134 * Val(2)) * x188)) * Val(131072))) +
              (((x135 + x189) - ((x135 * Val(2)) * x189)) * Val(262144)));
  Val x220 = (((x219 + (((x136 + x190) - ((x136 * Val(2)) * x190)) * Val(524288))) +
               (((x137 + x191) - ((x137 * Val(2)) * x191)) * Val(1048576))) +
              (((x138 + x192) - ((x138 * Val(2)) * x192)) * Val(2097152)));
  NondetRegStruct x221 = exec_Reg(ctx, x220, LAYOUT_LOOKUP(layout1, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  Val x222 =
      (((((x146 + x193) - ((x146 * Val(2)) * x193)) + (((x147 + x194) - (x167 * x194)) * Val(2))) +
        (((x148 + x195) - ((x148 * Val(2)) * x195)) * Val(4))) +
       (((x149 + x196) - ((x149 * Val(2)) * x196)) * Val(8)));
  Val x223 = (((x222 + (((x150 + x197) - ((x150 * Val(2)) * x197)) * Val(16))) +
               (((x151 + x198) - ((x151 * Val(2)) * x198)) * Val(32))) +
              (((x152 + x199) - ((x152 * Val(2)) * x199)) * Val(64)));
  Val x224 = (((x223 + (((x153 + x200) - ((x153 * Val(2)) * x200)) * Val(128))) +
               (((x154 + x201) - ((x154 * Val(2)) * x201)) * Val(256))) +
              (((x155 + x202) - ((x155 * Val(2)) * x202)) * Val(512)));
  Val x225 = (((x224 + (((x156 + x203) - ((x156 * Val(2)) * x203)) * Val(1024))) +
               (((x157 + x204) - ((x157 * Val(2)) * x204)) * Val(2048))) +
              (((x158 + x205) - ((x158 * Val(2)) * x205)) * Val(4096)));
  Val x226 = (((x225 + (((x159 + x206) - ((x159 * Val(2)) * x206)) * Val(8192))) +
               (((x160 + x207) - ((x160 * Val(2)) * x207)) * Val(16384))) +
              (((x161 + x208) - ((x161 * Val(2)) * x208)) * Val(32768)));
  Val x227 = (((x226 + (((x162 + x209) - ((x162 * Val(2)) * x209)) * Val(65536))) +
               (((x163 + x210) - ((x163 * Val(2)) * x210)) * Val(131072))) +
              (((x164 + x211) - ((x164 * Val(2)) * x211)) * Val(262144)));
  NondetRegStruct x228 =
      exec_Reg(ctx,
               ((x227 + (((x165 + x212) - ((x165 * Val(2)) * x212)) * Val(524288))) +
                (((x166 + x213) - ((x166 * Val(2)) * x213)) * Val(1048576))),
               LAYOUT_LOOKUP(layout1, _1));
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:630)
  Val22Array x229 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x230 = exec_RetTuple(
      ctx,
      x229,
      x229,
      x229,
      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), x221._super, x228._super},
      x229,
      x229,
      Val(1),
      Val(14),
      arg0.rnd._super,
      arg0.blk._super,
      arg0.midx._super,
      LAYOUT_LOOKUP(layout1, _super));
  return x230;
}
RetTupleStruct execChiMinor1_0__4_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<ChiMinor1_0__4_Layout> layout2) {
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:685)
  BoundLayout<ChiMinor1_0__4__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:635)
  RetTupleStruct x4 = back_RetTuple(ctx, 2, arg1);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:636)
  RetTupleStruct x5 = back_RetTuple(ctx, 1, arg1);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:635)
  NondetRegStruct22Array x6 = x4.arrC;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:640)
  Val x7 = x6[18]._super;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:648)
  ToBits_21_Struct x8 = exec_ToBits_21_(ctx, x7, LAYOUT_LOOKUP(layout2, unpack_2x));
  NondetRegStruct21Array x9 = x8._super;
  Val x10 = x9[0]._super;
  Val x11 = x9[1]._super;
  Val x12 = x9[2]._super;
  Val x13 = x9[3]._super;
  Val x14 = x9[4]._super;
  Val x15 = x9[5]._super;
  Val x16 = x9[6]._super;
  Val x17 = x9[7]._super;
  Val x18 = x9[8]._super;
  Val x19 = x9[9]._super;
  Val x20 = x9[10]._super;
  Val x21 = x9[11]._super;
  Val x22 = x9[12]._super;
  Val x23 = x9[13]._super;
  Val x24 = x9[14]._super;
  Val x25 = x9[15]._super;
  Val x26 = x9[16]._super;
  Val x27 = x9[17]._super;
  Val x28 = x9[18]._super;
  Val x29 = x9[19]._super;
  Val x30 = x9[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:649)
  Val x31 = (x11 * Val(2));
  Val x32 =
      ((((((x10 + x31) + (x12 * Val(4))) + (x13 * Val(8))) + (x14 * Val(16))) + (x15 * Val(32))) +
       (x16 * Val(64)));
  Val x33 =
      ((((((x32 + (x17 * Val(128))) + (x18 * Val(256))) + (x19 * Val(512))) + (x20 * Val(1024))) +
        (x21 * Val(2048))) +
       (x22 * Val(4096)));
  Val x34 = ((((((x33 + (x23 * Val(8192))) + (x24 * Val(16384))) + (x25 * Val(32768))) +
               (x26 * Val(65536))) +
              (x27 * Val(131072))) +
             (x28 * Val(262144)));
  EQZ((((x34 + (x29 * Val(524288))) + (x30 * Val(1048576))) - x7),
      "chi_minor1(zirgen/circuit/keccak/keccak.zir:649)");
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:654)
  Val x35 = x6[21]._super;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:662)
  ToBits_21_Struct x36 = exec_ToBits_21_(ctx, x35, LAYOUT_LOOKUP(layout2, unpack_2xp1));
  NondetRegStruct21Array x37 = x36._super;
  Val x38 = x37[0]._super;
  Val x39 = x37[1]._super;
  Val x40 = x37[2]._super;
  Val x41 = x37[3]._super;
  Val x42 = x37[4]._super;
  Val x43 = x37[5]._super;
  Val x44 = x37[6]._super;
  Val x45 = x37[7]._super;
  Val x46 = x37[8]._super;
  Val x47 = x37[9]._super;
  Val x48 = x37[10]._super;
  Val x49 = x37[11]._super;
  Val x50 = x37[12]._super;
  Val x51 = x37[13]._super;
  Val x52 = x37[14]._super;
  Val x53 = x37[15]._super;
  Val x54 = x37[16]._super;
  Val x55 = x37[17]._super;
  Val x56 = x37[18]._super;
  Val x57 = x37[19]._super;
  Val x58 = x37[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:663)
  Val x59 = ((((((x38 + (x39 * Val(2))) + (x40 * Val(4))) + (x41 * Val(8))) + (x42 * Val(16))) +
              (x43 * Val(32))) +
             (x44 * Val(64)));
  Val x60 =
      ((((((x59 + (x45 * Val(128))) + (x46 * Val(256))) + (x47 * Val(512))) + (x48 * Val(1024))) +
        (x49 * Val(2048))) +
       (x50 * Val(4096)));
  Val x61 = ((((((x60 + (x51 * Val(8192))) + (x52 * Val(16384))) + (x53 * Val(32768))) +
               (x54 * Val(65536))) +
              (x55 * Val(131072))) +
             (x56 * Val(262144)));
  EQZ((((x61 + (x57 * Val(524288))) + (x58 * Val(1048576))) - x35),
      "chi_minor1(zirgen/circuit/keccak/keccak.zir:663)");
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:635)
  NondetRegStruct24Array x62 = x4.arrD;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:667)
  Val x63 = x62[2]._super;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:675)
  ToBits_21_Struct x64 = exec_ToBits_21_(ctx, x63, LAYOUT_LOOKUP(layout2, unpack_2xp2));
  NondetRegStruct21Array x65 = x64._super;
  Val x66 = x65[0]._super;
  Val x67 = x65[1]._super;
  Val x68 = x65[2]._super;
  Val x69 = x65[3]._super;
  Val x70 = x65[4]._super;
  Val x71 = x65[5]._super;
  Val x72 = x65[6]._super;
  Val x73 = x65[7]._super;
  Val x74 = x65[8]._super;
  Val x75 = x65[9]._super;
  Val x76 = x65[10]._super;
  Val x77 = x65[11]._super;
  Val x78 = x65[12]._super;
  Val x79 = x65[13]._super;
  Val x80 = x65[14]._super;
  Val x81 = x65[15]._super;
  Val x82 = x65[16]._super;
  Val x83 = x65[17]._super;
  Val x84 = x65[18]._super;
  Val x85 = x65[19]._super;
  Val x86 = x65[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:676)
  Val x87 = ((((((x66 + (x67 * Val(2))) + (x68 * Val(4))) + (x69 * Val(8))) + (x70 * Val(16))) +
              (x71 * Val(32))) +
             (x72 * Val(64)));
  Val x88 =
      ((((((x87 + (x73 * Val(128))) + (x74 * Val(256))) + (x75 * Val(512))) + (x76 * Val(1024))) +
        (x77 * Val(2048))) +
       (x78 * Val(4096)));
  Val x89 = ((((((x88 + (x79 * Val(8192))) + (x80 * Val(16384))) + (x81 * Val(32768))) +
               (x82 * Val(65536))) +
              (x83 * Val(131072))) +
             (x84 * Val(262144)));
  EQZ((((x89 + (x85 * Val(524288))) + (x86 * Val(1048576))) - x63),
      "chi_minor1(zirgen/circuit/keccak/keccak.zir:676)");
  // andnxor(zirgen/circuit/keccak/keccak.zir:118)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:678)
  Val x90 = ((Val(1) - x38) * x66);
  Val x91 = ((Val(1) - x39) * x67);
  Val x92 = ((Val(1) - x40) * x68);
  Val x93 = ((Val(1) - x41) * x69);
  Val x94 = ((Val(1) - x42) * x70);
  Val x95 = ((Val(1) - x43) * x71);
  Val x96 = ((Val(1) - x44) * x72);
  Val x97 = ((Val(1) - x45) * x73);
  Val x98 = ((Val(1) - x46) * x74);
  Val x99 = ((Val(1) - x47) * x75);
  Val x100 = ((Val(1) - x48) * x76);
  Val x101 = ((Val(1) - x49) * x77);
  Val x102 = ((Val(1) - x50) * x78);
  Val x103 = ((Val(1) - x51) * x79);
  Val x104 = ((Val(1) - x52) * x80);
  Val x105 = ((Val(1) - x53) * x81);
  Val x106 = ((Val(1) - x54) * x82);
  Val x107 = ((Val(1) - x55) * x83);
  Val x108 = ((Val(1) - x56) * x84);
  Val x109 = ((Val(1) - x57) * x85);
  Val x110 = ((Val(1) - x58) * x86);
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:679)
  Val x111 = (((((x10 + x90) - ((x10 * Val(2)) * x90)) + (((x11 + x91) - (x31 * x91)) * Val(2))) +
               (((x12 + x92) - ((x12 * Val(2)) * x92)) * Val(4))) +
              (((x13 + x93) - ((x13 * Val(2)) * x93)) * Val(8)));
  Val x112 = (((x111 + (((x14 + x94) - ((x14 * Val(2)) * x94)) * Val(16))) +
               (((x15 + x95) - ((x15 * Val(2)) * x95)) * Val(32))) +
              (((x16 + x96) - ((x16 * Val(2)) * x96)) * Val(64)));
  Val x113 = (((x112 + (((x17 + x97) - ((x17 * Val(2)) * x97)) * Val(128))) +
               (((x18 + x98) - ((x18 * Val(2)) * x98)) * Val(256))) +
              (((x19 + x99) - ((x19 * Val(2)) * x99)) * Val(512)));
  Val x114 = (((x113 + (((x20 + x100) - ((x20 * Val(2)) * x100)) * Val(1024))) +
               (((x21 + x101) - ((x21 * Val(2)) * x101)) * Val(2048))) +
              (((x22 + x102) - ((x22 * Val(2)) * x102)) * Val(4096)));
  Val x115 = (((x114 + (((x23 + x103) - ((x23 * Val(2)) * x103)) * Val(8192))) +
               (((x24 + x104) - ((x24 * Val(2)) * x104)) * Val(16384))) +
              (((x25 + x105) - ((x25 * Val(2)) * x105)) * Val(32768)));
  Val x116 = (((x115 + (((x26 + x106) - ((x26 * Val(2)) * x106)) * Val(65536))) +
               (((x27 + x107) - ((x27 * Val(2)) * x107)) * Val(131072))) +
              (((x28 + x108) - ((x28 * Val(2)) * x108)) * Val(262144)));
  NondetRegStruct x117 =
      exec_Reg(ctx,
               ((x116 + (((x29 + x109) - ((x29 * Val(2)) * x109)) * Val(524288))) +
                (((x30 + x110) - ((x30 * Val(2)) * x110)) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, res3));
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:636)
  NondetRegStruct24Array x118 = x5.arrD;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:685)
  BoundLayout<ChiMinor1_0__4_Arm1_SuperLayout> x119 = LAYOUT_LOOKUP(x3, arm1);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:680)
  Val22Array x120 =
      Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), x118[22]._super};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:681)
  Val22Array x121 =
      Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), x118[23]._super};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:682)
  Val22Array x122 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), x117._super};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:686)
  Val24Array x123 = Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  Val22Array x124 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:636)
  Val x125 = x5.rnd._super;
  Val x126 = x5.blk._super;
  Val x127 = x5.midx._super;
  if (to_size_t(Val(0))) {
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:686)
    RetTupleStruct x128 = exec_RetTuple(ctx,
                                        x120,
                                        x121,
                                        x122,
                                        x123,
                                        x124,
                                        x124,
                                        Val(2),
                                        Val(14),
                                        x125,
                                        x126,
                                        x127,
                                        LAYOUT_LOOKUP(x3, arm0));
  }
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:718)
  Val x129 = x62[5]._super;
  if (to_size_t(Val(1))) {
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:699)
    ToBits_21_Struct x130 = exec_ToBits_21_(ctx, x35, LAYOUT_LOOKUP(x119, unpack_2nx));
    NondetRegStruct21Array x131 = x130._super;
    Val x132 = x131[0]._super;
    Val x133 = x131[1]._super;
    Val x134 = x131[2]._super;
    Val x135 = x131[3]._super;
    Val x136 = x131[4]._super;
    Val x137 = x131[5]._super;
    Val x138 = x131[6]._super;
    Val x139 = x131[7]._super;
    Val x140 = x131[8]._super;
    Val x141 = x131[9]._super;
    Val x142 = x131[10]._super;
    Val x143 = x131[11]._super;
    Val x144 = x131[12]._super;
    Val x145 = x131[13]._super;
    Val x146 = x131[14]._super;
    Val x147 = x131[15]._super;
    Val x148 = x131[16]._super;
    Val x149 = x131[17]._super;
    Val x150 = x131[18]._super;
    Val x151 = x131[19]._super;
    Val x152 = x131[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:700)
    Val x153 = (x133 * Val(2));
    Val x154 = ((((((x132 + x153) + (x134 * Val(4))) + (x135 * Val(8))) + (x136 * Val(16))) +
                 (x137 * Val(32))) +
                (x138 * Val(64)));
    Val x155 = ((((((x154 + (x139 * Val(128))) + (x140 * Val(256))) + (x141 * Val(512))) +
                  (x142 * Val(1024))) +
                 (x143 * Val(2048))) +
                (x144 * Val(4096)));
    Val x156 = ((((((x155 + (x145 * Val(8192))) + (x146 * Val(16384))) + (x147 * Val(32768))) +
                  (x148 * Val(65536))) +
                 (x149 * Val(131072))) +
                (x150 * Val(262144)));
    EQZ((((x156 + (x151 * Val(524288))) + (x152 * Val(1048576))) - x35),
        "chi_minor1(zirgen/circuit/keccak/keccak.zir:700)");
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:713)
    ToBits_21_Struct x157 = exec_ToBits_21_(ctx, x63, LAYOUT_LOOKUP(x119, unpack_2nxp1));
    NondetRegStruct21Array x158 = x157._super;
    Val x159 = x158[0]._super;
    Val x160 = x158[1]._super;
    Val x161 = x158[2]._super;
    Val x162 = x158[3]._super;
    Val x163 = x158[4]._super;
    Val x164 = x158[5]._super;
    Val x165 = x158[6]._super;
    Val x166 = x158[7]._super;
    Val x167 = x158[8]._super;
    Val x168 = x158[9]._super;
    Val x169 = x158[10]._super;
    Val x170 = x158[11]._super;
    Val x171 = x158[12]._super;
    Val x172 = x158[13]._super;
    Val x173 = x158[14]._super;
    Val x174 = x158[15]._super;
    Val x175 = x158[16]._super;
    Val x176 = x158[17]._super;
    Val x177 = x158[18]._super;
    Val x178 = x158[19]._super;
    Val x179 = x158[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:714)
    Val x180 =
        ((((((x159 + (x160 * Val(2))) + (x161 * Val(4))) + (x162 * Val(8))) + (x163 * Val(16))) +
          (x164 * Val(32))) +
         (x165 * Val(64)));
    Val x181 = ((((((x180 + (x166 * Val(128))) + (x167 * Val(256))) + (x168 * Val(512))) +
                  (x169 * Val(1024))) +
                 (x170 * Val(2048))) +
                (x171 * Val(4096)));
    Val x182 = ((((((x181 + (x172 * Val(8192))) + (x173 * Val(16384))) + (x174 * Val(32768))) +
                  (x175 * Val(65536))) +
                 (x176 * Val(131072))) +
                (x177 * Val(262144)));
    EQZ((((x182 + (x178 * Val(524288))) + (x179 * Val(1048576))) - x63),
        "chi_minor1(zirgen/circuit/keccak/keccak.zir:714)");
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:726)
    ToBits_21_Struct x183 = exec_ToBits_21_(ctx, x129, LAYOUT_LOOKUP(x119, unpack_2nxp2));
    NondetRegStruct21Array x184 = x183._super;
    Val x185 = x184[0]._super;
    Val x186 = x184[1]._super;
    Val x187 = x184[2]._super;
    Val x188 = x184[3]._super;
    Val x189 = x184[4]._super;
    Val x190 = x184[5]._super;
    Val x191 = x184[6]._super;
    Val x192 = x184[7]._super;
    Val x193 = x184[8]._super;
    Val x194 = x184[9]._super;
    Val x195 = x184[10]._super;
    Val x196 = x184[11]._super;
    Val x197 = x184[12]._super;
    Val x198 = x184[13]._super;
    Val x199 = x184[14]._super;
    Val x200 = x184[15]._super;
    Val x201 = x184[16]._super;
    Val x202 = x184[17]._super;
    Val x203 = x184[18]._super;
    Val x204 = x184[19]._super;
    Val x205 = x184[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:727)
    Val x206 =
        ((((((x185 + (x186 * Val(2))) + (x187 * Val(4))) + (x188 * Val(8))) + (x189 * Val(16))) +
          (x190 * Val(32))) +
         (x191 * Val(64)));
    Val x207 = ((((((x206 + (x192 * Val(128))) + (x193 * Val(256))) + (x194 * Val(512))) +
                  (x195 * Val(1024))) +
                 (x196 * Val(2048))) +
                (x197 * Val(4096)));
    Val x208 = ((((((x207 + (x198 * Val(8192))) + (x199 * Val(16384))) + (x200 * Val(32768))) +
                  (x201 * Val(65536))) +
                 (x202 * Val(131072))) +
                (x203 * Val(262144)));
    EQZ((((x208 + (x204 * Val(524288))) + (x205 * Val(1048576))) - x129),
        "chi_minor1(zirgen/circuit/keccak/keccak.zir:727)");
    // andnxor(zirgen/circuit/keccak/keccak.zir:118)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:729)
    Val x209 = ((Val(1) - x159) * x185);
    Val x210 = ((Val(1) - x160) * x186);
    Val x211 = ((Val(1) - x161) * x187);
    Val x212 = ((Val(1) - x162) * x188);
    Val x213 = ((Val(1) - x163) * x189);
    Val x214 = ((Val(1) - x164) * x190);
    Val x215 = ((Val(1) - x165) * x191);
    Val x216 = ((Val(1) - x166) * x192);
    Val x217 = ((Val(1) - x167) * x193);
    Val x218 = ((Val(1) - x168) * x194);
    Val x219 = ((Val(1) - x169) * x195);
    Val x220 = ((Val(1) - x170) * x196);
    Val x221 = ((Val(1) - x171) * x197);
    Val x222 = ((Val(1) - x172) * x198);
    Val x223 = ((Val(1) - x173) * x199);
    Val x224 = ((Val(1) - x174) * x200);
    Val x225 = ((Val(1) - x175) * x201);
    Val x226 = ((Val(1) - x176) * x202);
    Val x227 = ((Val(1) - x177) * x203);
    Val x228 = ((Val(1) - x178) * x204);
    Val x229 = ((Val(1) - x179) * x205);
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:730)
    Val x230 = (((((x132 + x209) - ((x132 * Val(2)) * x209)) +
                  (((x133 + x210) - (x153 * x210)) * Val(2))) +
                 (((x134 + x211) - ((x134 * Val(2)) * x211)) * Val(4))) +
                (((x135 + x212) - ((x135 * Val(2)) * x212)) * Val(8)));
    Val x231 = (((x230 + (((x136 + x213) - ((x136 * Val(2)) * x213)) * Val(16))) +
                 (((x137 + x214) - ((x137 * Val(2)) * x214)) * Val(32))) +
                (((x138 + x215) - ((x138 * Val(2)) * x215)) * Val(64)));
    Val x232 = (((x231 + (((x139 + x216) - ((x139 * Val(2)) * x216)) * Val(128))) +
                 (((x140 + x217) - ((x140 * Val(2)) * x217)) * Val(256))) +
                (((x141 + x218) - ((x141 * Val(2)) * x218)) * Val(512)));
    Val x233 = (((x232 + (((x142 + x219) - ((x142 * Val(2)) * x219)) * Val(1024))) +
                 (((x143 + x220) - ((x143 * Val(2)) * x220)) * Val(2048))) +
                (((x144 + x221) - ((x144 * Val(2)) * x221)) * Val(4096)));
    Val x234 = (((x233 + (((x145 + x222) - ((x145 * Val(2)) * x222)) * Val(8192))) +
                 (((x146 + x223) - ((x146 * Val(2)) * x223)) * Val(16384))) +
                (((x147 + x224) - ((x147 * Val(2)) * x224)) * Val(32768)));
    Val x235 = (((x234 + (((x148 + x225) - ((x148 * Val(2)) * x225)) * Val(65536))) +
                 (((x149 + x226) - ((x149 * Val(2)) * x226)) * Val(131072))) +
                (((x150 + x227) - ((x150 * Val(2)) * x227)) * Val(262144)));
    NondetRegStruct x236 =
        exec_Reg(ctx,
                 ((x235 + (((x151 + x228) - ((x151 * Val(2)) * x228)) * Val(524288))) +
                  (((x152 + x229) - ((x152 * Val(2)) * x229)) * Val(1048576))),
                 LAYOUT_LOOKUP(x119, res3n));
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:733)
    RetTupleStruct x237 =
        exec_RetTuple(ctx,
                      x120,
                      x121,
                      x122,
                      x123,
                      x124,
                      Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), x236._super},
                      Val(2),
                      Val(14),
                      x125,
                      x126,
                      x127,
                      LAYOUT_LOOKUP(x119, _super));
  }
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:685)
  RetTupleStruct x238 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x238;
}
RetTupleStruct execChiMinor0_1__4_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<ChiMinor0_1__4_Layout> layout1) {
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:542)
  NondetRegStruct24Array x2 = arg0.arrD;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:546)
  Val x3 = x2[0]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:554)
  ToBits_22_Struct x4 = exec_ToBits_22_(ctx, x3, LAYOUT_LOOKUP(layout1, unpack_0xp1));
  NondetRegStruct22Array x5 = x4._super;
  Val x6 = x5[0]._super;
  Val x7 = x5[1]._super;
  Val x8 = x5[2]._super;
  Val x9 = x5[3]._super;
  Val x10 = x5[4]._super;
  Val x11 = x5[5]._super;
  Val x12 = x5[6]._super;
  Val x13 = x5[7]._super;
  Val x14 = x5[8]._super;
  Val x15 = x5[9]._super;
  Val x16 = x5[10]._super;
  Val x17 = x5[11]._super;
  Val x18 = x5[12]._super;
  Val x19 = x5[13]._super;
  Val x20 = x5[14]._super;
  Val x21 = x5[15]._super;
  Val x22 = x5[16]._super;
  Val x23 = x5[17]._super;
  Val x24 = x5[18]._super;
  Val x25 = x5[19]._super;
  Val x26 = x5[20]._super;
  Val x27 = x5[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:555)
  Val x28 = ((((((x6 + (x7 * Val(2))) + (x8 * Val(4))) + (x9 * Val(8))) + (x10 * Val(16))) +
              (x11 * Val(32))) +
             (x12 * Val(64)));
  Val x29 =
      ((((((x28 + (x13 * Val(128))) + (x14 * Val(256))) + (x15 * Val(512))) + (x16 * Val(1024))) +
        (x17 * Val(2048))) +
       (x18 * Val(4096)));
  Val x30 = ((((((x29 + (x19 * Val(8192))) + (x20 * Val(16384))) + (x21 * Val(32768))) +
               (x22 * Val(65536))) +
              (x23 * Val(131072))) +
             (x24 * Val(262144)));
  EQZ(((((x30 + (x25 * Val(524288))) + (x26 * Val(1048576))) + (x27 * Val(2097152))) - x3),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:555)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:559)
  Val x31 = x2[1]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:567)
  ToBits_21_Struct x32 = exec_ToBits_21_(ctx, x31, LAYOUT_LOOKUP(layout1, unpack_1xp1));
  NondetRegStruct21Array x33 = x32._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:568)
  Val x55 = ((((((x34 + (x35 * Val(2))) + (x36 * Val(4))) + (x37 * Val(8))) + (x38 * Val(16))) +
              (x39 * Val(32))) +
             (x40 * Val(64)));
  Val x56 =
      ((((((x55 + (x41 * Val(128))) + (x42 * Val(256))) + (x43 * Val(512))) + (x44 * Val(1024))) +
        (x45 * Val(2048))) +
       (x46 * Val(4096)));
  Val x57 = ((((((x56 + (x47 * Val(8192))) + (x48 * Val(16384))) + (x49 * Val(32768))) +
               (x50 * Val(65536))) +
              (x51 * Val(131072))) +
             (x52 * Val(262144)));
  EQZ((((x57 + (x53 * Val(524288))) + (x54 * Val(1048576))) - x31),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:568)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:573)
  Val x58 = x2[3]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:581)
  ToBits_22_Struct x59 = exec_ToBits_22_(ctx, x58, LAYOUT_LOOKUP(layout1, unpack_0xp2));
  NondetRegStruct22Array x60 = x59._super;
  Val x61 = x60[0]._super;
  Val x62 = x60[1]._super;
  Val x63 = x60[2]._super;
  Val x64 = x60[3]._super;
  Val x65 = x60[4]._super;
  Val x66 = x60[5]._super;
  Val x67 = x60[6]._super;
  Val x68 = x60[7]._super;
  Val x69 = x60[8]._super;
  Val x70 = x60[9]._super;
  Val x71 = x60[10]._super;
  Val x72 = x60[11]._super;
  Val x73 = x60[12]._super;
  Val x74 = x60[13]._super;
  Val x75 = x60[14]._super;
  Val x76 = x60[15]._super;
  Val x77 = x60[16]._super;
  Val x78 = x60[17]._super;
  Val x79 = x60[18]._super;
  Val x80 = x60[19]._super;
  Val x81 = x60[20]._super;
  Val x82 = x60[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:582)
  Val x83 = ((((((x61 + (x62 * Val(2))) + (x63 * Val(4))) + (x64 * Val(8))) + (x65 * Val(16))) +
              (x66 * Val(32))) +
             (x67 * Val(64)));
  Val x84 =
      ((((((x83 + (x68 * Val(128))) + (x69 * Val(256))) + (x70 * Val(512))) + (x71 * Val(1024))) +
        (x72 * Val(2048))) +
       (x73 * Val(4096)));
  Val x85 = ((((((x84 + (x74 * Val(8192))) + (x75 * Val(16384))) + (x76 * Val(32768))) +
               (x77 * Val(65536))) +
              (x78 * Val(131072))) +
             (x79 * Val(262144)));
  EQZ(((((x85 + (x80 * Val(524288))) + (x81 * Val(1048576))) + (x82 * Val(2097152))) - x58),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:582)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:586)
  Val x86 = x2[4]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:594)
  ToBits_21_Struct x87 = exec_ToBits_21_(ctx, x86, LAYOUT_LOOKUP(layout1, unpack_1xp2));
  NondetRegStruct21Array x88 = x87._super;
  Val x89 = x88[0]._super;
  Val x90 = x88[1]._super;
  Val x91 = x88[2]._super;
  Val x92 = x88[3]._super;
  Val x93 = x88[4]._super;
  Val x94 = x88[5]._super;
  Val x95 = x88[6]._super;
  Val x96 = x88[7]._super;
  Val x97 = x88[8]._super;
  Val x98 = x88[9]._super;
  Val x99 = x88[10]._super;
  Val x100 = x88[11]._super;
  Val x101 = x88[12]._super;
  Val x102 = x88[13]._super;
  Val x103 = x88[14]._super;
  Val x104 = x88[15]._super;
  Val x105 = x88[16]._super;
  Val x106 = x88[17]._super;
  Val x107 = x88[18]._super;
  Val x108 = x88[19]._super;
  Val x109 = x88[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:595)
  Val x110 = ((((((x89 + (x90 * Val(2))) + (x91 * Val(4))) + (x92 * Val(8))) + (x93 * Val(16))) +
               (x94 * Val(32))) +
              (x95 * Val(64)));
  Val x111 =
      ((((((x110 + (x96 * Val(128))) + (x97 * Val(256))) + (x98 * Val(512))) + (x99 * Val(1024))) +
        (x100 * Val(2048))) +
       (x101 * Val(4096)));
  Val x112 = ((((((x111 + (x102 * Val(8192))) + (x103 * Val(16384))) + (x104 * Val(32768))) +
                (x105 * Val(65536))) +
               (x106 * Val(131072))) +
              (x107 * Val(262144)));
  EQZ((((x112 + (x108 * Val(524288))) + (x109 * Val(1048576))) - x86),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:595)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:542)
  NondetRegStruct22Array x113 = arg0.arrC;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:599)
  Val x114 = x113[19]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:607)
  ToBits_22_Struct x115 = exec_ToBits_22_(ctx, x114, LAYOUT_LOOKUP(layout1, unpack_0x));
  NondetRegStruct22Array x116 = x115._super;
  Val x117 = x116[0]._super;
  Val x118 = x116[1]._super;
  Val x119 = x116[2]._super;
  Val x120 = x116[3]._super;
  Val x121 = x116[4]._super;
  Val x122 = x116[5]._super;
  Val x123 = x116[6]._super;
  Val x124 = x116[7]._super;
  Val x125 = x116[8]._super;
  Val x126 = x116[9]._super;
  Val x127 = x116[10]._super;
  Val x128 = x116[11]._super;
  Val x129 = x116[12]._super;
  Val x130 = x116[13]._super;
  Val x131 = x116[14]._super;
  Val x132 = x116[15]._super;
  Val x133 = x116[16]._super;
  Val x134 = x116[17]._super;
  Val x135 = x116[18]._super;
  Val x136 = x116[19]._super;
  Val x137 = x116[20]._super;
  Val x138 = x116[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:608)
  Val x139 = (x118 * Val(2));
  Val x140 = ((((((x117 + x139) + (x119 * Val(4))) + (x120 * Val(8))) + (x121 * Val(16))) +
               (x122 * Val(32))) +
              (x123 * Val(64)));
  Val x141 = ((((((x140 + (x124 * Val(128))) + (x125 * Val(256))) + (x126 * Val(512))) +
                (x127 * Val(1024))) +
               (x128 * Val(2048))) +
              (x129 * Val(4096)));
  Val x142 = ((((((x141 + (x130 * Val(8192))) + (x131 * Val(16384))) + (x132 * Val(32768))) +
                (x133 * Val(65536))) +
               (x134 * Val(131072))) +
              (x135 * Val(262144)));
  EQZ(((((x142 + (x136 * Val(524288))) + (x137 * Val(1048576))) + (x138 * Val(2097152))) - x114),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:608)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:612)
  Val x143 = x113[20]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:620)
  ToBits_21_Struct x144 = exec_ToBits_21_(ctx, x143, LAYOUT_LOOKUP(layout1, unpack_1x));
  NondetRegStruct21Array x145 = x144._super;
  Val x146 = x145[0]._super;
  Val x147 = x145[1]._super;
  Val x148 = x145[2]._super;
  Val x149 = x145[3]._super;
  Val x150 = x145[4]._super;
  Val x151 = x145[5]._super;
  Val x152 = x145[6]._super;
  Val x153 = x145[7]._super;
  Val x154 = x145[8]._super;
  Val x155 = x145[9]._super;
  Val x156 = x145[10]._super;
  Val x157 = x145[11]._super;
  Val x158 = x145[12]._super;
  Val x159 = x145[13]._super;
  Val x160 = x145[14]._super;
  Val x161 = x145[15]._super;
  Val x162 = x145[16]._super;
  Val x163 = x145[17]._super;
  Val x164 = x145[18]._super;
  Val x165 = x145[19]._super;
  Val x166 = x145[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:621)
  Val x167 = (x147 * Val(2));
  Val x168 = ((((((x146 + x167) + (x148 * Val(4))) + (x149 * Val(8))) + (x150 * Val(16))) +
               (x151 * Val(32))) +
              (x152 * Val(64)));
  Val x169 = ((((((x168 + (x153 * Val(128))) + (x154 * Val(256))) + (x155 * Val(512))) +
                (x156 * Val(1024))) +
               (x157 * Val(2048))) +
              (x158 * Val(4096)));
  Val x170 = ((((((x169 + (x159 * Val(8192))) + (x160 * Val(16384))) + (x161 * Val(32768))) +
                (x162 * Val(65536))) +
               (x163 * Val(131072))) +
              (x164 * Val(262144)));
  EQZ((((x170 + (x165 * Val(524288))) + (x166 * Val(1048576))) - x143),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:621)");
  // andnxor(zirgen/circuit/keccak/keccak.zir:118)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:623)
  Val x171 = ((Val(1) - x6) * x61);
  Val x172 = ((Val(1) - x7) * x62);
  Val x173 = ((Val(1) - x8) * x63);
  Val x174 = ((Val(1) - x9) * x64);
  Val x175 = ((Val(1) - x10) * x65);
  Val x176 = ((Val(1) - x11) * x66);
  Val x177 = ((Val(1) - x12) * x67);
  Val x178 = ((Val(1) - x13) * x68);
  Val x179 = ((Val(1) - x14) * x69);
  Val x180 = ((Val(1) - x15) * x70);
  Val x181 = ((Val(1) - x16) * x71);
  Val x182 = ((Val(1) - x17) * x72);
  Val x183 = ((Val(1) - x18) * x73);
  Val x184 = ((Val(1) - x19) * x74);
  Val x185 = ((Val(1) - x20) * x75);
  Val x186 = ((Val(1) - x21) * x76);
  Val x187 = ((Val(1) - x22) * x77);
  Val x188 = ((Val(1) - x23) * x78);
  Val x189 = ((Val(1) - x24) * x79);
  Val x190 = ((Val(1) - x25) * x80);
  Val x191 = ((Val(1) - x26) * x81);
  Val x192 = ((Val(1) - x27) * x82);
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:624)
  Val x193 = ((Val(1) - x34) * x89);
  Val x194 = ((Val(1) - x35) * x90);
  Val x195 = ((Val(1) - x36) * x91);
  Val x196 = ((Val(1) - x37) * x92);
  Val x197 = ((Val(1) - x38) * x93);
  Val x198 = ((Val(1) - x39) * x94);
  Val x199 = ((Val(1) - x40) * x95);
  Val x200 = ((Val(1) - x41) * x96);
  Val x201 = ((Val(1) - x42) * x97);
  Val x202 = ((Val(1) - x43) * x98);
  Val x203 = ((Val(1) - x44) * x99);
  Val x204 = ((Val(1) - x45) * x100);
  Val x205 = ((Val(1) - x46) * x101);
  Val x206 = ((Val(1) - x47) * x102);
  Val x207 = ((Val(1) - x48) * x103);
  Val x208 = ((Val(1) - x49) * x104);
  Val x209 = ((Val(1) - x50) * x105);
  Val x210 = ((Val(1) - x51) * x106);
  Val x211 = ((Val(1) - x52) * x107);
  Val x212 = ((Val(1) - x53) * x108);
  Val x213 = ((Val(1) - x54) * x109);
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:625)
  Val x214 =
      (((((x117 + x171) - ((x117 * Val(2)) * x171)) + (((x118 + x172) - (x139 * x172)) * Val(2))) +
        (((x119 + x173) - ((x119 * Val(2)) * x173)) * Val(4))) +
       (((x120 + x174) - ((x120 * Val(2)) * x174)) * Val(8)));
  Val x215 = (((x214 + (((x121 + x175) - ((x121 * Val(2)) * x175)) * Val(16))) +
               (((x122 + x176) - ((x122 * Val(2)) * x176)) * Val(32))) +
              (((x123 + x177) - ((x123 * Val(2)) * x177)) * Val(64)));
  Val x216 = (((x215 + (((x124 + x178) - ((x124 * Val(2)) * x178)) * Val(128))) +
               (((x125 + x179) - ((x125 * Val(2)) * x179)) * Val(256))) +
              (((x126 + x180) - ((x126 * Val(2)) * x180)) * Val(512)));
  Val x217 = (((x216 + (((x127 + x181) - ((x127 * Val(2)) * x181)) * Val(1024))) +
               (((x128 + x182) - ((x128 * Val(2)) * x182)) * Val(2048))) +
              (((x129 + x183) - ((x129 * Val(2)) * x183)) * Val(4096)));
  Val x218 = (((x217 + (((x130 + x184) - ((x130 * Val(2)) * x184)) * Val(8192))) +
               (((x131 + x185) - ((x131 * Val(2)) * x185)) * Val(16384))) +
              (((x132 + x186) - ((x132 * Val(2)) * x186)) * Val(32768)));
  Val x219 = (((x218 + (((x133 + x187) - ((x133 * Val(2)) * x187)) * Val(65536))) +
               (((x134 + x188) - ((x134 * Val(2)) * x188)) * Val(131072))) +
              (((x135 + x189) - ((x135 * Val(2)) * x189)) * Val(262144)));
  Val x220 = (((x219 + (((x136 + x190) - ((x136 * Val(2)) * x190)) * Val(524288))) +
               (((x137 + x191) - ((x137 * Val(2)) * x191)) * Val(1048576))) +
              (((x138 + x192) - ((x138 * Val(2)) * x192)) * Val(2097152)));
  NondetRegStruct x221 = exec_Reg(ctx, x220, LAYOUT_LOOKUP(layout1, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  Val x222 =
      (((((x146 + x193) - ((x146 * Val(2)) * x193)) + (((x147 + x194) - (x167 * x194)) * Val(2))) +
        (((x148 + x195) - ((x148 * Val(2)) * x195)) * Val(4))) +
       (((x149 + x196) - ((x149 * Val(2)) * x196)) * Val(8)));
  Val x223 = (((x222 + (((x150 + x197) - ((x150 * Val(2)) * x197)) * Val(16))) +
               (((x151 + x198) - ((x151 * Val(2)) * x198)) * Val(32))) +
              (((x152 + x199) - ((x152 * Val(2)) * x199)) * Val(64)));
  Val x224 = (((x223 + (((x153 + x200) - ((x153 * Val(2)) * x200)) * Val(128))) +
               (((x154 + x201) - ((x154 * Val(2)) * x201)) * Val(256))) +
              (((x155 + x202) - ((x155 * Val(2)) * x202)) * Val(512)));
  Val x225 = (((x224 + (((x156 + x203) - ((x156 * Val(2)) * x203)) * Val(1024))) +
               (((x157 + x204) - ((x157 * Val(2)) * x204)) * Val(2048))) +
              (((x158 + x205) - ((x158 * Val(2)) * x205)) * Val(4096)));
  Val x226 = (((x225 + (((x159 + x206) - ((x159 * Val(2)) * x206)) * Val(8192))) +
               (((x160 + x207) - ((x160 * Val(2)) * x207)) * Val(16384))) +
              (((x161 + x208) - ((x161 * Val(2)) * x208)) * Val(32768)));
  Val x227 = (((x226 + (((x162 + x209) - ((x162 * Val(2)) * x209)) * Val(65536))) +
               (((x163 + x210) - ((x163 * Val(2)) * x210)) * Val(131072))) +
              (((x164 + x211) - ((x164 * Val(2)) * x211)) * Val(262144)));
  NondetRegStruct x228 =
      exec_Reg(ctx,
               ((x227 + (((x165 + x212) - ((x165 * Val(2)) * x212)) * Val(524288))) +
                (((x166 + x213) - ((x166 * Val(2)) * x213)) * Val(1048576))),
               LAYOUT_LOOKUP(layout1, _1));
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:630)
  Val22Array x229 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x230 = exec_RetTuple(
      ctx,
      x229,
      x229,
      x229,
      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), x221._super, x228._super},
      x229,
      x229,
      Val(3),
      Val(14),
      arg0.rnd._super,
      arg0.blk._super,
      arg0.midx._super,
      LAYOUT_LOOKUP(layout1, _super));
  return x230;
}
RetTupleStruct execChiMinor0_2__4_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<ChiMinor0_2__4_Layout> layout1) {
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:542)
  NondetRegStruct24Array x2 = arg0.arrD;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:546)
  Val x3 = x2[3]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:554)
  ToBits_22_Struct x4 = exec_ToBits_22_(ctx, x3, LAYOUT_LOOKUP(layout1, unpack_0xp1));
  NondetRegStruct22Array x5 = x4._super;
  Val x6 = x5[0]._super;
  Val x7 = x5[1]._super;
  Val x8 = x5[2]._super;
  Val x9 = x5[3]._super;
  Val x10 = x5[4]._super;
  Val x11 = x5[5]._super;
  Val x12 = x5[6]._super;
  Val x13 = x5[7]._super;
  Val x14 = x5[8]._super;
  Val x15 = x5[9]._super;
  Val x16 = x5[10]._super;
  Val x17 = x5[11]._super;
  Val x18 = x5[12]._super;
  Val x19 = x5[13]._super;
  Val x20 = x5[14]._super;
  Val x21 = x5[15]._super;
  Val x22 = x5[16]._super;
  Val x23 = x5[17]._super;
  Val x24 = x5[18]._super;
  Val x25 = x5[19]._super;
  Val x26 = x5[20]._super;
  Val x27 = x5[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:555)
  Val x28 = ((((((x6 + (x7 * Val(2))) + (x8 * Val(4))) + (x9 * Val(8))) + (x10 * Val(16))) +
              (x11 * Val(32))) +
             (x12 * Val(64)));
  Val x29 =
      ((((((x28 + (x13 * Val(128))) + (x14 * Val(256))) + (x15 * Val(512))) + (x16 * Val(1024))) +
        (x17 * Val(2048))) +
       (x18 * Val(4096)));
  Val x30 = ((((((x29 + (x19 * Val(8192))) + (x20 * Val(16384))) + (x21 * Val(32768))) +
               (x22 * Val(65536))) +
              (x23 * Val(131072))) +
             (x24 * Val(262144)));
  EQZ(((((x30 + (x25 * Val(524288))) + (x26 * Val(1048576))) + (x27 * Val(2097152))) - x3),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:555)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:559)
  Val x31 = x2[4]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:567)
  ToBits_21_Struct x32 = exec_ToBits_21_(ctx, x31, LAYOUT_LOOKUP(layout1, unpack_1xp1));
  NondetRegStruct21Array x33 = x32._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:568)
  Val x55 = ((((((x34 + (x35 * Val(2))) + (x36 * Val(4))) + (x37 * Val(8))) + (x38 * Val(16))) +
              (x39 * Val(32))) +
             (x40 * Val(64)));
  Val x56 =
      ((((((x55 + (x41 * Val(128))) + (x42 * Val(256))) + (x43 * Val(512))) + (x44 * Val(1024))) +
        (x45 * Val(2048))) +
       (x46 * Val(4096)));
  Val x57 = ((((((x56 + (x47 * Val(8192))) + (x48 * Val(16384))) + (x49 * Val(32768))) +
               (x50 * Val(65536))) +
              (x51 * Val(131072))) +
             (x52 * Val(262144)));
  EQZ((((x57 + (x53 * Val(524288))) + (x54 * Val(1048576))) - x31),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:568)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:573)
  Val x58 = x2[6]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:581)
  ToBits_22_Struct x59 = exec_ToBits_22_(ctx, x58, LAYOUT_LOOKUP(layout1, unpack_0xp2));
  NondetRegStruct22Array x60 = x59._super;
  Val x61 = x60[0]._super;
  Val x62 = x60[1]._super;
  Val x63 = x60[2]._super;
  Val x64 = x60[3]._super;
  Val x65 = x60[4]._super;
  Val x66 = x60[5]._super;
  Val x67 = x60[6]._super;
  Val x68 = x60[7]._super;
  Val x69 = x60[8]._super;
  Val x70 = x60[9]._super;
  Val x71 = x60[10]._super;
  Val x72 = x60[11]._super;
  Val x73 = x60[12]._super;
  Val x74 = x60[13]._super;
  Val x75 = x60[14]._super;
  Val x76 = x60[15]._super;
  Val x77 = x60[16]._super;
  Val x78 = x60[17]._super;
  Val x79 = x60[18]._super;
  Val x80 = x60[19]._super;
  Val x81 = x60[20]._super;
  Val x82 = x60[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:582)
  Val x83 = ((((((x61 + (x62 * Val(2))) + (x63 * Val(4))) + (x64 * Val(8))) + (x65 * Val(16))) +
              (x66 * Val(32))) +
             (x67 * Val(64)));
  Val x84 =
      ((((((x83 + (x68 * Val(128))) + (x69 * Val(256))) + (x70 * Val(512))) + (x71 * Val(1024))) +
        (x72 * Val(2048))) +
       (x73 * Val(4096)));
  Val x85 = ((((((x84 + (x74 * Val(8192))) + (x75 * Val(16384))) + (x76 * Val(32768))) +
               (x77 * Val(65536))) +
              (x78 * Val(131072))) +
             (x79 * Val(262144)));
  EQZ(((((x85 + (x80 * Val(524288))) + (x81 * Val(1048576))) + (x82 * Val(2097152))) - x58),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:582)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:586)
  Val x86 = x2[7]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:594)
  ToBits_21_Struct x87 = exec_ToBits_21_(ctx, x86, LAYOUT_LOOKUP(layout1, unpack_1xp2));
  NondetRegStruct21Array x88 = x87._super;
  Val x89 = x88[0]._super;
  Val x90 = x88[1]._super;
  Val x91 = x88[2]._super;
  Val x92 = x88[3]._super;
  Val x93 = x88[4]._super;
  Val x94 = x88[5]._super;
  Val x95 = x88[6]._super;
  Val x96 = x88[7]._super;
  Val x97 = x88[8]._super;
  Val x98 = x88[9]._super;
  Val x99 = x88[10]._super;
  Val x100 = x88[11]._super;
  Val x101 = x88[12]._super;
  Val x102 = x88[13]._super;
  Val x103 = x88[14]._super;
  Val x104 = x88[15]._super;
  Val x105 = x88[16]._super;
  Val x106 = x88[17]._super;
  Val x107 = x88[18]._super;
  Val x108 = x88[19]._super;
  Val x109 = x88[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:595)
  Val x110 = ((((((x89 + (x90 * Val(2))) + (x91 * Val(4))) + (x92 * Val(8))) + (x93 * Val(16))) +
               (x94 * Val(32))) +
              (x95 * Val(64)));
  Val x111 =
      ((((((x110 + (x96 * Val(128))) + (x97 * Val(256))) + (x98 * Val(512))) + (x99 * Val(1024))) +
        (x100 * Val(2048))) +
       (x101 * Val(4096)));
  Val x112 = ((((((x111 + (x102 * Val(8192))) + (x103 * Val(16384))) + (x104 * Val(32768))) +
                (x105 * Val(65536))) +
               (x106 * Val(131072))) +
              (x107 * Val(262144)));
  EQZ((((x112 + (x108 * Val(524288))) + (x109 * Val(1048576))) - x86),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:595)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:599)
  Val x113 = x2[0]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:607)
  ToBits_22_Struct x114 = exec_ToBits_22_(ctx, x113, LAYOUT_LOOKUP(layout1, unpack_0x));
  NondetRegStruct22Array x115 = x114._super;
  Val x116 = x115[0]._super;
  Val x117 = x115[1]._super;
  Val x118 = x115[2]._super;
  Val x119 = x115[3]._super;
  Val x120 = x115[4]._super;
  Val x121 = x115[5]._super;
  Val x122 = x115[6]._super;
  Val x123 = x115[7]._super;
  Val x124 = x115[8]._super;
  Val x125 = x115[9]._super;
  Val x126 = x115[10]._super;
  Val x127 = x115[11]._super;
  Val x128 = x115[12]._super;
  Val x129 = x115[13]._super;
  Val x130 = x115[14]._super;
  Val x131 = x115[15]._super;
  Val x132 = x115[16]._super;
  Val x133 = x115[17]._super;
  Val x134 = x115[18]._super;
  Val x135 = x115[19]._super;
  Val x136 = x115[20]._super;
  Val x137 = x115[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:608)
  Val x138 = (x117 * Val(2));
  Val x139 = ((((((x116 + x138) + (x118 * Val(4))) + (x119 * Val(8))) + (x120 * Val(16))) +
               (x121 * Val(32))) +
              (x122 * Val(64)));
  Val x140 = ((((((x139 + (x123 * Val(128))) + (x124 * Val(256))) + (x125 * Val(512))) +
                (x126 * Val(1024))) +
               (x127 * Val(2048))) +
              (x128 * Val(4096)));
  Val x141 = ((((((x140 + (x129 * Val(8192))) + (x130 * Val(16384))) + (x131 * Val(32768))) +
                (x132 * Val(65536))) +
               (x133 * Val(131072))) +
              (x134 * Val(262144)));
  EQZ(((((x141 + (x135 * Val(524288))) + (x136 * Val(1048576))) + (x137 * Val(2097152))) - x113),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:608)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:612)
  Val x142 = x2[1]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:620)
  ToBits_21_Struct x143 = exec_ToBits_21_(ctx, x142, LAYOUT_LOOKUP(layout1, unpack_1x));
  NondetRegStruct21Array x144 = x143._super;
  Val x145 = x144[0]._super;
  Val x146 = x144[1]._super;
  Val x147 = x144[2]._super;
  Val x148 = x144[3]._super;
  Val x149 = x144[4]._super;
  Val x150 = x144[5]._super;
  Val x151 = x144[6]._super;
  Val x152 = x144[7]._super;
  Val x153 = x144[8]._super;
  Val x154 = x144[9]._super;
  Val x155 = x144[10]._super;
  Val x156 = x144[11]._super;
  Val x157 = x144[12]._super;
  Val x158 = x144[13]._super;
  Val x159 = x144[14]._super;
  Val x160 = x144[15]._super;
  Val x161 = x144[16]._super;
  Val x162 = x144[17]._super;
  Val x163 = x144[18]._super;
  Val x164 = x144[19]._super;
  Val x165 = x144[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:621)
  Val x166 = (x146 * Val(2));
  Val x167 = ((((((x145 + x166) + (x147 * Val(4))) + (x148 * Val(8))) + (x149 * Val(16))) +
               (x150 * Val(32))) +
              (x151 * Val(64)));
  Val x168 = ((((((x167 + (x152 * Val(128))) + (x153 * Val(256))) + (x154 * Val(512))) +
                (x155 * Val(1024))) +
               (x156 * Val(2048))) +
              (x157 * Val(4096)));
  Val x169 = ((((((x168 + (x158 * Val(8192))) + (x159 * Val(16384))) + (x160 * Val(32768))) +
                (x161 * Val(65536))) +
               (x162 * Val(131072))) +
              (x163 * Val(262144)));
  EQZ((((x169 + (x164 * Val(524288))) + (x165 * Val(1048576))) - x142),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:621)");
  // andnxor(zirgen/circuit/keccak/keccak.zir:118)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:623)
  Val x170 = ((Val(1) - x6) * x61);
  Val x171 = ((Val(1) - x7) * x62);
  Val x172 = ((Val(1) - x8) * x63);
  Val x173 = ((Val(1) - x9) * x64);
  Val x174 = ((Val(1) - x10) * x65);
  Val x175 = ((Val(1) - x11) * x66);
  Val x176 = ((Val(1) - x12) * x67);
  Val x177 = ((Val(1) - x13) * x68);
  Val x178 = ((Val(1) - x14) * x69);
  Val x179 = ((Val(1) - x15) * x70);
  Val x180 = ((Val(1) - x16) * x71);
  Val x181 = ((Val(1) - x17) * x72);
  Val x182 = ((Val(1) - x18) * x73);
  Val x183 = ((Val(1) - x19) * x74);
  Val x184 = ((Val(1) - x20) * x75);
  Val x185 = ((Val(1) - x21) * x76);
  Val x186 = ((Val(1) - x22) * x77);
  Val x187 = ((Val(1) - x23) * x78);
  Val x188 = ((Val(1) - x24) * x79);
  Val x189 = ((Val(1) - x25) * x80);
  Val x190 = ((Val(1) - x26) * x81);
  Val x191 = ((Val(1) - x27) * x82);
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:624)
  Val x192 = ((Val(1) - x34) * x89);
  Val x193 = ((Val(1) - x35) * x90);
  Val x194 = ((Val(1) - x36) * x91);
  Val x195 = ((Val(1) - x37) * x92);
  Val x196 = ((Val(1) - x38) * x93);
  Val x197 = ((Val(1) - x39) * x94);
  Val x198 = ((Val(1) - x40) * x95);
  Val x199 = ((Val(1) - x41) * x96);
  Val x200 = ((Val(1) - x42) * x97);
  Val x201 = ((Val(1) - x43) * x98);
  Val x202 = ((Val(1) - x44) * x99);
  Val x203 = ((Val(1) - x45) * x100);
  Val x204 = ((Val(1) - x46) * x101);
  Val x205 = ((Val(1) - x47) * x102);
  Val x206 = ((Val(1) - x48) * x103);
  Val x207 = ((Val(1) - x49) * x104);
  Val x208 = ((Val(1) - x50) * x105);
  Val x209 = ((Val(1) - x51) * x106);
  Val x210 = ((Val(1) - x52) * x107);
  Val x211 = ((Val(1) - x53) * x108);
  Val x212 = ((Val(1) - x54) * x109);
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:625)
  Val x213 =
      (((((x116 + x170) - ((x116 * Val(2)) * x170)) + (((x117 + x171) - (x138 * x171)) * Val(2))) +
        (((x118 + x172) - ((x118 * Val(2)) * x172)) * Val(4))) +
       (((x119 + x173) - ((x119 * Val(2)) * x173)) * Val(8)));
  Val x214 = (((x213 + (((x120 + x174) - ((x120 * Val(2)) * x174)) * Val(16))) +
               (((x121 + x175) - ((x121 * Val(2)) * x175)) * Val(32))) +
              (((x122 + x176) - ((x122 * Val(2)) * x176)) * Val(64)));
  Val x215 = (((x214 + (((x123 + x177) - ((x123 * Val(2)) * x177)) * Val(128))) +
               (((x124 + x178) - ((x124 * Val(2)) * x178)) * Val(256))) +
              (((x125 + x179) - ((x125 * Val(2)) * x179)) * Val(512)));
  Val x216 = (((x215 + (((x126 + x180) - ((x126 * Val(2)) * x180)) * Val(1024))) +
               (((x127 + x181) - ((x127 * Val(2)) * x181)) * Val(2048))) +
              (((x128 + x182) - ((x128 * Val(2)) * x182)) * Val(4096)));
  Val x217 = (((x216 + (((x129 + x183) - ((x129 * Val(2)) * x183)) * Val(8192))) +
               (((x130 + x184) - ((x130 * Val(2)) * x184)) * Val(16384))) +
              (((x131 + x185) - ((x131 * Val(2)) * x185)) * Val(32768)));
  Val x218 = (((x217 + (((x132 + x186) - ((x132 * Val(2)) * x186)) * Val(65536))) +
               (((x133 + x187) - ((x133 * Val(2)) * x187)) * Val(131072))) +
              (((x134 + x188) - ((x134 * Val(2)) * x188)) * Val(262144)));
  Val x219 = (((x218 + (((x135 + x189) - ((x135 * Val(2)) * x189)) * Val(524288))) +
               (((x136 + x190) - ((x136 * Val(2)) * x190)) * Val(1048576))) +
              (((x137 + x191) - ((x137 * Val(2)) * x191)) * Val(2097152)));
  NondetRegStruct x220 = exec_Reg(ctx, x219, LAYOUT_LOOKUP(layout1, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  Val x221 =
      (((((x145 + x192) - ((x145 * Val(2)) * x192)) + (((x146 + x193) - (x166 * x193)) * Val(2))) +
        (((x147 + x194) - ((x147 * Val(2)) * x194)) * Val(4))) +
       (((x148 + x195) - ((x148 * Val(2)) * x195)) * Val(8)));
  Val x222 = (((x221 + (((x149 + x196) - ((x149 * Val(2)) * x196)) * Val(16))) +
               (((x150 + x197) - ((x150 * Val(2)) * x197)) * Val(32))) +
              (((x151 + x198) - ((x151 * Val(2)) * x198)) * Val(64)));
  Val x223 = (((x222 + (((x152 + x199) - ((x152 * Val(2)) * x199)) * Val(128))) +
               (((x153 + x200) - ((x153 * Val(2)) * x200)) * Val(256))) +
              (((x154 + x201) - ((x154 * Val(2)) * x201)) * Val(512)));
  Val x224 = (((x223 + (((x155 + x202) - ((x155 * Val(2)) * x202)) * Val(1024))) +
               (((x156 + x203) - ((x156 * Val(2)) * x203)) * Val(2048))) +
              (((x157 + x204) - ((x157 * Val(2)) * x204)) * Val(4096)));
  Val x225 = (((x224 + (((x158 + x205) - ((x158 * Val(2)) * x205)) * Val(8192))) +
               (((x159 + x206) - ((x159 * Val(2)) * x206)) * Val(16384))) +
              (((x160 + x207) - ((x160 * Val(2)) * x207)) * Val(32768)));
  Val x226 = (((x225 + (((x161 + x208) - ((x161 * Val(2)) * x208)) * Val(65536))) +
               (((x162 + x209) - ((x162 * Val(2)) * x209)) * Val(131072))) +
              (((x163 + x210) - ((x163 * Val(2)) * x210)) * Val(262144)));
  NondetRegStruct x227 =
      exec_Reg(ctx,
               ((x226 + (((x164 + x211) - ((x164 * Val(2)) * x211)) * Val(524288))) +
                (((x165 + x212) - ((x165 * Val(2)) * x212)) * Val(1048576))),
               LAYOUT_LOOKUP(layout1, _1));
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:630)
  Val22Array x228 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x229 = exec_RetTuple(
      ctx,
      x228,
      x228,
      x228,
      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), x220._super, x227._super},
      x228,
      x228,
      Val(4),
      Val(14),
      arg0.rnd._super,
      arg0.blk._super,
      arg0.midx._super,
      LAYOUT_LOOKUP(layout1, _super));
  return x229;
}
RetTupleStruct execChiMinor1_2__4_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<ChiMinor1_2__4_Layout> layout2) {
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:685)
  BoundLayout<ChiMinor1_2__4__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:635)
  RetTupleStruct x4 = back_RetTuple(ctx, 5, arg1);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:636)
  RetTupleStruct x5 = back_RetTuple(ctx, 1, arg1);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:635)
  NondetRegStruct24Array x6 = x4.arrD;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:640)
  Val x7 = x6[2]._super;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:648)
  ToBits_21_Struct x8 = exec_ToBits_21_(ctx, x7, LAYOUT_LOOKUP(layout2, unpack_2x));
  NondetRegStruct21Array x9 = x8._super;
  Val x10 = x9[0]._super;
  Val x11 = x9[1]._super;
  Val x12 = x9[2]._super;
  Val x13 = x9[3]._super;
  Val x14 = x9[4]._super;
  Val x15 = x9[5]._super;
  Val x16 = x9[6]._super;
  Val x17 = x9[7]._super;
  Val x18 = x9[8]._super;
  Val x19 = x9[9]._super;
  Val x20 = x9[10]._super;
  Val x21 = x9[11]._super;
  Val x22 = x9[12]._super;
  Val x23 = x9[13]._super;
  Val x24 = x9[14]._super;
  Val x25 = x9[15]._super;
  Val x26 = x9[16]._super;
  Val x27 = x9[17]._super;
  Val x28 = x9[18]._super;
  Val x29 = x9[19]._super;
  Val x30 = x9[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:649)
  Val x31 = (x11 * Val(2));
  Val x32 =
      ((((((x10 + x31) + (x12 * Val(4))) + (x13 * Val(8))) + (x14 * Val(16))) + (x15 * Val(32))) +
       (x16 * Val(64)));
  Val x33 =
      ((((((x32 + (x17 * Val(128))) + (x18 * Val(256))) + (x19 * Val(512))) + (x20 * Val(1024))) +
        (x21 * Val(2048))) +
       (x22 * Val(4096)));
  Val x34 = ((((((x33 + (x23 * Val(8192))) + (x24 * Val(16384))) + (x25 * Val(32768))) +
               (x26 * Val(65536))) +
              (x27 * Val(131072))) +
             (x28 * Val(262144)));
  EQZ((((x34 + (x29 * Val(524288))) + (x30 * Val(1048576))) - x7),
      "chi_minor1(zirgen/circuit/keccak/keccak.zir:649)");
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:654)
  Val x35 = x6[5]._super;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:662)
  ToBits_21_Struct x36 = exec_ToBits_21_(ctx, x35, LAYOUT_LOOKUP(layout2, unpack_2xp1));
  NondetRegStruct21Array x37 = x36._super;
  Val x38 = x37[0]._super;
  Val x39 = x37[1]._super;
  Val x40 = x37[2]._super;
  Val x41 = x37[3]._super;
  Val x42 = x37[4]._super;
  Val x43 = x37[5]._super;
  Val x44 = x37[6]._super;
  Val x45 = x37[7]._super;
  Val x46 = x37[8]._super;
  Val x47 = x37[9]._super;
  Val x48 = x37[10]._super;
  Val x49 = x37[11]._super;
  Val x50 = x37[12]._super;
  Val x51 = x37[13]._super;
  Val x52 = x37[14]._super;
  Val x53 = x37[15]._super;
  Val x54 = x37[16]._super;
  Val x55 = x37[17]._super;
  Val x56 = x37[18]._super;
  Val x57 = x37[19]._super;
  Val x58 = x37[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:663)
  Val x59 = ((((((x38 + (x39 * Val(2))) + (x40 * Val(4))) + (x41 * Val(8))) + (x42 * Val(16))) +
              (x43 * Val(32))) +
             (x44 * Val(64)));
  Val x60 =
      ((((((x59 + (x45 * Val(128))) + (x46 * Val(256))) + (x47 * Val(512))) + (x48 * Val(1024))) +
        (x49 * Val(2048))) +
       (x50 * Val(4096)));
  Val x61 = ((((((x60 + (x51 * Val(8192))) + (x52 * Val(16384))) + (x53 * Val(32768))) +
               (x54 * Val(65536))) +
              (x55 * Val(131072))) +
             (x56 * Val(262144)));
  EQZ((((x61 + (x57 * Val(524288))) + (x58 * Val(1048576))) - x35),
      "chi_minor1(zirgen/circuit/keccak/keccak.zir:663)");
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:667)
  Val x62 = x6[8]._super;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:675)
  ToBits_21_Struct x63 = exec_ToBits_21_(ctx, x62, LAYOUT_LOOKUP(layout2, unpack_2xp2));
  NondetRegStruct21Array x64 = x63._super;
  Val x65 = x64[0]._super;
  Val x66 = x64[1]._super;
  Val x67 = x64[2]._super;
  Val x68 = x64[3]._super;
  Val x69 = x64[4]._super;
  Val x70 = x64[5]._super;
  Val x71 = x64[6]._super;
  Val x72 = x64[7]._super;
  Val x73 = x64[8]._super;
  Val x74 = x64[9]._super;
  Val x75 = x64[10]._super;
  Val x76 = x64[11]._super;
  Val x77 = x64[12]._super;
  Val x78 = x64[13]._super;
  Val x79 = x64[14]._super;
  Val x80 = x64[15]._super;
  Val x81 = x64[16]._super;
  Val x82 = x64[17]._super;
  Val x83 = x64[18]._super;
  Val x84 = x64[19]._super;
  Val x85 = x64[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:676)
  Val x86 = ((((((x65 + (x66 * Val(2))) + (x67 * Val(4))) + (x68 * Val(8))) + (x69 * Val(16))) +
              (x70 * Val(32))) +
             (x71 * Val(64)));
  Val x87 =
      ((((((x86 + (x72 * Val(128))) + (x73 * Val(256))) + (x74 * Val(512))) + (x75 * Val(1024))) +
        (x76 * Val(2048))) +
       (x77 * Val(4096)));
  Val x88 = ((((((x87 + (x78 * Val(8192))) + (x79 * Val(16384))) + (x80 * Val(32768))) +
               (x81 * Val(65536))) +
              (x82 * Val(131072))) +
             (x83 * Val(262144)));
  EQZ((((x88 + (x84 * Val(524288))) + (x85 * Val(1048576))) - x62),
      "chi_minor1(zirgen/circuit/keccak/keccak.zir:676)");
  // andnxor(zirgen/circuit/keccak/keccak.zir:118)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:678)
  Val x89 = ((Val(1) - x38) * x65);
  Val x90 = ((Val(1) - x39) * x66);
  Val x91 = ((Val(1) - x40) * x67);
  Val x92 = ((Val(1) - x41) * x68);
  Val x93 = ((Val(1) - x42) * x69);
  Val x94 = ((Val(1) - x43) * x70);
  Val x95 = ((Val(1) - x44) * x71);
  Val x96 = ((Val(1) - x45) * x72);
  Val x97 = ((Val(1) - x46) * x73);
  Val x98 = ((Val(1) - x47) * x74);
  Val x99 = ((Val(1) - x48) * x75);
  Val x100 = ((Val(1) - x49) * x76);
  Val x101 = ((Val(1) - x50) * x77);
  Val x102 = ((Val(1) - x51) * x78);
  Val x103 = ((Val(1) - x52) * x79);
  Val x104 = ((Val(1) - x53) * x80);
  Val x105 = ((Val(1) - x54) * x81);
  Val x106 = ((Val(1) - x55) * x82);
  Val x107 = ((Val(1) - x56) * x83);
  Val x108 = ((Val(1) - x57) * x84);
  Val x109 = ((Val(1) - x58) * x85);
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:679)
  Val x110 = (((((x10 + x89) - ((x10 * Val(2)) * x89)) + (((x11 + x90) - (x31 * x90)) * Val(2))) +
               (((x12 + x91) - ((x12 * Val(2)) * x91)) * Val(4))) +
              (((x13 + x92) - ((x13 * Val(2)) * x92)) * Val(8)));
  Val x111 = (((x110 + (((x14 + x93) - ((x14 * Val(2)) * x93)) * Val(16))) +
               (((x15 + x94) - ((x15 * Val(2)) * x94)) * Val(32))) +
              (((x16 + x95) - ((x16 * Val(2)) * x95)) * Val(64)));
  Val x112 = (((x111 + (((x17 + x96) - ((x17 * Val(2)) * x96)) * Val(128))) +
               (((x18 + x97) - ((x18 * Val(2)) * x97)) * Val(256))) +
              (((x19 + x98) - ((x19 * Val(2)) * x98)) * Val(512)));
  Val x113 = (((x112 + (((x20 + x99) - ((x20 * Val(2)) * x99)) * Val(1024))) +
               (((x21 + x100) - ((x21 * Val(2)) * x100)) * Val(2048))) +
              (((x22 + x101) - ((x22 * Val(2)) * x101)) * Val(4096)));
  Val x114 = (((x113 + (((x23 + x102) - ((x23 * Val(2)) * x102)) * Val(8192))) +
               (((x24 + x103) - ((x24 * Val(2)) * x103)) * Val(16384))) +
              (((x25 + x104) - ((x25 * Val(2)) * x104)) * Val(32768)));
  Val x115 = (((x114 + (((x26 + x105) - ((x26 * Val(2)) * x105)) * Val(65536))) +
               (((x27 + x106) - ((x27 * Val(2)) * x106)) * Val(131072))) +
              (((x28 + x107) - ((x28 * Val(2)) * x107)) * Val(262144)));
  NondetRegStruct x116 =
      exec_Reg(ctx,
               ((x115 + (((x29 + x108) - ((x29 * Val(2)) * x108)) * Val(524288))) +
                (((x30 + x109) - ((x30 * Val(2)) * x109)) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, res3));
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:636)
  NondetRegStruct24Array x117 = x5.arrD;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:685)
  BoundLayout<ChiMinor1_2__4_Arm1_SuperLayout> x118 = LAYOUT_LOOKUP(x3, arm1);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:680)
  Val22Array x119 =
      Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), x117[22]._super};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:681)
  Val22Array x120 =
      Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), x117[23]._super};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:682)
  Val22Array x121 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), x116._super};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:686)
  Val24Array x122 = Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  Val22Array x123 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:636)
  Val x124 = x5.rnd._super;
  Val x125 = x5.blk._super;
  Val x126 = x5.midx._super;
  if (to_size_t(Val(0))) {
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:686)
    RetTupleStruct x127 = exec_RetTuple(ctx,
                                        x119,
                                        x120,
                                        x121,
                                        x122,
                                        x123,
                                        x123,
                                        Val(5),
                                        Val(14),
                                        x124,
                                        x125,
                                        x126,
                                        LAYOUT_LOOKUP(x3, arm0));
  }
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:718)
  Val x128 = x4.arrC[18]._super;
  if (to_size_t(Val(1))) {
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:699)
    ToBits_21_Struct x129 = exec_ToBits_21_(ctx, x35, LAYOUT_LOOKUP(x118, unpack_2nx));
    NondetRegStruct21Array x130 = x129._super;
    Val x131 = x130[0]._super;
    Val x132 = x130[1]._super;
    Val x133 = x130[2]._super;
    Val x134 = x130[3]._super;
    Val x135 = x130[4]._super;
    Val x136 = x130[5]._super;
    Val x137 = x130[6]._super;
    Val x138 = x130[7]._super;
    Val x139 = x130[8]._super;
    Val x140 = x130[9]._super;
    Val x141 = x130[10]._super;
    Val x142 = x130[11]._super;
    Val x143 = x130[12]._super;
    Val x144 = x130[13]._super;
    Val x145 = x130[14]._super;
    Val x146 = x130[15]._super;
    Val x147 = x130[16]._super;
    Val x148 = x130[17]._super;
    Val x149 = x130[18]._super;
    Val x150 = x130[19]._super;
    Val x151 = x130[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:700)
    Val x152 = (x132 * Val(2));
    Val x153 = ((((((x131 + x152) + (x133 * Val(4))) + (x134 * Val(8))) + (x135 * Val(16))) +
                 (x136 * Val(32))) +
                (x137 * Val(64)));
    Val x154 = ((((((x153 + (x138 * Val(128))) + (x139 * Val(256))) + (x140 * Val(512))) +
                  (x141 * Val(1024))) +
                 (x142 * Val(2048))) +
                (x143 * Val(4096)));
    Val x155 = ((((((x154 + (x144 * Val(8192))) + (x145 * Val(16384))) + (x146 * Val(32768))) +
                  (x147 * Val(65536))) +
                 (x148 * Val(131072))) +
                (x149 * Val(262144)));
    EQZ((((x155 + (x150 * Val(524288))) + (x151 * Val(1048576))) - x35),
        "chi_minor1(zirgen/circuit/keccak/keccak.zir:700)");
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:713)
    ToBits_21_Struct x156 = exec_ToBits_21_(ctx, x62, LAYOUT_LOOKUP(x118, unpack_2nxp1));
    NondetRegStruct21Array x157 = x156._super;
    Val x158 = x157[0]._super;
    Val x159 = x157[1]._super;
    Val x160 = x157[2]._super;
    Val x161 = x157[3]._super;
    Val x162 = x157[4]._super;
    Val x163 = x157[5]._super;
    Val x164 = x157[6]._super;
    Val x165 = x157[7]._super;
    Val x166 = x157[8]._super;
    Val x167 = x157[9]._super;
    Val x168 = x157[10]._super;
    Val x169 = x157[11]._super;
    Val x170 = x157[12]._super;
    Val x171 = x157[13]._super;
    Val x172 = x157[14]._super;
    Val x173 = x157[15]._super;
    Val x174 = x157[16]._super;
    Val x175 = x157[17]._super;
    Val x176 = x157[18]._super;
    Val x177 = x157[19]._super;
    Val x178 = x157[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:714)
    Val x179 =
        ((((((x158 + (x159 * Val(2))) + (x160 * Val(4))) + (x161 * Val(8))) + (x162 * Val(16))) +
          (x163 * Val(32))) +
         (x164 * Val(64)));
    Val x180 = ((((((x179 + (x165 * Val(128))) + (x166 * Val(256))) + (x167 * Val(512))) +
                  (x168 * Val(1024))) +
                 (x169 * Val(2048))) +
                (x170 * Val(4096)));
    Val x181 = ((((((x180 + (x171 * Val(8192))) + (x172 * Val(16384))) + (x173 * Val(32768))) +
                  (x174 * Val(65536))) +
                 (x175 * Val(131072))) +
                (x176 * Val(262144)));
    EQZ((((x181 + (x177 * Val(524288))) + (x178 * Val(1048576))) - x62),
        "chi_minor1(zirgen/circuit/keccak/keccak.zir:714)");
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:726)
    ToBits_21_Struct x182 = exec_ToBits_21_(ctx, x128, LAYOUT_LOOKUP(x118, unpack_2nxp2));
    NondetRegStruct21Array x183 = x182._super;
    Val x184 = x183[0]._super;
    Val x185 = x183[1]._super;
    Val x186 = x183[2]._super;
    Val x187 = x183[3]._super;
    Val x188 = x183[4]._super;
    Val x189 = x183[5]._super;
    Val x190 = x183[6]._super;
    Val x191 = x183[7]._super;
    Val x192 = x183[8]._super;
    Val x193 = x183[9]._super;
    Val x194 = x183[10]._super;
    Val x195 = x183[11]._super;
    Val x196 = x183[12]._super;
    Val x197 = x183[13]._super;
    Val x198 = x183[14]._super;
    Val x199 = x183[15]._super;
    Val x200 = x183[16]._super;
    Val x201 = x183[17]._super;
    Val x202 = x183[18]._super;
    Val x203 = x183[19]._super;
    Val x204 = x183[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:727)
    Val x205 =
        ((((((x184 + (x185 * Val(2))) + (x186 * Val(4))) + (x187 * Val(8))) + (x188 * Val(16))) +
          (x189 * Val(32))) +
         (x190 * Val(64)));
    Val x206 = ((((((x205 + (x191 * Val(128))) + (x192 * Val(256))) + (x193 * Val(512))) +
                  (x194 * Val(1024))) +
                 (x195 * Val(2048))) +
                (x196 * Val(4096)));
    Val x207 = ((((((x206 + (x197 * Val(8192))) + (x198 * Val(16384))) + (x199 * Val(32768))) +
                  (x200 * Val(65536))) +
                 (x201 * Val(131072))) +
                (x202 * Val(262144)));
    EQZ((((x207 + (x203 * Val(524288))) + (x204 * Val(1048576))) - x128),
        "chi_minor1(zirgen/circuit/keccak/keccak.zir:727)");
    // andnxor(zirgen/circuit/keccak/keccak.zir:118)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:729)
    Val x208 = ((Val(1) - x158) * x184);
    Val x209 = ((Val(1) - x159) * x185);
    Val x210 = ((Val(1) - x160) * x186);
    Val x211 = ((Val(1) - x161) * x187);
    Val x212 = ((Val(1) - x162) * x188);
    Val x213 = ((Val(1) - x163) * x189);
    Val x214 = ((Val(1) - x164) * x190);
    Val x215 = ((Val(1) - x165) * x191);
    Val x216 = ((Val(1) - x166) * x192);
    Val x217 = ((Val(1) - x167) * x193);
    Val x218 = ((Val(1) - x168) * x194);
    Val x219 = ((Val(1) - x169) * x195);
    Val x220 = ((Val(1) - x170) * x196);
    Val x221 = ((Val(1) - x171) * x197);
    Val x222 = ((Val(1) - x172) * x198);
    Val x223 = ((Val(1) - x173) * x199);
    Val x224 = ((Val(1) - x174) * x200);
    Val x225 = ((Val(1) - x175) * x201);
    Val x226 = ((Val(1) - x176) * x202);
    Val x227 = ((Val(1) - x177) * x203);
    Val x228 = ((Val(1) - x178) * x204);
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:730)
    Val x229 = (((((x131 + x208) - ((x131 * Val(2)) * x208)) +
                  (((x132 + x209) - (x152 * x209)) * Val(2))) +
                 (((x133 + x210) - ((x133 * Val(2)) * x210)) * Val(4))) +
                (((x134 + x211) - ((x134 * Val(2)) * x211)) * Val(8)));
    Val x230 = (((x229 + (((x135 + x212) - ((x135 * Val(2)) * x212)) * Val(16))) +
                 (((x136 + x213) - ((x136 * Val(2)) * x213)) * Val(32))) +
                (((x137 + x214) - ((x137 * Val(2)) * x214)) * Val(64)));
    Val x231 = (((x230 + (((x138 + x215) - ((x138 * Val(2)) * x215)) * Val(128))) +
                 (((x139 + x216) - ((x139 * Val(2)) * x216)) * Val(256))) +
                (((x140 + x217) - ((x140 * Val(2)) * x217)) * Val(512)));
    Val x232 = (((x231 + (((x141 + x218) - ((x141 * Val(2)) * x218)) * Val(1024))) +
                 (((x142 + x219) - ((x142 * Val(2)) * x219)) * Val(2048))) +
                (((x143 + x220) - ((x143 * Val(2)) * x220)) * Val(4096)));
    Val x233 = (((x232 + (((x144 + x221) - ((x144 * Val(2)) * x221)) * Val(8192))) +
                 (((x145 + x222) - ((x145 * Val(2)) * x222)) * Val(16384))) +
                (((x146 + x223) - ((x146 * Val(2)) * x223)) * Val(32768)));
    Val x234 = (((x233 + (((x147 + x224) - ((x147 * Val(2)) * x224)) * Val(65536))) +
                 (((x148 + x225) - ((x148 * Val(2)) * x225)) * Val(131072))) +
                (((x149 + x226) - ((x149 * Val(2)) * x226)) * Val(262144)));
    NondetRegStruct x235 =
        exec_Reg(ctx,
                 ((x234 + (((x150 + x227) - ((x150 * Val(2)) * x227)) * Val(524288))) +
                  (((x151 + x228) - ((x151 * Val(2)) * x228)) * Val(1048576))),
                 LAYOUT_LOOKUP(x118, res3n));
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:733)
    RetTupleStruct x236 =
        exec_RetTuple(ctx,
                      x119,
                      x120,
                      x121,
                      x122,
                      x123,
                      Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), x235._super},
                      Val(5),
                      Val(14),
                      x124,
                      x125,
                      x126,
                      LAYOUT_LOOKUP(x118, _super));
  }
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:685)
  RetTupleStruct x237 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x237;
}
RetTupleStruct execChiMinor0_3__4_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<ChiMinor0_3__4_Layout> layout1) {
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:542)
  NondetRegStruct24Array x2 = arg0.arrD;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:546)
  Val x3 = x2[6]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:554)
  ToBits_22_Struct x4 = exec_ToBits_22_(ctx, x3, LAYOUT_LOOKUP(layout1, unpack_0xp1));
  NondetRegStruct22Array x5 = x4._super;
  Val x6 = x5[0]._super;
  Val x7 = x5[1]._super;
  Val x8 = x5[2]._super;
  Val x9 = x5[3]._super;
  Val x10 = x5[4]._super;
  Val x11 = x5[5]._super;
  Val x12 = x5[6]._super;
  Val x13 = x5[7]._super;
  Val x14 = x5[8]._super;
  Val x15 = x5[9]._super;
  Val x16 = x5[10]._super;
  Val x17 = x5[11]._super;
  Val x18 = x5[12]._super;
  Val x19 = x5[13]._super;
  Val x20 = x5[14]._super;
  Val x21 = x5[15]._super;
  Val x22 = x5[16]._super;
  Val x23 = x5[17]._super;
  Val x24 = x5[18]._super;
  Val x25 = x5[19]._super;
  Val x26 = x5[20]._super;
  Val x27 = x5[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:555)
  Val x28 = ((((((x6 + (x7 * Val(2))) + (x8 * Val(4))) + (x9 * Val(8))) + (x10 * Val(16))) +
              (x11 * Val(32))) +
             (x12 * Val(64)));
  Val x29 =
      ((((((x28 + (x13 * Val(128))) + (x14 * Val(256))) + (x15 * Val(512))) + (x16 * Val(1024))) +
        (x17 * Val(2048))) +
       (x18 * Val(4096)));
  Val x30 = ((((((x29 + (x19 * Val(8192))) + (x20 * Val(16384))) + (x21 * Val(32768))) +
               (x22 * Val(65536))) +
              (x23 * Val(131072))) +
             (x24 * Val(262144)));
  EQZ(((((x30 + (x25 * Val(524288))) + (x26 * Val(1048576))) + (x27 * Val(2097152))) - x3),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:555)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:559)
  Val x31 = x2[7]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:567)
  ToBits_21_Struct x32 = exec_ToBits_21_(ctx, x31, LAYOUT_LOOKUP(layout1, unpack_1xp1));
  NondetRegStruct21Array x33 = x32._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:568)
  Val x55 = ((((((x34 + (x35 * Val(2))) + (x36 * Val(4))) + (x37 * Val(8))) + (x38 * Val(16))) +
              (x39 * Val(32))) +
             (x40 * Val(64)));
  Val x56 =
      ((((((x55 + (x41 * Val(128))) + (x42 * Val(256))) + (x43 * Val(512))) + (x44 * Val(1024))) +
        (x45 * Val(2048))) +
       (x46 * Val(4096)));
  Val x57 = ((((((x56 + (x47 * Val(8192))) + (x48 * Val(16384))) + (x49 * Val(32768))) +
               (x50 * Val(65536))) +
              (x51 * Val(131072))) +
             (x52 * Val(262144)));
  EQZ((((x57 + (x53 * Val(524288))) + (x54 * Val(1048576))) - x31),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:568)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:542)
  NondetRegStruct22Array x58 = arg0.arrC;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:573)
  Val x59 = x58[16]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:581)
  ToBits_22_Struct x60 = exec_ToBits_22_(ctx, x59, LAYOUT_LOOKUP(layout1, unpack_0xp2));
  NondetRegStruct22Array x61 = x60._super;
  Val x62 = x61[0]._super;
  Val x63 = x61[1]._super;
  Val x64 = x61[2]._super;
  Val x65 = x61[3]._super;
  Val x66 = x61[4]._super;
  Val x67 = x61[5]._super;
  Val x68 = x61[6]._super;
  Val x69 = x61[7]._super;
  Val x70 = x61[8]._super;
  Val x71 = x61[9]._super;
  Val x72 = x61[10]._super;
  Val x73 = x61[11]._super;
  Val x74 = x61[12]._super;
  Val x75 = x61[13]._super;
  Val x76 = x61[14]._super;
  Val x77 = x61[15]._super;
  Val x78 = x61[16]._super;
  Val x79 = x61[17]._super;
  Val x80 = x61[18]._super;
  Val x81 = x61[19]._super;
  Val x82 = x61[20]._super;
  Val x83 = x61[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:582)
  Val x84 = ((((((x62 + (x63 * Val(2))) + (x64 * Val(4))) + (x65 * Val(8))) + (x66 * Val(16))) +
              (x67 * Val(32))) +
             (x68 * Val(64)));
  Val x85 =
      ((((((x84 + (x69 * Val(128))) + (x70 * Val(256))) + (x71 * Val(512))) + (x72 * Val(1024))) +
        (x73 * Val(2048))) +
       (x74 * Val(4096)));
  Val x86 = ((((((x85 + (x75 * Val(8192))) + (x76 * Val(16384))) + (x77 * Val(32768))) +
               (x78 * Val(65536))) +
              (x79 * Val(131072))) +
             (x80 * Val(262144)));
  EQZ(((((x86 + (x81 * Val(524288))) + (x82 * Val(1048576))) + (x83 * Val(2097152))) - x59),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:582)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:586)
  Val x87 = x58[17]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:594)
  ToBits_21_Struct x88 = exec_ToBits_21_(ctx, x87, LAYOUT_LOOKUP(layout1, unpack_1xp2));
  NondetRegStruct21Array x89 = x88._super;
  Val x90 = x89[0]._super;
  Val x91 = x89[1]._super;
  Val x92 = x89[2]._super;
  Val x93 = x89[3]._super;
  Val x94 = x89[4]._super;
  Val x95 = x89[5]._super;
  Val x96 = x89[6]._super;
  Val x97 = x89[7]._super;
  Val x98 = x89[8]._super;
  Val x99 = x89[9]._super;
  Val x100 = x89[10]._super;
  Val x101 = x89[11]._super;
  Val x102 = x89[12]._super;
  Val x103 = x89[13]._super;
  Val x104 = x89[14]._super;
  Val x105 = x89[15]._super;
  Val x106 = x89[16]._super;
  Val x107 = x89[17]._super;
  Val x108 = x89[18]._super;
  Val x109 = x89[19]._super;
  Val x110 = x89[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:595)
  Val x111 = ((((((x90 + (x91 * Val(2))) + (x92 * Val(4))) + (x93 * Val(8))) + (x94 * Val(16))) +
               (x95 * Val(32))) +
              (x96 * Val(64)));
  Val x112 =
      ((((((x111 + (x97 * Val(128))) + (x98 * Val(256))) + (x99 * Val(512))) + (x100 * Val(1024))) +
        (x101 * Val(2048))) +
       (x102 * Val(4096)));
  Val x113 = ((((((x112 + (x103 * Val(8192))) + (x104 * Val(16384))) + (x105 * Val(32768))) +
                (x106 * Val(65536))) +
               (x107 * Val(131072))) +
              (x108 * Val(262144)));
  EQZ((((x113 + (x109 * Val(524288))) + (x110 * Val(1048576))) - x87),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:595)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:599)
  Val x114 = x2[3]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:607)
  ToBits_22_Struct x115 = exec_ToBits_22_(ctx, x114, LAYOUT_LOOKUP(layout1, unpack_0x));
  NondetRegStruct22Array x116 = x115._super;
  Val x117 = x116[0]._super;
  Val x118 = x116[1]._super;
  Val x119 = x116[2]._super;
  Val x120 = x116[3]._super;
  Val x121 = x116[4]._super;
  Val x122 = x116[5]._super;
  Val x123 = x116[6]._super;
  Val x124 = x116[7]._super;
  Val x125 = x116[8]._super;
  Val x126 = x116[9]._super;
  Val x127 = x116[10]._super;
  Val x128 = x116[11]._super;
  Val x129 = x116[12]._super;
  Val x130 = x116[13]._super;
  Val x131 = x116[14]._super;
  Val x132 = x116[15]._super;
  Val x133 = x116[16]._super;
  Val x134 = x116[17]._super;
  Val x135 = x116[18]._super;
  Val x136 = x116[19]._super;
  Val x137 = x116[20]._super;
  Val x138 = x116[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:608)
  Val x139 = (x118 * Val(2));
  Val x140 = ((((((x117 + x139) + (x119 * Val(4))) + (x120 * Val(8))) + (x121 * Val(16))) +
               (x122 * Val(32))) +
              (x123 * Val(64)));
  Val x141 = ((((((x140 + (x124 * Val(128))) + (x125 * Val(256))) + (x126 * Val(512))) +
                (x127 * Val(1024))) +
               (x128 * Val(2048))) +
              (x129 * Val(4096)));
  Val x142 = ((((((x141 + (x130 * Val(8192))) + (x131 * Val(16384))) + (x132 * Val(32768))) +
                (x133 * Val(65536))) +
               (x134 * Val(131072))) +
              (x135 * Val(262144)));
  EQZ(((((x142 + (x136 * Val(524288))) + (x137 * Val(1048576))) + (x138 * Val(2097152))) - x114),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:608)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:612)
  Val x143 = x2[4]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:620)
  ToBits_21_Struct x144 = exec_ToBits_21_(ctx, x143, LAYOUT_LOOKUP(layout1, unpack_1x));
  NondetRegStruct21Array x145 = x144._super;
  Val x146 = x145[0]._super;
  Val x147 = x145[1]._super;
  Val x148 = x145[2]._super;
  Val x149 = x145[3]._super;
  Val x150 = x145[4]._super;
  Val x151 = x145[5]._super;
  Val x152 = x145[6]._super;
  Val x153 = x145[7]._super;
  Val x154 = x145[8]._super;
  Val x155 = x145[9]._super;
  Val x156 = x145[10]._super;
  Val x157 = x145[11]._super;
  Val x158 = x145[12]._super;
  Val x159 = x145[13]._super;
  Val x160 = x145[14]._super;
  Val x161 = x145[15]._super;
  Val x162 = x145[16]._super;
  Val x163 = x145[17]._super;
  Val x164 = x145[18]._super;
  Val x165 = x145[19]._super;
  Val x166 = x145[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:621)
  Val x167 = (x147 * Val(2));
  Val x168 = ((((((x146 + x167) + (x148 * Val(4))) + (x149 * Val(8))) + (x150 * Val(16))) +
               (x151 * Val(32))) +
              (x152 * Val(64)));
  Val x169 = ((((((x168 + (x153 * Val(128))) + (x154 * Val(256))) + (x155 * Val(512))) +
                (x156 * Val(1024))) +
               (x157 * Val(2048))) +
              (x158 * Val(4096)));
  Val x170 = ((((((x169 + (x159 * Val(8192))) + (x160 * Val(16384))) + (x161 * Val(32768))) +
                (x162 * Val(65536))) +
               (x163 * Val(131072))) +
              (x164 * Val(262144)));
  EQZ((((x170 + (x165 * Val(524288))) + (x166 * Val(1048576))) - x143),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:621)");
  // andnxor(zirgen/circuit/keccak/keccak.zir:118)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:623)
  Val x171 = ((Val(1) - x6) * x62);
  Val x172 = ((Val(1) - x7) * x63);
  Val x173 = ((Val(1) - x8) * x64);
  Val x174 = ((Val(1) - x9) * x65);
  Val x175 = ((Val(1) - x10) * x66);
  Val x176 = ((Val(1) - x11) * x67);
  Val x177 = ((Val(1) - x12) * x68);
  Val x178 = ((Val(1) - x13) * x69);
  Val x179 = ((Val(1) - x14) * x70);
  Val x180 = ((Val(1) - x15) * x71);
  Val x181 = ((Val(1) - x16) * x72);
  Val x182 = ((Val(1) - x17) * x73);
  Val x183 = ((Val(1) - x18) * x74);
  Val x184 = ((Val(1) - x19) * x75);
  Val x185 = ((Val(1) - x20) * x76);
  Val x186 = ((Val(1) - x21) * x77);
  Val x187 = ((Val(1) - x22) * x78);
  Val x188 = ((Val(1) - x23) * x79);
  Val x189 = ((Val(1) - x24) * x80);
  Val x190 = ((Val(1) - x25) * x81);
  Val x191 = ((Val(1) - x26) * x82);
  Val x192 = ((Val(1) - x27) * x83);
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:624)
  Val x193 = ((Val(1) - x34) * x90);
  Val x194 = ((Val(1) - x35) * x91);
  Val x195 = ((Val(1) - x36) * x92);
  Val x196 = ((Val(1) - x37) * x93);
  Val x197 = ((Val(1) - x38) * x94);
  Val x198 = ((Val(1) - x39) * x95);
  Val x199 = ((Val(1) - x40) * x96);
  Val x200 = ((Val(1) - x41) * x97);
  Val x201 = ((Val(1) - x42) * x98);
  Val x202 = ((Val(1) - x43) * x99);
  Val x203 = ((Val(1) - x44) * x100);
  Val x204 = ((Val(1) - x45) * x101);
  Val x205 = ((Val(1) - x46) * x102);
  Val x206 = ((Val(1) - x47) * x103);
  Val x207 = ((Val(1) - x48) * x104);
  Val x208 = ((Val(1) - x49) * x105);
  Val x209 = ((Val(1) - x50) * x106);
  Val x210 = ((Val(1) - x51) * x107);
  Val x211 = ((Val(1) - x52) * x108);
  Val x212 = ((Val(1) - x53) * x109);
  Val x213 = ((Val(1) - x54) * x110);
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:625)
  Val x214 =
      (((((x117 + x171) - ((x117 * Val(2)) * x171)) + (((x118 + x172) - (x139 * x172)) * Val(2))) +
        (((x119 + x173) - ((x119 * Val(2)) * x173)) * Val(4))) +
       (((x120 + x174) - ((x120 * Val(2)) * x174)) * Val(8)));
  Val x215 = (((x214 + (((x121 + x175) - ((x121 * Val(2)) * x175)) * Val(16))) +
               (((x122 + x176) - ((x122 * Val(2)) * x176)) * Val(32))) +
              (((x123 + x177) - ((x123 * Val(2)) * x177)) * Val(64)));
  Val x216 = (((x215 + (((x124 + x178) - ((x124 * Val(2)) * x178)) * Val(128))) +
               (((x125 + x179) - ((x125 * Val(2)) * x179)) * Val(256))) +
              (((x126 + x180) - ((x126 * Val(2)) * x180)) * Val(512)));
  Val x217 = (((x216 + (((x127 + x181) - ((x127 * Val(2)) * x181)) * Val(1024))) +
               (((x128 + x182) - ((x128 * Val(2)) * x182)) * Val(2048))) +
              (((x129 + x183) - ((x129 * Val(2)) * x183)) * Val(4096)));
  Val x218 = (((x217 + (((x130 + x184) - ((x130 * Val(2)) * x184)) * Val(8192))) +
               (((x131 + x185) - ((x131 * Val(2)) * x185)) * Val(16384))) +
              (((x132 + x186) - ((x132 * Val(2)) * x186)) * Val(32768)));
  Val x219 = (((x218 + (((x133 + x187) - ((x133 * Val(2)) * x187)) * Val(65536))) +
               (((x134 + x188) - ((x134 * Val(2)) * x188)) * Val(131072))) +
              (((x135 + x189) - ((x135 * Val(2)) * x189)) * Val(262144)));
  Val x220 = (((x219 + (((x136 + x190) - ((x136 * Val(2)) * x190)) * Val(524288))) +
               (((x137 + x191) - ((x137 * Val(2)) * x191)) * Val(1048576))) +
              (((x138 + x192) - ((x138 * Val(2)) * x192)) * Val(2097152)));
  NondetRegStruct x221 = exec_Reg(ctx, x220, LAYOUT_LOOKUP(layout1, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  Val x222 =
      (((((x146 + x193) - ((x146 * Val(2)) * x193)) + (((x147 + x194) - (x167 * x194)) * Val(2))) +
        (((x148 + x195) - ((x148 * Val(2)) * x195)) * Val(4))) +
       (((x149 + x196) - ((x149 * Val(2)) * x196)) * Val(8)));
  Val x223 = (((x222 + (((x150 + x197) - ((x150 * Val(2)) * x197)) * Val(16))) +
               (((x151 + x198) - ((x151 * Val(2)) * x198)) * Val(32))) +
              (((x152 + x199) - ((x152 * Val(2)) * x199)) * Val(64)));
  Val x224 = (((x223 + (((x153 + x200) - ((x153 * Val(2)) * x200)) * Val(128))) +
               (((x154 + x201) - ((x154 * Val(2)) * x201)) * Val(256))) +
              (((x155 + x202) - ((x155 * Val(2)) * x202)) * Val(512)));
  Val x225 = (((x224 + (((x156 + x203) - ((x156 * Val(2)) * x203)) * Val(1024))) +
               (((x157 + x204) - ((x157 * Val(2)) * x204)) * Val(2048))) +
              (((x158 + x205) - ((x158 * Val(2)) * x205)) * Val(4096)));
  Val x226 = (((x225 + (((x159 + x206) - ((x159 * Val(2)) * x206)) * Val(8192))) +
               (((x160 + x207) - ((x160 * Val(2)) * x207)) * Val(16384))) +
              (((x161 + x208) - ((x161 * Val(2)) * x208)) * Val(32768)));
  Val x227 = (((x226 + (((x162 + x209) - ((x162 * Val(2)) * x209)) * Val(65536))) +
               (((x163 + x210) - ((x163 * Val(2)) * x210)) * Val(131072))) +
              (((x164 + x211) - ((x164 * Val(2)) * x211)) * Val(262144)));
  NondetRegStruct x228 =
      exec_Reg(ctx,
               ((x227 + (((x165 + x212) - ((x165 * Val(2)) * x212)) * Val(524288))) +
                (((x166 + x213) - ((x166 * Val(2)) * x213)) * Val(1048576))),
               LAYOUT_LOOKUP(layout1, _1));
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:630)
  Val22Array x229 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x230 = exec_RetTuple(
      ctx,
      x229,
      x229,
      x229,
      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), x221._super, x228._super},
      x229,
      x229,
      Val(6),
      Val(14),
      arg0.rnd._super,
      arg0.blk._super,
      arg0.midx._super,
      LAYOUT_LOOKUP(layout1, _super));
  return x230;
}
RetTupleStruct execChiMinor0_4__4_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<ChiMinor0_4__4_Layout> layout1) {
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:542)
  NondetRegStruct22Array x2 = arg0.arrC;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:546)
  Val x3 = x2[16]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:554)
  ToBits_22_Struct x4 = exec_ToBits_22_(ctx, x3, LAYOUT_LOOKUP(layout1, unpack_0xp1));
  NondetRegStruct22Array x5 = x4._super;
  Val x6 = x5[0]._super;
  Val x7 = x5[1]._super;
  Val x8 = x5[2]._super;
  Val x9 = x5[3]._super;
  Val x10 = x5[4]._super;
  Val x11 = x5[5]._super;
  Val x12 = x5[6]._super;
  Val x13 = x5[7]._super;
  Val x14 = x5[8]._super;
  Val x15 = x5[9]._super;
  Val x16 = x5[10]._super;
  Val x17 = x5[11]._super;
  Val x18 = x5[12]._super;
  Val x19 = x5[13]._super;
  Val x20 = x5[14]._super;
  Val x21 = x5[15]._super;
  Val x22 = x5[16]._super;
  Val x23 = x5[17]._super;
  Val x24 = x5[18]._super;
  Val x25 = x5[19]._super;
  Val x26 = x5[20]._super;
  Val x27 = x5[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:555)
  Val x28 = ((((((x6 + (x7 * Val(2))) + (x8 * Val(4))) + (x9 * Val(8))) + (x10 * Val(16))) +
              (x11 * Val(32))) +
             (x12 * Val(64)));
  Val x29 =
      ((((((x28 + (x13 * Val(128))) + (x14 * Val(256))) + (x15 * Val(512))) + (x16 * Val(1024))) +
        (x17 * Val(2048))) +
       (x18 * Val(4096)));
  Val x30 = ((((((x29 + (x19 * Val(8192))) + (x20 * Val(16384))) + (x21 * Val(32768))) +
               (x22 * Val(65536))) +
              (x23 * Val(131072))) +
             (x24 * Val(262144)));
  EQZ(((((x30 + (x25 * Val(524288))) + (x26 * Val(1048576))) + (x27 * Val(2097152))) - x3),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:555)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:559)
  Val x31 = x2[17]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:567)
  ToBits_21_Struct x32 = exec_ToBits_21_(ctx, x31, LAYOUT_LOOKUP(layout1, unpack_1xp1));
  NondetRegStruct21Array x33 = x32._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:568)
  Val x55 = ((((((x34 + (x35 * Val(2))) + (x36 * Val(4))) + (x37 * Val(8))) + (x38 * Val(16))) +
              (x39 * Val(32))) +
             (x40 * Val(64)));
  Val x56 =
      ((((((x55 + (x41 * Val(128))) + (x42 * Val(256))) + (x43 * Val(512))) + (x44 * Val(1024))) +
        (x45 * Val(2048))) +
       (x46 * Val(4096)));
  Val x57 = ((((((x56 + (x47 * Val(8192))) + (x48 * Val(16384))) + (x49 * Val(32768))) +
               (x50 * Val(65536))) +
              (x51 * Val(131072))) +
             (x52 * Val(262144)));
  EQZ((((x57 + (x53 * Val(524288))) + (x54 * Val(1048576))) - x31),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:568)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:573)
  Val x58 = x2[19]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:581)
  ToBits_22_Struct x59 = exec_ToBits_22_(ctx, x58, LAYOUT_LOOKUP(layout1, unpack_0xp2));
  NondetRegStruct22Array x60 = x59._super;
  Val x61 = x60[0]._super;
  Val x62 = x60[1]._super;
  Val x63 = x60[2]._super;
  Val x64 = x60[3]._super;
  Val x65 = x60[4]._super;
  Val x66 = x60[5]._super;
  Val x67 = x60[6]._super;
  Val x68 = x60[7]._super;
  Val x69 = x60[8]._super;
  Val x70 = x60[9]._super;
  Val x71 = x60[10]._super;
  Val x72 = x60[11]._super;
  Val x73 = x60[12]._super;
  Val x74 = x60[13]._super;
  Val x75 = x60[14]._super;
  Val x76 = x60[15]._super;
  Val x77 = x60[16]._super;
  Val x78 = x60[17]._super;
  Val x79 = x60[18]._super;
  Val x80 = x60[19]._super;
  Val x81 = x60[20]._super;
  Val x82 = x60[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:582)
  Val x83 = ((((((x61 + (x62 * Val(2))) + (x63 * Val(4))) + (x64 * Val(8))) + (x65 * Val(16))) +
              (x66 * Val(32))) +
             (x67 * Val(64)));
  Val x84 =
      ((((((x83 + (x68 * Val(128))) + (x69 * Val(256))) + (x70 * Val(512))) + (x71 * Val(1024))) +
        (x72 * Val(2048))) +
       (x73 * Val(4096)));
  Val x85 = ((((((x84 + (x74 * Val(8192))) + (x75 * Val(16384))) + (x76 * Val(32768))) +
               (x77 * Val(65536))) +
              (x78 * Val(131072))) +
             (x79 * Val(262144)));
  EQZ(((((x85 + (x80 * Val(524288))) + (x81 * Val(1048576))) + (x82 * Val(2097152))) - x58),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:582)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:586)
  Val x86 = x2[20]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:594)
  ToBits_21_Struct x87 = exec_ToBits_21_(ctx, x86, LAYOUT_LOOKUP(layout1, unpack_1xp2));
  NondetRegStruct21Array x88 = x87._super;
  Val x89 = x88[0]._super;
  Val x90 = x88[1]._super;
  Val x91 = x88[2]._super;
  Val x92 = x88[3]._super;
  Val x93 = x88[4]._super;
  Val x94 = x88[5]._super;
  Val x95 = x88[6]._super;
  Val x96 = x88[7]._super;
  Val x97 = x88[8]._super;
  Val x98 = x88[9]._super;
  Val x99 = x88[10]._super;
  Val x100 = x88[11]._super;
  Val x101 = x88[12]._super;
  Val x102 = x88[13]._super;
  Val x103 = x88[14]._super;
  Val x104 = x88[15]._super;
  Val x105 = x88[16]._super;
  Val x106 = x88[17]._super;
  Val x107 = x88[18]._super;
  Val x108 = x88[19]._super;
  Val x109 = x88[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:595)
  Val x110 = ((((((x89 + (x90 * Val(2))) + (x91 * Val(4))) + (x92 * Val(8))) + (x93 * Val(16))) +
               (x94 * Val(32))) +
              (x95 * Val(64)));
  Val x111 =
      ((((((x110 + (x96 * Val(128))) + (x97 * Val(256))) + (x98 * Val(512))) + (x99 * Val(1024))) +
        (x100 * Val(2048))) +
       (x101 * Val(4096)));
  Val x112 = ((((((x111 + (x102 * Val(8192))) + (x103 * Val(16384))) + (x104 * Val(32768))) +
                (x105 * Val(65536))) +
               (x106 * Val(131072))) +
              (x107 * Val(262144)));
  EQZ((((x112 + (x108 * Val(524288))) + (x109 * Val(1048576))) - x86),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:595)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:542)
  NondetRegStruct24Array x113 = arg0.arrD;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:599)
  Val x114 = x113[6]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:607)
  ToBits_22_Struct x115 = exec_ToBits_22_(ctx, x114, LAYOUT_LOOKUP(layout1, unpack_0x));
  NondetRegStruct22Array x116 = x115._super;
  Val x117 = x116[0]._super;
  Val x118 = x116[1]._super;
  Val x119 = x116[2]._super;
  Val x120 = x116[3]._super;
  Val x121 = x116[4]._super;
  Val x122 = x116[5]._super;
  Val x123 = x116[6]._super;
  Val x124 = x116[7]._super;
  Val x125 = x116[8]._super;
  Val x126 = x116[9]._super;
  Val x127 = x116[10]._super;
  Val x128 = x116[11]._super;
  Val x129 = x116[12]._super;
  Val x130 = x116[13]._super;
  Val x131 = x116[14]._super;
  Val x132 = x116[15]._super;
  Val x133 = x116[16]._super;
  Val x134 = x116[17]._super;
  Val x135 = x116[18]._super;
  Val x136 = x116[19]._super;
  Val x137 = x116[20]._super;
  Val x138 = x116[21]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:608)
  Val x139 = (x118 * Val(2));
  Val x140 = ((((((x117 + x139) + (x119 * Val(4))) + (x120 * Val(8))) + (x121 * Val(16))) +
               (x122 * Val(32))) +
              (x123 * Val(64)));
  Val x141 = ((((((x140 + (x124 * Val(128))) + (x125 * Val(256))) + (x126 * Val(512))) +
                (x127 * Val(1024))) +
               (x128 * Val(2048))) +
              (x129 * Val(4096)));
  Val x142 = ((((((x141 + (x130 * Val(8192))) + (x131 * Val(16384))) + (x132 * Val(32768))) +
                (x133 * Val(65536))) +
               (x134 * Val(131072))) +
              (x135 * Val(262144)));
  EQZ(((((x142 + (x136 * Val(524288))) + (x137 * Val(1048576))) + (x138 * Val(2097152))) - x114),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:608)");
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:612)
  Val x143 = x113[7]._super;
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:620)
  ToBits_21_Struct x144 = exec_ToBits_21_(ctx, x143, LAYOUT_LOOKUP(layout1, unpack_1x));
  NondetRegStruct21Array x145 = x144._super;
  Val x146 = x145[0]._super;
  Val x147 = x145[1]._super;
  Val x148 = x145[2]._super;
  Val x149 = x145[3]._super;
  Val x150 = x145[4]._super;
  Val x151 = x145[5]._super;
  Val x152 = x145[6]._super;
  Val x153 = x145[7]._super;
  Val x154 = x145[8]._super;
  Val x155 = x145[9]._super;
  Val x156 = x145[10]._super;
  Val x157 = x145[11]._super;
  Val x158 = x145[12]._super;
  Val x159 = x145[13]._super;
  Val x160 = x145[14]._super;
  Val x161 = x145[15]._super;
  Val x162 = x145[16]._super;
  Val x163 = x145[17]._super;
  Val x164 = x145[18]._super;
  Val x165 = x145[19]._super;
  Val x166 = x145[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:621)
  Val x167 = (x147 * Val(2));
  Val x168 = ((((((x146 + x167) + (x148 * Val(4))) + (x149 * Val(8))) + (x150 * Val(16))) +
               (x151 * Val(32))) +
              (x152 * Val(64)));
  Val x169 = ((((((x168 + (x153 * Val(128))) + (x154 * Val(256))) + (x155 * Val(512))) +
                (x156 * Val(1024))) +
               (x157 * Val(2048))) +
              (x158 * Val(4096)));
  Val x170 = ((((((x169 + (x159 * Val(8192))) + (x160 * Val(16384))) + (x161 * Val(32768))) +
                (x162 * Val(65536))) +
               (x163 * Val(131072))) +
              (x164 * Val(262144)));
  EQZ((((x170 + (x165 * Val(524288))) + (x166 * Val(1048576))) - x143),
      "chi_minor0(zirgen/circuit/keccak/keccak.zir:621)");
  // andnxor(zirgen/circuit/keccak/keccak.zir:118)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:623)
  Val x171 = ((Val(1) - x6) * x61);
  Val x172 = ((Val(1) - x7) * x62);
  Val x173 = ((Val(1) - x8) * x63);
  Val x174 = ((Val(1) - x9) * x64);
  Val x175 = ((Val(1) - x10) * x65);
  Val x176 = ((Val(1) - x11) * x66);
  Val x177 = ((Val(1) - x12) * x67);
  Val x178 = ((Val(1) - x13) * x68);
  Val x179 = ((Val(1) - x14) * x69);
  Val x180 = ((Val(1) - x15) * x70);
  Val x181 = ((Val(1) - x16) * x71);
  Val x182 = ((Val(1) - x17) * x72);
  Val x183 = ((Val(1) - x18) * x73);
  Val x184 = ((Val(1) - x19) * x74);
  Val x185 = ((Val(1) - x20) * x75);
  Val x186 = ((Val(1) - x21) * x76);
  Val x187 = ((Val(1) - x22) * x77);
  Val x188 = ((Val(1) - x23) * x78);
  Val x189 = ((Val(1) - x24) * x79);
  Val x190 = ((Val(1) - x25) * x80);
  Val x191 = ((Val(1) - x26) * x81);
  Val x192 = ((Val(1) - x27) * x82);
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:624)
  Val x193 = ((Val(1) - x34) * x89);
  Val x194 = ((Val(1) - x35) * x90);
  Val x195 = ((Val(1) - x36) * x91);
  Val x196 = ((Val(1) - x37) * x92);
  Val x197 = ((Val(1) - x38) * x93);
  Val x198 = ((Val(1) - x39) * x94);
  Val x199 = ((Val(1) - x40) * x95);
  Val x200 = ((Val(1) - x41) * x96);
  Val x201 = ((Val(1) - x42) * x97);
  Val x202 = ((Val(1) - x43) * x98);
  Val x203 = ((Val(1) - x44) * x99);
  Val x204 = ((Val(1) - x45) * x100);
  Val x205 = ((Val(1) - x46) * x101);
  Val x206 = ((Val(1) - x47) * x102);
  Val x207 = ((Val(1) - x48) * x103);
  Val x208 = ((Val(1) - x49) * x104);
  Val x209 = ((Val(1) - x50) * x105);
  Val x210 = ((Val(1) - x51) * x106);
  Val x211 = ((Val(1) - x52) * x107);
  Val x212 = ((Val(1) - x53) * x108);
  Val x213 = ((Val(1) - x54) * x109);
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:625)
  Val x214 =
      (((((x117 + x171) - ((x117 * Val(2)) * x171)) + (((x118 + x172) - (x139 * x172)) * Val(2))) +
        (((x119 + x173) - ((x119 * Val(2)) * x173)) * Val(4))) +
       (((x120 + x174) - ((x120 * Val(2)) * x174)) * Val(8)));
  Val x215 = (((x214 + (((x121 + x175) - ((x121 * Val(2)) * x175)) * Val(16))) +
               (((x122 + x176) - ((x122 * Val(2)) * x176)) * Val(32))) +
              (((x123 + x177) - ((x123 * Val(2)) * x177)) * Val(64)));
  Val x216 = (((x215 + (((x124 + x178) - ((x124 * Val(2)) * x178)) * Val(128))) +
               (((x125 + x179) - ((x125 * Val(2)) * x179)) * Val(256))) +
              (((x126 + x180) - ((x126 * Val(2)) * x180)) * Val(512)));
  Val x217 = (((x216 + (((x127 + x181) - ((x127 * Val(2)) * x181)) * Val(1024))) +
               (((x128 + x182) - ((x128 * Val(2)) * x182)) * Val(2048))) +
              (((x129 + x183) - ((x129 * Val(2)) * x183)) * Val(4096)));
  Val x218 = (((x217 + (((x130 + x184) - ((x130 * Val(2)) * x184)) * Val(8192))) +
               (((x131 + x185) - ((x131 * Val(2)) * x185)) * Val(16384))) +
              (((x132 + x186) - ((x132 * Val(2)) * x186)) * Val(32768)));
  Val x219 = (((x218 + (((x133 + x187) - ((x133 * Val(2)) * x187)) * Val(65536))) +
               (((x134 + x188) - ((x134 * Val(2)) * x188)) * Val(131072))) +
              (((x135 + x189) - ((x135 * Val(2)) * x189)) * Val(262144)));
  Val x220 = (((x219 + (((x136 + x190) - ((x136 * Val(2)) * x190)) * Val(524288))) +
               (((x137 + x191) - ((x137 * Val(2)) * x191)) * Val(1048576))) +
              (((x138 + x192) - ((x138 * Val(2)) * x192)) * Val(2097152)));
  NondetRegStruct x221 = exec_Reg(ctx, x220, LAYOUT_LOOKUP(layout1, _0));
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  Val x222 =
      (((((x146 + x193) - ((x146 * Val(2)) * x193)) + (((x147 + x194) - (x167 * x194)) * Val(2))) +
        (((x148 + x195) - ((x148 * Val(2)) * x195)) * Val(4))) +
       (((x149 + x196) - ((x149 * Val(2)) * x196)) * Val(8)));
  Val x223 = (((x222 + (((x150 + x197) - ((x150 * Val(2)) * x197)) * Val(16))) +
               (((x151 + x198) - ((x151 * Val(2)) * x198)) * Val(32))) +
              (((x152 + x199) - ((x152 * Val(2)) * x199)) * Val(64)));
  Val x224 = (((x223 + (((x153 + x200) - ((x153 * Val(2)) * x200)) * Val(128))) +
               (((x154 + x201) - ((x154 * Val(2)) * x201)) * Val(256))) +
              (((x155 + x202) - ((x155 * Val(2)) * x202)) * Val(512)));
  Val x225 = (((x224 + (((x156 + x203) - ((x156 * Val(2)) * x203)) * Val(1024))) +
               (((x157 + x204) - ((x157 * Val(2)) * x204)) * Val(2048))) +
              (((x158 + x205) - ((x158 * Val(2)) * x205)) * Val(4096)));
  Val x226 = (((x225 + (((x159 + x206) - ((x159 * Val(2)) * x206)) * Val(8192))) +
               (((x160 + x207) - ((x160 * Val(2)) * x207)) * Val(16384))) +
              (((x161 + x208) - ((x161 * Val(2)) * x208)) * Val(32768)));
  Val x227 = (((x226 + (((x162 + x209) - ((x162 * Val(2)) * x209)) * Val(65536))) +
               (((x163 + x210) - ((x163 * Val(2)) * x210)) * Val(131072))) +
              (((x164 + x211) - ((x164 * Val(2)) * x211)) * Val(262144)));
  NondetRegStruct x228 =
      exec_Reg(ctx,
               ((x227 + (((x165 + x212) - ((x165 * Val(2)) * x212)) * Val(524288))) +
                (((x166 + x213) - ((x166 * Val(2)) * x213)) * Val(1048576))),
               LAYOUT_LOOKUP(layout1, _1));
  // chi_minor0(zirgen/circuit/keccak/keccak.zir:630)
  Val22Array x229 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  RetTupleStruct x230 = exec_RetTuple(
      ctx,
      x229,
      x229,
      x229,
      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),      Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), x221._super, x228._super},
      x229,
      x229,
      Val(7),
      Val(14),
      arg0.rnd._super,
      arg0.blk._super,
      arg0.midx._super,
      LAYOUT_LOOKUP(layout1, _super));
  return x230;
}
RetTupleStruct execChiMinor1_4__4_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<ChiMinor1_4__4_Layout> layout2) {
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:685)
  BoundLayout<ChiMinor1_4__4__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:635)
  RetTupleStruct x4 = back_RetTuple(ctx, 8, arg1);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:636)
  RetTupleStruct x5 = back_RetTuple(ctx, 1, arg1);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:635)
  NondetRegStruct24Array x6 = x4.arrD;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:640)
  Val x7 = x6[8]._super;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:648)
  ToBits_21_Struct x8 = exec_ToBits_21_(ctx, x7, LAYOUT_LOOKUP(layout2, unpack_2x));
  NondetRegStruct21Array x9 = x8._super;
  Val x10 = x9[0]._super;
  Val x11 = x9[1]._super;
  Val x12 = x9[2]._super;
  Val x13 = x9[3]._super;
  Val x14 = x9[4]._super;
  Val x15 = x9[5]._super;
  Val x16 = x9[6]._super;
  Val x17 = x9[7]._super;
  Val x18 = x9[8]._super;
  Val x19 = x9[9]._super;
  Val x20 = x9[10]._super;
  Val x21 = x9[11]._super;
  Val x22 = x9[12]._super;
  Val x23 = x9[13]._super;
  Val x24 = x9[14]._super;
  Val x25 = x9[15]._super;
  Val x26 = x9[16]._super;
  Val x27 = x9[17]._super;
  Val x28 = x9[18]._super;
  Val x29 = x9[19]._super;
  Val x30 = x9[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:649)
  Val x31 = (x11 * Val(2));
  Val x32 =
      ((((((x10 + x31) + (x12 * Val(4))) + (x13 * Val(8))) + (x14 * Val(16))) + (x15 * Val(32))) +
       (x16 * Val(64)));
  Val x33 =
      ((((((x32 + (x17 * Val(128))) + (x18 * Val(256))) + (x19 * Val(512))) + (x20 * Val(1024))) +
        (x21 * Val(2048))) +
       (x22 * Val(4096)));
  Val x34 = ((((((x33 + (x23 * Val(8192))) + (x24 * Val(16384))) + (x25 * Val(32768))) +
               (x26 * Val(65536))) +
              (x27 * Val(131072))) +
             (x28 * Val(262144)));
  EQZ((((x34 + (x29 * Val(524288))) + (x30 * Val(1048576))) - x7),
      "chi_minor1(zirgen/circuit/keccak/keccak.zir:649)");
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:635)
  NondetRegStruct22Array x35 = x4.arrC;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:654)
  Val x36 = x35[18]._super;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:662)
  ToBits_21_Struct x37 = exec_ToBits_21_(ctx, x36, LAYOUT_LOOKUP(layout2, unpack_2xp1));
  NondetRegStruct21Array x38 = x37._super;
  Val x39 = x38[0]._super;
  Val x40 = x38[1]._super;
  Val x41 = x38[2]._super;
  Val x42 = x38[3]._super;
  Val x43 = x38[4]._super;
  Val x44 = x38[5]._super;
  Val x45 = x38[6]._super;
  Val x46 = x38[7]._super;
  Val x47 = x38[8]._super;
  Val x48 = x38[9]._super;
  Val x49 = x38[10]._super;
  Val x50 = x38[11]._super;
  Val x51 = x38[12]._super;
  Val x52 = x38[13]._super;
  Val x53 = x38[14]._super;
  Val x54 = x38[15]._super;
  Val x55 = x38[16]._super;
  Val x56 = x38[17]._super;
  Val x57 = x38[18]._super;
  Val x58 = x38[19]._super;
  Val x59 = x38[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:663)
  Val x60 = ((((((x39 + (x40 * Val(2))) + (x41 * Val(4))) + (x42 * Val(8))) + (x43 * Val(16))) +
              (x44 * Val(32))) +
             (x45 * Val(64)));
  Val x61 =
      ((((((x60 + (x46 * Val(128))) + (x47 * Val(256))) + (x48 * Val(512))) + (x49 * Val(1024))) +
        (x50 * Val(2048))) +
       (x51 * Val(4096)));
  Val x62 = ((((((x61 + (x52 * Val(8192))) + (x53 * Val(16384))) + (x54 * Val(32768))) +
               (x55 * Val(65536))) +
              (x56 * Val(131072))) +
             (x57 * Val(262144)));
  EQZ((((x62 + (x58 * Val(524288))) + (x59 * Val(1048576))) - x36),
      "chi_minor1(zirgen/circuit/keccak/keccak.zir:663)");
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:667)
  Val x63 = x35[21]._super;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:675)
  ToBits_21_Struct x64 = exec_ToBits_21_(ctx, x63, LAYOUT_LOOKUP(layout2, unpack_2xp2));
  NondetRegStruct21Array x65 = x64._super;
  Val x66 = x65[0]._super;
  Val x67 = x65[1]._super;
  Val x68 = x65[2]._super;
  Val x69 = x65[3]._super;
  Val x70 = x65[4]._super;
  Val x71 = x65[5]._super;
  Val x72 = x65[6]._super;
  Val x73 = x65[7]._super;
  Val x74 = x65[8]._super;
  Val x75 = x65[9]._super;
  Val x76 = x65[10]._super;
  Val x77 = x65[11]._super;
  Val x78 = x65[12]._super;
  Val x79 = x65[13]._super;
  Val x80 = x65[14]._super;
  Val x81 = x65[15]._super;
  Val x82 = x65[16]._super;
  Val x83 = x65[17]._super;
  Val x84 = x65[18]._super;
  Val x85 = x65[19]._super;
  Val x86 = x65[20]._super;
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:676)
  Val x87 = ((((((x66 + (x67 * Val(2))) + (x68 * Val(4))) + (x69 * Val(8))) + (x70 * Val(16))) +
              (x71 * Val(32))) +
             (x72 * Val(64)));
  Val x88 =
      ((((((x87 + (x73 * Val(128))) + (x74 * Val(256))) + (x75 * Val(512))) + (x76 * Val(1024))) +
        (x77 * Val(2048))) +
       (x78 * Val(4096)));
  Val x89 = ((((((x88 + (x79 * Val(8192))) + (x80 * Val(16384))) + (x81 * Val(32768))) +
               (x82 * Val(65536))) +
              (x83 * Val(131072))) +
             (x84 * Val(262144)));
  EQZ((((x89 + (x85 * Val(524288))) + (x86 * Val(1048576))) - x63),
      "chi_minor1(zirgen/circuit/keccak/keccak.zir:676)");
  // andnxor(zirgen/circuit/keccak/keccak.zir:118)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:678)
  Val x90 = ((Val(1) - x39) * x66);
  Val x91 = ((Val(1) - x40) * x67);
  Val x92 = ((Val(1) - x41) * x68);
  Val x93 = ((Val(1) - x42) * x69);
  Val x94 = ((Val(1) - x43) * x70);
  Val x95 = ((Val(1) - x44) * x71);
  Val x96 = ((Val(1) - x45) * x72);
  Val x97 = ((Val(1) - x46) * x73);
  Val x98 = ((Val(1) - x47) * x74);
  Val x99 = ((Val(1) - x48) * x75);
  Val x100 = ((Val(1) - x49) * x76);
  Val x101 = ((Val(1) - x50) * x77);
  Val x102 = ((Val(1) - x51) * x78);
  Val x103 = ((Val(1) - x52) * x79);
  Val x104 = ((Val(1) - x53) * x80);
  Val x105 = ((Val(1) - x54) * x81);
  Val x106 = ((Val(1) - x55) * x82);
  Val x107 = ((Val(1) - x56) * x83);
  Val x108 = ((Val(1) - x57) * x84);
  Val x109 = ((Val(1) - x58) * x85);
  Val x110 = ((Val(1) - x59) * x86);
  // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:679)
  Val x111 = (((((x10 + x90) - ((x10 * Val(2)) * x90)) + (((x11 + x91) - (x31 * x91)) * Val(2))) +
               (((x12 + x92) - ((x12 * Val(2)) * x92)) * Val(4))) +
              (((x13 + x93) - ((x13 * Val(2)) * x93)) * Val(8)));
  Val x112 = (((x111 + (((x14 + x94) - ((x14 * Val(2)) * x94)) * Val(16))) +
               (((x15 + x95) - ((x15 * Val(2)) * x95)) * Val(32))) +
              (((x16 + x96) - ((x16 * Val(2)) * x96)) * Val(64)));
  Val x113 = (((x112 + (((x17 + x97) - ((x17 * Val(2)) * x97)) * Val(128))) +
               (((x18 + x98) - ((x18 * Val(2)) * x98)) * Val(256))) +
              (((x19 + x99) - ((x19 * Val(2)) * x99)) * Val(512)));
  Val x114 = (((x113 + (((x20 + x100) - ((x20 * Val(2)) * x100)) * Val(1024))) +
               (((x21 + x101) - ((x21 * Val(2)) * x101)) * Val(2048))) +
              (((x22 + x102) - ((x22 * Val(2)) * x102)) * Val(4096)));
  Val x115 = (((x114 + (((x23 + x103) - ((x23 * Val(2)) * x103)) * Val(8192))) +
               (((x24 + x104) - ((x24 * Val(2)) * x104)) * Val(16384))) +
              (((x25 + x105) - ((x25 * Val(2)) * x105)) * Val(32768)));
  Val x116 = (((x115 + (((x26 + x106) - ((x26 * Val(2)) * x106)) * Val(65536))) +
               (((x27 + x107) - ((x27 * Val(2)) * x107)) * Val(131072))) +
              (((x28 + x108) - ((x28 * Val(2)) * x108)) * Val(262144)));
  NondetRegStruct x117 =
      exec_Reg(ctx,
               ((x116 + (((x29 + x109) - ((x29 * Val(2)) * x109)) * Val(524288))) +
                (((x30 + x110) - ((x30 * Val(2)) * x110)) * Val(1048576))),
               LAYOUT_LOOKUP(layout2, res3));
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:636)
  NondetRegStruct24Array x118 = x5.arrD;
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:685)
  BoundLayout<ChiMinor1_4__4_Arm1_SuperLayout> x119 = LAYOUT_LOOKUP(x3, arm1);
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:680)
  Val22Array x120 =
      Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), x118[22]._super};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:681)
  Val22Array x121 =
      Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),         Val(0), Val(0),
                 Val(0), Val(0), Val(0), Val(0), Val(0), x118[23]._super};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:682)
  Val22Array x122 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), x117._super};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:686)
  Val24Array x123 = Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  Val22Array x124 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                               Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:636)
  Val x125 = x5.rnd._super;
  Val x126 = x5.blk._super;
  Val x127 = x5.midx._super;
  if (to_size_t(Val(1))) {
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:686)
    RetTupleStruct x128 = exec_RetTuple(ctx,
                                        x120,
                                        x121,
                                        x122,
                                        x123,
                                        x124,
                                        x124,
                                        Val(8),
                                        Val(14),
                                        x125,
                                        x126,
                                        x127,
                                        LAYOUT_LOOKUP(x3, arm0));
  }
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:718)
  Val x129 = x6[2]._super;
  if (to_size_t(Val(0))) {
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:699)
    ToBits_21_Struct x130 = exec_ToBits_21_(ctx, x36, LAYOUT_LOOKUP(x119, unpack_2nx));
    NondetRegStruct21Array x131 = x130._super;
    Val x132 = x131[0]._super;
    Val x133 = x131[1]._super;
    Val x134 = x131[2]._super;
    Val x135 = x131[3]._super;
    Val x136 = x131[4]._super;
    Val x137 = x131[5]._super;
    Val x138 = x131[6]._super;
    Val x139 = x131[7]._super;
    Val x140 = x131[8]._super;
    Val x141 = x131[9]._super;
    Val x142 = x131[10]._super;
    Val x143 = x131[11]._super;
    Val x144 = x131[12]._super;
    Val x145 = x131[13]._super;
    Val x146 = x131[14]._super;
    Val x147 = x131[15]._super;
    Val x148 = x131[16]._super;
    Val x149 = x131[17]._super;
    Val x150 = x131[18]._super;
    Val x151 = x131[19]._super;
    Val x152 = x131[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:700)
    Val x153 = (x133 * Val(2));
    Val x154 = ((((((x132 + x153) + (x134 * Val(4))) + (x135 * Val(8))) + (x136 * Val(16))) +
                 (x137 * Val(32))) +
                (x138 * Val(64)));
    Val x155 = ((((((x154 + (x139 * Val(128))) + (x140 * Val(256))) + (x141 * Val(512))) +
                  (x142 * Val(1024))) +
                 (x143 * Val(2048))) +
                (x144 * Val(4096)));
    Val x156 = ((((((x155 + (x145 * Val(8192))) + (x146 * Val(16384))) + (x147 * Val(32768))) +
                  (x148 * Val(65536))) +
                 (x149 * Val(131072))) +
                (x150 * Val(262144)));
    EQZ((((x156 + (x151 * Val(524288))) + (x152 * Val(1048576))) - x36),
        "chi_minor1(zirgen/circuit/keccak/keccak.zir:700)");
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:713)
    ToBits_21_Struct x157 = exec_ToBits_21_(ctx, x63, LAYOUT_LOOKUP(x119, unpack_2nxp1));
    NondetRegStruct21Array x158 = x157._super;
    Val x159 = x158[0]._super;
    Val x160 = x158[1]._super;
    Val x161 = x158[2]._super;
    Val x162 = x158[3]._super;
    Val x163 = x158[4]._super;
    Val x164 = x158[5]._super;
    Val x165 = x158[6]._super;
    Val x166 = x158[7]._super;
    Val x167 = x158[8]._super;
    Val x168 = x158[9]._super;
    Val x169 = x158[10]._super;
    Val x170 = x158[11]._super;
    Val x171 = x158[12]._super;
    Val x172 = x158[13]._super;
    Val x173 = x158[14]._super;
    Val x174 = x158[15]._super;
    Val x175 = x158[16]._super;
    Val x176 = x158[17]._super;
    Val x177 = x158[18]._super;
    Val x178 = x158[19]._super;
    Val x179 = x158[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:714)
    Val x180 =
        ((((((x159 + (x160 * Val(2))) + (x161 * Val(4))) + (x162 * Val(8))) + (x163 * Val(16))) +
          (x164 * Val(32))) +
         (x165 * Val(64)));
    Val x181 = ((((((x180 + (x166 * Val(128))) + (x167 * Val(256))) + (x168 * Val(512))) +
                  (x169 * Val(1024))) +
                 (x170 * Val(2048))) +
                (x171 * Val(4096)));
    Val x182 = ((((((x181 + (x172 * Val(8192))) + (x173 * Val(16384))) + (x174 * Val(32768))) +
                  (x175 * Val(65536))) +
                 (x176 * Val(131072))) +
                (x177 * Val(262144)));
    EQZ((((x182 + (x178 * Val(524288))) + (x179 * Val(1048576))) - x63),
        "chi_minor1(zirgen/circuit/keccak/keccak.zir:714)");
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:726)
    ToBits_21_Struct x183 = exec_ToBits_21_(ctx, x129, LAYOUT_LOOKUP(x119, unpack_2nxp2));
    NondetRegStruct21Array x184 = x183._super;
    Val x185 = x184[0]._super;
    Val x186 = x184[1]._super;
    Val x187 = x184[2]._super;
    Val x188 = x184[3]._super;
    Val x189 = x184[4]._super;
    Val x190 = x184[5]._super;
    Val x191 = x184[6]._super;
    Val x192 = x184[7]._super;
    Val x193 = x184[8]._super;
    Val x194 = x184[9]._super;
    Val x195 = x184[10]._super;
    Val x196 = x184[11]._super;
    Val x197 = x184[12]._super;
    Val x198 = x184[13]._super;
    Val x199 = x184[14]._super;
    Val x200 = x184[15]._super;
    Val x201 = x184[16]._super;
    Val x202 = x184[17]._super;
    Val x203 = x184[18]._super;
    Val x204 = x184[19]._super;
    Val x205 = x184[20]._super;
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:727)
    Val x206 =
        ((((((x185 + (x186 * Val(2))) + (x187 * Val(4))) + (x188 * Val(8))) + (x189 * Val(16))) +
          (x190 * Val(32))) +
         (x191 * Val(64)));
    Val x207 = ((((((x206 + (x192 * Val(128))) + (x193 * Val(256))) + (x194 * Val(512))) +
                  (x195 * Val(1024))) +
                 (x196 * Val(2048))) +
                (x197 * Val(4096)));
    Val x208 = ((((((x207 + (x198 * Val(8192))) + (x199 * Val(16384))) + (x200 * Val(32768))) +
                  (x201 * Val(65536))) +
                 (x202 * Val(131072))) +
                (x203 * Val(262144)));
    EQZ((((x208 + (x204 * Val(524288))) + (x205 * Val(1048576))) - x129),
        "chi_minor1(zirgen/circuit/keccak/keccak.zir:727)");
    // andnxor(zirgen/circuit/keccak/keccak.zir:118)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:729)
    Val x209 = ((Val(1) - x159) * x185);
    Val x210 = ((Val(1) - x160) * x186);
    Val x211 = ((Val(1) - x161) * x187);
    Val x212 = ((Val(1) - x162) * x188);
    Val x213 = ((Val(1) - x163) * x189);
    Val x214 = ((Val(1) - x164) * x190);
    Val x215 = ((Val(1) - x165) * x191);
    Val x216 = ((Val(1) - x166) * x192);
    Val x217 = ((Val(1) - x167) * x193);
    Val x218 = ((Val(1) - x168) * x194);
    Val x219 = ((Val(1) - x169) * x195);
    Val x220 = ((Val(1) - x170) * x196);
    Val x221 = ((Val(1) - x171) * x197);
    Val x222 = ((Val(1) - x172) * x198);
    Val x223 = ((Val(1) - x173) * x199);
    Val x224 = ((Val(1) - x174) * x200);
    Val x225 = ((Val(1) - x175) * x201);
    Val x226 = ((Val(1) - x176) * x202);
    Val x227 = ((Val(1) - x177) * x203);
    Val x228 = ((Val(1) - x178) * x204);
    Val x229 = ((Val(1) - x179) * x205);
    // FromBits(zirgen/circuit/keccak/sha256_for_keccak.zir:83)
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:730)
    Val x230 = (((((x132 + x209) - ((x132 * Val(2)) * x209)) +
                  (((x133 + x210) - (x153 * x210)) * Val(2))) +
                 (((x134 + x211) - ((x134 * Val(2)) * x211)) * Val(4))) +
                (((x135 + x212) - ((x135 * Val(2)) * x212)) * Val(8)));
    Val x231 = (((x230 + (((x136 + x213) - ((x136 * Val(2)) * x213)) * Val(16))) +
                 (((x137 + x214) - ((x137 * Val(2)) * x214)) * Val(32))) +
                (((x138 + x215) - ((x138 * Val(2)) * x215)) * Val(64)));
    Val x232 = (((x231 + (((x139 + x216) - ((x139 * Val(2)) * x216)) * Val(128))) +
                 (((x140 + x217) - ((x140 * Val(2)) * x217)) * Val(256))) +
                (((x141 + x218) - ((x141 * Val(2)) * x218)) * Val(512)));
    Val x233 = (((x232 + (((x142 + x219) - ((x142 * Val(2)) * x219)) * Val(1024))) +
                 (((x143 + x220) - ((x143 * Val(2)) * x220)) * Val(2048))) +
                (((x144 + x221) - ((x144 * Val(2)) * x221)) * Val(4096)));
    Val x234 = (((x233 + (((x145 + x222) - ((x145 * Val(2)) * x222)) * Val(8192))) +
                 (((x146 + x223) - ((x146 * Val(2)) * x223)) * Val(16384))) +
                (((x147 + x224) - ((x147 * Val(2)) * x224)) * Val(32768)));
    Val x235 = (((x234 + (((x148 + x225) - ((x148 * Val(2)) * x225)) * Val(65536))) +
                 (((x149 + x226) - ((x149 * Val(2)) * x226)) * Val(131072))) +
                (((x150 + x227) - ((x150 * Val(2)) * x227)) * Val(262144)));
    NondetRegStruct x236 =
        exec_Reg(ctx,
                 ((x235 + (((x151 + x228) - ((x151 * Val(2)) * x228)) * Val(524288))) +
                  (((x152 + x229) - ((x152 * Val(2)) * x229)) * Val(1048576))),
                 LAYOUT_LOOKUP(x119, res3n));
    // chi_minor1(zirgen/circuit/keccak/keccak.zir:733)
    RetTupleStruct x237 =
        exec_RetTuple(ctx,
                      x120,
                      x121,
                      x122,
                      x123,
                      x124,
                      Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),     Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), x236._super},
                      Val(8),
                      Val(14),
                      x125,
                      x126,
                      x127,
                      LAYOUT_LOOKUP(x119, _super));
  }
  // chi_minor1(zirgen/circuit/keccak/keccak.zir:685)
  RetTupleStruct x238 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x238;
}
RetTupleStruct execChiMinor2_4_(ExecContext& ctx,
                                RetTupleStruct arg0,
                                BoundLayout<RetTupleLayout> arg1,
                                BoundLayout<ChiMinor2_4__SuperLayout> layout2) {
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:739)
  RetTupleStruct x3 = back_RetTuple(ctx, 1, arg1);
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:740)
  RetTupleStruct x4 = back_RetTuple(ctx, 3, arg1);
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:741)
  RetTupleStruct x5 = back_RetTuple(ctx, 4, arg1);
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:742)
  RetTupleStruct x6 = back_RetTuple(ctx, 6, arg1);
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:743)
  RetTupleStruct x7 = back_RetTuple(ctx, 7, arg1);
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:744)
  RetTupleStruct x8 = back_RetTuple(ctx, 9, arg1);
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:746)
  BoundLayout<ChiMinor2_4_Arm1_SuperLayout> x9 = LAYOUT_LOOKUP(layout2, arm1);
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:742)
  NondetRegStruct24Array x10 = x6.arrD;
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:740)
  NondetRegStruct24Array x11 = x4.arrD;
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:744)
  NondetRegStruct22Array x12 = x8.arrA;
  NondetRegStruct22Array x13 = x8.arrB;
  NondetRegStruct22Array x14 = x8.arrC;
  NondetRegStruct24Array x15 = x8.arrD;
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:747)
  Val x16 = x7.arrA[21]._super;
  Val x17 = x7.arrB[21]._super;
  Val x18 = x7.arrC[21]._super;
  Val x19 = x10[22]._super;
  Val x20 = x10[23]._super;
  Val x21 = x7.arrF[21]._super;
  Val x22 = x5.arrA[21]._super;
  Val x23 = x5.arrB[21]._super;
  Val x24 = x5.arrC[21]._super;
  Val x25 = x11[22]._super;
  Val x26 = x11[23]._super;
  Val x27 = x5.arrF[21]._super;
  Val x28 = x3.arrA[21]._super;
  Val x29 = x3.arrB[21]._super;
  Val x30 = x3.arrC[21]._super;
  Val x31 = x12[15]._super;
  Val x32 = x12[16]._super;
  Val x33 = x12[17]._super;
  Val x34 = x12[18]._super;
  Val x35 = x12[19]._super;
  Val x36 = x12[20]._super;
  Val x37 = x12[21]._super;
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:744)
  Val x38 = x13[0]._super;
  Val x39 = x13[1]._super;
  Val x40 = x13[2]._super;
  Val x41 = x13[3]._super;
  Val x42 = x13[4]._super;
  Val x43 = x13[5]._super;
  Val x44 = x13[6]._super;
  Val x45 = x13[7]._super;
  Val x46 = x13[8]._super;
  Val x47 = x13[9]._super;
  Val x48 = x13[10]._super;
  Val x49 = x13[11]._super;
  Val x50 = x13[12]._super;
  Val x51 = x13[13]._super;
  Val x52 = x13[14]._super;
  Val x53 = x13[15]._super;
  Val x54 = x13[16]._super;
  Val x55 = x13[17]._super;
  Val x56 = x13[18]._super;
  Val x57 = x13[19]._super;
  Val x58 = x13[20]._super;
  Val x59 = x13[21]._super;
  Val22Array x60 = Val22Array{x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48,
                              x49, x50, x51, x52, x53, x54, x55, x56, x57, x58, x59};
  Val x61 = x14[0]._super;
  Val x62 = x14[1]._super;
  Val x63 = x14[2]._super;
  Val x64 = x14[3]._super;
  Val x65 = x14[4]._super;
  Val x66 = x14[5]._super;
  Val x67 = x14[6]._super;
  Val x68 = x14[7]._super;
  Val x69 = x14[8]._super;
  Val x70 = x14[9]._super;
  Val x71 = x14[10]._super;
  Val x72 = x14[11]._super;
  Val x73 = x14[12]._super;
  Val x74 = x14[13]._super;
  Val x75 = x14[14]._super;
  Val x76 = x14[15]._super;
  Val x77 = x14[16]._super;
  Val x78 = x14[17]._super;
  Val x79 = x14[18]._super;
  Val x80 = x14[19]._super;
  Val x81 = x14[20]._super;
  Val x82 = x14[21]._super;
  Val22Array x83 = Val22Array{x61, x62, x63, x64, x65, x66, x67, x68, x69, x70, x71,
                              x72, x73, x74, x75, x76, x77, x78, x79, x80, x81, x82};
  Val24Array x84 =
      Val24Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x15[22]._super, x15[23]._super};
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:755)
  Val22Array x85 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:739)
  Val x86 = x3.rnd._super;
  Val x87 = x3.blk._super;
  Val x88 = x3.midx._super;
  if (to_size_t(Val(0))) {
    // chi_minor2(zirgen/circuit/keccak/keccak.zir:755)
    RetTupleStruct x89 =
        exec_RetTuple(ctx,
                      Val22Array{x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26,
                                 x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37},
                      x60,
                      x83,
                      x84,
                      x85,
                      x85,
                      Val(0),
                      Val(11),
                      x86,
                      x87,
                      x88,
                      LAYOUT_LOOKUP(layout2, arm0));
  }
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:758)
  BoundLayout<ChiMinor2_4_Arm1Arm1_SuperLayout> x90 = LAYOUT_LOOKUP(x9, arm1);
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:762)
  Val x91 = x12[0]._super;
  Val x92 = x12[1]._super;
  Val x93 = x12[2]._super;
  Val x94 = x12[3]._super;
  Val x95 = x12[4]._super;
  Val x96 = x12[5]._super;
  Val x97 = x12[6]._super;
  Val x98 = x12[7]._super;
  Val x99 = x12[8]._super;
  Val x100 = x12[9]._super;
  Val x101 = x12[10]._super;
  Val x102 = x12[11]._super;
  Val x103 = x12[12]._super;
  Val x104 = x12[13]._super;
  Val x105 = x12[14]._super;
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:770)
  BoundLayout<ChiMinor2_4_Arm1Arm1Arm1_SuperLayout> x106 = LAYOUT_LOOKUP(x90, arm1);
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:744)
  Val22Array x107 = Val22Array{x91,  x92,  x93,  x94,  x95, x96, x97, x98, x99, x100, x101,
                               x102, x103, x104, x105, x31, x32, x33, x34, x35, x36,  x37};
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:782)
  BoundLayout<ChiMinor2_4_Arm1Arm1Arm1Arm1_SuperLayout> x108 = LAYOUT_LOOKUP(x106, arm1);
  if (to_size_t(Val(1))) {
    if (to_size_t(Val(0))) {
      // chi_minor2(zirgen/circuit/keccak/keccak.zir:767)
      RetTupleStruct x109 =
          exec_RetTuple(ctx,
                        Val22Array{x91,  x92,  x93,  x94,  x95, x96, x97, x98, x99, x100, x101,
                                   x102, x103, x104, x105, x16, x17, x18, x19, x20, x21,  x22},
                        Val22Array{x23, x24, x25, x26, x27, x28, x29, x30, x46, x47, x48,
                                   x49, x50, x51, x52, x53, x54, x55, x56, x57, x58, x59},
                        x83,
                        x84,
                        x85,
                        x85,
                        Val(0),
                        Val(12),
                        x86,
                        x87,
                        x88,
                        LAYOUT_LOOKUP(x9, arm0));
    }
    if (to_size_t(Val(1))) {
      if (to_size_t(Val(0))) {
        // chi_minor2(zirgen/circuit/keccak/keccak.zir:779)
        RetTupleStruct x110 =
            exec_RetTuple(ctx,
                          x107,
                          Val22Array{x38, x39, x40, x41, x42, x43, x44, x45, x16, x17, x18,
                                     x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29},
                          Val22Array{x30, x62, x63, x64, x65, x66, x67, x68, x69, x70, x71,
                                     x72, x73, x74, x75, x76, x77, x78, x79, x80, x81, x82},
                          x84,
                          x85,
                          x85,
                          Val(0),
                          Val(13),
                          x86,
                          x87,
                          x88,
                          LAYOUT_LOOKUP(x90, arm0));
      }
      if (to_size_t(Val(1))) {
        if (to_size_t(Val(0))) {
          // chi_minor2(zirgen/circuit/keccak/keccak.zir:790)
          RetTupleStruct x111 =
              exec_RetTuple(ctx,
                            x107,
                            x60,
                            Val22Array{x61, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25,
                                       x26, x27, x28, x29, x30, x77, x78, x79, x80, x81, x82},
                            x84,
                            x85,
                            x85,
                            Val(0),
                            Val(14),
                            x86,
                            x87,
                            x88,
                            LAYOUT_LOOKUP(x106, arm0));
        }
        if (to_size_t(Val(1))) {
          // chi_minor2(zirgen/circuit/keccak/keccak.zir:800)
          OneHot_24_Struct x112 = exec_OneHot_24_(ctx, x86, LAYOUT_LOOKUP(x108, unpackRnd));
          // chi_minor2(zirgen/circuit/keccak/keccak.zir:801)
          ToBits_22_Struct x113 = exec_ToBits_22_(ctx, x93, LAYOUT_LOOKUP(x108, unpackA002));
          // chi_minor2(zirgen/circuit/keccak/keccak.zir:800)
          NondetRegStruct24Array x114 = x112._super;
          // chi_minor2(zirgen/circuit/keccak/keccak.zir:801)
          NondetRegStruct22Array x115 = x113._super;
          // chi_minor2(zirgen/circuit/keccak/keccak.zir:802)
          RetTupleStruct x116 = exec_RetTuple(
              ctx,
              x107,
              x60,
              Val22Array{x61, x62, x63, x64, x65, x66, x67, x68, x69, x70, x71,
                         x72, x73, x74, x75, x76, x16, x17, x18, x19, x20, x21},
              Val24Array{x114[0]._super,  x114[1]._super,  x114[2]._super,  x114[3]._super,
                         x114[4]._super,  x114[5]._super,  x114[6]._super,  x114[7]._super,
                         x114[8]._super,  x114[9]._super,  x114[10]._super, x114[11]._super,
                         x114[12]._super, x114[13]._super, x114[14]._super, x114[15]._super,
                         x114[16]._super, x114[17]._super, x114[18]._super, x114[19]._super,
                         x114[20]._super, x114[21]._super, x114[22]._super, x114[23]._super},
              Val22Array{x22,    x23,    x24,    x25,    x26,    x27,    x28,    x29,
                         x30,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                         Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
              Val22Array{x115[0]._super,  x115[1]._super,  x115[2]._super,  x115[3]._super,
                         x115[4]._super,  x115[5]._super,  x115[6]._super,  x115[7]._super,
                         x115[8]._super,  x115[9]._super,  x115[10]._super, x115[11]._super,
                         x115[12]._super, x115[13]._super, x115[14]._super, x115[15]._super,
                         x115[16]._super, x115[17]._super, x115[18]._super, x115[19]._super,
                         x115[20]._super, x115[21]._super},
              Val(9),
              Val(14),
              x86,
              x87,
              x88,
              LAYOUT_LOOKUP(x108, _super));
        }
        // chi_minor2(zirgen/circuit/keccak/keccak.zir:782)
        RetTupleStruct x117 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x106, _super));
      }
      // chi_minor2(zirgen/circuit/keccak/keccak.zir:770)
      RetTupleStruct x118 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x90, _super));
    }
    // chi_minor2(zirgen/circuit/keccak/keccak.zir:758)
    RetTupleStruct x119 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x9, _super));
  }
  // chi_minor2(zirgen/circuit/keccak/keccak.zir:746)
  RetTupleStruct x120 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(layout2, _super));
  return x120;
}
RetTupleStruct execChiMajor_4_(ExecContext& ctx,
                               RetTupleStruct arg0,
                               BoundLayout<RetTupleLayout> arg1,
                               BoundLayout<ChiMajor_4_Layout> layout2) {
  // chi_major(zirgen/circuit/keccak/keccak.zir:841)
  BoundLayout<ChiMajor_4__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // chi_major(zirgen/circuit/keccak/keccak.zir:840)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  OneHot_10_Struct x5 = exec_OneHot_10_(ctx, x4.minor._super, LAYOUT_LOOKUP(layout2, minorOnehot));
  NondetRegStruct10Array x6 = x5._super;
  if (to_size_t(x6[0]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:842)
    RetTupleStruct x7 = back_RetTuple(ctx, 1, arg1);
    RetTupleStruct x8 = execChiMinor0_0__4_(ctx, x7, LAYOUT_LOOKUP(x3, arm0));
  }
  if (to_size_t(x6[1]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:843)
    RetTupleStruct x9 = execChiMinor1_0__4_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm1));
  }
  if (to_size_t(x6[2]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:844)
    RetTupleStruct x10 = back_RetTuple(ctx, 3, arg1);
    RetTupleStruct x11 = execChiMinor0_1__4_(ctx, x10, LAYOUT_LOOKUP(x3, arm2));
  }
  if (to_size_t(x6[3]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:845)
    RetTupleStruct x12 = back_RetTuple(ctx, 4, arg1);
    RetTupleStruct x13 = execChiMinor0_2__4_(ctx, x12, LAYOUT_LOOKUP(x3, arm3));
  }
  if (to_size_t(x6[4]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:846)
    RetTupleStruct x14 = execChiMinor1_2__4_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm4));
  }
  if (to_size_t(x6[5]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:847)
    RetTupleStruct x15 = back_RetTuple(ctx, 6, arg1);
    RetTupleStruct x16 = execChiMinor0_3__4_(ctx, x15, LAYOUT_LOOKUP(x3, arm5));
  }
  if (to_size_t(x6[6]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:848)
    RetTupleStruct x17 = back_RetTuple(ctx, 7, arg1);
    RetTupleStruct x18 = execChiMinor0_4__4_(ctx, x17, LAYOUT_LOOKUP(x3, arm6));
  }
  if (to_size_t(x6[7]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:849)
    RetTupleStruct x19 = execChiMinor1_4__4_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm7));
  }
  if (to_size_t(x6[8]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:850)
    RetTupleStruct x20 = execChiMinor2_4_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm8));
  }
  if (to_size_t(x6[9]._super)) {
    // chi_major(zirgen/circuit/keccak/keccak.zir:851)
    RetTupleStruct x21 = back_RetTuple(ctx, 1, arg1);
    RetTupleStruct x22 = execIotaXorRc(ctx, x21, LAYOUT_LOOKUP(x3, arm9));
  }
  // chi_major(zirgen/circuit/keccak/keccak.zir:841)
  RetTupleStruct x23 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x23;
}
RetTupleStruct execSha256mix_0__0_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<Sha256mix_0__0_Layout> layout2) {
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_0__0__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:359)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:360)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:361)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:362)
  RetTupleStruct x8 = back_RetTuple(ctx, 7, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:363)
  RetTupleStruct x9 = back_RetTuple(ctx, 15, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:364)
  RetTupleStruct x10 = back_RetTuple(ctx, 16, arg1);
  // s2w(zirgen/circuit/keccak/sha256_for_keccak.zir:155)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:366)
  NondetRegStruct22Array x11 = x5.arrE;
  NondetRegStruct22Array x12 = x5.arrF;
  NondetRegStruct22Array x13 = x8.arrE;
  NondetRegStruct22Array x14 = x8.arrF;
  NondetRegStruct22Array x15 = x9.arrE;
  NondetRegStruct22Array x16 = x9.arrF;
  NondetRegStruct22Array x17 = x10.arrE;
  NondetRegStruct22Array x18 = x10.arrF;
  TwoShortsStruct x19 = execComputeW(
      ctx,
      Val32Array{x11[0]._super,  x11[1]._super,  x11[2]._super,  x11[3]._super,  x11[4]._super,
                 x11[5]._super,  x11[6]._super,  x11[7]._super,  x11[8]._super,  x11[9]._super,
                 x11[10]._super, x11[11]._super, x11[12]._super, x11[13]._super, x11[14]._super,
                 x11[15]._super, x11[16]._super, x11[17]._super, x11[18]._super, x11[19]._super,
                 x11[20]._super, x11[21]._super, x12[0]._super,  x12[1]._super,  x12[2]._super,
                 x12[3]._super,  x12[4]._super,  x12[5]._super,  x12[6]._super,  x12[7]._super,
                 x12[8]._super,  x12[9]._super},
      Val32Array{x13[0]._super,  x13[1]._super,  x13[2]._super,  x13[3]._super,  x13[4]._super,
                 x13[5]._super,  x13[6]._super,  x13[7]._super,  x13[8]._super,  x13[9]._super,
                 x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x14[0]._super,  x14[1]._super,  x14[2]._super,
                 x14[3]._super,  x14[4]._super,  x14[5]._super,  x14[6]._super,  x14[7]._super,
                 x14[8]._super,  x14[9]._super},
      Val32Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x16[0]._super,  x16[1]._super,  x16[2]._super,
                 x16[3]._super,  x16[4]._super,  x16[5]._super,  x16[6]._super,  x16[7]._super,
                 x16[8]._super,  x16[9]._super},
      Val32Array{x17[0]._super,  x17[1]._super,  x17[2]._super,  x17[3]._super,  x17[4]._super,
                 x17[5]._super,  x17[6]._super,  x17[7]._super,  x17[8]._super,  x17[9]._super,
                 x17[10]._super, x17[11]._super, x17[12]._super, x17[13]._super, x17[14]._super,
                 x17[15]._super, x17[16]._super, x17[17]._super, x17[18]._super, x17[19]._super,
                 x17[20]._super, x17[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super},
      LAYOUT_LOOKUP(layout2, packedW));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16_Struct x20 =
      execUnpackWithCarry(ctx, x19.low, x19.high, LAYOUT_LOOKUP(layout2, newW));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  NondetRegStruct22Array x21 = x4.arrA;
  NondetRegStruct22Array x22 = x4.arrB;
  NondetRegStruct22Array x23 = x5.arrA;
  NondetRegStruct22Array x24 = x5.arrB;
  NondetRegStruct22Array x25 = x6.arrA;
  NondetRegStruct22Array x26 = x6.arrB;
  NondetRegStruct22Array x27 = x7.arrA;
  NondetRegStruct22Array x28 = x7.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:369)
  NondetRegStruct22Array x29 = x4.arrC;
  NondetRegStruct22Array x30 = x5.arrC;
  NondetRegStruct22Array x31 = x6.arrC;
  NondetRegStruct22Array x32 = x7.arrC;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x33 = x20._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  Val x55 = x33[21]._super;
  Val x56 = x33[22]._super;
  Val x57 = x33[23]._super;
  Val x58 = x33[24]._super;
  Val x59 = x33[25]._super;
  Val x60 = x33[26]._super;
  Val x61 = x33[27]._super;
  Val x62 = x33[28]._super;
  Val x63 = x33[29]._super;
  Val x64 = x33[30]._super;
  Val x65 = x33[31]._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  ComputeAEStruct x66 = execComputeAE(
      ctx,
      Val32Array{x21[0]._super,  x21[1]._super,  x21[2]._super,  x21[3]._super,  x21[4]._super,
                 x21[5]._super,  x21[6]._super,  x21[7]._super,  x21[8]._super,  x21[9]._super,
                 x21[10]._super, x21[11]._super, x21[12]._super, x21[13]._super, x21[14]._super,
                 x21[15]._super, x21[16]._super, x21[17]._super, x21[18]._super, x21[19]._super,
                 x21[20]._super, x21[21]._super, x22[0]._super,  x22[1]._super,  x22[2]._super,
                 x22[3]._super,  x22[4]._super,  x22[5]._super,  x22[6]._super,  x22[7]._super,
                 x22[8]._super,  x22[9]._super},
      Val32Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super, x24[0]._super,  x24[1]._super,  x24[2]._super,
                 x24[3]._super,  x24[4]._super,  x24[5]._super,  x24[6]._super,  x24[7]._super,
                 x24[8]._super,  x24[9]._super},
      Val32Array{x25[0]._super,  x25[1]._super,  x25[2]._super,  x25[3]._super,  x25[4]._super,
                 x25[5]._super,  x25[6]._super,  x25[7]._super,  x25[8]._super,  x25[9]._super,
                 x25[10]._super, x25[11]._super, x25[12]._super, x25[13]._super, x25[14]._super,
                 x25[15]._super, x25[16]._super, x25[17]._super, x25[18]._super, x25[19]._super,
                 x25[20]._super, x25[21]._super, x26[0]._super,  x26[1]._super,  x26[2]._super,
                 x26[3]._super,  x26[4]._super,  x26[5]._super,  x26[6]._super,  x26[7]._super,
                 x26[8]._super,  x26[9]._super},
      Val32Array{x27[0]._super,  x27[1]._super,  x27[2]._super,  x27[3]._super,  x27[4]._super,
                 x27[5]._super,  x27[6]._super,  x27[7]._super,  x27[8]._super,  x27[9]._super,
                 x27[10]._super, x27[11]._super, x27[12]._super, x27[13]._super, x27[14]._super,
                 x27[15]._super, x27[16]._super, x27[17]._super, x27[18]._super, x27[19]._super,
                 x27[20]._super, x27[21]._super, x28[0]._super,  x28[1]._super,  x28[2]._super,
                 x28[3]._super,  x28[4]._super,  x28[5]._super,  x28[6]._super,  x28[7]._super,
                 x28[8]._super,  x28[9]._super},
      Val32Array{x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super, x29[0]._super,  x29[1]._super,  x29[2]._super,
                 x29[3]._super,  x29[4]._super,  x29[5]._super,  x29[6]._super,  x29[7]._super,
                 x29[8]._super,  x29[9]._super,  x29[10]._super, x29[11]._super, x29[12]._super,
                 x29[13]._super, x29[14]._super, x29[15]._super, x29[16]._super, x29[17]._super,
                 x29[18]._super, x29[19]._super},
      Val32Array{x24[10]._super, x24[11]._super, x24[12]._super, x24[13]._super, x24[14]._super,
                 x24[15]._super, x24[16]._super, x24[17]._super, x24[18]._super, x24[19]._super,
                 x24[20]._super, x24[21]._super, x30[0]._super,  x30[1]._super,  x30[2]._super,
                 x30[3]._super,  x30[4]._super,  x30[5]._super,  x30[6]._super,  x30[7]._super,
                 x30[8]._super,  x30[9]._super,  x30[10]._super, x30[11]._super, x30[12]._super,
                 x30[13]._super, x30[14]._super, x30[15]._super, x30[16]._super, x30[17]._super,
                 x30[18]._super, x30[19]._super},
      Val32Array{x26[10]._super, x26[11]._super, x26[12]._super, x26[13]._super, x26[14]._super,
                 x26[15]._super, x26[16]._super, x26[17]._super, x26[18]._super, x26[19]._super,
                 x26[20]._super, x26[21]._super, x31[0]._super,  x31[1]._super,  x31[2]._super,
                 x31[3]._super,  x31[4]._super,  x31[5]._super,  x31[6]._super,  x31[7]._super,
                 x31[8]._super,  x31[9]._super,  x31[10]._super, x31[11]._super, x31[12]._super,
                 x31[13]._super, x31[14]._super, x31[15]._super, x31[16]._super, x31[17]._super,
                 x31[18]._super, x31[19]._super},
      Val32Array{x28[10]._super, x28[11]._super, x28[12]._super, x28[13]._super, x28[14]._super,
                 x28[15]._super, x28[16]._super, x28[17]._super, x28[18]._super, x28[19]._super,
                 x28[20]._super, x28[21]._super, x32[0]._super,  x32[1]._super,  x32[2]._super,
                 x32[3]._super,  x32[4]._super,  x32[5]._super,  x32[6]._super,  x32[7]._super,
                 x32[8]._super,  x32[9]._super,  x32[10]._super, x32[11]._super, x32[12]._super,
                 x32[13]._super, x32[14]._super, x32[15]._super, x32[16]._super, x32[17]._super,
                 x32[18]._super, x32[19]._super},
      Val32Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49,
                 x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65},
      TwoShortsStruct{.low = Val(27073), .high = Val(58523)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x67 = x66.aOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16_Struct x68 =
      execUnpackWithCarry(ctx, x67.low, x67.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  TwoShortsStruct x69 = x66.eOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16_Struct x70 =
      execUnpackWithCarry(ctx, x69.low, x69.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x71 = x68._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x72 = x70._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_0__0_Arm1_Super_SuperLayout> x73 = LAYOUT_LOOKUP(x3, arm1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:373)
  Val22Array x74 =
      Val22Array{x71[0]._super,  x71[1]._super,  x71[2]._super,  x71[3]._super,  x71[4]._super,
                 x71[5]._super,  x71[6]._super,  x71[7]._super,  x71[8]._super,  x71[9]._super,
                 x71[10]._super, x71[11]._super, x71[12]._super, x71[13]._super, x71[14]._super,
                 x71[15]._super, x71[16]._super, x71[17]._super, x71[18]._super, x71[19]._super,
                 x71[20]._super, x71[21]._super};
  Val22Array x75 =
      Val22Array{x71[22]._super, x71[23]._super, x71[24]._super, x71[25]._super, x71[26]._super,
                 x71[27]._super, x71[28]._super, x71[29]._super, x71[30]._super, x71[31]._super,
                 x72[0]._super,  x72[1]._super,  x72[2]._super,  x72[3]._super,  x72[4]._super,
                 x72[5]._super,  x72[6]._super,  x72[7]._super,  x72[8]._super,  x72[9]._super,
                 x72[10]._super, x72[11]._super};
  Val22Array x76 =
      Val22Array{x72[12]._super, x72[13]._super, x72[14]._super, x72[15]._super, x72[16]._super,
                 x72[17]._super, x72[18]._super, x72[19]._super, x72[20]._super, x72[21]._super,
                 x72[22]._super, x72[23]._super, x72[24]._super, x72[25]._super, x72[26]._super,
                 x72[27]._super, x72[28]._super, x72[29]._super, x72[30]._super, x72[31]._super,
                 Val(0),         Val(0)};
  Val22Array x77 = Val22Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,
                              x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55};
  Val22Array x78 = Val22Array{x56,    x57,    x58,    x59,    x60,    x61,    x62,    x63,
                              x64,    x65,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  Val x79 = x4.blk._super;
  Val x80 = x4.midx._super;
  if (to_size_t(Val(1))) {
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:376)
    RetTupleStruct x81 =
        exec_RetTuple(ctx,
                      x74,
                      x75,
                      x76,
                      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                      x77,
                      x78,
                      Val(1),
                      Val(20),
                      Val(0),
                      x79,
                      x80,
                      LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  NondetRegStruct24Array x82 = x4.arrD;
  Val24Array x83 =
      Val24Array{x82[0]._super,  x82[1]._super,  x82[2]._super,  x82[3]._super,  x82[4]._super,
                 x82[5]._super,  x82[6]._super,  x82[7]._super,  x82[8]._super,  x82[9]._super,
                 x82[10]._super, x82[11]._super, x82[12]._super, x82[13]._super, x82[14]._super,
                 x82[15]._super, x82[16]._super, x82[17]._super, x82[18]._super, x82[19]._super,
                 x82[20]._super, x82[21]._super, x82[22]._super, x82[23]._super};
  Val x84 = x4.rnd._super;
  if (to_size_t(Val(0))) {
    if (to_size_t(Val(1))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:380)
      RetTupleStruct x85 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(0),
                                         Val(21),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm0));
    }
    if (to_size_t(Val(0))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:383)
      RetTupleStruct x86 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(9),
                                         Val(17),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm1));
    }
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:379)
    RetTupleStruct x87 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x73, _super));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  RetTupleStruct x88 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x88;
}
RetTupleStruct execSha256mix_0__1_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<Sha256mix_0__1_Layout> layout2) {
  BoundLayout<Sha256mix_0__1__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:359)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:360)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:361)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:362)
  RetTupleStruct x8 = back_RetTuple(ctx, 7, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:363)
  RetTupleStruct x9 = back_RetTuple(ctx, 15, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:364)
  RetTupleStruct x10 = back_RetTuple(ctx, 16, arg1);
  // s2w(zirgen/circuit/keccak/sha256_for_keccak.zir:155)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:366)
  NondetRegStruct22Array x11 = x5.arrE;
  NondetRegStruct22Array x12 = x5.arrF;
  NondetRegStruct22Array x13 = x8.arrE;
  NondetRegStruct22Array x14 = x8.arrF;
  NondetRegStruct22Array x15 = x9.arrE;
  NondetRegStruct22Array x16 = x9.arrF;
  NondetRegStruct22Array x17 = x10.arrE;
  NondetRegStruct22Array x18 = x10.arrF;
  TwoShortsStruct x19 = execComputeW(
      ctx,
      Val32Array{x11[0]._super,  x11[1]._super,  x11[2]._super,  x11[3]._super,  x11[4]._super,
                 x11[5]._super,  x11[6]._super,  x11[7]._super,  x11[8]._super,  x11[9]._super,
                 x11[10]._super, x11[11]._super, x11[12]._super, x11[13]._super, x11[14]._super,
                 x11[15]._super, x11[16]._super, x11[17]._super, x11[18]._super, x11[19]._super,
                 x11[20]._super, x11[21]._super, x12[0]._super,  x12[1]._super,  x12[2]._super,
                 x12[3]._super,  x12[4]._super,  x12[5]._super,  x12[6]._super,  x12[7]._super,
                 x12[8]._super,  x12[9]._super},
      Val32Array{x13[0]._super,  x13[1]._super,  x13[2]._super,  x13[3]._super,  x13[4]._super,
                 x13[5]._super,  x13[6]._super,  x13[7]._super,  x13[8]._super,  x13[9]._super,
                 x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x14[0]._super,  x14[1]._super,  x14[2]._super,
                 x14[3]._super,  x14[4]._super,  x14[5]._super,  x14[6]._super,  x14[7]._super,
                 x14[8]._super,  x14[9]._super},
      Val32Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x16[0]._super,  x16[1]._super,  x16[2]._super,
                 x16[3]._super,  x16[4]._super,  x16[5]._super,  x16[6]._super,  x16[7]._super,
                 x16[8]._super,  x16[9]._super},
      Val32Array{x17[0]._super,  x17[1]._super,  x17[2]._super,  x17[3]._super,  x17[4]._super,
                 x17[5]._super,  x17[6]._super,  x17[7]._super,  x17[8]._super,  x17[9]._super,
                 x17[10]._super, x17[11]._super, x17[12]._super, x17[13]._super, x17[14]._super,
                 x17[15]._super, x17[16]._super, x17[17]._super, x17[18]._super, x17[19]._super,
                 x17[20]._super, x17[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super},
      LAYOUT_LOOKUP(layout2, packedW));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16_Struct x20 =
      execUnpackWithCarry(ctx, x19.low, x19.high, LAYOUT_LOOKUP(layout2, newW));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  NondetRegStruct22Array x21 = x4.arrA;
  NondetRegStruct22Array x22 = x4.arrB;
  NondetRegStruct22Array x23 = x5.arrA;
  NondetRegStruct22Array x24 = x5.arrB;
  NondetRegStruct22Array x25 = x6.arrA;
  NondetRegStruct22Array x26 = x6.arrB;
  NondetRegStruct22Array x27 = x7.arrA;
  NondetRegStruct22Array x28 = x7.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:369)
  NondetRegStruct22Array x29 = x4.arrC;
  NondetRegStruct22Array x30 = x5.arrC;
  NondetRegStruct22Array x31 = x6.arrC;
  NondetRegStruct22Array x32 = x7.arrC;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x33 = x20._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  Val x55 = x33[21]._super;
  Val x56 = x33[22]._super;
  Val x57 = x33[23]._super;
  Val x58 = x33[24]._super;
  Val x59 = x33[25]._super;
  Val x60 = x33[26]._super;
  Val x61 = x33[27]._super;
  Val x62 = x33[28]._super;
  Val x63 = x33[29]._super;
  Val x64 = x33[30]._super;
  Val x65 = x33[31]._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  ComputeAEStruct x66 = execComputeAE(
      ctx,
      Val32Array{x21[0]._super,  x21[1]._super,  x21[2]._super,  x21[3]._super,  x21[4]._super,
                 x21[5]._super,  x21[6]._super,  x21[7]._super,  x21[8]._super,  x21[9]._super,
                 x21[10]._super, x21[11]._super, x21[12]._super, x21[13]._super, x21[14]._super,
                 x21[15]._super, x21[16]._super, x21[17]._super, x21[18]._super, x21[19]._super,
                 x21[20]._super, x21[21]._super, x22[0]._super,  x22[1]._super,  x22[2]._super,
                 x22[3]._super,  x22[4]._super,  x22[5]._super,  x22[6]._super,  x22[7]._super,
                 x22[8]._super,  x22[9]._super},
      Val32Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super, x24[0]._super,  x24[1]._super,  x24[2]._super,
                 x24[3]._super,  x24[4]._super,  x24[5]._super,  x24[6]._super,  x24[7]._super,
                 x24[8]._super,  x24[9]._super},
      Val32Array{x25[0]._super,  x25[1]._super,  x25[2]._super,  x25[3]._super,  x25[4]._super,
                 x25[5]._super,  x25[6]._super,  x25[7]._super,  x25[8]._super,  x25[9]._super,
                 x25[10]._super, x25[11]._super, x25[12]._super, x25[13]._super, x25[14]._super,
                 x25[15]._super, x25[16]._super, x25[17]._super, x25[18]._super, x25[19]._super,
                 x25[20]._super, x25[21]._super, x26[0]._super,  x26[1]._super,  x26[2]._super,
                 x26[3]._super,  x26[4]._super,  x26[5]._super,  x26[6]._super,  x26[7]._super,
                 x26[8]._super,  x26[9]._super},
      Val32Array{x27[0]._super,  x27[1]._super,  x27[2]._super,  x27[3]._super,  x27[4]._super,
                 x27[5]._super,  x27[6]._super,  x27[7]._super,  x27[8]._super,  x27[9]._super,
                 x27[10]._super, x27[11]._super, x27[12]._super, x27[13]._super, x27[14]._super,
                 x27[15]._super, x27[16]._super, x27[17]._super, x27[18]._super, x27[19]._super,
                 x27[20]._super, x27[21]._super, x28[0]._super,  x28[1]._super,  x28[2]._super,
                 x28[3]._super,  x28[4]._super,  x28[5]._super,  x28[6]._super,  x28[7]._super,
                 x28[8]._super,  x28[9]._super},
      Val32Array{x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super, x29[0]._super,  x29[1]._super,  x29[2]._super,
                 x29[3]._super,  x29[4]._super,  x29[5]._super,  x29[6]._super,  x29[7]._super,
                 x29[8]._super,  x29[9]._super,  x29[10]._super, x29[11]._super, x29[12]._super,
                 x29[13]._super, x29[14]._super, x29[15]._super, x29[16]._super, x29[17]._super,
                 x29[18]._super, x29[19]._super},
      Val32Array{x24[10]._super, x24[11]._super, x24[12]._super, x24[13]._super, x24[14]._super,
                 x24[15]._super, x24[16]._super, x24[17]._super, x24[18]._super, x24[19]._super,
                 x24[20]._super, x24[21]._super, x30[0]._super,  x30[1]._super,  x30[2]._super,
                 x30[3]._super,  x30[4]._super,  x30[5]._super,  x30[6]._super,  x30[7]._super,
                 x30[8]._super,  x30[9]._super,  x30[10]._super, x30[11]._super, x30[12]._super,
                 x30[13]._super, x30[14]._super, x30[15]._super, x30[16]._super, x30[17]._super,
                 x30[18]._super, x30[19]._super},
      Val32Array{x26[10]._super, x26[11]._super, x26[12]._super, x26[13]._super, x26[14]._super,
                 x26[15]._super, x26[16]._super, x26[17]._super, x26[18]._super, x26[19]._super,
                 x26[20]._super, x26[21]._super, x31[0]._super,  x31[1]._super,  x31[2]._super,
                 x31[3]._super,  x31[4]._super,  x31[5]._super,  x31[6]._super,  x31[7]._super,
                 x31[8]._super,  x31[9]._super,  x31[10]._super, x31[11]._super, x31[12]._super,
                 x31[13]._super, x31[14]._super, x31[15]._super, x31[16]._super, x31[17]._super,
                 x31[18]._super, x31[19]._super},
      Val32Array{x28[10]._super, x28[11]._super, x28[12]._super, x28[13]._super, x28[14]._super,
                 x28[15]._super, x28[16]._super, x28[17]._super, x28[18]._super, x28[19]._super,
                 x28[20]._super, x28[21]._super, x32[0]._super,  x32[1]._super,  x32[2]._super,
                 x32[3]._super,  x32[4]._super,  x32[5]._super,  x32[6]._super,  x32[7]._super,
                 x32[8]._super,  x32[9]._super,  x32[10]._super, x32[11]._super, x32[12]._super,
                 x32[13]._super, x32[14]._super, x32[15]._super, x32[16]._super, x32[17]._super,
                 x32[18]._super, x32[19]._super},
      Val32Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49,
                 x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65},
      TwoShortsStruct{.low = Val(18310), .high = Val(61374)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x67 = x66.aOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16_Struct x68 =
      execUnpackWithCarry(ctx, x67.low, x67.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  TwoShortsStruct x69 = x66.eOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16_Struct x70 =
      execUnpackWithCarry(ctx, x69.low, x69.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x71 = x68._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x72 = x70._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_0__1_Arm1_Super_SuperLayout> x73 = LAYOUT_LOOKUP(x3, arm1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:373)
  Val22Array x74 =
      Val22Array{x71[0]._super,  x71[1]._super,  x71[2]._super,  x71[3]._super,  x71[4]._super,
                 x71[5]._super,  x71[6]._super,  x71[7]._super,  x71[8]._super,  x71[9]._super,
                 x71[10]._super, x71[11]._super, x71[12]._super, x71[13]._super, x71[14]._super,
                 x71[15]._super, x71[16]._super, x71[17]._super, x71[18]._super, x71[19]._super,
                 x71[20]._super, x71[21]._super};
  Val22Array x75 =
      Val22Array{x71[22]._super, x71[23]._super, x71[24]._super, x71[25]._super, x71[26]._super,
                 x71[27]._super, x71[28]._super, x71[29]._super, x71[30]._super, x71[31]._super,
                 x72[0]._super,  x72[1]._super,  x72[2]._super,  x72[3]._super,  x72[4]._super,
                 x72[5]._super,  x72[6]._super,  x72[7]._super,  x72[8]._super,  x72[9]._super,
                 x72[10]._super, x72[11]._super};
  Val22Array x76 =
      Val22Array{x72[12]._super, x72[13]._super, x72[14]._super, x72[15]._super, x72[16]._super,
                 x72[17]._super, x72[18]._super, x72[19]._super, x72[20]._super, x72[21]._super,
                 x72[22]._super, x72[23]._super, x72[24]._super, x72[25]._super, x72[26]._super,
                 x72[27]._super, x72[28]._super, x72[29]._super, x72[30]._super, x72[31]._super,
                 Val(0),         Val(0)};
  Val22Array x77 = Val22Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,
                              x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55};
  Val22Array x78 = Val22Array{x56,    x57,    x58,    x59,    x60,    x61,    x62,    x63,
                              x64,    x65,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  Val x79 = x4.blk._super;
  Val x80 = x4.midx._super;
  if (to_size_t(Val(1))) {
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:376)
    RetTupleStruct x81 =
        exec_RetTuple(ctx,
                      x74,
                      x75,
                      x76,
                      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                      x77,
                      x78,
                      Val(2),
                      Val(20),
                      Val(0),
                      x79,
                      x80,
                      LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  NondetRegStruct24Array x82 = x4.arrD;
  Val24Array x83 =
      Val24Array{x82[0]._super,  x82[1]._super,  x82[2]._super,  x82[3]._super,  x82[4]._super,
                 x82[5]._super,  x82[6]._super,  x82[7]._super,  x82[8]._super,  x82[9]._super,
                 x82[10]._super, x82[11]._super, x82[12]._super, x82[13]._super, x82[14]._super,
                 x82[15]._super, x82[16]._super, x82[17]._super, x82[18]._super, x82[19]._super,
                 x82[20]._super, x82[21]._super, x82[22]._super, x82[23]._super};
  Val x84 = x4.rnd._super;
  if (to_size_t(Val(0))) {
    if (to_size_t(Val(1))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:380)
      RetTupleStruct x85 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(0),
                                         Val(21),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm0));
    }
    if (to_size_t(Val(0))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:383)
      RetTupleStruct x86 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(9),
                                         Val(17),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm1));
    }
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:379)
    RetTupleStruct x87 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x73, _super));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  RetTupleStruct x88 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x88;
}
RetTupleStruct execSha256mix_0__2_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<Sha256mix_0__2_Layout> layout2) {
  BoundLayout<Sha256mix_0__2__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:359)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:360)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:361)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:362)
  RetTupleStruct x8 = back_RetTuple(ctx, 7, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:363)
  RetTupleStruct x9 = back_RetTuple(ctx, 15, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:364)
  RetTupleStruct x10 = back_RetTuple(ctx, 16, arg1);
  // s2w(zirgen/circuit/keccak/sha256_for_keccak.zir:155)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:366)
  NondetRegStruct22Array x11 = x5.arrE;
  NondetRegStruct22Array x12 = x5.arrF;
  NondetRegStruct22Array x13 = x8.arrE;
  NondetRegStruct22Array x14 = x8.arrF;
  NondetRegStruct22Array x15 = x9.arrE;
  NondetRegStruct22Array x16 = x9.arrF;
  NondetRegStruct22Array x17 = x10.arrE;
  NondetRegStruct22Array x18 = x10.arrF;
  TwoShortsStruct x19 = execComputeW(
      ctx,
      Val32Array{x11[0]._super,  x11[1]._super,  x11[2]._super,  x11[3]._super,  x11[4]._super,
                 x11[5]._super,  x11[6]._super,  x11[7]._super,  x11[8]._super,  x11[9]._super,
                 x11[10]._super, x11[11]._super, x11[12]._super, x11[13]._super, x11[14]._super,
                 x11[15]._super, x11[16]._super, x11[17]._super, x11[18]._super, x11[19]._super,
                 x11[20]._super, x11[21]._super, x12[0]._super,  x12[1]._super,  x12[2]._super,
                 x12[3]._super,  x12[4]._super,  x12[5]._super,  x12[6]._super,  x12[7]._super,
                 x12[8]._super,  x12[9]._super},
      Val32Array{x13[0]._super,  x13[1]._super,  x13[2]._super,  x13[3]._super,  x13[4]._super,
                 x13[5]._super,  x13[6]._super,  x13[7]._super,  x13[8]._super,  x13[9]._super,
                 x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x14[0]._super,  x14[1]._super,  x14[2]._super,
                 x14[3]._super,  x14[4]._super,  x14[5]._super,  x14[6]._super,  x14[7]._super,
                 x14[8]._super,  x14[9]._super},
      Val32Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x16[0]._super,  x16[1]._super,  x16[2]._super,
                 x16[3]._super,  x16[4]._super,  x16[5]._super,  x16[6]._super,  x16[7]._super,
                 x16[8]._super,  x16[9]._super},
      Val32Array{x17[0]._super,  x17[1]._super,  x17[2]._super,  x17[3]._super,  x17[4]._super,
                 x17[5]._super,  x17[6]._super,  x17[7]._super,  x17[8]._super,  x17[9]._super,
                 x17[10]._super, x17[11]._super, x17[12]._super, x17[13]._super, x17[14]._super,
                 x17[15]._super, x17[16]._super, x17[17]._super, x17[18]._super, x17[19]._super,
                 x17[20]._super, x17[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super},
      LAYOUT_LOOKUP(layout2, packedW));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16_Struct x20 =
      execUnpackWithCarry(ctx, x19.low, x19.high, LAYOUT_LOOKUP(layout2, newW));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  NondetRegStruct22Array x21 = x4.arrA;
  NondetRegStruct22Array x22 = x4.arrB;
  NondetRegStruct22Array x23 = x5.arrA;
  NondetRegStruct22Array x24 = x5.arrB;
  NondetRegStruct22Array x25 = x6.arrA;
  NondetRegStruct22Array x26 = x6.arrB;
  NondetRegStruct22Array x27 = x7.arrA;
  NondetRegStruct22Array x28 = x7.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:369)
  NondetRegStruct22Array x29 = x4.arrC;
  NondetRegStruct22Array x30 = x5.arrC;
  NondetRegStruct22Array x31 = x6.arrC;
  NondetRegStruct22Array x32 = x7.arrC;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x33 = x20._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  Val x55 = x33[21]._super;
  Val x56 = x33[22]._super;
  Val x57 = x33[23]._super;
  Val x58 = x33[24]._super;
  Val x59 = x33[25]._super;
  Val x60 = x33[26]._super;
  Val x61 = x33[27]._super;
  Val x62 = x33[28]._super;
  Val x63 = x33[29]._super;
  Val x64 = x33[30]._super;
  Val x65 = x33[31]._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  ComputeAEStruct x66 = execComputeAE(
      ctx,
      Val32Array{x21[0]._super,  x21[1]._super,  x21[2]._super,  x21[3]._super,  x21[4]._super,
                 x21[5]._super,  x21[6]._super,  x21[7]._super,  x21[8]._super,  x21[9]._super,
                 x21[10]._super, x21[11]._super, x21[12]._super, x21[13]._super, x21[14]._super,
                 x21[15]._super, x21[16]._super, x21[17]._super, x21[18]._super, x21[19]._super,
                 x21[20]._super, x21[21]._super, x22[0]._super,  x22[1]._super,  x22[2]._super,
                 x22[3]._super,  x22[4]._super,  x22[5]._super,  x22[6]._super,  x22[7]._super,
                 x22[8]._super,  x22[9]._super},
      Val32Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super, x24[0]._super,  x24[1]._super,  x24[2]._super,
                 x24[3]._super,  x24[4]._super,  x24[5]._super,  x24[6]._super,  x24[7]._super,
                 x24[8]._super,  x24[9]._super},
      Val32Array{x25[0]._super,  x25[1]._super,  x25[2]._super,  x25[3]._super,  x25[4]._super,
                 x25[5]._super,  x25[6]._super,  x25[7]._super,  x25[8]._super,  x25[9]._super,
                 x25[10]._super, x25[11]._super, x25[12]._super, x25[13]._super, x25[14]._super,
                 x25[15]._super, x25[16]._super, x25[17]._super, x25[18]._super, x25[19]._super,
                 x25[20]._super, x25[21]._super, x26[0]._super,  x26[1]._super,  x26[2]._super,
                 x26[3]._super,  x26[4]._super,  x26[5]._super,  x26[6]._super,  x26[7]._super,
                 x26[8]._super,  x26[9]._super},
      Val32Array{x27[0]._super,  x27[1]._super,  x27[2]._super,  x27[3]._super,  x27[4]._super,
                 x27[5]._super,  x27[6]._super,  x27[7]._super,  x27[8]._super,  x27[9]._super,
                 x27[10]._super, x27[11]._super, x27[12]._super, x27[13]._super, x27[14]._super,
                 x27[15]._super, x27[16]._super, x27[17]._super, x27[18]._super, x27[19]._super,
                 x27[20]._super, x27[21]._super, x28[0]._super,  x28[1]._super,  x28[2]._super,
                 x28[3]._super,  x28[4]._super,  x28[5]._super,  x28[6]._super,  x28[7]._super,
                 x28[8]._super,  x28[9]._super},
      Val32Array{x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super, x29[0]._super,  x29[1]._super,  x29[2]._super,
                 x29[3]._super,  x29[4]._super,  x29[5]._super,  x29[6]._super,  x29[7]._super,
                 x29[8]._super,  x29[9]._super,  x29[10]._super, x29[11]._super, x29[12]._super,
                 x29[13]._super, x29[14]._super, x29[15]._super, x29[16]._super, x29[17]._super,
                 x29[18]._super, x29[19]._super},
      Val32Array{x24[10]._super, x24[11]._super, x24[12]._super, x24[13]._super, x24[14]._super,
                 x24[15]._super, x24[16]._super, x24[17]._super, x24[18]._super, x24[19]._super,
                 x24[20]._super, x24[21]._super, x30[0]._super,  x30[1]._super,  x30[2]._super,
                 x30[3]._super,  x30[4]._super,  x30[5]._super,  x30[6]._super,  x30[7]._super,
                 x30[8]._super,  x30[9]._super,  x30[10]._super, x30[11]._super, x30[12]._super,
                 x30[13]._super, x30[14]._super, x30[15]._super, x30[16]._super, x30[17]._super,
                 x30[18]._super, x30[19]._super},
      Val32Array{x26[10]._super, x26[11]._super, x26[12]._super, x26[13]._super, x26[14]._super,
                 x26[15]._super, x26[16]._super, x26[17]._super, x26[18]._super, x26[19]._super,
                 x26[20]._super, x26[21]._super, x31[0]._super,  x31[1]._super,  x31[2]._super,
                 x31[3]._super,  x31[4]._super,  x31[5]._super,  x31[6]._super,  x31[7]._super,
                 x31[8]._super,  x31[9]._super,  x31[10]._super, x31[11]._super, x31[12]._super,
                 x31[13]._super, x31[14]._super, x31[15]._super, x31[16]._super, x31[17]._super,
                 x31[18]._super, x31[19]._super},
      Val32Array{x28[10]._super, x28[11]._super, x28[12]._super, x28[13]._super, x28[14]._super,
                 x28[15]._super, x28[16]._super, x28[17]._super, x28[18]._super, x28[19]._super,
                 x28[20]._super, x28[21]._super, x32[0]._super,  x32[1]._super,  x32[2]._super,
                 x32[3]._super,  x32[4]._super,  x32[5]._super,  x32[6]._super,  x32[7]._super,
                 x32[8]._super,  x32[9]._super,  x32[10]._super, x32[11]._super, x32[12]._super,
                 x32[13]._super, x32[14]._super, x32[15]._super, x32[16]._super, x32[17]._super,
                 x32[18]._super, x32[19]._super},
      Val32Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49,
                 x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65},
      TwoShortsStruct{.low = Val(40390), .high = Val(4033)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x67 = x66.aOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16_Struct x68 =
      execUnpackWithCarry(ctx, x67.low, x67.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  TwoShortsStruct x69 = x66.eOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16_Struct x70 =
      execUnpackWithCarry(ctx, x69.low, x69.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x71 = x68._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x72 = x70._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_0__2_Arm1_Super_SuperLayout> x73 = LAYOUT_LOOKUP(x3, arm1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:373)
  Val22Array x74 =
      Val22Array{x71[0]._super,  x71[1]._super,  x71[2]._super,  x71[3]._super,  x71[4]._super,
                 x71[5]._super,  x71[6]._super,  x71[7]._super,  x71[8]._super,  x71[9]._super,
                 x71[10]._super, x71[11]._super, x71[12]._super, x71[13]._super, x71[14]._super,
                 x71[15]._super, x71[16]._super, x71[17]._super, x71[18]._super, x71[19]._super,
                 x71[20]._super, x71[21]._super};
  Val22Array x75 =
      Val22Array{x71[22]._super, x71[23]._super, x71[24]._super, x71[25]._super, x71[26]._super,
                 x71[27]._super, x71[28]._super, x71[29]._super, x71[30]._super, x71[31]._super,
                 x72[0]._super,  x72[1]._super,  x72[2]._super,  x72[3]._super,  x72[4]._super,
                 x72[5]._super,  x72[6]._super,  x72[7]._super,  x72[8]._super,  x72[9]._super,
                 x72[10]._super, x72[11]._super};
  Val22Array x76 =
      Val22Array{x72[12]._super, x72[13]._super, x72[14]._super, x72[15]._super, x72[16]._super,
                 x72[17]._super, x72[18]._super, x72[19]._super, x72[20]._super, x72[21]._super,
                 x72[22]._super, x72[23]._super, x72[24]._super, x72[25]._super, x72[26]._super,
                 x72[27]._super, x72[28]._super, x72[29]._super, x72[30]._super, x72[31]._super,
                 Val(0),         Val(0)};
  Val22Array x77 = Val22Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,
                              x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55};
  Val22Array x78 = Val22Array{x56,    x57,    x58,    x59,    x60,    x61,    x62,    x63,
                              x64,    x65,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  Val x79 = x4.blk._super;
  Val x80 = x4.midx._super;
  if (to_size_t(Val(1))) {
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:376)
    RetTupleStruct x81 =
        exec_RetTuple(ctx,
                      x74,
                      x75,
                      x76,
                      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                      x77,
                      x78,
                      Val(3),
                      Val(20),
                      Val(0),
                      x79,
                      x80,
                      LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  NondetRegStruct24Array x82 = x4.arrD;
  Val24Array x83 =
      Val24Array{x82[0]._super,  x82[1]._super,  x82[2]._super,  x82[3]._super,  x82[4]._super,
                 x82[5]._super,  x82[6]._super,  x82[7]._super,  x82[8]._super,  x82[9]._super,
                 x82[10]._super, x82[11]._super, x82[12]._super, x82[13]._super, x82[14]._super,
                 x82[15]._super, x82[16]._super, x82[17]._super, x82[18]._super, x82[19]._super,
                 x82[20]._super, x82[21]._super, x82[22]._super, x82[23]._super};
  Val x84 = x4.rnd._super;
  if (to_size_t(Val(0))) {
    if (to_size_t(Val(1))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:380)
      RetTupleStruct x85 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(0),
                                         Val(21),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm0));
    }
    if (to_size_t(Val(0))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:383)
      RetTupleStruct x86 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(9),
                                         Val(17),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm1));
    }
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:379)
    RetTupleStruct x87 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x73, _super));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  RetTupleStruct x88 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x88;
}
RetTupleStruct execSha256mix_0__3_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<Sha256mix_0__3_Layout> layout2) {
  BoundLayout<Sha256mix_0__3__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:359)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:360)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:361)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:362)
  RetTupleStruct x8 = back_RetTuple(ctx, 7, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:363)
  RetTupleStruct x9 = back_RetTuple(ctx, 15, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:364)
  RetTupleStruct x10 = back_RetTuple(ctx, 16, arg1);
  // s2w(zirgen/circuit/keccak/sha256_for_keccak.zir:155)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:366)
  NondetRegStruct22Array x11 = x5.arrE;
  NondetRegStruct22Array x12 = x5.arrF;
  NondetRegStruct22Array x13 = x8.arrE;
  NondetRegStruct22Array x14 = x8.arrF;
  NondetRegStruct22Array x15 = x9.arrE;
  NondetRegStruct22Array x16 = x9.arrF;
  NondetRegStruct22Array x17 = x10.arrE;
  NondetRegStruct22Array x18 = x10.arrF;
  TwoShortsStruct x19 = execComputeW(
      ctx,
      Val32Array{x11[0]._super,  x11[1]._super,  x11[2]._super,  x11[3]._super,  x11[4]._super,
                 x11[5]._super,  x11[6]._super,  x11[7]._super,  x11[8]._super,  x11[9]._super,
                 x11[10]._super, x11[11]._super, x11[12]._super, x11[13]._super, x11[14]._super,
                 x11[15]._super, x11[16]._super, x11[17]._super, x11[18]._super, x11[19]._super,
                 x11[20]._super, x11[21]._super, x12[0]._super,  x12[1]._super,  x12[2]._super,
                 x12[3]._super,  x12[4]._super,  x12[5]._super,  x12[6]._super,  x12[7]._super,
                 x12[8]._super,  x12[9]._super},
      Val32Array{x13[0]._super,  x13[1]._super,  x13[2]._super,  x13[3]._super,  x13[4]._super,
                 x13[5]._super,  x13[6]._super,  x13[7]._super,  x13[8]._super,  x13[9]._super,
                 x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x14[0]._super,  x14[1]._super,  x14[2]._super,
                 x14[3]._super,  x14[4]._super,  x14[5]._super,  x14[6]._super,  x14[7]._super,
                 x14[8]._super,  x14[9]._super},
      Val32Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x16[0]._super,  x16[1]._super,  x16[2]._super,
                 x16[3]._super,  x16[4]._super,  x16[5]._super,  x16[6]._super,  x16[7]._super,
                 x16[8]._super,  x16[9]._super},
      Val32Array{x17[0]._super,  x17[1]._super,  x17[2]._super,  x17[3]._super,  x17[4]._super,
                 x17[5]._super,  x17[6]._super,  x17[7]._super,  x17[8]._super,  x17[9]._super,
                 x17[10]._super, x17[11]._super, x17[12]._super, x17[13]._super, x17[14]._super,
                 x17[15]._super, x17[16]._super, x17[17]._super, x17[18]._super, x17[19]._super,
                 x17[20]._super, x17[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super},
      LAYOUT_LOOKUP(layout2, packedW));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16_Struct x20 =
      execUnpackWithCarry(ctx, x19.low, x19.high, LAYOUT_LOOKUP(layout2, newW));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  NondetRegStruct22Array x21 = x4.arrA;
  NondetRegStruct22Array x22 = x4.arrB;
  NondetRegStruct22Array x23 = x5.arrA;
  NondetRegStruct22Array x24 = x5.arrB;
  NondetRegStruct22Array x25 = x6.arrA;
  NondetRegStruct22Array x26 = x6.arrB;
  NondetRegStruct22Array x27 = x7.arrA;
  NondetRegStruct22Array x28 = x7.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:369)
  NondetRegStruct22Array x29 = x4.arrC;
  NondetRegStruct22Array x30 = x5.arrC;
  NondetRegStruct22Array x31 = x6.arrC;
  NondetRegStruct22Array x32 = x7.arrC;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x33 = x20._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  Val x55 = x33[21]._super;
  Val x56 = x33[22]._super;
  Val x57 = x33[23]._super;
  Val x58 = x33[24]._super;
  Val x59 = x33[25]._super;
  Val x60 = x33[26]._super;
  Val x61 = x33[27]._super;
  Val x62 = x33[28]._super;
  Val x63 = x33[29]._super;
  Val x64 = x33[30]._super;
  Val x65 = x33[31]._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  ComputeAEStruct x66 = execComputeAE(
      ctx,
      Val32Array{x21[0]._super,  x21[1]._super,  x21[2]._super,  x21[3]._super,  x21[4]._super,
                 x21[5]._super,  x21[6]._super,  x21[7]._super,  x21[8]._super,  x21[9]._super,
                 x21[10]._super, x21[11]._super, x21[12]._super, x21[13]._super, x21[14]._super,
                 x21[15]._super, x21[16]._super, x21[17]._super, x21[18]._super, x21[19]._super,
                 x21[20]._super, x21[21]._super, x22[0]._super,  x22[1]._super,  x22[2]._super,
                 x22[3]._super,  x22[4]._super,  x22[5]._super,  x22[6]._super,  x22[7]._super,
                 x22[8]._super,  x22[9]._super},
      Val32Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super, x24[0]._super,  x24[1]._super,  x24[2]._super,
                 x24[3]._super,  x24[4]._super,  x24[5]._super,  x24[6]._super,  x24[7]._super,
                 x24[8]._super,  x24[9]._super},
      Val32Array{x25[0]._super,  x25[1]._super,  x25[2]._super,  x25[3]._super,  x25[4]._super,
                 x25[5]._super,  x25[6]._super,  x25[7]._super,  x25[8]._super,  x25[9]._super,
                 x25[10]._super, x25[11]._super, x25[12]._super, x25[13]._super, x25[14]._super,
                 x25[15]._super, x25[16]._super, x25[17]._super, x25[18]._super, x25[19]._super,
                 x25[20]._super, x25[21]._super, x26[0]._super,  x26[1]._super,  x26[2]._super,
                 x26[3]._super,  x26[4]._super,  x26[5]._super,  x26[6]._super,  x26[7]._super,
                 x26[8]._super,  x26[9]._super},
      Val32Array{x27[0]._super,  x27[1]._super,  x27[2]._super,  x27[3]._super,  x27[4]._super,
                 x27[5]._super,  x27[6]._super,  x27[7]._super,  x27[8]._super,  x27[9]._super,
                 x27[10]._super, x27[11]._super, x27[12]._super, x27[13]._super, x27[14]._super,
                 x27[15]._super, x27[16]._super, x27[17]._super, x27[18]._super, x27[19]._super,
                 x27[20]._super, x27[21]._super, x28[0]._super,  x28[1]._super,  x28[2]._super,
                 x28[3]._super,  x28[4]._super,  x28[5]._super,  x28[6]._super,  x28[7]._super,
                 x28[8]._super,  x28[9]._super},
      Val32Array{x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super, x29[0]._super,  x29[1]._super,  x29[2]._super,
                 x29[3]._super,  x29[4]._super,  x29[5]._super,  x29[6]._super,  x29[7]._super,
                 x29[8]._super,  x29[9]._super,  x29[10]._super, x29[11]._super, x29[12]._super,
                 x29[13]._super, x29[14]._super, x29[15]._super, x29[16]._super, x29[17]._super,
                 x29[18]._super, x29[19]._super},
      Val32Array{x24[10]._super, x24[11]._super, x24[12]._super, x24[13]._super, x24[14]._super,
                 x24[15]._super, x24[16]._super, x24[17]._super, x24[18]._super, x24[19]._super,
                 x24[20]._super, x24[21]._super, x30[0]._super,  x30[1]._super,  x30[2]._super,
                 x30[3]._super,  x30[4]._super,  x30[5]._super,  x30[6]._super,  x30[7]._super,
                 x30[8]._super,  x30[9]._super,  x30[10]._super, x30[11]._super, x30[12]._super,
                 x30[13]._super, x30[14]._super, x30[15]._super, x30[16]._super, x30[17]._super,
                 x30[18]._super, x30[19]._super},
      Val32Array{x26[10]._super, x26[11]._super, x26[12]._super, x26[13]._super, x26[14]._super,
                 x26[15]._super, x26[16]._super, x26[17]._super, x26[18]._super, x26[19]._super,
                 x26[20]._super, x26[21]._super, x31[0]._super,  x31[1]._super,  x31[2]._super,
                 x31[3]._super,  x31[4]._super,  x31[5]._super,  x31[6]._super,  x31[7]._super,
                 x31[8]._super,  x31[9]._super,  x31[10]._super, x31[11]._super, x31[12]._super,
                 x31[13]._super, x31[14]._super, x31[15]._super, x31[16]._super, x31[17]._super,
                 x31[18]._super, x31[19]._super},
      Val32Array{x28[10]._super, x28[11]._super, x28[12]._super, x28[13]._super, x28[14]._super,
                 x28[15]._super, x28[16]._super, x28[17]._super, x28[18]._super, x28[19]._super,
                 x28[20]._super, x28[21]._super, x32[0]._super,  x32[1]._super,  x32[2]._super,
                 x32[3]._super,  x32[4]._super,  x32[5]._super,  x32[6]._super,  x32[7]._super,
                 x32[8]._super,  x32[9]._super,  x32[10]._super, x32[11]._super, x32[12]._super,
                 x32[13]._super, x32[14]._super, x32[15]._super, x32[16]._super, x32[17]._super,
                 x32[18]._super, x32[19]._super},
      Val32Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49,
                 x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65},
      TwoShortsStruct{.low = Val(41420), .high = Val(9228)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x67 = x66.aOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16_Struct x68 =
      execUnpackWithCarry(ctx, x67.low, x67.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  TwoShortsStruct x69 = x66.eOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16_Struct x70 =
      execUnpackWithCarry(ctx, x69.low, x69.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x71 = x68._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x72 = x70._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_0__3_Arm1_Super_SuperLayout> x73 = LAYOUT_LOOKUP(x3, arm1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:373)
  Val22Array x74 =
      Val22Array{x71[0]._super,  x71[1]._super,  x71[2]._super,  x71[3]._super,  x71[4]._super,
                 x71[5]._super,  x71[6]._super,  x71[7]._super,  x71[8]._super,  x71[9]._super,
                 x71[10]._super, x71[11]._super, x71[12]._super, x71[13]._super, x71[14]._super,
                 x71[15]._super, x71[16]._super, x71[17]._super, x71[18]._super, x71[19]._super,
                 x71[20]._super, x71[21]._super};
  Val22Array x75 =
      Val22Array{x71[22]._super, x71[23]._super, x71[24]._super, x71[25]._super, x71[26]._super,
                 x71[27]._super, x71[28]._super, x71[29]._super, x71[30]._super, x71[31]._super,
                 x72[0]._super,  x72[1]._super,  x72[2]._super,  x72[3]._super,  x72[4]._super,
                 x72[5]._super,  x72[6]._super,  x72[7]._super,  x72[8]._super,  x72[9]._super,
                 x72[10]._super, x72[11]._super};
  Val22Array x76 =
      Val22Array{x72[12]._super, x72[13]._super, x72[14]._super, x72[15]._super, x72[16]._super,
                 x72[17]._super, x72[18]._super, x72[19]._super, x72[20]._super, x72[21]._super,
                 x72[22]._super, x72[23]._super, x72[24]._super, x72[25]._super, x72[26]._super,
                 x72[27]._super, x72[28]._super, x72[29]._super, x72[30]._super, x72[31]._super,
                 Val(0),         Val(0)};
  Val22Array x77 = Val22Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,
                              x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55};
  Val22Array x78 = Val22Array{x56,    x57,    x58,    x59,    x60,    x61,    x62,    x63,
                              x64,    x65,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  Val x79 = x4.blk._super;
  Val x80 = x4.midx._super;
  if (to_size_t(Val(1))) {
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:376)
    RetTupleStruct x81 =
        exec_RetTuple(ctx,
                      x74,
                      x75,
                      x76,
                      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                      x77,
                      x78,
                      Val(4),
                      Val(20),
                      Val(0),
                      x79,
                      x80,
                      LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  NondetRegStruct24Array x82 = x4.arrD;
  Val24Array x83 =
      Val24Array{x82[0]._super,  x82[1]._super,  x82[2]._super,  x82[3]._super,  x82[4]._super,
                 x82[5]._super,  x82[6]._super,  x82[7]._super,  x82[8]._super,  x82[9]._super,
                 x82[10]._super, x82[11]._super, x82[12]._super, x82[13]._super, x82[14]._super,
                 x82[15]._super, x82[16]._super, x82[17]._super, x82[18]._super, x82[19]._super,
                 x82[20]._super, x82[21]._super, x82[22]._super, x82[23]._super};
  Val x84 = x4.rnd._super;
  if (to_size_t(Val(0))) {
    if (to_size_t(Val(1))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:380)
      RetTupleStruct x85 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(0),
                                         Val(21),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm0));
    }
    if (to_size_t(Val(0))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:383)
      RetTupleStruct x86 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(9),
                                         Val(17),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm1));
    }
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:379)
    RetTupleStruct x87 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x73, _super));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  RetTupleStruct x88 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x88;
}
RetTupleStruct execSha256mix_0__4_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<Sha256mix_0__4_Layout> layout2) {
  BoundLayout<Sha256mix_0__4__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:359)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:360)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:361)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:362)
  RetTupleStruct x8 = back_RetTuple(ctx, 7, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:363)
  RetTupleStruct x9 = back_RetTuple(ctx, 15, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:364)
  RetTupleStruct x10 = back_RetTuple(ctx, 16, arg1);
  // s2w(zirgen/circuit/keccak/sha256_for_keccak.zir:155)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:366)
  NondetRegStruct22Array x11 = x5.arrE;
  NondetRegStruct22Array x12 = x5.arrF;
  NondetRegStruct22Array x13 = x8.arrE;
  NondetRegStruct22Array x14 = x8.arrF;
  NondetRegStruct22Array x15 = x9.arrE;
  NondetRegStruct22Array x16 = x9.arrF;
  NondetRegStruct22Array x17 = x10.arrE;
  NondetRegStruct22Array x18 = x10.arrF;
  TwoShortsStruct x19 = execComputeW(
      ctx,
      Val32Array{x11[0]._super,  x11[1]._super,  x11[2]._super,  x11[3]._super,  x11[4]._super,
                 x11[5]._super,  x11[6]._super,  x11[7]._super,  x11[8]._super,  x11[9]._super,
                 x11[10]._super, x11[11]._super, x11[12]._super, x11[13]._super, x11[14]._super,
                 x11[15]._super, x11[16]._super, x11[17]._super, x11[18]._super, x11[19]._super,
                 x11[20]._super, x11[21]._super, x12[0]._super,  x12[1]._super,  x12[2]._super,
                 x12[3]._super,  x12[4]._super,  x12[5]._super,  x12[6]._super,  x12[7]._super,
                 x12[8]._super,  x12[9]._super},
      Val32Array{x13[0]._super,  x13[1]._super,  x13[2]._super,  x13[3]._super,  x13[4]._super,
                 x13[5]._super,  x13[6]._super,  x13[7]._super,  x13[8]._super,  x13[9]._super,
                 x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x14[0]._super,  x14[1]._super,  x14[2]._super,
                 x14[3]._super,  x14[4]._super,  x14[5]._super,  x14[6]._super,  x14[7]._super,
                 x14[8]._super,  x14[9]._super},
      Val32Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x16[0]._super,  x16[1]._super,  x16[2]._super,
                 x16[3]._super,  x16[4]._super,  x16[5]._super,  x16[6]._super,  x16[7]._super,
                 x16[8]._super,  x16[9]._super},
      Val32Array{x17[0]._super,  x17[1]._super,  x17[2]._super,  x17[3]._super,  x17[4]._super,
                 x17[5]._super,  x17[6]._super,  x17[7]._super,  x17[8]._super,  x17[9]._super,
                 x17[10]._super, x17[11]._super, x17[12]._super, x17[13]._super, x17[14]._super,
                 x17[15]._super, x17[16]._super, x17[17]._super, x17[18]._super, x17[19]._super,
                 x17[20]._super, x17[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super},
      LAYOUT_LOOKUP(layout2, packedW));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16_Struct x20 =
      execUnpackWithCarry(ctx, x19.low, x19.high, LAYOUT_LOOKUP(layout2, newW));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  NondetRegStruct22Array x21 = x4.arrA;
  NondetRegStruct22Array x22 = x4.arrB;
  NondetRegStruct22Array x23 = x5.arrA;
  NondetRegStruct22Array x24 = x5.arrB;
  NondetRegStruct22Array x25 = x6.arrA;
  NondetRegStruct22Array x26 = x6.arrB;
  NondetRegStruct22Array x27 = x7.arrA;
  NondetRegStruct22Array x28 = x7.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:369)
  NondetRegStruct22Array x29 = x4.arrC;
  NondetRegStruct22Array x30 = x5.arrC;
  NondetRegStruct22Array x31 = x6.arrC;
  NondetRegStruct22Array x32 = x7.arrC;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x33 = x20._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  Val x55 = x33[21]._super;
  Val x56 = x33[22]._super;
  Val x57 = x33[23]._super;
  Val x58 = x33[24]._super;
  Val x59 = x33[25]._super;
  Val x60 = x33[26]._super;
  Val x61 = x33[27]._super;
  Val x62 = x33[28]._super;
  Val x63 = x33[29]._super;
  Val x64 = x33[30]._super;
  Val x65 = x33[31]._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  ComputeAEStruct x66 = execComputeAE(
      ctx,
      Val32Array{x21[0]._super,  x21[1]._super,  x21[2]._super,  x21[3]._super,  x21[4]._super,
                 x21[5]._super,  x21[6]._super,  x21[7]._super,  x21[8]._super,  x21[9]._super,
                 x21[10]._super, x21[11]._super, x21[12]._super, x21[13]._super, x21[14]._super,
                 x21[15]._super, x21[16]._super, x21[17]._super, x21[18]._super, x21[19]._super,
                 x21[20]._super, x21[21]._super, x22[0]._super,  x22[1]._super,  x22[2]._super,
                 x22[3]._super,  x22[4]._super,  x22[5]._super,  x22[6]._super,  x22[7]._super,
                 x22[8]._super,  x22[9]._super},
      Val32Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super, x24[0]._super,  x24[1]._super,  x24[2]._super,
                 x24[3]._super,  x24[4]._super,  x24[5]._super,  x24[6]._super,  x24[7]._super,
                 x24[8]._super,  x24[9]._super},
      Val32Array{x25[0]._super,  x25[1]._super,  x25[2]._super,  x25[3]._super,  x25[4]._super,
                 x25[5]._super,  x25[6]._super,  x25[7]._super,  x25[8]._super,  x25[9]._super,
                 x25[10]._super, x25[11]._super, x25[12]._super, x25[13]._super, x25[14]._super,
                 x25[15]._super, x25[16]._super, x25[17]._super, x25[18]._super, x25[19]._super,
                 x25[20]._super, x25[21]._super, x26[0]._super,  x26[1]._super,  x26[2]._super,
                 x26[3]._super,  x26[4]._super,  x26[5]._super,  x26[6]._super,  x26[7]._super,
                 x26[8]._super,  x26[9]._super},
      Val32Array{x27[0]._super,  x27[1]._super,  x27[2]._super,  x27[3]._super,  x27[4]._super,
                 x27[5]._super,  x27[6]._super,  x27[7]._super,  x27[8]._super,  x27[9]._super,
                 x27[10]._super, x27[11]._super, x27[12]._super, x27[13]._super, x27[14]._super,
                 x27[15]._super, x27[16]._super, x27[17]._super, x27[18]._super, x27[19]._super,
                 x27[20]._super, x27[21]._super, x28[0]._super,  x28[1]._super,  x28[2]._super,
                 x28[3]._super,  x28[4]._super,  x28[5]._super,  x28[6]._super,  x28[7]._super,
                 x28[8]._super,  x28[9]._super},
      Val32Array{x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super, x29[0]._super,  x29[1]._super,  x29[2]._super,
                 x29[3]._super,  x29[4]._super,  x29[5]._super,  x29[6]._super,  x29[7]._super,
                 x29[8]._super,  x29[9]._super,  x29[10]._super, x29[11]._super, x29[12]._super,
                 x29[13]._super, x29[14]._super, x29[15]._super, x29[16]._super, x29[17]._super,
                 x29[18]._super, x29[19]._super},
      Val32Array{x24[10]._super, x24[11]._super, x24[12]._super, x24[13]._super, x24[14]._super,
                 x24[15]._super, x24[16]._super, x24[17]._super, x24[18]._super, x24[19]._super,
                 x24[20]._super, x24[21]._super, x30[0]._super,  x30[1]._super,  x30[2]._super,
                 x30[3]._super,  x30[4]._super,  x30[5]._super,  x30[6]._super,  x30[7]._super,
                 x30[8]._super,  x30[9]._super,  x30[10]._super, x30[11]._super, x30[12]._super,
                 x30[13]._super, x30[14]._super, x30[15]._super, x30[16]._super, x30[17]._super,
                 x30[18]._super, x30[19]._super},
      Val32Array{x26[10]._super, x26[11]._super, x26[12]._super, x26[13]._super, x26[14]._super,
                 x26[15]._super, x26[16]._super, x26[17]._super, x26[18]._super, x26[19]._super,
                 x26[20]._super, x26[21]._super, x31[0]._super,  x31[1]._super,  x31[2]._super,
                 x31[3]._super,  x31[4]._super,  x31[5]._super,  x31[6]._super,  x31[7]._super,
                 x31[8]._super,  x31[9]._super,  x31[10]._super, x31[11]._super, x31[12]._super,
                 x31[13]._super, x31[14]._super, x31[15]._super, x31[16]._super, x31[17]._super,
                 x31[18]._super, x31[19]._super},
      Val32Array{x28[10]._super, x28[11]._super, x28[12]._super, x28[13]._super, x28[14]._super,
                 x28[15]._super, x28[16]._super, x28[17]._super, x28[18]._super, x28[19]._super,
                 x28[20]._super, x28[21]._super, x32[0]._super,  x32[1]._super,  x32[2]._super,
                 x32[3]._super,  x32[4]._super,  x32[5]._super,  x32[6]._super,  x32[7]._super,
                 x32[8]._super,  x32[9]._super,  x32[10]._super, x32[11]._super, x32[12]._super,
                 x32[13]._super, x32[14]._super, x32[15]._super, x32[16]._super, x32[17]._super,
                 x32[18]._super, x32[19]._super},
      Val32Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49,
                 x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65},
      TwoShortsStruct{.low = Val(11375), .high = Val(11753)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x67 = x66.aOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16_Struct x68 =
      execUnpackWithCarry(ctx, x67.low, x67.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  TwoShortsStruct x69 = x66.eOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16_Struct x70 =
      execUnpackWithCarry(ctx, x69.low, x69.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x71 = x68._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x72 = x70._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_0__4_Arm1_Super_SuperLayout> x73 = LAYOUT_LOOKUP(x3, arm1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:373)
  Val22Array x74 =
      Val22Array{x71[0]._super,  x71[1]._super,  x71[2]._super,  x71[3]._super,  x71[4]._super,
                 x71[5]._super,  x71[6]._super,  x71[7]._super,  x71[8]._super,  x71[9]._super,
                 x71[10]._super, x71[11]._super, x71[12]._super, x71[13]._super, x71[14]._super,
                 x71[15]._super, x71[16]._super, x71[17]._super, x71[18]._super, x71[19]._super,
                 x71[20]._super, x71[21]._super};
  Val22Array x75 =
      Val22Array{x71[22]._super, x71[23]._super, x71[24]._super, x71[25]._super, x71[26]._super,
                 x71[27]._super, x71[28]._super, x71[29]._super, x71[30]._super, x71[31]._super,
                 x72[0]._super,  x72[1]._super,  x72[2]._super,  x72[3]._super,  x72[4]._super,
                 x72[5]._super,  x72[6]._super,  x72[7]._super,  x72[8]._super,  x72[9]._super,
                 x72[10]._super, x72[11]._super};
  Val22Array x76 =
      Val22Array{x72[12]._super, x72[13]._super, x72[14]._super, x72[15]._super, x72[16]._super,
                 x72[17]._super, x72[18]._super, x72[19]._super, x72[20]._super, x72[21]._super,
                 x72[22]._super, x72[23]._super, x72[24]._super, x72[25]._super, x72[26]._super,
                 x72[27]._super, x72[28]._super, x72[29]._super, x72[30]._super, x72[31]._super,
                 Val(0),         Val(0)};
  Val22Array x77 = Val22Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,
                              x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55};
  Val22Array x78 = Val22Array{x56,    x57,    x58,    x59,    x60,    x61,    x62,    x63,
                              x64,    x65,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  Val x79 = x4.blk._super;
  Val x80 = x4.midx._super;
  if (to_size_t(Val(1))) {
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:376)
    RetTupleStruct x81 =
        exec_RetTuple(ctx,
                      x74,
                      x75,
                      x76,
                      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                      x77,
                      x78,
                      Val(5),
                      Val(20),
                      Val(0),
                      x79,
                      x80,
                      LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  NondetRegStruct24Array x82 = x4.arrD;
  Val24Array x83 =
      Val24Array{x82[0]._super,  x82[1]._super,  x82[2]._super,  x82[3]._super,  x82[4]._super,
                 x82[5]._super,  x82[6]._super,  x82[7]._super,  x82[8]._super,  x82[9]._super,
                 x82[10]._super, x82[11]._super, x82[12]._super, x82[13]._super, x82[14]._super,
                 x82[15]._super, x82[16]._super, x82[17]._super, x82[18]._super, x82[19]._super,
                 x82[20]._super, x82[21]._super, x82[22]._super, x82[23]._super};
  Val x84 = x4.rnd._super;
  if (to_size_t(Val(0))) {
    if (to_size_t(Val(1))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:380)
      RetTupleStruct x85 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(0),
                                         Val(21),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm0));
    }
    if (to_size_t(Val(0))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:383)
      RetTupleStruct x86 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(9),
                                         Val(17),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm1));
    }
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:379)
    RetTupleStruct x87 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x73, _super));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  RetTupleStruct x88 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x88;
}
RetTupleStruct execSha256mix_0__5_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<Sha256mix_0__5_Layout> layout2) {
  BoundLayout<Sha256mix_0__5__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:359)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:360)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:361)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:362)
  RetTupleStruct x8 = back_RetTuple(ctx, 7, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:363)
  RetTupleStruct x9 = back_RetTuple(ctx, 15, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:364)
  RetTupleStruct x10 = back_RetTuple(ctx, 16, arg1);
  // s2w(zirgen/circuit/keccak/sha256_for_keccak.zir:155)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:366)
  NondetRegStruct22Array x11 = x5.arrE;
  NondetRegStruct22Array x12 = x5.arrF;
  NondetRegStruct22Array x13 = x8.arrE;
  NondetRegStruct22Array x14 = x8.arrF;
  NondetRegStruct22Array x15 = x9.arrE;
  NondetRegStruct22Array x16 = x9.arrF;
  NondetRegStruct22Array x17 = x10.arrE;
  NondetRegStruct22Array x18 = x10.arrF;
  TwoShortsStruct x19 = execComputeW(
      ctx,
      Val32Array{x11[0]._super,  x11[1]._super,  x11[2]._super,  x11[3]._super,  x11[4]._super,
                 x11[5]._super,  x11[6]._super,  x11[7]._super,  x11[8]._super,  x11[9]._super,
                 x11[10]._super, x11[11]._super, x11[12]._super, x11[13]._super, x11[14]._super,
                 x11[15]._super, x11[16]._super, x11[17]._super, x11[18]._super, x11[19]._super,
                 x11[20]._super, x11[21]._super, x12[0]._super,  x12[1]._super,  x12[2]._super,
                 x12[3]._super,  x12[4]._super,  x12[5]._super,  x12[6]._super,  x12[7]._super,
                 x12[8]._super,  x12[9]._super},
      Val32Array{x13[0]._super,  x13[1]._super,  x13[2]._super,  x13[3]._super,  x13[4]._super,
                 x13[5]._super,  x13[6]._super,  x13[7]._super,  x13[8]._super,  x13[9]._super,
                 x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x14[0]._super,  x14[1]._super,  x14[2]._super,
                 x14[3]._super,  x14[4]._super,  x14[5]._super,  x14[6]._super,  x14[7]._super,
                 x14[8]._super,  x14[9]._super},
      Val32Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x16[0]._super,  x16[1]._super,  x16[2]._super,
                 x16[3]._super,  x16[4]._super,  x16[5]._super,  x16[6]._super,  x16[7]._super,
                 x16[8]._super,  x16[9]._super},
      Val32Array{x17[0]._super,  x17[1]._super,  x17[2]._super,  x17[3]._super,  x17[4]._super,
                 x17[5]._super,  x17[6]._super,  x17[7]._super,  x17[8]._super,  x17[9]._super,
                 x17[10]._super, x17[11]._super, x17[12]._super, x17[13]._super, x17[14]._super,
                 x17[15]._super, x17[16]._super, x17[17]._super, x17[18]._super, x17[19]._super,
                 x17[20]._super, x17[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super},
      LAYOUT_LOOKUP(layout2, packedW));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16_Struct x20 =
      execUnpackWithCarry(ctx, x19.low, x19.high, LAYOUT_LOOKUP(layout2, newW));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  NondetRegStruct22Array x21 = x4.arrA;
  NondetRegStruct22Array x22 = x4.arrB;
  NondetRegStruct22Array x23 = x5.arrA;
  NondetRegStruct22Array x24 = x5.arrB;
  NondetRegStruct22Array x25 = x6.arrA;
  NondetRegStruct22Array x26 = x6.arrB;
  NondetRegStruct22Array x27 = x7.arrA;
  NondetRegStruct22Array x28 = x7.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:369)
  NondetRegStruct22Array x29 = x4.arrC;
  NondetRegStruct22Array x30 = x5.arrC;
  NondetRegStruct22Array x31 = x6.arrC;
  NondetRegStruct22Array x32 = x7.arrC;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x33 = x20._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  Val x55 = x33[21]._super;
  Val x56 = x33[22]._super;
  Val x57 = x33[23]._super;
  Val x58 = x33[24]._super;
  Val x59 = x33[25]._super;
  Val x60 = x33[26]._super;
  Val x61 = x33[27]._super;
  Val x62 = x33[28]._super;
  Val x63 = x33[29]._super;
  Val x64 = x33[30]._super;
  Val x65 = x33[31]._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  ComputeAEStruct x66 = execComputeAE(
      ctx,
      Val32Array{x21[0]._super,  x21[1]._super,  x21[2]._super,  x21[3]._super,  x21[4]._super,
                 x21[5]._super,  x21[6]._super,  x21[7]._super,  x21[8]._super,  x21[9]._super,
                 x21[10]._super, x21[11]._super, x21[12]._super, x21[13]._super, x21[14]._super,
                 x21[15]._super, x21[16]._super, x21[17]._super, x21[18]._super, x21[19]._super,
                 x21[20]._super, x21[21]._super, x22[0]._super,  x22[1]._super,  x22[2]._super,
                 x22[3]._super,  x22[4]._super,  x22[5]._super,  x22[6]._super,  x22[7]._super,
                 x22[8]._super,  x22[9]._super},
      Val32Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super, x24[0]._super,  x24[1]._super,  x24[2]._super,
                 x24[3]._super,  x24[4]._super,  x24[5]._super,  x24[6]._super,  x24[7]._super,
                 x24[8]._super,  x24[9]._super},
      Val32Array{x25[0]._super,  x25[1]._super,  x25[2]._super,  x25[3]._super,  x25[4]._super,
                 x25[5]._super,  x25[6]._super,  x25[7]._super,  x25[8]._super,  x25[9]._super,
                 x25[10]._super, x25[11]._super, x25[12]._super, x25[13]._super, x25[14]._super,
                 x25[15]._super, x25[16]._super, x25[17]._super, x25[18]._super, x25[19]._super,
                 x25[20]._super, x25[21]._super, x26[0]._super,  x26[1]._super,  x26[2]._super,
                 x26[3]._super,  x26[4]._super,  x26[5]._super,  x26[6]._super,  x26[7]._super,
                 x26[8]._super,  x26[9]._super},
      Val32Array{x27[0]._super,  x27[1]._super,  x27[2]._super,  x27[3]._super,  x27[4]._super,
                 x27[5]._super,  x27[6]._super,  x27[7]._super,  x27[8]._super,  x27[9]._super,
                 x27[10]._super, x27[11]._super, x27[12]._super, x27[13]._super, x27[14]._super,
                 x27[15]._super, x27[16]._super, x27[17]._super, x27[18]._super, x27[19]._super,
                 x27[20]._super, x27[21]._super, x28[0]._super,  x28[1]._super,  x28[2]._super,
                 x28[3]._super,  x28[4]._super,  x28[5]._super,  x28[6]._super,  x28[7]._super,
                 x28[8]._super,  x28[9]._super},
      Val32Array{x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super, x29[0]._super,  x29[1]._super,  x29[2]._super,
                 x29[3]._super,  x29[4]._super,  x29[5]._super,  x29[6]._super,  x29[7]._super,
                 x29[8]._super,  x29[9]._super,  x29[10]._super, x29[11]._super, x29[12]._super,
                 x29[13]._super, x29[14]._super, x29[15]._super, x29[16]._super, x29[17]._super,
                 x29[18]._super, x29[19]._super},
      Val32Array{x24[10]._super, x24[11]._super, x24[12]._super, x24[13]._super, x24[14]._super,
                 x24[15]._super, x24[16]._super, x24[17]._super, x24[18]._super, x24[19]._super,
                 x24[20]._super, x24[21]._super, x30[0]._super,  x30[1]._super,  x30[2]._super,
                 x30[3]._super,  x30[4]._super,  x30[5]._super,  x30[6]._super,  x30[7]._super,
                 x30[8]._super,  x30[9]._super,  x30[10]._super, x30[11]._super, x30[12]._super,
                 x30[13]._super, x30[14]._super, x30[15]._super, x30[16]._super, x30[17]._super,
                 x30[18]._super, x30[19]._super},
      Val32Array{x26[10]._super, x26[11]._super, x26[12]._super, x26[13]._super, x26[14]._super,
                 x26[15]._super, x26[16]._super, x26[17]._super, x26[18]._super, x26[19]._super,
                 x26[20]._super, x26[21]._super, x31[0]._super,  x31[1]._super,  x31[2]._super,
                 x31[3]._super,  x31[4]._super,  x31[5]._super,  x31[6]._super,  x31[7]._super,
                 x31[8]._super,  x31[9]._super,  x31[10]._super, x31[11]._super, x31[12]._super,
                 x31[13]._super, x31[14]._super, x31[15]._super, x31[16]._super, x31[17]._super,
                 x31[18]._super, x31[19]._super},
      Val32Array{x28[10]._super, x28[11]._super, x28[12]._super, x28[13]._super, x28[14]._super,
                 x28[15]._super, x28[16]._super, x28[17]._super, x28[18]._super, x28[19]._super,
                 x28[20]._super, x28[21]._super, x32[0]._super,  x32[1]._super,  x32[2]._super,
                 x32[3]._super,  x32[4]._super,  x32[5]._super,  x32[6]._super,  x32[7]._super,
                 x32[8]._super,  x32[9]._super,  x32[10]._super, x32[11]._super, x32[12]._super,
                 x32[13]._super, x32[14]._super, x32[15]._super, x32[16]._super, x32[17]._super,
                 x32[18]._super, x32[19]._super},
      Val32Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49,
                 x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65},
      TwoShortsStruct{.low = Val(33962), .high = Val(19060)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x67 = x66.aOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16_Struct x68 =
      execUnpackWithCarry(ctx, x67.low, x67.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  TwoShortsStruct x69 = x66.eOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16_Struct x70 =
      execUnpackWithCarry(ctx, x69.low, x69.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x71 = x68._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x72 = x70._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_0__5_Arm1_Super_SuperLayout> x73 = LAYOUT_LOOKUP(x3, arm1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:373)
  Val22Array x74 =
      Val22Array{x71[0]._super,  x71[1]._super,  x71[2]._super,  x71[3]._super,  x71[4]._super,
                 x71[5]._super,  x71[6]._super,  x71[7]._super,  x71[8]._super,  x71[9]._super,
                 x71[10]._super, x71[11]._super, x71[12]._super, x71[13]._super, x71[14]._super,
                 x71[15]._super, x71[16]._super, x71[17]._super, x71[18]._super, x71[19]._super,
                 x71[20]._super, x71[21]._super};
  Val22Array x75 =
      Val22Array{x71[22]._super, x71[23]._super, x71[24]._super, x71[25]._super, x71[26]._super,
                 x71[27]._super, x71[28]._super, x71[29]._super, x71[30]._super, x71[31]._super,
                 x72[0]._super,  x72[1]._super,  x72[2]._super,  x72[3]._super,  x72[4]._super,
                 x72[5]._super,  x72[6]._super,  x72[7]._super,  x72[8]._super,  x72[9]._super,
                 x72[10]._super, x72[11]._super};
  Val22Array x76 =
      Val22Array{x72[12]._super, x72[13]._super, x72[14]._super, x72[15]._super, x72[16]._super,
                 x72[17]._super, x72[18]._super, x72[19]._super, x72[20]._super, x72[21]._super,
                 x72[22]._super, x72[23]._super, x72[24]._super, x72[25]._super, x72[26]._super,
                 x72[27]._super, x72[28]._super, x72[29]._super, x72[30]._super, x72[31]._super,
                 Val(0),         Val(0)};
  Val22Array x77 = Val22Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,
                              x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55};
  Val22Array x78 = Val22Array{x56,    x57,    x58,    x59,    x60,    x61,    x62,    x63,
                              x64,    x65,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  Val x79 = x4.blk._super;
  Val x80 = x4.midx._super;
  if (to_size_t(Val(1))) {
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:376)
    RetTupleStruct x81 =
        exec_RetTuple(ctx,
                      x74,
                      x75,
                      x76,
                      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                      x77,
                      x78,
                      Val(6),
                      Val(20),
                      Val(0),
                      x79,
                      x80,
                      LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  NondetRegStruct24Array x82 = x4.arrD;
  Val24Array x83 =
      Val24Array{x82[0]._super,  x82[1]._super,  x82[2]._super,  x82[3]._super,  x82[4]._super,
                 x82[5]._super,  x82[6]._super,  x82[7]._super,  x82[8]._super,  x82[9]._super,
                 x82[10]._super, x82[11]._super, x82[12]._super, x82[13]._super, x82[14]._super,
                 x82[15]._super, x82[16]._super, x82[17]._super, x82[18]._super, x82[19]._super,
                 x82[20]._super, x82[21]._super, x82[22]._super, x82[23]._super};
  Val x84 = x4.rnd._super;
  if (to_size_t(Val(0))) {
    if (to_size_t(Val(1))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:380)
      RetTupleStruct x85 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(0),
                                         Val(21),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm0));
    }
    if (to_size_t(Val(0))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:383)
      RetTupleStruct x86 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(9),
                                         Val(17),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm1));
    }
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:379)
    RetTupleStruct x87 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x73, _super));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  RetTupleStruct x88 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x88;
}
RetTupleStruct execSha256mix_0__6_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<Sha256mix_0__6_Layout> layout2) {
  BoundLayout<Sha256mix_0__6__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:359)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:360)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:361)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:362)
  RetTupleStruct x8 = back_RetTuple(ctx, 7, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:363)
  RetTupleStruct x9 = back_RetTuple(ctx, 15, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:364)
  RetTupleStruct x10 = back_RetTuple(ctx, 16, arg1);
  // s2w(zirgen/circuit/keccak/sha256_for_keccak.zir:155)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:366)
  NondetRegStruct22Array x11 = x5.arrE;
  NondetRegStruct22Array x12 = x5.arrF;
  NondetRegStruct22Array x13 = x8.arrE;
  NondetRegStruct22Array x14 = x8.arrF;
  NondetRegStruct22Array x15 = x9.arrE;
  NondetRegStruct22Array x16 = x9.arrF;
  NondetRegStruct22Array x17 = x10.arrE;
  NondetRegStruct22Array x18 = x10.arrF;
  TwoShortsStruct x19 = execComputeW(
      ctx,
      Val32Array{x11[0]._super,  x11[1]._super,  x11[2]._super,  x11[3]._super,  x11[4]._super,
                 x11[5]._super,  x11[6]._super,  x11[7]._super,  x11[8]._super,  x11[9]._super,
                 x11[10]._super, x11[11]._super, x11[12]._super, x11[13]._super, x11[14]._super,
                 x11[15]._super, x11[16]._super, x11[17]._super, x11[18]._super, x11[19]._super,
                 x11[20]._super, x11[21]._super, x12[0]._super,  x12[1]._super,  x12[2]._super,
                 x12[3]._super,  x12[4]._super,  x12[5]._super,  x12[6]._super,  x12[7]._super,
                 x12[8]._super,  x12[9]._super},
      Val32Array{x13[0]._super,  x13[1]._super,  x13[2]._super,  x13[3]._super,  x13[4]._super,
                 x13[5]._super,  x13[6]._super,  x13[7]._super,  x13[8]._super,  x13[9]._super,
                 x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x14[0]._super,  x14[1]._super,  x14[2]._super,
                 x14[3]._super,  x14[4]._super,  x14[5]._super,  x14[6]._super,  x14[7]._super,
                 x14[8]._super,  x14[9]._super},
      Val32Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x16[0]._super,  x16[1]._super,  x16[2]._super,
                 x16[3]._super,  x16[4]._super,  x16[5]._super,  x16[6]._super,  x16[7]._super,
                 x16[8]._super,  x16[9]._super},
      Val32Array{x17[0]._super,  x17[1]._super,  x17[2]._super,  x17[3]._super,  x17[4]._super,
                 x17[5]._super,  x17[6]._super,  x17[7]._super,  x17[8]._super,  x17[9]._super,
                 x17[10]._super, x17[11]._super, x17[12]._super, x17[13]._super, x17[14]._super,
                 x17[15]._super, x17[16]._super, x17[17]._super, x17[18]._super, x17[19]._super,
                 x17[20]._super, x17[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super},
      LAYOUT_LOOKUP(layout2, packedW));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16_Struct x20 =
      execUnpackWithCarry(ctx, x19.low, x19.high, LAYOUT_LOOKUP(layout2, newW));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  NondetRegStruct22Array x21 = x4.arrA;
  NondetRegStruct22Array x22 = x4.arrB;
  NondetRegStruct22Array x23 = x5.arrA;
  NondetRegStruct22Array x24 = x5.arrB;
  NondetRegStruct22Array x25 = x6.arrA;
  NondetRegStruct22Array x26 = x6.arrB;
  NondetRegStruct22Array x27 = x7.arrA;
  NondetRegStruct22Array x28 = x7.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:369)
  NondetRegStruct22Array x29 = x4.arrC;
  NondetRegStruct22Array x30 = x5.arrC;
  NondetRegStruct22Array x31 = x6.arrC;
  NondetRegStruct22Array x32 = x7.arrC;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x33 = x20._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  Val x55 = x33[21]._super;
  Val x56 = x33[22]._super;
  Val x57 = x33[23]._super;
  Val x58 = x33[24]._super;
  Val x59 = x33[25]._super;
  Val x60 = x33[26]._super;
  Val x61 = x33[27]._super;
  Val x62 = x33[28]._super;
  Val x63 = x33[29]._super;
  Val x64 = x33[30]._super;
  Val x65 = x33[31]._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  ComputeAEStruct x66 = execComputeAE(
      ctx,
      Val32Array{x21[0]._super,  x21[1]._super,  x21[2]._super,  x21[3]._super,  x21[4]._super,
                 x21[5]._super,  x21[6]._super,  x21[7]._super,  x21[8]._super,  x21[9]._super,
                 x21[10]._super, x21[11]._super, x21[12]._super, x21[13]._super, x21[14]._super,
                 x21[15]._super, x21[16]._super, x21[17]._super, x21[18]._super, x21[19]._super,
                 x21[20]._super, x21[21]._super, x22[0]._super,  x22[1]._super,  x22[2]._super,
                 x22[3]._super,  x22[4]._super,  x22[5]._super,  x22[6]._super,  x22[7]._super,
                 x22[8]._super,  x22[9]._super},
      Val32Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super, x24[0]._super,  x24[1]._super,  x24[2]._super,
                 x24[3]._super,  x24[4]._super,  x24[5]._super,  x24[6]._super,  x24[7]._super,
                 x24[8]._super,  x24[9]._super},
      Val32Array{x25[0]._super,  x25[1]._super,  x25[2]._super,  x25[3]._super,  x25[4]._super,
                 x25[5]._super,  x25[6]._super,  x25[7]._super,  x25[8]._super,  x25[9]._super,
                 x25[10]._super, x25[11]._super, x25[12]._super, x25[13]._super, x25[14]._super,
                 x25[15]._super, x25[16]._super, x25[17]._super, x25[18]._super, x25[19]._super,
                 x25[20]._super, x25[21]._super, x26[0]._super,  x26[1]._super,  x26[2]._super,
                 x26[3]._super,  x26[4]._super,  x26[5]._super,  x26[6]._super,  x26[7]._super,
                 x26[8]._super,  x26[9]._super},
      Val32Array{x27[0]._super,  x27[1]._super,  x27[2]._super,  x27[3]._super,  x27[4]._super,
                 x27[5]._super,  x27[6]._super,  x27[7]._super,  x27[8]._super,  x27[9]._super,
                 x27[10]._super, x27[11]._super, x27[12]._super, x27[13]._super, x27[14]._super,
                 x27[15]._super, x27[16]._super, x27[17]._super, x27[18]._super, x27[19]._super,
                 x27[20]._super, x27[21]._super, x28[0]._super,  x28[1]._super,  x28[2]._super,
                 x28[3]._super,  x28[4]._super,  x28[5]._super,  x28[6]._super,  x28[7]._super,
                 x28[8]._super,  x28[9]._super},
      Val32Array{x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super, x29[0]._super,  x29[1]._super,  x29[2]._super,
                 x29[3]._super,  x29[4]._super,  x29[5]._super,  x29[6]._super,  x29[7]._super,
                 x29[8]._super,  x29[9]._super,  x29[10]._super, x29[11]._super, x29[12]._super,
                 x29[13]._super, x29[14]._super, x29[15]._super, x29[16]._super, x29[17]._super,
                 x29[18]._super, x29[19]._super},
      Val32Array{x24[10]._super, x24[11]._super, x24[12]._super, x24[13]._super, x24[14]._super,
                 x24[15]._super, x24[16]._super, x24[17]._super, x24[18]._super, x24[19]._super,
                 x24[20]._super, x24[21]._super, x30[0]._super,  x30[1]._super,  x30[2]._super,
                 x30[3]._super,  x30[4]._super,  x30[5]._super,  x30[6]._super,  x30[7]._super,
                 x30[8]._super,  x30[9]._super,  x30[10]._super, x30[11]._super, x30[12]._super,
                 x30[13]._super, x30[14]._super, x30[15]._super, x30[16]._super, x30[17]._super,
                 x30[18]._super, x30[19]._super},
      Val32Array{x26[10]._super, x26[11]._super, x26[12]._super, x26[13]._super, x26[14]._super,
                 x26[15]._super, x26[16]._super, x26[17]._super, x26[18]._super, x26[19]._super,
                 x26[20]._super, x26[21]._super, x31[0]._super,  x31[1]._super,  x31[2]._super,
                 x31[3]._super,  x31[4]._super,  x31[5]._super,  x31[6]._super,  x31[7]._super,
                 x31[8]._super,  x31[9]._super,  x31[10]._super, x31[11]._super, x31[12]._super,
                 x31[13]._super, x31[14]._super, x31[15]._super, x31[16]._super, x31[17]._super,
                 x31[18]._super, x31[19]._super},
      Val32Array{x28[10]._super, x28[11]._super, x28[12]._super, x28[13]._super, x28[14]._super,
                 x28[15]._super, x28[16]._super, x28[17]._super, x28[18]._super, x28[19]._super,
                 x28[20]._super, x28[21]._super, x32[0]._super,  x32[1]._super,  x32[2]._super,
                 x32[3]._super,  x32[4]._super,  x32[5]._super,  x32[6]._super,  x32[7]._super,
                 x32[8]._super,  x32[9]._super,  x32[10]._super, x32[11]._super, x32[12]._super,
                 x32[13]._super, x32[14]._super, x32[15]._super, x32[16]._super, x32[17]._super,
                 x32[18]._super, x32[19]._super},
      Val32Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49,
                 x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65},
      TwoShortsStruct{.low = Val(43484), .high = Val(23728)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x67 = x66.aOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16_Struct x68 =
      execUnpackWithCarry(ctx, x67.low, x67.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  TwoShortsStruct x69 = x66.eOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16_Struct x70 =
      execUnpackWithCarry(ctx, x69.low, x69.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x71 = x68._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x72 = x70._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_0__6_Arm1_Super_SuperLayout> x73 = LAYOUT_LOOKUP(x3, arm1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:373)
  Val22Array x74 =
      Val22Array{x71[0]._super,  x71[1]._super,  x71[2]._super,  x71[3]._super,  x71[4]._super,
                 x71[5]._super,  x71[6]._super,  x71[7]._super,  x71[8]._super,  x71[9]._super,
                 x71[10]._super, x71[11]._super, x71[12]._super, x71[13]._super, x71[14]._super,
                 x71[15]._super, x71[16]._super, x71[17]._super, x71[18]._super, x71[19]._super,
                 x71[20]._super, x71[21]._super};
  Val22Array x75 =
      Val22Array{x71[22]._super, x71[23]._super, x71[24]._super, x71[25]._super, x71[26]._super,
                 x71[27]._super, x71[28]._super, x71[29]._super, x71[30]._super, x71[31]._super,
                 x72[0]._super,  x72[1]._super,  x72[2]._super,  x72[3]._super,  x72[4]._super,
                 x72[5]._super,  x72[6]._super,  x72[7]._super,  x72[8]._super,  x72[9]._super,
                 x72[10]._super, x72[11]._super};
  Val22Array x76 =
      Val22Array{x72[12]._super, x72[13]._super, x72[14]._super, x72[15]._super, x72[16]._super,
                 x72[17]._super, x72[18]._super, x72[19]._super, x72[20]._super, x72[21]._super,
                 x72[22]._super, x72[23]._super, x72[24]._super, x72[25]._super, x72[26]._super,
                 x72[27]._super, x72[28]._super, x72[29]._super, x72[30]._super, x72[31]._super,
                 Val(0),         Val(0)};
  Val22Array x77 = Val22Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,
                              x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55};
  Val22Array x78 = Val22Array{x56,    x57,    x58,    x59,    x60,    x61,    x62,    x63,
                              x64,    x65,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  Val x79 = x4.blk._super;
  Val x80 = x4.midx._super;
  if (to_size_t(Val(1))) {
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:376)
    RetTupleStruct x81 =
        exec_RetTuple(ctx,
                      x74,
                      x75,
                      x76,
                      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                      x77,
                      x78,
                      Val(7),
                      Val(20),
                      Val(0),
                      x79,
                      x80,
                      LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  NondetRegStruct24Array x82 = x4.arrD;
  Val24Array x83 =
      Val24Array{x82[0]._super,  x82[1]._super,  x82[2]._super,  x82[3]._super,  x82[4]._super,
                 x82[5]._super,  x82[6]._super,  x82[7]._super,  x82[8]._super,  x82[9]._super,
                 x82[10]._super, x82[11]._super, x82[12]._super, x82[13]._super, x82[14]._super,
                 x82[15]._super, x82[16]._super, x82[17]._super, x82[18]._super, x82[19]._super,
                 x82[20]._super, x82[21]._super, x82[22]._super, x82[23]._super};
  Val x84 = x4.rnd._super;
  if (to_size_t(Val(0))) {
    if (to_size_t(Val(1))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:380)
      RetTupleStruct x85 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(0),
                                         Val(21),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm0));
    }
    if (to_size_t(Val(0))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:383)
      RetTupleStruct x86 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(9),
                                         Val(17),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm1));
    }
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:379)
    RetTupleStruct x87 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x73, _super));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  RetTupleStruct x88 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x88;
}
RetTupleStruct execSha256mix_0__7_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<Sha256mix_0__7_Layout> layout2) {
  BoundLayout<Sha256mix_0__7__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:359)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:360)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:361)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:362)
  RetTupleStruct x8 = back_RetTuple(ctx, 7, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:363)
  RetTupleStruct x9 = back_RetTuple(ctx, 15, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:364)
  RetTupleStruct x10 = back_RetTuple(ctx, 16, arg1);
  // s2w(zirgen/circuit/keccak/sha256_for_keccak.zir:155)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:366)
  NondetRegStruct22Array x11 = x5.arrE;
  NondetRegStruct22Array x12 = x5.arrF;
  NondetRegStruct22Array x13 = x8.arrE;
  NondetRegStruct22Array x14 = x8.arrF;
  NondetRegStruct22Array x15 = x9.arrE;
  NondetRegStruct22Array x16 = x9.arrF;
  NondetRegStruct22Array x17 = x10.arrE;
  NondetRegStruct22Array x18 = x10.arrF;
  TwoShortsStruct x19 = execComputeW(
      ctx,
      Val32Array{x11[0]._super,  x11[1]._super,  x11[2]._super,  x11[3]._super,  x11[4]._super,
                 x11[5]._super,  x11[6]._super,  x11[7]._super,  x11[8]._super,  x11[9]._super,
                 x11[10]._super, x11[11]._super, x11[12]._super, x11[13]._super, x11[14]._super,
                 x11[15]._super, x11[16]._super, x11[17]._super, x11[18]._super, x11[19]._super,
                 x11[20]._super, x11[21]._super, x12[0]._super,  x12[1]._super,  x12[2]._super,
                 x12[3]._super,  x12[4]._super,  x12[5]._super,  x12[6]._super,  x12[7]._super,
                 x12[8]._super,  x12[9]._super},
      Val32Array{x13[0]._super,  x13[1]._super,  x13[2]._super,  x13[3]._super,  x13[4]._super,
                 x13[5]._super,  x13[6]._super,  x13[7]._super,  x13[8]._super,  x13[9]._super,
                 x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x14[0]._super,  x14[1]._super,  x14[2]._super,
                 x14[3]._super,  x14[4]._super,  x14[5]._super,  x14[6]._super,  x14[7]._super,
                 x14[8]._super,  x14[9]._super},
      Val32Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x16[0]._super,  x16[1]._super,  x16[2]._super,
                 x16[3]._super,  x16[4]._super,  x16[5]._super,  x16[6]._super,  x16[7]._super,
                 x16[8]._super,  x16[9]._super},
      Val32Array{x17[0]._super,  x17[1]._super,  x17[2]._super,  x17[3]._super,  x17[4]._super,
                 x17[5]._super,  x17[6]._super,  x17[7]._super,  x17[8]._super,  x17[9]._super,
                 x17[10]._super, x17[11]._super, x17[12]._super, x17[13]._super, x17[14]._super,
                 x17[15]._super, x17[16]._super, x17[17]._super, x17[18]._super, x17[19]._super,
                 x17[20]._super, x17[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super},
      LAYOUT_LOOKUP(layout2, packedW));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16_Struct x20 =
      execUnpackWithCarry(ctx, x19.low, x19.high, LAYOUT_LOOKUP(layout2, newW));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  NondetRegStruct22Array x21 = x4.arrA;
  NondetRegStruct22Array x22 = x4.arrB;
  NondetRegStruct22Array x23 = x5.arrA;
  NondetRegStruct22Array x24 = x5.arrB;
  NondetRegStruct22Array x25 = x6.arrA;
  NondetRegStruct22Array x26 = x6.arrB;
  NondetRegStruct22Array x27 = x7.arrA;
  NondetRegStruct22Array x28 = x7.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:369)
  NondetRegStruct22Array x29 = x4.arrC;
  NondetRegStruct22Array x30 = x5.arrC;
  NondetRegStruct22Array x31 = x6.arrC;
  NondetRegStruct22Array x32 = x7.arrC;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x33 = x20._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  Val x55 = x33[21]._super;
  Val x56 = x33[22]._super;
  Val x57 = x33[23]._super;
  Val x58 = x33[24]._super;
  Val x59 = x33[25]._super;
  Val x60 = x33[26]._super;
  Val x61 = x33[27]._super;
  Val x62 = x33[28]._super;
  Val x63 = x33[29]._super;
  Val x64 = x33[30]._super;
  Val x65 = x33[31]._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  ComputeAEStruct x66 = execComputeAE(
      ctx,
      Val32Array{x21[0]._super,  x21[1]._super,  x21[2]._super,  x21[3]._super,  x21[4]._super,
                 x21[5]._super,  x21[6]._super,  x21[7]._super,  x21[8]._super,  x21[9]._super,
                 x21[10]._super, x21[11]._super, x21[12]._super, x21[13]._super, x21[14]._super,
                 x21[15]._super, x21[16]._super, x21[17]._super, x21[18]._super, x21[19]._super,
                 x21[20]._super, x21[21]._super, x22[0]._super,  x22[1]._super,  x22[2]._super,
                 x22[3]._super,  x22[4]._super,  x22[5]._super,  x22[6]._super,  x22[7]._super,
                 x22[8]._super,  x22[9]._super},
      Val32Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super, x24[0]._super,  x24[1]._super,  x24[2]._super,
                 x24[3]._super,  x24[4]._super,  x24[5]._super,  x24[6]._super,  x24[7]._super,
                 x24[8]._super,  x24[9]._super},
      Val32Array{x25[0]._super,  x25[1]._super,  x25[2]._super,  x25[3]._super,  x25[4]._super,
                 x25[5]._super,  x25[6]._super,  x25[7]._super,  x25[8]._super,  x25[9]._super,
                 x25[10]._super, x25[11]._super, x25[12]._super, x25[13]._super, x25[14]._super,
                 x25[15]._super, x25[16]._super, x25[17]._super, x25[18]._super, x25[19]._super,
                 x25[20]._super, x25[21]._super, x26[0]._super,  x26[1]._super,  x26[2]._super,
                 x26[3]._super,  x26[4]._super,  x26[5]._super,  x26[6]._super,  x26[7]._super,
                 x26[8]._super,  x26[9]._super},
      Val32Array{x27[0]._super,  x27[1]._super,  x27[2]._super,  x27[3]._super,  x27[4]._super,
                 x27[5]._super,  x27[6]._super,  x27[7]._super,  x27[8]._super,  x27[9]._super,
                 x27[10]._super, x27[11]._super, x27[12]._super, x27[13]._super, x27[14]._super,
                 x27[15]._super, x27[16]._super, x27[17]._super, x27[18]._super, x27[19]._super,
                 x27[20]._super, x27[21]._super, x28[0]._super,  x28[1]._super,  x28[2]._super,
                 x28[3]._super,  x28[4]._super,  x28[5]._super,  x28[6]._super,  x28[7]._super,
                 x28[8]._super,  x28[9]._super},
      Val32Array{x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super, x29[0]._super,  x29[1]._super,  x29[2]._super,
                 x29[3]._super,  x29[4]._super,  x29[5]._super,  x29[6]._super,  x29[7]._super,
                 x29[8]._super,  x29[9]._super,  x29[10]._super, x29[11]._super, x29[12]._super,
                 x29[13]._super, x29[14]._super, x29[15]._super, x29[16]._super, x29[17]._super,
                 x29[18]._super, x29[19]._super},
      Val32Array{x24[10]._super, x24[11]._super, x24[12]._super, x24[13]._super, x24[14]._super,
                 x24[15]._super, x24[16]._super, x24[17]._super, x24[18]._super, x24[19]._super,
                 x24[20]._super, x24[21]._super, x30[0]._super,  x30[1]._super,  x30[2]._super,
                 x30[3]._super,  x30[4]._super,  x30[5]._super,  x30[6]._super,  x30[7]._super,
                 x30[8]._super,  x30[9]._super,  x30[10]._super, x30[11]._super, x30[12]._super,
                 x30[13]._super, x30[14]._super, x30[15]._super, x30[16]._super, x30[17]._super,
                 x30[18]._super, x30[19]._super},
      Val32Array{x26[10]._super, x26[11]._super, x26[12]._super, x26[13]._super, x26[14]._super,
                 x26[15]._super, x26[16]._super, x26[17]._super, x26[18]._super, x26[19]._super,
                 x26[20]._super, x26[21]._super, x31[0]._super,  x31[1]._super,  x31[2]._super,
                 x31[3]._super,  x31[4]._super,  x31[5]._super,  x31[6]._super,  x31[7]._super,
                 x31[8]._super,  x31[9]._super,  x31[10]._super, x31[11]._super, x31[12]._super,
                 x31[13]._super, x31[14]._super, x31[15]._super, x31[16]._super, x31[17]._super,
                 x31[18]._super, x31[19]._super},
      Val32Array{x28[10]._super, x28[11]._super, x28[12]._super, x28[13]._super, x28[14]._super,
                 x28[15]._super, x28[16]._super, x28[17]._super, x28[18]._super, x28[19]._super,
                 x28[20]._super, x28[21]._super, x32[0]._super,  x32[1]._super,  x32[2]._super,
                 x32[3]._super,  x32[4]._super,  x32[5]._super,  x32[6]._super,  x32[7]._super,
                 x32[8]._super,  x32[9]._super,  x32[10]._super, x32[11]._super, x32[12]._super,
                 x32[13]._super, x32[14]._super, x32[15]._super, x32[16]._super, x32[17]._super,
                 x32[18]._super, x32[19]._super},
      Val32Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49,
                 x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65},
      TwoShortsStruct{.low = Val(35034), .high = Val(30457)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x67 = x66.aOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16_Struct x68 =
      execUnpackWithCarry(ctx, x67.low, x67.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  TwoShortsStruct x69 = x66.eOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16_Struct x70 =
      execUnpackWithCarry(ctx, x69.low, x69.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x71 = x68._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x72 = x70._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_0__7_Arm1_Super_SuperLayout> x73 = LAYOUT_LOOKUP(x3, arm1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:373)
  Val22Array x74 =
      Val22Array{x71[0]._super,  x71[1]._super,  x71[2]._super,  x71[3]._super,  x71[4]._super,
                 x71[5]._super,  x71[6]._super,  x71[7]._super,  x71[8]._super,  x71[9]._super,
                 x71[10]._super, x71[11]._super, x71[12]._super, x71[13]._super, x71[14]._super,
                 x71[15]._super, x71[16]._super, x71[17]._super, x71[18]._super, x71[19]._super,
                 x71[20]._super, x71[21]._super};
  Val22Array x75 =
      Val22Array{x71[22]._super, x71[23]._super, x71[24]._super, x71[25]._super, x71[26]._super,
                 x71[27]._super, x71[28]._super, x71[29]._super, x71[30]._super, x71[31]._super,
                 x72[0]._super,  x72[1]._super,  x72[2]._super,  x72[3]._super,  x72[4]._super,
                 x72[5]._super,  x72[6]._super,  x72[7]._super,  x72[8]._super,  x72[9]._super,
                 x72[10]._super, x72[11]._super};
  Val22Array x76 =
      Val22Array{x72[12]._super, x72[13]._super, x72[14]._super, x72[15]._super, x72[16]._super,
                 x72[17]._super, x72[18]._super, x72[19]._super, x72[20]._super, x72[21]._super,
                 x72[22]._super, x72[23]._super, x72[24]._super, x72[25]._super, x72[26]._super,
                 x72[27]._super, x72[28]._super, x72[29]._super, x72[30]._super, x72[31]._super,
                 Val(0),         Val(0)};
  Val22Array x77 = Val22Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,
                              x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55};
  Val22Array x78 = Val22Array{x56,    x57,    x58,    x59,    x60,    x61,    x62,    x63,
                              x64,    x65,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  Val x79 = x4.blk._super;
  Val x80 = x4.midx._super;
  if (to_size_t(Val(1))) {
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:376)
    RetTupleStruct x81 =
        exec_RetTuple(ctx,
                      x74,
                      x75,
                      x76,
                      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                      x77,
                      x78,
                      Val(8),
                      Val(20),
                      Val(0),
                      x79,
                      x80,
                      LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  NondetRegStruct24Array x82 = x4.arrD;
  Val24Array x83 =
      Val24Array{x82[0]._super,  x82[1]._super,  x82[2]._super,  x82[3]._super,  x82[4]._super,
                 x82[5]._super,  x82[6]._super,  x82[7]._super,  x82[8]._super,  x82[9]._super,
                 x82[10]._super, x82[11]._super, x82[12]._super, x82[13]._super, x82[14]._super,
                 x82[15]._super, x82[16]._super, x82[17]._super, x82[18]._super, x82[19]._super,
                 x82[20]._super, x82[21]._super, x82[22]._super, x82[23]._super};
  Val x84 = x4.rnd._super;
  if (to_size_t(Val(0))) {
    if (to_size_t(Val(1))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:380)
      RetTupleStruct x85 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(0),
                                         Val(21),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm0));
    }
    if (to_size_t(Val(0))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:383)
      RetTupleStruct x86 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(9),
                                         Val(17),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm1));
    }
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:379)
    RetTupleStruct x87 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x73, _super));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  RetTupleStruct x88 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x88;
}
RetTupleStruct execSha256mix_0__8_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<Sha256mix_0__8_Layout> layout2) {
  BoundLayout<Sha256mix_0__8__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:359)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:360)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:361)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:362)
  RetTupleStruct x8 = back_RetTuple(ctx, 7, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:363)
  RetTupleStruct x9 = back_RetTuple(ctx, 15, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:364)
  RetTupleStruct x10 = back_RetTuple(ctx, 16, arg1);
  // s2w(zirgen/circuit/keccak/sha256_for_keccak.zir:155)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:366)
  NondetRegStruct22Array x11 = x5.arrE;
  NondetRegStruct22Array x12 = x5.arrF;
  NondetRegStruct22Array x13 = x8.arrE;
  NondetRegStruct22Array x14 = x8.arrF;
  NondetRegStruct22Array x15 = x9.arrE;
  NondetRegStruct22Array x16 = x9.arrF;
  NondetRegStruct22Array x17 = x10.arrE;
  NondetRegStruct22Array x18 = x10.arrF;
  TwoShortsStruct x19 = execComputeW(
      ctx,
      Val32Array{x11[0]._super,  x11[1]._super,  x11[2]._super,  x11[3]._super,  x11[4]._super,
                 x11[5]._super,  x11[6]._super,  x11[7]._super,  x11[8]._super,  x11[9]._super,
                 x11[10]._super, x11[11]._super, x11[12]._super, x11[13]._super, x11[14]._super,
                 x11[15]._super, x11[16]._super, x11[17]._super, x11[18]._super, x11[19]._super,
                 x11[20]._super, x11[21]._super, x12[0]._super,  x12[1]._super,  x12[2]._super,
                 x12[3]._super,  x12[4]._super,  x12[5]._super,  x12[6]._super,  x12[7]._super,
                 x12[8]._super,  x12[9]._super},
      Val32Array{x13[0]._super,  x13[1]._super,  x13[2]._super,  x13[3]._super,  x13[4]._super,
                 x13[5]._super,  x13[6]._super,  x13[7]._super,  x13[8]._super,  x13[9]._super,
                 x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x14[0]._super,  x14[1]._super,  x14[2]._super,
                 x14[3]._super,  x14[4]._super,  x14[5]._super,  x14[6]._super,  x14[7]._super,
                 x14[8]._super,  x14[9]._super},
      Val32Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x16[0]._super,  x16[1]._super,  x16[2]._super,
                 x16[3]._super,  x16[4]._super,  x16[5]._super,  x16[6]._super,  x16[7]._super,
                 x16[8]._super,  x16[9]._super},
      Val32Array{x17[0]._super,  x17[1]._super,  x17[2]._super,  x17[3]._super,  x17[4]._super,
                 x17[5]._super,  x17[6]._super,  x17[7]._super,  x17[8]._super,  x17[9]._super,
                 x17[10]._super, x17[11]._super, x17[12]._super, x17[13]._super, x17[14]._super,
                 x17[15]._super, x17[16]._super, x17[17]._super, x17[18]._super, x17[19]._super,
                 x17[20]._super, x17[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super},
      LAYOUT_LOOKUP(layout2, packedW));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16_Struct x20 =
      execUnpackWithCarry(ctx, x19.low, x19.high, LAYOUT_LOOKUP(layout2, newW));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  NondetRegStruct22Array x21 = x4.arrA;
  NondetRegStruct22Array x22 = x4.arrB;
  NondetRegStruct22Array x23 = x5.arrA;
  NondetRegStruct22Array x24 = x5.arrB;
  NondetRegStruct22Array x25 = x6.arrA;
  NondetRegStruct22Array x26 = x6.arrB;
  NondetRegStruct22Array x27 = x7.arrA;
  NondetRegStruct22Array x28 = x7.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:369)
  NondetRegStruct22Array x29 = x4.arrC;
  NondetRegStruct22Array x30 = x5.arrC;
  NondetRegStruct22Array x31 = x6.arrC;
  NondetRegStruct22Array x32 = x7.arrC;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x33 = x20._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  Val x55 = x33[21]._super;
  Val x56 = x33[22]._super;
  Val x57 = x33[23]._super;
  Val x58 = x33[24]._super;
  Val x59 = x33[25]._super;
  Val x60 = x33[26]._super;
  Val x61 = x33[27]._super;
  Val x62 = x33[28]._super;
  Val x63 = x33[29]._super;
  Val x64 = x33[30]._super;
  Val x65 = x33[31]._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  ComputeAEStruct x66 = execComputeAE(
      ctx,
      Val32Array{x21[0]._super,  x21[1]._super,  x21[2]._super,  x21[3]._super,  x21[4]._super,
                 x21[5]._super,  x21[6]._super,  x21[7]._super,  x21[8]._super,  x21[9]._super,
                 x21[10]._super, x21[11]._super, x21[12]._super, x21[13]._super, x21[14]._super,
                 x21[15]._super, x21[16]._super, x21[17]._super, x21[18]._super, x21[19]._super,
                 x21[20]._super, x21[21]._super, x22[0]._super,  x22[1]._super,  x22[2]._super,
                 x22[3]._super,  x22[4]._super,  x22[5]._super,  x22[6]._super,  x22[7]._super,
                 x22[8]._super,  x22[9]._super},
      Val32Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super, x24[0]._super,  x24[1]._super,  x24[2]._super,
                 x24[3]._super,  x24[4]._super,  x24[5]._super,  x24[6]._super,  x24[7]._super,
                 x24[8]._super,  x24[9]._super},
      Val32Array{x25[0]._super,  x25[1]._super,  x25[2]._super,  x25[3]._super,  x25[4]._super,
                 x25[5]._super,  x25[6]._super,  x25[7]._super,  x25[8]._super,  x25[9]._super,
                 x25[10]._super, x25[11]._super, x25[12]._super, x25[13]._super, x25[14]._super,
                 x25[15]._super, x25[16]._super, x25[17]._super, x25[18]._super, x25[19]._super,
                 x25[20]._super, x25[21]._super, x26[0]._super,  x26[1]._super,  x26[2]._super,
                 x26[3]._super,  x26[4]._super,  x26[5]._super,  x26[6]._super,  x26[7]._super,
                 x26[8]._super,  x26[9]._super},
      Val32Array{x27[0]._super,  x27[1]._super,  x27[2]._super,  x27[3]._super,  x27[4]._super,
                 x27[5]._super,  x27[6]._super,  x27[7]._super,  x27[8]._super,  x27[9]._super,
                 x27[10]._super, x27[11]._super, x27[12]._super, x27[13]._super, x27[14]._super,
                 x27[15]._super, x27[16]._super, x27[17]._super, x27[18]._super, x27[19]._super,
                 x27[20]._super, x27[21]._super, x28[0]._super,  x28[1]._super,  x28[2]._super,
                 x28[3]._super,  x28[4]._super,  x28[5]._super,  x28[6]._super,  x28[7]._super,
                 x28[8]._super,  x28[9]._super},
      Val32Array{x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super, x29[0]._super,  x29[1]._super,  x29[2]._super,
                 x29[3]._super,  x29[4]._super,  x29[5]._super,  x29[6]._super,  x29[7]._super,
                 x29[8]._super,  x29[9]._super,  x29[10]._super, x29[11]._super, x29[12]._super,
                 x29[13]._super, x29[14]._super, x29[15]._super, x29[16]._super, x29[17]._super,
                 x29[18]._super, x29[19]._super},
      Val32Array{x24[10]._super, x24[11]._super, x24[12]._super, x24[13]._super, x24[14]._super,
                 x24[15]._super, x24[16]._super, x24[17]._super, x24[18]._super, x24[19]._super,
                 x24[20]._super, x24[21]._super, x30[0]._super,  x30[1]._super,  x30[2]._super,
                 x30[3]._super,  x30[4]._super,  x30[5]._super,  x30[6]._super,  x30[7]._super,
                 x30[8]._super,  x30[9]._super,  x30[10]._super, x30[11]._super, x30[12]._super,
                 x30[13]._super, x30[14]._super, x30[15]._super, x30[16]._super, x30[17]._super,
                 x30[18]._super, x30[19]._super},
      Val32Array{x26[10]._super, x26[11]._super, x26[12]._super, x26[13]._super, x26[14]._super,
                 x26[15]._super, x26[16]._super, x26[17]._super, x26[18]._super, x26[19]._super,
                 x26[20]._super, x26[21]._super, x31[0]._super,  x31[1]._super,  x31[2]._super,
                 x31[3]._super,  x31[4]._super,  x31[5]._super,  x31[6]._super,  x31[7]._super,
                 x31[8]._super,  x31[9]._super,  x31[10]._super, x31[11]._super, x31[12]._super,
                 x31[13]._super, x31[14]._super, x31[15]._super, x31[16]._super, x31[17]._super,
                 x31[18]._super, x31[19]._super},
      Val32Array{x28[10]._super, x28[11]._super, x28[12]._super, x28[13]._super, x28[14]._super,
                 x28[15]._super, x28[16]._super, x28[17]._super, x28[18]._super, x28[19]._super,
                 x28[20]._super, x28[21]._super, x32[0]._super,  x32[1]._super,  x32[2]._super,
                 x32[3]._super,  x32[4]._super,  x32[5]._super,  x32[6]._super,  x32[7]._super,
                 x32[8]._super,  x32[9]._super,  x32[10]._super, x32[11]._super, x32[12]._super,
                 x32[13]._super, x32[14]._super, x32[15]._super, x32[16]._super, x32[17]._super,
                 x32[18]._super, x32[19]._super},
      Val32Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49,
                 x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65},
      TwoShortsStruct{.low = Val(20818), .high = Val(38974)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x67 = x66.aOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16_Struct x68 =
      execUnpackWithCarry(ctx, x67.low, x67.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  TwoShortsStruct x69 = x66.eOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16_Struct x70 =
      execUnpackWithCarry(ctx, x69.low, x69.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x71 = x68._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x72 = x70._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_0__8_Arm1_Super_SuperLayout> x73 = LAYOUT_LOOKUP(x3, arm1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:373)
  Val22Array x74 =
      Val22Array{x71[0]._super,  x71[1]._super,  x71[2]._super,  x71[3]._super,  x71[4]._super,
                 x71[5]._super,  x71[6]._super,  x71[7]._super,  x71[8]._super,  x71[9]._super,
                 x71[10]._super, x71[11]._super, x71[12]._super, x71[13]._super, x71[14]._super,
                 x71[15]._super, x71[16]._super, x71[17]._super, x71[18]._super, x71[19]._super,
                 x71[20]._super, x71[21]._super};
  Val22Array x75 =
      Val22Array{x71[22]._super, x71[23]._super, x71[24]._super, x71[25]._super, x71[26]._super,
                 x71[27]._super, x71[28]._super, x71[29]._super, x71[30]._super, x71[31]._super,
                 x72[0]._super,  x72[1]._super,  x72[2]._super,  x72[3]._super,  x72[4]._super,
                 x72[5]._super,  x72[6]._super,  x72[7]._super,  x72[8]._super,  x72[9]._super,
                 x72[10]._super, x72[11]._super};
  Val22Array x76 =
      Val22Array{x72[12]._super, x72[13]._super, x72[14]._super, x72[15]._super, x72[16]._super,
                 x72[17]._super, x72[18]._super, x72[19]._super, x72[20]._super, x72[21]._super,
                 x72[22]._super, x72[23]._super, x72[24]._super, x72[25]._super, x72[26]._super,
                 x72[27]._super, x72[28]._super, x72[29]._super, x72[30]._super, x72[31]._super,
                 Val(0),         Val(0)};
  Val22Array x77 = Val22Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,
                              x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55};
  Val22Array x78 = Val22Array{x56,    x57,    x58,    x59,    x60,    x61,    x62,    x63,
                              x64,    x65,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  Val x79 = x4.blk._super;
  Val x80 = x4.midx._super;
  if (to_size_t(Val(1))) {
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:376)
    RetTupleStruct x81 =
        exec_RetTuple(ctx,
                      x74,
                      x75,
                      x76,
                      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                      x77,
                      x78,
                      Val(9),
                      Val(20),
                      Val(0),
                      x79,
                      x80,
                      LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  NondetRegStruct24Array x82 = x4.arrD;
  Val24Array x83 =
      Val24Array{x82[0]._super,  x82[1]._super,  x82[2]._super,  x82[3]._super,  x82[4]._super,
                 x82[5]._super,  x82[6]._super,  x82[7]._super,  x82[8]._super,  x82[9]._super,
                 x82[10]._super, x82[11]._super, x82[12]._super, x82[13]._super, x82[14]._super,
                 x82[15]._super, x82[16]._super, x82[17]._super, x82[18]._super, x82[19]._super,
                 x82[20]._super, x82[21]._super, x82[22]._super, x82[23]._super};
  Val x84 = x4.rnd._super;
  if (to_size_t(Val(0))) {
    if (to_size_t(Val(1))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:380)
      RetTupleStruct x85 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(0),
                                         Val(21),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm0));
    }
    if (to_size_t(Val(0))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:383)
      RetTupleStruct x86 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(9),
                                         Val(17),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm1));
    }
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:379)
    RetTupleStruct x87 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x73, _super));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  RetTupleStruct x88 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x88;
}
RetTupleStruct execSha256mix_0__9_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<Sha256mix_0__9_Layout> layout2) {
  BoundLayout<Sha256mix_0__9__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:359)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:360)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:361)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:362)
  RetTupleStruct x8 = back_RetTuple(ctx, 7, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:363)
  RetTupleStruct x9 = back_RetTuple(ctx, 15, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:364)
  RetTupleStruct x10 = back_RetTuple(ctx, 16, arg1);
  // s2w(zirgen/circuit/keccak/sha256_for_keccak.zir:155)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:366)
  NondetRegStruct22Array x11 = x5.arrE;
  NondetRegStruct22Array x12 = x5.arrF;
  NondetRegStruct22Array x13 = x8.arrE;
  NondetRegStruct22Array x14 = x8.arrF;
  NondetRegStruct22Array x15 = x9.arrE;
  NondetRegStruct22Array x16 = x9.arrF;
  NondetRegStruct22Array x17 = x10.arrE;
  NondetRegStruct22Array x18 = x10.arrF;
  TwoShortsStruct x19 = execComputeW(
      ctx,
      Val32Array{x11[0]._super,  x11[1]._super,  x11[2]._super,  x11[3]._super,  x11[4]._super,
                 x11[5]._super,  x11[6]._super,  x11[7]._super,  x11[8]._super,  x11[9]._super,
                 x11[10]._super, x11[11]._super, x11[12]._super, x11[13]._super, x11[14]._super,
                 x11[15]._super, x11[16]._super, x11[17]._super, x11[18]._super, x11[19]._super,
                 x11[20]._super, x11[21]._super, x12[0]._super,  x12[1]._super,  x12[2]._super,
                 x12[3]._super,  x12[4]._super,  x12[5]._super,  x12[6]._super,  x12[7]._super,
                 x12[8]._super,  x12[9]._super},
      Val32Array{x13[0]._super,  x13[1]._super,  x13[2]._super,  x13[3]._super,  x13[4]._super,
                 x13[5]._super,  x13[6]._super,  x13[7]._super,  x13[8]._super,  x13[9]._super,
                 x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x14[0]._super,  x14[1]._super,  x14[2]._super,
                 x14[3]._super,  x14[4]._super,  x14[5]._super,  x14[6]._super,  x14[7]._super,
                 x14[8]._super,  x14[9]._super},
      Val32Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x16[0]._super,  x16[1]._super,  x16[2]._super,
                 x16[3]._super,  x16[4]._super,  x16[5]._super,  x16[6]._super,  x16[7]._super,
                 x16[8]._super,  x16[9]._super},
      Val32Array{x17[0]._super,  x17[1]._super,  x17[2]._super,  x17[3]._super,  x17[4]._super,
                 x17[5]._super,  x17[6]._super,  x17[7]._super,  x17[8]._super,  x17[9]._super,
                 x17[10]._super, x17[11]._super, x17[12]._super, x17[13]._super, x17[14]._super,
                 x17[15]._super, x17[16]._super, x17[17]._super, x17[18]._super, x17[19]._super,
                 x17[20]._super, x17[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super},
      LAYOUT_LOOKUP(layout2, packedW));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16_Struct x20 =
      execUnpackWithCarry(ctx, x19.low, x19.high, LAYOUT_LOOKUP(layout2, newW));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  NondetRegStruct22Array x21 = x4.arrA;
  NondetRegStruct22Array x22 = x4.arrB;
  NondetRegStruct22Array x23 = x5.arrA;
  NondetRegStruct22Array x24 = x5.arrB;
  NondetRegStruct22Array x25 = x6.arrA;
  NondetRegStruct22Array x26 = x6.arrB;
  NondetRegStruct22Array x27 = x7.arrA;
  NondetRegStruct22Array x28 = x7.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:369)
  NondetRegStruct22Array x29 = x4.arrC;
  NondetRegStruct22Array x30 = x5.arrC;
  NondetRegStruct22Array x31 = x6.arrC;
  NondetRegStruct22Array x32 = x7.arrC;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x33 = x20._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  Val x55 = x33[21]._super;
  Val x56 = x33[22]._super;
  Val x57 = x33[23]._super;
  Val x58 = x33[24]._super;
  Val x59 = x33[25]._super;
  Val x60 = x33[26]._super;
  Val x61 = x33[27]._super;
  Val x62 = x33[28]._super;
  Val x63 = x33[29]._super;
  Val x64 = x33[30]._super;
  Val x65 = x33[31]._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  ComputeAEStruct x66 = execComputeAE(
      ctx,
      Val32Array{x21[0]._super,  x21[1]._super,  x21[2]._super,  x21[3]._super,  x21[4]._super,
                 x21[5]._super,  x21[6]._super,  x21[7]._super,  x21[8]._super,  x21[9]._super,
                 x21[10]._super, x21[11]._super, x21[12]._super, x21[13]._super, x21[14]._super,
                 x21[15]._super, x21[16]._super, x21[17]._super, x21[18]._super, x21[19]._super,
                 x21[20]._super, x21[21]._super, x22[0]._super,  x22[1]._super,  x22[2]._super,
                 x22[3]._super,  x22[4]._super,  x22[5]._super,  x22[6]._super,  x22[7]._super,
                 x22[8]._super,  x22[9]._super},
      Val32Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super, x24[0]._super,  x24[1]._super,  x24[2]._super,
                 x24[3]._super,  x24[4]._super,  x24[5]._super,  x24[6]._super,  x24[7]._super,
                 x24[8]._super,  x24[9]._super},
      Val32Array{x25[0]._super,  x25[1]._super,  x25[2]._super,  x25[3]._super,  x25[4]._super,
                 x25[5]._super,  x25[6]._super,  x25[7]._super,  x25[8]._super,  x25[9]._super,
                 x25[10]._super, x25[11]._super, x25[12]._super, x25[13]._super, x25[14]._super,
                 x25[15]._super, x25[16]._super, x25[17]._super, x25[18]._super, x25[19]._super,
                 x25[20]._super, x25[21]._super, x26[0]._super,  x26[1]._super,  x26[2]._super,
                 x26[3]._super,  x26[4]._super,  x26[5]._super,  x26[6]._super,  x26[7]._super,
                 x26[8]._super,  x26[9]._super},
      Val32Array{x27[0]._super,  x27[1]._super,  x27[2]._super,  x27[3]._super,  x27[4]._super,
                 x27[5]._super,  x27[6]._super,  x27[7]._super,  x27[8]._super,  x27[9]._super,
                 x27[10]._super, x27[11]._super, x27[12]._super, x27[13]._super, x27[14]._super,
                 x27[15]._super, x27[16]._super, x27[17]._super, x27[18]._super, x27[19]._super,
                 x27[20]._super, x27[21]._super, x28[0]._super,  x28[1]._super,  x28[2]._super,
                 x28[3]._super,  x28[4]._super,  x28[5]._super,  x28[6]._super,  x28[7]._super,
                 x28[8]._super,  x28[9]._super},
      Val32Array{x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super, x29[0]._super,  x29[1]._super,  x29[2]._super,
                 x29[3]._super,  x29[4]._super,  x29[5]._super,  x29[6]._super,  x29[7]._super,
                 x29[8]._super,  x29[9]._super,  x29[10]._super, x29[11]._super, x29[12]._super,
                 x29[13]._super, x29[14]._super, x29[15]._super, x29[16]._super, x29[17]._super,
                 x29[18]._super, x29[19]._super},
      Val32Array{x24[10]._super, x24[11]._super, x24[12]._super, x24[13]._super, x24[14]._super,
                 x24[15]._super, x24[16]._super, x24[17]._super, x24[18]._super, x24[19]._super,
                 x24[20]._super, x24[21]._super, x30[0]._super,  x30[1]._super,  x30[2]._super,
                 x30[3]._super,  x30[4]._super,  x30[5]._super,  x30[6]._super,  x30[7]._super,
                 x30[8]._super,  x30[9]._super,  x30[10]._super, x30[11]._super, x30[12]._super,
                 x30[13]._super, x30[14]._super, x30[15]._super, x30[16]._super, x30[17]._super,
                 x30[18]._super, x30[19]._super},
      Val32Array{x26[10]._super, x26[11]._super, x26[12]._super, x26[13]._super, x26[14]._super,
                 x26[15]._super, x26[16]._super, x26[17]._super, x26[18]._super, x26[19]._super,
                 x26[20]._super, x26[21]._super, x31[0]._super,  x31[1]._super,  x31[2]._super,
                 x31[3]._super,  x31[4]._super,  x31[5]._super,  x31[6]._super,  x31[7]._super,
                 x31[8]._super,  x31[9]._super,  x31[10]._super, x31[11]._super, x31[12]._super,
                 x31[13]._super, x31[14]._super, x31[15]._super, x31[16]._super, x31[17]._super,
                 x31[18]._super, x31[19]._super},
      Val32Array{x28[10]._super, x28[11]._super, x28[12]._super, x28[13]._super, x28[14]._super,
                 x28[15]._super, x28[16]._super, x28[17]._super, x28[18]._super, x28[19]._super,
                 x28[20]._super, x28[21]._super, x32[0]._super,  x32[1]._super,  x32[2]._super,
                 x32[3]._super,  x32[4]._super,  x32[5]._super,  x32[6]._super,  x32[7]._super,
                 x32[8]._super,  x32[9]._super,  x32[10]._super, x32[11]._super, x32[12]._super,
                 x32[13]._super, x32[14]._super, x32[15]._super, x32[16]._super, x32[17]._super,
                 x32[18]._super, x32[19]._super},
      Val32Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49,
                 x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65},
      TwoShortsStruct{.low = Val(50797), .high = Val(43057)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x67 = x66.aOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16_Struct x68 =
      execUnpackWithCarry(ctx, x67.low, x67.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  TwoShortsStruct x69 = x66.eOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16_Struct x70 =
      execUnpackWithCarry(ctx, x69.low, x69.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x71 = x68._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x72 = x70._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_0__9_Arm1_Super_SuperLayout> x73 = LAYOUT_LOOKUP(x3, arm1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:373)
  Val22Array x74 =
      Val22Array{x71[0]._super,  x71[1]._super,  x71[2]._super,  x71[3]._super,  x71[4]._super,
                 x71[5]._super,  x71[6]._super,  x71[7]._super,  x71[8]._super,  x71[9]._super,
                 x71[10]._super, x71[11]._super, x71[12]._super, x71[13]._super, x71[14]._super,
                 x71[15]._super, x71[16]._super, x71[17]._super, x71[18]._super, x71[19]._super,
                 x71[20]._super, x71[21]._super};
  Val22Array x75 =
      Val22Array{x71[22]._super, x71[23]._super, x71[24]._super, x71[25]._super, x71[26]._super,
                 x71[27]._super, x71[28]._super, x71[29]._super, x71[30]._super, x71[31]._super,
                 x72[0]._super,  x72[1]._super,  x72[2]._super,  x72[3]._super,  x72[4]._super,
                 x72[5]._super,  x72[6]._super,  x72[7]._super,  x72[8]._super,  x72[9]._super,
                 x72[10]._super, x72[11]._super};
  Val22Array x76 =
      Val22Array{x72[12]._super, x72[13]._super, x72[14]._super, x72[15]._super, x72[16]._super,
                 x72[17]._super, x72[18]._super, x72[19]._super, x72[20]._super, x72[21]._super,
                 x72[22]._super, x72[23]._super, x72[24]._super, x72[25]._super, x72[26]._super,
                 x72[27]._super, x72[28]._super, x72[29]._super, x72[30]._super, x72[31]._super,
                 Val(0),         Val(0)};
  Val22Array x77 = Val22Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,
                              x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55};
  Val22Array x78 = Val22Array{x56,    x57,    x58,    x59,    x60,    x61,    x62,    x63,
                              x64,    x65,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  Val x79 = x4.blk._super;
  Val x80 = x4.midx._super;
  if (to_size_t(Val(1))) {
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:376)
    RetTupleStruct x81 =
        exec_RetTuple(ctx,
                      x74,
                      x75,
                      x76,
                      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                      x77,
                      x78,
                      Val(10),
                      Val(20),
                      Val(0),
                      x79,
                      x80,
                      LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  NondetRegStruct24Array x82 = x4.arrD;
  Val24Array x83 =
      Val24Array{x82[0]._super,  x82[1]._super,  x82[2]._super,  x82[3]._super,  x82[4]._super,
                 x82[5]._super,  x82[6]._super,  x82[7]._super,  x82[8]._super,  x82[9]._super,
                 x82[10]._super, x82[11]._super, x82[12]._super, x82[13]._super, x82[14]._super,
                 x82[15]._super, x82[16]._super, x82[17]._super, x82[18]._super, x82[19]._super,
                 x82[20]._super, x82[21]._super, x82[22]._super, x82[23]._super};
  Val x84 = x4.rnd._super;
  if (to_size_t(Val(0))) {
    if (to_size_t(Val(1))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:380)
      RetTupleStruct x85 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(0),
                                         Val(21),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm0));
    }
    if (to_size_t(Val(0))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:383)
      RetTupleStruct x86 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(9),
                                         Val(17),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm1));
    }
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:379)
    RetTupleStruct x87 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x73, _super));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  RetTupleStruct x88 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x88;
}
RetTupleStruct execSha256mix_0__10_(ExecContext& ctx,
                                    RetTupleStruct arg0,
                                    BoundLayout<RetTupleLayout> arg1,
                                    BoundLayout<Sha256mix_0__10_Layout> layout2) {
  BoundLayout<Sha256mix_0__10__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:359)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:360)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:361)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:362)
  RetTupleStruct x8 = back_RetTuple(ctx, 7, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:363)
  RetTupleStruct x9 = back_RetTuple(ctx, 15, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:364)
  RetTupleStruct x10 = back_RetTuple(ctx, 16, arg1);
  // s2w(zirgen/circuit/keccak/sha256_for_keccak.zir:155)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:366)
  NondetRegStruct22Array x11 = x5.arrE;
  NondetRegStruct22Array x12 = x5.arrF;
  NondetRegStruct22Array x13 = x8.arrE;
  NondetRegStruct22Array x14 = x8.arrF;
  NondetRegStruct22Array x15 = x9.arrE;
  NondetRegStruct22Array x16 = x9.arrF;
  NondetRegStruct22Array x17 = x10.arrE;
  NondetRegStruct22Array x18 = x10.arrF;
  TwoShortsStruct x19 = execComputeW(
      ctx,
      Val32Array{x11[0]._super,  x11[1]._super,  x11[2]._super,  x11[3]._super,  x11[4]._super,
                 x11[5]._super,  x11[6]._super,  x11[7]._super,  x11[8]._super,  x11[9]._super,
                 x11[10]._super, x11[11]._super, x11[12]._super, x11[13]._super, x11[14]._super,
                 x11[15]._super, x11[16]._super, x11[17]._super, x11[18]._super, x11[19]._super,
                 x11[20]._super, x11[21]._super, x12[0]._super,  x12[1]._super,  x12[2]._super,
                 x12[3]._super,  x12[4]._super,  x12[5]._super,  x12[6]._super,  x12[7]._super,
                 x12[8]._super,  x12[9]._super},
      Val32Array{x13[0]._super,  x13[1]._super,  x13[2]._super,  x13[3]._super,  x13[4]._super,
                 x13[5]._super,  x13[6]._super,  x13[7]._super,  x13[8]._super,  x13[9]._super,
                 x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x14[0]._super,  x14[1]._super,  x14[2]._super,
                 x14[3]._super,  x14[4]._super,  x14[5]._super,  x14[6]._super,  x14[7]._super,
                 x14[8]._super,  x14[9]._super},
      Val32Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x16[0]._super,  x16[1]._super,  x16[2]._super,
                 x16[3]._super,  x16[4]._super,  x16[5]._super,  x16[6]._super,  x16[7]._super,
                 x16[8]._super,  x16[9]._super},
      Val32Array{x17[0]._super,  x17[1]._super,  x17[2]._super,  x17[3]._super,  x17[4]._super,
                 x17[5]._super,  x17[6]._super,  x17[7]._super,  x17[8]._super,  x17[9]._super,
                 x17[10]._super, x17[11]._super, x17[12]._super, x17[13]._super, x17[14]._super,
                 x17[15]._super, x17[16]._super, x17[17]._super, x17[18]._super, x17[19]._super,
                 x17[20]._super, x17[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super},
      LAYOUT_LOOKUP(layout2, packedW));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16_Struct x20 =
      execUnpackWithCarry(ctx, x19.low, x19.high, LAYOUT_LOOKUP(layout2, newW));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  NondetRegStruct22Array x21 = x4.arrA;
  NondetRegStruct22Array x22 = x4.arrB;
  NondetRegStruct22Array x23 = x5.arrA;
  NondetRegStruct22Array x24 = x5.arrB;
  NondetRegStruct22Array x25 = x6.arrA;
  NondetRegStruct22Array x26 = x6.arrB;
  NondetRegStruct22Array x27 = x7.arrA;
  NondetRegStruct22Array x28 = x7.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:369)
  NondetRegStruct22Array x29 = x4.arrC;
  NondetRegStruct22Array x30 = x5.arrC;
  NondetRegStruct22Array x31 = x6.arrC;
  NondetRegStruct22Array x32 = x7.arrC;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x33 = x20._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  Val x55 = x33[21]._super;
  Val x56 = x33[22]._super;
  Val x57 = x33[23]._super;
  Val x58 = x33[24]._super;
  Val x59 = x33[25]._super;
  Val x60 = x33[26]._super;
  Val x61 = x33[27]._super;
  Val x62 = x33[28]._super;
  Val x63 = x33[29]._super;
  Val x64 = x33[30]._super;
  Val x65 = x33[31]._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  ComputeAEStruct x66 = execComputeAE(
      ctx,
      Val32Array{x21[0]._super,  x21[1]._super,  x21[2]._super,  x21[3]._super,  x21[4]._super,
                 x21[5]._super,  x21[6]._super,  x21[7]._super,  x21[8]._super,  x21[9]._super,
                 x21[10]._super, x21[11]._super, x21[12]._super, x21[13]._super, x21[14]._super,
                 x21[15]._super, x21[16]._super, x21[17]._super, x21[18]._super, x21[19]._super,
                 x21[20]._super, x21[21]._super, x22[0]._super,  x22[1]._super,  x22[2]._super,
                 x22[3]._super,  x22[4]._super,  x22[5]._super,  x22[6]._super,  x22[7]._super,
                 x22[8]._super,  x22[9]._super},
      Val32Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super, x24[0]._super,  x24[1]._super,  x24[2]._super,
                 x24[3]._super,  x24[4]._super,  x24[5]._super,  x24[6]._super,  x24[7]._super,
                 x24[8]._super,  x24[9]._super},
      Val32Array{x25[0]._super,  x25[1]._super,  x25[2]._super,  x25[3]._super,  x25[4]._super,
                 x25[5]._super,  x25[6]._super,  x25[7]._super,  x25[8]._super,  x25[9]._super,
                 x25[10]._super, x25[11]._super, x25[12]._super, x25[13]._super, x25[14]._super,
                 x25[15]._super, x25[16]._super, x25[17]._super, x25[18]._super, x25[19]._super,
                 x25[20]._super, x25[21]._super, x26[0]._super,  x26[1]._super,  x26[2]._super,
                 x26[3]._super,  x26[4]._super,  x26[5]._super,  x26[6]._super,  x26[7]._super,
                 x26[8]._super,  x26[9]._super},
      Val32Array{x27[0]._super,  x27[1]._super,  x27[2]._super,  x27[3]._super,  x27[4]._super,
                 x27[5]._super,  x27[6]._super,  x27[7]._super,  x27[8]._super,  x27[9]._super,
                 x27[10]._super, x27[11]._super, x27[12]._super, x27[13]._super, x27[14]._super,
                 x27[15]._super, x27[16]._super, x27[17]._super, x27[18]._super, x27[19]._super,
                 x27[20]._super, x27[21]._super, x28[0]._super,  x28[1]._super,  x28[2]._super,
                 x28[3]._super,  x28[4]._super,  x28[5]._super,  x28[6]._super,  x28[7]._super,
                 x28[8]._super,  x28[9]._super},
      Val32Array{x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super, x29[0]._super,  x29[1]._super,  x29[2]._super,
                 x29[3]._super,  x29[4]._super,  x29[5]._super,  x29[6]._super,  x29[7]._super,
                 x29[8]._super,  x29[9]._super,  x29[10]._super, x29[11]._super, x29[12]._super,
                 x29[13]._super, x29[14]._super, x29[15]._super, x29[16]._super, x29[17]._super,
                 x29[18]._super, x29[19]._super},
      Val32Array{x24[10]._super, x24[11]._super, x24[12]._super, x24[13]._super, x24[14]._super,
                 x24[15]._super, x24[16]._super, x24[17]._super, x24[18]._super, x24[19]._super,
                 x24[20]._super, x24[21]._super, x30[0]._super,  x30[1]._super,  x30[2]._super,
                 x30[3]._super,  x30[4]._super,  x30[5]._super,  x30[6]._super,  x30[7]._super,
                 x30[8]._super,  x30[9]._super,  x30[10]._super, x30[11]._super, x30[12]._super,
                 x30[13]._super, x30[14]._super, x30[15]._super, x30[16]._super, x30[17]._super,
                 x30[18]._super, x30[19]._super},
      Val32Array{x26[10]._super, x26[11]._super, x26[12]._super, x26[13]._super, x26[14]._super,
                 x26[15]._super, x26[16]._super, x26[17]._super, x26[18]._super, x26[19]._super,
                 x26[20]._super, x26[21]._super, x31[0]._super,  x31[1]._super,  x31[2]._super,
                 x31[3]._super,  x31[4]._super,  x31[5]._super,  x31[6]._super,  x31[7]._super,
                 x31[8]._super,  x31[9]._super,  x31[10]._super, x31[11]._super, x31[12]._super,
                 x31[13]._super, x31[14]._super, x31[15]._super, x31[16]._super, x31[17]._super,
                 x31[18]._super, x31[19]._super},
      Val32Array{x28[10]._super, x28[11]._super, x28[12]._super, x28[13]._super, x28[14]._super,
                 x28[15]._super, x28[16]._super, x28[17]._super, x28[18]._super, x28[19]._super,
                 x28[20]._super, x28[21]._super, x32[0]._super,  x32[1]._super,  x32[2]._super,
                 x32[3]._super,  x32[4]._super,  x32[5]._super,  x32[6]._super,  x32[7]._super,
                 x32[8]._super,  x32[9]._super,  x32[10]._super, x32[11]._super, x32[12]._super,
                 x32[13]._super, x32[14]._super, x32[15]._super, x32[16]._super, x32[17]._super,
                 x32[18]._super, x32[19]._super},
      Val32Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49,
                 x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65},
      TwoShortsStruct{.low = Val(10184), .high = Val(45059)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x67 = x66.aOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16_Struct x68 =
      execUnpackWithCarry(ctx, x67.low, x67.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  TwoShortsStruct x69 = x66.eOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16_Struct x70 =
      execUnpackWithCarry(ctx, x69.low, x69.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x71 = x68._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x72 = x70._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_0__10_Arm1_Super_SuperLayout> x73 = LAYOUT_LOOKUP(x3, arm1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:373)
  Val22Array x74 =
      Val22Array{x71[0]._super,  x71[1]._super,  x71[2]._super,  x71[3]._super,  x71[4]._super,
                 x71[5]._super,  x71[6]._super,  x71[7]._super,  x71[8]._super,  x71[9]._super,
                 x71[10]._super, x71[11]._super, x71[12]._super, x71[13]._super, x71[14]._super,
                 x71[15]._super, x71[16]._super, x71[17]._super, x71[18]._super, x71[19]._super,
                 x71[20]._super, x71[21]._super};
  Val22Array x75 =
      Val22Array{x71[22]._super, x71[23]._super, x71[24]._super, x71[25]._super, x71[26]._super,
                 x71[27]._super, x71[28]._super, x71[29]._super, x71[30]._super, x71[31]._super,
                 x72[0]._super,  x72[1]._super,  x72[2]._super,  x72[3]._super,  x72[4]._super,
                 x72[5]._super,  x72[6]._super,  x72[7]._super,  x72[8]._super,  x72[9]._super,
                 x72[10]._super, x72[11]._super};
  Val22Array x76 =
      Val22Array{x72[12]._super, x72[13]._super, x72[14]._super, x72[15]._super, x72[16]._super,
                 x72[17]._super, x72[18]._super, x72[19]._super, x72[20]._super, x72[21]._super,
                 x72[22]._super, x72[23]._super, x72[24]._super, x72[25]._super, x72[26]._super,
                 x72[27]._super, x72[28]._super, x72[29]._super, x72[30]._super, x72[31]._super,
                 Val(0),         Val(0)};
  Val22Array x77 = Val22Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,
                              x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55};
  Val22Array x78 = Val22Array{x56,    x57,    x58,    x59,    x60,    x61,    x62,    x63,
                              x64,    x65,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  Val x79 = x4.blk._super;
  Val x80 = x4.midx._super;
  if (to_size_t(Val(1))) {
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:376)
    RetTupleStruct x81 =
        exec_RetTuple(ctx,
                      x74,
                      x75,
                      x76,
                      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                      x77,
                      x78,
                      Val(11),
                      Val(20),
                      Val(0),
                      x79,
                      x80,
                      LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  NondetRegStruct24Array x82 = x4.arrD;
  Val24Array x83 =
      Val24Array{x82[0]._super,  x82[1]._super,  x82[2]._super,  x82[3]._super,  x82[4]._super,
                 x82[5]._super,  x82[6]._super,  x82[7]._super,  x82[8]._super,  x82[9]._super,
                 x82[10]._super, x82[11]._super, x82[12]._super, x82[13]._super, x82[14]._super,
                 x82[15]._super, x82[16]._super, x82[17]._super, x82[18]._super, x82[19]._super,
                 x82[20]._super, x82[21]._super, x82[22]._super, x82[23]._super};
  Val x84 = x4.rnd._super;
  if (to_size_t(Val(0))) {
    if (to_size_t(Val(1))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:380)
      RetTupleStruct x85 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(0),
                                         Val(21),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm0));
    }
    if (to_size_t(Val(0))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:383)
      RetTupleStruct x86 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(9),
                                         Val(17),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm1));
    }
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:379)
    RetTupleStruct x87 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x73, _super));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  RetTupleStruct x88 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x88;
}
RetTupleStruct execSha256mix_0__11_(ExecContext& ctx,
                                    RetTupleStruct arg0,
                                    BoundLayout<RetTupleLayout> arg1,
                                    BoundLayout<Sha256mix_0__11_Layout> layout2) {
  BoundLayout<Sha256mix_0__11__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:359)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:360)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:361)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:362)
  RetTupleStruct x8 = back_RetTuple(ctx, 7, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:363)
  RetTupleStruct x9 = back_RetTuple(ctx, 15, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:364)
  RetTupleStruct x10 = back_RetTuple(ctx, 16, arg1);
  // s2w(zirgen/circuit/keccak/sha256_for_keccak.zir:155)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:366)
  NondetRegStruct22Array x11 = x5.arrE;
  NondetRegStruct22Array x12 = x5.arrF;
  NondetRegStruct22Array x13 = x8.arrE;
  NondetRegStruct22Array x14 = x8.arrF;
  NondetRegStruct22Array x15 = x9.arrE;
  NondetRegStruct22Array x16 = x9.arrF;
  NondetRegStruct22Array x17 = x10.arrE;
  NondetRegStruct22Array x18 = x10.arrF;
  TwoShortsStruct x19 = execComputeW(
      ctx,
      Val32Array{x11[0]._super,  x11[1]._super,  x11[2]._super,  x11[3]._super,  x11[4]._super,
                 x11[5]._super,  x11[6]._super,  x11[7]._super,  x11[8]._super,  x11[9]._super,
                 x11[10]._super, x11[11]._super, x11[12]._super, x11[13]._super, x11[14]._super,
                 x11[15]._super, x11[16]._super, x11[17]._super, x11[18]._super, x11[19]._super,
                 x11[20]._super, x11[21]._super, x12[0]._super,  x12[1]._super,  x12[2]._super,
                 x12[3]._super,  x12[4]._super,  x12[5]._super,  x12[6]._super,  x12[7]._super,
                 x12[8]._super,  x12[9]._super},
      Val32Array{x13[0]._super,  x13[1]._super,  x13[2]._super,  x13[3]._super,  x13[4]._super,
                 x13[5]._super,  x13[6]._super,  x13[7]._super,  x13[8]._super,  x13[9]._super,
                 x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x14[0]._super,  x14[1]._super,  x14[2]._super,
                 x14[3]._super,  x14[4]._super,  x14[5]._super,  x14[6]._super,  x14[7]._super,
                 x14[8]._super,  x14[9]._super},
      Val32Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x16[0]._super,  x16[1]._super,  x16[2]._super,
                 x16[3]._super,  x16[4]._super,  x16[5]._super,  x16[6]._super,  x16[7]._super,
                 x16[8]._super,  x16[9]._super},
      Val32Array{x17[0]._super,  x17[1]._super,  x17[2]._super,  x17[3]._super,  x17[4]._super,
                 x17[5]._super,  x17[6]._super,  x17[7]._super,  x17[8]._super,  x17[9]._super,
                 x17[10]._super, x17[11]._super, x17[12]._super, x17[13]._super, x17[14]._super,
                 x17[15]._super, x17[16]._super, x17[17]._super, x17[18]._super, x17[19]._super,
                 x17[20]._super, x17[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super},
      LAYOUT_LOOKUP(layout2, packedW));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16_Struct x20 =
      execUnpackWithCarry(ctx, x19.low, x19.high, LAYOUT_LOOKUP(layout2, newW));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  NondetRegStruct22Array x21 = x4.arrA;
  NondetRegStruct22Array x22 = x4.arrB;
  NondetRegStruct22Array x23 = x5.arrA;
  NondetRegStruct22Array x24 = x5.arrB;
  NondetRegStruct22Array x25 = x6.arrA;
  NondetRegStruct22Array x26 = x6.arrB;
  NondetRegStruct22Array x27 = x7.arrA;
  NondetRegStruct22Array x28 = x7.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:369)
  NondetRegStruct22Array x29 = x4.arrC;
  NondetRegStruct22Array x30 = x5.arrC;
  NondetRegStruct22Array x31 = x6.arrC;
  NondetRegStruct22Array x32 = x7.arrC;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x33 = x20._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  Val x55 = x33[21]._super;
  Val x56 = x33[22]._super;
  Val x57 = x33[23]._super;
  Val x58 = x33[24]._super;
  Val x59 = x33[25]._super;
  Val x60 = x33[26]._super;
  Val x61 = x33[27]._super;
  Val x62 = x33[28]._super;
  Val x63 = x33[29]._super;
  Val x64 = x33[30]._super;
  Val x65 = x33[31]._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  ComputeAEStruct x66 = execComputeAE(
      ctx,
      Val32Array{x21[0]._super,  x21[1]._super,  x21[2]._super,  x21[3]._super,  x21[4]._super,
                 x21[5]._super,  x21[6]._super,  x21[7]._super,  x21[8]._super,  x21[9]._super,
                 x21[10]._super, x21[11]._super, x21[12]._super, x21[13]._super, x21[14]._super,
                 x21[15]._super, x21[16]._super, x21[17]._super, x21[18]._super, x21[19]._super,
                 x21[20]._super, x21[21]._super, x22[0]._super,  x22[1]._super,  x22[2]._super,
                 x22[3]._super,  x22[4]._super,  x22[5]._super,  x22[6]._super,  x22[7]._super,
                 x22[8]._super,  x22[9]._super},
      Val32Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super, x24[0]._super,  x24[1]._super,  x24[2]._super,
                 x24[3]._super,  x24[4]._super,  x24[5]._super,  x24[6]._super,  x24[7]._super,
                 x24[8]._super,  x24[9]._super},
      Val32Array{x25[0]._super,  x25[1]._super,  x25[2]._super,  x25[3]._super,  x25[4]._super,
                 x25[5]._super,  x25[6]._super,  x25[7]._super,  x25[8]._super,  x25[9]._super,
                 x25[10]._super, x25[11]._super, x25[12]._super, x25[13]._super, x25[14]._super,
                 x25[15]._super, x25[16]._super, x25[17]._super, x25[18]._super, x25[19]._super,
                 x25[20]._super, x25[21]._super, x26[0]._super,  x26[1]._super,  x26[2]._super,
                 x26[3]._super,  x26[4]._super,  x26[5]._super,  x26[6]._super,  x26[7]._super,
                 x26[8]._super,  x26[9]._super},
      Val32Array{x27[0]._super,  x27[1]._super,  x27[2]._super,  x27[3]._super,  x27[4]._super,
                 x27[5]._super,  x27[6]._super,  x27[7]._super,  x27[8]._super,  x27[9]._super,
                 x27[10]._super, x27[11]._super, x27[12]._super, x27[13]._super, x27[14]._super,
                 x27[15]._super, x27[16]._super, x27[17]._super, x27[18]._super, x27[19]._super,
                 x27[20]._super, x27[21]._super, x28[0]._super,  x28[1]._super,  x28[2]._super,
                 x28[3]._super,  x28[4]._super,  x28[5]._super,  x28[6]._super,  x28[7]._super,
                 x28[8]._super,  x28[9]._super},
      Val32Array{x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super, x29[0]._super,  x29[1]._super,  x29[2]._super,
                 x29[3]._super,  x29[4]._super,  x29[5]._super,  x29[6]._super,  x29[7]._super,
                 x29[8]._super,  x29[9]._super,  x29[10]._super, x29[11]._super, x29[12]._super,
                 x29[13]._super, x29[14]._super, x29[15]._super, x29[16]._super, x29[17]._super,
                 x29[18]._super, x29[19]._super},
      Val32Array{x24[10]._super, x24[11]._super, x24[12]._super, x24[13]._super, x24[14]._super,
                 x24[15]._super, x24[16]._super, x24[17]._super, x24[18]._super, x24[19]._super,
                 x24[20]._super, x24[21]._super, x30[0]._super,  x30[1]._super,  x30[2]._super,
                 x30[3]._super,  x30[4]._super,  x30[5]._super,  x30[6]._super,  x30[7]._super,
                 x30[8]._super,  x30[9]._super,  x30[10]._super, x30[11]._super, x30[12]._super,
                 x30[13]._super, x30[14]._super, x30[15]._super, x30[16]._super, x30[17]._super,
                 x30[18]._super, x30[19]._super},
      Val32Array{x26[10]._super, x26[11]._super, x26[12]._super, x26[13]._super, x26[14]._super,
                 x26[15]._super, x26[16]._super, x26[17]._super, x26[18]._super, x26[19]._super,
                 x26[20]._super, x26[21]._super, x31[0]._super,  x31[1]._super,  x31[2]._super,
                 x31[3]._super,  x31[4]._super,  x31[5]._super,  x31[6]._super,  x31[7]._super,
                 x31[8]._super,  x31[9]._super,  x31[10]._super, x31[11]._super, x31[12]._super,
                 x31[13]._super, x31[14]._super, x31[15]._super, x31[16]._super, x31[17]._super,
                 x31[18]._super, x31[19]._super},
      Val32Array{x28[10]._super, x28[11]._super, x28[12]._super, x28[13]._super, x28[14]._super,
                 x28[15]._super, x28[16]._super, x28[17]._super, x28[18]._super, x28[19]._super,
                 x28[20]._super, x28[21]._super, x32[0]._super,  x32[1]._super,  x32[2]._super,
                 x32[3]._super,  x32[4]._super,  x32[5]._super,  x32[6]._super,  x32[7]._super,
                 x32[8]._super,  x32[9]._super,  x32[10]._super, x32[11]._super, x32[12]._super,
                 x32[13]._super, x32[14]._super, x32[15]._super, x32[16]._super, x32[17]._super,
                 x32[18]._super, x32[19]._super},
      Val32Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49,
                 x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65},
      TwoShortsStruct{.low = Val(32711), .high = Val(48985)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x67 = x66.aOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16_Struct x68 =
      execUnpackWithCarry(ctx, x67.low, x67.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  TwoShortsStruct x69 = x66.eOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16_Struct x70 =
      execUnpackWithCarry(ctx, x69.low, x69.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x71 = x68._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x72 = x70._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_0__11_Arm1_Super_SuperLayout> x73 = LAYOUT_LOOKUP(x3, arm1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:373)
  Val22Array x74 =
      Val22Array{x71[0]._super,  x71[1]._super,  x71[2]._super,  x71[3]._super,  x71[4]._super,
                 x71[5]._super,  x71[6]._super,  x71[7]._super,  x71[8]._super,  x71[9]._super,
                 x71[10]._super, x71[11]._super, x71[12]._super, x71[13]._super, x71[14]._super,
                 x71[15]._super, x71[16]._super, x71[17]._super, x71[18]._super, x71[19]._super,
                 x71[20]._super, x71[21]._super};
  Val22Array x75 =
      Val22Array{x71[22]._super, x71[23]._super, x71[24]._super, x71[25]._super, x71[26]._super,
                 x71[27]._super, x71[28]._super, x71[29]._super, x71[30]._super, x71[31]._super,
                 x72[0]._super,  x72[1]._super,  x72[2]._super,  x72[3]._super,  x72[4]._super,
                 x72[5]._super,  x72[6]._super,  x72[7]._super,  x72[8]._super,  x72[9]._super,
                 x72[10]._super, x72[11]._super};
  Val22Array x76 =
      Val22Array{x72[12]._super, x72[13]._super, x72[14]._super, x72[15]._super, x72[16]._super,
                 x72[17]._super, x72[18]._super, x72[19]._super, x72[20]._super, x72[21]._super,
                 x72[22]._super, x72[23]._super, x72[24]._super, x72[25]._super, x72[26]._super,
                 x72[27]._super, x72[28]._super, x72[29]._super, x72[30]._super, x72[31]._super,
                 Val(0),         Val(0)};
  Val22Array x77 = Val22Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,
                              x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55};
  Val22Array x78 = Val22Array{x56,    x57,    x58,    x59,    x60,    x61,    x62,    x63,
                              x64,    x65,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  Val x79 = x4.blk._super;
  Val x80 = x4.midx._super;
  if (to_size_t(Val(1))) {
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:376)
    RetTupleStruct x81 =
        exec_RetTuple(ctx,
                      x74,
                      x75,
                      x76,
                      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                      x77,
                      x78,
                      Val(12),
                      Val(20),
                      Val(0),
                      x79,
                      x80,
                      LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  NondetRegStruct24Array x82 = x4.arrD;
  Val24Array x83 =
      Val24Array{x82[0]._super,  x82[1]._super,  x82[2]._super,  x82[3]._super,  x82[4]._super,
                 x82[5]._super,  x82[6]._super,  x82[7]._super,  x82[8]._super,  x82[9]._super,
                 x82[10]._super, x82[11]._super, x82[12]._super, x82[13]._super, x82[14]._super,
                 x82[15]._super, x82[16]._super, x82[17]._super, x82[18]._super, x82[19]._super,
                 x82[20]._super, x82[21]._super, x82[22]._super, x82[23]._super};
  Val x84 = x4.rnd._super;
  if (to_size_t(Val(0))) {
    if (to_size_t(Val(1))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:380)
      RetTupleStruct x85 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(0),
                                         Val(21),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm0));
    }
    if (to_size_t(Val(0))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:383)
      RetTupleStruct x86 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(9),
                                         Val(17),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm1));
    }
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:379)
    RetTupleStruct x87 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x73, _super));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  RetTupleStruct x88 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x88;
}
RetTupleStruct execSha256mix_0__12_(ExecContext& ctx,
                                    RetTupleStruct arg0,
                                    BoundLayout<RetTupleLayout> arg1,
                                    BoundLayout<Sha256mix_0__12_Layout> layout2) {
  BoundLayout<Sha256mix_0__12__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:359)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:360)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:361)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:362)
  RetTupleStruct x8 = back_RetTuple(ctx, 7, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:363)
  RetTupleStruct x9 = back_RetTuple(ctx, 15, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:364)
  RetTupleStruct x10 = back_RetTuple(ctx, 16, arg1);
  // s2w(zirgen/circuit/keccak/sha256_for_keccak.zir:155)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:366)
  NondetRegStruct22Array x11 = x5.arrE;
  NondetRegStruct22Array x12 = x5.arrF;
  NondetRegStruct22Array x13 = x8.arrE;
  NondetRegStruct22Array x14 = x8.arrF;
  NondetRegStruct22Array x15 = x9.arrE;
  NondetRegStruct22Array x16 = x9.arrF;
  NondetRegStruct22Array x17 = x10.arrE;
  NondetRegStruct22Array x18 = x10.arrF;
  TwoShortsStruct x19 = execComputeW(
      ctx,
      Val32Array{x11[0]._super,  x11[1]._super,  x11[2]._super,  x11[3]._super,  x11[4]._super,
                 x11[5]._super,  x11[6]._super,  x11[7]._super,  x11[8]._super,  x11[9]._super,
                 x11[10]._super, x11[11]._super, x11[12]._super, x11[13]._super, x11[14]._super,
                 x11[15]._super, x11[16]._super, x11[17]._super, x11[18]._super, x11[19]._super,
                 x11[20]._super, x11[21]._super, x12[0]._super,  x12[1]._super,  x12[2]._super,
                 x12[3]._super,  x12[4]._super,  x12[5]._super,  x12[6]._super,  x12[7]._super,
                 x12[8]._super,  x12[9]._super},
      Val32Array{x13[0]._super,  x13[1]._super,  x13[2]._super,  x13[3]._super,  x13[4]._super,
                 x13[5]._super,  x13[6]._super,  x13[7]._super,  x13[8]._super,  x13[9]._super,
                 x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x14[0]._super,  x14[1]._super,  x14[2]._super,
                 x14[3]._super,  x14[4]._super,  x14[5]._super,  x14[6]._super,  x14[7]._super,
                 x14[8]._super,  x14[9]._super},
      Val32Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x16[0]._super,  x16[1]._super,  x16[2]._super,
                 x16[3]._super,  x16[4]._super,  x16[5]._super,  x16[6]._super,  x16[7]._super,
                 x16[8]._super,  x16[9]._super},
      Val32Array{x17[0]._super,  x17[1]._super,  x17[2]._super,  x17[3]._super,  x17[4]._super,
                 x17[5]._super,  x17[6]._super,  x17[7]._super,  x17[8]._super,  x17[9]._super,
                 x17[10]._super, x17[11]._super, x17[12]._super, x17[13]._super, x17[14]._super,
                 x17[15]._super, x17[16]._super, x17[17]._super, x17[18]._super, x17[19]._super,
                 x17[20]._super, x17[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super},
      LAYOUT_LOOKUP(layout2, packedW));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16_Struct x20 =
      execUnpackWithCarry(ctx, x19.low, x19.high, LAYOUT_LOOKUP(layout2, newW));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  NondetRegStruct22Array x21 = x4.arrA;
  NondetRegStruct22Array x22 = x4.arrB;
  NondetRegStruct22Array x23 = x5.arrA;
  NondetRegStruct22Array x24 = x5.arrB;
  NondetRegStruct22Array x25 = x6.arrA;
  NondetRegStruct22Array x26 = x6.arrB;
  NondetRegStruct22Array x27 = x7.arrA;
  NondetRegStruct22Array x28 = x7.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:369)
  NondetRegStruct22Array x29 = x4.arrC;
  NondetRegStruct22Array x30 = x5.arrC;
  NondetRegStruct22Array x31 = x6.arrC;
  NondetRegStruct22Array x32 = x7.arrC;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x33 = x20._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  Val x55 = x33[21]._super;
  Val x56 = x33[22]._super;
  Val x57 = x33[23]._super;
  Val x58 = x33[24]._super;
  Val x59 = x33[25]._super;
  Val x60 = x33[26]._super;
  Val x61 = x33[27]._super;
  Val x62 = x33[28]._super;
  Val x63 = x33[29]._super;
  Val x64 = x33[30]._super;
  Val x65 = x33[31]._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  ComputeAEStruct x66 = execComputeAE(
      ctx,
      Val32Array{x21[0]._super,  x21[1]._super,  x21[2]._super,  x21[3]._super,  x21[4]._super,
                 x21[5]._super,  x21[6]._super,  x21[7]._super,  x21[8]._super,  x21[9]._super,
                 x21[10]._super, x21[11]._super, x21[12]._super, x21[13]._super, x21[14]._super,
                 x21[15]._super, x21[16]._super, x21[17]._super, x21[18]._super, x21[19]._super,
                 x21[20]._super, x21[21]._super, x22[0]._super,  x22[1]._super,  x22[2]._super,
                 x22[3]._super,  x22[4]._super,  x22[5]._super,  x22[6]._super,  x22[7]._super,
                 x22[8]._super,  x22[9]._super},
      Val32Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super, x24[0]._super,  x24[1]._super,  x24[2]._super,
                 x24[3]._super,  x24[4]._super,  x24[5]._super,  x24[6]._super,  x24[7]._super,
                 x24[8]._super,  x24[9]._super},
      Val32Array{x25[0]._super,  x25[1]._super,  x25[2]._super,  x25[3]._super,  x25[4]._super,
                 x25[5]._super,  x25[6]._super,  x25[7]._super,  x25[8]._super,  x25[9]._super,
                 x25[10]._super, x25[11]._super, x25[12]._super, x25[13]._super, x25[14]._super,
                 x25[15]._super, x25[16]._super, x25[17]._super, x25[18]._super, x25[19]._super,
                 x25[20]._super, x25[21]._super, x26[0]._super,  x26[1]._super,  x26[2]._super,
                 x26[3]._super,  x26[4]._super,  x26[5]._super,  x26[6]._super,  x26[7]._super,
                 x26[8]._super,  x26[9]._super},
      Val32Array{x27[0]._super,  x27[1]._super,  x27[2]._super,  x27[3]._super,  x27[4]._super,
                 x27[5]._super,  x27[6]._super,  x27[7]._super,  x27[8]._super,  x27[9]._super,
                 x27[10]._super, x27[11]._super, x27[12]._super, x27[13]._super, x27[14]._super,
                 x27[15]._super, x27[16]._super, x27[17]._super, x27[18]._super, x27[19]._super,
                 x27[20]._super, x27[21]._super, x28[0]._super,  x28[1]._super,  x28[2]._super,
                 x28[3]._super,  x28[4]._super,  x28[5]._super,  x28[6]._super,  x28[7]._super,
                 x28[8]._super,  x28[9]._super},
      Val32Array{x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super, x29[0]._super,  x29[1]._super,  x29[2]._super,
                 x29[3]._super,  x29[4]._super,  x29[5]._super,  x29[6]._super,  x29[7]._super,
                 x29[8]._super,  x29[9]._super,  x29[10]._super, x29[11]._super, x29[12]._super,
                 x29[13]._super, x29[14]._super, x29[15]._super, x29[16]._super, x29[17]._super,
                 x29[18]._super, x29[19]._super},
      Val32Array{x24[10]._super, x24[11]._super, x24[12]._super, x24[13]._super, x24[14]._super,
                 x24[15]._super, x24[16]._super, x24[17]._super, x24[18]._super, x24[19]._super,
                 x24[20]._super, x24[21]._super, x30[0]._super,  x30[1]._super,  x30[2]._super,
                 x30[3]._super,  x30[4]._super,  x30[5]._super,  x30[6]._super,  x30[7]._super,
                 x30[8]._super,  x30[9]._super,  x30[10]._super, x30[11]._super, x30[12]._super,
                 x30[13]._super, x30[14]._super, x30[15]._super, x30[16]._super, x30[17]._super,
                 x30[18]._super, x30[19]._super},
      Val32Array{x26[10]._super, x26[11]._super, x26[12]._super, x26[13]._super, x26[14]._super,
                 x26[15]._super, x26[16]._super, x26[17]._super, x26[18]._super, x26[19]._super,
                 x26[20]._super, x26[21]._super, x31[0]._super,  x31[1]._super,  x31[2]._super,
                 x31[3]._super,  x31[4]._super,  x31[5]._super,  x31[6]._super,  x31[7]._super,
                 x31[8]._super,  x31[9]._super,  x31[10]._super, x31[11]._super, x31[12]._super,
                 x31[13]._super, x31[14]._super, x31[15]._super, x31[16]._super, x31[17]._super,
                 x31[18]._super, x31[19]._super},
      Val32Array{x28[10]._super, x28[11]._super, x28[12]._super, x28[13]._super, x28[14]._super,
                 x28[15]._super, x28[16]._super, x28[17]._super, x28[18]._super, x28[19]._super,
                 x28[20]._super, x28[21]._super, x32[0]._super,  x32[1]._super,  x32[2]._super,
                 x32[3]._super,  x32[4]._super,  x32[5]._super,  x32[6]._super,  x32[7]._super,
                 x32[8]._super,  x32[9]._super,  x32[10]._super, x32[11]._super, x32[12]._super,
                 x32[13]._super, x32[14]._super, x32[15]._super, x32[16]._super, x32[17]._super,
                 x32[18]._super, x32[19]._super},
      Val32Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49,
                 x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65},
      TwoShortsStruct{.low = Val(3059), .high = Val(50912)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x67 = x66.aOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16_Struct x68 =
      execUnpackWithCarry(ctx, x67.low, x67.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  TwoShortsStruct x69 = x66.eOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16_Struct x70 =
      execUnpackWithCarry(ctx, x69.low, x69.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x71 = x68._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x72 = x70._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_0__12_Arm1_Super_SuperLayout> x73 = LAYOUT_LOOKUP(x3, arm1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:373)
  Val22Array x74 =
      Val22Array{x71[0]._super,  x71[1]._super,  x71[2]._super,  x71[3]._super,  x71[4]._super,
                 x71[5]._super,  x71[6]._super,  x71[7]._super,  x71[8]._super,  x71[9]._super,
                 x71[10]._super, x71[11]._super, x71[12]._super, x71[13]._super, x71[14]._super,
                 x71[15]._super, x71[16]._super, x71[17]._super, x71[18]._super, x71[19]._super,
                 x71[20]._super, x71[21]._super};
  Val22Array x75 =
      Val22Array{x71[22]._super, x71[23]._super, x71[24]._super, x71[25]._super, x71[26]._super,
                 x71[27]._super, x71[28]._super, x71[29]._super, x71[30]._super, x71[31]._super,
                 x72[0]._super,  x72[1]._super,  x72[2]._super,  x72[3]._super,  x72[4]._super,
                 x72[5]._super,  x72[6]._super,  x72[7]._super,  x72[8]._super,  x72[9]._super,
                 x72[10]._super, x72[11]._super};
  Val22Array x76 =
      Val22Array{x72[12]._super, x72[13]._super, x72[14]._super, x72[15]._super, x72[16]._super,
                 x72[17]._super, x72[18]._super, x72[19]._super, x72[20]._super, x72[21]._super,
                 x72[22]._super, x72[23]._super, x72[24]._super, x72[25]._super, x72[26]._super,
                 x72[27]._super, x72[28]._super, x72[29]._super, x72[30]._super, x72[31]._super,
                 Val(0),         Val(0)};
  Val22Array x77 = Val22Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,
                              x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55};
  Val22Array x78 = Val22Array{x56,    x57,    x58,    x59,    x60,    x61,    x62,    x63,
                              x64,    x65,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  Val x79 = x4.blk._super;
  Val x80 = x4.midx._super;
  if (to_size_t(Val(1))) {
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:376)
    RetTupleStruct x81 =
        exec_RetTuple(ctx,
                      x74,
                      x75,
                      x76,
                      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                      x77,
                      x78,
                      Val(13),
                      Val(20),
                      Val(0),
                      x79,
                      x80,
                      LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  NondetRegStruct24Array x82 = x4.arrD;
  Val24Array x83 =
      Val24Array{x82[0]._super,  x82[1]._super,  x82[2]._super,  x82[3]._super,  x82[4]._super,
                 x82[5]._super,  x82[6]._super,  x82[7]._super,  x82[8]._super,  x82[9]._super,
                 x82[10]._super, x82[11]._super, x82[12]._super, x82[13]._super, x82[14]._super,
                 x82[15]._super, x82[16]._super, x82[17]._super, x82[18]._super, x82[19]._super,
                 x82[20]._super, x82[21]._super, x82[22]._super, x82[23]._super};
  Val x84 = x4.rnd._super;
  if (to_size_t(Val(0))) {
    if (to_size_t(Val(1))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:380)
      RetTupleStruct x85 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(0),
                                         Val(21),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm0));
    }
    if (to_size_t(Val(0))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:383)
      RetTupleStruct x86 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(9),
                                         Val(17),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm1));
    }
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:379)
    RetTupleStruct x87 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x73, _super));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  RetTupleStruct x88 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x88;
}
RetTupleStruct execSha256mix_0__13_(ExecContext& ctx,
                                    RetTupleStruct arg0,
                                    BoundLayout<RetTupleLayout> arg1,
                                    BoundLayout<Sha256mix_0__13_Layout> layout2) {
  BoundLayout<Sha256mix_0__13__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:359)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:360)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:361)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:362)
  RetTupleStruct x8 = back_RetTuple(ctx, 7, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:363)
  RetTupleStruct x9 = back_RetTuple(ctx, 15, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:364)
  RetTupleStruct x10 = back_RetTuple(ctx, 16, arg1);
  // s2w(zirgen/circuit/keccak/sha256_for_keccak.zir:155)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:366)
  NondetRegStruct22Array x11 = x5.arrE;
  NondetRegStruct22Array x12 = x5.arrF;
  NondetRegStruct22Array x13 = x8.arrE;
  NondetRegStruct22Array x14 = x8.arrF;
  NondetRegStruct22Array x15 = x9.arrE;
  NondetRegStruct22Array x16 = x9.arrF;
  NondetRegStruct22Array x17 = x10.arrE;
  NondetRegStruct22Array x18 = x10.arrF;
  TwoShortsStruct x19 = execComputeW(
      ctx,
      Val32Array{x11[0]._super,  x11[1]._super,  x11[2]._super,  x11[3]._super,  x11[4]._super,
                 x11[5]._super,  x11[6]._super,  x11[7]._super,  x11[8]._super,  x11[9]._super,
                 x11[10]._super, x11[11]._super, x11[12]._super, x11[13]._super, x11[14]._super,
                 x11[15]._super, x11[16]._super, x11[17]._super, x11[18]._super, x11[19]._super,
                 x11[20]._super, x11[21]._super, x12[0]._super,  x12[1]._super,  x12[2]._super,
                 x12[3]._super,  x12[4]._super,  x12[5]._super,  x12[6]._super,  x12[7]._super,
                 x12[8]._super,  x12[9]._super},
      Val32Array{x13[0]._super,  x13[1]._super,  x13[2]._super,  x13[3]._super,  x13[4]._super,
                 x13[5]._super,  x13[6]._super,  x13[7]._super,  x13[8]._super,  x13[9]._super,
                 x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x14[0]._super,  x14[1]._super,  x14[2]._super,
                 x14[3]._super,  x14[4]._super,  x14[5]._super,  x14[6]._super,  x14[7]._super,
                 x14[8]._super,  x14[9]._super},
      Val32Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x16[0]._super,  x16[1]._super,  x16[2]._super,
                 x16[3]._super,  x16[4]._super,  x16[5]._super,  x16[6]._super,  x16[7]._super,
                 x16[8]._super,  x16[9]._super},
      Val32Array{x17[0]._super,  x17[1]._super,  x17[2]._super,  x17[3]._super,  x17[4]._super,
                 x17[5]._super,  x17[6]._super,  x17[7]._super,  x17[8]._super,  x17[9]._super,
                 x17[10]._super, x17[11]._super, x17[12]._super, x17[13]._super, x17[14]._super,
                 x17[15]._super, x17[16]._super, x17[17]._super, x17[18]._super, x17[19]._super,
                 x17[20]._super, x17[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super},
      LAYOUT_LOOKUP(layout2, packedW));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16_Struct x20 =
      execUnpackWithCarry(ctx, x19.low, x19.high, LAYOUT_LOOKUP(layout2, newW));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  NondetRegStruct22Array x21 = x4.arrA;
  NondetRegStruct22Array x22 = x4.arrB;
  NondetRegStruct22Array x23 = x5.arrA;
  NondetRegStruct22Array x24 = x5.arrB;
  NondetRegStruct22Array x25 = x6.arrA;
  NondetRegStruct22Array x26 = x6.arrB;
  NondetRegStruct22Array x27 = x7.arrA;
  NondetRegStruct22Array x28 = x7.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:369)
  NondetRegStruct22Array x29 = x4.arrC;
  NondetRegStruct22Array x30 = x5.arrC;
  NondetRegStruct22Array x31 = x6.arrC;
  NondetRegStruct22Array x32 = x7.arrC;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x33 = x20._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  Val x55 = x33[21]._super;
  Val x56 = x33[22]._super;
  Val x57 = x33[23]._super;
  Val x58 = x33[24]._super;
  Val x59 = x33[25]._super;
  Val x60 = x33[26]._super;
  Val x61 = x33[27]._super;
  Val x62 = x33[28]._super;
  Val x63 = x33[29]._super;
  Val x64 = x33[30]._super;
  Val x65 = x33[31]._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  ComputeAEStruct x66 = execComputeAE(
      ctx,
      Val32Array{x21[0]._super,  x21[1]._super,  x21[2]._super,  x21[3]._super,  x21[4]._super,
                 x21[5]._super,  x21[6]._super,  x21[7]._super,  x21[8]._super,  x21[9]._super,
                 x21[10]._super, x21[11]._super, x21[12]._super, x21[13]._super, x21[14]._super,
                 x21[15]._super, x21[16]._super, x21[17]._super, x21[18]._super, x21[19]._super,
                 x21[20]._super, x21[21]._super, x22[0]._super,  x22[1]._super,  x22[2]._super,
                 x22[3]._super,  x22[4]._super,  x22[5]._super,  x22[6]._super,  x22[7]._super,
                 x22[8]._super,  x22[9]._super},
      Val32Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super, x24[0]._super,  x24[1]._super,  x24[2]._super,
                 x24[3]._super,  x24[4]._super,  x24[5]._super,  x24[6]._super,  x24[7]._super,
                 x24[8]._super,  x24[9]._super},
      Val32Array{x25[0]._super,  x25[1]._super,  x25[2]._super,  x25[3]._super,  x25[4]._super,
                 x25[5]._super,  x25[6]._super,  x25[7]._super,  x25[8]._super,  x25[9]._super,
                 x25[10]._super, x25[11]._super, x25[12]._super, x25[13]._super, x25[14]._super,
                 x25[15]._super, x25[16]._super, x25[17]._super, x25[18]._super, x25[19]._super,
                 x25[20]._super, x25[21]._super, x26[0]._super,  x26[1]._super,  x26[2]._super,
                 x26[3]._super,  x26[4]._super,  x26[5]._super,  x26[6]._super,  x26[7]._super,
                 x26[8]._super,  x26[9]._super},
      Val32Array{x27[0]._super,  x27[1]._super,  x27[2]._super,  x27[3]._super,  x27[4]._super,
                 x27[5]._super,  x27[6]._super,  x27[7]._super,  x27[8]._super,  x27[9]._super,
                 x27[10]._super, x27[11]._super, x27[12]._super, x27[13]._super, x27[14]._super,
                 x27[15]._super, x27[16]._super, x27[17]._super, x27[18]._super, x27[19]._super,
                 x27[20]._super, x27[21]._super, x28[0]._super,  x28[1]._super,  x28[2]._super,
                 x28[3]._super,  x28[4]._super,  x28[5]._super,  x28[6]._super,  x28[7]._super,
                 x28[8]._super,  x28[9]._super},
      Val32Array{x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super, x29[0]._super,  x29[1]._super,  x29[2]._super,
                 x29[3]._super,  x29[4]._super,  x29[5]._super,  x29[6]._super,  x29[7]._super,
                 x29[8]._super,  x29[9]._super,  x29[10]._super, x29[11]._super, x29[12]._super,
                 x29[13]._super, x29[14]._super, x29[15]._super, x29[16]._super, x29[17]._super,
                 x29[18]._super, x29[19]._super},
      Val32Array{x24[10]._super, x24[11]._super, x24[12]._super, x24[13]._super, x24[14]._super,
                 x24[15]._super, x24[16]._super, x24[17]._super, x24[18]._super, x24[19]._super,
                 x24[20]._super, x24[21]._super, x30[0]._super,  x30[1]._super,  x30[2]._super,
                 x30[3]._super,  x30[4]._super,  x30[5]._super,  x30[6]._super,  x30[7]._super,
                 x30[8]._super,  x30[9]._super,  x30[10]._super, x30[11]._super, x30[12]._super,
                 x30[13]._super, x30[14]._super, x30[15]._super, x30[16]._super, x30[17]._super,
                 x30[18]._super, x30[19]._super},
      Val32Array{x26[10]._super, x26[11]._super, x26[12]._super, x26[13]._super, x26[14]._super,
                 x26[15]._super, x26[16]._super, x26[17]._super, x26[18]._super, x26[19]._super,
                 x26[20]._super, x26[21]._super, x31[0]._super,  x31[1]._super,  x31[2]._super,
                 x31[3]._super,  x31[4]._super,  x31[5]._super,  x31[6]._super,  x31[7]._super,
                 x31[8]._super,  x31[9]._super,  x31[10]._super, x31[11]._super, x31[12]._super,
                 x31[13]._super, x31[14]._super, x31[15]._super, x31[16]._super, x31[17]._super,
                 x31[18]._super, x31[19]._super},
      Val32Array{x28[10]._super, x28[11]._super, x28[12]._super, x28[13]._super, x28[14]._super,
                 x28[15]._super, x28[16]._super, x28[17]._super, x28[18]._super, x28[19]._super,
                 x28[20]._super, x28[21]._super, x32[0]._super,  x32[1]._super,  x32[2]._super,
                 x32[3]._super,  x32[4]._super,  x32[5]._super,  x32[6]._super,  x32[7]._super,
                 x32[8]._super,  x32[9]._super,  x32[10]._super, x32[11]._super, x32[12]._super,
                 x32[13]._super, x32[14]._super, x32[15]._super, x32[16]._super, x32[17]._super,
                 x32[18]._super, x32[19]._super},
      Val32Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49,
                 x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65},
      TwoShortsStruct{.low = Val(37191), .high = Val(54695)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x67 = x66.aOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16_Struct x68 =
      execUnpackWithCarry(ctx, x67.low, x67.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  TwoShortsStruct x69 = x66.eOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16_Struct x70 =
      execUnpackWithCarry(ctx, x69.low, x69.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x71 = x68._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x72 = x70._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_0__13_Arm1_Super_SuperLayout> x73 = LAYOUT_LOOKUP(x3, arm1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:373)
  Val22Array x74 =
      Val22Array{x71[0]._super,  x71[1]._super,  x71[2]._super,  x71[3]._super,  x71[4]._super,
                 x71[5]._super,  x71[6]._super,  x71[7]._super,  x71[8]._super,  x71[9]._super,
                 x71[10]._super, x71[11]._super, x71[12]._super, x71[13]._super, x71[14]._super,
                 x71[15]._super, x71[16]._super, x71[17]._super, x71[18]._super, x71[19]._super,
                 x71[20]._super, x71[21]._super};
  Val22Array x75 =
      Val22Array{x71[22]._super, x71[23]._super, x71[24]._super, x71[25]._super, x71[26]._super,
                 x71[27]._super, x71[28]._super, x71[29]._super, x71[30]._super, x71[31]._super,
                 x72[0]._super,  x72[1]._super,  x72[2]._super,  x72[3]._super,  x72[4]._super,
                 x72[5]._super,  x72[6]._super,  x72[7]._super,  x72[8]._super,  x72[9]._super,
                 x72[10]._super, x72[11]._super};
  Val22Array x76 =
      Val22Array{x72[12]._super, x72[13]._super, x72[14]._super, x72[15]._super, x72[16]._super,
                 x72[17]._super, x72[18]._super, x72[19]._super, x72[20]._super, x72[21]._super,
                 x72[22]._super, x72[23]._super, x72[24]._super, x72[25]._super, x72[26]._super,
                 x72[27]._super, x72[28]._super, x72[29]._super, x72[30]._super, x72[31]._super,
                 Val(0),         Val(0)};
  Val22Array x77 = Val22Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,
                              x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55};
  Val22Array x78 = Val22Array{x56,    x57,    x58,    x59,    x60,    x61,    x62,    x63,
                              x64,    x65,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  Val x79 = x4.blk._super;
  Val x80 = x4.midx._super;
  if (to_size_t(Val(1))) {
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:376)
    RetTupleStruct x81 =
        exec_RetTuple(ctx,
                      x74,
                      x75,
                      x76,
                      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                      x77,
                      x78,
                      Val(14),
                      Val(20),
                      Val(0),
                      x79,
                      x80,
                      LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  NondetRegStruct24Array x82 = x4.arrD;
  Val24Array x83 =
      Val24Array{x82[0]._super,  x82[1]._super,  x82[2]._super,  x82[3]._super,  x82[4]._super,
                 x82[5]._super,  x82[6]._super,  x82[7]._super,  x82[8]._super,  x82[9]._super,
                 x82[10]._super, x82[11]._super, x82[12]._super, x82[13]._super, x82[14]._super,
                 x82[15]._super, x82[16]._super, x82[17]._super, x82[18]._super, x82[19]._super,
                 x82[20]._super, x82[21]._super, x82[22]._super, x82[23]._super};
  Val x84 = x4.rnd._super;
  if (to_size_t(Val(0))) {
    if (to_size_t(Val(1))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:380)
      RetTupleStruct x85 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(0),
                                         Val(21),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm0));
    }
    if (to_size_t(Val(0))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:383)
      RetTupleStruct x86 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(9),
                                         Val(17),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm1));
    }
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:379)
    RetTupleStruct x87 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x73, _super));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  RetTupleStruct x88 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x88;
}
RetTupleStruct execSha256mix_0__14_(ExecContext& ctx,
                                    RetTupleStruct arg0,
                                    BoundLayout<RetTupleLayout> arg1,
                                    BoundLayout<Sha256mix_0__14_Layout> layout2) {
  BoundLayout<Sha256mix_0__14__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:359)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:360)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:361)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:362)
  RetTupleStruct x8 = back_RetTuple(ctx, 7, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:363)
  RetTupleStruct x9 = back_RetTuple(ctx, 15, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:364)
  RetTupleStruct x10 = back_RetTuple(ctx, 16, arg1);
  // s2w(zirgen/circuit/keccak/sha256_for_keccak.zir:155)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:366)
  NondetRegStruct22Array x11 = x5.arrE;
  NondetRegStruct22Array x12 = x5.arrF;
  NondetRegStruct22Array x13 = x8.arrE;
  NondetRegStruct22Array x14 = x8.arrF;
  NondetRegStruct22Array x15 = x9.arrE;
  NondetRegStruct22Array x16 = x9.arrF;
  NondetRegStruct22Array x17 = x10.arrE;
  NondetRegStruct22Array x18 = x10.arrF;
  TwoShortsStruct x19 = execComputeW(
      ctx,
      Val32Array{x11[0]._super,  x11[1]._super,  x11[2]._super,  x11[3]._super,  x11[4]._super,
                 x11[5]._super,  x11[6]._super,  x11[7]._super,  x11[8]._super,  x11[9]._super,
                 x11[10]._super, x11[11]._super, x11[12]._super, x11[13]._super, x11[14]._super,
                 x11[15]._super, x11[16]._super, x11[17]._super, x11[18]._super, x11[19]._super,
                 x11[20]._super, x11[21]._super, x12[0]._super,  x12[1]._super,  x12[2]._super,
                 x12[3]._super,  x12[4]._super,  x12[5]._super,  x12[6]._super,  x12[7]._super,
                 x12[8]._super,  x12[9]._super},
      Val32Array{x13[0]._super,  x13[1]._super,  x13[2]._super,  x13[3]._super,  x13[4]._super,
                 x13[5]._super,  x13[6]._super,  x13[7]._super,  x13[8]._super,  x13[9]._super,
                 x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x14[0]._super,  x14[1]._super,  x14[2]._super,
                 x14[3]._super,  x14[4]._super,  x14[5]._super,  x14[6]._super,  x14[7]._super,
                 x14[8]._super,  x14[9]._super},
      Val32Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x16[0]._super,  x16[1]._super,  x16[2]._super,
                 x16[3]._super,  x16[4]._super,  x16[5]._super,  x16[6]._super,  x16[7]._super,
                 x16[8]._super,  x16[9]._super},
      Val32Array{x17[0]._super,  x17[1]._super,  x17[2]._super,  x17[3]._super,  x17[4]._super,
                 x17[5]._super,  x17[6]._super,  x17[7]._super,  x17[8]._super,  x17[9]._super,
                 x17[10]._super, x17[11]._super, x17[12]._super, x17[13]._super, x17[14]._super,
                 x17[15]._super, x17[16]._super, x17[17]._super, x17[18]._super, x17[19]._super,
                 x17[20]._super, x17[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super},
      LAYOUT_LOOKUP(layout2, packedW));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16_Struct x20 =
      execUnpackWithCarry(ctx, x19.low, x19.high, LAYOUT_LOOKUP(layout2, newW));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  NondetRegStruct22Array x21 = x4.arrA;
  NondetRegStruct22Array x22 = x4.arrB;
  NondetRegStruct22Array x23 = x5.arrA;
  NondetRegStruct22Array x24 = x5.arrB;
  NondetRegStruct22Array x25 = x6.arrA;
  NondetRegStruct22Array x26 = x6.arrB;
  NondetRegStruct22Array x27 = x7.arrA;
  NondetRegStruct22Array x28 = x7.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:369)
  NondetRegStruct22Array x29 = x4.arrC;
  NondetRegStruct22Array x30 = x5.arrC;
  NondetRegStruct22Array x31 = x6.arrC;
  NondetRegStruct22Array x32 = x7.arrC;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x33 = x20._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  Val x55 = x33[21]._super;
  Val x56 = x33[22]._super;
  Val x57 = x33[23]._super;
  Val x58 = x33[24]._super;
  Val x59 = x33[25]._super;
  Val x60 = x33[26]._super;
  Val x61 = x33[27]._super;
  Val x62 = x33[28]._super;
  Val x63 = x33[29]._super;
  Val x64 = x33[30]._super;
  Val x65 = x33[31]._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  ComputeAEStruct x66 = execComputeAE(
      ctx,
      Val32Array{x21[0]._super,  x21[1]._super,  x21[2]._super,  x21[3]._super,  x21[4]._super,
                 x21[5]._super,  x21[6]._super,  x21[7]._super,  x21[8]._super,  x21[9]._super,
                 x21[10]._super, x21[11]._super, x21[12]._super, x21[13]._super, x21[14]._super,
                 x21[15]._super, x21[16]._super, x21[17]._super, x21[18]._super, x21[19]._super,
                 x21[20]._super, x21[21]._super, x22[0]._super,  x22[1]._super,  x22[2]._super,
                 x22[3]._super,  x22[4]._super,  x22[5]._super,  x22[6]._super,  x22[7]._super,
                 x22[8]._super,  x22[9]._super},
      Val32Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super, x24[0]._super,  x24[1]._super,  x24[2]._super,
                 x24[3]._super,  x24[4]._super,  x24[5]._super,  x24[6]._super,  x24[7]._super,
                 x24[8]._super,  x24[9]._super},
      Val32Array{x25[0]._super,  x25[1]._super,  x25[2]._super,  x25[3]._super,  x25[4]._super,
                 x25[5]._super,  x25[6]._super,  x25[7]._super,  x25[8]._super,  x25[9]._super,
                 x25[10]._super, x25[11]._super, x25[12]._super, x25[13]._super, x25[14]._super,
                 x25[15]._super, x25[16]._super, x25[17]._super, x25[18]._super, x25[19]._super,
                 x25[20]._super, x25[21]._super, x26[0]._super,  x26[1]._super,  x26[2]._super,
                 x26[3]._super,  x26[4]._super,  x26[5]._super,  x26[6]._super,  x26[7]._super,
                 x26[8]._super,  x26[9]._super},
      Val32Array{x27[0]._super,  x27[1]._super,  x27[2]._super,  x27[3]._super,  x27[4]._super,
                 x27[5]._super,  x27[6]._super,  x27[7]._super,  x27[8]._super,  x27[9]._super,
                 x27[10]._super, x27[11]._super, x27[12]._super, x27[13]._super, x27[14]._super,
                 x27[15]._super, x27[16]._super, x27[17]._super, x27[18]._super, x27[19]._super,
                 x27[20]._super, x27[21]._super, x28[0]._super,  x28[1]._super,  x28[2]._super,
                 x28[3]._super,  x28[4]._super,  x28[5]._super,  x28[6]._super,  x28[7]._super,
                 x28[8]._super,  x28[9]._super},
      Val32Array{x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super, x29[0]._super,  x29[1]._super,  x29[2]._super,
                 x29[3]._super,  x29[4]._super,  x29[5]._super,  x29[6]._super,  x29[7]._super,
                 x29[8]._super,  x29[9]._super,  x29[10]._super, x29[11]._super, x29[12]._super,
                 x29[13]._super, x29[14]._super, x29[15]._super, x29[16]._super, x29[17]._super,
                 x29[18]._super, x29[19]._super},
      Val32Array{x24[10]._super, x24[11]._super, x24[12]._super, x24[13]._super, x24[14]._super,
                 x24[15]._super, x24[16]._super, x24[17]._super, x24[18]._super, x24[19]._super,
                 x24[20]._super, x24[21]._super, x30[0]._super,  x30[1]._super,  x30[2]._super,
                 x30[3]._super,  x30[4]._super,  x30[5]._super,  x30[6]._super,  x30[7]._super,
                 x30[8]._super,  x30[9]._super,  x30[10]._super, x30[11]._super, x30[12]._super,
                 x30[13]._super, x30[14]._super, x30[15]._super, x30[16]._super, x30[17]._super,
                 x30[18]._super, x30[19]._super},
      Val32Array{x26[10]._super, x26[11]._super, x26[12]._super, x26[13]._super, x26[14]._super,
                 x26[15]._super, x26[16]._super, x26[17]._super, x26[18]._super, x26[19]._super,
                 x26[20]._super, x26[21]._super, x31[0]._super,  x31[1]._super,  x31[2]._super,
                 x31[3]._super,  x31[4]._super,  x31[5]._super,  x31[6]._super,  x31[7]._super,
                 x31[8]._super,  x31[9]._super,  x31[10]._super, x31[11]._super, x31[12]._super,
                 x31[13]._super, x31[14]._super, x31[15]._super, x31[16]._super, x31[17]._super,
                 x31[18]._super, x31[19]._super},
      Val32Array{x28[10]._super, x28[11]._super, x28[12]._super, x28[13]._super, x28[14]._super,
                 x28[15]._super, x28[16]._super, x28[17]._super, x28[18]._super, x28[19]._super,
                 x28[20]._super, x28[21]._super, x32[0]._super,  x32[1]._super,  x32[2]._super,
                 x32[3]._super,  x32[4]._super,  x32[5]._super,  x32[6]._super,  x32[7]._super,
                 x32[8]._super,  x32[9]._super,  x32[10]._super, x32[11]._super, x32[12]._super,
                 x32[13]._super, x32[14]._super, x32[15]._super, x32[16]._super, x32[17]._super,
                 x32[18]._super, x32[19]._super},
      Val32Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49,
                 x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65},
      TwoShortsStruct{.low = Val(25425), .high = Val(1738)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x67 = x66.aOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16_Struct x68 =
      execUnpackWithCarry(ctx, x67.low, x67.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  TwoShortsStruct x69 = x66.eOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16_Struct x70 =
      execUnpackWithCarry(ctx, x69.low, x69.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x71 = x68._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x72 = x70._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_0__14_Arm1_Super_SuperLayout> x73 = LAYOUT_LOOKUP(x3, arm1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:373)
  Val22Array x74 =
      Val22Array{x71[0]._super,  x71[1]._super,  x71[2]._super,  x71[3]._super,  x71[4]._super,
                 x71[5]._super,  x71[6]._super,  x71[7]._super,  x71[8]._super,  x71[9]._super,
                 x71[10]._super, x71[11]._super, x71[12]._super, x71[13]._super, x71[14]._super,
                 x71[15]._super, x71[16]._super, x71[17]._super, x71[18]._super, x71[19]._super,
                 x71[20]._super, x71[21]._super};
  Val22Array x75 =
      Val22Array{x71[22]._super, x71[23]._super, x71[24]._super, x71[25]._super, x71[26]._super,
                 x71[27]._super, x71[28]._super, x71[29]._super, x71[30]._super, x71[31]._super,
                 x72[0]._super,  x72[1]._super,  x72[2]._super,  x72[3]._super,  x72[4]._super,
                 x72[5]._super,  x72[6]._super,  x72[7]._super,  x72[8]._super,  x72[9]._super,
                 x72[10]._super, x72[11]._super};
  Val22Array x76 =
      Val22Array{x72[12]._super, x72[13]._super, x72[14]._super, x72[15]._super, x72[16]._super,
                 x72[17]._super, x72[18]._super, x72[19]._super, x72[20]._super, x72[21]._super,
                 x72[22]._super, x72[23]._super, x72[24]._super, x72[25]._super, x72[26]._super,
                 x72[27]._super, x72[28]._super, x72[29]._super, x72[30]._super, x72[31]._super,
                 Val(0),         Val(0)};
  Val22Array x77 = Val22Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,
                              x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55};
  Val22Array x78 = Val22Array{x56,    x57,    x58,    x59,    x60,    x61,    x62,    x63,
                              x64,    x65,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  Val x79 = x4.blk._super;
  Val x80 = x4.midx._super;
  if (to_size_t(Val(1))) {
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:376)
    RetTupleStruct x81 =
        exec_RetTuple(ctx,
                      x74,
                      x75,
                      x76,
                      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                      x77,
                      x78,
                      Val(15),
                      Val(20),
                      Val(0),
                      x79,
                      x80,
                      LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  NondetRegStruct24Array x82 = x4.arrD;
  Val24Array x83 =
      Val24Array{x82[0]._super,  x82[1]._super,  x82[2]._super,  x82[3]._super,  x82[4]._super,
                 x82[5]._super,  x82[6]._super,  x82[7]._super,  x82[8]._super,  x82[9]._super,
                 x82[10]._super, x82[11]._super, x82[12]._super, x82[13]._super, x82[14]._super,
                 x82[15]._super, x82[16]._super, x82[17]._super, x82[18]._super, x82[19]._super,
                 x82[20]._super, x82[21]._super, x82[22]._super, x82[23]._super};
  Val x84 = x4.rnd._super;
  if (to_size_t(Val(0))) {
    if (to_size_t(Val(1))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:380)
      RetTupleStruct x85 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(0),
                                         Val(21),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm0));
    }
    if (to_size_t(Val(0))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:383)
      RetTupleStruct x86 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(9),
                                         Val(17),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm1));
    }
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:379)
    RetTupleStruct x87 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x73, _super));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  RetTupleStruct x88 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x88;
}
RetTupleStruct execSha256mix_0__15_(ExecContext& ctx,
                                    RetTupleStruct arg0,
                                    BoundLayout<RetTupleLayout> arg1,
                                    BoundLayout<Sha256mix_0__15_Layout> layout2) {
  BoundLayout<Sha256mix_0__15__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:359)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:360)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:361)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:362)
  RetTupleStruct x8 = back_RetTuple(ctx, 7, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:363)
  RetTupleStruct x9 = back_RetTuple(ctx, 15, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:364)
  RetTupleStruct x10 = back_RetTuple(ctx, 16, arg1);
  // s2w(zirgen/circuit/keccak/sha256_for_keccak.zir:155)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:366)
  NondetRegStruct22Array x11 = x5.arrE;
  NondetRegStruct22Array x12 = x5.arrF;
  NondetRegStruct22Array x13 = x8.arrE;
  NondetRegStruct22Array x14 = x8.arrF;
  NondetRegStruct22Array x15 = x9.arrE;
  NondetRegStruct22Array x16 = x9.arrF;
  NondetRegStruct22Array x17 = x10.arrE;
  NondetRegStruct22Array x18 = x10.arrF;
  TwoShortsStruct x19 = execComputeW(
      ctx,
      Val32Array{x11[0]._super,  x11[1]._super,  x11[2]._super,  x11[3]._super,  x11[4]._super,
                 x11[5]._super,  x11[6]._super,  x11[7]._super,  x11[8]._super,  x11[9]._super,
                 x11[10]._super, x11[11]._super, x11[12]._super, x11[13]._super, x11[14]._super,
                 x11[15]._super, x11[16]._super, x11[17]._super, x11[18]._super, x11[19]._super,
                 x11[20]._super, x11[21]._super, x12[0]._super,  x12[1]._super,  x12[2]._super,
                 x12[3]._super,  x12[4]._super,  x12[5]._super,  x12[6]._super,  x12[7]._super,
                 x12[8]._super,  x12[9]._super},
      Val32Array{x13[0]._super,  x13[1]._super,  x13[2]._super,  x13[3]._super,  x13[4]._super,
                 x13[5]._super,  x13[6]._super,  x13[7]._super,  x13[8]._super,  x13[9]._super,
                 x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x14[0]._super,  x14[1]._super,  x14[2]._super,
                 x14[3]._super,  x14[4]._super,  x14[5]._super,  x14[6]._super,  x14[7]._super,
                 x14[8]._super,  x14[9]._super},
      Val32Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x16[0]._super,  x16[1]._super,  x16[2]._super,
                 x16[3]._super,  x16[4]._super,  x16[5]._super,  x16[6]._super,  x16[7]._super,
                 x16[8]._super,  x16[9]._super},
      Val32Array{x17[0]._super,  x17[1]._super,  x17[2]._super,  x17[3]._super,  x17[4]._super,
                 x17[5]._super,  x17[6]._super,  x17[7]._super,  x17[8]._super,  x17[9]._super,
                 x17[10]._super, x17[11]._super, x17[12]._super, x17[13]._super, x17[14]._super,
                 x17[15]._super, x17[16]._super, x17[17]._super, x17[18]._super, x17[19]._super,
                 x17[20]._super, x17[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super},
      LAYOUT_LOOKUP(layout2, packedW));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16_Struct x20 =
      execUnpackWithCarry(ctx, x19.low, x19.high, LAYOUT_LOOKUP(layout2, newW));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  NondetRegStruct22Array x21 = x4.arrA;
  NondetRegStruct22Array x22 = x4.arrB;
  NondetRegStruct22Array x23 = x5.arrA;
  NondetRegStruct22Array x24 = x5.arrB;
  NondetRegStruct22Array x25 = x6.arrA;
  NondetRegStruct22Array x26 = x6.arrB;
  NondetRegStruct22Array x27 = x7.arrA;
  NondetRegStruct22Array x28 = x7.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:369)
  NondetRegStruct22Array x29 = x4.arrC;
  NondetRegStruct22Array x30 = x5.arrC;
  NondetRegStruct22Array x31 = x6.arrC;
  NondetRegStruct22Array x32 = x7.arrC;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x33 = x20._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  Val x55 = x33[21]._super;
  Val x56 = x33[22]._super;
  Val x57 = x33[23]._super;
  Val x58 = x33[24]._super;
  Val x59 = x33[25]._super;
  Val x60 = x33[26]._super;
  Val x61 = x33[27]._super;
  Val x62 = x33[28]._super;
  Val x63 = x33[29]._super;
  Val x64 = x33[30]._super;
  Val x65 = x33[31]._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  ComputeAEStruct x66 = execComputeAE(
      ctx,
      Val32Array{x21[0]._super,  x21[1]._super,  x21[2]._super,  x21[3]._super,  x21[4]._super,
                 x21[5]._super,  x21[6]._super,  x21[7]._super,  x21[8]._super,  x21[9]._super,
                 x21[10]._super, x21[11]._super, x21[12]._super, x21[13]._super, x21[14]._super,
                 x21[15]._super, x21[16]._super, x21[17]._super, x21[18]._super, x21[19]._super,
                 x21[20]._super, x21[21]._super, x22[0]._super,  x22[1]._super,  x22[2]._super,
                 x22[3]._super,  x22[4]._super,  x22[5]._super,  x22[6]._super,  x22[7]._super,
                 x22[8]._super,  x22[9]._super},
      Val32Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super, x24[0]._super,  x24[1]._super,  x24[2]._super,
                 x24[3]._super,  x24[4]._super,  x24[5]._super,  x24[6]._super,  x24[7]._super,
                 x24[8]._super,  x24[9]._super},
      Val32Array{x25[0]._super,  x25[1]._super,  x25[2]._super,  x25[3]._super,  x25[4]._super,
                 x25[5]._super,  x25[6]._super,  x25[7]._super,  x25[8]._super,  x25[9]._super,
                 x25[10]._super, x25[11]._super, x25[12]._super, x25[13]._super, x25[14]._super,
                 x25[15]._super, x25[16]._super, x25[17]._super, x25[18]._super, x25[19]._super,
                 x25[20]._super, x25[21]._super, x26[0]._super,  x26[1]._super,  x26[2]._super,
                 x26[3]._super,  x26[4]._super,  x26[5]._super,  x26[6]._super,  x26[7]._super,
                 x26[8]._super,  x26[9]._super},
      Val32Array{x27[0]._super,  x27[1]._super,  x27[2]._super,  x27[3]._super,  x27[4]._super,
                 x27[5]._super,  x27[6]._super,  x27[7]._super,  x27[8]._super,  x27[9]._super,
                 x27[10]._super, x27[11]._super, x27[12]._super, x27[13]._super, x27[14]._super,
                 x27[15]._super, x27[16]._super, x27[17]._super, x27[18]._super, x27[19]._super,
                 x27[20]._super, x27[21]._super, x28[0]._super,  x28[1]._super,  x28[2]._super,
                 x28[3]._super,  x28[4]._super,  x28[5]._super,  x28[6]._super,  x28[7]._super,
                 x28[8]._super,  x28[9]._super},
      Val32Array{x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super, x29[0]._super,  x29[1]._super,  x29[2]._super,
                 x29[3]._super,  x29[4]._super,  x29[5]._super,  x29[6]._super,  x29[7]._super,
                 x29[8]._super,  x29[9]._super,  x29[10]._super, x29[11]._super, x29[12]._super,
                 x29[13]._super, x29[14]._super, x29[15]._super, x29[16]._super, x29[17]._super,
                 x29[18]._super, x29[19]._super},
      Val32Array{x24[10]._super, x24[11]._super, x24[12]._super, x24[13]._super, x24[14]._super,
                 x24[15]._super, x24[16]._super, x24[17]._super, x24[18]._super, x24[19]._super,
                 x24[20]._super, x24[21]._super, x30[0]._super,  x30[1]._super,  x30[2]._super,
                 x30[3]._super,  x30[4]._super,  x30[5]._super,  x30[6]._super,  x30[7]._super,
                 x30[8]._super,  x30[9]._super,  x30[10]._super, x30[11]._super, x30[12]._super,
                 x30[13]._super, x30[14]._super, x30[15]._super, x30[16]._super, x30[17]._super,
                 x30[18]._super, x30[19]._super},
      Val32Array{x26[10]._super, x26[11]._super, x26[12]._super, x26[13]._super, x26[14]._super,
                 x26[15]._super, x26[16]._super, x26[17]._super, x26[18]._super, x26[19]._super,
                 x26[20]._super, x26[21]._super, x31[0]._super,  x31[1]._super,  x31[2]._super,
                 x31[3]._super,  x31[4]._super,  x31[5]._super,  x31[6]._super,  x31[7]._super,
                 x31[8]._super,  x31[9]._super,  x31[10]._super, x31[11]._super, x31[12]._super,
                 x31[13]._super, x31[14]._super, x31[15]._super, x31[16]._super, x31[17]._super,
                 x31[18]._super, x31[19]._super},
      Val32Array{x28[10]._super, x28[11]._super, x28[12]._super, x28[13]._super, x28[14]._super,
                 x28[15]._super, x28[16]._super, x28[17]._super, x28[18]._super, x28[19]._super,
                 x28[20]._super, x28[21]._super, x32[0]._super,  x32[1]._super,  x32[2]._super,
                 x32[3]._super,  x32[4]._super,  x32[5]._super,  x32[6]._super,  x32[7]._super,
                 x32[8]._super,  x32[9]._super,  x32[10]._super, x32[11]._super, x32[12]._super,
                 x32[13]._super, x32[14]._super, x32[15]._super, x32[16]._super, x32[17]._super,
                 x32[18]._super, x32[19]._super},
      Val32Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49,
                 x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65},
      TwoShortsStruct{.low = Val(10599), .high = Val(5161)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x67 = x66.aOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16_Struct x68 =
      execUnpackWithCarry(ctx, x67.low, x67.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  TwoShortsStruct x69 = x66.eOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16_Struct x70 =
      execUnpackWithCarry(ctx, x69.low, x69.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x71 = x68._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x72 = x70._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_0__15_Arm1_Super_SuperLayout> x73 = LAYOUT_LOOKUP(x3, arm1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:373)
  Val22Array x74 =
      Val22Array{x71[0]._super,  x71[1]._super,  x71[2]._super,  x71[3]._super,  x71[4]._super,
                 x71[5]._super,  x71[6]._super,  x71[7]._super,  x71[8]._super,  x71[9]._super,
                 x71[10]._super, x71[11]._super, x71[12]._super, x71[13]._super, x71[14]._super,
                 x71[15]._super, x71[16]._super, x71[17]._super, x71[18]._super, x71[19]._super,
                 x71[20]._super, x71[21]._super};
  Val22Array x75 =
      Val22Array{x71[22]._super, x71[23]._super, x71[24]._super, x71[25]._super, x71[26]._super,
                 x71[27]._super, x71[28]._super, x71[29]._super, x71[30]._super, x71[31]._super,
                 x72[0]._super,  x72[1]._super,  x72[2]._super,  x72[3]._super,  x72[4]._super,
                 x72[5]._super,  x72[6]._super,  x72[7]._super,  x72[8]._super,  x72[9]._super,
                 x72[10]._super, x72[11]._super};
  Val22Array x76 =
      Val22Array{x72[12]._super, x72[13]._super, x72[14]._super, x72[15]._super, x72[16]._super,
                 x72[17]._super, x72[18]._super, x72[19]._super, x72[20]._super, x72[21]._super,
                 x72[22]._super, x72[23]._super, x72[24]._super, x72[25]._super, x72[26]._super,
                 x72[27]._super, x72[28]._super, x72[29]._super, x72[30]._super, x72[31]._super,
                 Val(0),         Val(0)};
  Val22Array x77 = Val22Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,
                              x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55};
  Val22Array x78 = Val22Array{x56,    x57,    x58,    x59,    x60,    x61,    x62,    x63,
                              x64,    x65,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  Val x79 = x4.blk._super;
  Val x80 = x4.midx._super;
  if (to_size_t(Val(0))) {
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:376)
    RetTupleStruct x81 =
        exec_RetTuple(ctx,
                      x74,
                      x75,
                      x76,
                      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                      x77,
                      x78,
                      Val(16),
                      Val(20),
                      Val(0),
                      x79,
                      x80,
                      LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  NondetRegStruct24Array x82 = x4.arrD;
  Val24Array x83 =
      Val24Array{x82[0]._super,  x82[1]._super,  x82[2]._super,  x82[3]._super,  x82[4]._super,
                 x82[5]._super,  x82[6]._super,  x82[7]._super,  x82[8]._super,  x82[9]._super,
                 x82[10]._super, x82[11]._super, x82[12]._super, x82[13]._super, x82[14]._super,
                 x82[15]._super, x82[16]._super, x82[17]._super, x82[18]._super, x82[19]._super,
                 x82[20]._super, x82[21]._super, x82[22]._super, x82[23]._super};
  Val x84 = x4.rnd._super;
  if (to_size_t(Val(1))) {
    if (to_size_t(Val(1))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:380)
      RetTupleStruct x85 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(0),
                                         Val(21),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm0));
    }
    if (to_size_t(Val(0))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:383)
      RetTupleStruct x86 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(9),
                                         Val(17),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm1));
    }
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:379)
    RetTupleStruct x87 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x73, _super));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  RetTupleStruct x88 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x88;
}
RetTupleStruct execSha256mixAll_0_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<Sha256mixAll_0_Layout> layout2) {
  // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:391)
  BoundLayout<Sha256mixAll_0__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:390)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  OneHot_16_Struct x5 = exec_OneHot_16_(ctx, x4.minor._super, LAYOUT_LOOKUP(layout2, minorOnehot));
  NondetRegStruct16Array x6 = x5._super;
  if (to_size_t(x6[0]._super)) {
    // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:392)
    RetTupleStruct x7 = execSha256mix_0__0_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm0));
  }
  if (to_size_t(x6[1]._super)) {
    // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:393)
    RetTupleStruct x8 = execSha256mix_0__1_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm1));
  }
  if (to_size_t(x6[2]._super)) {
    // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:394)
    RetTupleStruct x9 = execSha256mix_0__2_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm2));
  }
  if (to_size_t(x6[3]._super)) {
    // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:395)
    RetTupleStruct x10 = execSha256mix_0__3_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm3));
  }
  if (to_size_t(x6[4]._super)) {
    // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:396)
    RetTupleStruct x11 = execSha256mix_0__4_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm4));
  }
  if (to_size_t(x6[5]._super)) {
    // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:397)
    RetTupleStruct x12 = execSha256mix_0__5_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm5));
  }
  if (to_size_t(x6[6]._super)) {
    // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:398)
    RetTupleStruct x13 = execSha256mix_0__6_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm6));
  }
  if (to_size_t(x6[7]._super)) {
    // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:399)
    RetTupleStruct x14 = execSha256mix_0__7_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm7));
  }
  if (to_size_t(x6[8]._super)) {
    // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:400)
    RetTupleStruct x15 = execSha256mix_0__8_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm8));
  }
  if (to_size_t(x6[9]._super)) {
    // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:401)
    RetTupleStruct x16 = execSha256mix_0__9_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm9));
  }
  if (to_size_t(x6[10]._super)) {
    // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:402)
    RetTupleStruct x17 = execSha256mix_0__10_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm10));
  }
  if (to_size_t(x6[11]._super)) {
    // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:403)
    RetTupleStruct x18 = execSha256mix_0__11_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm11));
  }
  if (to_size_t(x6[12]._super)) {
    // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:404)
    RetTupleStruct x19 = execSha256mix_0__12_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm12));
  }
  if (to_size_t(x6[13]._super)) {
    // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:405)
    RetTupleStruct x20 = execSha256mix_0__13_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm13));
  }
  if (to_size_t(x6[14]._super)) {
    // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:406)
    RetTupleStruct x21 = execSha256mix_0__14_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm14));
  }
  if (to_size_t(x6[15]._super)) {
    // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:407)
    RetTupleStruct x22 = execSha256mix_0__15_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm15));
  }
  // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:391)
  RetTupleStruct x23 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x23;
}
RetTupleStruct execSha256mix_1__0_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<Sha256mix_1__0_Layout> layout2) {
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_1__0__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:359)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:360)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:361)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:362)
  RetTupleStruct x8 = back_RetTuple(ctx, 7, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:363)
  RetTupleStruct x9 = back_RetTuple(ctx, 15, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:364)
  RetTupleStruct x10 = back_RetTuple(ctx, 16, arg1);
  // s2w(zirgen/circuit/keccak/sha256_for_keccak.zir:155)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:366)
  NondetRegStruct22Array x11 = x5.arrE;
  NondetRegStruct22Array x12 = x5.arrF;
  NondetRegStruct22Array x13 = x8.arrE;
  NondetRegStruct22Array x14 = x8.arrF;
  NondetRegStruct22Array x15 = x9.arrE;
  NondetRegStruct22Array x16 = x9.arrF;
  NondetRegStruct22Array x17 = x10.arrE;
  NondetRegStruct22Array x18 = x10.arrF;
  TwoShortsStruct x19 = execComputeW(
      ctx,
      Val32Array{x11[0]._super,  x11[1]._super,  x11[2]._super,  x11[3]._super,  x11[4]._super,
                 x11[5]._super,  x11[6]._super,  x11[7]._super,  x11[8]._super,  x11[9]._super,
                 x11[10]._super, x11[11]._super, x11[12]._super, x11[13]._super, x11[14]._super,
                 x11[15]._super, x11[16]._super, x11[17]._super, x11[18]._super, x11[19]._super,
                 x11[20]._super, x11[21]._super, x12[0]._super,  x12[1]._super,  x12[2]._super,
                 x12[3]._super,  x12[4]._super,  x12[5]._super,  x12[6]._super,  x12[7]._super,
                 x12[8]._super,  x12[9]._super},
      Val32Array{x13[0]._super,  x13[1]._super,  x13[2]._super,  x13[3]._super,  x13[4]._super,
                 x13[5]._super,  x13[6]._super,  x13[7]._super,  x13[8]._super,  x13[9]._super,
                 x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x14[0]._super,  x14[1]._super,  x14[2]._super,
                 x14[3]._super,  x14[4]._super,  x14[5]._super,  x14[6]._super,  x14[7]._super,
                 x14[8]._super,  x14[9]._super},
      Val32Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x16[0]._super,  x16[1]._super,  x16[2]._super,
                 x16[3]._super,  x16[4]._super,  x16[5]._super,  x16[6]._super,  x16[7]._super,
                 x16[8]._super,  x16[9]._super},
      Val32Array{x17[0]._super,  x17[1]._super,  x17[2]._super,  x17[3]._super,  x17[4]._super,
                 x17[5]._super,  x17[6]._super,  x17[7]._super,  x17[8]._super,  x17[9]._super,
                 x17[10]._super, x17[11]._super, x17[12]._super, x17[13]._super, x17[14]._super,
                 x17[15]._super, x17[16]._super, x17[17]._super, x17[18]._super, x17[19]._super,
                 x17[20]._super, x17[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super},
      LAYOUT_LOOKUP(layout2, packedW));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16_Struct x20 =
      execUnpackWithCarry(ctx, x19.low, x19.high, LAYOUT_LOOKUP(layout2, newW));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  NondetRegStruct22Array x21 = x4.arrA;
  NondetRegStruct22Array x22 = x4.arrB;
  NondetRegStruct22Array x23 = x5.arrA;
  NondetRegStruct22Array x24 = x5.arrB;
  NondetRegStruct22Array x25 = x6.arrA;
  NondetRegStruct22Array x26 = x6.arrB;
  NondetRegStruct22Array x27 = x7.arrA;
  NondetRegStruct22Array x28 = x7.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:369)
  NondetRegStruct22Array x29 = x4.arrC;
  NondetRegStruct22Array x30 = x5.arrC;
  NondetRegStruct22Array x31 = x6.arrC;
  NondetRegStruct22Array x32 = x7.arrC;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x33 = x20._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  Val x55 = x33[21]._super;
  Val x56 = x33[22]._super;
  Val x57 = x33[23]._super;
  Val x58 = x33[24]._super;
  Val x59 = x33[25]._super;
  Val x60 = x33[26]._super;
  Val x61 = x33[27]._super;
  Val x62 = x33[28]._super;
  Val x63 = x33[29]._super;
  Val x64 = x33[30]._super;
  Val x65 = x33[31]._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  ComputeAEStruct x66 = execComputeAE(
      ctx,
      Val32Array{x21[0]._super,  x21[1]._super,  x21[2]._super,  x21[3]._super,  x21[4]._super,
                 x21[5]._super,  x21[6]._super,  x21[7]._super,  x21[8]._super,  x21[9]._super,
                 x21[10]._super, x21[11]._super, x21[12]._super, x21[13]._super, x21[14]._super,
                 x21[15]._super, x21[16]._super, x21[17]._super, x21[18]._super, x21[19]._super,
                 x21[20]._super, x21[21]._super, x22[0]._super,  x22[1]._super,  x22[2]._super,
                 x22[3]._super,  x22[4]._super,  x22[5]._super,  x22[6]._super,  x22[7]._super,
                 x22[8]._super,  x22[9]._super},
      Val32Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super, x24[0]._super,  x24[1]._super,  x24[2]._super,
                 x24[3]._super,  x24[4]._super,  x24[5]._super,  x24[6]._super,  x24[7]._super,
                 x24[8]._super,  x24[9]._super},
      Val32Array{x25[0]._super,  x25[1]._super,  x25[2]._super,  x25[3]._super,  x25[4]._super,
                 x25[5]._super,  x25[6]._super,  x25[7]._super,  x25[8]._super,  x25[9]._super,
                 x25[10]._super, x25[11]._super, x25[12]._super, x25[13]._super, x25[14]._super,
                 x25[15]._super, x25[16]._super, x25[17]._super, x25[18]._super, x25[19]._super,
                 x25[20]._super, x25[21]._super, x26[0]._super,  x26[1]._super,  x26[2]._super,
                 x26[3]._super,  x26[4]._super,  x26[5]._super,  x26[6]._super,  x26[7]._super,
                 x26[8]._super,  x26[9]._super},
      Val32Array{x27[0]._super,  x27[1]._super,  x27[2]._super,  x27[3]._super,  x27[4]._super,
                 x27[5]._super,  x27[6]._super,  x27[7]._super,  x27[8]._super,  x27[9]._super,
                 x27[10]._super, x27[11]._super, x27[12]._super, x27[13]._super, x27[14]._super,
                 x27[15]._super, x27[16]._super, x27[17]._super, x27[18]._super, x27[19]._super,
                 x27[20]._super, x27[21]._super, x28[0]._super,  x28[1]._super,  x28[2]._super,
                 x28[3]._super,  x28[4]._super,  x28[5]._super,  x28[6]._super,  x28[7]._super,
                 x28[8]._super,  x28[9]._super},
      Val32Array{x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super, x29[0]._super,  x29[1]._super,  x29[2]._super,
                 x29[3]._super,  x29[4]._super,  x29[5]._super,  x29[6]._super,  x29[7]._super,
                 x29[8]._super,  x29[9]._super,  x29[10]._super, x29[11]._super, x29[12]._super,
                 x29[13]._super, x29[14]._super, x29[15]._super, x29[16]._super, x29[17]._super,
                 x29[18]._super, x29[19]._super},
      Val32Array{x24[10]._super, x24[11]._super, x24[12]._super, x24[13]._super, x24[14]._super,
                 x24[15]._super, x24[16]._super, x24[17]._super, x24[18]._super, x24[19]._super,
                 x24[20]._super, x24[21]._super, x30[0]._super,  x30[1]._super,  x30[2]._super,
                 x30[3]._super,  x30[4]._super,  x30[5]._super,  x30[6]._super,  x30[7]._super,
                 x30[8]._super,  x30[9]._super,  x30[10]._super, x30[11]._super, x30[12]._super,
                 x30[13]._super, x30[14]._super, x30[15]._super, x30[16]._super, x30[17]._super,
                 x30[18]._super, x30[19]._super},
      Val32Array{x26[10]._super, x26[11]._super, x26[12]._super, x26[13]._super, x26[14]._super,
                 x26[15]._super, x26[16]._super, x26[17]._super, x26[18]._super, x26[19]._super,
                 x26[20]._super, x26[21]._super, x31[0]._super,  x31[1]._super,  x31[2]._super,
                 x31[3]._super,  x31[4]._super,  x31[5]._super,  x31[6]._super,  x31[7]._super,
                 x31[8]._super,  x31[9]._super,  x31[10]._super, x31[11]._super, x31[12]._super,
                 x31[13]._super, x31[14]._super, x31[15]._super, x31[16]._super, x31[17]._super,
                 x31[18]._super, x31[19]._super},
      Val32Array{x28[10]._super, x28[11]._super, x28[12]._super, x28[13]._super, x28[14]._super,
                 x28[15]._super, x28[16]._super, x28[17]._super, x28[18]._super, x28[19]._super,
                 x28[20]._super, x28[21]._super, x32[0]._super,  x32[1]._super,  x32[2]._super,
                 x32[3]._super,  x32[4]._super,  x32[5]._super,  x32[6]._super,  x32[7]._super,
                 x32[8]._super,  x32[9]._super,  x32[10]._super, x32[11]._super, x32[12]._super,
                 x32[13]._super, x32[14]._super, x32[15]._super, x32[16]._super, x32[17]._super,
                 x32[18]._super, x32[19]._super},
      Val32Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49,
                 x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65},
      TwoShortsStruct{.low = Val(2693), .high = Val(10167)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x67 = x66.aOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16_Struct x68 =
      execUnpackWithCarry(ctx, x67.low, x67.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  TwoShortsStruct x69 = x66.eOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16_Struct x70 =
      execUnpackWithCarry(ctx, x69.low, x69.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x71 = x68._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x72 = x70._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_1__0_Arm1_Super_SuperLayout> x73 = LAYOUT_LOOKUP(x3, arm1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:373)
  Val22Array x74 =
      Val22Array{x71[0]._super,  x71[1]._super,  x71[2]._super,  x71[3]._super,  x71[4]._super,
                 x71[5]._super,  x71[6]._super,  x71[7]._super,  x71[8]._super,  x71[9]._super,
                 x71[10]._super, x71[11]._super, x71[12]._super, x71[13]._super, x71[14]._super,
                 x71[15]._super, x71[16]._super, x71[17]._super, x71[18]._super, x71[19]._super,
                 x71[20]._super, x71[21]._super};
  Val22Array x75 =
      Val22Array{x71[22]._super, x71[23]._super, x71[24]._super, x71[25]._super, x71[26]._super,
                 x71[27]._super, x71[28]._super, x71[29]._super, x71[30]._super, x71[31]._super,
                 x72[0]._super,  x72[1]._super,  x72[2]._super,  x72[3]._super,  x72[4]._super,
                 x72[5]._super,  x72[6]._super,  x72[7]._super,  x72[8]._super,  x72[9]._super,
                 x72[10]._super, x72[11]._super};
  Val22Array x76 =
      Val22Array{x72[12]._super, x72[13]._super, x72[14]._super, x72[15]._super, x72[16]._super,
                 x72[17]._super, x72[18]._super, x72[19]._super, x72[20]._super, x72[21]._super,
                 x72[22]._super, x72[23]._super, x72[24]._super, x72[25]._super, x72[26]._super,
                 x72[27]._super, x72[28]._super, x72[29]._super, x72[30]._super, x72[31]._super,
                 Val(0),         Val(0)};
  Val22Array x77 = Val22Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,
                              x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55};
  Val22Array x78 = Val22Array{x56,    x57,    x58,    x59,    x60,    x61,    x62,    x63,
                              x64,    x65,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  Val x79 = x4.blk._super;
  Val x80 = x4.midx._super;
  if (to_size_t(Val(1))) {
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:376)
    RetTupleStruct x81 =
        exec_RetTuple(ctx,
                      x74,
                      x75,
                      x76,
                      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                      x77,
                      x78,
                      Val(1),
                      Val(21),
                      Val(0),
                      x79,
                      x80,
                      LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  NondetRegStruct24Array x82 = x4.arrD;
  Val24Array x83 =
      Val24Array{x82[0]._super,  x82[1]._super,  x82[2]._super,  x82[3]._super,  x82[4]._super,
                 x82[5]._super,  x82[6]._super,  x82[7]._super,  x82[8]._super,  x82[9]._super,
                 x82[10]._super, x82[11]._super, x82[12]._super, x82[13]._super, x82[14]._super,
                 x82[15]._super, x82[16]._super, x82[17]._super, x82[18]._super, x82[19]._super,
                 x82[20]._super, x82[21]._super, x82[22]._super, x82[23]._super};
  Val x84 = x4.rnd._super;
  if (to_size_t(Val(0))) {
    if (to_size_t(Val(1))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:380)
      RetTupleStruct x85 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(0),
                                         Val(22),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm0));
    }
    if (to_size_t(Val(0))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:383)
      RetTupleStruct x86 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(9),
                                         Val(17),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm1));
    }
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:379)
    RetTupleStruct x87 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x73, _super));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  RetTupleStruct x88 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x88;
}
RetTupleStruct execSha256mix_1__1_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<Sha256mix_1__1_Layout> layout2) {
  BoundLayout<Sha256mix_1__1__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:359)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:360)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:361)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:362)
  RetTupleStruct x8 = back_RetTuple(ctx, 7, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:363)
  RetTupleStruct x9 = back_RetTuple(ctx, 15, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:364)
  RetTupleStruct x10 = back_RetTuple(ctx, 16, arg1);
  // s2w(zirgen/circuit/keccak/sha256_for_keccak.zir:155)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:366)
  NondetRegStruct22Array x11 = x5.arrE;
  NondetRegStruct22Array x12 = x5.arrF;
  NondetRegStruct22Array x13 = x8.arrE;
  NondetRegStruct22Array x14 = x8.arrF;
  NondetRegStruct22Array x15 = x9.arrE;
  NondetRegStruct22Array x16 = x9.arrF;
  NondetRegStruct22Array x17 = x10.arrE;
  NondetRegStruct22Array x18 = x10.arrF;
  TwoShortsStruct x19 = execComputeW(
      ctx,
      Val32Array{x11[0]._super,  x11[1]._super,  x11[2]._super,  x11[3]._super,  x11[4]._super,
                 x11[5]._super,  x11[6]._super,  x11[7]._super,  x11[8]._super,  x11[9]._super,
                 x11[10]._super, x11[11]._super, x11[12]._super, x11[13]._super, x11[14]._super,
                 x11[15]._super, x11[16]._super, x11[17]._super, x11[18]._super, x11[19]._super,
                 x11[20]._super, x11[21]._super, x12[0]._super,  x12[1]._super,  x12[2]._super,
                 x12[3]._super,  x12[4]._super,  x12[5]._super,  x12[6]._super,  x12[7]._super,
                 x12[8]._super,  x12[9]._super},
      Val32Array{x13[0]._super,  x13[1]._super,  x13[2]._super,  x13[3]._super,  x13[4]._super,
                 x13[5]._super,  x13[6]._super,  x13[7]._super,  x13[8]._super,  x13[9]._super,
                 x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x14[0]._super,  x14[1]._super,  x14[2]._super,
                 x14[3]._super,  x14[4]._super,  x14[5]._super,  x14[6]._super,  x14[7]._super,
                 x14[8]._super,  x14[9]._super},
      Val32Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x16[0]._super,  x16[1]._super,  x16[2]._super,
                 x16[3]._super,  x16[4]._super,  x16[5]._super,  x16[6]._super,  x16[7]._super,
                 x16[8]._super,  x16[9]._super},
      Val32Array{x17[0]._super,  x17[1]._super,  x17[2]._super,  x17[3]._super,  x17[4]._super,
                 x17[5]._super,  x17[6]._super,  x17[7]._super,  x17[8]._super,  x17[9]._super,
                 x17[10]._super, x17[11]._super, x17[12]._super, x17[13]._super, x17[14]._super,
                 x17[15]._super, x17[16]._super, x17[17]._super, x17[18]._super, x17[19]._super,
                 x17[20]._super, x17[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super},
      LAYOUT_LOOKUP(layout2, packedW));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16_Struct x20 =
      execUnpackWithCarry(ctx, x19.low, x19.high, LAYOUT_LOOKUP(layout2, newW));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  NondetRegStruct22Array x21 = x4.arrA;
  NondetRegStruct22Array x22 = x4.arrB;
  NondetRegStruct22Array x23 = x5.arrA;
  NondetRegStruct22Array x24 = x5.arrB;
  NondetRegStruct22Array x25 = x6.arrA;
  NondetRegStruct22Array x26 = x6.arrB;
  NondetRegStruct22Array x27 = x7.arrA;
  NondetRegStruct22Array x28 = x7.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:369)
  NondetRegStruct22Array x29 = x4.arrC;
  NondetRegStruct22Array x30 = x5.arrC;
  NondetRegStruct22Array x31 = x6.arrC;
  NondetRegStruct22Array x32 = x7.arrC;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x33 = x20._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  Val x55 = x33[21]._super;
  Val x56 = x33[22]._super;
  Val x57 = x33[23]._super;
  Val x58 = x33[24]._super;
  Val x59 = x33[25]._super;
  Val x60 = x33[26]._super;
  Val x61 = x33[27]._super;
  Val x62 = x33[28]._super;
  Val x63 = x33[29]._super;
  Val x64 = x33[30]._super;
  Val x65 = x33[31]._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  ComputeAEStruct x66 = execComputeAE(
      ctx,
      Val32Array{x21[0]._super,  x21[1]._super,  x21[2]._super,  x21[3]._super,  x21[4]._super,
                 x21[5]._super,  x21[6]._super,  x21[7]._super,  x21[8]._super,  x21[9]._super,
                 x21[10]._super, x21[11]._super, x21[12]._super, x21[13]._super, x21[14]._super,
                 x21[15]._super, x21[16]._super, x21[17]._super, x21[18]._super, x21[19]._super,
                 x21[20]._super, x21[21]._super, x22[0]._super,  x22[1]._super,  x22[2]._super,
                 x22[3]._super,  x22[4]._super,  x22[5]._super,  x22[6]._super,  x22[7]._super,
                 x22[8]._super,  x22[9]._super},
      Val32Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super, x24[0]._super,  x24[1]._super,  x24[2]._super,
                 x24[3]._super,  x24[4]._super,  x24[5]._super,  x24[6]._super,  x24[7]._super,
                 x24[8]._super,  x24[9]._super},
      Val32Array{x25[0]._super,  x25[1]._super,  x25[2]._super,  x25[3]._super,  x25[4]._super,
                 x25[5]._super,  x25[6]._super,  x25[7]._super,  x25[8]._super,  x25[9]._super,
                 x25[10]._super, x25[11]._super, x25[12]._super, x25[13]._super, x25[14]._super,
                 x25[15]._super, x25[16]._super, x25[17]._super, x25[18]._super, x25[19]._super,
                 x25[20]._super, x25[21]._super, x26[0]._super,  x26[1]._super,  x26[2]._super,
                 x26[3]._super,  x26[4]._super,  x26[5]._super,  x26[6]._super,  x26[7]._super,
                 x26[8]._super,  x26[9]._super},
      Val32Array{x27[0]._super,  x27[1]._super,  x27[2]._super,  x27[3]._super,  x27[4]._super,
                 x27[5]._super,  x27[6]._super,  x27[7]._super,  x27[8]._super,  x27[9]._super,
                 x27[10]._super, x27[11]._super, x27[12]._super, x27[13]._super, x27[14]._super,
                 x27[15]._super, x27[16]._super, x27[17]._super, x27[18]._super, x27[19]._super,
                 x27[20]._super, x27[21]._super, x28[0]._super,  x28[1]._super,  x28[2]._super,
                 x28[3]._super,  x28[4]._super,  x28[5]._super,  x28[6]._super,  x28[7]._super,
                 x28[8]._super,  x28[9]._super},
      Val32Array{x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super, x29[0]._super,  x29[1]._super,  x29[2]._super,
                 x29[3]._super,  x29[4]._super,  x29[5]._super,  x29[6]._super,  x29[7]._super,
                 x29[8]._super,  x29[9]._super,  x29[10]._super, x29[11]._super, x29[12]._super,
                 x29[13]._super, x29[14]._super, x29[15]._super, x29[16]._super, x29[17]._super,
                 x29[18]._super, x29[19]._super},
      Val32Array{x24[10]._super, x24[11]._super, x24[12]._super, x24[13]._super, x24[14]._super,
                 x24[15]._super, x24[16]._super, x24[17]._super, x24[18]._super, x24[19]._super,
                 x24[20]._super, x24[21]._super, x30[0]._super,  x30[1]._super,  x30[2]._super,
                 x30[3]._super,  x30[4]._super,  x30[5]._super,  x30[6]._super,  x30[7]._super,
                 x30[8]._super,  x30[9]._super,  x30[10]._super, x30[11]._super, x30[12]._super,
                 x30[13]._super, x30[14]._super, x30[15]._super, x30[16]._super, x30[17]._super,
                 x30[18]._super, x30[19]._super},
      Val32Array{x26[10]._super, x26[11]._super, x26[12]._super, x26[13]._super, x26[14]._super,
                 x26[15]._super, x26[16]._super, x26[17]._super, x26[18]._super, x26[19]._super,
                 x26[20]._super, x26[21]._super, x31[0]._super,  x31[1]._super,  x31[2]._super,
                 x31[3]._super,  x31[4]._super,  x31[5]._super,  x31[6]._super,  x31[7]._super,
                 x31[8]._super,  x31[9]._super,  x31[10]._super, x31[11]._super, x31[12]._super,
                 x31[13]._super, x31[14]._super, x31[15]._super, x31[16]._super, x31[17]._super,
                 x31[18]._super, x31[19]._super},
      Val32Array{x28[10]._super, x28[11]._super, x28[12]._super, x28[13]._super, x28[14]._super,
                 x28[15]._super, x28[16]._super, x28[17]._super, x28[18]._super, x28[19]._super,
                 x28[20]._super, x28[21]._super, x32[0]._super,  x32[1]._super,  x32[2]._super,
                 x32[3]._super,  x32[4]._super,  x32[5]._super,  x32[6]._super,  x32[7]._super,
                 x32[8]._super,  x32[9]._super,  x32[10]._super, x32[11]._super, x32[12]._super,
                 x32[13]._super, x32[14]._super, x32[15]._super, x32[16]._super, x32[17]._super,
                 x32[18]._super, x32[19]._super},
      Val32Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49,
                 x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65},
      TwoShortsStruct{.low = Val(8504), .high = Val(11803)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x67 = x66.aOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16_Struct x68 =
      execUnpackWithCarry(ctx, x67.low, x67.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  TwoShortsStruct x69 = x66.eOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16_Struct x70 =
      execUnpackWithCarry(ctx, x69.low, x69.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x71 = x68._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x72 = x70._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_1__1_Arm1_Super_SuperLayout> x73 = LAYOUT_LOOKUP(x3, arm1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:373)
  Val22Array x74 =
      Val22Array{x71[0]._super,  x71[1]._super,  x71[2]._super,  x71[3]._super,  x71[4]._super,
                 x71[5]._super,  x71[6]._super,  x71[7]._super,  x71[8]._super,  x71[9]._super,
                 x71[10]._super, x71[11]._super, x71[12]._super, x71[13]._super, x71[14]._super,
                 x71[15]._super, x71[16]._super, x71[17]._super, x71[18]._super, x71[19]._super,
                 x71[20]._super, x71[21]._super};
  Val22Array x75 =
      Val22Array{x71[22]._super, x71[23]._super, x71[24]._super, x71[25]._super, x71[26]._super,
                 x71[27]._super, x71[28]._super, x71[29]._super, x71[30]._super, x71[31]._super,
                 x72[0]._super,  x72[1]._super,  x72[2]._super,  x72[3]._super,  x72[4]._super,
                 x72[5]._super,  x72[6]._super,  x72[7]._super,  x72[8]._super,  x72[9]._super,
                 x72[10]._super, x72[11]._super};
  Val22Array x76 =
      Val22Array{x72[12]._super, x72[13]._super, x72[14]._super, x72[15]._super, x72[16]._super,
                 x72[17]._super, x72[18]._super, x72[19]._super, x72[20]._super, x72[21]._super,
                 x72[22]._super, x72[23]._super, x72[24]._super, x72[25]._super, x72[26]._super,
                 x72[27]._super, x72[28]._super, x72[29]._super, x72[30]._super, x72[31]._super,
                 Val(0),         Val(0)};
  Val22Array x77 = Val22Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,
                              x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55};
  Val22Array x78 = Val22Array{x56,    x57,    x58,    x59,    x60,    x61,    x62,    x63,
                              x64,    x65,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  Val x79 = x4.blk._super;
  Val x80 = x4.midx._super;
  if (to_size_t(Val(1))) {
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:376)
    RetTupleStruct x81 =
        exec_RetTuple(ctx,
                      x74,
                      x75,
                      x76,
                      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                      x77,
                      x78,
                      Val(2),
                      Val(21),
                      Val(0),
                      x79,
                      x80,
                      LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  NondetRegStruct24Array x82 = x4.arrD;
  Val24Array x83 =
      Val24Array{x82[0]._super,  x82[1]._super,  x82[2]._super,  x82[3]._super,  x82[4]._super,
                 x82[5]._super,  x82[6]._super,  x82[7]._super,  x82[8]._super,  x82[9]._super,
                 x82[10]._super, x82[11]._super, x82[12]._super, x82[13]._super, x82[14]._super,
                 x82[15]._super, x82[16]._super, x82[17]._super, x82[18]._super, x82[19]._super,
                 x82[20]._super, x82[21]._super, x82[22]._super, x82[23]._super};
  Val x84 = x4.rnd._super;
  if (to_size_t(Val(0))) {
    if (to_size_t(Val(1))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:380)
      RetTupleStruct x85 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(0),
                                         Val(22),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm0));
    }
    if (to_size_t(Val(0))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:383)
      RetTupleStruct x86 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(9),
                                         Val(17),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm1));
    }
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:379)
    RetTupleStruct x87 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x73, _super));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  RetTupleStruct x88 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x88;
}
RetTupleStruct execSha256mix_1__2_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<Sha256mix_1__2_Layout> layout2) {
  BoundLayout<Sha256mix_1__2__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:359)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:360)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:361)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:362)
  RetTupleStruct x8 = back_RetTuple(ctx, 7, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:363)
  RetTupleStruct x9 = back_RetTuple(ctx, 15, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:364)
  RetTupleStruct x10 = back_RetTuple(ctx, 16, arg1);
  // s2w(zirgen/circuit/keccak/sha256_for_keccak.zir:155)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:366)
  NondetRegStruct22Array x11 = x5.arrE;
  NondetRegStruct22Array x12 = x5.arrF;
  NondetRegStruct22Array x13 = x8.arrE;
  NondetRegStruct22Array x14 = x8.arrF;
  NondetRegStruct22Array x15 = x9.arrE;
  NondetRegStruct22Array x16 = x9.arrF;
  NondetRegStruct22Array x17 = x10.arrE;
  NondetRegStruct22Array x18 = x10.arrF;
  TwoShortsStruct x19 = execComputeW(
      ctx,
      Val32Array{x11[0]._super,  x11[1]._super,  x11[2]._super,  x11[3]._super,  x11[4]._super,
                 x11[5]._super,  x11[6]._super,  x11[7]._super,  x11[8]._super,  x11[9]._super,
                 x11[10]._super, x11[11]._super, x11[12]._super, x11[13]._super, x11[14]._super,
                 x11[15]._super, x11[16]._super, x11[17]._super, x11[18]._super, x11[19]._super,
                 x11[20]._super, x11[21]._super, x12[0]._super,  x12[1]._super,  x12[2]._super,
                 x12[3]._super,  x12[4]._super,  x12[5]._super,  x12[6]._super,  x12[7]._super,
                 x12[8]._super,  x12[9]._super},
      Val32Array{x13[0]._super,  x13[1]._super,  x13[2]._super,  x13[3]._super,  x13[4]._super,
                 x13[5]._super,  x13[6]._super,  x13[7]._super,  x13[8]._super,  x13[9]._super,
                 x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x14[0]._super,  x14[1]._super,  x14[2]._super,
                 x14[3]._super,  x14[4]._super,  x14[5]._super,  x14[6]._super,  x14[7]._super,
                 x14[8]._super,  x14[9]._super},
      Val32Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x16[0]._super,  x16[1]._super,  x16[2]._super,
                 x16[3]._super,  x16[4]._super,  x16[5]._super,  x16[6]._super,  x16[7]._super,
                 x16[8]._super,  x16[9]._super},
      Val32Array{x17[0]._super,  x17[1]._super,  x17[2]._super,  x17[3]._super,  x17[4]._super,
                 x17[5]._super,  x17[6]._super,  x17[7]._super,  x17[8]._super,  x17[9]._super,
                 x17[10]._super, x17[11]._super, x17[12]._super, x17[13]._super, x17[14]._super,
                 x17[15]._super, x17[16]._super, x17[17]._super, x17[18]._super, x17[19]._super,
                 x17[20]._super, x17[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super},
      LAYOUT_LOOKUP(layout2, packedW));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16_Struct x20 =
      execUnpackWithCarry(ctx, x19.low, x19.high, LAYOUT_LOOKUP(layout2, newW));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  NondetRegStruct22Array x21 = x4.arrA;
  NondetRegStruct22Array x22 = x4.arrB;
  NondetRegStruct22Array x23 = x5.arrA;
  NondetRegStruct22Array x24 = x5.arrB;
  NondetRegStruct22Array x25 = x6.arrA;
  NondetRegStruct22Array x26 = x6.arrB;
  NondetRegStruct22Array x27 = x7.arrA;
  NondetRegStruct22Array x28 = x7.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:369)
  NondetRegStruct22Array x29 = x4.arrC;
  NondetRegStruct22Array x30 = x5.arrC;
  NondetRegStruct22Array x31 = x6.arrC;
  NondetRegStruct22Array x32 = x7.arrC;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x33 = x20._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  Val x55 = x33[21]._super;
  Val x56 = x33[22]._super;
  Val x57 = x33[23]._super;
  Val x58 = x33[24]._super;
  Val x59 = x33[25]._super;
  Val x60 = x33[26]._super;
  Val x61 = x33[27]._super;
  Val x62 = x33[28]._super;
  Val x63 = x33[29]._super;
  Val x64 = x33[30]._super;
  Val x65 = x33[31]._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  ComputeAEStruct x66 = execComputeAE(
      ctx,
      Val32Array{x21[0]._super,  x21[1]._super,  x21[2]._super,  x21[3]._super,  x21[4]._super,
                 x21[5]._super,  x21[6]._super,  x21[7]._super,  x21[8]._super,  x21[9]._super,
                 x21[10]._super, x21[11]._super, x21[12]._super, x21[13]._super, x21[14]._super,
                 x21[15]._super, x21[16]._super, x21[17]._super, x21[18]._super, x21[19]._super,
                 x21[20]._super, x21[21]._super, x22[0]._super,  x22[1]._super,  x22[2]._super,
                 x22[3]._super,  x22[4]._super,  x22[5]._super,  x22[6]._super,  x22[7]._super,
                 x22[8]._super,  x22[9]._super},
      Val32Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super, x24[0]._super,  x24[1]._super,  x24[2]._super,
                 x24[3]._super,  x24[4]._super,  x24[5]._super,  x24[6]._super,  x24[7]._super,
                 x24[8]._super,  x24[9]._super},
      Val32Array{x25[0]._super,  x25[1]._super,  x25[2]._super,  x25[3]._super,  x25[4]._super,
                 x25[5]._super,  x25[6]._super,  x25[7]._super,  x25[8]._super,  x25[9]._super,
                 x25[10]._super, x25[11]._super, x25[12]._super, x25[13]._super, x25[14]._super,
                 x25[15]._super, x25[16]._super, x25[17]._super, x25[18]._super, x25[19]._super,
                 x25[20]._super, x25[21]._super, x26[0]._super,  x26[1]._super,  x26[2]._super,
                 x26[3]._super,  x26[4]._super,  x26[5]._super,  x26[6]._super,  x26[7]._super,
                 x26[8]._super,  x26[9]._super},
      Val32Array{x27[0]._super,  x27[1]._super,  x27[2]._super,  x27[3]._super,  x27[4]._super,
                 x27[5]._super,  x27[6]._super,  x27[7]._super,  x27[8]._super,  x27[9]._super,
                 x27[10]._super, x27[11]._super, x27[12]._super, x27[13]._super, x27[14]._super,
                 x27[15]._super, x27[16]._super, x27[17]._super, x27[18]._super, x27[19]._super,
                 x27[20]._super, x27[21]._super, x28[0]._super,  x28[1]._super,  x28[2]._super,
                 x28[3]._super,  x28[4]._super,  x28[5]._super,  x28[6]._super,  x28[7]._super,
                 x28[8]._super,  x28[9]._super},
      Val32Array{x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super, x29[0]._super,  x29[1]._super,  x29[2]._super,
                 x29[3]._super,  x29[4]._super,  x29[5]._super,  x29[6]._super,  x29[7]._super,
                 x29[8]._super,  x29[9]._super,  x29[10]._super, x29[11]._super, x29[12]._super,
                 x29[13]._super, x29[14]._super, x29[15]._super, x29[16]._super, x29[17]._super,
                 x29[18]._super, x29[19]._super},
      Val32Array{x24[10]._super, x24[11]._super, x24[12]._super, x24[13]._super, x24[14]._super,
                 x24[15]._super, x24[16]._super, x24[17]._super, x24[18]._super, x24[19]._super,
                 x24[20]._super, x24[21]._super, x30[0]._super,  x30[1]._super,  x30[2]._super,
                 x30[3]._super,  x30[4]._super,  x30[5]._super,  x30[6]._super,  x30[7]._super,
                 x30[8]._super,  x30[9]._super,  x30[10]._super, x30[11]._super, x30[12]._super,
                 x30[13]._super, x30[14]._super, x30[15]._super, x30[16]._super, x30[17]._super,
                 x30[18]._super, x30[19]._super},
      Val32Array{x26[10]._super, x26[11]._super, x26[12]._super, x26[13]._super, x26[14]._super,
                 x26[15]._super, x26[16]._super, x26[17]._super, x26[18]._super, x26[19]._super,
                 x26[20]._super, x26[21]._super, x31[0]._super,  x31[1]._super,  x31[2]._super,
                 x31[3]._super,  x31[4]._super,  x31[5]._super,  x31[6]._super,  x31[7]._super,
                 x31[8]._super,  x31[9]._super,  x31[10]._super, x31[11]._super, x31[12]._super,
                 x31[13]._super, x31[14]._super, x31[15]._super, x31[16]._super, x31[17]._super,
                 x31[18]._super, x31[19]._super},
      Val32Array{x28[10]._super, x28[11]._super, x28[12]._super, x28[13]._super, x28[14]._super,
                 x28[15]._super, x28[16]._super, x28[17]._super, x28[18]._super, x28[19]._super,
                 x28[20]._super, x28[21]._super, x32[0]._super,  x32[1]._super,  x32[2]._super,
                 x32[3]._super,  x32[4]._super,  x32[5]._super,  x32[6]._super,  x32[7]._super,
                 x32[8]._super,  x32[9]._super,  x32[10]._super, x32[11]._super, x32[12]._super,
                 x32[13]._super, x32[14]._super, x32[15]._super, x32[16]._super, x32[17]._super,
                 x32[18]._super, x32[19]._super},
      Val32Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49,
                 x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65},
      TwoShortsStruct{.low = Val(28156), .high = Val(19756)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x67 = x66.aOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16_Struct x68 =
      execUnpackWithCarry(ctx, x67.low, x67.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  TwoShortsStruct x69 = x66.eOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16_Struct x70 =
      execUnpackWithCarry(ctx, x69.low, x69.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x71 = x68._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x72 = x70._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_1__2_Arm1_Super_SuperLayout> x73 = LAYOUT_LOOKUP(x3, arm1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:373)
  Val22Array x74 =
      Val22Array{x71[0]._super,  x71[1]._super,  x71[2]._super,  x71[3]._super,  x71[4]._super,
                 x71[5]._super,  x71[6]._super,  x71[7]._super,  x71[8]._super,  x71[9]._super,
                 x71[10]._super, x71[11]._super, x71[12]._super, x71[13]._super, x71[14]._super,
                 x71[15]._super, x71[16]._super, x71[17]._super, x71[18]._super, x71[19]._super,
                 x71[20]._super, x71[21]._super};
  Val22Array x75 =
      Val22Array{x71[22]._super, x71[23]._super, x71[24]._super, x71[25]._super, x71[26]._super,
                 x71[27]._super, x71[28]._super, x71[29]._super, x71[30]._super, x71[31]._super,
                 x72[0]._super,  x72[1]._super,  x72[2]._super,  x72[3]._super,  x72[4]._super,
                 x72[5]._super,  x72[6]._super,  x72[7]._super,  x72[8]._super,  x72[9]._super,
                 x72[10]._super, x72[11]._super};
  Val22Array x76 =
      Val22Array{x72[12]._super, x72[13]._super, x72[14]._super, x72[15]._super, x72[16]._super,
                 x72[17]._super, x72[18]._super, x72[19]._super, x72[20]._super, x72[21]._super,
                 x72[22]._super, x72[23]._super, x72[24]._super, x72[25]._super, x72[26]._super,
                 x72[27]._super, x72[28]._super, x72[29]._super, x72[30]._super, x72[31]._super,
                 Val(0),         Val(0)};
  Val22Array x77 = Val22Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,
                              x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55};
  Val22Array x78 = Val22Array{x56,    x57,    x58,    x59,    x60,    x61,    x62,    x63,
                              x64,    x65,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  Val x79 = x4.blk._super;
  Val x80 = x4.midx._super;
  if (to_size_t(Val(1))) {
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:376)
    RetTupleStruct x81 =
        exec_RetTuple(ctx,
                      x74,
                      x75,
                      x76,
                      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                      x77,
                      x78,
                      Val(3),
                      Val(21),
                      Val(0),
                      x79,
                      x80,
                      LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  NondetRegStruct24Array x82 = x4.arrD;
  Val24Array x83 =
      Val24Array{x82[0]._super,  x82[1]._super,  x82[2]._super,  x82[3]._super,  x82[4]._super,
                 x82[5]._super,  x82[6]._super,  x82[7]._super,  x82[8]._super,  x82[9]._super,
                 x82[10]._super, x82[11]._super, x82[12]._super, x82[13]._super, x82[14]._super,
                 x82[15]._super, x82[16]._super, x82[17]._super, x82[18]._super, x82[19]._super,
                 x82[20]._super, x82[21]._super, x82[22]._super, x82[23]._super};
  Val x84 = x4.rnd._super;
  if (to_size_t(Val(0))) {
    if (to_size_t(Val(1))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:380)
      RetTupleStruct x85 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(0),
                                         Val(22),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm0));
    }
    if (to_size_t(Val(0))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:383)
      RetTupleStruct x86 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(9),
                                         Val(17),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm1));
    }
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:379)
    RetTupleStruct x87 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x73, _super));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  RetTupleStruct x88 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x88;
}
RetTupleStruct execSha256mix_1__3_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<Sha256mix_1__3_Layout> layout2) {
  BoundLayout<Sha256mix_1__3__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:359)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:360)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:361)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:362)
  RetTupleStruct x8 = back_RetTuple(ctx, 7, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:363)
  RetTupleStruct x9 = back_RetTuple(ctx, 15, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:364)
  RetTupleStruct x10 = back_RetTuple(ctx, 16, arg1);
  // s2w(zirgen/circuit/keccak/sha256_for_keccak.zir:155)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:366)
  NondetRegStruct22Array x11 = x5.arrE;
  NondetRegStruct22Array x12 = x5.arrF;
  NondetRegStruct22Array x13 = x8.arrE;
  NondetRegStruct22Array x14 = x8.arrF;
  NondetRegStruct22Array x15 = x9.arrE;
  NondetRegStruct22Array x16 = x9.arrF;
  NondetRegStruct22Array x17 = x10.arrE;
  NondetRegStruct22Array x18 = x10.arrF;
  TwoShortsStruct x19 = execComputeW(
      ctx,
      Val32Array{x11[0]._super,  x11[1]._super,  x11[2]._super,  x11[3]._super,  x11[4]._super,
                 x11[5]._super,  x11[6]._super,  x11[7]._super,  x11[8]._super,  x11[9]._super,
                 x11[10]._super, x11[11]._super, x11[12]._super, x11[13]._super, x11[14]._super,
                 x11[15]._super, x11[16]._super, x11[17]._super, x11[18]._super, x11[19]._super,
                 x11[20]._super, x11[21]._super, x12[0]._super,  x12[1]._super,  x12[2]._super,
                 x12[3]._super,  x12[4]._super,  x12[5]._super,  x12[6]._super,  x12[7]._super,
                 x12[8]._super,  x12[9]._super},
      Val32Array{x13[0]._super,  x13[1]._super,  x13[2]._super,  x13[3]._super,  x13[4]._super,
                 x13[5]._super,  x13[6]._super,  x13[7]._super,  x13[8]._super,  x13[9]._super,
                 x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x14[0]._super,  x14[1]._super,  x14[2]._super,
                 x14[3]._super,  x14[4]._super,  x14[5]._super,  x14[6]._super,  x14[7]._super,
                 x14[8]._super,  x14[9]._super},
      Val32Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x16[0]._super,  x16[1]._super,  x16[2]._super,
                 x16[3]._super,  x16[4]._super,  x16[5]._super,  x16[6]._super,  x16[7]._super,
                 x16[8]._super,  x16[9]._super},
      Val32Array{x17[0]._super,  x17[1]._super,  x17[2]._super,  x17[3]._super,  x17[4]._super,
                 x17[5]._super,  x17[6]._super,  x17[7]._super,  x17[8]._super,  x17[9]._super,
                 x17[10]._super, x17[11]._super, x17[12]._super, x17[13]._super, x17[14]._super,
                 x17[15]._super, x17[16]._super, x17[17]._super, x17[18]._super, x17[19]._super,
                 x17[20]._super, x17[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super},
      LAYOUT_LOOKUP(layout2, packedW));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16_Struct x20 =
      execUnpackWithCarry(ctx, x19.low, x19.high, LAYOUT_LOOKUP(layout2, newW));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  NondetRegStruct22Array x21 = x4.arrA;
  NondetRegStruct22Array x22 = x4.arrB;
  NondetRegStruct22Array x23 = x5.arrA;
  NondetRegStruct22Array x24 = x5.arrB;
  NondetRegStruct22Array x25 = x6.arrA;
  NondetRegStruct22Array x26 = x6.arrB;
  NondetRegStruct22Array x27 = x7.arrA;
  NondetRegStruct22Array x28 = x7.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:369)
  NondetRegStruct22Array x29 = x4.arrC;
  NondetRegStruct22Array x30 = x5.arrC;
  NondetRegStruct22Array x31 = x6.arrC;
  NondetRegStruct22Array x32 = x7.arrC;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x33 = x20._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  Val x55 = x33[21]._super;
  Val x56 = x33[22]._super;
  Val x57 = x33[23]._super;
  Val x58 = x33[24]._super;
  Val x59 = x33[25]._super;
  Val x60 = x33[26]._super;
  Val x61 = x33[27]._super;
  Val x62 = x33[28]._super;
  Val x63 = x33[29]._super;
  Val x64 = x33[30]._super;
  Val x65 = x33[31]._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  ComputeAEStruct x66 = execComputeAE(
      ctx,
      Val32Array{x21[0]._super,  x21[1]._super,  x21[2]._super,  x21[3]._super,  x21[4]._super,
                 x21[5]._super,  x21[6]._super,  x21[7]._super,  x21[8]._super,  x21[9]._super,
                 x21[10]._super, x21[11]._super, x21[12]._super, x21[13]._super, x21[14]._super,
                 x21[15]._super, x21[16]._super, x21[17]._super, x21[18]._super, x21[19]._super,
                 x21[20]._super, x21[21]._super, x22[0]._super,  x22[1]._super,  x22[2]._super,
                 x22[3]._super,  x22[4]._super,  x22[5]._super,  x22[6]._super,  x22[7]._super,
                 x22[8]._super,  x22[9]._super},
      Val32Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super, x24[0]._super,  x24[1]._super,  x24[2]._super,
                 x24[3]._super,  x24[4]._super,  x24[5]._super,  x24[6]._super,  x24[7]._super,
                 x24[8]._super,  x24[9]._super},
      Val32Array{x25[0]._super,  x25[1]._super,  x25[2]._super,  x25[3]._super,  x25[4]._super,
                 x25[5]._super,  x25[6]._super,  x25[7]._super,  x25[8]._super,  x25[9]._super,
                 x25[10]._super, x25[11]._super, x25[12]._super, x25[13]._super, x25[14]._super,
                 x25[15]._super, x25[16]._super, x25[17]._super, x25[18]._super, x25[19]._super,
                 x25[20]._super, x25[21]._super, x26[0]._super,  x26[1]._super,  x26[2]._super,
                 x26[3]._super,  x26[4]._super,  x26[5]._super,  x26[6]._super,  x26[7]._super,
                 x26[8]._super,  x26[9]._super},
      Val32Array{x27[0]._super,  x27[1]._super,  x27[2]._super,  x27[3]._super,  x27[4]._super,
                 x27[5]._super,  x27[6]._super,  x27[7]._super,  x27[8]._super,  x27[9]._super,
                 x27[10]._super, x27[11]._super, x27[12]._super, x27[13]._super, x27[14]._super,
                 x27[15]._super, x27[16]._super, x27[17]._super, x27[18]._super, x27[19]._super,
                 x27[20]._super, x27[21]._super, x28[0]._super,  x28[1]._super,  x28[2]._super,
                 x28[3]._super,  x28[4]._super,  x28[5]._super,  x28[6]._super,  x28[7]._super,
                 x28[8]._super,  x28[9]._super},
      Val32Array{x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super, x29[0]._super,  x29[1]._super,  x29[2]._super,
                 x29[3]._super,  x29[4]._super,  x29[5]._super,  x29[6]._super,  x29[7]._super,
                 x29[8]._super,  x29[9]._super,  x29[10]._super, x29[11]._super, x29[12]._super,
                 x29[13]._super, x29[14]._super, x29[15]._super, x29[16]._super, x29[17]._super,
                 x29[18]._super, x29[19]._super},
      Val32Array{x24[10]._super, x24[11]._super, x24[12]._super, x24[13]._super, x24[14]._super,
                 x24[15]._super, x24[16]._super, x24[17]._super, x24[18]._super, x24[19]._super,
                 x24[20]._super, x24[21]._super, x30[0]._super,  x30[1]._super,  x30[2]._super,
                 x30[3]._super,  x30[4]._super,  x30[5]._super,  x30[6]._super,  x30[7]._super,
                 x30[8]._super,  x30[9]._super,  x30[10]._super, x30[11]._super, x30[12]._super,
                 x30[13]._super, x30[14]._super, x30[15]._super, x30[16]._super, x30[17]._super,
                 x30[18]._super, x30[19]._super},
      Val32Array{x26[10]._super, x26[11]._super, x26[12]._super, x26[13]._super, x26[14]._super,
                 x26[15]._super, x26[16]._super, x26[17]._super, x26[18]._super, x26[19]._super,
                 x26[20]._super, x26[21]._super, x31[0]._super,  x31[1]._super,  x31[2]._super,
                 x31[3]._super,  x31[4]._super,  x31[5]._super,  x31[6]._super,  x31[7]._super,
                 x31[8]._super,  x31[9]._super,  x31[10]._super, x31[11]._super, x31[12]._super,
                 x31[13]._super, x31[14]._super, x31[15]._super, x31[16]._super, x31[17]._super,
                 x31[18]._super, x31[19]._super},
      Val32Array{x28[10]._super, x28[11]._super, x28[12]._super, x28[13]._super, x28[14]._super,
                 x28[15]._super, x28[16]._super, x28[17]._super, x28[18]._super, x28[19]._super,
                 x28[20]._super, x28[21]._super, x32[0]._super,  x32[1]._super,  x32[2]._super,
                 x32[3]._super,  x32[4]._super,  x32[5]._super,  x32[6]._super,  x32[7]._super,
                 x32[8]._super,  x32[9]._super,  x32[10]._super, x32[11]._super, x32[12]._super,
                 x32[13]._super, x32[14]._super, x32[15]._super, x32[16]._super, x32[17]._super,
                 x32[18]._super, x32[19]._super},
      Val32Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49,
                 x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65},
      TwoShortsStruct{.low = Val(3347), .high = Val(21304)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x67 = x66.aOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16_Struct x68 =
      execUnpackWithCarry(ctx, x67.low, x67.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  TwoShortsStruct x69 = x66.eOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16_Struct x70 =
      execUnpackWithCarry(ctx, x69.low, x69.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x71 = x68._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x72 = x70._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_1__3_Arm1_Super_SuperLayout> x73 = LAYOUT_LOOKUP(x3, arm1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:373)
  Val22Array x74 =
      Val22Array{x71[0]._super,  x71[1]._super,  x71[2]._super,  x71[3]._super,  x71[4]._super,
                 x71[5]._super,  x71[6]._super,  x71[7]._super,  x71[8]._super,  x71[9]._super,
                 x71[10]._super, x71[11]._super, x71[12]._super, x71[13]._super, x71[14]._super,
                 x71[15]._super, x71[16]._super, x71[17]._super, x71[18]._super, x71[19]._super,
                 x71[20]._super, x71[21]._super};
  Val22Array x75 =
      Val22Array{x71[22]._super, x71[23]._super, x71[24]._super, x71[25]._super, x71[26]._super,
                 x71[27]._super, x71[28]._super, x71[29]._super, x71[30]._super, x71[31]._super,
                 x72[0]._super,  x72[1]._super,  x72[2]._super,  x72[3]._super,  x72[4]._super,
                 x72[5]._super,  x72[6]._super,  x72[7]._super,  x72[8]._super,  x72[9]._super,
                 x72[10]._super, x72[11]._super};
  Val22Array x76 =
      Val22Array{x72[12]._super, x72[13]._super, x72[14]._super, x72[15]._super, x72[16]._super,
                 x72[17]._super, x72[18]._super, x72[19]._super, x72[20]._super, x72[21]._super,
                 x72[22]._super, x72[23]._super, x72[24]._super, x72[25]._super, x72[26]._super,
                 x72[27]._super, x72[28]._super, x72[29]._super, x72[30]._super, x72[31]._super,
                 Val(0),         Val(0)};
  Val22Array x77 = Val22Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,
                              x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55};
  Val22Array x78 = Val22Array{x56,    x57,    x58,    x59,    x60,    x61,    x62,    x63,
                              x64,    x65,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  Val x79 = x4.blk._super;
  Val x80 = x4.midx._super;
  if (to_size_t(Val(1))) {
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:376)
    RetTupleStruct x81 =
        exec_RetTuple(ctx,
                      x74,
                      x75,
                      x76,
                      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                      x77,
                      x78,
                      Val(4),
                      Val(21),
                      Val(0),
                      x79,
                      x80,
                      LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  NondetRegStruct24Array x82 = x4.arrD;
  Val24Array x83 =
      Val24Array{x82[0]._super,  x82[1]._super,  x82[2]._super,  x82[3]._super,  x82[4]._super,
                 x82[5]._super,  x82[6]._super,  x82[7]._super,  x82[8]._super,  x82[9]._super,
                 x82[10]._super, x82[11]._super, x82[12]._super, x82[13]._super, x82[14]._super,
                 x82[15]._super, x82[16]._super, x82[17]._super, x82[18]._super, x82[19]._super,
                 x82[20]._super, x82[21]._super, x82[22]._super, x82[23]._super};
  Val x84 = x4.rnd._super;
  if (to_size_t(Val(0))) {
    if (to_size_t(Val(1))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:380)
      RetTupleStruct x85 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(0),
                                         Val(22),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm0));
    }
    if (to_size_t(Val(0))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:383)
      RetTupleStruct x86 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(9),
                                         Val(17),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm1));
    }
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:379)
    RetTupleStruct x87 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x73, _super));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  RetTupleStruct x88 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x88;
}
RetTupleStruct execSha256mix_1__4_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<Sha256mix_1__4_Layout> layout2) {
  BoundLayout<Sha256mix_1__4__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:359)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:360)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:361)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:362)
  RetTupleStruct x8 = back_RetTuple(ctx, 7, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:363)
  RetTupleStruct x9 = back_RetTuple(ctx, 15, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:364)
  RetTupleStruct x10 = back_RetTuple(ctx, 16, arg1);
  // s2w(zirgen/circuit/keccak/sha256_for_keccak.zir:155)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:366)
  NondetRegStruct22Array x11 = x5.arrE;
  NondetRegStruct22Array x12 = x5.arrF;
  NondetRegStruct22Array x13 = x8.arrE;
  NondetRegStruct22Array x14 = x8.arrF;
  NondetRegStruct22Array x15 = x9.arrE;
  NondetRegStruct22Array x16 = x9.arrF;
  NondetRegStruct22Array x17 = x10.arrE;
  NondetRegStruct22Array x18 = x10.arrF;
  TwoShortsStruct x19 = execComputeW(
      ctx,
      Val32Array{x11[0]._super,  x11[1]._super,  x11[2]._super,  x11[3]._super,  x11[4]._super,
                 x11[5]._super,  x11[6]._super,  x11[7]._super,  x11[8]._super,  x11[9]._super,
                 x11[10]._super, x11[11]._super, x11[12]._super, x11[13]._super, x11[14]._super,
                 x11[15]._super, x11[16]._super, x11[17]._super, x11[18]._super, x11[19]._super,
                 x11[20]._super, x11[21]._super, x12[0]._super,  x12[1]._super,  x12[2]._super,
                 x12[3]._super,  x12[4]._super,  x12[5]._super,  x12[6]._super,  x12[7]._super,
                 x12[8]._super,  x12[9]._super},
      Val32Array{x13[0]._super,  x13[1]._super,  x13[2]._super,  x13[3]._super,  x13[4]._super,
                 x13[5]._super,  x13[6]._super,  x13[7]._super,  x13[8]._super,  x13[9]._super,
                 x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x14[0]._super,  x14[1]._super,  x14[2]._super,
                 x14[3]._super,  x14[4]._super,  x14[5]._super,  x14[6]._super,  x14[7]._super,
                 x14[8]._super,  x14[9]._super},
      Val32Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x16[0]._super,  x16[1]._super,  x16[2]._super,
                 x16[3]._super,  x16[4]._super,  x16[5]._super,  x16[6]._super,  x16[7]._super,
                 x16[8]._super,  x16[9]._super},
      Val32Array{x17[0]._super,  x17[1]._super,  x17[2]._super,  x17[3]._super,  x17[4]._super,
                 x17[5]._super,  x17[6]._super,  x17[7]._super,  x17[8]._super,  x17[9]._super,
                 x17[10]._super, x17[11]._super, x17[12]._super, x17[13]._super, x17[14]._super,
                 x17[15]._super, x17[16]._super, x17[17]._super, x17[18]._super, x17[19]._super,
                 x17[20]._super, x17[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super},
      LAYOUT_LOOKUP(layout2, packedW));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16_Struct x20 =
      execUnpackWithCarry(ctx, x19.low, x19.high, LAYOUT_LOOKUP(layout2, newW));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  NondetRegStruct22Array x21 = x4.arrA;
  NondetRegStruct22Array x22 = x4.arrB;
  NondetRegStruct22Array x23 = x5.arrA;
  NondetRegStruct22Array x24 = x5.arrB;
  NondetRegStruct22Array x25 = x6.arrA;
  NondetRegStruct22Array x26 = x6.arrB;
  NondetRegStruct22Array x27 = x7.arrA;
  NondetRegStruct22Array x28 = x7.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:369)
  NondetRegStruct22Array x29 = x4.arrC;
  NondetRegStruct22Array x30 = x5.arrC;
  NondetRegStruct22Array x31 = x6.arrC;
  NondetRegStruct22Array x32 = x7.arrC;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x33 = x20._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  Val x55 = x33[21]._super;
  Val x56 = x33[22]._super;
  Val x57 = x33[23]._super;
  Val x58 = x33[24]._super;
  Val x59 = x33[25]._super;
  Val x60 = x33[26]._super;
  Val x61 = x33[27]._super;
  Val x62 = x33[28]._super;
  Val x63 = x33[29]._super;
  Val x64 = x33[30]._super;
  Val x65 = x33[31]._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  ComputeAEStruct x66 = execComputeAE(
      ctx,
      Val32Array{x21[0]._super,  x21[1]._super,  x21[2]._super,  x21[3]._super,  x21[4]._super,
                 x21[5]._super,  x21[6]._super,  x21[7]._super,  x21[8]._super,  x21[9]._super,
                 x21[10]._super, x21[11]._super, x21[12]._super, x21[13]._super, x21[14]._super,
                 x21[15]._super, x21[16]._super, x21[17]._super, x21[18]._super, x21[19]._super,
                 x21[20]._super, x21[21]._super, x22[0]._super,  x22[1]._super,  x22[2]._super,
                 x22[3]._super,  x22[4]._super,  x22[5]._super,  x22[6]._super,  x22[7]._super,
                 x22[8]._super,  x22[9]._super},
      Val32Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super, x24[0]._super,  x24[1]._super,  x24[2]._super,
                 x24[3]._super,  x24[4]._super,  x24[5]._super,  x24[6]._super,  x24[7]._super,
                 x24[8]._super,  x24[9]._super},
      Val32Array{x25[0]._super,  x25[1]._super,  x25[2]._super,  x25[3]._super,  x25[4]._super,
                 x25[5]._super,  x25[6]._super,  x25[7]._super,  x25[8]._super,  x25[9]._super,
                 x25[10]._super, x25[11]._super, x25[12]._super, x25[13]._super, x25[14]._super,
                 x25[15]._super, x25[16]._super, x25[17]._super, x25[18]._super, x25[19]._super,
                 x25[20]._super, x25[21]._super, x26[0]._super,  x26[1]._super,  x26[2]._super,
                 x26[3]._super,  x26[4]._super,  x26[5]._super,  x26[6]._super,  x26[7]._super,
                 x26[8]._super,  x26[9]._super},
      Val32Array{x27[0]._super,  x27[1]._super,  x27[2]._super,  x27[3]._super,  x27[4]._super,
                 x27[5]._super,  x27[6]._super,  x27[7]._super,  x27[8]._super,  x27[9]._super,
                 x27[10]._super, x27[11]._super, x27[12]._super, x27[13]._super, x27[14]._super,
                 x27[15]._super, x27[16]._super, x27[17]._super, x27[18]._super, x27[19]._super,
                 x27[20]._super, x27[21]._super, x28[0]._super,  x28[1]._super,  x28[2]._super,
                 x28[3]._super,  x28[4]._super,  x28[5]._super,  x28[6]._super,  x28[7]._super,
                 x28[8]._super,  x28[9]._super},
      Val32Array{x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super, x29[0]._super,  x29[1]._super,  x29[2]._super,
                 x29[3]._super,  x29[4]._super,  x29[5]._super,  x29[6]._super,  x29[7]._super,
                 x29[8]._super,  x29[9]._super,  x29[10]._super, x29[11]._super, x29[12]._super,
                 x29[13]._super, x29[14]._super, x29[15]._super, x29[16]._super, x29[17]._super,
                 x29[18]._super, x29[19]._super},
      Val32Array{x24[10]._super, x24[11]._super, x24[12]._super, x24[13]._super, x24[14]._super,
                 x24[15]._super, x24[16]._super, x24[17]._super, x24[18]._super, x24[19]._super,
                 x24[20]._super, x24[21]._super, x30[0]._super,  x30[1]._super,  x30[2]._super,
                 x30[3]._super,  x30[4]._super,  x30[5]._super,  x30[6]._super,  x30[7]._super,
                 x30[8]._super,  x30[9]._super,  x30[10]._super, x30[11]._super, x30[12]._super,
                 x30[13]._super, x30[14]._super, x30[15]._super, x30[16]._super, x30[17]._super,
                 x30[18]._super, x30[19]._super},
      Val32Array{x26[10]._super, x26[11]._super, x26[12]._super, x26[13]._super, x26[14]._super,
                 x26[15]._super, x26[16]._super, x26[17]._super, x26[18]._super, x26[19]._super,
                 x26[20]._super, x26[21]._super, x31[0]._super,  x31[1]._super,  x31[2]._super,
                 x31[3]._super,  x31[4]._super,  x31[5]._super,  x31[6]._super,  x31[7]._super,
                 x31[8]._super,  x31[9]._super,  x31[10]._super, x31[11]._super, x31[12]._super,
                 x31[13]._super, x31[14]._super, x31[15]._super, x31[16]._super, x31[17]._super,
                 x31[18]._super, x31[19]._super},
      Val32Array{x28[10]._super, x28[11]._super, x28[12]._super, x28[13]._super, x28[14]._super,
                 x28[15]._super, x28[16]._super, x28[17]._super, x28[18]._super, x28[19]._super,
                 x28[20]._super, x28[21]._super, x32[0]._super,  x32[1]._super,  x32[2]._super,
                 x32[3]._super,  x32[4]._super,  x32[5]._super,  x32[6]._super,  x32[7]._super,
                 x32[8]._super,  x32[9]._super,  x32[10]._super, x32[11]._super, x32[12]._super,
                 x32[13]._super, x32[14]._super, x32[15]._super, x32[16]._super, x32[17]._super,
                 x32[18]._super, x32[19]._super},
      Val32Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49,
                 x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65},
      TwoShortsStruct{.low = Val(29524), .high = Val(25866)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x67 = x66.aOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16_Struct x68 =
      execUnpackWithCarry(ctx, x67.low, x67.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  TwoShortsStruct x69 = x66.eOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16_Struct x70 =
      execUnpackWithCarry(ctx, x69.low, x69.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x71 = x68._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x72 = x70._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_1__4_Arm1_Super_SuperLayout> x73 = LAYOUT_LOOKUP(x3, arm1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:373)
  Val22Array x74 =
      Val22Array{x71[0]._super,  x71[1]._super,  x71[2]._super,  x71[3]._super,  x71[4]._super,
                 x71[5]._super,  x71[6]._super,  x71[7]._super,  x71[8]._super,  x71[9]._super,
                 x71[10]._super, x71[11]._super, x71[12]._super, x71[13]._super, x71[14]._super,
                 x71[15]._super, x71[16]._super, x71[17]._super, x71[18]._super, x71[19]._super,
                 x71[20]._super, x71[21]._super};
  Val22Array x75 =
      Val22Array{x71[22]._super, x71[23]._super, x71[24]._super, x71[25]._super, x71[26]._super,
                 x71[27]._super, x71[28]._super, x71[29]._super, x71[30]._super, x71[31]._super,
                 x72[0]._super,  x72[1]._super,  x72[2]._super,  x72[3]._super,  x72[4]._super,
                 x72[5]._super,  x72[6]._super,  x72[7]._super,  x72[8]._super,  x72[9]._super,
                 x72[10]._super, x72[11]._super};
  Val22Array x76 =
      Val22Array{x72[12]._super, x72[13]._super, x72[14]._super, x72[15]._super, x72[16]._super,
                 x72[17]._super, x72[18]._super, x72[19]._super, x72[20]._super, x72[21]._super,
                 x72[22]._super, x72[23]._super, x72[24]._super, x72[25]._super, x72[26]._super,
                 x72[27]._super, x72[28]._super, x72[29]._super, x72[30]._super, x72[31]._super,
                 Val(0),         Val(0)};
  Val22Array x77 = Val22Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,
                              x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55};
  Val22Array x78 = Val22Array{x56,    x57,    x58,    x59,    x60,    x61,    x62,    x63,
                              x64,    x65,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  Val x79 = x4.blk._super;
  Val x80 = x4.midx._super;
  if (to_size_t(Val(1))) {
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:376)
    RetTupleStruct x81 =
        exec_RetTuple(ctx,
                      x74,
                      x75,
                      x76,
                      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                      x77,
                      x78,
                      Val(5),
                      Val(21),
                      Val(0),
                      x79,
                      x80,
                      LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  NondetRegStruct24Array x82 = x4.arrD;
  Val24Array x83 =
      Val24Array{x82[0]._super,  x82[1]._super,  x82[2]._super,  x82[3]._super,  x82[4]._super,
                 x82[5]._super,  x82[6]._super,  x82[7]._super,  x82[8]._super,  x82[9]._super,
                 x82[10]._super, x82[11]._super, x82[12]._super, x82[13]._super, x82[14]._super,
                 x82[15]._super, x82[16]._super, x82[17]._super, x82[18]._super, x82[19]._super,
                 x82[20]._super, x82[21]._super, x82[22]._super, x82[23]._super};
  Val x84 = x4.rnd._super;
  if (to_size_t(Val(0))) {
    if (to_size_t(Val(1))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:380)
      RetTupleStruct x85 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(0),
                                         Val(22),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm0));
    }
    if (to_size_t(Val(0))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:383)
      RetTupleStruct x86 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(9),
                                         Val(17),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm1));
    }
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:379)
    RetTupleStruct x87 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x73, _super));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  RetTupleStruct x88 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x88;
}
RetTupleStruct execSha256mix_1__5_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<Sha256mix_1__5_Layout> layout2) {
  BoundLayout<Sha256mix_1__5__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:359)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:360)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:361)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:362)
  RetTupleStruct x8 = back_RetTuple(ctx, 7, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:363)
  RetTupleStruct x9 = back_RetTuple(ctx, 15, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:364)
  RetTupleStruct x10 = back_RetTuple(ctx, 16, arg1);
  // s2w(zirgen/circuit/keccak/sha256_for_keccak.zir:155)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:366)
  NondetRegStruct22Array x11 = x5.arrE;
  NondetRegStruct22Array x12 = x5.arrF;
  NondetRegStruct22Array x13 = x8.arrE;
  NondetRegStruct22Array x14 = x8.arrF;
  NondetRegStruct22Array x15 = x9.arrE;
  NondetRegStruct22Array x16 = x9.arrF;
  NondetRegStruct22Array x17 = x10.arrE;
  NondetRegStruct22Array x18 = x10.arrF;
  TwoShortsStruct x19 = execComputeW(
      ctx,
      Val32Array{x11[0]._super,  x11[1]._super,  x11[2]._super,  x11[3]._super,  x11[4]._super,
                 x11[5]._super,  x11[6]._super,  x11[7]._super,  x11[8]._super,  x11[9]._super,
                 x11[10]._super, x11[11]._super, x11[12]._super, x11[13]._super, x11[14]._super,
                 x11[15]._super, x11[16]._super, x11[17]._super, x11[18]._super, x11[19]._super,
                 x11[20]._super, x11[21]._super, x12[0]._super,  x12[1]._super,  x12[2]._super,
                 x12[3]._super,  x12[4]._super,  x12[5]._super,  x12[6]._super,  x12[7]._super,
                 x12[8]._super,  x12[9]._super},
      Val32Array{x13[0]._super,  x13[1]._super,  x13[2]._super,  x13[3]._super,  x13[4]._super,
                 x13[5]._super,  x13[6]._super,  x13[7]._super,  x13[8]._super,  x13[9]._super,
                 x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x14[0]._super,  x14[1]._super,  x14[2]._super,
                 x14[3]._super,  x14[4]._super,  x14[5]._super,  x14[6]._super,  x14[7]._super,
                 x14[8]._super,  x14[9]._super},
      Val32Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x16[0]._super,  x16[1]._super,  x16[2]._super,
                 x16[3]._super,  x16[4]._super,  x16[5]._super,  x16[6]._super,  x16[7]._super,
                 x16[8]._super,  x16[9]._super},
      Val32Array{x17[0]._super,  x17[1]._super,  x17[2]._super,  x17[3]._super,  x17[4]._super,
                 x17[5]._super,  x17[6]._super,  x17[7]._super,  x17[8]._super,  x17[9]._super,
                 x17[10]._super, x17[11]._super, x17[12]._super, x17[13]._super, x17[14]._super,
                 x17[15]._super, x17[16]._super, x17[17]._super, x17[18]._super, x17[19]._super,
                 x17[20]._super, x17[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super},
      LAYOUT_LOOKUP(layout2, packedW));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16_Struct x20 =
      execUnpackWithCarry(ctx, x19.low, x19.high, LAYOUT_LOOKUP(layout2, newW));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  NondetRegStruct22Array x21 = x4.arrA;
  NondetRegStruct22Array x22 = x4.arrB;
  NondetRegStruct22Array x23 = x5.arrA;
  NondetRegStruct22Array x24 = x5.arrB;
  NondetRegStruct22Array x25 = x6.arrA;
  NondetRegStruct22Array x26 = x6.arrB;
  NondetRegStruct22Array x27 = x7.arrA;
  NondetRegStruct22Array x28 = x7.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:369)
  NondetRegStruct22Array x29 = x4.arrC;
  NondetRegStruct22Array x30 = x5.arrC;
  NondetRegStruct22Array x31 = x6.arrC;
  NondetRegStruct22Array x32 = x7.arrC;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x33 = x20._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  Val x55 = x33[21]._super;
  Val x56 = x33[22]._super;
  Val x57 = x33[23]._super;
  Val x58 = x33[24]._super;
  Val x59 = x33[25]._super;
  Val x60 = x33[26]._super;
  Val x61 = x33[27]._super;
  Val x62 = x33[28]._super;
  Val x63 = x33[29]._super;
  Val x64 = x33[30]._super;
  Val x65 = x33[31]._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  ComputeAEStruct x66 = execComputeAE(
      ctx,
      Val32Array{x21[0]._super,  x21[1]._super,  x21[2]._super,  x21[3]._super,  x21[4]._super,
                 x21[5]._super,  x21[6]._super,  x21[7]._super,  x21[8]._super,  x21[9]._super,
                 x21[10]._super, x21[11]._super, x21[12]._super, x21[13]._super, x21[14]._super,
                 x21[15]._super, x21[16]._super, x21[17]._super, x21[18]._super, x21[19]._super,
                 x21[20]._super, x21[21]._super, x22[0]._super,  x22[1]._super,  x22[2]._super,
                 x22[3]._super,  x22[4]._super,  x22[5]._super,  x22[6]._super,  x22[7]._super,
                 x22[8]._super,  x22[9]._super},
      Val32Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super, x24[0]._super,  x24[1]._super,  x24[2]._super,
                 x24[3]._super,  x24[4]._super,  x24[5]._super,  x24[6]._super,  x24[7]._super,
                 x24[8]._super,  x24[9]._super},
      Val32Array{x25[0]._super,  x25[1]._super,  x25[2]._super,  x25[3]._super,  x25[4]._super,
                 x25[5]._super,  x25[6]._super,  x25[7]._super,  x25[8]._super,  x25[9]._super,
                 x25[10]._super, x25[11]._super, x25[12]._super, x25[13]._super, x25[14]._super,
                 x25[15]._super, x25[16]._super, x25[17]._super, x25[18]._super, x25[19]._super,
                 x25[20]._super, x25[21]._super, x26[0]._super,  x26[1]._super,  x26[2]._super,
                 x26[3]._super,  x26[4]._super,  x26[5]._super,  x26[6]._super,  x26[7]._super,
                 x26[8]._super,  x26[9]._super},
      Val32Array{x27[0]._super,  x27[1]._super,  x27[2]._super,  x27[3]._super,  x27[4]._super,
                 x27[5]._super,  x27[6]._super,  x27[7]._super,  x27[8]._super,  x27[9]._super,
                 x27[10]._super, x27[11]._super, x27[12]._super, x27[13]._super, x27[14]._super,
                 x27[15]._super, x27[16]._super, x27[17]._super, x27[18]._super, x27[19]._super,
                 x27[20]._super, x27[21]._super, x28[0]._super,  x28[1]._super,  x28[2]._super,
                 x28[3]._super,  x28[4]._super,  x28[5]._super,  x28[6]._super,  x28[7]._super,
                 x28[8]._super,  x28[9]._super},
      Val32Array{x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super, x29[0]._super,  x29[1]._super,  x29[2]._super,
                 x29[3]._super,  x29[4]._super,  x29[5]._super,  x29[6]._super,  x29[7]._super,
                 x29[8]._super,  x29[9]._super,  x29[10]._super, x29[11]._super, x29[12]._super,
                 x29[13]._super, x29[14]._super, x29[15]._super, x29[16]._super, x29[17]._super,
                 x29[18]._super, x29[19]._super},
      Val32Array{x24[10]._super, x24[11]._super, x24[12]._super, x24[13]._super, x24[14]._super,
                 x24[15]._super, x24[16]._super, x24[17]._super, x24[18]._super, x24[19]._super,
                 x24[20]._super, x24[21]._super, x30[0]._super,  x30[1]._super,  x30[2]._super,
                 x30[3]._super,  x30[4]._super,  x30[5]._super,  x30[6]._super,  x30[7]._super,
                 x30[8]._super,  x30[9]._super,  x30[10]._super, x30[11]._super, x30[12]._super,
                 x30[13]._super, x30[14]._super, x30[15]._super, x30[16]._super, x30[17]._super,
                 x30[18]._super, x30[19]._super},
      Val32Array{x26[10]._super, x26[11]._super, x26[12]._super, x26[13]._super, x26[14]._super,
                 x26[15]._super, x26[16]._super, x26[17]._super, x26[18]._super, x26[19]._super,
                 x26[20]._super, x26[21]._super, x31[0]._super,  x31[1]._super,  x31[2]._super,
                 x31[3]._super,  x31[4]._super,  x31[5]._super,  x31[6]._super,  x31[7]._super,
                 x31[8]._super,  x31[9]._super,  x31[10]._super, x31[11]._super, x31[12]._super,
                 x31[13]._super, x31[14]._super, x31[15]._super, x31[16]._super, x31[17]._super,
                 x31[18]._super, x31[19]._super},
      Val32Array{x28[10]._super, x28[11]._super, x28[12]._super, x28[13]._super, x28[14]._super,
                 x28[15]._super, x28[16]._super, x28[17]._super, x28[18]._super, x28[19]._super,
                 x28[20]._super, x28[21]._super, x32[0]._super,  x32[1]._super,  x32[2]._super,
                 x32[3]._super,  x32[4]._super,  x32[5]._super,  x32[6]._super,  x32[7]._super,
                 x32[8]._super,  x32[9]._super,  x32[10]._super, x32[11]._super, x32[12]._super,
                 x32[13]._super, x32[14]._super, x32[15]._super, x32[16]._super, x32[17]._super,
                 x32[18]._super, x32[19]._super},
      Val32Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49,
                 x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65},
      TwoShortsStruct{.low = Val(2747), .high = Val(30314)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x67 = x66.aOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16_Struct x68 =
      execUnpackWithCarry(ctx, x67.low, x67.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  TwoShortsStruct x69 = x66.eOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16_Struct x70 =
      execUnpackWithCarry(ctx, x69.low, x69.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x71 = x68._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x72 = x70._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_1__5_Arm1_Super_SuperLayout> x73 = LAYOUT_LOOKUP(x3, arm1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:373)
  Val22Array x74 =
      Val22Array{x71[0]._super,  x71[1]._super,  x71[2]._super,  x71[3]._super,  x71[4]._super,
                 x71[5]._super,  x71[6]._super,  x71[7]._super,  x71[8]._super,  x71[9]._super,
                 x71[10]._super, x71[11]._super, x71[12]._super, x71[13]._super, x71[14]._super,
                 x71[15]._super, x71[16]._super, x71[17]._super, x71[18]._super, x71[19]._super,
                 x71[20]._super, x71[21]._super};
  Val22Array x75 =
      Val22Array{x71[22]._super, x71[23]._super, x71[24]._super, x71[25]._super, x71[26]._super,
                 x71[27]._super, x71[28]._super, x71[29]._super, x71[30]._super, x71[31]._super,
                 x72[0]._super,  x72[1]._super,  x72[2]._super,  x72[3]._super,  x72[4]._super,
                 x72[5]._super,  x72[6]._super,  x72[7]._super,  x72[8]._super,  x72[9]._super,
                 x72[10]._super, x72[11]._super};
  Val22Array x76 =
      Val22Array{x72[12]._super, x72[13]._super, x72[14]._super, x72[15]._super, x72[16]._super,
                 x72[17]._super, x72[18]._super, x72[19]._super, x72[20]._super, x72[21]._super,
                 x72[22]._super, x72[23]._super, x72[24]._super, x72[25]._super, x72[26]._super,
                 x72[27]._super, x72[28]._super, x72[29]._super, x72[30]._super, x72[31]._super,
                 Val(0),         Val(0)};
  Val22Array x77 = Val22Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,
                              x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55};
  Val22Array x78 = Val22Array{x56,    x57,    x58,    x59,    x60,    x61,    x62,    x63,
                              x64,    x65,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  Val x79 = x4.blk._super;
  Val x80 = x4.midx._super;
  if (to_size_t(Val(1))) {
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:376)
    RetTupleStruct x81 =
        exec_RetTuple(ctx,
                      x74,
                      x75,
                      x76,
                      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                      x77,
                      x78,
                      Val(6),
                      Val(21),
                      Val(0),
                      x79,
                      x80,
                      LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  NondetRegStruct24Array x82 = x4.arrD;
  Val24Array x83 =
      Val24Array{x82[0]._super,  x82[1]._super,  x82[2]._super,  x82[3]._super,  x82[4]._super,
                 x82[5]._super,  x82[6]._super,  x82[7]._super,  x82[8]._super,  x82[9]._super,
                 x82[10]._super, x82[11]._super, x82[12]._super, x82[13]._super, x82[14]._super,
                 x82[15]._super, x82[16]._super, x82[17]._super, x82[18]._super, x82[19]._super,
                 x82[20]._super, x82[21]._super, x82[22]._super, x82[23]._super};
  Val x84 = x4.rnd._super;
  if (to_size_t(Val(0))) {
    if (to_size_t(Val(1))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:380)
      RetTupleStruct x85 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(0),
                                         Val(22),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm0));
    }
    if (to_size_t(Val(0))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:383)
      RetTupleStruct x86 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(9),
                                         Val(17),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm1));
    }
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:379)
    RetTupleStruct x87 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x73, _super));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  RetTupleStruct x88 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x88;
}
RetTupleStruct execSha256mix_1__6_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<Sha256mix_1__6_Layout> layout2) {
  BoundLayout<Sha256mix_1__6__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:359)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:360)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:361)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:362)
  RetTupleStruct x8 = back_RetTuple(ctx, 7, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:363)
  RetTupleStruct x9 = back_RetTuple(ctx, 15, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:364)
  RetTupleStruct x10 = back_RetTuple(ctx, 16, arg1);
  // s2w(zirgen/circuit/keccak/sha256_for_keccak.zir:155)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:366)
  NondetRegStruct22Array x11 = x5.arrE;
  NondetRegStruct22Array x12 = x5.arrF;
  NondetRegStruct22Array x13 = x8.arrE;
  NondetRegStruct22Array x14 = x8.arrF;
  NondetRegStruct22Array x15 = x9.arrE;
  NondetRegStruct22Array x16 = x9.arrF;
  NondetRegStruct22Array x17 = x10.arrE;
  NondetRegStruct22Array x18 = x10.arrF;
  TwoShortsStruct x19 = execComputeW(
      ctx,
      Val32Array{x11[0]._super,  x11[1]._super,  x11[2]._super,  x11[3]._super,  x11[4]._super,
                 x11[5]._super,  x11[6]._super,  x11[7]._super,  x11[8]._super,  x11[9]._super,
                 x11[10]._super, x11[11]._super, x11[12]._super, x11[13]._super, x11[14]._super,
                 x11[15]._super, x11[16]._super, x11[17]._super, x11[18]._super, x11[19]._super,
                 x11[20]._super, x11[21]._super, x12[0]._super,  x12[1]._super,  x12[2]._super,
                 x12[3]._super,  x12[4]._super,  x12[5]._super,  x12[6]._super,  x12[7]._super,
                 x12[8]._super,  x12[9]._super},
      Val32Array{x13[0]._super,  x13[1]._super,  x13[2]._super,  x13[3]._super,  x13[4]._super,
                 x13[5]._super,  x13[6]._super,  x13[7]._super,  x13[8]._super,  x13[9]._super,
                 x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x14[0]._super,  x14[1]._super,  x14[2]._super,
                 x14[3]._super,  x14[4]._super,  x14[5]._super,  x14[6]._super,  x14[7]._super,
                 x14[8]._super,  x14[9]._super},
      Val32Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x16[0]._super,  x16[1]._super,  x16[2]._super,
                 x16[3]._super,  x16[4]._super,  x16[5]._super,  x16[6]._super,  x16[7]._super,
                 x16[8]._super,  x16[9]._super},
      Val32Array{x17[0]._super,  x17[1]._super,  x17[2]._super,  x17[3]._super,  x17[4]._super,
                 x17[5]._super,  x17[6]._super,  x17[7]._super,  x17[8]._super,  x17[9]._super,
                 x17[10]._super, x17[11]._super, x17[12]._super, x17[13]._super, x17[14]._super,
                 x17[15]._super, x17[16]._super, x17[17]._super, x17[18]._super, x17[19]._super,
                 x17[20]._super, x17[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super},
      LAYOUT_LOOKUP(layout2, packedW));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16_Struct x20 =
      execUnpackWithCarry(ctx, x19.low, x19.high, LAYOUT_LOOKUP(layout2, newW));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  NondetRegStruct22Array x21 = x4.arrA;
  NondetRegStruct22Array x22 = x4.arrB;
  NondetRegStruct22Array x23 = x5.arrA;
  NondetRegStruct22Array x24 = x5.arrB;
  NondetRegStruct22Array x25 = x6.arrA;
  NondetRegStruct22Array x26 = x6.arrB;
  NondetRegStruct22Array x27 = x7.arrA;
  NondetRegStruct22Array x28 = x7.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:369)
  NondetRegStruct22Array x29 = x4.arrC;
  NondetRegStruct22Array x30 = x5.arrC;
  NondetRegStruct22Array x31 = x6.arrC;
  NondetRegStruct22Array x32 = x7.arrC;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x33 = x20._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  Val x55 = x33[21]._super;
  Val x56 = x33[22]._super;
  Val x57 = x33[23]._super;
  Val x58 = x33[24]._super;
  Val x59 = x33[25]._super;
  Val x60 = x33[26]._super;
  Val x61 = x33[27]._super;
  Val x62 = x33[28]._super;
  Val x63 = x33[29]._super;
  Val x64 = x33[30]._super;
  Val x65 = x33[31]._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  ComputeAEStruct x66 = execComputeAE(
      ctx,
      Val32Array{x21[0]._super,  x21[1]._super,  x21[2]._super,  x21[3]._super,  x21[4]._super,
                 x21[5]._super,  x21[6]._super,  x21[7]._super,  x21[8]._super,  x21[9]._super,
                 x21[10]._super, x21[11]._super, x21[12]._super, x21[13]._super, x21[14]._super,
                 x21[15]._super, x21[16]._super, x21[17]._super, x21[18]._super, x21[19]._super,
                 x21[20]._super, x21[21]._super, x22[0]._super,  x22[1]._super,  x22[2]._super,
                 x22[3]._super,  x22[4]._super,  x22[5]._super,  x22[6]._super,  x22[7]._super,
                 x22[8]._super,  x22[9]._super},
      Val32Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super, x24[0]._super,  x24[1]._super,  x24[2]._super,
                 x24[3]._super,  x24[4]._super,  x24[5]._super,  x24[6]._super,  x24[7]._super,
                 x24[8]._super,  x24[9]._super},
      Val32Array{x25[0]._super,  x25[1]._super,  x25[2]._super,  x25[3]._super,  x25[4]._super,
                 x25[5]._super,  x25[6]._super,  x25[7]._super,  x25[8]._super,  x25[9]._super,
                 x25[10]._super, x25[11]._super, x25[12]._super, x25[13]._super, x25[14]._super,
                 x25[15]._super, x25[16]._super, x25[17]._super, x25[18]._super, x25[19]._super,
                 x25[20]._super, x25[21]._super, x26[0]._super,  x26[1]._super,  x26[2]._super,
                 x26[3]._super,  x26[4]._super,  x26[5]._super,  x26[6]._super,  x26[7]._super,
                 x26[8]._super,  x26[9]._super},
      Val32Array{x27[0]._super,  x27[1]._super,  x27[2]._super,  x27[3]._super,  x27[4]._super,
                 x27[5]._super,  x27[6]._super,  x27[7]._super,  x27[8]._super,  x27[9]._super,
                 x27[10]._super, x27[11]._super, x27[12]._super, x27[13]._super, x27[14]._super,
                 x27[15]._super, x27[16]._super, x27[17]._super, x27[18]._super, x27[19]._super,
                 x27[20]._super, x27[21]._super, x28[0]._super,  x28[1]._super,  x28[2]._super,
                 x28[3]._super,  x28[4]._super,  x28[5]._super,  x28[6]._super,  x28[7]._super,
                 x28[8]._super,  x28[9]._super},
      Val32Array{x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super, x29[0]._super,  x29[1]._super,  x29[2]._super,
                 x29[3]._super,  x29[4]._super,  x29[5]._super,  x29[6]._super,  x29[7]._super,
                 x29[8]._super,  x29[9]._super,  x29[10]._super, x29[11]._super, x29[12]._super,
                 x29[13]._super, x29[14]._super, x29[15]._super, x29[16]._super, x29[17]._super,
                 x29[18]._super, x29[19]._super},
      Val32Array{x24[10]._super, x24[11]._super, x24[12]._super, x24[13]._super, x24[14]._super,
                 x24[15]._super, x24[16]._super, x24[17]._super, x24[18]._super, x24[19]._super,
                 x24[20]._super, x24[21]._super, x30[0]._super,  x30[1]._super,  x30[2]._super,
                 x30[3]._super,  x30[4]._super,  x30[5]._super,  x30[6]._super,  x30[7]._super,
                 x30[8]._super,  x30[9]._super,  x30[10]._super, x30[11]._super, x30[12]._super,
                 x30[13]._super, x30[14]._super, x30[15]._super, x30[16]._super, x30[17]._super,
                 x30[18]._super, x30[19]._super},
      Val32Array{x26[10]._super, x26[11]._super, x26[12]._super, x26[13]._super, x26[14]._super,
                 x26[15]._super, x26[16]._super, x26[17]._super, x26[18]._super, x26[19]._super,
                 x26[20]._super, x26[21]._super, x31[0]._super,  x31[1]._super,  x31[2]._super,
                 x31[3]._super,  x31[4]._super,  x31[5]._super,  x31[6]._super,  x31[7]._super,
                 x31[8]._super,  x31[9]._super,  x31[10]._super, x31[11]._super, x31[12]._super,
                 x31[13]._super, x31[14]._super, x31[15]._super, x31[16]._super, x31[17]._super,
                 x31[18]._super, x31[19]._super},
      Val32Array{x28[10]._super, x28[11]._super, x28[12]._super, x28[13]._super, x28[14]._super,
                 x28[15]._super, x28[16]._super, x28[17]._super, x28[18]._super, x28[19]._super,
                 x28[20]._super, x28[21]._super, x32[0]._super,  x32[1]._super,  x32[2]._super,
                 x32[3]._super,  x32[4]._super,  x32[5]._super,  x32[6]._super,  x32[7]._super,
                 x32[8]._super,  x32[9]._super,  x32[10]._super, x32[11]._super, x32[12]._super,
                 x32[13]._super, x32[14]._super, x32[15]._super, x32[16]._super, x32[17]._super,
                 x32[18]._super, x32[19]._super},
      Val32Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49,
                 x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65},
      TwoShortsStruct{.low = Val(51502), .high = Val(33218)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x67 = x66.aOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16_Struct x68 =
      execUnpackWithCarry(ctx, x67.low, x67.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  TwoShortsStruct x69 = x66.eOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16_Struct x70 =
      execUnpackWithCarry(ctx, x69.low, x69.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x71 = x68._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x72 = x70._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_1__6_Arm1_Super_SuperLayout> x73 = LAYOUT_LOOKUP(x3, arm1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:373)
  Val22Array x74 =
      Val22Array{x71[0]._super,  x71[1]._super,  x71[2]._super,  x71[3]._super,  x71[4]._super,
                 x71[5]._super,  x71[6]._super,  x71[7]._super,  x71[8]._super,  x71[9]._super,
                 x71[10]._super, x71[11]._super, x71[12]._super, x71[13]._super, x71[14]._super,
                 x71[15]._super, x71[16]._super, x71[17]._super, x71[18]._super, x71[19]._super,
                 x71[20]._super, x71[21]._super};
  Val22Array x75 =
      Val22Array{x71[22]._super, x71[23]._super, x71[24]._super, x71[25]._super, x71[26]._super,
                 x71[27]._super, x71[28]._super, x71[29]._super, x71[30]._super, x71[31]._super,
                 x72[0]._super,  x72[1]._super,  x72[2]._super,  x72[3]._super,  x72[4]._super,
                 x72[5]._super,  x72[6]._super,  x72[7]._super,  x72[8]._super,  x72[9]._super,
                 x72[10]._super, x72[11]._super};
  Val22Array x76 =
      Val22Array{x72[12]._super, x72[13]._super, x72[14]._super, x72[15]._super, x72[16]._super,
                 x72[17]._super, x72[18]._super, x72[19]._super, x72[20]._super, x72[21]._super,
                 x72[22]._super, x72[23]._super, x72[24]._super, x72[25]._super, x72[26]._super,
                 x72[27]._super, x72[28]._super, x72[29]._super, x72[30]._super, x72[31]._super,
                 Val(0),         Val(0)};
  Val22Array x77 = Val22Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,
                              x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55};
  Val22Array x78 = Val22Array{x56,    x57,    x58,    x59,    x60,    x61,    x62,    x63,
                              x64,    x65,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  Val x79 = x4.blk._super;
  Val x80 = x4.midx._super;
  if (to_size_t(Val(1))) {
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:376)
    RetTupleStruct x81 =
        exec_RetTuple(ctx,
                      x74,
                      x75,
                      x76,
                      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                      x77,
                      x78,
                      Val(7),
                      Val(21),
                      Val(0),
                      x79,
                      x80,
                      LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  NondetRegStruct24Array x82 = x4.arrD;
  Val24Array x83 =
      Val24Array{x82[0]._super,  x82[1]._super,  x82[2]._super,  x82[3]._super,  x82[4]._super,
                 x82[5]._super,  x82[6]._super,  x82[7]._super,  x82[8]._super,  x82[9]._super,
                 x82[10]._super, x82[11]._super, x82[12]._super, x82[13]._super, x82[14]._super,
                 x82[15]._super, x82[16]._super, x82[17]._super, x82[18]._super, x82[19]._super,
                 x82[20]._super, x82[21]._super, x82[22]._super, x82[23]._super};
  Val x84 = x4.rnd._super;
  if (to_size_t(Val(0))) {
    if (to_size_t(Val(1))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:380)
      RetTupleStruct x85 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(0),
                                         Val(22),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm0));
    }
    if (to_size_t(Val(0))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:383)
      RetTupleStruct x86 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(9),
                                         Val(17),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm1));
    }
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:379)
    RetTupleStruct x87 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x73, _super));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  RetTupleStruct x88 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x88;
}
RetTupleStruct execSha256mix_1__7_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<Sha256mix_1__7_Layout> layout2) {
  BoundLayout<Sha256mix_1__7__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:359)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:360)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:361)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:362)
  RetTupleStruct x8 = back_RetTuple(ctx, 7, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:363)
  RetTupleStruct x9 = back_RetTuple(ctx, 15, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:364)
  RetTupleStruct x10 = back_RetTuple(ctx, 16, arg1);
  // s2w(zirgen/circuit/keccak/sha256_for_keccak.zir:155)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:366)
  NondetRegStruct22Array x11 = x5.arrE;
  NondetRegStruct22Array x12 = x5.arrF;
  NondetRegStruct22Array x13 = x8.arrE;
  NondetRegStruct22Array x14 = x8.arrF;
  NondetRegStruct22Array x15 = x9.arrE;
  NondetRegStruct22Array x16 = x9.arrF;
  NondetRegStruct22Array x17 = x10.arrE;
  NondetRegStruct22Array x18 = x10.arrF;
  TwoShortsStruct x19 = execComputeW(
      ctx,
      Val32Array{x11[0]._super,  x11[1]._super,  x11[2]._super,  x11[3]._super,  x11[4]._super,
                 x11[5]._super,  x11[6]._super,  x11[7]._super,  x11[8]._super,  x11[9]._super,
                 x11[10]._super, x11[11]._super, x11[12]._super, x11[13]._super, x11[14]._super,
                 x11[15]._super, x11[16]._super, x11[17]._super, x11[18]._super, x11[19]._super,
                 x11[20]._super, x11[21]._super, x12[0]._super,  x12[1]._super,  x12[2]._super,
                 x12[3]._super,  x12[4]._super,  x12[5]._super,  x12[6]._super,  x12[7]._super,
                 x12[8]._super,  x12[9]._super},
      Val32Array{x13[0]._super,  x13[1]._super,  x13[2]._super,  x13[3]._super,  x13[4]._super,
                 x13[5]._super,  x13[6]._super,  x13[7]._super,  x13[8]._super,  x13[9]._super,
                 x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x14[0]._super,  x14[1]._super,  x14[2]._super,
                 x14[3]._super,  x14[4]._super,  x14[5]._super,  x14[6]._super,  x14[7]._super,
                 x14[8]._super,  x14[9]._super},
      Val32Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x16[0]._super,  x16[1]._super,  x16[2]._super,
                 x16[3]._super,  x16[4]._super,  x16[5]._super,  x16[6]._super,  x16[7]._super,
                 x16[8]._super,  x16[9]._super},
      Val32Array{x17[0]._super,  x17[1]._super,  x17[2]._super,  x17[3]._super,  x17[4]._super,
                 x17[5]._super,  x17[6]._super,  x17[7]._super,  x17[8]._super,  x17[9]._super,
                 x17[10]._super, x17[11]._super, x17[12]._super, x17[13]._super, x17[14]._super,
                 x17[15]._super, x17[16]._super, x17[17]._super, x17[18]._super, x17[19]._super,
                 x17[20]._super, x17[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super},
      LAYOUT_LOOKUP(layout2, packedW));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16_Struct x20 =
      execUnpackWithCarry(ctx, x19.low, x19.high, LAYOUT_LOOKUP(layout2, newW));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  NondetRegStruct22Array x21 = x4.arrA;
  NondetRegStruct22Array x22 = x4.arrB;
  NondetRegStruct22Array x23 = x5.arrA;
  NondetRegStruct22Array x24 = x5.arrB;
  NondetRegStruct22Array x25 = x6.arrA;
  NondetRegStruct22Array x26 = x6.arrB;
  NondetRegStruct22Array x27 = x7.arrA;
  NondetRegStruct22Array x28 = x7.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:369)
  NondetRegStruct22Array x29 = x4.arrC;
  NondetRegStruct22Array x30 = x5.arrC;
  NondetRegStruct22Array x31 = x6.arrC;
  NondetRegStruct22Array x32 = x7.arrC;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x33 = x20._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  Val x55 = x33[21]._super;
  Val x56 = x33[22]._super;
  Val x57 = x33[23]._super;
  Val x58 = x33[24]._super;
  Val x59 = x33[25]._super;
  Val x60 = x33[26]._super;
  Val x61 = x33[27]._super;
  Val x62 = x33[28]._super;
  Val x63 = x33[29]._super;
  Val x64 = x33[30]._super;
  Val x65 = x33[31]._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  ComputeAEStruct x66 = execComputeAE(
      ctx,
      Val32Array{x21[0]._super,  x21[1]._super,  x21[2]._super,  x21[3]._super,  x21[4]._super,
                 x21[5]._super,  x21[6]._super,  x21[7]._super,  x21[8]._super,  x21[9]._super,
                 x21[10]._super, x21[11]._super, x21[12]._super, x21[13]._super, x21[14]._super,
                 x21[15]._super, x21[16]._super, x21[17]._super, x21[18]._super, x21[19]._super,
                 x21[20]._super, x21[21]._super, x22[0]._super,  x22[1]._super,  x22[2]._super,
                 x22[3]._super,  x22[4]._super,  x22[5]._super,  x22[6]._super,  x22[7]._super,
                 x22[8]._super,  x22[9]._super},
      Val32Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super, x24[0]._super,  x24[1]._super,  x24[2]._super,
                 x24[3]._super,  x24[4]._super,  x24[5]._super,  x24[6]._super,  x24[7]._super,
                 x24[8]._super,  x24[9]._super},
      Val32Array{x25[0]._super,  x25[1]._super,  x25[2]._super,  x25[3]._super,  x25[4]._super,
                 x25[5]._super,  x25[6]._super,  x25[7]._super,  x25[8]._super,  x25[9]._super,
                 x25[10]._super, x25[11]._super, x25[12]._super, x25[13]._super, x25[14]._super,
                 x25[15]._super, x25[16]._super, x25[17]._super, x25[18]._super, x25[19]._super,
                 x25[20]._super, x25[21]._super, x26[0]._super,  x26[1]._super,  x26[2]._super,
                 x26[3]._super,  x26[4]._super,  x26[5]._super,  x26[6]._super,  x26[7]._super,
                 x26[8]._super,  x26[9]._super},
      Val32Array{x27[0]._super,  x27[1]._super,  x27[2]._super,  x27[3]._super,  x27[4]._super,
                 x27[5]._super,  x27[6]._super,  x27[7]._super,  x27[8]._super,  x27[9]._super,
                 x27[10]._super, x27[11]._super, x27[12]._super, x27[13]._super, x27[14]._super,
                 x27[15]._super, x27[16]._super, x27[17]._super, x27[18]._super, x27[19]._super,
                 x27[20]._super, x27[21]._super, x28[0]._super,  x28[1]._super,  x28[2]._super,
                 x28[3]._super,  x28[4]._super,  x28[5]._super,  x28[6]._super,  x28[7]._super,
                 x28[8]._super,  x28[9]._super},
      Val32Array{x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super, x29[0]._super,  x29[1]._super,  x29[2]._super,
                 x29[3]._super,  x29[4]._super,  x29[5]._super,  x29[6]._super,  x29[7]._super,
                 x29[8]._super,  x29[9]._super,  x29[10]._super, x29[11]._super, x29[12]._super,
                 x29[13]._super, x29[14]._super, x29[15]._super, x29[16]._super, x29[17]._super,
                 x29[18]._super, x29[19]._super},
      Val32Array{x24[10]._super, x24[11]._super, x24[12]._super, x24[13]._super, x24[14]._super,
                 x24[15]._super, x24[16]._super, x24[17]._super, x24[18]._super, x24[19]._super,
                 x24[20]._super, x24[21]._super, x30[0]._super,  x30[1]._super,  x30[2]._super,
                 x30[3]._super,  x30[4]._super,  x30[5]._super,  x30[6]._super,  x30[7]._super,
                 x30[8]._super,  x30[9]._super,  x30[10]._super, x30[11]._super, x30[12]._super,
                 x30[13]._super, x30[14]._super, x30[15]._super, x30[16]._super, x30[17]._super,
                 x30[18]._super, x30[19]._super},
      Val32Array{x26[10]._super, x26[11]._super, x26[12]._super, x26[13]._super, x26[14]._super,
                 x26[15]._super, x26[16]._super, x26[17]._super, x26[18]._super, x26[19]._super,
                 x26[20]._super, x26[21]._super, x31[0]._super,  x31[1]._super,  x31[2]._super,
                 x31[3]._super,  x31[4]._super,  x31[5]._super,  x31[6]._super,  x31[7]._super,
                 x31[8]._super,  x31[9]._super,  x31[10]._super, x31[11]._super, x31[12]._super,
                 x31[13]._super, x31[14]._super, x31[15]._super, x31[16]._super, x31[17]._super,
                 x31[18]._super, x31[19]._super},
      Val32Array{x28[10]._super, x28[11]._super, x28[12]._super, x28[13]._super, x28[14]._super,
                 x28[15]._super, x28[16]._super, x28[17]._super, x28[18]._super, x28[19]._super,
                 x28[20]._super, x28[21]._super, x32[0]._super,  x32[1]._super,  x32[2]._super,
                 x32[3]._super,  x32[4]._super,  x32[5]._super,  x32[6]._super,  x32[7]._super,
                 x32[8]._super,  x32[9]._super,  x32[10]._super, x32[11]._super, x32[12]._super,
                 x32[13]._super, x32[14]._super, x32[15]._super, x32[16]._super, x32[17]._super,
                 x32[18]._super, x32[19]._super},
      Val32Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49,
                 x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65},
      TwoShortsStruct{.low = Val(11397), .high = Val(37490)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x67 = x66.aOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16_Struct x68 =
      execUnpackWithCarry(ctx, x67.low, x67.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  TwoShortsStruct x69 = x66.eOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16_Struct x70 =
      execUnpackWithCarry(ctx, x69.low, x69.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x71 = x68._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x72 = x70._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_1__7_Arm1_Super_SuperLayout> x73 = LAYOUT_LOOKUP(x3, arm1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:373)
  Val22Array x74 =
      Val22Array{x71[0]._super,  x71[1]._super,  x71[2]._super,  x71[3]._super,  x71[4]._super,
                 x71[5]._super,  x71[6]._super,  x71[7]._super,  x71[8]._super,  x71[9]._super,
                 x71[10]._super, x71[11]._super, x71[12]._super, x71[13]._super, x71[14]._super,
                 x71[15]._super, x71[16]._super, x71[17]._super, x71[18]._super, x71[19]._super,
                 x71[20]._super, x71[21]._super};
  Val22Array x75 =
      Val22Array{x71[22]._super, x71[23]._super, x71[24]._super, x71[25]._super, x71[26]._super,
                 x71[27]._super, x71[28]._super, x71[29]._super, x71[30]._super, x71[31]._super,
                 x72[0]._super,  x72[1]._super,  x72[2]._super,  x72[3]._super,  x72[4]._super,
                 x72[5]._super,  x72[6]._super,  x72[7]._super,  x72[8]._super,  x72[9]._super,
                 x72[10]._super, x72[11]._super};
  Val22Array x76 =
      Val22Array{x72[12]._super, x72[13]._super, x72[14]._super, x72[15]._super, x72[16]._super,
                 x72[17]._super, x72[18]._super, x72[19]._super, x72[20]._super, x72[21]._super,
                 x72[22]._super, x72[23]._super, x72[24]._super, x72[25]._super, x72[26]._super,
                 x72[27]._super, x72[28]._super, x72[29]._super, x72[30]._super, x72[31]._super,
                 Val(0),         Val(0)};
  Val22Array x77 = Val22Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,
                              x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55};
  Val22Array x78 = Val22Array{x56,    x57,    x58,    x59,    x60,    x61,    x62,    x63,
                              x64,    x65,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  Val x79 = x4.blk._super;
  Val x80 = x4.midx._super;
  if (to_size_t(Val(1))) {
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:376)
    RetTupleStruct x81 =
        exec_RetTuple(ctx,
                      x74,
                      x75,
                      x76,
                      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                      x77,
                      x78,
                      Val(8),
                      Val(21),
                      Val(0),
                      x79,
                      x80,
                      LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  NondetRegStruct24Array x82 = x4.arrD;
  Val24Array x83 =
      Val24Array{x82[0]._super,  x82[1]._super,  x82[2]._super,  x82[3]._super,  x82[4]._super,
                 x82[5]._super,  x82[6]._super,  x82[7]._super,  x82[8]._super,  x82[9]._super,
                 x82[10]._super, x82[11]._super, x82[12]._super, x82[13]._super, x82[14]._super,
                 x82[15]._super, x82[16]._super, x82[17]._super, x82[18]._super, x82[19]._super,
                 x82[20]._super, x82[21]._super, x82[22]._super, x82[23]._super};
  Val x84 = x4.rnd._super;
  if (to_size_t(Val(0))) {
    if (to_size_t(Val(1))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:380)
      RetTupleStruct x85 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(0),
                                         Val(22),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm0));
    }
    if (to_size_t(Val(0))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:383)
      RetTupleStruct x86 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(9),
                                         Val(17),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm1));
    }
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:379)
    RetTupleStruct x87 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x73, _super));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  RetTupleStruct x88 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x88;
}
RetTupleStruct execSha256mix_1__8_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<Sha256mix_1__8_Layout> layout2) {
  BoundLayout<Sha256mix_1__8__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:359)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:360)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:361)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:362)
  RetTupleStruct x8 = back_RetTuple(ctx, 7, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:363)
  RetTupleStruct x9 = back_RetTuple(ctx, 15, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:364)
  RetTupleStruct x10 = back_RetTuple(ctx, 16, arg1);
  // s2w(zirgen/circuit/keccak/sha256_for_keccak.zir:155)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:366)
  NondetRegStruct22Array x11 = x5.arrE;
  NondetRegStruct22Array x12 = x5.arrF;
  NondetRegStruct22Array x13 = x8.arrE;
  NondetRegStruct22Array x14 = x8.arrF;
  NondetRegStruct22Array x15 = x9.arrE;
  NondetRegStruct22Array x16 = x9.arrF;
  NondetRegStruct22Array x17 = x10.arrE;
  NondetRegStruct22Array x18 = x10.arrF;
  TwoShortsStruct x19 = execComputeW(
      ctx,
      Val32Array{x11[0]._super,  x11[1]._super,  x11[2]._super,  x11[3]._super,  x11[4]._super,
                 x11[5]._super,  x11[6]._super,  x11[7]._super,  x11[8]._super,  x11[9]._super,
                 x11[10]._super, x11[11]._super, x11[12]._super, x11[13]._super, x11[14]._super,
                 x11[15]._super, x11[16]._super, x11[17]._super, x11[18]._super, x11[19]._super,
                 x11[20]._super, x11[21]._super, x12[0]._super,  x12[1]._super,  x12[2]._super,
                 x12[3]._super,  x12[4]._super,  x12[5]._super,  x12[6]._super,  x12[7]._super,
                 x12[8]._super,  x12[9]._super},
      Val32Array{x13[0]._super,  x13[1]._super,  x13[2]._super,  x13[3]._super,  x13[4]._super,
                 x13[5]._super,  x13[6]._super,  x13[7]._super,  x13[8]._super,  x13[9]._super,
                 x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x14[0]._super,  x14[1]._super,  x14[2]._super,
                 x14[3]._super,  x14[4]._super,  x14[5]._super,  x14[6]._super,  x14[7]._super,
                 x14[8]._super,  x14[9]._super},
      Val32Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x16[0]._super,  x16[1]._super,  x16[2]._super,
                 x16[3]._super,  x16[4]._super,  x16[5]._super,  x16[6]._super,  x16[7]._super,
                 x16[8]._super,  x16[9]._super},
      Val32Array{x17[0]._super,  x17[1]._super,  x17[2]._super,  x17[3]._super,  x17[4]._super,
                 x17[5]._super,  x17[6]._super,  x17[7]._super,  x17[8]._super,  x17[9]._super,
                 x17[10]._super, x17[11]._super, x17[12]._super, x17[13]._super, x17[14]._super,
                 x17[15]._super, x17[16]._super, x17[17]._super, x17[18]._super, x17[19]._super,
                 x17[20]._super, x17[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super},
      LAYOUT_LOOKUP(layout2, packedW));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16_Struct x20 =
      execUnpackWithCarry(ctx, x19.low, x19.high, LAYOUT_LOOKUP(layout2, newW));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  NondetRegStruct22Array x21 = x4.arrA;
  NondetRegStruct22Array x22 = x4.arrB;
  NondetRegStruct22Array x23 = x5.arrA;
  NondetRegStruct22Array x24 = x5.arrB;
  NondetRegStruct22Array x25 = x6.arrA;
  NondetRegStruct22Array x26 = x6.arrB;
  NondetRegStruct22Array x27 = x7.arrA;
  NondetRegStruct22Array x28 = x7.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:369)
  NondetRegStruct22Array x29 = x4.arrC;
  NondetRegStruct22Array x30 = x5.arrC;
  NondetRegStruct22Array x31 = x6.arrC;
  NondetRegStruct22Array x32 = x7.arrC;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x33 = x20._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  Val x55 = x33[21]._super;
  Val x56 = x33[22]._super;
  Val x57 = x33[23]._super;
  Val x58 = x33[24]._super;
  Val x59 = x33[25]._super;
  Val x60 = x33[26]._super;
  Val x61 = x33[27]._super;
  Val x62 = x33[28]._super;
  Val x63 = x33[29]._super;
  Val x64 = x33[30]._super;
  Val x65 = x33[31]._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  ComputeAEStruct x66 = execComputeAE(
      ctx,
      Val32Array{x21[0]._super,  x21[1]._super,  x21[2]._super,  x21[3]._super,  x21[4]._super,
                 x21[5]._super,  x21[6]._super,  x21[7]._super,  x21[8]._super,  x21[9]._super,
                 x21[10]._super, x21[11]._super, x21[12]._super, x21[13]._super, x21[14]._super,
                 x21[15]._super, x21[16]._super, x21[17]._super, x21[18]._super, x21[19]._super,
                 x21[20]._super, x21[21]._super, x22[0]._super,  x22[1]._super,  x22[2]._super,
                 x22[3]._super,  x22[4]._super,  x22[5]._super,  x22[6]._super,  x22[7]._super,
                 x22[8]._super,  x22[9]._super},
      Val32Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super, x24[0]._super,  x24[1]._super,  x24[2]._super,
                 x24[3]._super,  x24[4]._super,  x24[5]._super,  x24[6]._super,  x24[7]._super,
                 x24[8]._super,  x24[9]._super},
      Val32Array{x25[0]._super,  x25[1]._super,  x25[2]._super,  x25[3]._super,  x25[4]._super,
                 x25[5]._super,  x25[6]._super,  x25[7]._super,  x25[8]._super,  x25[9]._super,
                 x25[10]._super, x25[11]._super, x25[12]._super, x25[13]._super, x25[14]._super,
                 x25[15]._super, x25[16]._super, x25[17]._super, x25[18]._super, x25[19]._super,
                 x25[20]._super, x25[21]._super, x26[0]._super,  x26[1]._super,  x26[2]._super,
                 x26[3]._super,  x26[4]._super,  x26[5]._super,  x26[6]._super,  x26[7]._super,
                 x26[8]._super,  x26[9]._super},
      Val32Array{x27[0]._super,  x27[1]._super,  x27[2]._super,  x27[3]._super,  x27[4]._super,
                 x27[5]._super,  x27[6]._super,  x27[7]._super,  x27[8]._super,  x27[9]._super,
                 x27[10]._super, x27[11]._super, x27[12]._super, x27[13]._super, x27[14]._super,
                 x27[15]._super, x27[16]._super, x27[17]._super, x27[18]._super, x27[19]._super,
                 x27[20]._super, x27[21]._super, x28[0]._super,  x28[1]._super,  x28[2]._super,
                 x28[3]._super,  x28[4]._super,  x28[5]._super,  x28[6]._super,  x28[7]._super,
                 x28[8]._super,  x28[9]._super},
      Val32Array{x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super, x29[0]._super,  x29[1]._super,  x29[2]._super,
                 x29[3]._super,  x29[4]._super,  x29[5]._super,  x29[6]._super,  x29[7]._super,
                 x29[8]._super,  x29[9]._super,  x29[10]._super, x29[11]._super, x29[12]._super,
                 x29[13]._super, x29[14]._super, x29[15]._super, x29[16]._super, x29[17]._super,
                 x29[18]._super, x29[19]._super},
      Val32Array{x24[10]._super, x24[11]._super, x24[12]._super, x24[13]._super, x24[14]._super,
                 x24[15]._super, x24[16]._super, x24[17]._super, x24[18]._super, x24[19]._super,
                 x24[20]._super, x24[21]._super, x30[0]._super,  x30[1]._super,  x30[2]._super,
                 x30[3]._super,  x30[4]._super,  x30[5]._super,  x30[6]._super,  x30[7]._super,
                 x30[8]._super,  x30[9]._super,  x30[10]._super, x30[11]._super, x30[12]._super,
                 x30[13]._super, x30[14]._super, x30[15]._super, x30[16]._super, x30[17]._super,
                 x30[18]._super, x30[19]._super},
      Val32Array{x26[10]._super, x26[11]._super, x26[12]._super, x26[13]._super, x26[14]._super,
                 x26[15]._super, x26[16]._super, x26[17]._super, x26[18]._super, x26[19]._super,
                 x26[20]._super, x26[21]._super, x31[0]._super,  x31[1]._super,  x31[2]._super,
                 x31[3]._super,  x31[4]._super,  x31[5]._super,  x31[6]._super,  x31[7]._super,
                 x31[8]._super,  x31[9]._super,  x31[10]._super, x31[11]._super, x31[12]._super,
                 x31[13]._super, x31[14]._super, x31[15]._super, x31[16]._super, x31[17]._super,
                 x31[18]._super, x31[19]._super},
      Val32Array{x28[10]._super, x28[11]._super, x28[12]._super, x28[13]._super, x28[14]._super,
                 x28[15]._super, x28[16]._super, x28[17]._super, x28[18]._super, x28[19]._super,
                 x28[20]._super, x28[21]._super, x32[0]._super,  x32[1]._super,  x32[2]._super,
                 x32[3]._super,  x32[4]._super,  x32[5]._super,  x32[6]._super,  x32[7]._super,
                 x32[8]._super,  x32[9]._super,  x32[10]._super, x32[11]._super, x32[12]._super,
                 x32[13]._super, x32[14]._super, x32[15]._super, x32[16]._super, x32[17]._super,
                 x32[18]._super, x32[19]._super},
      Val32Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49,
                 x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65},
      TwoShortsStruct{.low = Val(59553), .high = Val(41663)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x67 = x66.aOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16_Struct x68 =
      execUnpackWithCarry(ctx, x67.low, x67.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  TwoShortsStruct x69 = x66.eOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16_Struct x70 =
      execUnpackWithCarry(ctx, x69.low, x69.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x71 = x68._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x72 = x70._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_1__8_Arm1_Super_SuperLayout> x73 = LAYOUT_LOOKUP(x3, arm1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:373)
  Val22Array x74 =
      Val22Array{x71[0]._super,  x71[1]._super,  x71[2]._super,  x71[3]._super,  x71[4]._super,
                 x71[5]._super,  x71[6]._super,  x71[7]._super,  x71[8]._super,  x71[9]._super,
                 x71[10]._super, x71[11]._super, x71[12]._super, x71[13]._super, x71[14]._super,
                 x71[15]._super, x71[16]._super, x71[17]._super, x71[18]._super, x71[19]._super,
                 x71[20]._super, x71[21]._super};
  Val22Array x75 =
      Val22Array{x71[22]._super, x71[23]._super, x71[24]._super, x71[25]._super, x71[26]._super,
                 x71[27]._super, x71[28]._super, x71[29]._super, x71[30]._super, x71[31]._super,
                 x72[0]._super,  x72[1]._super,  x72[2]._super,  x72[3]._super,  x72[4]._super,
                 x72[5]._super,  x72[6]._super,  x72[7]._super,  x72[8]._super,  x72[9]._super,
                 x72[10]._super, x72[11]._super};
  Val22Array x76 =
      Val22Array{x72[12]._super, x72[13]._super, x72[14]._super, x72[15]._super, x72[16]._super,
                 x72[17]._super, x72[18]._super, x72[19]._super, x72[20]._super, x72[21]._super,
                 x72[22]._super, x72[23]._super, x72[24]._super, x72[25]._super, x72[26]._super,
                 x72[27]._super, x72[28]._super, x72[29]._super, x72[30]._super, x72[31]._super,
                 Val(0),         Val(0)};
  Val22Array x77 = Val22Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,
                              x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55};
  Val22Array x78 = Val22Array{x56,    x57,    x58,    x59,    x60,    x61,    x62,    x63,
                              x64,    x65,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  Val x79 = x4.blk._super;
  Val x80 = x4.midx._super;
  if (to_size_t(Val(1))) {
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:376)
    RetTupleStruct x81 =
        exec_RetTuple(ctx,
                      x74,
                      x75,
                      x76,
                      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                      x77,
                      x78,
                      Val(9),
                      Val(21),
                      Val(0),
                      x79,
                      x80,
                      LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  NondetRegStruct24Array x82 = x4.arrD;
  Val24Array x83 =
      Val24Array{x82[0]._super,  x82[1]._super,  x82[2]._super,  x82[3]._super,  x82[4]._super,
                 x82[5]._super,  x82[6]._super,  x82[7]._super,  x82[8]._super,  x82[9]._super,
                 x82[10]._super, x82[11]._super, x82[12]._super, x82[13]._super, x82[14]._super,
                 x82[15]._super, x82[16]._super, x82[17]._super, x82[18]._super, x82[19]._super,
                 x82[20]._super, x82[21]._super, x82[22]._super, x82[23]._super};
  Val x84 = x4.rnd._super;
  if (to_size_t(Val(0))) {
    if (to_size_t(Val(1))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:380)
      RetTupleStruct x85 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(0),
                                         Val(22),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm0));
    }
    if (to_size_t(Val(0))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:383)
      RetTupleStruct x86 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(9),
                                         Val(17),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm1));
    }
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:379)
    RetTupleStruct x87 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x73, _super));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  RetTupleStruct x88 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x88;
}
RetTupleStruct execSha256mix_1__9_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<Sha256mix_1__9_Layout> layout2) {
  BoundLayout<Sha256mix_1__9__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:359)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:360)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:361)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:362)
  RetTupleStruct x8 = back_RetTuple(ctx, 7, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:363)
  RetTupleStruct x9 = back_RetTuple(ctx, 15, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:364)
  RetTupleStruct x10 = back_RetTuple(ctx, 16, arg1);
  // s2w(zirgen/circuit/keccak/sha256_for_keccak.zir:155)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:366)
  NondetRegStruct22Array x11 = x5.arrE;
  NondetRegStruct22Array x12 = x5.arrF;
  NondetRegStruct22Array x13 = x8.arrE;
  NondetRegStruct22Array x14 = x8.arrF;
  NondetRegStruct22Array x15 = x9.arrE;
  NondetRegStruct22Array x16 = x9.arrF;
  NondetRegStruct22Array x17 = x10.arrE;
  NondetRegStruct22Array x18 = x10.arrF;
  TwoShortsStruct x19 = execComputeW(
      ctx,
      Val32Array{x11[0]._super,  x11[1]._super,  x11[2]._super,  x11[3]._super,  x11[4]._super,
                 x11[5]._super,  x11[6]._super,  x11[7]._super,  x11[8]._super,  x11[9]._super,
                 x11[10]._super, x11[11]._super, x11[12]._super, x11[13]._super, x11[14]._super,
                 x11[15]._super, x11[16]._super, x11[17]._super, x11[18]._super, x11[19]._super,
                 x11[20]._super, x11[21]._super, x12[0]._super,  x12[1]._super,  x12[2]._super,
                 x12[3]._super,  x12[4]._super,  x12[5]._super,  x12[6]._super,  x12[7]._super,
                 x12[8]._super,  x12[9]._super},
      Val32Array{x13[0]._super,  x13[1]._super,  x13[2]._super,  x13[3]._super,  x13[4]._super,
                 x13[5]._super,  x13[6]._super,  x13[7]._super,  x13[8]._super,  x13[9]._super,
                 x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x14[0]._super,  x14[1]._super,  x14[2]._super,
                 x14[3]._super,  x14[4]._super,  x14[5]._super,  x14[6]._super,  x14[7]._super,
                 x14[8]._super,  x14[9]._super},
      Val32Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x16[0]._super,  x16[1]._super,  x16[2]._super,
                 x16[3]._super,  x16[4]._super,  x16[5]._super,  x16[6]._super,  x16[7]._super,
                 x16[8]._super,  x16[9]._super},
      Val32Array{x17[0]._super,  x17[1]._super,  x17[2]._super,  x17[3]._super,  x17[4]._super,
                 x17[5]._super,  x17[6]._super,  x17[7]._super,  x17[8]._super,  x17[9]._super,
                 x17[10]._super, x17[11]._super, x17[12]._super, x17[13]._super, x17[14]._super,
                 x17[15]._super, x17[16]._super, x17[17]._super, x17[18]._super, x17[19]._super,
                 x17[20]._super, x17[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super},
      LAYOUT_LOOKUP(layout2, packedW));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16_Struct x20 =
      execUnpackWithCarry(ctx, x19.low, x19.high, LAYOUT_LOOKUP(layout2, newW));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  NondetRegStruct22Array x21 = x4.arrA;
  NondetRegStruct22Array x22 = x4.arrB;
  NondetRegStruct22Array x23 = x5.arrA;
  NondetRegStruct22Array x24 = x5.arrB;
  NondetRegStruct22Array x25 = x6.arrA;
  NondetRegStruct22Array x26 = x6.arrB;
  NondetRegStruct22Array x27 = x7.arrA;
  NondetRegStruct22Array x28 = x7.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:369)
  NondetRegStruct22Array x29 = x4.arrC;
  NondetRegStruct22Array x30 = x5.arrC;
  NondetRegStruct22Array x31 = x6.arrC;
  NondetRegStruct22Array x32 = x7.arrC;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x33 = x20._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  Val x55 = x33[21]._super;
  Val x56 = x33[22]._super;
  Val x57 = x33[23]._super;
  Val x58 = x33[24]._super;
  Val x59 = x33[25]._super;
  Val x60 = x33[26]._super;
  Val x61 = x33[27]._super;
  Val x62 = x33[28]._super;
  Val x63 = x33[29]._super;
  Val x64 = x33[30]._super;
  Val x65 = x33[31]._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  ComputeAEStruct x66 = execComputeAE(
      ctx,
      Val32Array{x21[0]._super,  x21[1]._super,  x21[2]._super,  x21[3]._super,  x21[4]._super,
                 x21[5]._super,  x21[6]._super,  x21[7]._super,  x21[8]._super,  x21[9]._super,
                 x21[10]._super, x21[11]._super, x21[12]._super, x21[13]._super, x21[14]._super,
                 x21[15]._super, x21[16]._super, x21[17]._super, x21[18]._super, x21[19]._super,
                 x21[20]._super, x21[21]._super, x22[0]._super,  x22[1]._super,  x22[2]._super,
                 x22[3]._super,  x22[4]._super,  x22[5]._super,  x22[6]._super,  x22[7]._super,
                 x22[8]._super,  x22[9]._super},
      Val32Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super, x24[0]._super,  x24[1]._super,  x24[2]._super,
                 x24[3]._super,  x24[4]._super,  x24[5]._super,  x24[6]._super,  x24[7]._super,
                 x24[8]._super,  x24[9]._super},
      Val32Array{x25[0]._super,  x25[1]._super,  x25[2]._super,  x25[3]._super,  x25[4]._super,
                 x25[5]._super,  x25[6]._super,  x25[7]._super,  x25[8]._super,  x25[9]._super,
                 x25[10]._super, x25[11]._super, x25[12]._super, x25[13]._super, x25[14]._super,
                 x25[15]._super, x25[16]._super, x25[17]._super, x25[18]._super, x25[19]._super,
                 x25[20]._super, x25[21]._super, x26[0]._super,  x26[1]._super,  x26[2]._super,
                 x26[3]._super,  x26[4]._super,  x26[5]._super,  x26[6]._super,  x26[7]._super,
                 x26[8]._super,  x26[9]._super},
      Val32Array{x27[0]._super,  x27[1]._super,  x27[2]._super,  x27[3]._super,  x27[4]._super,
                 x27[5]._super,  x27[6]._super,  x27[7]._super,  x27[8]._super,  x27[9]._super,
                 x27[10]._super, x27[11]._super, x27[12]._super, x27[13]._super, x27[14]._super,
                 x27[15]._super, x27[16]._super, x27[17]._super, x27[18]._super, x27[19]._super,
                 x27[20]._super, x27[21]._super, x28[0]._super,  x28[1]._super,  x28[2]._super,
                 x28[3]._super,  x28[4]._super,  x28[5]._super,  x28[6]._super,  x28[7]._super,
                 x28[8]._super,  x28[9]._super},
      Val32Array{x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super, x29[0]._super,  x29[1]._super,  x29[2]._super,
                 x29[3]._super,  x29[4]._super,  x29[5]._super,  x29[6]._super,  x29[7]._super,
                 x29[8]._super,  x29[9]._super,  x29[10]._super, x29[11]._super, x29[12]._super,
                 x29[13]._super, x29[14]._super, x29[15]._super, x29[16]._super, x29[17]._super,
                 x29[18]._super, x29[19]._super},
      Val32Array{x24[10]._super, x24[11]._super, x24[12]._super, x24[13]._super, x24[14]._super,
                 x24[15]._super, x24[16]._super, x24[17]._super, x24[18]._super, x24[19]._super,
                 x24[20]._super, x24[21]._super, x30[0]._super,  x30[1]._super,  x30[2]._super,
                 x30[3]._super,  x30[4]._super,  x30[5]._super,  x30[6]._super,  x30[7]._super,
                 x30[8]._super,  x30[9]._super,  x30[10]._super, x30[11]._super, x30[12]._super,
                 x30[13]._super, x30[14]._super, x30[15]._super, x30[16]._super, x30[17]._super,
                 x30[18]._super, x30[19]._super},
      Val32Array{x26[10]._super, x26[11]._super, x26[12]._super, x26[13]._super, x26[14]._super,
                 x26[15]._super, x26[16]._super, x26[17]._super, x26[18]._super, x26[19]._super,
                 x26[20]._super, x26[21]._super, x31[0]._super,  x31[1]._super,  x31[2]._super,
                 x31[3]._super,  x31[4]._super,  x31[5]._super,  x31[6]._super,  x31[7]._super,
                 x31[8]._super,  x31[9]._super,  x31[10]._super, x31[11]._super, x31[12]._super,
                 x31[13]._super, x31[14]._super, x31[15]._super, x31[16]._super, x31[17]._super,
                 x31[18]._super, x31[19]._super},
      Val32Array{x28[10]._super, x28[11]._super, x28[12]._super, x28[13]._super, x28[14]._super,
                 x28[15]._super, x28[16]._super, x28[17]._super, x28[18]._super, x28[19]._super,
                 x28[20]._super, x28[21]._super, x32[0]._super,  x32[1]._super,  x32[2]._super,
                 x32[3]._super,  x32[4]._super,  x32[5]._super,  x32[6]._super,  x32[7]._super,
                 x32[8]._super,  x32[9]._super,  x32[10]._super, x32[11]._super, x32[12]._super,
                 x32[13]._super, x32[14]._super, x32[15]._super, x32[16]._super, x32[17]._super,
                 x32[18]._super, x32[19]._super},
      Val32Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49,
                 x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65},
      TwoShortsStruct{.low = Val(26187), .high = Val(43034)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x67 = x66.aOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16_Struct x68 =
      execUnpackWithCarry(ctx, x67.low, x67.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  TwoShortsStruct x69 = x66.eOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16_Struct x70 =
      execUnpackWithCarry(ctx, x69.low, x69.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x71 = x68._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x72 = x70._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_1__9_Arm1_Super_SuperLayout> x73 = LAYOUT_LOOKUP(x3, arm1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:373)
  Val22Array x74 =
      Val22Array{x71[0]._super,  x71[1]._super,  x71[2]._super,  x71[3]._super,  x71[4]._super,
                 x71[5]._super,  x71[6]._super,  x71[7]._super,  x71[8]._super,  x71[9]._super,
                 x71[10]._super, x71[11]._super, x71[12]._super, x71[13]._super, x71[14]._super,
                 x71[15]._super, x71[16]._super, x71[17]._super, x71[18]._super, x71[19]._super,
                 x71[20]._super, x71[21]._super};
  Val22Array x75 =
      Val22Array{x71[22]._super, x71[23]._super, x71[24]._super, x71[25]._super, x71[26]._super,
                 x71[27]._super, x71[28]._super, x71[29]._super, x71[30]._super, x71[31]._super,
                 x72[0]._super,  x72[1]._super,  x72[2]._super,  x72[3]._super,  x72[4]._super,
                 x72[5]._super,  x72[6]._super,  x72[7]._super,  x72[8]._super,  x72[9]._super,
                 x72[10]._super, x72[11]._super};
  Val22Array x76 =
      Val22Array{x72[12]._super, x72[13]._super, x72[14]._super, x72[15]._super, x72[16]._super,
                 x72[17]._super, x72[18]._super, x72[19]._super, x72[20]._super, x72[21]._super,
                 x72[22]._super, x72[23]._super, x72[24]._super, x72[25]._super, x72[26]._super,
                 x72[27]._super, x72[28]._super, x72[29]._super, x72[30]._super, x72[31]._super,
                 Val(0),         Val(0)};
  Val22Array x77 = Val22Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,
                              x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55};
  Val22Array x78 = Val22Array{x56,    x57,    x58,    x59,    x60,    x61,    x62,    x63,
                              x64,    x65,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  Val x79 = x4.blk._super;
  Val x80 = x4.midx._super;
  if (to_size_t(Val(1))) {
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:376)
    RetTupleStruct x81 =
        exec_RetTuple(ctx,
                      x74,
                      x75,
                      x76,
                      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                      x77,
                      x78,
                      Val(10),
                      Val(21),
                      Val(0),
                      x79,
                      x80,
                      LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  NondetRegStruct24Array x82 = x4.arrD;
  Val24Array x83 =
      Val24Array{x82[0]._super,  x82[1]._super,  x82[2]._super,  x82[3]._super,  x82[4]._super,
                 x82[5]._super,  x82[6]._super,  x82[7]._super,  x82[8]._super,  x82[9]._super,
                 x82[10]._super, x82[11]._super, x82[12]._super, x82[13]._super, x82[14]._super,
                 x82[15]._super, x82[16]._super, x82[17]._super, x82[18]._super, x82[19]._super,
                 x82[20]._super, x82[21]._super, x82[22]._super, x82[23]._super};
  Val x84 = x4.rnd._super;
  if (to_size_t(Val(0))) {
    if (to_size_t(Val(1))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:380)
      RetTupleStruct x85 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(0),
                                         Val(22),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm0));
    }
    if (to_size_t(Val(0))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:383)
      RetTupleStruct x86 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(9),
                                         Val(17),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm1));
    }
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:379)
    RetTupleStruct x87 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x73, _super));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  RetTupleStruct x88 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x88;
}
RetTupleStruct execSha256mix_1__10_(ExecContext& ctx,
                                    RetTupleStruct arg0,
                                    BoundLayout<RetTupleLayout> arg1,
                                    BoundLayout<Sha256mix_1__10_Layout> layout2) {
  BoundLayout<Sha256mix_1__10__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:359)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:360)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:361)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:362)
  RetTupleStruct x8 = back_RetTuple(ctx, 7, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:363)
  RetTupleStruct x9 = back_RetTuple(ctx, 15, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:364)
  RetTupleStruct x10 = back_RetTuple(ctx, 16, arg1);
  // s2w(zirgen/circuit/keccak/sha256_for_keccak.zir:155)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:366)
  NondetRegStruct22Array x11 = x5.arrE;
  NondetRegStruct22Array x12 = x5.arrF;
  NondetRegStruct22Array x13 = x8.arrE;
  NondetRegStruct22Array x14 = x8.arrF;
  NondetRegStruct22Array x15 = x9.arrE;
  NondetRegStruct22Array x16 = x9.arrF;
  NondetRegStruct22Array x17 = x10.arrE;
  NondetRegStruct22Array x18 = x10.arrF;
  TwoShortsStruct x19 = execComputeW(
      ctx,
      Val32Array{x11[0]._super,  x11[1]._super,  x11[2]._super,  x11[3]._super,  x11[4]._super,
                 x11[5]._super,  x11[6]._super,  x11[7]._super,  x11[8]._super,  x11[9]._super,
                 x11[10]._super, x11[11]._super, x11[12]._super, x11[13]._super, x11[14]._super,
                 x11[15]._super, x11[16]._super, x11[17]._super, x11[18]._super, x11[19]._super,
                 x11[20]._super, x11[21]._super, x12[0]._super,  x12[1]._super,  x12[2]._super,
                 x12[3]._super,  x12[4]._super,  x12[5]._super,  x12[6]._super,  x12[7]._super,
                 x12[8]._super,  x12[9]._super},
      Val32Array{x13[0]._super,  x13[1]._super,  x13[2]._super,  x13[3]._super,  x13[4]._super,
                 x13[5]._super,  x13[6]._super,  x13[7]._super,  x13[8]._super,  x13[9]._super,
                 x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x14[0]._super,  x14[1]._super,  x14[2]._super,
                 x14[3]._super,  x14[4]._super,  x14[5]._super,  x14[6]._super,  x14[7]._super,
                 x14[8]._super,  x14[9]._super},
      Val32Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x16[0]._super,  x16[1]._super,  x16[2]._super,
                 x16[3]._super,  x16[4]._super,  x16[5]._super,  x16[6]._super,  x16[7]._super,
                 x16[8]._super,  x16[9]._super},
      Val32Array{x17[0]._super,  x17[1]._super,  x17[2]._super,  x17[3]._super,  x17[4]._super,
                 x17[5]._super,  x17[6]._super,  x17[7]._super,  x17[8]._super,  x17[9]._super,
                 x17[10]._super, x17[11]._super, x17[12]._super, x17[13]._super, x17[14]._super,
                 x17[15]._super, x17[16]._super, x17[17]._super, x17[18]._super, x17[19]._super,
                 x17[20]._super, x17[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super},
      LAYOUT_LOOKUP(layout2, packedW));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16_Struct x20 =
      execUnpackWithCarry(ctx, x19.low, x19.high, LAYOUT_LOOKUP(layout2, newW));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  NondetRegStruct22Array x21 = x4.arrA;
  NondetRegStruct22Array x22 = x4.arrB;
  NondetRegStruct22Array x23 = x5.arrA;
  NondetRegStruct22Array x24 = x5.arrB;
  NondetRegStruct22Array x25 = x6.arrA;
  NondetRegStruct22Array x26 = x6.arrB;
  NondetRegStruct22Array x27 = x7.arrA;
  NondetRegStruct22Array x28 = x7.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:369)
  NondetRegStruct22Array x29 = x4.arrC;
  NondetRegStruct22Array x30 = x5.arrC;
  NondetRegStruct22Array x31 = x6.arrC;
  NondetRegStruct22Array x32 = x7.arrC;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x33 = x20._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  Val x55 = x33[21]._super;
  Val x56 = x33[22]._super;
  Val x57 = x33[23]._super;
  Val x58 = x33[24]._super;
  Val x59 = x33[25]._super;
  Val x60 = x33[26]._super;
  Val x61 = x33[27]._super;
  Val x62 = x33[28]._super;
  Val x63 = x33[29]._super;
  Val x64 = x33[30]._super;
  Val x65 = x33[31]._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  ComputeAEStruct x66 = execComputeAE(
      ctx,
      Val32Array{x21[0]._super,  x21[1]._super,  x21[2]._super,  x21[3]._super,  x21[4]._super,
                 x21[5]._super,  x21[6]._super,  x21[7]._super,  x21[8]._super,  x21[9]._super,
                 x21[10]._super, x21[11]._super, x21[12]._super, x21[13]._super, x21[14]._super,
                 x21[15]._super, x21[16]._super, x21[17]._super, x21[18]._super, x21[19]._super,
                 x21[20]._super, x21[21]._super, x22[0]._super,  x22[1]._super,  x22[2]._super,
                 x22[3]._super,  x22[4]._super,  x22[5]._super,  x22[6]._super,  x22[7]._super,
                 x22[8]._super,  x22[9]._super},
      Val32Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super, x24[0]._super,  x24[1]._super,  x24[2]._super,
                 x24[3]._super,  x24[4]._super,  x24[5]._super,  x24[6]._super,  x24[7]._super,
                 x24[8]._super,  x24[9]._super},
      Val32Array{x25[0]._super,  x25[1]._super,  x25[2]._super,  x25[3]._super,  x25[4]._super,
                 x25[5]._super,  x25[6]._super,  x25[7]._super,  x25[8]._super,  x25[9]._super,
                 x25[10]._super, x25[11]._super, x25[12]._super, x25[13]._super, x25[14]._super,
                 x25[15]._super, x25[16]._super, x25[17]._super, x25[18]._super, x25[19]._super,
                 x25[20]._super, x25[21]._super, x26[0]._super,  x26[1]._super,  x26[2]._super,
                 x26[3]._super,  x26[4]._super,  x26[5]._super,  x26[6]._super,  x26[7]._super,
                 x26[8]._super,  x26[9]._super},
      Val32Array{x27[0]._super,  x27[1]._super,  x27[2]._super,  x27[3]._super,  x27[4]._super,
                 x27[5]._super,  x27[6]._super,  x27[7]._super,  x27[8]._super,  x27[9]._super,
                 x27[10]._super, x27[11]._super, x27[12]._super, x27[13]._super, x27[14]._super,
                 x27[15]._super, x27[16]._super, x27[17]._super, x27[18]._super, x27[19]._super,
                 x27[20]._super, x27[21]._super, x28[0]._super,  x28[1]._super,  x28[2]._super,
                 x28[3]._super,  x28[4]._super,  x28[5]._super,  x28[6]._super,  x28[7]._super,
                 x28[8]._super,  x28[9]._super},
      Val32Array{x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super, x29[0]._super,  x29[1]._super,  x29[2]._super,
                 x29[3]._super,  x29[4]._super,  x29[5]._super,  x29[6]._super,  x29[7]._super,
                 x29[8]._super,  x29[9]._super,  x29[10]._super, x29[11]._super, x29[12]._super,
                 x29[13]._super, x29[14]._super, x29[15]._super, x29[16]._super, x29[17]._super,
                 x29[18]._super, x29[19]._super},
      Val32Array{x24[10]._super, x24[11]._super, x24[12]._super, x24[13]._super, x24[14]._super,
                 x24[15]._super, x24[16]._super, x24[17]._super, x24[18]._super, x24[19]._super,
                 x24[20]._super, x24[21]._super, x30[0]._super,  x30[1]._super,  x30[2]._super,
                 x30[3]._super,  x30[4]._super,  x30[5]._super,  x30[6]._super,  x30[7]._super,
                 x30[8]._super,  x30[9]._super,  x30[10]._super, x30[11]._super, x30[12]._super,
                 x30[13]._super, x30[14]._super, x30[15]._super, x30[16]._super, x30[17]._super,
                 x30[18]._super, x30[19]._super},
      Val32Array{x26[10]._super, x26[11]._super, x26[12]._super, x26[13]._super, x26[14]._super,
                 x26[15]._super, x26[16]._super, x26[17]._super, x26[18]._super, x26[19]._super,
                 x26[20]._super, x26[21]._super, x31[0]._super,  x31[1]._super,  x31[2]._super,
                 x31[3]._super,  x31[4]._super,  x31[5]._super,  x31[6]._super,  x31[7]._super,
                 x31[8]._super,  x31[9]._super,  x31[10]._super, x31[11]._super, x31[12]._super,
                 x31[13]._super, x31[14]._super, x31[15]._super, x31[16]._super, x31[17]._super,
                 x31[18]._super, x31[19]._super},
      Val32Array{x28[10]._super, x28[11]._super, x28[12]._super, x28[13]._super, x28[14]._super,
                 x28[15]._super, x28[16]._super, x28[17]._super, x28[18]._super, x28[19]._super,
                 x28[20]._super, x28[21]._super, x32[0]._super,  x32[1]._super,  x32[2]._super,
                 x32[3]._super,  x32[4]._super,  x32[5]._super,  x32[6]._super,  x32[7]._super,
                 x32[8]._super,  x32[9]._super,  x32[10]._super, x32[11]._super, x32[12]._super,
                 x32[13]._super, x32[14]._super, x32[15]._super, x32[16]._super, x32[17]._super,
                 x32[18]._super, x32[19]._super},
      Val32Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49,
                 x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65},
      TwoShortsStruct{.low = Val(35696), .high = Val(49739)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x67 = x66.aOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16_Struct x68 =
      execUnpackWithCarry(ctx, x67.low, x67.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  TwoShortsStruct x69 = x66.eOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16_Struct x70 =
      execUnpackWithCarry(ctx, x69.low, x69.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x71 = x68._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x72 = x70._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_1__10_Arm1_Super_SuperLayout> x73 = LAYOUT_LOOKUP(x3, arm1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:373)
  Val22Array x74 =
      Val22Array{x71[0]._super,  x71[1]._super,  x71[2]._super,  x71[3]._super,  x71[4]._super,
                 x71[5]._super,  x71[6]._super,  x71[7]._super,  x71[8]._super,  x71[9]._super,
                 x71[10]._super, x71[11]._super, x71[12]._super, x71[13]._super, x71[14]._super,
                 x71[15]._super, x71[16]._super, x71[17]._super, x71[18]._super, x71[19]._super,
                 x71[20]._super, x71[21]._super};
  Val22Array x75 =
      Val22Array{x71[22]._super, x71[23]._super, x71[24]._super, x71[25]._super, x71[26]._super,
                 x71[27]._super, x71[28]._super, x71[29]._super, x71[30]._super, x71[31]._super,
                 x72[0]._super,  x72[1]._super,  x72[2]._super,  x72[3]._super,  x72[4]._super,
                 x72[5]._super,  x72[6]._super,  x72[7]._super,  x72[8]._super,  x72[9]._super,
                 x72[10]._super, x72[11]._super};
  Val22Array x76 =
      Val22Array{x72[12]._super, x72[13]._super, x72[14]._super, x72[15]._super, x72[16]._super,
                 x72[17]._super, x72[18]._super, x72[19]._super, x72[20]._super, x72[21]._super,
                 x72[22]._super, x72[23]._super, x72[24]._super, x72[25]._super, x72[26]._super,
                 x72[27]._super, x72[28]._super, x72[29]._super, x72[30]._super, x72[31]._super,
                 Val(0),         Val(0)};
  Val22Array x77 = Val22Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,
                              x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55};
  Val22Array x78 = Val22Array{x56,    x57,    x58,    x59,    x60,    x61,    x62,    x63,
                              x64,    x65,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  Val x79 = x4.blk._super;
  Val x80 = x4.midx._super;
  if (to_size_t(Val(1))) {
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:376)
    RetTupleStruct x81 =
        exec_RetTuple(ctx,
                      x74,
                      x75,
                      x76,
                      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                      x77,
                      x78,
                      Val(11),
                      Val(21),
                      Val(0),
                      x79,
                      x80,
                      LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  NondetRegStruct24Array x82 = x4.arrD;
  Val24Array x83 =
      Val24Array{x82[0]._super,  x82[1]._super,  x82[2]._super,  x82[3]._super,  x82[4]._super,
                 x82[5]._super,  x82[6]._super,  x82[7]._super,  x82[8]._super,  x82[9]._super,
                 x82[10]._super, x82[11]._super, x82[12]._super, x82[13]._super, x82[14]._super,
                 x82[15]._super, x82[16]._super, x82[17]._super, x82[18]._super, x82[19]._super,
                 x82[20]._super, x82[21]._super, x82[22]._super, x82[23]._super};
  Val x84 = x4.rnd._super;
  if (to_size_t(Val(0))) {
    if (to_size_t(Val(1))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:380)
      RetTupleStruct x85 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(0),
                                         Val(22),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm0));
    }
    if (to_size_t(Val(0))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:383)
      RetTupleStruct x86 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(9),
                                         Val(17),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm1));
    }
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:379)
    RetTupleStruct x87 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x73, _super));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  RetTupleStruct x88 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x88;
}
RetTupleStruct execSha256mix_1__11_(ExecContext& ctx,
                                    RetTupleStruct arg0,
                                    BoundLayout<RetTupleLayout> arg1,
                                    BoundLayout<Sha256mix_1__11_Layout> layout2) {
  BoundLayout<Sha256mix_1__11__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:359)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:360)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:361)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:362)
  RetTupleStruct x8 = back_RetTuple(ctx, 7, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:363)
  RetTupleStruct x9 = back_RetTuple(ctx, 15, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:364)
  RetTupleStruct x10 = back_RetTuple(ctx, 16, arg1);
  // s2w(zirgen/circuit/keccak/sha256_for_keccak.zir:155)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:366)
  NondetRegStruct22Array x11 = x5.arrE;
  NondetRegStruct22Array x12 = x5.arrF;
  NondetRegStruct22Array x13 = x8.arrE;
  NondetRegStruct22Array x14 = x8.arrF;
  NondetRegStruct22Array x15 = x9.arrE;
  NondetRegStruct22Array x16 = x9.arrF;
  NondetRegStruct22Array x17 = x10.arrE;
  NondetRegStruct22Array x18 = x10.arrF;
  TwoShortsStruct x19 = execComputeW(
      ctx,
      Val32Array{x11[0]._super,  x11[1]._super,  x11[2]._super,  x11[3]._super,  x11[4]._super,
                 x11[5]._super,  x11[6]._super,  x11[7]._super,  x11[8]._super,  x11[9]._super,
                 x11[10]._super, x11[11]._super, x11[12]._super, x11[13]._super, x11[14]._super,
                 x11[15]._super, x11[16]._super, x11[17]._super, x11[18]._super, x11[19]._super,
                 x11[20]._super, x11[21]._super, x12[0]._super,  x12[1]._super,  x12[2]._super,
                 x12[3]._super,  x12[4]._super,  x12[5]._super,  x12[6]._super,  x12[7]._super,
                 x12[8]._super,  x12[9]._super},
      Val32Array{x13[0]._super,  x13[1]._super,  x13[2]._super,  x13[3]._super,  x13[4]._super,
                 x13[5]._super,  x13[6]._super,  x13[7]._super,  x13[8]._super,  x13[9]._super,
                 x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x14[0]._super,  x14[1]._super,  x14[2]._super,
                 x14[3]._super,  x14[4]._super,  x14[5]._super,  x14[6]._super,  x14[7]._super,
                 x14[8]._super,  x14[9]._super},
      Val32Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x16[0]._super,  x16[1]._super,  x16[2]._super,
                 x16[3]._super,  x16[4]._super,  x16[5]._super,  x16[6]._super,  x16[7]._super,
                 x16[8]._super,  x16[9]._super},
      Val32Array{x17[0]._super,  x17[1]._super,  x17[2]._super,  x17[3]._super,  x17[4]._super,
                 x17[5]._super,  x17[6]._super,  x17[7]._super,  x17[8]._super,  x17[9]._super,
                 x17[10]._super, x17[11]._super, x17[12]._super, x17[13]._super, x17[14]._super,
                 x17[15]._super, x17[16]._super, x17[17]._super, x17[18]._super, x17[19]._super,
                 x17[20]._super, x17[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super},
      LAYOUT_LOOKUP(layout2, packedW));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16_Struct x20 =
      execUnpackWithCarry(ctx, x19.low, x19.high, LAYOUT_LOOKUP(layout2, newW));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  NondetRegStruct22Array x21 = x4.arrA;
  NondetRegStruct22Array x22 = x4.arrB;
  NondetRegStruct22Array x23 = x5.arrA;
  NondetRegStruct22Array x24 = x5.arrB;
  NondetRegStruct22Array x25 = x6.arrA;
  NondetRegStruct22Array x26 = x6.arrB;
  NondetRegStruct22Array x27 = x7.arrA;
  NondetRegStruct22Array x28 = x7.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:369)
  NondetRegStruct22Array x29 = x4.arrC;
  NondetRegStruct22Array x30 = x5.arrC;
  NondetRegStruct22Array x31 = x6.arrC;
  NondetRegStruct22Array x32 = x7.arrC;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x33 = x20._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  Val x55 = x33[21]._super;
  Val x56 = x33[22]._super;
  Val x57 = x33[23]._super;
  Val x58 = x33[24]._super;
  Val x59 = x33[25]._super;
  Val x60 = x33[26]._super;
  Val x61 = x33[27]._super;
  Val x62 = x33[28]._super;
  Val x63 = x33[29]._super;
  Val x64 = x33[30]._super;
  Val x65 = x33[31]._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  ComputeAEStruct x66 = execComputeAE(
      ctx,
      Val32Array{x21[0]._super,  x21[1]._super,  x21[2]._super,  x21[3]._super,  x21[4]._super,
                 x21[5]._super,  x21[6]._super,  x21[7]._super,  x21[8]._super,  x21[9]._super,
                 x21[10]._super, x21[11]._super, x21[12]._super, x21[13]._super, x21[14]._super,
                 x21[15]._super, x21[16]._super, x21[17]._super, x21[18]._super, x21[19]._super,
                 x21[20]._super, x21[21]._super, x22[0]._super,  x22[1]._super,  x22[2]._super,
                 x22[3]._super,  x22[4]._super,  x22[5]._super,  x22[6]._super,  x22[7]._super,
                 x22[8]._super,  x22[9]._super},
      Val32Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super, x24[0]._super,  x24[1]._super,  x24[2]._super,
                 x24[3]._super,  x24[4]._super,  x24[5]._super,  x24[6]._super,  x24[7]._super,
                 x24[8]._super,  x24[9]._super},
      Val32Array{x25[0]._super,  x25[1]._super,  x25[2]._super,  x25[3]._super,  x25[4]._super,
                 x25[5]._super,  x25[6]._super,  x25[7]._super,  x25[8]._super,  x25[9]._super,
                 x25[10]._super, x25[11]._super, x25[12]._super, x25[13]._super, x25[14]._super,
                 x25[15]._super, x25[16]._super, x25[17]._super, x25[18]._super, x25[19]._super,
                 x25[20]._super, x25[21]._super, x26[0]._super,  x26[1]._super,  x26[2]._super,
                 x26[3]._super,  x26[4]._super,  x26[5]._super,  x26[6]._super,  x26[7]._super,
                 x26[8]._super,  x26[9]._super},
      Val32Array{x27[0]._super,  x27[1]._super,  x27[2]._super,  x27[3]._super,  x27[4]._super,
                 x27[5]._super,  x27[6]._super,  x27[7]._super,  x27[8]._super,  x27[9]._super,
                 x27[10]._super, x27[11]._super, x27[12]._super, x27[13]._super, x27[14]._super,
                 x27[15]._super, x27[16]._super, x27[17]._super, x27[18]._super, x27[19]._super,
                 x27[20]._super, x27[21]._super, x28[0]._super,  x28[1]._super,  x28[2]._super,
                 x28[3]._super,  x28[4]._super,  x28[5]._super,  x28[6]._super,  x28[7]._super,
                 x28[8]._super,  x28[9]._super},
      Val32Array{x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super, x29[0]._super,  x29[1]._super,  x29[2]._super,
                 x29[3]._super,  x29[4]._super,  x29[5]._super,  x29[6]._super,  x29[7]._super,
                 x29[8]._super,  x29[9]._super,  x29[10]._super, x29[11]._super, x29[12]._super,
                 x29[13]._super, x29[14]._super, x29[15]._super, x29[16]._super, x29[17]._super,
                 x29[18]._super, x29[19]._super},
      Val32Array{x24[10]._super, x24[11]._super, x24[12]._super, x24[13]._super, x24[14]._super,
                 x24[15]._super, x24[16]._super, x24[17]._super, x24[18]._super, x24[19]._super,
                 x24[20]._super, x24[21]._super, x30[0]._super,  x30[1]._super,  x30[2]._super,
                 x30[3]._super,  x30[4]._super,  x30[5]._super,  x30[6]._super,  x30[7]._super,
                 x30[8]._super,  x30[9]._super,  x30[10]._super, x30[11]._super, x30[12]._super,
                 x30[13]._super, x30[14]._super, x30[15]._super, x30[16]._super, x30[17]._super,
                 x30[18]._super, x30[19]._super},
      Val32Array{x26[10]._super, x26[11]._super, x26[12]._super, x26[13]._super, x26[14]._super,
                 x26[15]._super, x26[16]._super, x26[17]._super, x26[18]._super, x26[19]._super,
                 x26[20]._super, x26[21]._super, x31[0]._super,  x31[1]._super,  x31[2]._super,
                 x31[3]._super,  x31[4]._super,  x31[5]._super,  x31[6]._super,  x31[7]._super,
                 x31[8]._super,  x31[9]._super,  x31[10]._super, x31[11]._super, x31[12]._super,
                 x31[13]._super, x31[14]._super, x31[15]._super, x31[16]._super, x31[17]._super,
                 x31[18]._super, x31[19]._super},
      Val32Array{x28[10]._super, x28[11]._super, x28[12]._super, x28[13]._super, x28[14]._super,
                 x28[15]._super, x28[16]._super, x28[17]._super, x28[18]._super, x28[19]._super,
                 x28[20]._super, x28[21]._super, x32[0]._super,  x32[1]._super,  x32[2]._super,
                 x32[3]._super,  x32[4]._super,  x32[5]._super,  x32[6]._super,  x32[7]._super,
                 x32[8]._super,  x32[9]._super,  x32[10]._super, x32[11]._super, x32[12]._super,
                 x32[13]._super, x32[14]._super, x32[15]._super, x32[16]._super, x32[17]._super,
                 x32[18]._super, x32[19]._super},
      Val32Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49,
                 x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65},
      TwoShortsStruct{.low = Val(20899), .high = Val(51052)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x67 = x66.aOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16_Struct x68 =
      execUnpackWithCarry(ctx, x67.low, x67.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  TwoShortsStruct x69 = x66.eOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16_Struct x70 =
      execUnpackWithCarry(ctx, x69.low, x69.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x71 = x68._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x72 = x70._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_1__11_Arm1_Super_SuperLayout> x73 = LAYOUT_LOOKUP(x3, arm1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:373)
  Val22Array x74 =
      Val22Array{x71[0]._super,  x71[1]._super,  x71[2]._super,  x71[3]._super,  x71[4]._super,
                 x71[5]._super,  x71[6]._super,  x71[7]._super,  x71[8]._super,  x71[9]._super,
                 x71[10]._super, x71[11]._super, x71[12]._super, x71[13]._super, x71[14]._super,
                 x71[15]._super, x71[16]._super, x71[17]._super, x71[18]._super, x71[19]._super,
                 x71[20]._super, x71[21]._super};
  Val22Array x75 =
      Val22Array{x71[22]._super, x71[23]._super, x71[24]._super, x71[25]._super, x71[26]._super,
                 x71[27]._super, x71[28]._super, x71[29]._super, x71[30]._super, x71[31]._super,
                 x72[0]._super,  x72[1]._super,  x72[2]._super,  x72[3]._super,  x72[4]._super,
                 x72[5]._super,  x72[6]._super,  x72[7]._super,  x72[8]._super,  x72[9]._super,
                 x72[10]._super, x72[11]._super};
  Val22Array x76 =
      Val22Array{x72[12]._super, x72[13]._super, x72[14]._super, x72[15]._super, x72[16]._super,
                 x72[17]._super, x72[18]._super, x72[19]._super, x72[20]._super, x72[21]._super,
                 x72[22]._super, x72[23]._super, x72[24]._super, x72[25]._super, x72[26]._super,
                 x72[27]._super, x72[28]._super, x72[29]._super, x72[30]._super, x72[31]._super,
                 Val(0),         Val(0)};
  Val22Array x77 = Val22Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,
                              x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55};
  Val22Array x78 = Val22Array{x56,    x57,    x58,    x59,    x60,    x61,    x62,    x63,
                              x64,    x65,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  Val x79 = x4.blk._super;
  Val x80 = x4.midx._super;
  if (to_size_t(Val(1))) {
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:376)
    RetTupleStruct x81 =
        exec_RetTuple(ctx,
                      x74,
                      x75,
                      x76,
                      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                      x77,
                      x78,
                      Val(12),
                      Val(21),
                      Val(0),
                      x79,
                      x80,
                      LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  NondetRegStruct24Array x82 = x4.arrD;
  Val24Array x83 =
      Val24Array{x82[0]._super,  x82[1]._super,  x82[2]._super,  x82[3]._super,  x82[4]._super,
                 x82[5]._super,  x82[6]._super,  x82[7]._super,  x82[8]._super,  x82[9]._super,
                 x82[10]._super, x82[11]._super, x82[12]._super, x82[13]._super, x82[14]._super,
                 x82[15]._super, x82[16]._super, x82[17]._super, x82[18]._super, x82[19]._super,
                 x82[20]._super, x82[21]._super, x82[22]._super, x82[23]._super};
  Val x84 = x4.rnd._super;
  if (to_size_t(Val(0))) {
    if (to_size_t(Val(1))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:380)
      RetTupleStruct x85 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(0),
                                         Val(22),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm0));
    }
    if (to_size_t(Val(0))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:383)
      RetTupleStruct x86 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(9),
                                         Val(17),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm1));
    }
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:379)
    RetTupleStruct x87 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x73, _super));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  RetTupleStruct x88 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x88;
}
RetTupleStruct execSha256mix_1__12_(ExecContext& ctx,
                                    RetTupleStruct arg0,
                                    BoundLayout<RetTupleLayout> arg1,
                                    BoundLayout<Sha256mix_1__12_Layout> layout2) {
  BoundLayout<Sha256mix_1__12__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:359)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:360)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:361)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:362)
  RetTupleStruct x8 = back_RetTuple(ctx, 7, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:363)
  RetTupleStruct x9 = back_RetTuple(ctx, 15, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:364)
  RetTupleStruct x10 = back_RetTuple(ctx, 16, arg1);
  // s2w(zirgen/circuit/keccak/sha256_for_keccak.zir:155)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:366)
  NondetRegStruct22Array x11 = x5.arrE;
  NondetRegStruct22Array x12 = x5.arrF;
  NondetRegStruct22Array x13 = x8.arrE;
  NondetRegStruct22Array x14 = x8.arrF;
  NondetRegStruct22Array x15 = x9.arrE;
  NondetRegStruct22Array x16 = x9.arrF;
  NondetRegStruct22Array x17 = x10.arrE;
  NondetRegStruct22Array x18 = x10.arrF;
  TwoShortsStruct x19 = execComputeW(
      ctx,
      Val32Array{x11[0]._super,  x11[1]._super,  x11[2]._super,  x11[3]._super,  x11[4]._super,
                 x11[5]._super,  x11[6]._super,  x11[7]._super,  x11[8]._super,  x11[9]._super,
                 x11[10]._super, x11[11]._super, x11[12]._super, x11[13]._super, x11[14]._super,
                 x11[15]._super, x11[16]._super, x11[17]._super, x11[18]._super, x11[19]._super,
                 x11[20]._super, x11[21]._super, x12[0]._super,  x12[1]._super,  x12[2]._super,
                 x12[3]._super,  x12[4]._super,  x12[5]._super,  x12[6]._super,  x12[7]._super,
                 x12[8]._super,  x12[9]._super},
      Val32Array{x13[0]._super,  x13[1]._super,  x13[2]._super,  x13[3]._super,  x13[4]._super,
                 x13[5]._super,  x13[6]._super,  x13[7]._super,  x13[8]._super,  x13[9]._super,
                 x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x14[0]._super,  x14[1]._super,  x14[2]._super,
                 x14[3]._super,  x14[4]._super,  x14[5]._super,  x14[6]._super,  x14[7]._super,
                 x14[8]._super,  x14[9]._super},
      Val32Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x16[0]._super,  x16[1]._super,  x16[2]._super,
                 x16[3]._super,  x16[4]._super,  x16[5]._super,  x16[6]._super,  x16[7]._super,
                 x16[8]._super,  x16[9]._super},
      Val32Array{x17[0]._super,  x17[1]._super,  x17[2]._super,  x17[3]._super,  x17[4]._super,
                 x17[5]._super,  x17[6]._super,  x17[7]._super,  x17[8]._super,  x17[9]._super,
                 x17[10]._super, x17[11]._super, x17[12]._super, x17[13]._super, x17[14]._super,
                 x17[15]._super, x17[16]._super, x17[17]._super, x17[18]._super, x17[19]._super,
                 x17[20]._super, x17[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super},
      LAYOUT_LOOKUP(layout2, packedW));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16_Struct x20 =
      execUnpackWithCarry(ctx, x19.low, x19.high, LAYOUT_LOOKUP(layout2, newW));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  NondetRegStruct22Array x21 = x4.arrA;
  NondetRegStruct22Array x22 = x4.arrB;
  NondetRegStruct22Array x23 = x5.arrA;
  NondetRegStruct22Array x24 = x5.arrB;
  NondetRegStruct22Array x25 = x6.arrA;
  NondetRegStruct22Array x26 = x6.arrB;
  NondetRegStruct22Array x27 = x7.arrA;
  NondetRegStruct22Array x28 = x7.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:369)
  NondetRegStruct22Array x29 = x4.arrC;
  NondetRegStruct22Array x30 = x5.arrC;
  NondetRegStruct22Array x31 = x6.arrC;
  NondetRegStruct22Array x32 = x7.arrC;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x33 = x20._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  Val x55 = x33[21]._super;
  Val x56 = x33[22]._super;
  Val x57 = x33[23]._super;
  Val x58 = x33[24]._super;
  Val x59 = x33[25]._super;
  Val x60 = x33[26]._super;
  Val x61 = x33[27]._super;
  Val x62 = x33[28]._super;
  Val x63 = x33[29]._super;
  Val x64 = x33[30]._super;
  Val x65 = x33[31]._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  ComputeAEStruct x66 = execComputeAE(
      ctx,
      Val32Array{x21[0]._super,  x21[1]._super,  x21[2]._super,  x21[3]._super,  x21[4]._super,
                 x21[5]._super,  x21[6]._super,  x21[7]._super,  x21[8]._super,  x21[9]._super,
                 x21[10]._super, x21[11]._super, x21[12]._super, x21[13]._super, x21[14]._super,
                 x21[15]._super, x21[16]._super, x21[17]._super, x21[18]._super, x21[19]._super,
                 x21[20]._super, x21[21]._super, x22[0]._super,  x22[1]._super,  x22[2]._super,
                 x22[3]._super,  x22[4]._super,  x22[5]._super,  x22[6]._super,  x22[7]._super,
                 x22[8]._super,  x22[9]._super},
      Val32Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super, x24[0]._super,  x24[1]._super,  x24[2]._super,
                 x24[3]._super,  x24[4]._super,  x24[5]._super,  x24[6]._super,  x24[7]._super,
                 x24[8]._super,  x24[9]._super},
      Val32Array{x25[0]._super,  x25[1]._super,  x25[2]._super,  x25[3]._super,  x25[4]._super,
                 x25[5]._super,  x25[6]._super,  x25[7]._super,  x25[8]._super,  x25[9]._super,
                 x25[10]._super, x25[11]._super, x25[12]._super, x25[13]._super, x25[14]._super,
                 x25[15]._super, x25[16]._super, x25[17]._super, x25[18]._super, x25[19]._super,
                 x25[20]._super, x25[21]._super, x26[0]._super,  x26[1]._super,  x26[2]._super,
                 x26[3]._super,  x26[4]._super,  x26[5]._super,  x26[6]._super,  x26[7]._super,
                 x26[8]._super,  x26[9]._super},
      Val32Array{x27[0]._super,  x27[1]._super,  x27[2]._super,  x27[3]._super,  x27[4]._super,
                 x27[5]._super,  x27[6]._super,  x27[7]._super,  x27[8]._super,  x27[9]._super,
                 x27[10]._super, x27[11]._super, x27[12]._super, x27[13]._super, x27[14]._super,
                 x27[15]._super, x27[16]._super, x27[17]._super, x27[18]._super, x27[19]._super,
                 x27[20]._super, x27[21]._super, x28[0]._super,  x28[1]._super,  x28[2]._super,
                 x28[3]._super,  x28[4]._super,  x28[5]._super,  x28[6]._super,  x28[7]._super,
                 x28[8]._super,  x28[9]._super},
      Val32Array{x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super, x29[0]._super,  x29[1]._super,  x29[2]._super,
                 x29[3]._super,  x29[4]._super,  x29[5]._super,  x29[6]._super,  x29[7]._super,
                 x29[8]._super,  x29[9]._super,  x29[10]._super, x29[11]._super, x29[12]._super,
                 x29[13]._super, x29[14]._super, x29[15]._super, x29[16]._super, x29[17]._super,
                 x29[18]._super, x29[19]._super},
      Val32Array{x24[10]._super, x24[11]._super, x24[12]._super, x24[13]._super, x24[14]._super,
                 x24[15]._super, x24[16]._super, x24[17]._super, x24[18]._super, x24[19]._super,
                 x24[20]._super, x24[21]._super, x30[0]._super,  x30[1]._super,  x30[2]._super,
                 x30[3]._super,  x30[4]._super,  x30[5]._super,  x30[6]._super,  x30[7]._super,
                 x30[8]._super,  x30[9]._super,  x30[10]._super, x30[11]._super, x30[12]._super,
                 x30[13]._super, x30[14]._super, x30[15]._super, x30[16]._super, x30[17]._super,
                 x30[18]._super, x30[19]._super},
      Val32Array{x26[10]._super, x26[11]._super, x26[12]._super, x26[13]._super, x26[14]._super,
                 x26[15]._super, x26[16]._super, x26[17]._super, x26[18]._super, x26[19]._super,
                 x26[20]._super, x26[21]._super, x31[0]._super,  x31[1]._super,  x31[2]._super,
                 x31[3]._super,  x31[4]._super,  x31[5]._super,  x31[6]._super,  x31[7]._super,
                 x31[8]._super,  x31[9]._super,  x31[10]._super, x31[11]._super, x31[12]._super,
                 x31[13]._super, x31[14]._super, x31[15]._super, x31[16]._super, x31[17]._super,
                 x31[18]._super, x31[19]._super},
      Val32Array{x28[10]._super, x28[11]._super, x28[12]._super, x28[13]._super, x28[14]._super,
                 x28[15]._super, x28[16]._super, x28[17]._super, x28[18]._super, x28[19]._super,
                 x28[20]._super, x28[21]._super, x32[0]._super,  x32[1]._super,  x32[2]._super,
                 x32[3]._super,  x32[4]._super,  x32[5]._super,  x32[6]._super,  x32[7]._super,
                 x32[8]._super,  x32[9]._super,  x32[10]._super, x32[11]._super, x32[12]._super,
                 x32[13]._super, x32[14]._super, x32[15]._super, x32[16]._super, x32[17]._super,
                 x32[18]._super, x32[19]._super},
      Val32Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49,
                 x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65},
      TwoShortsStruct{.low = Val(59417), .high = Val(53650)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x67 = x66.aOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16_Struct x68 =
      execUnpackWithCarry(ctx, x67.low, x67.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  TwoShortsStruct x69 = x66.eOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16_Struct x70 =
      execUnpackWithCarry(ctx, x69.low, x69.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x71 = x68._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x72 = x70._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_1__12_Arm1_Super_SuperLayout> x73 = LAYOUT_LOOKUP(x3, arm1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:373)
  Val22Array x74 =
      Val22Array{x71[0]._super,  x71[1]._super,  x71[2]._super,  x71[3]._super,  x71[4]._super,
                 x71[5]._super,  x71[6]._super,  x71[7]._super,  x71[8]._super,  x71[9]._super,
                 x71[10]._super, x71[11]._super, x71[12]._super, x71[13]._super, x71[14]._super,
                 x71[15]._super, x71[16]._super, x71[17]._super, x71[18]._super, x71[19]._super,
                 x71[20]._super, x71[21]._super};
  Val22Array x75 =
      Val22Array{x71[22]._super, x71[23]._super, x71[24]._super, x71[25]._super, x71[26]._super,
                 x71[27]._super, x71[28]._super, x71[29]._super, x71[30]._super, x71[31]._super,
                 x72[0]._super,  x72[1]._super,  x72[2]._super,  x72[3]._super,  x72[4]._super,
                 x72[5]._super,  x72[6]._super,  x72[7]._super,  x72[8]._super,  x72[9]._super,
                 x72[10]._super, x72[11]._super};
  Val22Array x76 =
      Val22Array{x72[12]._super, x72[13]._super, x72[14]._super, x72[15]._super, x72[16]._super,
                 x72[17]._super, x72[18]._super, x72[19]._super, x72[20]._super, x72[21]._super,
                 x72[22]._super, x72[23]._super, x72[24]._super, x72[25]._super, x72[26]._super,
                 x72[27]._super, x72[28]._super, x72[29]._super, x72[30]._super, x72[31]._super,
                 Val(0),         Val(0)};
  Val22Array x77 = Val22Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,
                              x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55};
  Val22Array x78 = Val22Array{x56,    x57,    x58,    x59,    x60,    x61,    x62,    x63,
                              x64,    x65,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  Val x79 = x4.blk._super;
  Val x80 = x4.midx._super;
  if (to_size_t(Val(1))) {
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:376)
    RetTupleStruct x81 =
        exec_RetTuple(ctx,
                      x74,
                      x75,
                      x76,
                      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                      x77,
                      x78,
                      Val(13),
                      Val(21),
                      Val(0),
                      x79,
                      x80,
                      LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  NondetRegStruct24Array x82 = x4.arrD;
  Val24Array x83 =
      Val24Array{x82[0]._super,  x82[1]._super,  x82[2]._super,  x82[3]._super,  x82[4]._super,
                 x82[5]._super,  x82[6]._super,  x82[7]._super,  x82[8]._super,  x82[9]._super,
                 x82[10]._super, x82[11]._super, x82[12]._super, x82[13]._super, x82[14]._super,
                 x82[15]._super, x82[16]._super, x82[17]._super, x82[18]._super, x82[19]._super,
                 x82[20]._super, x82[21]._super, x82[22]._super, x82[23]._super};
  Val x84 = x4.rnd._super;
  if (to_size_t(Val(0))) {
    if (to_size_t(Val(1))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:380)
      RetTupleStruct x85 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(0),
                                         Val(22),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm0));
    }
    if (to_size_t(Val(0))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:383)
      RetTupleStruct x86 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(9),
                                         Val(17),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm1));
    }
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:379)
    RetTupleStruct x87 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x73, _super));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  RetTupleStruct x88 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x88;
}
RetTupleStruct execSha256mix_1__13_(ExecContext& ctx,
                                    RetTupleStruct arg0,
                                    BoundLayout<RetTupleLayout> arg1,
                                    BoundLayout<Sha256mix_1__13_Layout> layout2) {
  BoundLayout<Sha256mix_1__13__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:359)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:360)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:361)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:362)
  RetTupleStruct x8 = back_RetTuple(ctx, 7, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:363)
  RetTupleStruct x9 = back_RetTuple(ctx, 15, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:364)
  RetTupleStruct x10 = back_RetTuple(ctx, 16, arg1);
  // s2w(zirgen/circuit/keccak/sha256_for_keccak.zir:155)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:366)
  NondetRegStruct22Array x11 = x5.arrE;
  NondetRegStruct22Array x12 = x5.arrF;
  NondetRegStruct22Array x13 = x8.arrE;
  NondetRegStruct22Array x14 = x8.arrF;
  NondetRegStruct22Array x15 = x9.arrE;
  NondetRegStruct22Array x16 = x9.arrF;
  NondetRegStruct22Array x17 = x10.arrE;
  NondetRegStruct22Array x18 = x10.arrF;
  TwoShortsStruct x19 = execComputeW(
      ctx,
      Val32Array{x11[0]._super,  x11[1]._super,  x11[2]._super,  x11[3]._super,  x11[4]._super,
                 x11[5]._super,  x11[6]._super,  x11[7]._super,  x11[8]._super,  x11[9]._super,
                 x11[10]._super, x11[11]._super, x11[12]._super, x11[13]._super, x11[14]._super,
                 x11[15]._super, x11[16]._super, x11[17]._super, x11[18]._super, x11[19]._super,
                 x11[20]._super, x11[21]._super, x12[0]._super,  x12[1]._super,  x12[2]._super,
                 x12[3]._super,  x12[4]._super,  x12[5]._super,  x12[6]._super,  x12[7]._super,
                 x12[8]._super,  x12[9]._super},
      Val32Array{x13[0]._super,  x13[1]._super,  x13[2]._super,  x13[3]._super,  x13[4]._super,
                 x13[5]._super,  x13[6]._super,  x13[7]._super,  x13[8]._super,  x13[9]._super,
                 x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x14[0]._super,  x14[1]._super,  x14[2]._super,
                 x14[3]._super,  x14[4]._super,  x14[5]._super,  x14[6]._super,  x14[7]._super,
                 x14[8]._super,  x14[9]._super},
      Val32Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x16[0]._super,  x16[1]._super,  x16[2]._super,
                 x16[3]._super,  x16[4]._super,  x16[5]._super,  x16[6]._super,  x16[7]._super,
                 x16[8]._super,  x16[9]._super},
      Val32Array{x17[0]._super,  x17[1]._super,  x17[2]._super,  x17[3]._super,  x17[4]._super,
                 x17[5]._super,  x17[6]._super,  x17[7]._super,  x17[8]._super,  x17[9]._super,
                 x17[10]._super, x17[11]._super, x17[12]._super, x17[13]._super, x17[14]._super,
                 x17[15]._super, x17[16]._super, x17[17]._super, x17[18]._super, x17[19]._super,
                 x17[20]._super, x17[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super},
      LAYOUT_LOOKUP(layout2, packedW));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16_Struct x20 =
      execUnpackWithCarry(ctx, x19.low, x19.high, LAYOUT_LOOKUP(layout2, newW));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  NondetRegStruct22Array x21 = x4.arrA;
  NondetRegStruct22Array x22 = x4.arrB;
  NondetRegStruct22Array x23 = x5.arrA;
  NondetRegStruct22Array x24 = x5.arrB;
  NondetRegStruct22Array x25 = x6.arrA;
  NondetRegStruct22Array x26 = x6.arrB;
  NondetRegStruct22Array x27 = x7.arrA;
  NondetRegStruct22Array x28 = x7.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:369)
  NondetRegStruct22Array x29 = x4.arrC;
  NondetRegStruct22Array x30 = x5.arrC;
  NondetRegStruct22Array x31 = x6.arrC;
  NondetRegStruct22Array x32 = x7.arrC;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x33 = x20._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  Val x55 = x33[21]._super;
  Val x56 = x33[22]._super;
  Val x57 = x33[23]._super;
  Val x58 = x33[24]._super;
  Val x59 = x33[25]._super;
  Val x60 = x33[26]._super;
  Val x61 = x33[27]._super;
  Val x62 = x33[28]._super;
  Val x63 = x33[29]._super;
  Val x64 = x33[30]._super;
  Val x65 = x33[31]._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  ComputeAEStruct x66 = execComputeAE(
      ctx,
      Val32Array{x21[0]._super,  x21[1]._super,  x21[2]._super,  x21[3]._super,  x21[4]._super,
                 x21[5]._super,  x21[6]._super,  x21[7]._super,  x21[8]._super,  x21[9]._super,
                 x21[10]._super, x21[11]._super, x21[12]._super, x21[13]._super, x21[14]._super,
                 x21[15]._super, x21[16]._super, x21[17]._super, x21[18]._super, x21[19]._super,
                 x21[20]._super, x21[21]._super, x22[0]._super,  x22[1]._super,  x22[2]._super,
                 x22[3]._super,  x22[4]._super,  x22[5]._super,  x22[6]._super,  x22[7]._super,
                 x22[8]._super,  x22[9]._super},
      Val32Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super, x24[0]._super,  x24[1]._super,  x24[2]._super,
                 x24[3]._super,  x24[4]._super,  x24[5]._super,  x24[6]._super,  x24[7]._super,
                 x24[8]._super,  x24[9]._super},
      Val32Array{x25[0]._super,  x25[1]._super,  x25[2]._super,  x25[3]._super,  x25[4]._super,
                 x25[5]._super,  x25[6]._super,  x25[7]._super,  x25[8]._super,  x25[9]._super,
                 x25[10]._super, x25[11]._super, x25[12]._super, x25[13]._super, x25[14]._super,
                 x25[15]._super, x25[16]._super, x25[17]._super, x25[18]._super, x25[19]._super,
                 x25[20]._super, x25[21]._super, x26[0]._super,  x26[1]._super,  x26[2]._super,
                 x26[3]._super,  x26[4]._super,  x26[5]._super,  x26[6]._super,  x26[7]._super,
                 x26[8]._super,  x26[9]._super},
      Val32Array{x27[0]._super,  x27[1]._super,  x27[2]._super,  x27[3]._super,  x27[4]._super,
                 x27[5]._super,  x27[6]._super,  x27[7]._super,  x27[8]._super,  x27[9]._super,
                 x27[10]._super, x27[11]._super, x27[12]._super, x27[13]._super, x27[14]._super,
                 x27[15]._super, x27[16]._super, x27[17]._super, x27[18]._super, x27[19]._super,
                 x27[20]._super, x27[21]._super, x28[0]._super,  x28[1]._super,  x28[2]._super,
                 x28[3]._super,  x28[4]._super,  x28[5]._super,  x28[6]._super,  x28[7]._super,
                 x28[8]._super,  x28[9]._super},
      Val32Array{x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super, x29[0]._super,  x29[1]._super,  x29[2]._super,
                 x29[3]._super,  x29[4]._super,  x29[5]._super,  x29[6]._super,  x29[7]._super,
                 x29[8]._super,  x29[9]._super,  x29[10]._super, x29[11]._super, x29[12]._super,
                 x29[13]._super, x29[14]._super, x29[15]._super, x29[16]._super, x29[17]._super,
                 x29[18]._super, x29[19]._super},
      Val32Array{x24[10]._super, x24[11]._super, x24[12]._super, x24[13]._super, x24[14]._super,
                 x24[15]._super, x24[16]._super, x24[17]._super, x24[18]._super, x24[19]._super,
                 x24[20]._super, x24[21]._super, x30[0]._super,  x30[1]._super,  x30[2]._super,
                 x30[3]._super,  x30[4]._super,  x30[5]._super,  x30[6]._super,  x30[7]._super,
                 x30[8]._super,  x30[9]._super,  x30[10]._super, x30[11]._super, x30[12]._super,
                 x30[13]._super, x30[14]._super, x30[15]._super, x30[16]._super, x30[17]._super,
                 x30[18]._super, x30[19]._super},
      Val32Array{x26[10]._super, x26[11]._super, x26[12]._super, x26[13]._super, x26[14]._super,
                 x26[15]._super, x26[16]._super, x26[17]._super, x26[18]._super, x26[19]._super,
                 x26[20]._super, x26[21]._super, x31[0]._super,  x31[1]._super,  x31[2]._super,
                 x31[3]._super,  x31[4]._super,  x31[5]._super,  x31[6]._super,  x31[7]._super,
                 x31[8]._super,  x31[9]._super,  x31[10]._super, x31[11]._super, x31[12]._super,
                 x31[13]._super, x31[14]._super, x31[15]._super, x31[16]._super, x31[17]._super,
                 x31[18]._super, x31[19]._super},
      Val32Array{x28[10]._super, x28[11]._super, x28[12]._super, x28[13]._super, x28[14]._super,
                 x28[15]._super, x28[16]._super, x28[17]._super, x28[18]._super, x28[19]._super,
                 x28[20]._super, x28[21]._super, x32[0]._super,  x32[1]._super,  x32[2]._super,
                 x32[3]._super,  x32[4]._super,  x32[5]._super,  x32[6]._super,  x32[7]._super,
                 x32[8]._super,  x32[9]._super,  x32[10]._super, x32[11]._super, x32[12]._super,
                 x32[13]._super, x32[14]._super, x32[15]._super, x32[16]._super, x32[17]._super,
                 x32[18]._super, x32[19]._super},
      Val32Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49,
                 x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65},
      TwoShortsStruct{.low = Val(1572), .high = Val(54937)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x67 = x66.aOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16_Struct x68 =
      execUnpackWithCarry(ctx, x67.low, x67.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  TwoShortsStruct x69 = x66.eOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16_Struct x70 =
      execUnpackWithCarry(ctx, x69.low, x69.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x71 = x68._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x72 = x70._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_1__13_Arm1_Super_SuperLayout> x73 = LAYOUT_LOOKUP(x3, arm1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:373)
  Val22Array x74 =
      Val22Array{x71[0]._super,  x71[1]._super,  x71[2]._super,  x71[3]._super,  x71[4]._super,
                 x71[5]._super,  x71[6]._super,  x71[7]._super,  x71[8]._super,  x71[9]._super,
                 x71[10]._super, x71[11]._super, x71[12]._super, x71[13]._super, x71[14]._super,
                 x71[15]._super, x71[16]._super, x71[17]._super, x71[18]._super, x71[19]._super,
                 x71[20]._super, x71[21]._super};
  Val22Array x75 =
      Val22Array{x71[22]._super, x71[23]._super, x71[24]._super, x71[25]._super, x71[26]._super,
                 x71[27]._super, x71[28]._super, x71[29]._super, x71[30]._super, x71[31]._super,
                 x72[0]._super,  x72[1]._super,  x72[2]._super,  x72[3]._super,  x72[4]._super,
                 x72[5]._super,  x72[6]._super,  x72[7]._super,  x72[8]._super,  x72[9]._super,
                 x72[10]._super, x72[11]._super};
  Val22Array x76 =
      Val22Array{x72[12]._super, x72[13]._super, x72[14]._super, x72[15]._super, x72[16]._super,
                 x72[17]._super, x72[18]._super, x72[19]._super, x72[20]._super, x72[21]._super,
                 x72[22]._super, x72[23]._super, x72[24]._super, x72[25]._super, x72[26]._super,
                 x72[27]._super, x72[28]._super, x72[29]._super, x72[30]._super, x72[31]._super,
                 Val(0),         Val(0)};
  Val22Array x77 = Val22Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,
                              x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55};
  Val22Array x78 = Val22Array{x56,    x57,    x58,    x59,    x60,    x61,    x62,    x63,
                              x64,    x65,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  Val x79 = x4.blk._super;
  Val x80 = x4.midx._super;
  if (to_size_t(Val(1))) {
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:376)
    RetTupleStruct x81 =
        exec_RetTuple(ctx,
                      x74,
                      x75,
                      x76,
                      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                      x77,
                      x78,
                      Val(14),
                      Val(21),
                      Val(0),
                      x79,
                      x80,
                      LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  NondetRegStruct24Array x82 = x4.arrD;
  Val24Array x83 =
      Val24Array{x82[0]._super,  x82[1]._super,  x82[2]._super,  x82[3]._super,  x82[4]._super,
                 x82[5]._super,  x82[6]._super,  x82[7]._super,  x82[8]._super,  x82[9]._super,
                 x82[10]._super, x82[11]._super, x82[12]._super, x82[13]._super, x82[14]._super,
                 x82[15]._super, x82[16]._super, x82[17]._super, x82[18]._super, x82[19]._super,
                 x82[20]._super, x82[21]._super, x82[22]._super, x82[23]._super};
  Val x84 = x4.rnd._super;
  if (to_size_t(Val(0))) {
    if (to_size_t(Val(1))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:380)
      RetTupleStruct x85 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(0),
                                         Val(22),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm0));
    }
    if (to_size_t(Val(0))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:383)
      RetTupleStruct x86 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(9),
                                         Val(17),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm1));
    }
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:379)
    RetTupleStruct x87 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x73, _super));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  RetTupleStruct x88 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x88;
}
RetTupleStruct execSha256mix_1__14_(ExecContext& ctx,
                                    RetTupleStruct arg0,
                                    BoundLayout<RetTupleLayout> arg1,
                                    BoundLayout<Sha256mix_1__14_Layout> layout2) {
  BoundLayout<Sha256mix_1__14__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:359)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:360)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:361)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:362)
  RetTupleStruct x8 = back_RetTuple(ctx, 7, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:363)
  RetTupleStruct x9 = back_RetTuple(ctx, 15, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:364)
  RetTupleStruct x10 = back_RetTuple(ctx, 16, arg1);
  // s2w(zirgen/circuit/keccak/sha256_for_keccak.zir:155)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:366)
  NondetRegStruct22Array x11 = x5.arrE;
  NondetRegStruct22Array x12 = x5.arrF;
  NondetRegStruct22Array x13 = x8.arrE;
  NondetRegStruct22Array x14 = x8.arrF;
  NondetRegStruct22Array x15 = x9.arrE;
  NondetRegStruct22Array x16 = x9.arrF;
  NondetRegStruct22Array x17 = x10.arrE;
  NondetRegStruct22Array x18 = x10.arrF;
  TwoShortsStruct x19 = execComputeW(
      ctx,
      Val32Array{x11[0]._super,  x11[1]._super,  x11[2]._super,  x11[3]._super,  x11[4]._super,
                 x11[5]._super,  x11[6]._super,  x11[7]._super,  x11[8]._super,  x11[9]._super,
                 x11[10]._super, x11[11]._super, x11[12]._super, x11[13]._super, x11[14]._super,
                 x11[15]._super, x11[16]._super, x11[17]._super, x11[18]._super, x11[19]._super,
                 x11[20]._super, x11[21]._super, x12[0]._super,  x12[1]._super,  x12[2]._super,
                 x12[3]._super,  x12[4]._super,  x12[5]._super,  x12[6]._super,  x12[7]._super,
                 x12[8]._super,  x12[9]._super},
      Val32Array{x13[0]._super,  x13[1]._super,  x13[2]._super,  x13[3]._super,  x13[4]._super,
                 x13[5]._super,  x13[6]._super,  x13[7]._super,  x13[8]._super,  x13[9]._super,
                 x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x14[0]._super,  x14[1]._super,  x14[2]._super,
                 x14[3]._super,  x14[4]._super,  x14[5]._super,  x14[6]._super,  x14[7]._super,
                 x14[8]._super,  x14[9]._super},
      Val32Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x16[0]._super,  x16[1]._super,  x16[2]._super,
                 x16[3]._super,  x16[4]._super,  x16[5]._super,  x16[6]._super,  x16[7]._super,
                 x16[8]._super,  x16[9]._super},
      Val32Array{x17[0]._super,  x17[1]._super,  x17[2]._super,  x17[3]._super,  x17[4]._super,
                 x17[5]._super,  x17[6]._super,  x17[7]._super,  x17[8]._super,  x17[9]._super,
                 x17[10]._super, x17[11]._super, x17[12]._super, x17[13]._super, x17[14]._super,
                 x17[15]._super, x17[16]._super, x17[17]._super, x17[18]._super, x17[19]._super,
                 x17[20]._super, x17[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super},
      LAYOUT_LOOKUP(layout2, packedW));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16_Struct x20 =
      execUnpackWithCarry(ctx, x19.low, x19.high, LAYOUT_LOOKUP(layout2, newW));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  NondetRegStruct22Array x21 = x4.arrA;
  NondetRegStruct22Array x22 = x4.arrB;
  NondetRegStruct22Array x23 = x5.arrA;
  NondetRegStruct22Array x24 = x5.arrB;
  NondetRegStruct22Array x25 = x6.arrA;
  NondetRegStruct22Array x26 = x6.arrB;
  NondetRegStruct22Array x27 = x7.arrA;
  NondetRegStruct22Array x28 = x7.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:369)
  NondetRegStruct22Array x29 = x4.arrC;
  NondetRegStruct22Array x30 = x5.arrC;
  NondetRegStruct22Array x31 = x6.arrC;
  NondetRegStruct22Array x32 = x7.arrC;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x33 = x20._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  Val x55 = x33[21]._super;
  Val x56 = x33[22]._super;
  Val x57 = x33[23]._super;
  Val x58 = x33[24]._super;
  Val x59 = x33[25]._super;
  Val x60 = x33[26]._super;
  Val x61 = x33[27]._super;
  Val x62 = x33[28]._super;
  Val x63 = x33[29]._super;
  Val x64 = x33[30]._super;
  Val x65 = x33[31]._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  ComputeAEStruct x66 = execComputeAE(
      ctx,
      Val32Array{x21[0]._super,  x21[1]._super,  x21[2]._super,  x21[3]._super,  x21[4]._super,
                 x21[5]._super,  x21[6]._super,  x21[7]._super,  x21[8]._super,  x21[9]._super,
                 x21[10]._super, x21[11]._super, x21[12]._super, x21[13]._super, x21[14]._super,
                 x21[15]._super, x21[16]._super, x21[17]._super, x21[18]._super, x21[19]._super,
                 x21[20]._super, x21[21]._super, x22[0]._super,  x22[1]._super,  x22[2]._super,
                 x22[3]._super,  x22[4]._super,  x22[5]._super,  x22[6]._super,  x22[7]._super,
                 x22[8]._super,  x22[9]._super},
      Val32Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super, x24[0]._super,  x24[1]._super,  x24[2]._super,
                 x24[3]._super,  x24[4]._super,  x24[5]._super,  x24[6]._super,  x24[7]._super,
                 x24[8]._super,  x24[9]._super},
      Val32Array{x25[0]._super,  x25[1]._super,  x25[2]._super,  x25[3]._super,  x25[4]._super,
                 x25[5]._super,  x25[6]._super,  x25[7]._super,  x25[8]._super,  x25[9]._super,
                 x25[10]._super, x25[11]._super, x25[12]._super, x25[13]._super, x25[14]._super,
                 x25[15]._super, x25[16]._super, x25[17]._super, x25[18]._super, x25[19]._super,
                 x25[20]._super, x25[21]._super, x26[0]._super,  x26[1]._super,  x26[2]._super,
                 x26[3]._super,  x26[4]._super,  x26[5]._super,  x26[6]._super,  x26[7]._super,
                 x26[8]._super,  x26[9]._super},
      Val32Array{x27[0]._super,  x27[1]._super,  x27[2]._super,  x27[3]._super,  x27[4]._super,
                 x27[5]._super,  x27[6]._super,  x27[7]._super,  x27[8]._super,  x27[9]._super,
                 x27[10]._super, x27[11]._super, x27[12]._super, x27[13]._super, x27[14]._super,
                 x27[15]._super, x27[16]._super, x27[17]._super, x27[18]._super, x27[19]._super,
                 x27[20]._super, x27[21]._super, x28[0]._super,  x28[1]._super,  x28[2]._super,
                 x28[3]._super,  x28[4]._super,  x28[5]._super,  x28[6]._super,  x28[7]._super,
                 x28[8]._super,  x28[9]._super},
      Val32Array{x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super, x29[0]._super,  x29[1]._super,  x29[2]._super,
                 x29[3]._super,  x29[4]._super,  x29[5]._super,  x29[6]._super,  x29[7]._super,
                 x29[8]._super,  x29[9]._super,  x29[10]._super, x29[11]._super, x29[12]._super,
                 x29[13]._super, x29[14]._super, x29[15]._super, x29[16]._super, x29[17]._super,
                 x29[18]._super, x29[19]._super},
      Val32Array{x24[10]._super, x24[11]._super, x24[12]._super, x24[13]._super, x24[14]._super,
                 x24[15]._super, x24[16]._super, x24[17]._super, x24[18]._super, x24[19]._super,
                 x24[20]._super, x24[21]._super, x30[0]._super,  x30[1]._super,  x30[2]._super,
                 x30[3]._super,  x30[4]._super,  x30[5]._super,  x30[6]._super,  x30[7]._super,
                 x30[8]._super,  x30[9]._super,  x30[10]._super, x30[11]._super, x30[12]._super,
                 x30[13]._super, x30[14]._super, x30[15]._super, x30[16]._super, x30[17]._super,
                 x30[18]._super, x30[19]._super},
      Val32Array{x26[10]._super, x26[11]._super, x26[12]._super, x26[13]._super, x26[14]._super,
                 x26[15]._super, x26[16]._super, x26[17]._super, x26[18]._super, x26[19]._super,
                 x26[20]._super, x26[21]._super, x31[0]._super,  x31[1]._super,  x31[2]._super,
                 x31[3]._super,  x31[4]._super,  x31[5]._super,  x31[6]._super,  x31[7]._super,
                 x31[8]._super,  x31[9]._super,  x31[10]._super, x31[11]._super, x31[12]._super,
                 x31[13]._super, x31[14]._super, x31[15]._super, x31[16]._super, x31[17]._super,
                 x31[18]._super, x31[19]._super},
      Val32Array{x28[10]._super, x28[11]._super, x28[12]._super, x28[13]._super, x28[14]._super,
                 x28[15]._super, x28[16]._super, x28[17]._super, x28[18]._super, x28[19]._super,
                 x28[20]._super, x28[21]._super, x32[0]._super,  x32[1]._super,  x32[2]._super,
                 x32[3]._super,  x32[4]._super,  x32[5]._super,  x32[6]._super,  x32[7]._super,
                 x32[8]._super,  x32[9]._super,  x32[10]._super, x32[11]._super, x32[12]._super,
                 x32[13]._super, x32[14]._super, x32[15]._super, x32[16]._super, x32[17]._super,
                 x32[18]._super, x32[19]._super},
      Val32Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49,
                 x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65},
      TwoShortsStruct{.low = Val(13701), .high = Val(62478)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x67 = x66.aOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16_Struct x68 =
      execUnpackWithCarry(ctx, x67.low, x67.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  TwoShortsStruct x69 = x66.eOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16_Struct x70 =
      execUnpackWithCarry(ctx, x69.low, x69.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x71 = x68._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x72 = x70._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_1__14_Arm1_Super_SuperLayout> x73 = LAYOUT_LOOKUP(x3, arm1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:373)
  Val22Array x74 =
      Val22Array{x71[0]._super,  x71[1]._super,  x71[2]._super,  x71[3]._super,  x71[4]._super,
                 x71[5]._super,  x71[6]._super,  x71[7]._super,  x71[8]._super,  x71[9]._super,
                 x71[10]._super, x71[11]._super, x71[12]._super, x71[13]._super, x71[14]._super,
                 x71[15]._super, x71[16]._super, x71[17]._super, x71[18]._super, x71[19]._super,
                 x71[20]._super, x71[21]._super};
  Val22Array x75 =
      Val22Array{x71[22]._super, x71[23]._super, x71[24]._super, x71[25]._super, x71[26]._super,
                 x71[27]._super, x71[28]._super, x71[29]._super, x71[30]._super, x71[31]._super,
                 x72[0]._super,  x72[1]._super,  x72[2]._super,  x72[3]._super,  x72[4]._super,
                 x72[5]._super,  x72[6]._super,  x72[7]._super,  x72[8]._super,  x72[9]._super,
                 x72[10]._super, x72[11]._super};
  Val22Array x76 =
      Val22Array{x72[12]._super, x72[13]._super, x72[14]._super, x72[15]._super, x72[16]._super,
                 x72[17]._super, x72[18]._super, x72[19]._super, x72[20]._super, x72[21]._super,
                 x72[22]._super, x72[23]._super, x72[24]._super, x72[25]._super, x72[26]._super,
                 x72[27]._super, x72[28]._super, x72[29]._super, x72[30]._super, x72[31]._super,
                 Val(0),         Val(0)};
  Val22Array x77 = Val22Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,
                              x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55};
  Val22Array x78 = Val22Array{x56,    x57,    x58,    x59,    x60,    x61,    x62,    x63,
                              x64,    x65,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  Val x79 = x4.blk._super;
  Val x80 = x4.midx._super;
  if (to_size_t(Val(1))) {
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:376)
    RetTupleStruct x81 =
        exec_RetTuple(ctx,
                      x74,
                      x75,
                      x76,
                      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                      x77,
                      x78,
                      Val(15),
                      Val(21),
                      Val(0),
                      x79,
                      x80,
                      LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  NondetRegStruct24Array x82 = x4.arrD;
  Val24Array x83 =
      Val24Array{x82[0]._super,  x82[1]._super,  x82[2]._super,  x82[3]._super,  x82[4]._super,
                 x82[5]._super,  x82[6]._super,  x82[7]._super,  x82[8]._super,  x82[9]._super,
                 x82[10]._super, x82[11]._super, x82[12]._super, x82[13]._super, x82[14]._super,
                 x82[15]._super, x82[16]._super, x82[17]._super, x82[18]._super, x82[19]._super,
                 x82[20]._super, x82[21]._super, x82[22]._super, x82[23]._super};
  Val x84 = x4.rnd._super;
  if (to_size_t(Val(0))) {
    if (to_size_t(Val(1))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:380)
      RetTupleStruct x85 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(0),
                                         Val(22),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm0));
    }
    if (to_size_t(Val(0))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:383)
      RetTupleStruct x86 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(9),
                                         Val(17),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm1));
    }
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:379)
    RetTupleStruct x87 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x73, _super));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  RetTupleStruct x88 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x88;
}
RetTupleStruct execSha256mix_1__15_(ExecContext& ctx,
                                    RetTupleStruct arg0,
                                    BoundLayout<RetTupleLayout> arg1,
                                    BoundLayout<Sha256mix_1__15_Layout> layout2) {
  BoundLayout<Sha256mix_1__15__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:359)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:360)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:361)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:362)
  RetTupleStruct x8 = back_RetTuple(ctx, 7, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:363)
  RetTupleStruct x9 = back_RetTuple(ctx, 15, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:364)
  RetTupleStruct x10 = back_RetTuple(ctx, 16, arg1);
  // s2w(zirgen/circuit/keccak/sha256_for_keccak.zir:155)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:366)
  NondetRegStruct22Array x11 = x5.arrE;
  NondetRegStruct22Array x12 = x5.arrF;
  NondetRegStruct22Array x13 = x8.arrE;
  NondetRegStruct22Array x14 = x8.arrF;
  NondetRegStruct22Array x15 = x9.arrE;
  NondetRegStruct22Array x16 = x9.arrF;
  NondetRegStruct22Array x17 = x10.arrE;
  NondetRegStruct22Array x18 = x10.arrF;
  TwoShortsStruct x19 = execComputeW(
      ctx,
      Val32Array{x11[0]._super,  x11[1]._super,  x11[2]._super,  x11[3]._super,  x11[4]._super,
                 x11[5]._super,  x11[6]._super,  x11[7]._super,  x11[8]._super,  x11[9]._super,
                 x11[10]._super, x11[11]._super, x11[12]._super, x11[13]._super, x11[14]._super,
                 x11[15]._super, x11[16]._super, x11[17]._super, x11[18]._super, x11[19]._super,
                 x11[20]._super, x11[21]._super, x12[0]._super,  x12[1]._super,  x12[2]._super,
                 x12[3]._super,  x12[4]._super,  x12[5]._super,  x12[6]._super,  x12[7]._super,
                 x12[8]._super,  x12[9]._super},
      Val32Array{x13[0]._super,  x13[1]._super,  x13[2]._super,  x13[3]._super,  x13[4]._super,
                 x13[5]._super,  x13[6]._super,  x13[7]._super,  x13[8]._super,  x13[9]._super,
                 x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x14[0]._super,  x14[1]._super,  x14[2]._super,
                 x14[3]._super,  x14[4]._super,  x14[5]._super,  x14[6]._super,  x14[7]._super,
                 x14[8]._super,  x14[9]._super},
      Val32Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x16[0]._super,  x16[1]._super,  x16[2]._super,
                 x16[3]._super,  x16[4]._super,  x16[5]._super,  x16[6]._super,  x16[7]._super,
                 x16[8]._super,  x16[9]._super},
      Val32Array{x17[0]._super,  x17[1]._super,  x17[2]._super,  x17[3]._super,  x17[4]._super,
                 x17[5]._super,  x17[6]._super,  x17[7]._super,  x17[8]._super,  x17[9]._super,
                 x17[10]._super, x17[11]._super, x17[12]._super, x17[13]._super, x17[14]._super,
                 x17[15]._super, x17[16]._super, x17[17]._super, x17[18]._super, x17[19]._super,
                 x17[20]._super, x17[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super},
      LAYOUT_LOOKUP(layout2, packedW));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16_Struct x20 =
      execUnpackWithCarry(ctx, x19.low, x19.high, LAYOUT_LOOKUP(layout2, newW));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  NondetRegStruct22Array x21 = x4.arrA;
  NondetRegStruct22Array x22 = x4.arrB;
  NondetRegStruct22Array x23 = x5.arrA;
  NondetRegStruct22Array x24 = x5.arrB;
  NondetRegStruct22Array x25 = x6.arrA;
  NondetRegStruct22Array x26 = x6.arrB;
  NondetRegStruct22Array x27 = x7.arrA;
  NondetRegStruct22Array x28 = x7.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:369)
  NondetRegStruct22Array x29 = x4.arrC;
  NondetRegStruct22Array x30 = x5.arrC;
  NondetRegStruct22Array x31 = x6.arrC;
  NondetRegStruct22Array x32 = x7.arrC;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x33 = x20._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  Val x55 = x33[21]._super;
  Val x56 = x33[22]._super;
  Val x57 = x33[23]._super;
  Val x58 = x33[24]._super;
  Val x59 = x33[25]._super;
  Val x60 = x33[26]._super;
  Val x61 = x33[27]._super;
  Val x62 = x33[28]._super;
  Val x63 = x33[29]._super;
  Val x64 = x33[30]._super;
  Val x65 = x33[31]._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  ComputeAEStruct x66 = execComputeAE(
      ctx,
      Val32Array{x21[0]._super,  x21[1]._super,  x21[2]._super,  x21[3]._super,  x21[4]._super,
                 x21[5]._super,  x21[6]._super,  x21[7]._super,  x21[8]._super,  x21[9]._super,
                 x21[10]._super, x21[11]._super, x21[12]._super, x21[13]._super, x21[14]._super,
                 x21[15]._super, x21[16]._super, x21[17]._super, x21[18]._super, x21[19]._super,
                 x21[20]._super, x21[21]._super, x22[0]._super,  x22[1]._super,  x22[2]._super,
                 x22[3]._super,  x22[4]._super,  x22[5]._super,  x22[6]._super,  x22[7]._super,
                 x22[8]._super,  x22[9]._super},
      Val32Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super, x24[0]._super,  x24[1]._super,  x24[2]._super,
                 x24[3]._super,  x24[4]._super,  x24[5]._super,  x24[6]._super,  x24[7]._super,
                 x24[8]._super,  x24[9]._super},
      Val32Array{x25[0]._super,  x25[1]._super,  x25[2]._super,  x25[3]._super,  x25[4]._super,
                 x25[5]._super,  x25[6]._super,  x25[7]._super,  x25[8]._super,  x25[9]._super,
                 x25[10]._super, x25[11]._super, x25[12]._super, x25[13]._super, x25[14]._super,
                 x25[15]._super, x25[16]._super, x25[17]._super, x25[18]._super, x25[19]._super,
                 x25[20]._super, x25[21]._super, x26[0]._super,  x26[1]._super,  x26[2]._super,
                 x26[3]._super,  x26[4]._super,  x26[5]._super,  x26[6]._super,  x26[7]._super,
                 x26[8]._super,  x26[9]._super},
      Val32Array{x27[0]._super,  x27[1]._super,  x27[2]._super,  x27[3]._super,  x27[4]._super,
                 x27[5]._super,  x27[6]._super,  x27[7]._super,  x27[8]._super,  x27[9]._super,
                 x27[10]._super, x27[11]._super, x27[12]._super, x27[13]._super, x27[14]._super,
                 x27[15]._super, x27[16]._super, x27[17]._super, x27[18]._super, x27[19]._super,
                 x27[20]._super, x27[21]._super, x28[0]._super,  x28[1]._super,  x28[2]._super,
                 x28[3]._super,  x28[4]._super,  x28[5]._super,  x28[6]._super,  x28[7]._super,
                 x28[8]._super,  x28[9]._super},
      Val32Array{x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super, x29[0]._super,  x29[1]._super,  x29[2]._super,
                 x29[3]._super,  x29[4]._super,  x29[5]._super,  x29[6]._super,  x29[7]._super,
                 x29[8]._super,  x29[9]._super,  x29[10]._super, x29[11]._super, x29[12]._super,
                 x29[13]._super, x29[14]._super, x29[15]._super, x29[16]._super, x29[17]._super,
                 x29[18]._super, x29[19]._super},
      Val32Array{x24[10]._super, x24[11]._super, x24[12]._super, x24[13]._super, x24[14]._super,
                 x24[15]._super, x24[16]._super, x24[17]._super, x24[18]._super, x24[19]._super,
                 x24[20]._super, x24[21]._super, x30[0]._super,  x30[1]._super,  x30[2]._super,
                 x30[3]._super,  x30[4]._super,  x30[5]._super,  x30[6]._super,  x30[7]._super,
                 x30[8]._super,  x30[9]._super,  x30[10]._super, x30[11]._super, x30[12]._super,
                 x30[13]._super, x30[14]._super, x30[15]._super, x30[16]._super, x30[17]._super,
                 x30[18]._super, x30[19]._super},
      Val32Array{x26[10]._super, x26[11]._super, x26[12]._super, x26[13]._super, x26[14]._super,
                 x26[15]._super, x26[16]._super, x26[17]._super, x26[18]._super, x26[19]._super,
                 x26[20]._super, x26[21]._super, x31[0]._super,  x31[1]._super,  x31[2]._super,
                 x31[3]._super,  x31[4]._super,  x31[5]._super,  x31[6]._super,  x31[7]._super,
                 x31[8]._super,  x31[9]._super,  x31[10]._super, x31[11]._super, x31[12]._super,
                 x31[13]._super, x31[14]._super, x31[15]._super, x31[16]._super, x31[17]._super,
                 x31[18]._super, x31[19]._super},
      Val32Array{x28[10]._super, x28[11]._super, x28[12]._super, x28[13]._super, x28[14]._super,
                 x28[15]._super, x28[16]._super, x28[17]._super, x28[18]._super, x28[19]._super,
                 x28[20]._super, x28[21]._super, x32[0]._super,  x32[1]._super,  x32[2]._super,
                 x32[3]._super,  x32[4]._super,  x32[5]._super,  x32[6]._super,  x32[7]._super,
                 x32[8]._super,  x32[9]._super,  x32[10]._super, x32[11]._super, x32[12]._super,
                 x32[13]._super, x32[14]._super, x32[15]._super, x32[16]._super, x32[17]._super,
                 x32[18]._super, x32[19]._super},
      Val32Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49,
                 x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65},
      TwoShortsStruct{.low = Val(41072), .high = Val(4202)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x67 = x66.aOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16_Struct x68 =
      execUnpackWithCarry(ctx, x67.low, x67.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  TwoShortsStruct x69 = x66.eOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16_Struct x70 =
      execUnpackWithCarry(ctx, x69.low, x69.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x71 = x68._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x72 = x70._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_1__15_Arm1_Super_SuperLayout> x73 = LAYOUT_LOOKUP(x3, arm1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:373)
  Val22Array x74 =
      Val22Array{x71[0]._super,  x71[1]._super,  x71[2]._super,  x71[3]._super,  x71[4]._super,
                 x71[5]._super,  x71[6]._super,  x71[7]._super,  x71[8]._super,  x71[9]._super,
                 x71[10]._super, x71[11]._super, x71[12]._super, x71[13]._super, x71[14]._super,
                 x71[15]._super, x71[16]._super, x71[17]._super, x71[18]._super, x71[19]._super,
                 x71[20]._super, x71[21]._super};
  Val22Array x75 =
      Val22Array{x71[22]._super, x71[23]._super, x71[24]._super, x71[25]._super, x71[26]._super,
                 x71[27]._super, x71[28]._super, x71[29]._super, x71[30]._super, x71[31]._super,
                 x72[0]._super,  x72[1]._super,  x72[2]._super,  x72[3]._super,  x72[4]._super,
                 x72[5]._super,  x72[6]._super,  x72[7]._super,  x72[8]._super,  x72[9]._super,
                 x72[10]._super, x72[11]._super};
  Val22Array x76 =
      Val22Array{x72[12]._super, x72[13]._super, x72[14]._super, x72[15]._super, x72[16]._super,
                 x72[17]._super, x72[18]._super, x72[19]._super, x72[20]._super, x72[21]._super,
                 x72[22]._super, x72[23]._super, x72[24]._super, x72[25]._super, x72[26]._super,
                 x72[27]._super, x72[28]._super, x72[29]._super, x72[30]._super, x72[31]._super,
                 Val(0),         Val(0)};
  Val22Array x77 = Val22Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,
                              x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55};
  Val22Array x78 = Val22Array{x56,    x57,    x58,    x59,    x60,    x61,    x62,    x63,
                              x64,    x65,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  Val x79 = x4.blk._super;
  Val x80 = x4.midx._super;
  if (to_size_t(Val(0))) {
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:376)
    RetTupleStruct x81 =
        exec_RetTuple(ctx,
                      x74,
                      x75,
                      x76,
                      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                      x77,
                      x78,
                      Val(16),
                      Val(21),
                      Val(0),
                      x79,
                      x80,
                      LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  NondetRegStruct24Array x82 = x4.arrD;
  Val24Array x83 =
      Val24Array{x82[0]._super,  x82[1]._super,  x82[2]._super,  x82[3]._super,  x82[4]._super,
                 x82[5]._super,  x82[6]._super,  x82[7]._super,  x82[8]._super,  x82[9]._super,
                 x82[10]._super, x82[11]._super, x82[12]._super, x82[13]._super, x82[14]._super,
                 x82[15]._super, x82[16]._super, x82[17]._super, x82[18]._super, x82[19]._super,
                 x82[20]._super, x82[21]._super, x82[22]._super, x82[23]._super};
  Val x84 = x4.rnd._super;
  if (to_size_t(Val(1))) {
    if (to_size_t(Val(1))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:380)
      RetTupleStruct x85 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(0),
                                         Val(22),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm0));
    }
    if (to_size_t(Val(0))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:383)
      RetTupleStruct x86 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(9),
                                         Val(17),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm1));
    }
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:379)
    RetTupleStruct x87 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x73, _super));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  RetTupleStruct x88 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x88;
}
RetTupleStruct execSha256mixAll_1_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<Sha256mixAll_1_Layout> layout2) {
  // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:391)
  BoundLayout<Sha256mixAll_1__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:390)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  OneHot_16_Struct x5 = exec_OneHot_16_(ctx, x4.minor._super, LAYOUT_LOOKUP(layout2, minorOnehot));
  NondetRegStruct16Array x6 = x5._super;
  if (to_size_t(x6[0]._super)) {
    // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:392)
    RetTupleStruct x7 = execSha256mix_1__0_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm0));
  }
  if (to_size_t(x6[1]._super)) {
    // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:393)
    RetTupleStruct x8 = execSha256mix_1__1_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm1));
  }
  if (to_size_t(x6[2]._super)) {
    // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:394)
    RetTupleStruct x9 = execSha256mix_1__2_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm2));
  }
  if (to_size_t(x6[3]._super)) {
    // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:395)
    RetTupleStruct x10 = execSha256mix_1__3_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm3));
  }
  if (to_size_t(x6[4]._super)) {
    // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:396)
    RetTupleStruct x11 = execSha256mix_1__4_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm4));
  }
  if (to_size_t(x6[5]._super)) {
    // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:397)
    RetTupleStruct x12 = execSha256mix_1__5_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm5));
  }
  if (to_size_t(x6[6]._super)) {
    // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:398)
    RetTupleStruct x13 = execSha256mix_1__6_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm6));
  }
  if (to_size_t(x6[7]._super)) {
    // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:399)
    RetTupleStruct x14 = execSha256mix_1__7_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm7));
  }
  if (to_size_t(x6[8]._super)) {
    // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:400)
    RetTupleStruct x15 = execSha256mix_1__8_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm8));
  }
  if (to_size_t(x6[9]._super)) {
    // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:401)
    RetTupleStruct x16 = execSha256mix_1__9_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm9));
  }
  if (to_size_t(x6[10]._super)) {
    // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:402)
    RetTupleStruct x17 = execSha256mix_1__10_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm10));
  }
  if (to_size_t(x6[11]._super)) {
    // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:403)
    RetTupleStruct x18 = execSha256mix_1__11_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm11));
  }
  if (to_size_t(x6[12]._super)) {
    // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:404)
    RetTupleStruct x19 = execSha256mix_1__12_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm12));
  }
  if (to_size_t(x6[13]._super)) {
    // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:405)
    RetTupleStruct x20 = execSha256mix_1__13_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm13));
  }
  if (to_size_t(x6[14]._super)) {
    // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:406)
    RetTupleStruct x21 = execSha256mix_1__14_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm14));
  }
  if (to_size_t(x6[15]._super)) {
    // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:407)
    RetTupleStruct x22 = execSha256mix_1__15_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm15));
  }
  // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:391)
  RetTupleStruct x23 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x23;
}
RetTupleStruct execSha256mix_2__0_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<Sha256mix_2__0_Layout> layout2) {
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_2__0__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:359)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:360)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:361)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:362)
  RetTupleStruct x8 = back_RetTuple(ctx, 7, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:363)
  RetTupleStruct x9 = back_RetTuple(ctx, 15, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:364)
  RetTupleStruct x10 = back_RetTuple(ctx, 16, arg1);
  // s2w(zirgen/circuit/keccak/sha256_for_keccak.zir:155)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:366)
  NondetRegStruct22Array x11 = x5.arrE;
  NondetRegStruct22Array x12 = x5.arrF;
  NondetRegStruct22Array x13 = x8.arrE;
  NondetRegStruct22Array x14 = x8.arrF;
  NondetRegStruct22Array x15 = x9.arrE;
  NondetRegStruct22Array x16 = x9.arrF;
  NondetRegStruct22Array x17 = x10.arrE;
  NondetRegStruct22Array x18 = x10.arrF;
  TwoShortsStruct x19 = execComputeW(
      ctx,
      Val32Array{x11[0]._super,  x11[1]._super,  x11[2]._super,  x11[3]._super,  x11[4]._super,
                 x11[5]._super,  x11[6]._super,  x11[7]._super,  x11[8]._super,  x11[9]._super,
                 x11[10]._super, x11[11]._super, x11[12]._super, x11[13]._super, x11[14]._super,
                 x11[15]._super, x11[16]._super, x11[17]._super, x11[18]._super, x11[19]._super,
                 x11[20]._super, x11[21]._super, x12[0]._super,  x12[1]._super,  x12[2]._super,
                 x12[3]._super,  x12[4]._super,  x12[5]._super,  x12[6]._super,  x12[7]._super,
                 x12[8]._super,  x12[9]._super},
      Val32Array{x13[0]._super,  x13[1]._super,  x13[2]._super,  x13[3]._super,  x13[4]._super,
                 x13[5]._super,  x13[6]._super,  x13[7]._super,  x13[8]._super,  x13[9]._super,
                 x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x14[0]._super,  x14[1]._super,  x14[2]._super,
                 x14[3]._super,  x14[4]._super,  x14[5]._super,  x14[6]._super,  x14[7]._super,
                 x14[8]._super,  x14[9]._super},
      Val32Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x16[0]._super,  x16[1]._super,  x16[2]._super,
                 x16[3]._super,  x16[4]._super,  x16[5]._super,  x16[6]._super,  x16[7]._super,
                 x16[8]._super,  x16[9]._super},
      Val32Array{x17[0]._super,  x17[1]._super,  x17[2]._super,  x17[3]._super,  x17[4]._super,
                 x17[5]._super,  x17[6]._super,  x17[7]._super,  x17[8]._super,  x17[9]._super,
                 x17[10]._super, x17[11]._super, x17[12]._super, x17[13]._super, x17[14]._super,
                 x17[15]._super, x17[16]._super, x17[17]._super, x17[18]._super, x17[19]._super,
                 x17[20]._super, x17[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super},
      LAYOUT_LOOKUP(layout2, packedW));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16_Struct x20 =
      execUnpackWithCarry(ctx, x19.low, x19.high, LAYOUT_LOOKUP(layout2, newW));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  NondetRegStruct22Array x21 = x4.arrA;
  NondetRegStruct22Array x22 = x4.arrB;
  NondetRegStruct22Array x23 = x5.arrA;
  NondetRegStruct22Array x24 = x5.arrB;
  NondetRegStruct22Array x25 = x6.arrA;
  NondetRegStruct22Array x26 = x6.arrB;
  NondetRegStruct22Array x27 = x7.arrA;
  NondetRegStruct22Array x28 = x7.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:369)
  NondetRegStruct22Array x29 = x4.arrC;
  NondetRegStruct22Array x30 = x5.arrC;
  NondetRegStruct22Array x31 = x6.arrC;
  NondetRegStruct22Array x32 = x7.arrC;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x33 = x20._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  Val x55 = x33[21]._super;
  Val x56 = x33[22]._super;
  Val x57 = x33[23]._super;
  Val x58 = x33[24]._super;
  Val x59 = x33[25]._super;
  Val x60 = x33[26]._super;
  Val x61 = x33[27]._super;
  Val x62 = x33[28]._super;
  Val x63 = x33[29]._super;
  Val x64 = x33[30]._super;
  Val x65 = x33[31]._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  ComputeAEStruct x66 = execComputeAE(
      ctx,
      Val32Array{x21[0]._super,  x21[1]._super,  x21[2]._super,  x21[3]._super,  x21[4]._super,
                 x21[5]._super,  x21[6]._super,  x21[7]._super,  x21[8]._super,  x21[9]._super,
                 x21[10]._super, x21[11]._super, x21[12]._super, x21[13]._super, x21[14]._super,
                 x21[15]._super, x21[16]._super, x21[17]._super, x21[18]._super, x21[19]._super,
                 x21[20]._super, x21[21]._super, x22[0]._super,  x22[1]._super,  x22[2]._super,
                 x22[3]._super,  x22[4]._super,  x22[5]._super,  x22[6]._super,  x22[7]._super,
                 x22[8]._super,  x22[9]._super},
      Val32Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super, x24[0]._super,  x24[1]._super,  x24[2]._super,
                 x24[3]._super,  x24[4]._super,  x24[5]._super,  x24[6]._super,  x24[7]._super,
                 x24[8]._super,  x24[9]._super},
      Val32Array{x25[0]._super,  x25[1]._super,  x25[2]._super,  x25[3]._super,  x25[4]._super,
                 x25[5]._super,  x25[6]._super,  x25[7]._super,  x25[8]._super,  x25[9]._super,
                 x25[10]._super, x25[11]._super, x25[12]._super, x25[13]._super, x25[14]._super,
                 x25[15]._super, x25[16]._super, x25[17]._super, x25[18]._super, x25[19]._super,
                 x25[20]._super, x25[21]._super, x26[0]._super,  x26[1]._super,  x26[2]._super,
                 x26[3]._super,  x26[4]._super,  x26[5]._super,  x26[6]._super,  x26[7]._super,
                 x26[8]._super,  x26[9]._super},
      Val32Array{x27[0]._super,  x27[1]._super,  x27[2]._super,  x27[3]._super,  x27[4]._super,
                 x27[5]._super,  x27[6]._super,  x27[7]._super,  x27[8]._super,  x27[9]._super,
                 x27[10]._super, x27[11]._super, x27[12]._super, x27[13]._super, x27[14]._super,
                 x27[15]._super, x27[16]._super, x27[17]._super, x27[18]._super, x27[19]._super,
                 x27[20]._super, x27[21]._super, x28[0]._super,  x28[1]._super,  x28[2]._super,
                 x28[3]._super,  x28[4]._super,  x28[5]._super,  x28[6]._super,  x28[7]._super,
                 x28[8]._super,  x28[9]._super},
      Val32Array{x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super, x29[0]._super,  x29[1]._super,  x29[2]._super,
                 x29[3]._super,  x29[4]._super,  x29[5]._super,  x29[6]._super,  x29[7]._super,
                 x29[8]._super,  x29[9]._super,  x29[10]._super, x29[11]._super, x29[12]._super,
                 x29[13]._super, x29[14]._super, x29[15]._super, x29[16]._super, x29[17]._super,
                 x29[18]._super, x29[19]._super},
      Val32Array{x24[10]._super, x24[11]._super, x24[12]._super, x24[13]._super, x24[14]._super,
                 x24[15]._super, x24[16]._super, x24[17]._super, x24[18]._super, x24[19]._super,
                 x24[20]._super, x24[21]._super, x30[0]._super,  x30[1]._super,  x30[2]._super,
                 x30[3]._super,  x30[4]._super,  x30[5]._super,  x30[6]._super,  x30[7]._super,
                 x30[8]._super,  x30[9]._super,  x30[10]._super, x30[11]._super, x30[12]._super,
                 x30[13]._super, x30[14]._super, x30[15]._super, x30[16]._super, x30[17]._super,
                 x30[18]._super, x30[19]._super},
      Val32Array{x26[10]._super, x26[11]._super, x26[12]._super, x26[13]._super, x26[14]._super,
                 x26[15]._super, x26[16]._super, x26[17]._super, x26[18]._super, x26[19]._super,
                 x26[20]._super, x26[21]._super, x31[0]._super,  x31[1]._super,  x31[2]._super,
                 x31[3]._super,  x31[4]._super,  x31[5]._super,  x31[6]._super,  x31[7]._super,
                 x31[8]._super,  x31[9]._super,  x31[10]._super, x31[11]._super, x31[12]._super,
                 x31[13]._super, x31[14]._super, x31[15]._super, x31[16]._super, x31[17]._super,
                 x31[18]._super, x31[19]._super},
      Val32Array{x28[10]._super, x28[11]._super, x28[12]._super, x28[13]._super, x28[14]._super,
                 x28[15]._super, x28[16]._super, x28[17]._super, x28[18]._super, x28[19]._super,
                 x28[20]._super, x28[21]._super, x32[0]._super,  x32[1]._super,  x32[2]._super,
                 x32[3]._super,  x32[4]._super,  x32[5]._super,  x32[6]._super,  x32[7]._super,
                 x32[8]._super,  x32[9]._super,  x32[10]._super, x32[11]._super, x32[12]._super,
                 x32[13]._super, x32[14]._super, x32[15]._super, x32[16]._super, x32[17]._super,
                 x32[18]._super, x32[19]._super},
      Val32Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49,
                 x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65},
      TwoShortsStruct{.low = Val(49430), .high = Val(6564)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x67 = x66.aOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16_Struct x68 =
      execUnpackWithCarry(ctx, x67.low, x67.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  TwoShortsStruct x69 = x66.eOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16_Struct x70 =
      execUnpackWithCarry(ctx, x69.low, x69.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x71 = x68._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x72 = x70._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_2__0_Arm1_Super_SuperLayout> x73 = LAYOUT_LOOKUP(x3, arm1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:373)
  Val22Array x74 =
      Val22Array{x71[0]._super,  x71[1]._super,  x71[2]._super,  x71[3]._super,  x71[4]._super,
                 x71[5]._super,  x71[6]._super,  x71[7]._super,  x71[8]._super,  x71[9]._super,
                 x71[10]._super, x71[11]._super, x71[12]._super, x71[13]._super, x71[14]._super,
                 x71[15]._super, x71[16]._super, x71[17]._super, x71[18]._super, x71[19]._super,
                 x71[20]._super, x71[21]._super};
  Val22Array x75 =
      Val22Array{x71[22]._super, x71[23]._super, x71[24]._super, x71[25]._super, x71[26]._super,
                 x71[27]._super, x71[28]._super, x71[29]._super, x71[30]._super, x71[31]._super,
                 x72[0]._super,  x72[1]._super,  x72[2]._super,  x72[3]._super,  x72[4]._super,
                 x72[5]._super,  x72[6]._super,  x72[7]._super,  x72[8]._super,  x72[9]._super,
                 x72[10]._super, x72[11]._super};
  Val22Array x76 =
      Val22Array{x72[12]._super, x72[13]._super, x72[14]._super, x72[15]._super, x72[16]._super,
                 x72[17]._super, x72[18]._super, x72[19]._super, x72[20]._super, x72[21]._super,
                 x72[22]._super, x72[23]._super, x72[24]._super, x72[25]._super, x72[26]._super,
                 x72[27]._super, x72[28]._super, x72[29]._super, x72[30]._super, x72[31]._super,
                 Val(0),         Val(0)};
  Val22Array x77 = Val22Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,
                              x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55};
  Val22Array x78 = Val22Array{x56,    x57,    x58,    x59,    x60,    x61,    x62,    x63,
                              x64,    x65,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  Val x79 = x4.blk._super;
  Val x80 = x4.midx._super;
  if (to_size_t(Val(1))) {
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:376)
    RetTupleStruct x81 =
        exec_RetTuple(ctx,
                      x74,
                      x75,
                      x76,
                      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                      x77,
                      x78,
                      Val(1),
                      Val(22),
                      Val(0),
                      x79,
                      x80,
                      LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  NondetRegStruct24Array x82 = x4.arrD;
  Val24Array x83 =
      Val24Array{x82[0]._super,  x82[1]._super,  x82[2]._super,  x82[3]._super,  x82[4]._super,
                 x82[5]._super,  x82[6]._super,  x82[7]._super,  x82[8]._super,  x82[9]._super,
                 x82[10]._super, x82[11]._super, x82[12]._super, x82[13]._super, x82[14]._super,
                 x82[15]._super, x82[16]._super, x82[17]._super, x82[18]._super, x82[19]._super,
                 x82[20]._super, x82[21]._super, x82[22]._super, x82[23]._super};
  Val x84 = x4.rnd._super;
  if (to_size_t(Val(0))) {
    if (to_size_t(Val(0))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:380)
      RetTupleStruct x85 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(0),
                                         Val(23),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm0));
    }
    if (to_size_t(Val(1))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:383)
      RetTupleStruct x86 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(9),
                                         Val(17),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm1));
    }
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:379)
    RetTupleStruct x87 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x73, _super));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  RetTupleStruct x88 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x88;
}
RetTupleStruct execSha256mix_2__1_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<Sha256mix_2__1_Layout> layout2) {
  BoundLayout<Sha256mix_2__1__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:359)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:360)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:361)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:362)
  RetTupleStruct x8 = back_RetTuple(ctx, 7, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:363)
  RetTupleStruct x9 = back_RetTuple(ctx, 15, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:364)
  RetTupleStruct x10 = back_RetTuple(ctx, 16, arg1);
  // s2w(zirgen/circuit/keccak/sha256_for_keccak.zir:155)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:366)
  NondetRegStruct22Array x11 = x5.arrE;
  NondetRegStruct22Array x12 = x5.arrF;
  NondetRegStruct22Array x13 = x8.arrE;
  NondetRegStruct22Array x14 = x8.arrF;
  NondetRegStruct22Array x15 = x9.arrE;
  NondetRegStruct22Array x16 = x9.arrF;
  NondetRegStruct22Array x17 = x10.arrE;
  NondetRegStruct22Array x18 = x10.arrF;
  TwoShortsStruct x19 = execComputeW(
      ctx,
      Val32Array{x11[0]._super,  x11[1]._super,  x11[2]._super,  x11[3]._super,  x11[4]._super,
                 x11[5]._super,  x11[6]._super,  x11[7]._super,  x11[8]._super,  x11[9]._super,
                 x11[10]._super, x11[11]._super, x11[12]._super, x11[13]._super, x11[14]._super,
                 x11[15]._super, x11[16]._super, x11[17]._super, x11[18]._super, x11[19]._super,
                 x11[20]._super, x11[21]._super, x12[0]._super,  x12[1]._super,  x12[2]._super,
                 x12[3]._super,  x12[4]._super,  x12[5]._super,  x12[6]._super,  x12[7]._super,
                 x12[8]._super,  x12[9]._super},
      Val32Array{x13[0]._super,  x13[1]._super,  x13[2]._super,  x13[3]._super,  x13[4]._super,
                 x13[5]._super,  x13[6]._super,  x13[7]._super,  x13[8]._super,  x13[9]._super,
                 x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x14[0]._super,  x14[1]._super,  x14[2]._super,
                 x14[3]._super,  x14[4]._super,  x14[5]._super,  x14[6]._super,  x14[7]._super,
                 x14[8]._super,  x14[9]._super},
      Val32Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x16[0]._super,  x16[1]._super,  x16[2]._super,
                 x16[3]._super,  x16[4]._super,  x16[5]._super,  x16[6]._super,  x16[7]._super,
                 x16[8]._super,  x16[9]._super},
      Val32Array{x17[0]._super,  x17[1]._super,  x17[2]._super,  x17[3]._super,  x17[4]._super,
                 x17[5]._super,  x17[6]._super,  x17[7]._super,  x17[8]._super,  x17[9]._super,
                 x17[10]._super, x17[11]._super, x17[12]._super, x17[13]._super, x17[14]._super,
                 x17[15]._super, x17[16]._super, x17[17]._super, x17[18]._super, x17[19]._super,
                 x17[20]._super, x17[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super},
      LAYOUT_LOOKUP(layout2, packedW));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16_Struct x20 =
      execUnpackWithCarry(ctx, x19.low, x19.high, LAYOUT_LOOKUP(layout2, newW));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  NondetRegStruct22Array x21 = x4.arrA;
  NondetRegStruct22Array x22 = x4.arrB;
  NondetRegStruct22Array x23 = x5.arrA;
  NondetRegStruct22Array x24 = x5.arrB;
  NondetRegStruct22Array x25 = x6.arrA;
  NondetRegStruct22Array x26 = x6.arrB;
  NondetRegStruct22Array x27 = x7.arrA;
  NondetRegStruct22Array x28 = x7.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:369)
  NondetRegStruct22Array x29 = x4.arrC;
  NondetRegStruct22Array x30 = x5.arrC;
  NondetRegStruct22Array x31 = x6.arrC;
  NondetRegStruct22Array x32 = x7.arrC;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x33 = x20._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  Val x55 = x33[21]._super;
  Val x56 = x33[22]._super;
  Val x57 = x33[23]._super;
  Val x58 = x33[24]._super;
  Val x59 = x33[25]._super;
  Val x60 = x33[26]._super;
  Val x61 = x33[27]._super;
  Val x62 = x33[28]._super;
  Val x63 = x33[29]._super;
  Val x64 = x33[30]._super;
  Val x65 = x33[31]._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  ComputeAEStruct x66 = execComputeAE(
      ctx,
      Val32Array{x21[0]._super,  x21[1]._super,  x21[2]._super,  x21[3]._super,  x21[4]._super,
                 x21[5]._super,  x21[6]._super,  x21[7]._super,  x21[8]._super,  x21[9]._super,
                 x21[10]._super, x21[11]._super, x21[12]._super, x21[13]._super, x21[14]._super,
                 x21[15]._super, x21[16]._super, x21[17]._super, x21[18]._super, x21[19]._super,
                 x21[20]._super, x21[21]._super, x22[0]._super,  x22[1]._super,  x22[2]._super,
                 x22[3]._super,  x22[4]._super,  x22[5]._super,  x22[6]._super,  x22[7]._super,
                 x22[8]._super,  x22[9]._super},
      Val32Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super, x24[0]._super,  x24[1]._super,  x24[2]._super,
                 x24[3]._super,  x24[4]._super,  x24[5]._super,  x24[6]._super,  x24[7]._super,
                 x24[8]._super,  x24[9]._super},
      Val32Array{x25[0]._super,  x25[1]._super,  x25[2]._super,  x25[3]._super,  x25[4]._super,
                 x25[5]._super,  x25[6]._super,  x25[7]._super,  x25[8]._super,  x25[9]._super,
                 x25[10]._super, x25[11]._super, x25[12]._super, x25[13]._super, x25[14]._super,
                 x25[15]._super, x25[16]._super, x25[17]._super, x25[18]._super, x25[19]._super,
                 x25[20]._super, x25[21]._super, x26[0]._super,  x26[1]._super,  x26[2]._super,
                 x26[3]._super,  x26[4]._super,  x26[5]._super,  x26[6]._super,  x26[7]._super,
                 x26[8]._super,  x26[9]._super},
      Val32Array{x27[0]._super,  x27[1]._super,  x27[2]._super,  x27[3]._super,  x27[4]._super,
                 x27[5]._super,  x27[6]._super,  x27[7]._super,  x27[8]._super,  x27[9]._super,
                 x27[10]._super, x27[11]._super, x27[12]._super, x27[13]._super, x27[14]._super,
                 x27[15]._super, x27[16]._super, x27[17]._super, x27[18]._super, x27[19]._super,
                 x27[20]._super, x27[21]._super, x28[0]._super,  x28[1]._super,  x28[2]._super,
                 x28[3]._super,  x28[4]._super,  x28[5]._super,  x28[6]._super,  x28[7]._super,
                 x28[8]._super,  x28[9]._super},
      Val32Array{x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super, x29[0]._super,  x29[1]._super,  x29[2]._super,
                 x29[3]._super,  x29[4]._super,  x29[5]._super,  x29[6]._super,  x29[7]._super,
                 x29[8]._super,  x29[9]._super,  x29[10]._super, x29[11]._super, x29[12]._super,
                 x29[13]._super, x29[14]._super, x29[15]._super, x29[16]._super, x29[17]._super,
                 x29[18]._super, x29[19]._super},
      Val32Array{x24[10]._super, x24[11]._super, x24[12]._super, x24[13]._super, x24[14]._super,
                 x24[15]._super, x24[16]._super, x24[17]._super, x24[18]._super, x24[19]._super,
                 x24[20]._super, x24[21]._super, x30[0]._super,  x30[1]._super,  x30[2]._super,
                 x30[3]._super,  x30[4]._super,  x30[5]._super,  x30[6]._super,  x30[7]._super,
                 x30[8]._super,  x30[9]._super,  x30[10]._super, x30[11]._super, x30[12]._super,
                 x30[13]._super, x30[14]._super, x30[15]._super, x30[16]._super, x30[17]._super,
                 x30[18]._super, x30[19]._super},
      Val32Array{x26[10]._super, x26[11]._super, x26[12]._super, x26[13]._super, x26[14]._super,
                 x26[15]._super, x26[16]._super, x26[17]._super, x26[18]._super, x26[19]._super,
                 x26[20]._super, x26[21]._super, x31[0]._super,  x31[1]._super,  x31[2]._super,
                 x31[3]._super,  x31[4]._super,  x31[5]._super,  x31[6]._super,  x31[7]._super,
                 x31[8]._super,  x31[9]._super,  x31[10]._super, x31[11]._super, x31[12]._super,
                 x31[13]._super, x31[14]._super, x31[15]._super, x31[16]._super, x31[17]._super,
                 x31[18]._super, x31[19]._super},
      Val32Array{x28[10]._super, x28[11]._super, x28[12]._super, x28[13]._super, x28[14]._super,
                 x28[15]._super, x28[16]._super, x28[17]._super, x28[18]._super, x28[19]._super,
                 x28[20]._super, x28[21]._super, x32[0]._super,  x32[1]._super,  x32[2]._super,
                 x32[3]._super,  x32[4]._super,  x32[5]._super,  x32[6]._super,  x32[7]._super,
                 x32[8]._super,  x32[9]._super,  x32[10]._super, x32[11]._super, x32[12]._super,
                 x32[13]._super, x32[14]._super, x32[15]._super, x32[16]._super, x32[17]._super,
                 x32[18]._super, x32[19]._super},
      Val32Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49,
                 x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65},
      TwoShortsStruct{.low = Val(27656), .high = Val(7735)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x67 = x66.aOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16_Struct x68 =
      execUnpackWithCarry(ctx, x67.low, x67.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  TwoShortsStruct x69 = x66.eOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16_Struct x70 =
      execUnpackWithCarry(ctx, x69.low, x69.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x71 = x68._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x72 = x70._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_2__1_Arm1_Super_SuperLayout> x73 = LAYOUT_LOOKUP(x3, arm1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:373)
  Val22Array x74 =
      Val22Array{x71[0]._super,  x71[1]._super,  x71[2]._super,  x71[3]._super,  x71[4]._super,
                 x71[5]._super,  x71[6]._super,  x71[7]._super,  x71[8]._super,  x71[9]._super,
                 x71[10]._super, x71[11]._super, x71[12]._super, x71[13]._super, x71[14]._super,
                 x71[15]._super, x71[16]._super, x71[17]._super, x71[18]._super, x71[19]._super,
                 x71[20]._super, x71[21]._super};
  Val22Array x75 =
      Val22Array{x71[22]._super, x71[23]._super, x71[24]._super, x71[25]._super, x71[26]._super,
                 x71[27]._super, x71[28]._super, x71[29]._super, x71[30]._super, x71[31]._super,
                 x72[0]._super,  x72[1]._super,  x72[2]._super,  x72[3]._super,  x72[4]._super,
                 x72[5]._super,  x72[6]._super,  x72[7]._super,  x72[8]._super,  x72[9]._super,
                 x72[10]._super, x72[11]._super};
  Val22Array x76 =
      Val22Array{x72[12]._super, x72[13]._super, x72[14]._super, x72[15]._super, x72[16]._super,
                 x72[17]._super, x72[18]._super, x72[19]._super, x72[20]._super, x72[21]._super,
                 x72[22]._super, x72[23]._super, x72[24]._super, x72[25]._super, x72[26]._super,
                 x72[27]._super, x72[28]._super, x72[29]._super, x72[30]._super, x72[31]._super,
                 Val(0),         Val(0)};
  Val22Array x77 = Val22Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,
                              x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55};
  Val22Array x78 = Val22Array{x56,    x57,    x58,    x59,    x60,    x61,    x62,    x63,
                              x64,    x65,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  Val x79 = x4.blk._super;
  Val x80 = x4.midx._super;
  if (to_size_t(Val(1))) {
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:376)
    RetTupleStruct x81 =
        exec_RetTuple(ctx,
                      x74,
                      x75,
                      x76,
                      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                      x77,
                      x78,
                      Val(2),
                      Val(22),
                      Val(0),
                      x79,
                      x80,
                      LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  NondetRegStruct24Array x82 = x4.arrD;
  Val24Array x83 =
      Val24Array{x82[0]._super,  x82[1]._super,  x82[2]._super,  x82[3]._super,  x82[4]._super,
                 x82[5]._super,  x82[6]._super,  x82[7]._super,  x82[8]._super,  x82[9]._super,
                 x82[10]._super, x82[11]._super, x82[12]._super, x82[13]._super, x82[14]._super,
                 x82[15]._super, x82[16]._super, x82[17]._super, x82[18]._super, x82[19]._super,
                 x82[20]._super, x82[21]._super, x82[22]._super, x82[23]._super};
  Val x84 = x4.rnd._super;
  if (to_size_t(Val(0))) {
    if (to_size_t(Val(0))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:380)
      RetTupleStruct x85 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(0),
                                         Val(23),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm0));
    }
    if (to_size_t(Val(1))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:383)
      RetTupleStruct x86 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(9),
                                         Val(17),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm1));
    }
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:379)
    RetTupleStruct x87 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x73, _super));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  RetTupleStruct x88 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x88;
}
RetTupleStruct execSha256mix_2__2_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<Sha256mix_2__2_Layout> layout2) {
  BoundLayout<Sha256mix_2__2__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:359)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:360)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:361)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:362)
  RetTupleStruct x8 = back_RetTuple(ctx, 7, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:363)
  RetTupleStruct x9 = back_RetTuple(ctx, 15, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:364)
  RetTupleStruct x10 = back_RetTuple(ctx, 16, arg1);
  // s2w(zirgen/circuit/keccak/sha256_for_keccak.zir:155)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:366)
  NondetRegStruct22Array x11 = x5.arrE;
  NondetRegStruct22Array x12 = x5.arrF;
  NondetRegStruct22Array x13 = x8.arrE;
  NondetRegStruct22Array x14 = x8.arrF;
  NondetRegStruct22Array x15 = x9.arrE;
  NondetRegStruct22Array x16 = x9.arrF;
  NondetRegStruct22Array x17 = x10.arrE;
  NondetRegStruct22Array x18 = x10.arrF;
  TwoShortsStruct x19 = execComputeW(
      ctx,
      Val32Array{x11[0]._super,  x11[1]._super,  x11[2]._super,  x11[3]._super,  x11[4]._super,
                 x11[5]._super,  x11[6]._super,  x11[7]._super,  x11[8]._super,  x11[9]._super,
                 x11[10]._super, x11[11]._super, x11[12]._super, x11[13]._super, x11[14]._super,
                 x11[15]._super, x11[16]._super, x11[17]._super, x11[18]._super, x11[19]._super,
                 x11[20]._super, x11[21]._super, x12[0]._super,  x12[1]._super,  x12[2]._super,
                 x12[3]._super,  x12[4]._super,  x12[5]._super,  x12[6]._super,  x12[7]._super,
                 x12[8]._super,  x12[9]._super},
      Val32Array{x13[0]._super,  x13[1]._super,  x13[2]._super,  x13[3]._super,  x13[4]._super,
                 x13[5]._super,  x13[6]._super,  x13[7]._super,  x13[8]._super,  x13[9]._super,
                 x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x14[0]._super,  x14[1]._super,  x14[2]._super,
                 x14[3]._super,  x14[4]._super,  x14[5]._super,  x14[6]._super,  x14[7]._super,
                 x14[8]._super,  x14[9]._super},
      Val32Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x16[0]._super,  x16[1]._super,  x16[2]._super,
                 x16[3]._super,  x16[4]._super,  x16[5]._super,  x16[6]._super,  x16[7]._super,
                 x16[8]._super,  x16[9]._super},
      Val32Array{x17[0]._super,  x17[1]._super,  x17[2]._super,  x17[3]._super,  x17[4]._super,
                 x17[5]._super,  x17[6]._super,  x17[7]._super,  x17[8]._super,  x17[9]._super,
                 x17[10]._super, x17[11]._super, x17[12]._super, x17[13]._super, x17[14]._super,
                 x17[15]._super, x17[16]._super, x17[17]._super, x17[18]._super, x17[19]._super,
                 x17[20]._super, x17[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super},
      LAYOUT_LOOKUP(layout2, packedW));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16_Struct x20 =
      execUnpackWithCarry(ctx, x19.low, x19.high, LAYOUT_LOOKUP(layout2, newW));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  NondetRegStruct22Array x21 = x4.arrA;
  NondetRegStruct22Array x22 = x4.arrB;
  NondetRegStruct22Array x23 = x5.arrA;
  NondetRegStruct22Array x24 = x5.arrB;
  NondetRegStruct22Array x25 = x6.arrA;
  NondetRegStruct22Array x26 = x6.arrB;
  NondetRegStruct22Array x27 = x7.arrA;
  NondetRegStruct22Array x28 = x7.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:369)
  NondetRegStruct22Array x29 = x4.arrC;
  NondetRegStruct22Array x30 = x5.arrC;
  NondetRegStruct22Array x31 = x6.arrC;
  NondetRegStruct22Array x32 = x7.arrC;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x33 = x20._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  Val x55 = x33[21]._super;
  Val x56 = x33[22]._super;
  Val x57 = x33[23]._super;
  Val x58 = x33[24]._super;
  Val x59 = x33[25]._super;
  Val x60 = x33[26]._super;
  Val x61 = x33[27]._super;
  Val x62 = x33[28]._super;
  Val x63 = x33[29]._super;
  Val x64 = x33[30]._super;
  Val x65 = x33[31]._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  ComputeAEStruct x66 = execComputeAE(
      ctx,
      Val32Array{x21[0]._super,  x21[1]._super,  x21[2]._super,  x21[3]._super,  x21[4]._super,
                 x21[5]._super,  x21[6]._super,  x21[7]._super,  x21[8]._super,  x21[9]._super,
                 x21[10]._super, x21[11]._super, x21[12]._super, x21[13]._super, x21[14]._super,
                 x21[15]._super, x21[16]._super, x21[17]._super, x21[18]._super, x21[19]._super,
                 x21[20]._super, x21[21]._super, x22[0]._super,  x22[1]._super,  x22[2]._super,
                 x22[3]._super,  x22[4]._super,  x22[5]._super,  x22[6]._super,  x22[7]._super,
                 x22[8]._super,  x22[9]._super},
      Val32Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super, x24[0]._super,  x24[1]._super,  x24[2]._super,
                 x24[3]._super,  x24[4]._super,  x24[5]._super,  x24[6]._super,  x24[7]._super,
                 x24[8]._super,  x24[9]._super},
      Val32Array{x25[0]._super,  x25[1]._super,  x25[2]._super,  x25[3]._super,  x25[4]._super,
                 x25[5]._super,  x25[6]._super,  x25[7]._super,  x25[8]._super,  x25[9]._super,
                 x25[10]._super, x25[11]._super, x25[12]._super, x25[13]._super, x25[14]._super,
                 x25[15]._super, x25[16]._super, x25[17]._super, x25[18]._super, x25[19]._super,
                 x25[20]._super, x25[21]._super, x26[0]._super,  x26[1]._super,  x26[2]._super,
                 x26[3]._super,  x26[4]._super,  x26[5]._super,  x26[6]._super,  x26[7]._super,
                 x26[8]._super,  x26[9]._super},
      Val32Array{x27[0]._super,  x27[1]._super,  x27[2]._super,  x27[3]._super,  x27[4]._super,
                 x27[5]._super,  x27[6]._super,  x27[7]._super,  x27[8]._super,  x27[9]._super,
                 x27[10]._super, x27[11]._super, x27[12]._super, x27[13]._super, x27[14]._super,
                 x27[15]._super, x27[16]._super, x27[17]._super, x27[18]._super, x27[19]._super,
                 x27[20]._super, x27[21]._super, x28[0]._super,  x28[1]._super,  x28[2]._super,
                 x28[3]._super,  x28[4]._super,  x28[5]._super,  x28[6]._super,  x28[7]._super,
                 x28[8]._super,  x28[9]._super},
      Val32Array{x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super, x29[0]._super,  x29[1]._super,  x29[2]._super,
                 x29[3]._super,  x29[4]._super,  x29[5]._super,  x29[6]._super,  x29[7]._super,
                 x29[8]._super,  x29[9]._super,  x29[10]._super, x29[11]._super, x29[12]._super,
                 x29[13]._super, x29[14]._super, x29[15]._super, x29[16]._super, x29[17]._super,
                 x29[18]._super, x29[19]._super},
      Val32Array{x24[10]._super, x24[11]._super, x24[12]._super, x24[13]._super, x24[14]._super,
                 x24[15]._super, x24[16]._super, x24[17]._super, x24[18]._super, x24[19]._super,
                 x24[20]._super, x24[21]._super, x30[0]._super,  x30[1]._super,  x30[2]._super,
                 x30[3]._super,  x30[4]._super,  x30[5]._super,  x30[6]._super,  x30[7]._super,
                 x30[8]._super,  x30[9]._super,  x30[10]._super, x30[11]._super, x30[12]._super,
                 x30[13]._super, x30[14]._super, x30[15]._super, x30[16]._super, x30[17]._super,
                 x30[18]._super, x30[19]._super},
      Val32Array{x26[10]._super, x26[11]._super, x26[12]._super, x26[13]._super, x26[14]._super,
                 x26[15]._super, x26[16]._super, x26[17]._super, x26[18]._super, x26[19]._super,
                 x26[20]._super, x26[21]._super, x31[0]._super,  x31[1]._super,  x31[2]._super,
                 x31[3]._super,  x31[4]._super,  x31[5]._super,  x31[6]._super,  x31[7]._super,
                 x31[8]._super,  x31[9]._super,  x31[10]._super, x31[11]._super, x31[12]._super,
                 x31[13]._super, x31[14]._super, x31[15]._super, x31[16]._super, x31[17]._super,
                 x31[18]._super, x31[19]._super},
      Val32Array{x28[10]._super, x28[11]._super, x28[12]._super, x28[13]._super, x28[14]._super,
                 x28[15]._super, x28[16]._super, x28[17]._super, x28[18]._super, x28[19]._super,
                 x28[20]._super, x28[21]._super, x32[0]._super,  x32[1]._super,  x32[2]._super,
                 x32[3]._super,  x32[4]._super,  x32[5]._super,  x32[6]._super,  x32[7]._super,
                 x32[8]._super,  x32[9]._super,  x32[10]._super, x32[11]._super, x32[12]._super,
                 x32[13]._super, x32[14]._super, x32[15]._super, x32[16]._super, x32[17]._super,
                 x32[18]._super, x32[19]._super},
      Val32Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49,
                 x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65},
      TwoShortsStruct{.low = Val(30540), .high = Val(10056)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x67 = x66.aOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16_Struct x68 =
      execUnpackWithCarry(ctx, x67.low, x67.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  TwoShortsStruct x69 = x66.eOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16_Struct x70 =
      execUnpackWithCarry(ctx, x69.low, x69.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x71 = x68._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x72 = x70._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_2__2_Arm1_Super_SuperLayout> x73 = LAYOUT_LOOKUP(x3, arm1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:373)
  Val22Array x74 =
      Val22Array{x71[0]._super,  x71[1]._super,  x71[2]._super,  x71[3]._super,  x71[4]._super,
                 x71[5]._super,  x71[6]._super,  x71[7]._super,  x71[8]._super,  x71[9]._super,
                 x71[10]._super, x71[11]._super, x71[12]._super, x71[13]._super, x71[14]._super,
                 x71[15]._super, x71[16]._super, x71[17]._super, x71[18]._super, x71[19]._super,
                 x71[20]._super, x71[21]._super};
  Val22Array x75 =
      Val22Array{x71[22]._super, x71[23]._super, x71[24]._super, x71[25]._super, x71[26]._super,
                 x71[27]._super, x71[28]._super, x71[29]._super, x71[30]._super, x71[31]._super,
                 x72[0]._super,  x72[1]._super,  x72[2]._super,  x72[3]._super,  x72[4]._super,
                 x72[5]._super,  x72[6]._super,  x72[7]._super,  x72[8]._super,  x72[9]._super,
                 x72[10]._super, x72[11]._super};
  Val22Array x76 =
      Val22Array{x72[12]._super, x72[13]._super, x72[14]._super, x72[15]._super, x72[16]._super,
                 x72[17]._super, x72[18]._super, x72[19]._super, x72[20]._super, x72[21]._super,
                 x72[22]._super, x72[23]._super, x72[24]._super, x72[25]._super, x72[26]._super,
                 x72[27]._super, x72[28]._super, x72[29]._super, x72[30]._super, x72[31]._super,
                 Val(0),         Val(0)};
  Val22Array x77 = Val22Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,
                              x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55};
  Val22Array x78 = Val22Array{x56,    x57,    x58,    x59,    x60,    x61,    x62,    x63,
                              x64,    x65,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  Val x79 = x4.blk._super;
  Val x80 = x4.midx._super;
  if (to_size_t(Val(1))) {
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:376)
    RetTupleStruct x81 =
        exec_RetTuple(ctx,
                      x74,
                      x75,
                      x76,
                      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                      x77,
                      x78,
                      Val(3),
                      Val(22),
                      Val(0),
                      x79,
                      x80,
                      LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  NondetRegStruct24Array x82 = x4.arrD;
  Val24Array x83 =
      Val24Array{x82[0]._super,  x82[1]._super,  x82[2]._super,  x82[3]._super,  x82[4]._super,
                 x82[5]._super,  x82[6]._super,  x82[7]._super,  x82[8]._super,  x82[9]._super,
                 x82[10]._super, x82[11]._super, x82[12]._super, x82[13]._super, x82[14]._super,
                 x82[15]._super, x82[16]._super, x82[17]._super, x82[18]._super, x82[19]._super,
                 x82[20]._super, x82[21]._super, x82[22]._super, x82[23]._super};
  Val x84 = x4.rnd._super;
  if (to_size_t(Val(0))) {
    if (to_size_t(Val(0))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:380)
      RetTupleStruct x85 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(0),
                                         Val(23),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm0));
    }
    if (to_size_t(Val(1))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:383)
      RetTupleStruct x86 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(9),
                                         Val(17),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm1));
    }
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:379)
    RetTupleStruct x87 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x73, _super));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  RetTupleStruct x88 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x88;
}
RetTupleStruct execSha256mix_2__3_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<Sha256mix_2__3_Layout> layout2) {
  BoundLayout<Sha256mix_2__3__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:359)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:360)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:361)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:362)
  RetTupleStruct x8 = back_RetTuple(ctx, 7, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:363)
  RetTupleStruct x9 = back_RetTuple(ctx, 15, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:364)
  RetTupleStruct x10 = back_RetTuple(ctx, 16, arg1);
  // s2w(zirgen/circuit/keccak/sha256_for_keccak.zir:155)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:366)
  NondetRegStruct22Array x11 = x5.arrE;
  NondetRegStruct22Array x12 = x5.arrF;
  NondetRegStruct22Array x13 = x8.arrE;
  NondetRegStruct22Array x14 = x8.arrF;
  NondetRegStruct22Array x15 = x9.arrE;
  NondetRegStruct22Array x16 = x9.arrF;
  NondetRegStruct22Array x17 = x10.arrE;
  NondetRegStruct22Array x18 = x10.arrF;
  TwoShortsStruct x19 = execComputeW(
      ctx,
      Val32Array{x11[0]._super,  x11[1]._super,  x11[2]._super,  x11[3]._super,  x11[4]._super,
                 x11[5]._super,  x11[6]._super,  x11[7]._super,  x11[8]._super,  x11[9]._super,
                 x11[10]._super, x11[11]._super, x11[12]._super, x11[13]._super, x11[14]._super,
                 x11[15]._super, x11[16]._super, x11[17]._super, x11[18]._super, x11[19]._super,
                 x11[20]._super, x11[21]._super, x12[0]._super,  x12[1]._super,  x12[2]._super,
                 x12[3]._super,  x12[4]._super,  x12[5]._super,  x12[6]._super,  x12[7]._super,
                 x12[8]._super,  x12[9]._super},
      Val32Array{x13[0]._super,  x13[1]._super,  x13[2]._super,  x13[3]._super,  x13[4]._super,
                 x13[5]._super,  x13[6]._super,  x13[7]._super,  x13[8]._super,  x13[9]._super,
                 x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x14[0]._super,  x14[1]._super,  x14[2]._super,
                 x14[3]._super,  x14[4]._super,  x14[5]._super,  x14[6]._super,  x14[7]._super,
                 x14[8]._super,  x14[9]._super},
      Val32Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x16[0]._super,  x16[1]._super,  x16[2]._super,
                 x16[3]._super,  x16[4]._super,  x16[5]._super,  x16[6]._super,  x16[7]._super,
                 x16[8]._super,  x16[9]._super},
      Val32Array{x17[0]._super,  x17[1]._super,  x17[2]._super,  x17[3]._super,  x17[4]._super,
                 x17[5]._super,  x17[6]._super,  x17[7]._super,  x17[8]._super,  x17[9]._super,
                 x17[10]._super, x17[11]._super, x17[12]._super, x17[13]._super, x17[14]._super,
                 x17[15]._super, x17[16]._super, x17[17]._super, x17[18]._super, x17[19]._super,
                 x17[20]._super, x17[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super},
      LAYOUT_LOOKUP(layout2, packedW));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16_Struct x20 =
      execUnpackWithCarry(ctx, x19.low, x19.high, LAYOUT_LOOKUP(layout2, newW));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  NondetRegStruct22Array x21 = x4.arrA;
  NondetRegStruct22Array x22 = x4.arrB;
  NondetRegStruct22Array x23 = x5.arrA;
  NondetRegStruct22Array x24 = x5.arrB;
  NondetRegStruct22Array x25 = x6.arrA;
  NondetRegStruct22Array x26 = x6.arrB;
  NondetRegStruct22Array x27 = x7.arrA;
  NondetRegStruct22Array x28 = x7.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:369)
  NondetRegStruct22Array x29 = x4.arrC;
  NondetRegStruct22Array x30 = x5.arrC;
  NondetRegStruct22Array x31 = x6.arrC;
  NondetRegStruct22Array x32 = x7.arrC;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x33 = x20._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  Val x55 = x33[21]._super;
  Val x56 = x33[22]._super;
  Val x57 = x33[23]._super;
  Val x58 = x33[24]._super;
  Val x59 = x33[25]._super;
  Val x60 = x33[26]._super;
  Val x61 = x33[27]._super;
  Val x62 = x33[28]._super;
  Val x63 = x33[29]._super;
  Val x64 = x33[30]._super;
  Val x65 = x33[31]._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  ComputeAEStruct x66 = execComputeAE(
      ctx,
      Val32Array{x21[0]._super,  x21[1]._super,  x21[2]._super,  x21[3]._super,  x21[4]._super,
                 x21[5]._super,  x21[6]._super,  x21[7]._super,  x21[8]._super,  x21[9]._super,
                 x21[10]._super, x21[11]._super, x21[12]._super, x21[13]._super, x21[14]._super,
                 x21[15]._super, x21[16]._super, x21[17]._super, x21[18]._super, x21[19]._super,
                 x21[20]._super, x21[21]._super, x22[0]._super,  x22[1]._super,  x22[2]._super,
                 x22[3]._super,  x22[4]._super,  x22[5]._super,  x22[6]._super,  x22[7]._super,
                 x22[8]._super,  x22[9]._super},
      Val32Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super, x24[0]._super,  x24[1]._super,  x24[2]._super,
                 x24[3]._super,  x24[4]._super,  x24[5]._super,  x24[6]._super,  x24[7]._super,
                 x24[8]._super,  x24[9]._super},
      Val32Array{x25[0]._super,  x25[1]._super,  x25[2]._super,  x25[3]._super,  x25[4]._super,
                 x25[5]._super,  x25[6]._super,  x25[7]._super,  x25[8]._super,  x25[9]._super,
                 x25[10]._super, x25[11]._super, x25[12]._super, x25[13]._super, x25[14]._super,
                 x25[15]._super, x25[16]._super, x25[17]._super, x25[18]._super, x25[19]._super,
                 x25[20]._super, x25[21]._super, x26[0]._super,  x26[1]._super,  x26[2]._super,
                 x26[3]._super,  x26[4]._super,  x26[5]._super,  x26[6]._super,  x26[7]._super,
                 x26[8]._super,  x26[9]._super},
      Val32Array{x27[0]._super,  x27[1]._super,  x27[2]._super,  x27[3]._super,  x27[4]._super,
                 x27[5]._super,  x27[6]._super,  x27[7]._super,  x27[8]._super,  x27[9]._super,
                 x27[10]._super, x27[11]._super, x27[12]._super, x27[13]._super, x27[14]._super,
                 x27[15]._super, x27[16]._super, x27[17]._super, x27[18]._super, x27[19]._super,
                 x27[20]._super, x27[21]._super, x28[0]._super,  x28[1]._super,  x28[2]._super,
                 x28[3]._super,  x28[4]._super,  x28[5]._super,  x28[6]._super,  x28[7]._super,
                 x28[8]._super,  x28[9]._super},
      Val32Array{x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super, x29[0]._super,  x29[1]._super,  x29[2]._super,
                 x29[3]._super,  x29[4]._super,  x29[5]._super,  x29[6]._super,  x29[7]._super,
                 x29[8]._super,  x29[9]._super,  x29[10]._super, x29[11]._super, x29[12]._super,
                 x29[13]._super, x29[14]._super, x29[15]._super, x29[16]._super, x29[17]._super,
                 x29[18]._super, x29[19]._super},
      Val32Array{x24[10]._super, x24[11]._super, x24[12]._super, x24[13]._super, x24[14]._super,
                 x24[15]._super, x24[16]._super, x24[17]._super, x24[18]._super, x24[19]._super,
                 x24[20]._super, x24[21]._super, x30[0]._super,  x30[1]._super,  x30[2]._super,
                 x30[3]._super,  x30[4]._super,  x30[5]._super,  x30[6]._super,  x30[7]._super,
                 x30[8]._super,  x30[9]._super,  x30[10]._super, x30[11]._super, x30[12]._super,
                 x30[13]._super, x30[14]._super, x30[15]._super, x30[16]._super, x30[17]._super,
                 x30[18]._super, x30[19]._super},
      Val32Array{x26[10]._super, x26[11]._super, x26[12]._super, x26[13]._super, x26[14]._super,
                 x26[15]._super, x26[16]._super, x26[17]._super, x26[18]._super, x26[19]._super,
                 x26[20]._super, x26[21]._super, x31[0]._super,  x31[1]._super,  x31[2]._super,
                 x31[3]._super,  x31[4]._super,  x31[5]._super,  x31[6]._super,  x31[7]._super,
                 x31[8]._super,  x31[9]._super,  x31[10]._super, x31[11]._super, x31[12]._super,
                 x31[13]._super, x31[14]._super, x31[15]._super, x31[16]._super, x31[17]._super,
                 x31[18]._super, x31[19]._super},
      Val32Array{x28[10]._super, x28[11]._super, x28[12]._super, x28[13]._super, x28[14]._super,
                 x28[15]._super, x28[16]._super, x28[17]._super, x28[18]._super, x28[19]._super,
                 x28[20]._super, x28[21]._super, x32[0]._super,  x32[1]._super,  x32[2]._super,
                 x32[3]._super,  x32[4]._super,  x32[5]._super,  x32[6]._super,  x32[7]._super,
                 x32[8]._super,  x32[9]._super,  x32[10]._super, x32[11]._super, x32[12]._super,
                 x32[13]._super, x32[14]._super, x32[15]._super, x32[16]._super, x32[17]._super,
                 x32[18]._super, x32[19]._super},
      Val32Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49,
                 x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65},
      TwoShortsStruct{.low = Val(48309), .high = Val(13488)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x67 = x66.aOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16_Struct x68 =
      execUnpackWithCarry(ctx, x67.low, x67.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  TwoShortsStruct x69 = x66.eOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16_Struct x70 =
      execUnpackWithCarry(ctx, x69.low, x69.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x71 = x68._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x72 = x70._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_2__3_Arm1_Super_SuperLayout> x73 = LAYOUT_LOOKUP(x3, arm1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:373)
  Val22Array x74 =
      Val22Array{x71[0]._super,  x71[1]._super,  x71[2]._super,  x71[3]._super,  x71[4]._super,
                 x71[5]._super,  x71[6]._super,  x71[7]._super,  x71[8]._super,  x71[9]._super,
                 x71[10]._super, x71[11]._super, x71[12]._super, x71[13]._super, x71[14]._super,
                 x71[15]._super, x71[16]._super, x71[17]._super, x71[18]._super, x71[19]._super,
                 x71[20]._super, x71[21]._super};
  Val22Array x75 =
      Val22Array{x71[22]._super, x71[23]._super, x71[24]._super, x71[25]._super, x71[26]._super,
                 x71[27]._super, x71[28]._super, x71[29]._super, x71[30]._super, x71[31]._super,
                 x72[0]._super,  x72[1]._super,  x72[2]._super,  x72[3]._super,  x72[4]._super,
                 x72[5]._super,  x72[6]._super,  x72[7]._super,  x72[8]._super,  x72[9]._super,
                 x72[10]._super, x72[11]._super};
  Val22Array x76 =
      Val22Array{x72[12]._super, x72[13]._super, x72[14]._super, x72[15]._super, x72[16]._super,
                 x72[17]._super, x72[18]._super, x72[19]._super, x72[20]._super, x72[21]._super,
                 x72[22]._super, x72[23]._super, x72[24]._super, x72[25]._super, x72[26]._super,
                 x72[27]._super, x72[28]._super, x72[29]._super, x72[30]._super, x72[31]._super,
                 Val(0),         Val(0)};
  Val22Array x77 = Val22Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,
                              x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55};
  Val22Array x78 = Val22Array{x56,    x57,    x58,    x59,    x60,    x61,    x62,    x63,
                              x64,    x65,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  Val x79 = x4.blk._super;
  Val x80 = x4.midx._super;
  if (to_size_t(Val(1))) {
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:376)
    RetTupleStruct x81 =
        exec_RetTuple(ctx,
                      x74,
                      x75,
                      x76,
                      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                      x77,
                      x78,
                      Val(4),
                      Val(22),
                      Val(0),
                      x79,
                      x80,
                      LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  NondetRegStruct24Array x82 = x4.arrD;
  Val24Array x83 =
      Val24Array{x82[0]._super,  x82[1]._super,  x82[2]._super,  x82[3]._super,  x82[4]._super,
                 x82[5]._super,  x82[6]._super,  x82[7]._super,  x82[8]._super,  x82[9]._super,
                 x82[10]._super, x82[11]._super, x82[12]._super, x82[13]._super, x82[14]._super,
                 x82[15]._super, x82[16]._super, x82[17]._super, x82[18]._super, x82[19]._super,
                 x82[20]._super, x82[21]._super, x82[22]._super, x82[23]._super};
  Val x84 = x4.rnd._super;
  if (to_size_t(Val(0))) {
    if (to_size_t(Val(0))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:380)
      RetTupleStruct x85 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(0),
                                         Val(23),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm0));
    }
    if (to_size_t(Val(1))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:383)
      RetTupleStruct x86 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(9),
                                         Val(17),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm1));
    }
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:379)
    RetTupleStruct x87 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x73, _super));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  RetTupleStruct x88 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x88;
}
RetTupleStruct execSha256mix_2__4_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<Sha256mix_2__4_Layout> layout2) {
  BoundLayout<Sha256mix_2__4__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:359)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:360)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:361)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:362)
  RetTupleStruct x8 = back_RetTuple(ctx, 7, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:363)
  RetTupleStruct x9 = back_RetTuple(ctx, 15, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:364)
  RetTupleStruct x10 = back_RetTuple(ctx, 16, arg1);
  // s2w(zirgen/circuit/keccak/sha256_for_keccak.zir:155)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:366)
  NondetRegStruct22Array x11 = x5.arrE;
  NondetRegStruct22Array x12 = x5.arrF;
  NondetRegStruct22Array x13 = x8.arrE;
  NondetRegStruct22Array x14 = x8.arrF;
  NondetRegStruct22Array x15 = x9.arrE;
  NondetRegStruct22Array x16 = x9.arrF;
  NondetRegStruct22Array x17 = x10.arrE;
  NondetRegStruct22Array x18 = x10.arrF;
  TwoShortsStruct x19 = execComputeW(
      ctx,
      Val32Array{x11[0]._super,  x11[1]._super,  x11[2]._super,  x11[3]._super,  x11[4]._super,
                 x11[5]._super,  x11[6]._super,  x11[7]._super,  x11[8]._super,  x11[9]._super,
                 x11[10]._super, x11[11]._super, x11[12]._super, x11[13]._super, x11[14]._super,
                 x11[15]._super, x11[16]._super, x11[17]._super, x11[18]._super, x11[19]._super,
                 x11[20]._super, x11[21]._super, x12[0]._super,  x12[1]._super,  x12[2]._super,
                 x12[3]._super,  x12[4]._super,  x12[5]._super,  x12[6]._super,  x12[7]._super,
                 x12[8]._super,  x12[9]._super},
      Val32Array{x13[0]._super,  x13[1]._super,  x13[2]._super,  x13[3]._super,  x13[4]._super,
                 x13[5]._super,  x13[6]._super,  x13[7]._super,  x13[8]._super,  x13[9]._super,
                 x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x14[0]._super,  x14[1]._super,  x14[2]._super,
                 x14[3]._super,  x14[4]._super,  x14[5]._super,  x14[6]._super,  x14[7]._super,
                 x14[8]._super,  x14[9]._super},
      Val32Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x16[0]._super,  x16[1]._super,  x16[2]._super,
                 x16[3]._super,  x16[4]._super,  x16[5]._super,  x16[6]._super,  x16[7]._super,
                 x16[8]._super,  x16[9]._super},
      Val32Array{x17[0]._super,  x17[1]._super,  x17[2]._super,  x17[3]._super,  x17[4]._super,
                 x17[5]._super,  x17[6]._super,  x17[7]._super,  x17[8]._super,  x17[9]._super,
                 x17[10]._super, x17[11]._super, x17[12]._super, x17[13]._super, x17[14]._super,
                 x17[15]._super, x17[16]._super, x17[17]._super, x17[18]._super, x17[19]._super,
                 x17[20]._super, x17[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super},
      LAYOUT_LOOKUP(layout2, packedW));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16_Struct x20 =
      execUnpackWithCarry(ctx, x19.low, x19.high, LAYOUT_LOOKUP(layout2, newW));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  NondetRegStruct22Array x21 = x4.arrA;
  NondetRegStruct22Array x22 = x4.arrB;
  NondetRegStruct22Array x23 = x5.arrA;
  NondetRegStruct22Array x24 = x5.arrB;
  NondetRegStruct22Array x25 = x6.arrA;
  NondetRegStruct22Array x26 = x6.arrB;
  NondetRegStruct22Array x27 = x7.arrA;
  NondetRegStruct22Array x28 = x7.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:369)
  NondetRegStruct22Array x29 = x4.arrC;
  NondetRegStruct22Array x30 = x5.arrC;
  NondetRegStruct22Array x31 = x6.arrC;
  NondetRegStruct22Array x32 = x7.arrC;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x33 = x20._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  Val x55 = x33[21]._super;
  Val x56 = x33[22]._super;
  Val x57 = x33[23]._super;
  Val x58 = x33[24]._super;
  Val x59 = x33[25]._super;
  Val x60 = x33[26]._super;
  Val x61 = x33[27]._super;
  Val x62 = x33[28]._super;
  Val x63 = x33[29]._super;
  Val x64 = x33[30]._super;
  Val x65 = x33[31]._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  ComputeAEStruct x66 = execComputeAE(
      ctx,
      Val32Array{x21[0]._super,  x21[1]._super,  x21[2]._super,  x21[3]._super,  x21[4]._super,
                 x21[5]._super,  x21[6]._super,  x21[7]._super,  x21[8]._super,  x21[9]._super,
                 x21[10]._super, x21[11]._super, x21[12]._super, x21[13]._super, x21[14]._super,
                 x21[15]._super, x21[16]._super, x21[17]._super, x21[18]._super, x21[19]._super,
                 x21[20]._super, x21[21]._super, x22[0]._super,  x22[1]._super,  x22[2]._super,
                 x22[3]._super,  x22[4]._super,  x22[5]._super,  x22[6]._super,  x22[7]._super,
                 x22[8]._super,  x22[9]._super},
      Val32Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super, x24[0]._super,  x24[1]._super,  x24[2]._super,
                 x24[3]._super,  x24[4]._super,  x24[5]._super,  x24[6]._super,  x24[7]._super,
                 x24[8]._super,  x24[9]._super},
      Val32Array{x25[0]._super,  x25[1]._super,  x25[2]._super,  x25[3]._super,  x25[4]._super,
                 x25[5]._super,  x25[6]._super,  x25[7]._super,  x25[8]._super,  x25[9]._super,
                 x25[10]._super, x25[11]._super, x25[12]._super, x25[13]._super, x25[14]._super,
                 x25[15]._super, x25[16]._super, x25[17]._super, x25[18]._super, x25[19]._super,
                 x25[20]._super, x25[21]._super, x26[0]._super,  x26[1]._super,  x26[2]._super,
                 x26[3]._super,  x26[4]._super,  x26[5]._super,  x26[6]._super,  x26[7]._super,
                 x26[8]._super,  x26[9]._super},
      Val32Array{x27[0]._super,  x27[1]._super,  x27[2]._super,  x27[3]._super,  x27[4]._super,
                 x27[5]._super,  x27[6]._super,  x27[7]._super,  x27[8]._super,  x27[9]._super,
                 x27[10]._super, x27[11]._super, x27[12]._super, x27[13]._super, x27[14]._super,
                 x27[15]._super, x27[16]._super, x27[17]._super, x27[18]._super, x27[19]._super,
                 x27[20]._super, x27[21]._super, x28[0]._super,  x28[1]._super,  x28[2]._super,
                 x28[3]._super,  x28[4]._super,  x28[5]._super,  x28[6]._super,  x28[7]._super,
                 x28[8]._super,  x28[9]._super},
      Val32Array{x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super, x29[0]._super,  x29[1]._super,  x29[2]._super,
                 x29[3]._super,  x29[4]._super,  x29[5]._super,  x29[6]._super,  x29[7]._super,
                 x29[8]._super,  x29[9]._super,  x29[10]._super, x29[11]._super, x29[12]._super,
                 x29[13]._super, x29[14]._super, x29[15]._super, x29[16]._super, x29[17]._super,
                 x29[18]._super, x29[19]._super},
      Val32Array{x24[10]._super, x24[11]._super, x24[12]._super, x24[13]._super, x24[14]._super,
                 x24[15]._super, x24[16]._super, x24[17]._super, x24[18]._super, x24[19]._super,
                 x24[20]._super, x24[21]._super, x30[0]._super,  x30[1]._super,  x30[2]._super,
                 x30[3]._super,  x30[4]._super,  x30[5]._super,  x30[6]._super,  x30[7]._super,
                 x30[8]._super,  x30[9]._super,  x30[10]._super, x30[11]._super, x30[12]._super,
                 x30[13]._super, x30[14]._super, x30[15]._super, x30[16]._super, x30[17]._super,
                 x30[18]._super, x30[19]._super},
      Val32Array{x26[10]._super, x26[11]._super, x26[12]._super, x26[13]._super, x26[14]._super,
                 x26[15]._super, x26[16]._super, x26[17]._super, x26[18]._super, x26[19]._super,
                 x26[20]._super, x26[21]._super, x31[0]._super,  x31[1]._super,  x31[2]._super,
                 x31[3]._super,  x31[4]._super,  x31[5]._super,  x31[6]._super,  x31[7]._super,
                 x31[8]._super,  x31[9]._super,  x31[10]._super, x31[11]._super, x31[12]._super,
                 x31[13]._super, x31[14]._super, x31[15]._super, x31[16]._super, x31[17]._super,
                 x31[18]._super, x31[19]._super},
      Val32Array{x28[10]._super, x28[11]._super, x28[12]._super, x28[13]._super, x28[14]._super,
                 x28[15]._super, x28[16]._super, x28[17]._super, x28[18]._super, x28[19]._super,
                 x28[20]._super, x28[21]._super, x32[0]._super,  x32[1]._super,  x32[2]._super,
                 x32[3]._super,  x32[4]._super,  x32[5]._super,  x32[6]._super,  x32[7]._super,
                 x32[8]._super,  x32[9]._super,  x32[10]._super, x32[11]._super, x32[12]._super,
                 x32[13]._super, x32[14]._super, x32[15]._super, x32[16]._super, x32[17]._super,
                 x32[18]._super, x32[19]._super},
      Val32Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49,
                 x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65},
      TwoShortsStruct{.low = Val(3251), .high = Val(14620)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x67 = x66.aOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16_Struct x68 =
      execUnpackWithCarry(ctx, x67.low, x67.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  TwoShortsStruct x69 = x66.eOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16_Struct x70 =
      execUnpackWithCarry(ctx, x69.low, x69.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x71 = x68._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x72 = x70._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_2__4_Arm1_Super_SuperLayout> x73 = LAYOUT_LOOKUP(x3, arm1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:373)
  Val22Array x74 =
      Val22Array{x71[0]._super,  x71[1]._super,  x71[2]._super,  x71[3]._super,  x71[4]._super,
                 x71[5]._super,  x71[6]._super,  x71[7]._super,  x71[8]._super,  x71[9]._super,
                 x71[10]._super, x71[11]._super, x71[12]._super, x71[13]._super, x71[14]._super,
                 x71[15]._super, x71[16]._super, x71[17]._super, x71[18]._super, x71[19]._super,
                 x71[20]._super, x71[21]._super};
  Val22Array x75 =
      Val22Array{x71[22]._super, x71[23]._super, x71[24]._super, x71[25]._super, x71[26]._super,
                 x71[27]._super, x71[28]._super, x71[29]._super, x71[30]._super, x71[31]._super,
                 x72[0]._super,  x72[1]._super,  x72[2]._super,  x72[3]._super,  x72[4]._super,
                 x72[5]._super,  x72[6]._super,  x72[7]._super,  x72[8]._super,  x72[9]._super,
                 x72[10]._super, x72[11]._super};
  Val22Array x76 =
      Val22Array{x72[12]._super, x72[13]._super, x72[14]._super, x72[15]._super, x72[16]._super,
                 x72[17]._super, x72[18]._super, x72[19]._super, x72[20]._super, x72[21]._super,
                 x72[22]._super, x72[23]._super, x72[24]._super, x72[25]._super, x72[26]._super,
                 x72[27]._super, x72[28]._super, x72[29]._super, x72[30]._super, x72[31]._super,
                 Val(0),         Val(0)};
  Val22Array x77 = Val22Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,
                              x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55};
  Val22Array x78 = Val22Array{x56,    x57,    x58,    x59,    x60,    x61,    x62,    x63,
                              x64,    x65,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  Val x79 = x4.blk._super;
  Val x80 = x4.midx._super;
  if (to_size_t(Val(1))) {
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:376)
    RetTupleStruct x81 =
        exec_RetTuple(ctx,
                      x74,
                      x75,
                      x76,
                      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                      x77,
                      x78,
                      Val(5),
                      Val(22),
                      Val(0),
                      x79,
                      x80,
                      LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  NondetRegStruct24Array x82 = x4.arrD;
  Val24Array x83 =
      Val24Array{x82[0]._super,  x82[1]._super,  x82[2]._super,  x82[3]._super,  x82[4]._super,
                 x82[5]._super,  x82[6]._super,  x82[7]._super,  x82[8]._super,  x82[9]._super,
                 x82[10]._super, x82[11]._super, x82[12]._super, x82[13]._super, x82[14]._super,
                 x82[15]._super, x82[16]._super, x82[17]._super, x82[18]._super, x82[19]._super,
                 x82[20]._super, x82[21]._super, x82[22]._super, x82[23]._super};
  Val x84 = x4.rnd._super;
  if (to_size_t(Val(0))) {
    if (to_size_t(Val(0))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:380)
      RetTupleStruct x85 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(0),
                                         Val(23),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm0));
    }
    if (to_size_t(Val(1))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:383)
      RetTupleStruct x86 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(9),
                                         Val(17),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm1));
    }
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:379)
    RetTupleStruct x87 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x73, _super));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  RetTupleStruct x88 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x88;
}
RetTupleStruct execSha256mix_2__5_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<Sha256mix_2__5_Layout> layout2) {
  BoundLayout<Sha256mix_2__5__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:359)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:360)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:361)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:362)
  RetTupleStruct x8 = back_RetTuple(ctx, 7, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:363)
  RetTupleStruct x9 = back_RetTuple(ctx, 15, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:364)
  RetTupleStruct x10 = back_RetTuple(ctx, 16, arg1);
  // s2w(zirgen/circuit/keccak/sha256_for_keccak.zir:155)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:366)
  NondetRegStruct22Array x11 = x5.arrE;
  NondetRegStruct22Array x12 = x5.arrF;
  NondetRegStruct22Array x13 = x8.arrE;
  NondetRegStruct22Array x14 = x8.arrF;
  NondetRegStruct22Array x15 = x9.arrE;
  NondetRegStruct22Array x16 = x9.arrF;
  NondetRegStruct22Array x17 = x10.arrE;
  NondetRegStruct22Array x18 = x10.arrF;
  TwoShortsStruct x19 = execComputeW(
      ctx,
      Val32Array{x11[0]._super,  x11[1]._super,  x11[2]._super,  x11[3]._super,  x11[4]._super,
                 x11[5]._super,  x11[6]._super,  x11[7]._super,  x11[8]._super,  x11[9]._super,
                 x11[10]._super, x11[11]._super, x11[12]._super, x11[13]._super, x11[14]._super,
                 x11[15]._super, x11[16]._super, x11[17]._super, x11[18]._super, x11[19]._super,
                 x11[20]._super, x11[21]._super, x12[0]._super,  x12[1]._super,  x12[2]._super,
                 x12[3]._super,  x12[4]._super,  x12[5]._super,  x12[6]._super,  x12[7]._super,
                 x12[8]._super,  x12[9]._super},
      Val32Array{x13[0]._super,  x13[1]._super,  x13[2]._super,  x13[3]._super,  x13[4]._super,
                 x13[5]._super,  x13[6]._super,  x13[7]._super,  x13[8]._super,  x13[9]._super,
                 x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x14[0]._super,  x14[1]._super,  x14[2]._super,
                 x14[3]._super,  x14[4]._super,  x14[5]._super,  x14[6]._super,  x14[7]._super,
                 x14[8]._super,  x14[9]._super},
      Val32Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x16[0]._super,  x16[1]._super,  x16[2]._super,
                 x16[3]._super,  x16[4]._super,  x16[5]._super,  x16[6]._super,  x16[7]._super,
                 x16[8]._super,  x16[9]._super},
      Val32Array{x17[0]._super,  x17[1]._super,  x17[2]._super,  x17[3]._super,  x17[4]._super,
                 x17[5]._super,  x17[6]._super,  x17[7]._super,  x17[8]._super,  x17[9]._super,
                 x17[10]._super, x17[11]._super, x17[12]._super, x17[13]._super, x17[14]._super,
                 x17[15]._super, x17[16]._super, x17[17]._super, x17[18]._super, x17[19]._super,
                 x17[20]._super, x17[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super},
      LAYOUT_LOOKUP(layout2, packedW));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16_Struct x20 =
      execUnpackWithCarry(ctx, x19.low, x19.high, LAYOUT_LOOKUP(layout2, newW));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  NondetRegStruct22Array x21 = x4.arrA;
  NondetRegStruct22Array x22 = x4.arrB;
  NondetRegStruct22Array x23 = x5.arrA;
  NondetRegStruct22Array x24 = x5.arrB;
  NondetRegStruct22Array x25 = x6.arrA;
  NondetRegStruct22Array x26 = x6.arrB;
  NondetRegStruct22Array x27 = x7.arrA;
  NondetRegStruct22Array x28 = x7.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:369)
  NondetRegStruct22Array x29 = x4.arrC;
  NondetRegStruct22Array x30 = x5.arrC;
  NondetRegStruct22Array x31 = x6.arrC;
  NondetRegStruct22Array x32 = x7.arrC;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x33 = x20._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  Val x55 = x33[21]._super;
  Val x56 = x33[22]._super;
  Val x57 = x33[23]._super;
  Val x58 = x33[24]._super;
  Val x59 = x33[25]._super;
  Val x60 = x33[26]._super;
  Val x61 = x33[27]._super;
  Val x62 = x33[28]._super;
  Val x63 = x33[29]._super;
  Val x64 = x33[30]._super;
  Val x65 = x33[31]._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  ComputeAEStruct x66 = execComputeAE(
      ctx,
      Val32Array{x21[0]._super,  x21[1]._super,  x21[2]._super,  x21[3]._super,  x21[4]._super,
                 x21[5]._super,  x21[6]._super,  x21[7]._super,  x21[8]._super,  x21[9]._super,
                 x21[10]._super, x21[11]._super, x21[12]._super, x21[13]._super, x21[14]._super,
                 x21[15]._super, x21[16]._super, x21[17]._super, x21[18]._super, x21[19]._super,
                 x21[20]._super, x21[21]._super, x22[0]._super,  x22[1]._super,  x22[2]._super,
                 x22[3]._super,  x22[4]._super,  x22[5]._super,  x22[6]._super,  x22[7]._super,
                 x22[8]._super,  x22[9]._super},
      Val32Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super, x24[0]._super,  x24[1]._super,  x24[2]._super,
                 x24[3]._super,  x24[4]._super,  x24[5]._super,  x24[6]._super,  x24[7]._super,
                 x24[8]._super,  x24[9]._super},
      Val32Array{x25[0]._super,  x25[1]._super,  x25[2]._super,  x25[3]._super,  x25[4]._super,
                 x25[5]._super,  x25[6]._super,  x25[7]._super,  x25[8]._super,  x25[9]._super,
                 x25[10]._super, x25[11]._super, x25[12]._super, x25[13]._super, x25[14]._super,
                 x25[15]._super, x25[16]._super, x25[17]._super, x25[18]._super, x25[19]._super,
                 x25[20]._super, x25[21]._super, x26[0]._super,  x26[1]._super,  x26[2]._super,
                 x26[3]._super,  x26[4]._super,  x26[5]._super,  x26[6]._super,  x26[7]._super,
                 x26[8]._super,  x26[9]._super},
      Val32Array{x27[0]._super,  x27[1]._super,  x27[2]._super,  x27[3]._super,  x27[4]._super,
                 x27[5]._super,  x27[6]._super,  x27[7]._super,  x27[8]._super,  x27[9]._super,
                 x27[10]._super, x27[11]._super, x27[12]._super, x27[13]._super, x27[14]._super,
                 x27[15]._super, x27[16]._super, x27[17]._super, x27[18]._super, x27[19]._super,
                 x27[20]._super, x27[21]._super, x28[0]._super,  x28[1]._super,  x28[2]._super,
                 x28[3]._super,  x28[4]._super,  x28[5]._super,  x28[6]._super,  x28[7]._super,
                 x28[8]._super,  x28[9]._super},
      Val32Array{x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super, x29[0]._super,  x29[1]._super,  x29[2]._super,
                 x29[3]._super,  x29[4]._super,  x29[5]._super,  x29[6]._super,  x29[7]._super,
                 x29[8]._super,  x29[9]._super,  x29[10]._super, x29[11]._super, x29[12]._super,
                 x29[13]._super, x29[14]._super, x29[15]._super, x29[16]._super, x29[17]._super,
                 x29[18]._super, x29[19]._super},
      Val32Array{x24[10]._super, x24[11]._super, x24[12]._super, x24[13]._super, x24[14]._super,
                 x24[15]._super, x24[16]._super, x24[17]._super, x24[18]._super, x24[19]._super,
                 x24[20]._super, x24[21]._super, x30[0]._super,  x30[1]._super,  x30[2]._super,
                 x30[3]._super,  x30[4]._super,  x30[5]._super,  x30[6]._super,  x30[7]._super,
                 x30[8]._super,  x30[9]._super,  x30[10]._super, x30[11]._super, x30[12]._super,
                 x30[13]._super, x30[14]._super, x30[15]._super, x30[16]._super, x30[17]._super,
                 x30[18]._super, x30[19]._super},
      Val32Array{x26[10]._super, x26[11]._super, x26[12]._super, x26[13]._super, x26[14]._super,
                 x26[15]._super, x26[16]._super, x26[17]._super, x26[18]._super, x26[19]._super,
                 x26[20]._super, x26[21]._super, x31[0]._super,  x31[1]._super,  x31[2]._super,
                 x31[3]._super,  x31[4]._super,  x31[5]._super,  x31[6]._super,  x31[7]._super,
                 x31[8]._super,  x31[9]._super,  x31[10]._super, x31[11]._super, x31[12]._super,
                 x31[13]._super, x31[14]._super, x31[15]._super, x31[16]._super, x31[17]._super,
                 x31[18]._super, x31[19]._super},
      Val32Array{x28[10]._super, x28[11]._super, x28[12]._super, x28[13]._super, x28[14]._super,
                 x28[15]._super, x28[16]._super, x28[17]._super, x28[18]._super, x28[19]._super,
                 x28[20]._super, x28[21]._super, x32[0]._super,  x32[1]._super,  x32[2]._super,
                 x32[3]._super,  x32[4]._super,  x32[5]._super,  x32[6]._super,  x32[7]._super,
                 x32[8]._super,  x32[9]._super,  x32[10]._super, x32[11]._super, x32[12]._super,
                 x32[13]._super, x32[14]._super, x32[15]._super, x32[16]._super, x32[17]._super,
                 x32[18]._super, x32[19]._super},
      Val32Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49,
                 x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65},
      TwoShortsStruct{.low = Val(43594), .high = Val(20184)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x67 = x66.aOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16_Struct x68 =
      execUnpackWithCarry(ctx, x67.low, x67.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  TwoShortsStruct x69 = x66.eOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16_Struct x70 =
      execUnpackWithCarry(ctx, x69.low, x69.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x71 = x68._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x72 = x70._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_2__5_Arm1_Super_SuperLayout> x73 = LAYOUT_LOOKUP(x3, arm1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:373)
  Val22Array x74 =
      Val22Array{x71[0]._super,  x71[1]._super,  x71[2]._super,  x71[3]._super,  x71[4]._super,
                 x71[5]._super,  x71[6]._super,  x71[7]._super,  x71[8]._super,  x71[9]._super,
                 x71[10]._super, x71[11]._super, x71[12]._super, x71[13]._super, x71[14]._super,
                 x71[15]._super, x71[16]._super, x71[17]._super, x71[18]._super, x71[19]._super,
                 x71[20]._super, x71[21]._super};
  Val22Array x75 =
      Val22Array{x71[22]._super, x71[23]._super, x71[24]._super, x71[25]._super, x71[26]._super,
                 x71[27]._super, x71[28]._super, x71[29]._super, x71[30]._super, x71[31]._super,
                 x72[0]._super,  x72[1]._super,  x72[2]._super,  x72[3]._super,  x72[4]._super,
                 x72[5]._super,  x72[6]._super,  x72[7]._super,  x72[8]._super,  x72[9]._super,
                 x72[10]._super, x72[11]._super};
  Val22Array x76 =
      Val22Array{x72[12]._super, x72[13]._super, x72[14]._super, x72[15]._super, x72[16]._super,
                 x72[17]._super, x72[18]._super, x72[19]._super, x72[20]._super, x72[21]._super,
                 x72[22]._super, x72[23]._super, x72[24]._super, x72[25]._super, x72[26]._super,
                 x72[27]._super, x72[28]._super, x72[29]._super, x72[30]._super, x72[31]._super,
                 Val(0),         Val(0)};
  Val22Array x77 = Val22Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,
                              x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55};
  Val22Array x78 = Val22Array{x56,    x57,    x58,    x59,    x60,    x61,    x62,    x63,
                              x64,    x65,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  Val x79 = x4.blk._super;
  Val x80 = x4.midx._super;
  if (to_size_t(Val(1))) {
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:376)
    RetTupleStruct x81 =
        exec_RetTuple(ctx,
                      x74,
                      x75,
                      x76,
                      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                      x77,
                      x78,
                      Val(6),
                      Val(22),
                      Val(0),
                      x79,
                      x80,
                      LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  NondetRegStruct24Array x82 = x4.arrD;
  Val24Array x83 =
      Val24Array{x82[0]._super,  x82[1]._super,  x82[2]._super,  x82[3]._super,  x82[4]._super,
                 x82[5]._super,  x82[6]._super,  x82[7]._super,  x82[8]._super,  x82[9]._super,
                 x82[10]._super, x82[11]._super, x82[12]._super, x82[13]._super, x82[14]._super,
                 x82[15]._super, x82[16]._super, x82[17]._super, x82[18]._super, x82[19]._super,
                 x82[20]._super, x82[21]._super, x82[22]._super, x82[23]._super};
  Val x84 = x4.rnd._super;
  if (to_size_t(Val(0))) {
    if (to_size_t(Val(0))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:380)
      RetTupleStruct x85 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(0),
                                         Val(23),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm0));
    }
    if (to_size_t(Val(1))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:383)
      RetTupleStruct x86 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(9),
                                         Val(17),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm1));
    }
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:379)
    RetTupleStruct x87 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x73, _super));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  RetTupleStruct x88 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x88;
}
RetTupleStruct execSha256mix_2__6_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<Sha256mix_2__6_Layout> layout2) {
  BoundLayout<Sha256mix_2__6__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:359)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:360)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:361)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:362)
  RetTupleStruct x8 = back_RetTuple(ctx, 7, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:363)
  RetTupleStruct x9 = back_RetTuple(ctx, 15, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:364)
  RetTupleStruct x10 = back_RetTuple(ctx, 16, arg1);
  // s2w(zirgen/circuit/keccak/sha256_for_keccak.zir:155)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:366)
  NondetRegStruct22Array x11 = x5.arrE;
  NondetRegStruct22Array x12 = x5.arrF;
  NondetRegStruct22Array x13 = x8.arrE;
  NondetRegStruct22Array x14 = x8.arrF;
  NondetRegStruct22Array x15 = x9.arrE;
  NondetRegStruct22Array x16 = x9.arrF;
  NondetRegStruct22Array x17 = x10.arrE;
  NondetRegStruct22Array x18 = x10.arrF;
  TwoShortsStruct x19 = execComputeW(
      ctx,
      Val32Array{x11[0]._super,  x11[1]._super,  x11[2]._super,  x11[3]._super,  x11[4]._super,
                 x11[5]._super,  x11[6]._super,  x11[7]._super,  x11[8]._super,  x11[9]._super,
                 x11[10]._super, x11[11]._super, x11[12]._super, x11[13]._super, x11[14]._super,
                 x11[15]._super, x11[16]._super, x11[17]._super, x11[18]._super, x11[19]._super,
                 x11[20]._super, x11[21]._super, x12[0]._super,  x12[1]._super,  x12[2]._super,
                 x12[3]._super,  x12[4]._super,  x12[5]._super,  x12[6]._super,  x12[7]._super,
                 x12[8]._super,  x12[9]._super},
      Val32Array{x13[0]._super,  x13[1]._super,  x13[2]._super,  x13[3]._super,  x13[4]._super,
                 x13[5]._super,  x13[6]._super,  x13[7]._super,  x13[8]._super,  x13[9]._super,
                 x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x14[0]._super,  x14[1]._super,  x14[2]._super,
                 x14[3]._super,  x14[4]._super,  x14[5]._super,  x14[6]._super,  x14[7]._super,
                 x14[8]._super,  x14[9]._super},
      Val32Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x16[0]._super,  x16[1]._super,  x16[2]._super,
                 x16[3]._super,  x16[4]._super,  x16[5]._super,  x16[6]._super,  x16[7]._super,
                 x16[8]._super,  x16[9]._super},
      Val32Array{x17[0]._super,  x17[1]._super,  x17[2]._super,  x17[3]._super,  x17[4]._super,
                 x17[5]._super,  x17[6]._super,  x17[7]._super,  x17[8]._super,  x17[9]._super,
                 x17[10]._super, x17[11]._super, x17[12]._super, x17[13]._super, x17[14]._super,
                 x17[15]._super, x17[16]._super, x17[17]._super, x17[18]._super, x17[19]._super,
                 x17[20]._super, x17[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super},
      LAYOUT_LOOKUP(layout2, packedW));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16_Struct x20 =
      execUnpackWithCarry(ctx, x19.low, x19.high, LAYOUT_LOOKUP(layout2, newW));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  NondetRegStruct22Array x21 = x4.arrA;
  NondetRegStruct22Array x22 = x4.arrB;
  NondetRegStruct22Array x23 = x5.arrA;
  NondetRegStruct22Array x24 = x5.arrB;
  NondetRegStruct22Array x25 = x6.arrA;
  NondetRegStruct22Array x26 = x6.arrB;
  NondetRegStruct22Array x27 = x7.arrA;
  NondetRegStruct22Array x28 = x7.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:369)
  NondetRegStruct22Array x29 = x4.arrC;
  NondetRegStruct22Array x30 = x5.arrC;
  NondetRegStruct22Array x31 = x6.arrC;
  NondetRegStruct22Array x32 = x7.arrC;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x33 = x20._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  Val x55 = x33[21]._super;
  Val x56 = x33[22]._super;
  Val x57 = x33[23]._super;
  Val x58 = x33[24]._super;
  Val x59 = x33[25]._super;
  Val x60 = x33[26]._super;
  Val x61 = x33[27]._super;
  Val x62 = x33[28]._super;
  Val x63 = x33[29]._super;
  Val x64 = x33[30]._super;
  Val x65 = x33[31]._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  ComputeAEStruct x66 = execComputeAE(
      ctx,
      Val32Array{x21[0]._super,  x21[1]._super,  x21[2]._super,  x21[3]._super,  x21[4]._super,
                 x21[5]._super,  x21[6]._super,  x21[7]._super,  x21[8]._super,  x21[9]._super,
                 x21[10]._super, x21[11]._super, x21[12]._super, x21[13]._super, x21[14]._super,
                 x21[15]._super, x21[16]._super, x21[17]._super, x21[18]._super, x21[19]._super,
                 x21[20]._super, x21[21]._super, x22[0]._super,  x22[1]._super,  x22[2]._super,
                 x22[3]._super,  x22[4]._super,  x22[5]._super,  x22[6]._super,  x22[7]._super,
                 x22[8]._super,  x22[9]._super},
      Val32Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super, x24[0]._super,  x24[1]._super,  x24[2]._super,
                 x24[3]._super,  x24[4]._super,  x24[5]._super,  x24[6]._super,  x24[7]._super,
                 x24[8]._super,  x24[9]._super},
      Val32Array{x25[0]._super,  x25[1]._super,  x25[2]._super,  x25[3]._super,  x25[4]._super,
                 x25[5]._super,  x25[6]._super,  x25[7]._super,  x25[8]._super,  x25[9]._super,
                 x25[10]._super, x25[11]._super, x25[12]._super, x25[13]._super, x25[14]._super,
                 x25[15]._super, x25[16]._super, x25[17]._super, x25[18]._super, x25[19]._super,
                 x25[20]._super, x25[21]._super, x26[0]._super,  x26[1]._super,  x26[2]._super,
                 x26[3]._super,  x26[4]._super,  x26[5]._super,  x26[6]._super,  x26[7]._super,
                 x26[8]._super,  x26[9]._super},
      Val32Array{x27[0]._super,  x27[1]._super,  x27[2]._super,  x27[3]._super,  x27[4]._super,
                 x27[5]._super,  x27[6]._super,  x27[7]._super,  x27[8]._super,  x27[9]._super,
                 x27[10]._super, x27[11]._super, x27[12]._super, x27[13]._super, x27[14]._super,
                 x27[15]._super, x27[16]._super, x27[17]._super, x27[18]._super, x27[19]._super,
                 x27[20]._super, x27[21]._super, x28[0]._super,  x28[1]._super,  x28[2]._super,
                 x28[3]._super,  x28[4]._super,  x28[5]._super,  x28[6]._super,  x28[7]._super,
                 x28[8]._super,  x28[9]._super},
      Val32Array{x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super, x29[0]._super,  x29[1]._super,  x29[2]._super,
                 x29[3]._super,  x29[4]._super,  x29[5]._super,  x29[6]._super,  x29[7]._super,
                 x29[8]._super,  x29[9]._super,  x29[10]._super, x29[11]._super, x29[12]._super,
                 x29[13]._super, x29[14]._super, x29[15]._super, x29[16]._super, x29[17]._super,
                 x29[18]._super, x29[19]._super},
      Val32Array{x24[10]._super, x24[11]._super, x24[12]._super, x24[13]._super, x24[14]._super,
                 x24[15]._super, x24[16]._super, x24[17]._super, x24[18]._super, x24[19]._super,
                 x24[20]._super, x24[21]._super, x30[0]._super,  x30[1]._super,  x30[2]._super,
                 x30[3]._super,  x30[4]._super,  x30[5]._super,  x30[6]._super,  x30[7]._super,
                 x30[8]._super,  x30[9]._super,  x30[10]._super, x30[11]._super, x30[12]._super,
                 x30[13]._super, x30[14]._super, x30[15]._super, x30[16]._super, x30[17]._super,
                 x30[18]._super, x30[19]._super},
      Val32Array{x26[10]._super, x26[11]._super, x26[12]._super, x26[13]._super, x26[14]._super,
                 x26[15]._super, x26[16]._super, x26[17]._super, x26[18]._super, x26[19]._super,
                 x26[20]._super, x26[21]._super, x31[0]._super,  x31[1]._super,  x31[2]._super,
                 x31[3]._super,  x31[4]._super,  x31[5]._super,  x31[6]._super,  x31[7]._super,
                 x31[8]._super,  x31[9]._super,  x31[10]._super, x31[11]._super, x31[12]._super,
                 x31[13]._super, x31[14]._super, x31[15]._super, x31[16]._super, x31[17]._super,
                 x31[18]._super, x31[19]._super},
      Val32Array{x28[10]._super, x28[11]._super, x28[12]._super, x28[13]._super, x28[14]._super,
                 x28[15]._super, x28[16]._super, x28[17]._super, x28[18]._super, x28[19]._super,
                 x28[20]._super, x28[21]._super, x32[0]._super,  x32[1]._super,  x32[2]._super,
                 x32[3]._super,  x32[4]._super,  x32[5]._super,  x32[6]._super,  x32[7]._super,
                 x32[8]._super,  x32[9]._super,  x32[10]._super, x32[11]._super, x32[12]._super,
                 x32[13]._super, x32[14]._super, x32[15]._super, x32[16]._super, x32[17]._super,
                 x32[18]._super, x32[19]._super},
      Val32Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49,
                 x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65},
      TwoShortsStruct{.low = Val(51791), .high = Val(23452)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x67 = x66.aOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16_Struct x68 =
      execUnpackWithCarry(ctx, x67.low, x67.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  TwoShortsStruct x69 = x66.eOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16_Struct x70 =
      execUnpackWithCarry(ctx, x69.low, x69.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x71 = x68._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x72 = x70._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_2__6_Arm1_Super_SuperLayout> x73 = LAYOUT_LOOKUP(x3, arm1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:373)
  Val22Array x74 =
      Val22Array{x71[0]._super,  x71[1]._super,  x71[2]._super,  x71[3]._super,  x71[4]._super,
                 x71[5]._super,  x71[6]._super,  x71[7]._super,  x71[8]._super,  x71[9]._super,
                 x71[10]._super, x71[11]._super, x71[12]._super, x71[13]._super, x71[14]._super,
                 x71[15]._super, x71[16]._super, x71[17]._super, x71[18]._super, x71[19]._super,
                 x71[20]._super, x71[21]._super};
  Val22Array x75 =
      Val22Array{x71[22]._super, x71[23]._super, x71[24]._super, x71[25]._super, x71[26]._super,
                 x71[27]._super, x71[28]._super, x71[29]._super, x71[30]._super, x71[31]._super,
                 x72[0]._super,  x72[1]._super,  x72[2]._super,  x72[3]._super,  x72[4]._super,
                 x72[5]._super,  x72[6]._super,  x72[7]._super,  x72[8]._super,  x72[9]._super,
                 x72[10]._super, x72[11]._super};
  Val22Array x76 =
      Val22Array{x72[12]._super, x72[13]._super, x72[14]._super, x72[15]._super, x72[16]._super,
                 x72[17]._super, x72[18]._super, x72[19]._super, x72[20]._super, x72[21]._super,
                 x72[22]._super, x72[23]._super, x72[24]._super, x72[25]._super, x72[26]._super,
                 x72[27]._super, x72[28]._super, x72[29]._super, x72[30]._super, x72[31]._super,
                 Val(0),         Val(0)};
  Val22Array x77 = Val22Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,
                              x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55};
  Val22Array x78 = Val22Array{x56,    x57,    x58,    x59,    x60,    x61,    x62,    x63,
                              x64,    x65,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  Val x79 = x4.blk._super;
  Val x80 = x4.midx._super;
  if (to_size_t(Val(1))) {
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:376)
    RetTupleStruct x81 =
        exec_RetTuple(ctx,
                      x74,
                      x75,
                      x76,
                      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                      x77,
                      x78,
                      Val(7),
                      Val(22),
                      Val(0),
                      x79,
                      x80,
                      LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  NondetRegStruct24Array x82 = x4.arrD;
  Val24Array x83 =
      Val24Array{x82[0]._super,  x82[1]._super,  x82[2]._super,  x82[3]._super,  x82[4]._super,
                 x82[5]._super,  x82[6]._super,  x82[7]._super,  x82[8]._super,  x82[9]._super,
                 x82[10]._super, x82[11]._super, x82[12]._super, x82[13]._super, x82[14]._super,
                 x82[15]._super, x82[16]._super, x82[17]._super, x82[18]._super, x82[19]._super,
                 x82[20]._super, x82[21]._super, x82[22]._super, x82[23]._super};
  Val x84 = x4.rnd._super;
  if (to_size_t(Val(0))) {
    if (to_size_t(Val(0))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:380)
      RetTupleStruct x85 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(0),
                                         Val(23),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm0));
    }
    if (to_size_t(Val(1))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:383)
      RetTupleStruct x86 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(9),
                                         Val(17),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm1));
    }
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:379)
    RetTupleStruct x87 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x73, _super));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  RetTupleStruct x88 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x88;
}
RetTupleStruct execSha256mix_2__7_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<Sha256mix_2__7_Layout> layout2) {
  BoundLayout<Sha256mix_2__7__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:359)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:360)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:361)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:362)
  RetTupleStruct x8 = back_RetTuple(ctx, 7, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:363)
  RetTupleStruct x9 = back_RetTuple(ctx, 15, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:364)
  RetTupleStruct x10 = back_RetTuple(ctx, 16, arg1);
  // s2w(zirgen/circuit/keccak/sha256_for_keccak.zir:155)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:366)
  NondetRegStruct22Array x11 = x5.arrE;
  NondetRegStruct22Array x12 = x5.arrF;
  NondetRegStruct22Array x13 = x8.arrE;
  NondetRegStruct22Array x14 = x8.arrF;
  NondetRegStruct22Array x15 = x9.arrE;
  NondetRegStruct22Array x16 = x9.arrF;
  NondetRegStruct22Array x17 = x10.arrE;
  NondetRegStruct22Array x18 = x10.arrF;
  TwoShortsStruct x19 = execComputeW(
      ctx,
      Val32Array{x11[0]._super,  x11[1]._super,  x11[2]._super,  x11[3]._super,  x11[4]._super,
                 x11[5]._super,  x11[6]._super,  x11[7]._super,  x11[8]._super,  x11[9]._super,
                 x11[10]._super, x11[11]._super, x11[12]._super, x11[13]._super, x11[14]._super,
                 x11[15]._super, x11[16]._super, x11[17]._super, x11[18]._super, x11[19]._super,
                 x11[20]._super, x11[21]._super, x12[0]._super,  x12[1]._super,  x12[2]._super,
                 x12[3]._super,  x12[4]._super,  x12[5]._super,  x12[6]._super,  x12[7]._super,
                 x12[8]._super,  x12[9]._super},
      Val32Array{x13[0]._super,  x13[1]._super,  x13[2]._super,  x13[3]._super,  x13[4]._super,
                 x13[5]._super,  x13[6]._super,  x13[7]._super,  x13[8]._super,  x13[9]._super,
                 x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x14[0]._super,  x14[1]._super,  x14[2]._super,
                 x14[3]._super,  x14[4]._super,  x14[5]._super,  x14[6]._super,  x14[7]._super,
                 x14[8]._super,  x14[9]._super},
      Val32Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x16[0]._super,  x16[1]._super,  x16[2]._super,
                 x16[3]._super,  x16[4]._super,  x16[5]._super,  x16[6]._super,  x16[7]._super,
                 x16[8]._super,  x16[9]._super},
      Val32Array{x17[0]._super,  x17[1]._super,  x17[2]._super,  x17[3]._super,  x17[4]._super,
                 x17[5]._super,  x17[6]._super,  x17[7]._super,  x17[8]._super,  x17[9]._super,
                 x17[10]._super, x17[11]._super, x17[12]._super, x17[13]._super, x17[14]._super,
                 x17[15]._super, x17[16]._super, x17[17]._super, x17[18]._super, x17[19]._super,
                 x17[20]._super, x17[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super},
      LAYOUT_LOOKUP(layout2, packedW));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16_Struct x20 =
      execUnpackWithCarry(ctx, x19.low, x19.high, LAYOUT_LOOKUP(layout2, newW));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  NondetRegStruct22Array x21 = x4.arrA;
  NondetRegStruct22Array x22 = x4.arrB;
  NondetRegStruct22Array x23 = x5.arrA;
  NondetRegStruct22Array x24 = x5.arrB;
  NondetRegStruct22Array x25 = x6.arrA;
  NondetRegStruct22Array x26 = x6.arrB;
  NondetRegStruct22Array x27 = x7.arrA;
  NondetRegStruct22Array x28 = x7.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:369)
  NondetRegStruct22Array x29 = x4.arrC;
  NondetRegStruct22Array x30 = x5.arrC;
  NondetRegStruct22Array x31 = x6.arrC;
  NondetRegStruct22Array x32 = x7.arrC;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x33 = x20._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  Val x55 = x33[21]._super;
  Val x56 = x33[22]._super;
  Val x57 = x33[23]._super;
  Val x58 = x33[24]._super;
  Val x59 = x33[25]._super;
  Val x60 = x33[26]._super;
  Val x61 = x33[27]._super;
  Val x62 = x33[28]._super;
  Val x63 = x33[29]._super;
  Val x64 = x33[30]._super;
  Val x65 = x33[31]._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  ComputeAEStruct x66 = execComputeAE(
      ctx,
      Val32Array{x21[0]._super,  x21[1]._super,  x21[2]._super,  x21[3]._super,  x21[4]._super,
                 x21[5]._super,  x21[6]._super,  x21[7]._super,  x21[8]._super,  x21[9]._super,
                 x21[10]._super, x21[11]._super, x21[12]._super, x21[13]._super, x21[14]._super,
                 x21[15]._super, x21[16]._super, x21[17]._super, x21[18]._super, x21[19]._super,
                 x21[20]._super, x21[21]._super, x22[0]._super,  x22[1]._super,  x22[2]._super,
                 x22[3]._super,  x22[4]._super,  x22[5]._super,  x22[6]._super,  x22[7]._super,
                 x22[8]._super,  x22[9]._super},
      Val32Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super, x24[0]._super,  x24[1]._super,  x24[2]._super,
                 x24[3]._super,  x24[4]._super,  x24[5]._super,  x24[6]._super,  x24[7]._super,
                 x24[8]._super,  x24[9]._super},
      Val32Array{x25[0]._super,  x25[1]._super,  x25[2]._super,  x25[3]._super,  x25[4]._super,
                 x25[5]._super,  x25[6]._super,  x25[7]._super,  x25[8]._super,  x25[9]._super,
                 x25[10]._super, x25[11]._super, x25[12]._super, x25[13]._super, x25[14]._super,
                 x25[15]._super, x25[16]._super, x25[17]._super, x25[18]._super, x25[19]._super,
                 x25[20]._super, x25[21]._super, x26[0]._super,  x26[1]._super,  x26[2]._super,
                 x26[3]._super,  x26[4]._super,  x26[5]._super,  x26[6]._super,  x26[7]._super,
                 x26[8]._super,  x26[9]._super},
      Val32Array{x27[0]._super,  x27[1]._super,  x27[2]._super,  x27[3]._super,  x27[4]._super,
                 x27[5]._super,  x27[6]._super,  x27[7]._super,  x27[8]._super,  x27[9]._super,
                 x27[10]._super, x27[11]._super, x27[12]._super, x27[13]._super, x27[14]._super,
                 x27[15]._super, x27[16]._super, x27[17]._super, x27[18]._super, x27[19]._super,
                 x27[20]._super, x27[21]._super, x28[0]._super,  x28[1]._super,  x28[2]._super,
                 x28[3]._super,  x28[4]._super,  x28[5]._super,  x28[6]._super,  x28[7]._super,
                 x28[8]._super,  x28[9]._super},
      Val32Array{x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super, x29[0]._super,  x29[1]._super,  x29[2]._super,
                 x29[3]._super,  x29[4]._super,  x29[5]._super,  x29[6]._super,  x29[7]._super,
                 x29[8]._super,  x29[9]._super,  x29[10]._super, x29[11]._super, x29[12]._super,
                 x29[13]._super, x29[14]._super, x29[15]._super, x29[16]._super, x29[17]._super,
                 x29[18]._super, x29[19]._super},
      Val32Array{x24[10]._super, x24[11]._super, x24[12]._super, x24[13]._super, x24[14]._super,
                 x24[15]._super, x24[16]._super, x24[17]._super, x24[18]._super, x24[19]._super,
                 x24[20]._super, x24[21]._super, x30[0]._super,  x30[1]._super,  x30[2]._super,
                 x30[3]._super,  x30[4]._super,  x30[5]._super,  x30[6]._super,  x30[7]._super,
                 x30[8]._super,  x30[9]._super,  x30[10]._super, x30[11]._super, x30[12]._super,
                 x30[13]._super, x30[14]._super, x30[15]._super, x30[16]._super, x30[17]._super,
                 x30[18]._super, x30[19]._super},
      Val32Array{x26[10]._super, x26[11]._super, x26[12]._super, x26[13]._super, x26[14]._super,
                 x26[15]._super, x26[16]._super, x26[17]._super, x26[18]._super, x26[19]._super,
                 x26[20]._super, x26[21]._super, x31[0]._super,  x31[1]._super,  x31[2]._super,
                 x31[3]._super,  x31[4]._super,  x31[5]._super,  x31[6]._super,  x31[7]._super,
                 x31[8]._super,  x31[9]._super,  x31[10]._super, x31[11]._super, x31[12]._super,
                 x31[13]._super, x31[14]._super, x31[15]._super, x31[16]._super, x31[17]._super,
                 x31[18]._super, x31[19]._super},
      Val32Array{x28[10]._super, x28[11]._super, x28[12]._super, x28[13]._super, x28[14]._super,
                 x28[15]._super, x28[16]._super, x28[17]._super, x28[18]._super, x28[19]._super,
                 x28[20]._super, x28[21]._super, x32[0]._super,  x32[1]._super,  x32[2]._super,
                 x32[3]._super,  x32[4]._super,  x32[5]._super,  x32[6]._super,  x32[7]._super,
                 x32[8]._super,  x32[9]._super,  x32[10]._super, x32[11]._super, x32[12]._super,
                 x32[13]._super, x32[14]._super, x32[15]._super, x32[16]._super, x32[17]._super,
                 x32[18]._super, x32[19]._super},
      Val32Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49,
                 x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65},
      TwoShortsStruct{.low = Val(28659), .high = Val(26670)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x67 = x66.aOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16_Struct x68 =
      execUnpackWithCarry(ctx, x67.low, x67.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  TwoShortsStruct x69 = x66.eOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16_Struct x70 =
      execUnpackWithCarry(ctx, x69.low, x69.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x71 = x68._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x72 = x70._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_2__7_Arm1_Super_SuperLayout> x73 = LAYOUT_LOOKUP(x3, arm1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:373)
  Val22Array x74 =
      Val22Array{x71[0]._super,  x71[1]._super,  x71[2]._super,  x71[3]._super,  x71[4]._super,
                 x71[5]._super,  x71[6]._super,  x71[7]._super,  x71[8]._super,  x71[9]._super,
                 x71[10]._super, x71[11]._super, x71[12]._super, x71[13]._super, x71[14]._super,
                 x71[15]._super, x71[16]._super, x71[17]._super, x71[18]._super, x71[19]._super,
                 x71[20]._super, x71[21]._super};
  Val22Array x75 =
      Val22Array{x71[22]._super, x71[23]._super, x71[24]._super, x71[25]._super, x71[26]._super,
                 x71[27]._super, x71[28]._super, x71[29]._super, x71[30]._super, x71[31]._super,
                 x72[0]._super,  x72[1]._super,  x72[2]._super,  x72[3]._super,  x72[4]._super,
                 x72[5]._super,  x72[6]._super,  x72[7]._super,  x72[8]._super,  x72[9]._super,
                 x72[10]._super, x72[11]._super};
  Val22Array x76 =
      Val22Array{x72[12]._super, x72[13]._super, x72[14]._super, x72[15]._super, x72[16]._super,
                 x72[17]._super, x72[18]._super, x72[19]._super, x72[20]._super, x72[21]._super,
                 x72[22]._super, x72[23]._super, x72[24]._super, x72[25]._super, x72[26]._super,
                 x72[27]._super, x72[28]._super, x72[29]._super, x72[30]._super, x72[31]._super,
                 Val(0),         Val(0)};
  Val22Array x77 = Val22Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,
                              x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55};
  Val22Array x78 = Val22Array{x56,    x57,    x58,    x59,    x60,    x61,    x62,    x63,
                              x64,    x65,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  Val x79 = x4.blk._super;
  Val x80 = x4.midx._super;
  if (to_size_t(Val(1))) {
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:376)
    RetTupleStruct x81 =
        exec_RetTuple(ctx,
                      x74,
                      x75,
                      x76,
                      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                      x77,
                      x78,
                      Val(8),
                      Val(22),
                      Val(0),
                      x79,
                      x80,
                      LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  NondetRegStruct24Array x82 = x4.arrD;
  Val24Array x83 =
      Val24Array{x82[0]._super,  x82[1]._super,  x82[2]._super,  x82[3]._super,  x82[4]._super,
                 x82[5]._super,  x82[6]._super,  x82[7]._super,  x82[8]._super,  x82[9]._super,
                 x82[10]._super, x82[11]._super, x82[12]._super, x82[13]._super, x82[14]._super,
                 x82[15]._super, x82[16]._super, x82[17]._super, x82[18]._super, x82[19]._super,
                 x82[20]._super, x82[21]._super, x82[22]._super, x82[23]._super};
  Val x84 = x4.rnd._super;
  if (to_size_t(Val(0))) {
    if (to_size_t(Val(0))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:380)
      RetTupleStruct x85 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(0),
                                         Val(23),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm0));
    }
    if (to_size_t(Val(1))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:383)
      RetTupleStruct x86 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(9),
                                         Val(17),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm1));
    }
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:379)
    RetTupleStruct x87 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x73, _super));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  RetTupleStruct x88 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x88;
}
RetTupleStruct execSha256mix_2__8_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<Sha256mix_2__8_Layout> layout2) {
  BoundLayout<Sha256mix_2__8__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:359)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:360)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:361)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:362)
  RetTupleStruct x8 = back_RetTuple(ctx, 7, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:363)
  RetTupleStruct x9 = back_RetTuple(ctx, 15, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:364)
  RetTupleStruct x10 = back_RetTuple(ctx, 16, arg1);
  // s2w(zirgen/circuit/keccak/sha256_for_keccak.zir:155)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:366)
  NondetRegStruct22Array x11 = x5.arrE;
  NondetRegStruct22Array x12 = x5.arrF;
  NondetRegStruct22Array x13 = x8.arrE;
  NondetRegStruct22Array x14 = x8.arrF;
  NondetRegStruct22Array x15 = x9.arrE;
  NondetRegStruct22Array x16 = x9.arrF;
  NondetRegStruct22Array x17 = x10.arrE;
  NondetRegStruct22Array x18 = x10.arrF;
  TwoShortsStruct x19 = execComputeW(
      ctx,
      Val32Array{x11[0]._super,  x11[1]._super,  x11[2]._super,  x11[3]._super,  x11[4]._super,
                 x11[5]._super,  x11[6]._super,  x11[7]._super,  x11[8]._super,  x11[9]._super,
                 x11[10]._super, x11[11]._super, x11[12]._super, x11[13]._super, x11[14]._super,
                 x11[15]._super, x11[16]._super, x11[17]._super, x11[18]._super, x11[19]._super,
                 x11[20]._super, x11[21]._super, x12[0]._super,  x12[1]._super,  x12[2]._super,
                 x12[3]._super,  x12[4]._super,  x12[5]._super,  x12[6]._super,  x12[7]._super,
                 x12[8]._super,  x12[9]._super},
      Val32Array{x13[0]._super,  x13[1]._super,  x13[2]._super,  x13[3]._super,  x13[4]._super,
                 x13[5]._super,  x13[6]._super,  x13[7]._super,  x13[8]._super,  x13[9]._super,
                 x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x14[0]._super,  x14[1]._super,  x14[2]._super,
                 x14[3]._super,  x14[4]._super,  x14[5]._super,  x14[6]._super,  x14[7]._super,
                 x14[8]._super,  x14[9]._super},
      Val32Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x16[0]._super,  x16[1]._super,  x16[2]._super,
                 x16[3]._super,  x16[4]._super,  x16[5]._super,  x16[6]._super,  x16[7]._super,
                 x16[8]._super,  x16[9]._super},
      Val32Array{x17[0]._super,  x17[1]._super,  x17[2]._super,  x17[3]._super,  x17[4]._super,
                 x17[5]._super,  x17[6]._super,  x17[7]._super,  x17[8]._super,  x17[9]._super,
                 x17[10]._super, x17[11]._super, x17[12]._super, x17[13]._super, x17[14]._super,
                 x17[15]._super, x17[16]._super, x17[17]._super, x17[18]._super, x17[19]._super,
                 x17[20]._super, x17[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super},
      LAYOUT_LOOKUP(layout2, packedW));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16_Struct x20 =
      execUnpackWithCarry(ctx, x19.low, x19.high, LAYOUT_LOOKUP(layout2, newW));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  NondetRegStruct22Array x21 = x4.arrA;
  NondetRegStruct22Array x22 = x4.arrB;
  NondetRegStruct22Array x23 = x5.arrA;
  NondetRegStruct22Array x24 = x5.arrB;
  NondetRegStruct22Array x25 = x6.arrA;
  NondetRegStruct22Array x26 = x6.arrB;
  NondetRegStruct22Array x27 = x7.arrA;
  NondetRegStruct22Array x28 = x7.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:369)
  NondetRegStruct22Array x29 = x4.arrC;
  NondetRegStruct22Array x30 = x5.arrC;
  NondetRegStruct22Array x31 = x6.arrC;
  NondetRegStruct22Array x32 = x7.arrC;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x33 = x20._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  Val x55 = x33[21]._super;
  Val x56 = x33[22]._super;
  Val x57 = x33[23]._super;
  Val x58 = x33[24]._super;
  Val x59 = x33[25]._super;
  Val x60 = x33[26]._super;
  Val x61 = x33[27]._super;
  Val x62 = x33[28]._super;
  Val x63 = x33[29]._super;
  Val x64 = x33[30]._super;
  Val x65 = x33[31]._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  ComputeAEStruct x66 = execComputeAE(
      ctx,
      Val32Array{x21[0]._super,  x21[1]._super,  x21[2]._super,  x21[3]._super,  x21[4]._super,
                 x21[5]._super,  x21[6]._super,  x21[7]._super,  x21[8]._super,  x21[9]._super,
                 x21[10]._super, x21[11]._super, x21[12]._super, x21[13]._super, x21[14]._super,
                 x21[15]._super, x21[16]._super, x21[17]._super, x21[18]._super, x21[19]._super,
                 x21[20]._super, x21[21]._super, x22[0]._super,  x22[1]._super,  x22[2]._super,
                 x22[3]._super,  x22[4]._super,  x22[5]._super,  x22[6]._super,  x22[7]._super,
                 x22[8]._super,  x22[9]._super},
      Val32Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super, x24[0]._super,  x24[1]._super,  x24[2]._super,
                 x24[3]._super,  x24[4]._super,  x24[5]._super,  x24[6]._super,  x24[7]._super,
                 x24[8]._super,  x24[9]._super},
      Val32Array{x25[0]._super,  x25[1]._super,  x25[2]._super,  x25[3]._super,  x25[4]._super,
                 x25[5]._super,  x25[6]._super,  x25[7]._super,  x25[8]._super,  x25[9]._super,
                 x25[10]._super, x25[11]._super, x25[12]._super, x25[13]._super, x25[14]._super,
                 x25[15]._super, x25[16]._super, x25[17]._super, x25[18]._super, x25[19]._super,
                 x25[20]._super, x25[21]._super, x26[0]._super,  x26[1]._super,  x26[2]._super,
                 x26[3]._super,  x26[4]._super,  x26[5]._super,  x26[6]._super,  x26[7]._super,
                 x26[8]._super,  x26[9]._super},
      Val32Array{x27[0]._super,  x27[1]._super,  x27[2]._super,  x27[3]._super,  x27[4]._super,
                 x27[5]._super,  x27[6]._super,  x27[7]._super,  x27[8]._super,  x27[9]._super,
                 x27[10]._super, x27[11]._super, x27[12]._super, x27[13]._super, x27[14]._super,
                 x27[15]._super, x27[16]._super, x27[17]._super, x27[18]._super, x27[19]._super,
                 x27[20]._super, x27[21]._super, x28[0]._super,  x28[1]._super,  x28[2]._super,
                 x28[3]._super,  x28[4]._super,  x28[5]._super,  x28[6]._super,  x28[7]._super,
                 x28[8]._super,  x28[9]._super},
      Val32Array{x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super, x29[0]._super,  x29[1]._super,  x29[2]._super,
                 x29[3]._super,  x29[4]._super,  x29[5]._super,  x29[6]._super,  x29[7]._super,
                 x29[8]._super,  x29[9]._super,  x29[10]._super, x29[11]._super, x29[12]._super,
                 x29[13]._super, x29[14]._super, x29[15]._super, x29[16]._super, x29[17]._super,
                 x29[18]._super, x29[19]._super},
      Val32Array{x24[10]._super, x24[11]._super, x24[12]._super, x24[13]._super, x24[14]._super,
                 x24[15]._super, x24[16]._super, x24[17]._super, x24[18]._super, x24[19]._super,
                 x24[20]._super, x24[21]._super, x30[0]._super,  x30[1]._super,  x30[2]._super,
                 x30[3]._super,  x30[4]._super,  x30[5]._super,  x30[6]._super,  x30[7]._super,
                 x30[8]._super,  x30[9]._super,  x30[10]._super, x30[11]._super, x30[12]._super,
                 x30[13]._super, x30[14]._super, x30[15]._super, x30[16]._super, x30[17]._super,
                 x30[18]._super, x30[19]._super},
      Val32Array{x26[10]._super, x26[11]._super, x26[12]._super, x26[13]._super, x26[14]._super,
                 x26[15]._super, x26[16]._super, x26[17]._super, x26[18]._super, x26[19]._super,
                 x26[20]._super, x26[21]._super, x31[0]._super,  x31[1]._super,  x31[2]._super,
                 x31[3]._super,  x31[4]._super,  x31[5]._super,  x31[6]._super,  x31[7]._super,
                 x31[8]._super,  x31[9]._super,  x31[10]._super, x31[11]._super, x31[12]._super,
                 x31[13]._super, x31[14]._super, x31[15]._super, x31[16]._super, x31[17]._super,
                 x31[18]._super, x31[19]._super},
      Val32Array{x28[10]._super, x28[11]._super, x28[12]._super, x28[13]._super, x28[14]._super,
                 x28[15]._super, x28[16]._super, x28[17]._super, x28[18]._super, x28[19]._super,
                 x28[20]._super, x28[21]._super, x32[0]._super,  x32[1]._super,  x32[2]._super,
                 x32[3]._super,  x32[4]._super,  x32[5]._super,  x32[6]._super,  x32[7]._super,
                 x32[8]._super,  x32[9]._super,  x32[10]._super, x32[11]._super, x32[12]._super,
                 x32[13]._super, x32[14]._super, x32[15]._super, x32[16]._super, x32[17]._super,
                 x32[18]._super, x32[19]._super},
      Val32Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49,
                 x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65},
      TwoShortsStruct{.low = Val(33518), .high = Val(29839)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x67 = x66.aOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16_Struct x68 =
      execUnpackWithCarry(ctx, x67.low, x67.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  TwoShortsStruct x69 = x66.eOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16_Struct x70 =
      execUnpackWithCarry(ctx, x69.low, x69.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x71 = x68._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x72 = x70._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_2__8_Arm1_Super_SuperLayout> x73 = LAYOUT_LOOKUP(x3, arm1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:373)
  Val22Array x74 =
      Val22Array{x71[0]._super,  x71[1]._super,  x71[2]._super,  x71[3]._super,  x71[4]._super,
                 x71[5]._super,  x71[6]._super,  x71[7]._super,  x71[8]._super,  x71[9]._super,
                 x71[10]._super, x71[11]._super, x71[12]._super, x71[13]._super, x71[14]._super,
                 x71[15]._super, x71[16]._super, x71[17]._super, x71[18]._super, x71[19]._super,
                 x71[20]._super, x71[21]._super};
  Val22Array x75 =
      Val22Array{x71[22]._super, x71[23]._super, x71[24]._super, x71[25]._super, x71[26]._super,
                 x71[27]._super, x71[28]._super, x71[29]._super, x71[30]._super, x71[31]._super,
                 x72[0]._super,  x72[1]._super,  x72[2]._super,  x72[3]._super,  x72[4]._super,
                 x72[5]._super,  x72[6]._super,  x72[7]._super,  x72[8]._super,  x72[9]._super,
                 x72[10]._super, x72[11]._super};
  Val22Array x76 =
      Val22Array{x72[12]._super, x72[13]._super, x72[14]._super, x72[15]._super, x72[16]._super,
                 x72[17]._super, x72[18]._super, x72[19]._super, x72[20]._super, x72[21]._super,
                 x72[22]._super, x72[23]._super, x72[24]._super, x72[25]._super, x72[26]._super,
                 x72[27]._super, x72[28]._super, x72[29]._super, x72[30]._super, x72[31]._super,
                 Val(0),         Val(0)};
  Val22Array x77 = Val22Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,
                              x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55};
  Val22Array x78 = Val22Array{x56,    x57,    x58,    x59,    x60,    x61,    x62,    x63,
                              x64,    x65,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  Val x79 = x4.blk._super;
  Val x80 = x4.midx._super;
  if (to_size_t(Val(1))) {
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:376)
    RetTupleStruct x81 =
        exec_RetTuple(ctx,
                      x74,
                      x75,
                      x76,
                      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                      x77,
                      x78,
                      Val(9),
                      Val(22),
                      Val(0),
                      x79,
                      x80,
                      LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  NondetRegStruct24Array x82 = x4.arrD;
  Val24Array x83 =
      Val24Array{x82[0]._super,  x82[1]._super,  x82[2]._super,  x82[3]._super,  x82[4]._super,
                 x82[5]._super,  x82[6]._super,  x82[7]._super,  x82[8]._super,  x82[9]._super,
                 x82[10]._super, x82[11]._super, x82[12]._super, x82[13]._super, x82[14]._super,
                 x82[15]._super, x82[16]._super, x82[17]._super, x82[18]._super, x82[19]._super,
                 x82[20]._super, x82[21]._super, x82[22]._super, x82[23]._super};
  Val x84 = x4.rnd._super;
  if (to_size_t(Val(0))) {
    if (to_size_t(Val(0))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:380)
      RetTupleStruct x85 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(0),
                                         Val(23),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm0));
    }
    if (to_size_t(Val(1))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:383)
      RetTupleStruct x86 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(9),
                                         Val(17),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm1));
    }
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:379)
    RetTupleStruct x87 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x73, _super));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  RetTupleStruct x88 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x88;
}
RetTupleStruct execSha256mix_2__9_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<Sha256mix_2__9_Layout> layout2) {
  BoundLayout<Sha256mix_2__9__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:359)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:360)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:361)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:362)
  RetTupleStruct x8 = back_RetTuple(ctx, 7, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:363)
  RetTupleStruct x9 = back_RetTuple(ctx, 15, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:364)
  RetTupleStruct x10 = back_RetTuple(ctx, 16, arg1);
  // s2w(zirgen/circuit/keccak/sha256_for_keccak.zir:155)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:366)
  NondetRegStruct22Array x11 = x5.arrE;
  NondetRegStruct22Array x12 = x5.arrF;
  NondetRegStruct22Array x13 = x8.arrE;
  NondetRegStruct22Array x14 = x8.arrF;
  NondetRegStruct22Array x15 = x9.arrE;
  NondetRegStruct22Array x16 = x9.arrF;
  NondetRegStruct22Array x17 = x10.arrE;
  NondetRegStruct22Array x18 = x10.arrF;
  TwoShortsStruct x19 = execComputeW(
      ctx,
      Val32Array{x11[0]._super,  x11[1]._super,  x11[2]._super,  x11[3]._super,  x11[4]._super,
                 x11[5]._super,  x11[6]._super,  x11[7]._super,  x11[8]._super,  x11[9]._super,
                 x11[10]._super, x11[11]._super, x11[12]._super, x11[13]._super, x11[14]._super,
                 x11[15]._super, x11[16]._super, x11[17]._super, x11[18]._super, x11[19]._super,
                 x11[20]._super, x11[21]._super, x12[0]._super,  x12[1]._super,  x12[2]._super,
                 x12[3]._super,  x12[4]._super,  x12[5]._super,  x12[6]._super,  x12[7]._super,
                 x12[8]._super,  x12[9]._super},
      Val32Array{x13[0]._super,  x13[1]._super,  x13[2]._super,  x13[3]._super,  x13[4]._super,
                 x13[5]._super,  x13[6]._super,  x13[7]._super,  x13[8]._super,  x13[9]._super,
                 x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x14[0]._super,  x14[1]._super,  x14[2]._super,
                 x14[3]._super,  x14[4]._super,  x14[5]._super,  x14[6]._super,  x14[7]._super,
                 x14[8]._super,  x14[9]._super},
      Val32Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x16[0]._super,  x16[1]._super,  x16[2]._super,
                 x16[3]._super,  x16[4]._super,  x16[5]._super,  x16[6]._super,  x16[7]._super,
                 x16[8]._super,  x16[9]._super},
      Val32Array{x17[0]._super,  x17[1]._super,  x17[2]._super,  x17[3]._super,  x17[4]._super,
                 x17[5]._super,  x17[6]._super,  x17[7]._super,  x17[8]._super,  x17[9]._super,
                 x17[10]._super, x17[11]._super, x17[12]._super, x17[13]._super, x17[14]._super,
                 x17[15]._super, x17[16]._super, x17[17]._super, x17[18]._super, x17[19]._super,
                 x17[20]._super, x17[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super},
      LAYOUT_LOOKUP(layout2, packedW));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16_Struct x20 =
      execUnpackWithCarry(ctx, x19.low, x19.high, LAYOUT_LOOKUP(layout2, newW));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  NondetRegStruct22Array x21 = x4.arrA;
  NondetRegStruct22Array x22 = x4.arrB;
  NondetRegStruct22Array x23 = x5.arrA;
  NondetRegStruct22Array x24 = x5.arrB;
  NondetRegStruct22Array x25 = x6.arrA;
  NondetRegStruct22Array x26 = x6.arrB;
  NondetRegStruct22Array x27 = x7.arrA;
  NondetRegStruct22Array x28 = x7.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:369)
  NondetRegStruct22Array x29 = x4.arrC;
  NondetRegStruct22Array x30 = x5.arrC;
  NondetRegStruct22Array x31 = x6.arrC;
  NondetRegStruct22Array x32 = x7.arrC;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x33 = x20._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  Val x55 = x33[21]._super;
  Val x56 = x33[22]._super;
  Val x57 = x33[23]._super;
  Val x58 = x33[24]._super;
  Val x59 = x33[25]._super;
  Val x60 = x33[26]._super;
  Val x61 = x33[27]._super;
  Val x62 = x33[28]._super;
  Val x63 = x33[29]._super;
  Val x64 = x33[30]._super;
  Val x65 = x33[31]._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  ComputeAEStruct x66 = execComputeAE(
      ctx,
      Val32Array{x21[0]._super,  x21[1]._super,  x21[2]._super,  x21[3]._super,  x21[4]._super,
                 x21[5]._super,  x21[6]._super,  x21[7]._super,  x21[8]._super,  x21[9]._super,
                 x21[10]._super, x21[11]._super, x21[12]._super, x21[13]._super, x21[14]._super,
                 x21[15]._super, x21[16]._super, x21[17]._super, x21[18]._super, x21[19]._super,
                 x21[20]._super, x21[21]._super, x22[0]._super,  x22[1]._super,  x22[2]._super,
                 x22[3]._super,  x22[4]._super,  x22[5]._super,  x22[6]._super,  x22[7]._super,
                 x22[8]._super,  x22[9]._super},
      Val32Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super, x24[0]._super,  x24[1]._super,  x24[2]._super,
                 x24[3]._super,  x24[4]._super,  x24[5]._super,  x24[6]._super,  x24[7]._super,
                 x24[8]._super,  x24[9]._super},
      Val32Array{x25[0]._super,  x25[1]._super,  x25[2]._super,  x25[3]._super,  x25[4]._super,
                 x25[5]._super,  x25[6]._super,  x25[7]._super,  x25[8]._super,  x25[9]._super,
                 x25[10]._super, x25[11]._super, x25[12]._super, x25[13]._super, x25[14]._super,
                 x25[15]._super, x25[16]._super, x25[17]._super, x25[18]._super, x25[19]._super,
                 x25[20]._super, x25[21]._super, x26[0]._super,  x26[1]._super,  x26[2]._super,
                 x26[3]._super,  x26[4]._super,  x26[5]._super,  x26[6]._super,  x26[7]._super,
                 x26[8]._super,  x26[9]._super},
      Val32Array{x27[0]._super,  x27[1]._super,  x27[2]._super,  x27[3]._super,  x27[4]._super,
                 x27[5]._super,  x27[6]._super,  x27[7]._super,  x27[8]._super,  x27[9]._super,
                 x27[10]._super, x27[11]._super, x27[12]._super, x27[13]._super, x27[14]._super,
                 x27[15]._super, x27[16]._super, x27[17]._super, x27[18]._super, x27[19]._super,
                 x27[20]._super, x27[21]._super, x28[0]._super,  x28[1]._super,  x28[2]._super,
                 x28[3]._super,  x28[4]._super,  x28[5]._super,  x28[6]._super,  x28[7]._super,
                 x28[8]._super,  x28[9]._super},
      Val32Array{x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super, x29[0]._super,  x29[1]._super,  x29[2]._super,
                 x29[3]._super,  x29[4]._super,  x29[5]._super,  x29[6]._super,  x29[7]._super,
                 x29[8]._super,  x29[9]._super,  x29[10]._super, x29[11]._super, x29[12]._super,
                 x29[13]._super, x29[14]._super, x29[15]._super, x29[16]._super, x29[17]._super,
                 x29[18]._super, x29[19]._super},
      Val32Array{x24[10]._super, x24[11]._super, x24[12]._super, x24[13]._super, x24[14]._super,
                 x24[15]._super, x24[16]._super, x24[17]._super, x24[18]._super, x24[19]._super,
                 x24[20]._super, x24[21]._super, x30[0]._super,  x30[1]._super,  x30[2]._super,
                 x30[3]._super,  x30[4]._super,  x30[5]._super,  x30[6]._super,  x30[7]._super,
                 x30[8]._super,  x30[9]._super,  x30[10]._super, x30[11]._super, x30[12]._super,
                 x30[13]._super, x30[14]._super, x30[15]._super, x30[16]._super, x30[17]._super,
                 x30[18]._super, x30[19]._super},
      Val32Array{x26[10]._super, x26[11]._super, x26[12]._super, x26[13]._super, x26[14]._super,
                 x26[15]._super, x26[16]._super, x26[17]._super, x26[18]._super, x26[19]._super,
                 x26[20]._super, x26[21]._super, x31[0]._super,  x31[1]._super,  x31[2]._super,
                 x31[3]._super,  x31[4]._super,  x31[5]._super,  x31[6]._super,  x31[7]._super,
                 x31[8]._super,  x31[9]._super,  x31[10]._super, x31[11]._super, x31[12]._super,
                 x31[13]._super, x31[14]._super, x31[15]._super, x31[16]._super, x31[17]._super,
                 x31[18]._super, x31[19]._super},
      Val32Array{x28[10]._super, x28[11]._super, x28[12]._super, x28[13]._super, x28[14]._super,
                 x28[15]._super, x28[16]._super, x28[17]._super, x28[18]._super, x28[19]._super,
                 x28[20]._super, x28[21]._super, x32[0]._super,  x32[1]._super,  x32[2]._super,
                 x32[3]._super,  x32[4]._super,  x32[5]._super,  x32[6]._super,  x32[7]._super,
                 x32[8]._super,  x32[9]._super,  x32[10]._super, x32[11]._super, x32[12]._super,
                 x32[13]._super, x32[14]._super, x32[15]._super, x32[16]._super, x32[17]._super,
                 x32[18]._super, x32[19]._super},
      Val32Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49,
                 x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65},
      TwoShortsStruct{.low = Val(25455), .high = Val(30885)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x67 = x66.aOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16_Struct x68 =
      execUnpackWithCarry(ctx, x67.low, x67.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  TwoShortsStruct x69 = x66.eOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16_Struct x70 =
      execUnpackWithCarry(ctx, x69.low, x69.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x71 = x68._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x72 = x70._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_2__9_Arm1_Super_SuperLayout> x73 = LAYOUT_LOOKUP(x3, arm1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:373)
  Val22Array x74 =
      Val22Array{x71[0]._super,  x71[1]._super,  x71[2]._super,  x71[3]._super,  x71[4]._super,
                 x71[5]._super,  x71[6]._super,  x71[7]._super,  x71[8]._super,  x71[9]._super,
                 x71[10]._super, x71[11]._super, x71[12]._super, x71[13]._super, x71[14]._super,
                 x71[15]._super, x71[16]._super, x71[17]._super, x71[18]._super, x71[19]._super,
                 x71[20]._super, x71[21]._super};
  Val22Array x75 =
      Val22Array{x71[22]._super, x71[23]._super, x71[24]._super, x71[25]._super, x71[26]._super,
                 x71[27]._super, x71[28]._super, x71[29]._super, x71[30]._super, x71[31]._super,
                 x72[0]._super,  x72[1]._super,  x72[2]._super,  x72[3]._super,  x72[4]._super,
                 x72[5]._super,  x72[6]._super,  x72[7]._super,  x72[8]._super,  x72[9]._super,
                 x72[10]._super, x72[11]._super};
  Val22Array x76 =
      Val22Array{x72[12]._super, x72[13]._super, x72[14]._super, x72[15]._super, x72[16]._super,
                 x72[17]._super, x72[18]._super, x72[19]._super, x72[20]._super, x72[21]._super,
                 x72[22]._super, x72[23]._super, x72[24]._super, x72[25]._super, x72[26]._super,
                 x72[27]._super, x72[28]._super, x72[29]._super, x72[30]._super, x72[31]._super,
                 Val(0),         Val(0)};
  Val22Array x77 = Val22Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,
                              x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55};
  Val22Array x78 = Val22Array{x56,    x57,    x58,    x59,    x60,    x61,    x62,    x63,
                              x64,    x65,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  Val x79 = x4.blk._super;
  Val x80 = x4.midx._super;
  if (to_size_t(Val(1))) {
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:376)
    RetTupleStruct x81 =
        exec_RetTuple(ctx,
                      x74,
                      x75,
                      x76,
                      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                      x77,
                      x78,
                      Val(10),
                      Val(22),
                      Val(0),
                      x79,
                      x80,
                      LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  NondetRegStruct24Array x82 = x4.arrD;
  Val24Array x83 =
      Val24Array{x82[0]._super,  x82[1]._super,  x82[2]._super,  x82[3]._super,  x82[4]._super,
                 x82[5]._super,  x82[6]._super,  x82[7]._super,  x82[8]._super,  x82[9]._super,
                 x82[10]._super, x82[11]._super, x82[12]._super, x82[13]._super, x82[14]._super,
                 x82[15]._super, x82[16]._super, x82[17]._super, x82[18]._super, x82[19]._super,
                 x82[20]._super, x82[21]._super, x82[22]._super, x82[23]._super};
  Val x84 = x4.rnd._super;
  if (to_size_t(Val(0))) {
    if (to_size_t(Val(0))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:380)
      RetTupleStruct x85 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(0),
                                         Val(23),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm0));
    }
    if (to_size_t(Val(1))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:383)
      RetTupleStruct x86 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(9),
                                         Val(17),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm1));
    }
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:379)
    RetTupleStruct x87 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x73, _super));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  RetTupleStruct x88 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x88;
}
RetTupleStruct execSha256mix_2__10_(ExecContext& ctx,
                                    RetTupleStruct arg0,
                                    BoundLayout<RetTupleLayout> arg1,
                                    BoundLayout<Sha256mix_2__10_Layout> layout2) {
  BoundLayout<Sha256mix_2__10__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:359)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:360)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:361)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:362)
  RetTupleStruct x8 = back_RetTuple(ctx, 7, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:363)
  RetTupleStruct x9 = back_RetTuple(ctx, 15, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:364)
  RetTupleStruct x10 = back_RetTuple(ctx, 16, arg1);
  // s2w(zirgen/circuit/keccak/sha256_for_keccak.zir:155)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:366)
  NondetRegStruct22Array x11 = x5.arrE;
  NondetRegStruct22Array x12 = x5.arrF;
  NondetRegStruct22Array x13 = x8.arrE;
  NondetRegStruct22Array x14 = x8.arrF;
  NondetRegStruct22Array x15 = x9.arrE;
  NondetRegStruct22Array x16 = x9.arrF;
  NondetRegStruct22Array x17 = x10.arrE;
  NondetRegStruct22Array x18 = x10.arrF;
  TwoShortsStruct x19 = execComputeW(
      ctx,
      Val32Array{x11[0]._super,  x11[1]._super,  x11[2]._super,  x11[3]._super,  x11[4]._super,
                 x11[5]._super,  x11[6]._super,  x11[7]._super,  x11[8]._super,  x11[9]._super,
                 x11[10]._super, x11[11]._super, x11[12]._super, x11[13]._super, x11[14]._super,
                 x11[15]._super, x11[16]._super, x11[17]._super, x11[18]._super, x11[19]._super,
                 x11[20]._super, x11[21]._super, x12[0]._super,  x12[1]._super,  x12[2]._super,
                 x12[3]._super,  x12[4]._super,  x12[5]._super,  x12[6]._super,  x12[7]._super,
                 x12[8]._super,  x12[9]._super},
      Val32Array{x13[0]._super,  x13[1]._super,  x13[2]._super,  x13[3]._super,  x13[4]._super,
                 x13[5]._super,  x13[6]._super,  x13[7]._super,  x13[8]._super,  x13[9]._super,
                 x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x14[0]._super,  x14[1]._super,  x14[2]._super,
                 x14[3]._super,  x14[4]._super,  x14[5]._super,  x14[6]._super,  x14[7]._super,
                 x14[8]._super,  x14[9]._super},
      Val32Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x16[0]._super,  x16[1]._super,  x16[2]._super,
                 x16[3]._super,  x16[4]._super,  x16[5]._super,  x16[6]._super,  x16[7]._super,
                 x16[8]._super,  x16[9]._super},
      Val32Array{x17[0]._super,  x17[1]._super,  x17[2]._super,  x17[3]._super,  x17[4]._super,
                 x17[5]._super,  x17[6]._super,  x17[7]._super,  x17[8]._super,  x17[9]._super,
                 x17[10]._super, x17[11]._super, x17[12]._super, x17[13]._super, x17[14]._super,
                 x17[15]._super, x17[16]._super, x17[17]._super, x17[18]._super, x17[19]._super,
                 x17[20]._super, x17[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super},
      LAYOUT_LOOKUP(layout2, packedW));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16_Struct x20 =
      execUnpackWithCarry(ctx, x19.low, x19.high, LAYOUT_LOOKUP(layout2, newW));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  NondetRegStruct22Array x21 = x4.arrA;
  NondetRegStruct22Array x22 = x4.arrB;
  NondetRegStruct22Array x23 = x5.arrA;
  NondetRegStruct22Array x24 = x5.arrB;
  NondetRegStruct22Array x25 = x6.arrA;
  NondetRegStruct22Array x26 = x6.arrB;
  NondetRegStruct22Array x27 = x7.arrA;
  NondetRegStruct22Array x28 = x7.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:369)
  NondetRegStruct22Array x29 = x4.arrC;
  NondetRegStruct22Array x30 = x5.arrC;
  NondetRegStruct22Array x31 = x6.arrC;
  NondetRegStruct22Array x32 = x7.arrC;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x33 = x20._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  Val x55 = x33[21]._super;
  Val x56 = x33[22]._super;
  Val x57 = x33[23]._super;
  Val x58 = x33[24]._super;
  Val x59 = x33[25]._super;
  Val x60 = x33[26]._super;
  Val x61 = x33[27]._super;
  Val x62 = x33[28]._super;
  Val x63 = x33[29]._super;
  Val x64 = x33[30]._super;
  Val x65 = x33[31]._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  ComputeAEStruct x66 = execComputeAE(
      ctx,
      Val32Array{x21[0]._super,  x21[1]._super,  x21[2]._super,  x21[3]._super,  x21[4]._super,
                 x21[5]._super,  x21[6]._super,  x21[7]._super,  x21[8]._super,  x21[9]._super,
                 x21[10]._super, x21[11]._super, x21[12]._super, x21[13]._super, x21[14]._super,
                 x21[15]._super, x21[16]._super, x21[17]._super, x21[18]._super, x21[19]._super,
                 x21[20]._super, x21[21]._super, x22[0]._super,  x22[1]._super,  x22[2]._super,
                 x22[3]._super,  x22[4]._super,  x22[5]._super,  x22[6]._super,  x22[7]._super,
                 x22[8]._super,  x22[9]._super},
      Val32Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super, x24[0]._super,  x24[1]._super,  x24[2]._super,
                 x24[3]._super,  x24[4]._super,  x24[5]._super,  x24[6]._super,  x24[7]._super,
                 x24[8]._super,  x24[9]._super},
      Val32Array{x25[0]._super,  x25[1]._super,  x25[2]._super,  x25[3]._super,  x25[4]._super,
                 x25[5]._super,  x25[6]._super,  x25[7]._super,  x25[8]._super,  x25[9]._super,
                 x25[10]._super, x25[11]._super, x25[12]._super, x25[13]._super, x25[14]._super,
                 x25[15]._super, x25[16]._super, x25[17]._super, x25[18]._super, x25[19]._super,
                 x25[20]._super, x25[21]._super, x26[0]._super,  x26[1]._super,  x26[2]._super,
                 x26[3]._super,  x26[4]._super,  x26[5]._super,  x26[6]._super,  x26[7]._super,
                 x26[8]._super,  x26[9]._super},
      Val32Array{x27[0]._super,  x27[1]._super,  x27[2]._super,  x27[3]._super,  x27[4]._super,
                 x27[5]._super,  x27[6]._super,  x27[7]._super,  x27[8]._super,  x27[9]._super,
                 x27[10]._super, x27[11]._super, x27[12]._super, x27[13]._super, x27[14]._super,
                 x27[15]._super, x27[16]._super, x27[17]._super, x27[18]._super, x27[19]._super,
                 x27[20]._super, x27[21]._super, x28[0]._super,  x28[1]._super,  x28[2]._super,
                 x28[3]._super,  x28[4]._super,  x28[5]._super,  x28[6]._super,  x28[7]._super,
                 x28[8]._super,  x28[9]._super},
      Val32Array{x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super, x29[0]._super,  x29[1]._super,  x29[2]._super,
                 x29[3]._super,  x29[4]._super,  x29[5]._super,  x29[6]._super,  x29[7]._super,
                 x29[8]._super,  x29[9]._super,  x29[10]._super, x29[11]._super, x29[12]._super,
                 x29[13]._super, x29[14]._super, x29[15]._super, x29[16]._super, x29[17]._super,
                 x29[18]._super, x29[19]._super},
      Val32Array{x24[10]._super, x24[11]._super, x24[12]._super, x24[13]._super, x24[14]._super,
                 x24[15]._super, x24[16]._super, x24[17]._super, x24[18]._super, x24[19]._super,
                 x24[20]._super, x24[21]._super, x30[0]._super,  x30[1]._super,  x30[2]._super,
                 x30[3]._super,  x30[4]._super,  x30[5]._super,  x30[6]._super,  x30[7]._super,
                 x30[8]._super,  x30[9]._super,  x30[10]._super, x30[11]._super, x30[12]._super,
                 x30[13]._super, x30[14]._super, x30[15]._super, x30[16]._super, x30[17]._super,
                 x30[18]._super, x30[19]._super},
      Val32Array{x26[10]._super, x26[11]._super, x26[12]._super, x26[13]._super, x26[14]._super,
                 x26[15]._super, x26[16]._super, x26[17]._super, x26[18]._super, x26[19]._super,
                 x26[20]._super, x26[21]._super, x31[0]._super,  x31[1]._super,  x31[2]._super,
                 x31[3]._super,  x31[4]._super,  x31[5]._super,  x31[6]._super,  x31[7]._super,
                 x31[8]._super,  x31[9]._super,  x31[10]._super, x31[11]._super, x31[12]._super,
                 x31[13]._super, x31[14]._super, x31[15]._super, x31[16]._super, x31[17]._super,
                 x31[18]._super, x31[19]._super},
      Val32Array{x28[10]._super, x28[11]._super, x28[12]._super, x28[13]._super, x28[14]._super,
                 x28[15]._super, x28[16]._super, x28[17]._super, x28[18]._super, x28[19]._super,
                 x28[20]._super, x28[21]._super, x32[0]._super,  x32[1]._super,  x32[2]._super,
                 x32[3]._super,  x32[4]._super,  x32[5]._super,  x32[6]._super,  x32[7]._super,
                 x32[8]._super,  x32[9]._super,  x32[10]._super, x32[11]._super, x32[12]._super,
                 x32[13]._super, x32[14]._super, x32[15]._super, x32[16]._super, x32[17]._super,
                 x32[18]._super, x32[19]._super},
      Val32Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49,
                 x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65},
      TwoShortsStruct{.low = Val(30740), .high = Val(33992)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x67 = x66.aOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16_Struct x68 =
      execUnpackWithCarry(ctx, x67.low, x67.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  TwoShortsStruct x69 = x66.eOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16_Struct x70 =
      execUnpackWithCarry(ctx, x69.low, x69.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x71 = x68._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x72 = x70._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_2__10_Arm1_Super_SuperLayout> x73 = LAYOUT_LOOKUP(x3, arm1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:373)
  Val22Array x74 =
      Val22Array{x71[0]._super,  x71[1]._super,  x71[2]._super,  x71[3]._super,  x71[4]._super,
                 x71[5]._super,  x71[6]._super,  x71[7]._super,  x71[8]._super,  x71[9]._super,
                 x71[10]._super, x71[11]._super, x71[12]._super, x71[13]._super, x71[14]._super,
                 x71[15]._super, x71[16]._super, x71[17]._super, x71[18]._super, x71[19]._super,
                 x71[20]._super, x71[21]._super};
  Val22Array x75 =
      Val22Array{x71[22]._super, x71[23]._super, x71[24]._super, x71[25]._super, x71[26]._super,
                 x71[27]._super, x71[28]._super, x71[29]._super, x71[30]._super, x71[31]._super,
                 x72[0]._super,  x72[1]._super,  x72[2]._super,  x72[3]._super,  x72[4]._super,
                 x72[5]._super,  x72[6]._super,  x72[7]._super,  x72[8]._super,  x72[9]._super,
                 x72[10]._super, x72[11]._super};
  Val22Array x76 =
      Val22Array{x72[12]._super, x72[13]._super, x72[14]._super, x72[15]._super, x72[16]._super,
                 x72[17]._super, x72[18]._super, x72[19]._super, x72[20]._super, x72[21]._super,
                 x72[22]._super, x72[23]._super, x72[24]._super, x72[25]._super, x72[26]._super,
                 x72[27]._super, x72[28]._super, x72[29]._super, x72[30]._super, x72[31]._super,
                 Val(0),         Val(0)};
  Val22Array x77 = Val22Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,
                              x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55};
  Val22Array x78 = Val22Array{x56,    x57,    x58,    x59,    x60,    x61,    x62,    x63,
                              x64,    x65,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  Val x79 = x4.blk._super;
  Val x80 = x4.midx._super;
  if (to_size_t(Val(1))) {
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:376)
    RetTupleStruct x81 =
        exec_RetTuple(ctx,
                      x74,
                      x75,
                      x76,
                      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                      x77,
                      x78,
                      Val(11),
                      Val(22),
                      Val(0),
                      x79,
                      x80,
                      LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  NondetRegStruct24Array x82 = x4.arrD;
  Val24Array x83 =
      Val24Array{x82[0]._super,  x82[1]._super,  x82[2]._super,  x82[3]._super,  x82[4]._super,
                 x82[5]._super,  x82[6]._super,  x82[7]._super,  x82[8]._super,  x82[9]._super,
                 x82[10]._super, x82[11]._super, x82[12]._super, x82[13]._super, x82[14]._super,
                 x82[15]._super, x82[16]._super, x82[17]._super, x82[18]._super, x82[19]._super,
                 x82[20]._super, x82[21]._super, x82[22]._super, x82[23]._super};
  Val x84 = x4.rnd._super;
  if (to_size_t(Val(0))) {
    if (to_size_t(Val(0))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:380)
      RetTupleStruct x85 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(0),
                                         Val(23),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm0));
    }
    if (to_size_t(Val(1))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:383)
      RetTupleStruct x86 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(9),
                                         Val(17),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm1));
    }
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:379)
    RetTupleStruct x87 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x73, _super));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  RetTupleStruct x88 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x88;
}
RetTupleStruct execSha256mix_2__11_(ExecContext& ctx,
                                    RetTupleStruct arg0,
                                    BoundLayout<RetTupleLayout> arg1,
                                    BoundLayout<Sha256mix_2__11_Layout> layout2) {
  BoundLayout<Sha256mix_2__11__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:359)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:360)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:361)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:362)
  RetTupleStruct x8 = back_RetTuple(ctx, 7, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:363)
  RetTupleStruct x9 = back_RetTuple(ctx, 15, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:364)
  RetTupleStruct x10 = back_RetTuple(ctx, 16, arg1);
  // s2w(zirgen/circuit/keccak/sha256_for_keccak.zir:155)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:366)
  NondetRegStruct22Array x11 = x5.arrE;
  NondetRegStruct22Array x12 = x5.arrF;
  NondetRegStruct22Array x13 = x8.arrE;
  NondetRegStruct22Array x14 = x8.arrF;
  NondetRegStruct22Array x15 = x9.arrE;
  NondetRegStruct22Array x16 = x9.arrF;
  NondetRegStruct22Array x17 = x10.arrE;
  NondetRegStruct22Array x18 = x10.arrF;
  TwoShortsStruct x19 = execComputeW(
      ctx,
      Val32Array{x11[0]._super,  x11[1]._super,  x11[2]._super,  x11[3]._super,  x11[4]._super,
                 x11[5]._super,  x11[6]._super,  x11[7]._super,  x11[8]._super,  x11[9]._super,
                 x11[10]._super, x11[11]._super, x11[12]._super, x11[13]._super, x11[14]._super,
                 x11[15]._super, x11[16]._super, x11[17]._super, x11[18]._super, x11[19]._super,
                 x11[20]._super, x11[21]._super, x12[0]._super,  x12[1]._super,  x12[2]._super,
                 x12[3]._super,  x12[4]._super,  x12[5]._super,  x12[6]._super,  x12[7]._super,
                 x12[8]._super,  x12[9]._super},
      Val32Array{x13[0]._super,  x13[1]._super,  x13[2]._super,  x13[3]._super,  x13[4]._super,
                 x13[5]._super,  x13[6]._super,  x13[7]._super,  x13[8]._super,  x13[9]._super,
                 x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x14[0]._super,  x14[1]._super,  x14[2]._super,
                 x14[3]._super,  x14[4]._super,  x14[5]._super,  x14[6]._super,  x14[7]._super,
                 x14[8]._super,  x14[9]._super},
      Val32Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x16[0]._super,  x16[1]._super,  x16[2]._super,
                 x16[3]._super,  x16[4]._super,  x16[5]._super,  x16[6]._super,  x16[7]._super,
                 x16[8]._super,  x16[9]._super},
      Val32Array{x17[0]._super,  x17[1]._super,  x17[2]._super,  x17[3]._super,  x17[4]._super,
                 x17[5]._super,  x17[6]._super,  x17[7]._super,  x17[8]._super,  x17[9]._super,
                 x17[10]._super, x17[11]._super, x17[12]._super, x17[13]._super, x17[14]._super,
                 x17[15]._super, x17[16]._super, x17[17]._super, x17[18]._super, x17[19]._super,
                 x17[20]._super, x17[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super},
      LAYOUT_LOOKUP(layout2, packedW));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16_Struct x20 =
      execUnpackWithCarry(ctx, x19.low, x19.high, LAYOUT_LOOKUP(layout2, newW));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  NondetRegStruct22Array x21 = x4.arrA;
  NondetRegStruct22Array x22 = x4.arrB;
  NondetRegStruct22Array x23 = x5.arrA;
  NondetRegStruct22Array x24 = x5.arrB;
  NondetRegStruct22Array x25 = x6.arrA;
  NondetRegStruct22Array x26 = x6.arrB;
  NondetRegStruct22Array x27 = x7.arrA;
  NondetRegStruct22Array x28 = x7.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:369)
  NondetRegStruct22Array x29 = x4.arrC;
  NondetRegStruct22Array x30 = x5.arrC;
  NondetRegStruct22Array x31 = x6.arrC;
  NondetRegStruct22Array x32 = x7.arrC;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x33 = x20._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  Val x55 = x33[21]._super;
  Val x56 = x33[22]._super;
  Val x57 = x33[23]._super;
  Val x58 = x33[24]._super;
  Val x59 = x33[25]._super;
  Val x60 = x33[26]._super;
  Val x61 = x33[27]._super;
  Val x62 = x33[28]._super;
  Val x63 = x33[29]._super;
  Val x64 = x33[30]._super;
  Val x65 = x33[31]._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  ComputeAEStruct x66 = execComputeAE(
      ctx,
      Val32Array{x21[0]._super,  x21[1]._super,  x21[2]._super,  x21[3]._super,  x21[4]._super,
                 x21[5]._super,  x21[6]._super,  x21[7]._super,  x21[8]._super,  x21[9]._super,
                 x21[10]._super, x21[11]._super, x21[12]._super, x21[13]._super, x21[14]._super,
                 x21[15]._super, x21[16]._super, x21[17]._super, x21[18]._super, x21[19]._super,
                 x21[20]._super, x21[21]._super, x22[0]._super,  x22[1]._super,  x22[2]._super,
                 x22[3]._super,  x22[4]._super,  x22[5]._super,  x22[6]._super,  x22[7]._super,
                 x22[8]._super,  x22[9]._super},
      Val32Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super, x24[0]._super,  x24[1]._super,  x24[2]._super,
                 x24[3]._super,  x24[4]._super,  x24[5]._super,  x24[6]._super,  x24[7]._super,
                 x24[8]._super,  x24[9]._super},
      Val32Array{x25[0]._super,  x25[1]._super,  x25[2]._super,  x25[3]._super,  x25[4]._super,
                 x25[5]._super,  x25[6]._super,  x25[7]._super,  x25[8]._super,  x25[9]._super,
                 x25[10]._super, x25[11]._super, x25[12]._super, x25[13]._super, x25[14]._super,
                 x25[15]._super, x25[16]._super, x25[17]._super, x25[18]._super, x25[19]._super,
                 x25[20]._super, x25[21]._super, x26[0]._super,  x26[1]._super,  x26[2]._super,
                 x26[3]._super,  x26[4]._super,  x26[5]._super,  x26[6]._super,  x26[7]._super,
                 x26[8]._super,  x26[9]._super},
      Val32Array{x27[0]._super,  x27[1]._super,  x27[2]._super,  x27[3]._super,  x27[4]._super,
                 x27[5]._super,  x27[6]._super,  x27[7]._super,  x27[8]._super,  x27[9]._super,
                 x27[10]._super, x27[11]._super, x27[12]._super, x27[13]._super, x27[14]._super,
                 x27[15]._super, x27[16]._super, x27[17]._super, x27[18]._super, x27[19]._super,
                 x27[20]._super, x27[21]._super, x28[0]._super,  x28[1]._super,  x28[2]._super,
                 x28[3]._super,  x28[4]._super,  x28[5]._super,  x28[6]._super,  x28[7]._super,
                 x28[8]._super,  x28[9]._super},
      Val32Array{x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super, x29[0]._super,  x29[1]._super,  x29[2]._super,
                 x29[3]._super,  x29[4]._super,  x29[5]._super,  x29[6]._super,  x29[7]._super,
                 x29[8]._super,  x29[9]._super,  x29[10]._super, x29[11]._super, x29[12]._super,
                 x29[13]._super, x29[14]._super, x29[15]._super, x29[16]._super, x29[17]._super,
                 x29[18]._super, x29[19]._super},
      Val32Array{x24[10]._super, x24[11]._super, x24[12]._super, x24[13]._super, x24[14]._super,
                 x24[15]._super, x24[16]._super, x24[17]._super, x24[18]._super, x24[19]._super,
                 x24[20]._super, x24[21]._super, x30[0]._super,  x30[1]._super,  x30[2]._super,
                 x30[3]._super,  x30[4]._super,  x30[5]._super,  x30[6]._super,  x30[7]._super,
                 x30[8]._super,  x30[9]._super,  x30[10]._super, x30[11]._super, x30[12]._super,
                 x30[13]._super, x30[14]._super, x30[15]._super, x30[16]._super, x30[17]._super,
                 x30[18]._super, x30[19]._super},
      Val32Array{x26[10]._super, x26[11]._super, x26[12]._super, x26[13]._super, x26[14]._super,
                 x26[15]._super, x26[16]._super, x26[17]._super, x26[18]._super, x26[19]._super,
                 x26[20]._super, x26[21]._super, x31[0]._super,  x31[1]._super,  x31[2]._super,
                 x31[3]._super,  x31[4]._super,  x31[5]._super,  x31[6]._super,  x31[7]._super,
                 x31[8]._super,  x31[9]._super,  x31[10]._super, x31[11]._super, x31[12]._super,
                 x31[13]._super, x31[14]._super, x31[15]._super, x31[16]._super, x31[17]._super,
                 x31[18]._super, x31[19]._super},
      Val32Array{x28[10]._super, x28[11]._super, x28[12]._super, x28[13]._super, x28[14]._super,
                 x28[15]._super, x28[16]._super, x28[17]._super, x28[18]._super, x28[19]._super,
                 x28[20]._super, x28[21]._super, x32[0]._super,  x32[1]._super,  x32[2]._super,
                 x32[3]._super,  x32[4]._super,  x32[5]._super,  x32[6]._super,  x32[7]._super,
                 x32[8]._super,  x32[9]._super,  x32[10]._super, x32[11]._super, x32[12]._super,
                 x32[13]._super, x32[14]._super, x32[15]._super, x32[16]._super, x32[17]._super,
                 x32[18]._super, x32[19]._super},
      Val32Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49,
                 x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65},
      TwoShortsStruct{.low = Val(520), .high = Val(36039)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x67 = x66.aOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16_Struct x68 =
      execUnpackWithCarry(ctx, x67.low, x67.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  TwoShortsStruct x69 = x66.eOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16_Struct x70 =
      execUnpackWithCarry(ctx, x69.low, x69.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x71 = x68._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x72 = x70._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_2__11_Arm1_Super_SuperLayout> x73 = LAYOUT_LOOKUP(x3, arm1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:373)
  Val22Array x74 =
      Val22Array{x71[0]._super,  x71[1]._super,  x71[2]._super,  x71[3]._super,  x71[4]._super,
                 x71[5]._super,  x71[6]._super,  x71[7]._super,  x71[8]._super,  x71[9]._super,
                 x71[10]._super, x71[11]._super, x71[12]._super, x71[13]._super, x71[14]._super,
                 x71[15]._super, x71[16]._super, x71[17]._super, x71[18]._super, x71[19]._super,
                 x71[20]._super, x71[21]._super};
  Val22Array x75 =
      Val22Array{x71[22]._super, x71[23]._super, x71[24]._super, x71[25]._super, x71[26]._super,
                 x71[27]._super, x71[28]._super, x71[29]._super, x71[30]._super, x71[31]._super,
                 x72[0]._super,  x72[1]._super,  x72[2]._super,  x72[3]._super,  x72[4]._super,
                 x72[5]._super,  x72[6]._super,  x72[7]._super,  x72[8]._super,  x72[9]._super,
                 x72[10]._super, x72[11]._super};
  Val22Array x76 =
      Val22Array{x72[12]._super, x72[13]._super, x72[14]._super, x72[15]._super, x72[16]._super,
                 x72[17]._super, x72[18]._super, x72[19]._super, x72[20]._super, x72[21]._super,
                 x72[22]._super, x72[23]._super, x72[24]._super, x72[25]._super, x72[26]._super,
                 x72[27]._super, x72[28]._super, x72[29]._super, x72[30]._super, x72[31]._super,
                 Val(0),         Val(0)};
  Val22Array x77 = Val22Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,
                              x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55};
  Val22Array x78 = Val22Array{x56,    x57,    x58,    x59,    x60,    x61,    x62,    x63,
                              x64,    x65,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  Val x79 = x4.blk._super;
  Val x80 = x4.midx._super;
  if (to_size_t(Val(1))) {
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:376)
    RetTupleStruct x81 =
        exec_RetTuple(ctx,
                      x74,
                      x75,
                      x76,
                      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                      x77,
                      x78,
                      Val(12),
                      Val(22),
                      Val(0),
                      x79,
                      x80,
                      LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  NondetRegStruct24Array x82 = x4.arrD;
  Val24Array x83 =
      Val24Array{x82[0]._super,  x82[1]._super,  x82[2]._super,  x82[3]._super,  x82[4]._super,
                 x82[5]._super,  x82[6]._super,  x82[7]._super,  x82[8]._super,  x82[9]._super,
                 x82[10]._super, x82[11]._super, x82[12]._super, x82[13]._super, x82[14]._super,
                 x82[15]._super, x82[16]._super, x82[17]._super, x82[18]._super, x82[19]._super,
                 x82[20]._super, x82[21]._super, x82[22]._super, x82[23]._super};
  Val x84 = x4.rnd._super;
  if (to_size_t(Val(0))) {
    if (to_size_t(Val(0))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:380)
      RetTupleStruct x85 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(0),
                                         Val(23),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm0));
    }
    if (to_size_t(Val(1))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:383)
      RetTupleStruct x86 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(9),
                                         Val(17),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm1));
    }
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:379)
    RetTupleStruct x87 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x73, _super));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  RetTupleStruct x88 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x88;
}
RetTupleStruct execSha256mix_2__12_(ExecContext& ctx,
                                    RetTupleStruct arg0,
                                    BoundLayout<RetTupleLayout> arg1,
                                    BoundLayout<Sha256mix_2__12_Layout> layout2) {
  BoundLayout<Sha256mix_2__12__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:359)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:360)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:361)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:362)
  RetTupleStruct x8 = back_RetTuple(ctx, 7, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:363)
  RetTupleStruct x9 = back_RetTuple(ctx, 15, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:364)
  RetTupleStruct x10 = back_RetTuple(ctx, 16, arg1);
  // s2w(zirgen/circuit/keccak/sha256_for_keccak.zir:155)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:366)
  NondetRegStruct22Array x11 = x5.arrE;
  NondetRegStruct22Array x12 = x5.arrF;
  NondetRegStruct22Array x13 = x8.arrE;
  NondetRegStruct22Array x14 = x8.arrF;
  NondetRegStruct22Array x15 = x9.arrE;
  NondetRegStruct22Array x16 = x9.arrF;
  NondetRegStruct22Array x17 = x10.arrE;
  NondetRegStruct22Array x18 = x10.arrF;
  TwoShortsStruct x19 = execComputeW(
      ctx,
      Val32Array{x11[0]._super,  x11[1]._super,  x11[2]._super,  x11[3]._super,  x11[4]._super,
                 x11[5]._super,  x11[6]._super,  x11[7]._super,  x11[8]._super,  x11[9]._super,
                 x11[10]._super, x11[11]._super, x11[12]._super, x11[13]._super, x11[14]._super,
                 x11[15]._super, x11[16]._super, x11[17]._super, x11[18]._super, x11[19]._super,
                 x11[20]._super, x11[21]._super, x12[0]._super,  x12[1]._super,  x12[2]._super,
                 x12[3]._super,  x12[4]._super,  x12[5]._super,  x12[6]._super,  x12[7]._super,
                 x12[8]._super,  x12[9]._super},
      Val32Array{x13[0]._super,  x13[1]._super,  x13[2]._super,  x13[3]._super,  x13[4]._super,
                 x13[5]._super,  x13[6]._super,  x13[7]._super,  x13[8]._super,  x13[9]._super,
                 x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x14[0]._super,  x14[1]._super,  x14[2]._super,
                 x14[3]._super,  x14[4]._super,  x14[5]._super,  x14[6]._super,  x14[7]._super,
                 x14[8]._super,  x14[9]._super},
      Val32Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x16[0]._super,  x16[1]._super,  x16[2]._super,
                 x16[3]._super,  x16[4]._super,  x16[5]._super,  x16[6]._super,  x16[7]._super,
                 x16[8]._super,  x16[9]._super},
      Val32Array{x17[0]._super,  x17[1]._super,  x17[2]._super,  x17[3]._super,  x17[4]._super,
                 x17[5]._super,  x17[6]._super,  x17[7]._super,  x17[8]._super,  x17[9]._super,
                 x17[10]._super, x17[11]._super, x17[12]._super, x17[13]._super, x17[14]._super,
                 x17[15]._super, x17[16]._super, x17[17]._super, x17[18]._super, x17[19]._super,
                 x17[20]._super, x17[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super},
      LAYOUT_LOOKUP(layout2, packedW));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16_Struct x20 =
      execUnpackWithCarry(ctx, x19.low, x19.high, LAYOUT_LOOKUP(layout2, newW));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  NondetRegStruct22Array x21 = x4.arrA;
  NondetRegStruct22Array x22 = x4.arrB;
  NondetRegStruct22Array x23 = x5.arrA;
  NondetRegStruct22Array x24 = x5.arrB;
  NondetRegStruct22Array x25 = x6.arrA;
  NondetRegStruct22Array x26 = x6.arrB;
  NondetRegStruct22Array x27 = x7.arrA;
  NondetRegStruct22Array x28 = x7.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:369)
  NondetRegStruct22Array x29 = x4.arrC;
  NondetRegStruct22Array x30 = x5.arrC;
  NondetRegStruct22Array x31 = x6.arrC;
  NondetRegStruct22Array x32 = x7.arrC;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x33 = x20._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  Val x55 = x33[21]._super;
  Val x56 = x33[22]._super;
  Val x57 = x33[23]._super;
  Val x58 = x33[24]._super;
  Val x59 = x33[25]._super;
  Val x60 = x33[26]._super;
  Val x61 = x33[27]._super;
  Val x62 = x33[28]._super;
  Val x63 = x33[29]._super;
  Val x64 = x33[30]._super;
  Val x65 = x33[31]._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  ComputeAEStruct x66 = execComputeAE(
      ctx,
      Val32Array{x21[0]._super,  x21[1]._super,  x21[2]._super,  x21[3]._super,  x21[4]._super,
                 x21[5]._super,  x21[6]._super,  x21[7]._super,  x21[8]._super,  x21[9]._super,
                 x21[10]._super, x21[11]._super, x21[12]._super, x21[13]._super, x21[14]._super,
                 x21[15]._super, x21[16]._super, x21[17]._super, x21[18]._super, x21[19]._super,
                 x21[20]._super, x21[21]._super, x22[0]._super,  x22[1]._super,  x22[2]._super,
                 x22[3]._super,  x22[4]._super,  x22[5]._super,  x22[6]._super,  x22[7]._super,
                 x22[8]._super,  x22[9]._super},
      Val32Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super, x24[0]._super,  x24[1]._super,  x24[2]._super,
                 x24[3]._super,  x24[4]._super,  x24[5]._super,  x24[6]._super,  x24[7]._super,
                 x24[8]._super,  x24[9]._super},
      Val32Array{x25[0]._super,  x25[1]._super,  x25[2]._super,  x25[3]._super,  x25[4]._super,
                 x25[5]._super,  x25[6]._super,  x25[7]._super,  x25[8]._super,  x25[9]._super,
                 x25[10]._super, x25[11]._super, x25[12]._super, x25[13]._super, x25[14]._super,
                 x25[15]._super, x25[16]._super, x25[17]._super, x25[18]._super, x25[19]._super,
                 x25[20]._super, x25[21]._super, x26[0]._super,  x26[1]._super,  x26[2]._super,
                 x26[3]._super,  x26[4]._super,  x26[5]._super,  x26[6]._super,  x26[7]._super,
                 x26[8]._super,  x26[9]._super},
      Val32Array{x27[0]._super,  x27[1]._super,  x27[2]._super,  x27[3]._super,  x27[4]._super,
                 x27[5]._super,  x27[6]._super,  x27[7]._super,  x27[8]._super,  x27[9]._super,
                 x27[10]._super, x27[11]._super, x27[12]._super, x27[13]._super, x27[14]._super,
                 x27[15]._super, x27[16]._super, x27[17]._super, x27[18]._super, x27[19]._super,
                 x27[20]._super, x27[21]._super, x28[0]._super,  x28[1]._super,  x28[2]._super,
                 x28[3]._super,  x28[4]._super,  x28[5]._super,  x28[6]._super,  x28[7]._super,
                 x28[8]._super,  x28[9]._super},
      Val32Array{x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super, x29[0]._super,  x29[1]._super,  x29[2]._super,
                 x29[3]._super,  x29[4]._super,  x29[5]._super,  x29[6]._super,  x29[7]._super,
                 x29[8]._super,  x29[9]._super,  x29[10]._super, x29[11]._super, x29[12]._super,
                 x29[13]._super, x29[14]._super, x29[15]._super, x29[16]._super, x29[17]._super,
                 x29[18]._super, x29[19]._super},
      Val32Array{x24[10]._super, x24[11]._super, x24[12]._super, x24[13]._super, x24[14]._super,
                 x24[15]._super, x24[16]._super, x24[17]._super, x24[18]._super, x24[19]._super,
                 x24[20]._super, x24[21]._super, x30[0]._super,  x30[1]._super,  x30[2]._super,
                 x30[3]._super,  x30[4]._super,  x30[5]._super,  x30[6]._super,  x30[7]._super,
                 x30[8]._super,  x30[9]._super,  x30[10]._super, x30[11]._super, x30[12]._super,
                 x30[13]._super, x30[14]._super, x30[15]._super, x30[16]._super, x30[17]._super,
                 x30[18]._super, x30[19]._super},
      Val32Array{x26[10]._super, x26[11]._super, x26[12]._super, x26[13]._super, x26[14]._super,
                 x26[15]._super, x26[16]._super, x26[17]._super, x26[18]._super, x26[19]._super,
                 x26[20]._super, x26[21]._super, x31[0]._super,  x31[1]._super,  x31[2]._super,
                 x31[3]._super,  x31[4]._super,  x31[5]._super,  x31[6]._super,  x31[7]._super,
                 x31[8]._super,  x31[9]._super,  x31[10]._super, x31[11]._super, x31[12]._super,
                 x31[13]._super, x31[14]._super, x31[15]._super, x31[16]._super, x31[17]._super,
                 x31[18]._super, x31[19]._super},
      Val32Array{x28[10]._super, x28[11]._super, x28[12]._super, x28[13]._super, x28[14]._super,
                 x28[15]._super, x28[16]._super, x28[17]._super, x28[18]._super, x28[19]._super,
                 x28[20]._super, x28[21]._super, x32[0]._super,  x32[1]._super,  x32[2]._super,
                 x32[3]._super,  x32[4]._super,  x32[5]._super,  x32[6]._super,  x32[7]._super,
                 x32[8]._super,  x32[9]._super,  x32[10]._super, x32[11]._super, x32[12]._super,
                 x32[13]._super, x32[14]._super, x32[15]._super, x32[16]._super, x32[17]._super,
                 x32[18]._super, x32[19]._super},
      Val32Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49,
                 x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65},
      TwoShortsStruct{.low = Val(65530), .high = Val(37054)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x67 = x66.aOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16_Struct x68 =
      execUnpackWithCarry(ctx, x67.low, x67.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  TwoShortsStruct x69 = x66.eOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16_Struct x70 =
      execUnpackWithCarry(ctx, x69.low, x69.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x71 = x68._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x72 = x70._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_2__12_Arm1_Super_SuperLayout> x73 = LAYOUT_LOOKUP(x3, arm1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:373)
  Val22Array x74 =
      Val22Array{x71[0]._super,  x71[1]._super,  x71[2]._super,  x71[3]._super,  x71[4]._super,
                 x71[5]._super,  x71[6]._super,  x71[7]._super,  x71[8]._super,  x71[9]._super,
                 x71[10]._super, x71[11]._super, x71[12]._super, x71[13]._super, x71[14]._super,
                 x71[15]._super, x71[16]._super, x71[17]._super, x71[18]._super, x71[19]._super,
                 x71[20]._super, x71[21]._super};
  Val22Array x75 =
      Val22Array{x71[22]._super, x71[23]._super, x71[24]._super, x71[25]._super, x71[26]._super,
                 x71[27]._super, x71[28]._super, x71[29]._super, x71[30]._super, x71[31]._super,
                 x72[0]._super,  x72[1]._super,  x72[2]._super,  x72[3]._super,  x72[4]._super,
                 x72[5]._super,  x72[6]._super,  x72[7]._super,  x72[8]._super,  x72[9]._super,
                 x72[10]._super, x72[11]._super};
  Val22Array x76 =
      Val22Array{x72[12]._super, x72[13]._super, x72[14]._super, x72[15]._super, x72[16]._super,
                 x72[17]._super, x72[18]._super, x72[19]._super, x72[20]._super, x72[21]._super,
                 x72[22]._super, x72[23]._super, x72[24]._super, x72[25]._super, x72[26]._super,
                 x72[27]._super, x72[28]._super, x72[29]._super, x72[30]._super, x72[31]._super,
                 Val(0),         Val(0)};
  Val22Array x77 = Val22Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,
                              x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55};
  Val22Array x78 = Val22Array{x56,    x57,    x58,    x59,    x60,    x61,    x62,    x63,
                              x64,    x65,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  Val x79 = x4.blk._super;
  Val x80 = x4.midx._super;
  if (to_size_t(Val(1))) {
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:376)
    RetTupleStruct x81 =
        exec_RetTuple(ctx,
                      x74,
                      x75,
                      x76,
                      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                      x77,
                      x78,
                      Val(13),
                      Val(22),
                      Val(0),
                      x79,
                      x80,
                      LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  NondetRegStruct24Array x82 = x4.arrD;
  Val24Array x83 =
      Val24Array{x82[0]._super,  x82[1]._super,  x82[2]._super,  x82[3]._super,  x82[4]._super,
                 x82[5]._super,  x82[6]._super,  x82[7]._super,  x82[8]._super,  x82[9]._super,
                 x82[10]._super, x82[11]._super, x82[12]._super, x82[13]._super, x82[14]._super,
                 x82[15]._super, x82[16]._super, x82[17]._super, x82[18]._super, x82[19]._super,
                 x82[20]._super, x82[21]._super, x82[22]._super, x82[23]._super};
  Val x84 = x4.rnd._super;
  if (to_size_t(Val(0))) {
    if (to_size_t(Val(0))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:380)
      RetTupleStruct x85 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(0),
                                         Val(23),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm0));
    }
    if (to_size_t(Val(1))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:383)
      RetTupleStruct x86 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(9),
                                         Val(17),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm1));
    }
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:379)
    RetTupleStruct x87 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x73, _super));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  RetTupleStruct x88 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x88;
}
RetTupleStruct execSha256mix_2__13_(ExecContext& ctx,
                                    RetTupleStruct arg0,
                                    BoundLayout<RetTupleLayout> arg1,
                                    BoundLayout<Sha256mix_2__13_Layout> layout2) {
  BoundLayout<Sha256mix_2__13__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:359)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:360)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:361)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:362)
  RetTupleStruct x8 = back_RetTuple(ctx, 7, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:363)
  RetTupleStruct x9 = back_RetTuple(ctx, 15, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:364)
  RetTupleStruct x10 = back_RetTuple(ctx, 16, arg1);
  // s2w(zirgen/circuit/keccak/sha256_for_keccak.zir:155)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:366)
  NondetRegStruct22Array x11 = x5.arrE;
  NondetRegStruct22Array x12 = x5.arrF;
  NondetRegStruct22Array x13 = x8.arrE;
  NondetRegStruct22Array x14 = x8.arrF;
  NondetRegStruct22Array x15 = x9.arrE;
  NondetRegStruct22Array x16 = x9.arrF;
  NondetRegStruct22Array x17 = x10.arrE;
  NondetRegStruct22Array x18 = x10.arrF;
  TwoShortsStruct x19 = execComputeW(
      ctx,
      Val32Array{x11[0]._super,  x11[1]._super,  x11[2]._super,  x11[3]._super,  x11[4]._super,
                 x11[5]._super,  x11[6]._super,  x11[7]._super,  x11[8]._super,  x11[9]._super,
                 x11[10]._super, x11[11]._super, x11[12]._super, x11[13]._super, x11[14]._super,
                 x11[15]._super, x11[16]._super, x11[17]._super, x11[18]._super, x11[19]._super,
                 x11[20]._super, x11[21]._super, x12[0]._super,  x12[1]._super,  x12[2]._super,
                 x12[3]._super,  x12[4]._super,  x12[5]._super,  x12[6]._super,  x12[7]._super,
                 x12[8]._super,  x12[9]._super},
      Val32Array{x13[0]._super,  x13[1]._super,  x13[2]._super,  x13[3]._super,  x13[4]._super,
                 x13[5]._super,  x13[6]._super,  x13[7]._super,  x13[8]._super,  x13[9]._super,
                 x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x14[0]._super,  x14[1]._super,  x14[2]._super,
                 x14[3]._super,  x14[4]._super,  x14[5]._super,  x14[6]._super,  x14[7]._super,
                 x14[8]._super,  x14[9]._super},
      Val32Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x16[0]._super,  x16[1]._super,  x16[2]._super,
                 x16[3]._super,  x16[4]._super,  x16[5]._super,  x16[6]._super,  x16[7]._super,
                 x16[8]._super,  x16[9]._super},
      Val32Array{x17[0]._super,  x17[1]._super,  x17[2]._super,  x17[3]._super,  x17[4]._super,
                 x17[5]._super,  x17[6]._super,  x17[7]._super,  x17[8]._super,  x17[9]._super,
                 x17[10]._super, x17[11]._super, x17[12]._super, x17[13]._super, x17[14]._super,
                 x17[15]._super, x17[16]._super, x17[17]._super, x17[18]._super, x17[19]._super,
                 x17[20]._super, x17[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super},
      LAYOUT_LOOKUP(layout2, packedW));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16_Struct x20 =
      execUnpackWithCarry(ctx, x19.low, x19.high, LAYOUT_LOOKUP(layout2, newW));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  NondetRegStruct22Array x21 = x4.arrA;
  NondetRegStruct22Array x22 = x4.arrB;
  NondetRegStruct22Array x23 = x5.arrA;
  NondetRegStruct22Array x24 = x5.arrB;
  NondetRegStruct22Array x25 = x6.arrA;
  NondetRegStruct22Array x26 = x6.arrB;
  NondetRegStruct22Array x27 = x7.arrA;
  NondetRegStruct22Array x28 = x7.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:369)
  NondetRegStruct22Array x29 = x4.arrC;
  NondetRegStruct22Array x30 = x5.arrC;
  NondetRegStruct22Array x31 = x6.arrC;
  NondetRegStruct22Array x32 = x7.arrC;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x33 = x20._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  Val x55 = x33[21]._super;
  Val x56 = x33[22]._super;
  Val x57 = x33[23]._super;
  Val x58 = x33[24]._super;
  Val x59 = x33[25]._super;
  Val x60 = x33[26]._super;
  Val x61 = x33[27]._super;
  Val x62 = x33[28]._super;
  Val x63 = x33[29]._super;
  Val x64 = x33[30]._super;
  Val x65 = x33[31]._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  ComputeAEStruct x66 = execComputeAE(
      ctx,
      Val32Array{x21[0]._super,  x21[1]._super,  x21[2]._super,  x21[3]._super,  x21[4]._super,
                 x21[5]._super,  x21[6]._super,  x21[7]._super,  x21[8]._super,  x21[9]._super,
                 x21[10]._super, x21[11]._super, x21[12]._super, x21[13]._super, x21[14]._super,
                 x21[15]._super, x21[16]._super, x21[17]._super, x21[18]._super, x21[19]._super,
                 x21[20]._super, x21[21]._super, x22[0]._super,  x22[1]._super,  x22[2]._super,
                 x22[3]._super,  x22[4]._super,  x22[5]._super,  x22[6]._super,  x22[7]._super,
                 x22[8]._super,  x22[9]._super},
      Val32Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super, x24[0]._super,  x24[1]._super,  x24[2]._super,
                 x24[3]._super,  x24[4]._super,  x24[5]._super,  x24[6]._super,  x24[7]._super,
                 x24[8]._super,  x24[9]._super},
      Val32Array{x25[0]._super,  x25[1]._super,  x25[2]._super,  x25[3]._super,  x25[4]._super,
                 x25[5]._super,  x25[6]._super,  x25[7]._super,  x25[8]._super,  x25[9]._super,
                 x25[10]._super, x25[11]._super, x25[12]._super, x25[13]._super, x25[14]._super,
                 x25[15]._super, x25[16]._super, x25[17]._super, x25[18]._super, x25[19]._super,
                 x25[20]._super, x25[21]._super, x26[0]._super,  x26[1]._super,  x26[2]._super,
                 x26[3]._super,  x26[4]._super,  x26[5]._super,  x26[6]._super,  x26[7]._super,
                 x26[8]._super,  x26[9]._super},
      Val32Array{x27[0]._super,  x27[1]._super,  x27[2]._super,  x27[3]._super,  x27[4]._super,
                 x27[5]._super,  x27[6]._super,  x27[7]._super,  x27[8]._super,  x27[9]._super,
                 x27[10]._super, x27[11]._super, x27[12]._super, x27[13]._super, x27[14]._super,
                 x27[15]._super, x27[16]._super, x27[17]._super, x27[18]._super, x27[19]._super,
                 x27[20]._super, x27[21]._super, x28[0]._super,  x28[1]._super,  x28[2]._super,
                 x28[3]._super,  x28[4]._super,  x28[5]._super,  x28[6]._super,  x28[7]._super,
                 x28[8]._super,  x28[9]._super},
      Val32Array{x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super, x29[0]._super,  x29[1]._super,  x29[2]._super,
                 x29[3]._super,  x29[4]._super,  x29[5]._super,  x29[6]._super,  x29[7]._super,
                 x29[8]._super,  x29[9]._super,  x29[10]._super, x29[11]._super, x29[12]._super,
                 x29[13]._super, x29[14]._super, x29[15]._super, x29[16]._super, x29[17]._super,
                 x29[18]._super, x29[19]._super},
      Val32Array{x24[10]._super, x24[11]._super, x24[12]._super, x24[13]._super, x24[14]._super,
                 x24[15]._super, x24[16]._super, x24[17]._super, x24[18]._super, x24[19]._super,
                 x24[20]._super, x24[21]._super, x30[0]._super,  x30[1]._super,  x30[2]._super,
                 x30[3]._super,  x30[4]._super,  x30[5]._super,  x30[6]._super,  x30[7]._super,
                 x30[8]._super,  x30[9]._super,  x30[10]._super, x30[11]._super, x30[12]._super,
                 x30[13]._super, x30[14]._super, x30[15]._super, x30[16]._super, x30[17]._super,
                 x30[18]._super, x30[19]._super},
      Val32Array{x26[10]._super, x26[11]._super, x26[12]._super, x26[13]._super, x26[14]._super,
                 x26[15]._super, x26[16]._super, x26[17]._super, x26[18]._super, x26[19]._super,
                 x26[20]._super, x26[21]._super, x31[0]._super,  x31[1]._super,  x31[2]._super,
                 x31[3]._super,  x31[4]._super,  x31[5]._super,  x31[6]._super,  x31[7]._super,
                 x31[8]._super,  x31[9]._super,  x31[10]._super, x31[11]._super, x31[12]._super,
                 x31[13]._super, x31[14]._super, x31[15]._super, x31[16]._super, x31[17]._super,
                 x31[18]._super, x31[19]._super},
      Val32Array{x28[10]._super, x28[11]._super, x28[12]._super, x28[13]._super, x28[14]._super,
                 x28[15]._super, x28[16]._super, x28[17]._super, x28[18]._super, x28[19]._super,
                 x28[20]._super, x28[21]._super, x32[0]._super,  x32[1]._super,  x32[2]._super,
                 x32[3]._super,  x32[4]._super,  x32[5]._super,  x32[6]._super,  x32[7]._super,
                 x32[8]._super,  x32[9]._super,  x32[10]._super, x32[11]._super, x32[12]._super,
                 x32[13]._super, x32[14]._super, x32[15]._super, x32[16]._super, x32[17]._super,
                 x32[18]._super, x32[19]._super},
      Val32Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49,
                 x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65},
      TwoShortsStruct{.low = Val(27883), .high = Val(42064)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x67 = x66.aOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16_Struct x68 =
      execUnpackWithCarry(ctx, x67.low, x67.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  TwoShortsStruct x69 = x66.eOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16_Struct x70 =
      execUnpackWithCarry(ctx, x69.low, x69.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x71 = x68._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x72 = x70._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_2__13_Arm1_Super_SuperLayout> x73 = LAYOUT_LOOKUP(x3, arm1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:373)
  Val22Array x74 =
      Val22Array{x71[0]._super,  x71[1]._super,  x71[2]._super,  x71[3]._super,  x71[4]._super,
                 x71[5]._super,  x71[6]._super,  x71[7]._super,  x71[8]._super,  x71[9]._super,
                 x71[10]._super, x71[11]._super, x71[12]._super, x71[13]._super, x71[14]._super,
                 x71[15]._super, x71[16]._super, x71[17]._super, x71[18]._super, x71[19]._super,
                 x71[20]._super, x71[21]._super};
  Val22Array x75 =
      Val22Array{x71[22]._super, x71[23]._super, x71[24]._super, x71[25]._super, x71[26]._super,
                 x71[27]._super, x71[28]._super, x71[29]._super, x71[30]._super, x71[31]._super,
                 x72[0]._super,  x72[1]._super,  x72[2]._super,  x72[3]._super,  x72[4]._super,
                 x72[5]._super,  x72[6]._super,  x72[7]._super,  x72[8]._super,  x72[9]._super,
                 x72[10]._super, x72[11]._super};
  Val22Array x76 =
      Val22Array{x72[12]._super, x72[13]._super, x72[14]._super, x72[15]._super, x72[16]._super,
                 x72[17]._super, x72[18]._super, x72[19]._super, x72[20]._super, x72[21]._super,
                 x72[22]._super, x72[23]._super, x72[24]._super, x72[25]._super, x72[26]._super,
                 x72[27]._super, x72[28]._super, x72[29]._super, x72[30]._super, x72[31]._super,
                 Val(0),         Val(0)};
  Val22Array x77 = Val22Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,
                              x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55};
  Val22Array x78 = Val22Array{x56,    x57,    x58,    x59,    x60,    x61,    x62,    x63,
                              x64,    x65,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  Val x79 = x4.blk._super;
  Val x80 = x4.midx._super;
  if (to_size_t(Val(1))) {
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:376)
    RetTupleStruct x81 =
        exec_RetTuple(ctx,
                      x74,
                      x75,
                      x76,
                      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                      x77,
                      x78,
                      Val(14),
                      Val(22),
                      Val(0),
                      x79,
                      x80,
                      LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  NondetRegStruct24Array x82 = x4.arrD;
  Val24Array x83 =
      Val24Array{x82[0]._super,  x82[1]._super,  x82[2]._super,  x82[3]._super,  x82[4]._super,
                 x82[5]._super,  x82[6]._super,  x82[7]._super,  x82[8]._super,  x82[9]._super,
                 x82[10]._super, x82[11]._super, x82[12]._super, x82[13]._super, x82[14]._super,
                 x82[15]._super, x82[16]._super, x82[17]._super, x82[18]._super, x82[19]._super,
                 x82[20]._super, x82[21]._super, x82[22]._super, x82[23]._super};
  Val x84 = x4.rnd._super;
  if (to_size_t(Val(0))) {
    if (to_size_t(Val(0))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:380)
      RetTupleStruct x85 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(0),
                                         Val(23),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm0));
    }
    if (to_size_t(Val(1))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:383)
      RetTupleStruct x86 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(9),
                                         Val(17),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm1));
    }
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:379)
    RetTupleStruct x87 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x73, _super));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  RetTupleStruct x88 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x88;
}
RetTupleStruct execSha256mix_2__14_(ExecContext& ctx,
                                    RetTupleStruct arg0,
                                    BoundLayout<RetTupleLayout> arg1,
                                    BoundLayout<Sha256mix_2__14_Layout> layout2) {
  BoundLayout<Sha256mix_2__14__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:359)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:360)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:361)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:362)
  RetTupleStruct x8 = back_RetTuple(ctx, 7, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:363)
  RetTupleStruct x9 = back_RetTuple(ctx, 15, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:364)
  RetTupleStruct x10 = back_RetTuple(ctx, 16, arg1);
  // s2w(zirgen/circuit/keccak/sha256_for_keccak.zir:155)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:366)
  NondetRegStruct22Array x11 = x5.arrE;
  NondetRegStruct22Array x12 = x5.arrF;
  NondetRegStruct22Array x13 = x8.arrE;
  NondetRegStruct22Array x14 = x8.arrF;
  NondetRegStruct22Array x15 = x9.arrE;
  NondetRegStruct22Array x16 = x9.arrF;
  NondetRegStruct22Array x17 = x10.arrE;
  NondetRegStruct22Array x18 = x10.arrF;
  TwoShortsStruct x19 = execComputeW(
      ctx,
      Val32Array{x11[0]._super,  x11[1]._super,  x11[2]._super,  x11[3]._super,  x11[4]._super,
                 x11[5]._super,  x11[6]._super,  x11[7]._super,  x11[8]._super,  x11[9]._super,
                 x11[10]._super, x11[11]._super, x11[12]._super, x11[13]._super, x11[14]._super,
                 x11[15]._super, x11[16]._super, x11[17]._super, x11[18]._super, x11[19]._super,
                 x11[20]._super, x11[21]._super, x12[0]._super,  x12[1]._super,  x12[2]._super,
                 x12[3]._super,  x12[4]._super,  x12[5]._super,  x12[6]._super,  x12[7]._super,
                 x12[8]._super,  x12[9]._super},
      Val32Array{x13[0]._super,  x13[1]._super,  x13[2]._super,  x13[3]._super,  x13[4]._super,
                 x13[5]._super,  x13[6]._super,  x13[7]._super,  x13[8]._super,  x13[9]._super,
                 x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x14[0]._super,  x14[1]._super,  x14[2]._super,
                 x14[3]._super,  x14[4]._super,  x14[5]._super,  x14[6]._super,  x14[7]._super,
                 x14[8]._super,  x14[9]._super},
      Val32Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x16[0]._super,  x16[1]._super,  x16[2]._super,
                 x16[3]._super,  x16[4]._super,  x16[5]._super,  x16[6]._super,  x16[7]._super,
                 x16[8]._super,  x16[9]._super},
      Val32Array{x17[0]._super,  x17[1]._super,  x17[2]._super,  x17[3]._super,  x17[4]._super,
                 x17[5]._super,  x17[6]._super,  x17[7]._super,  x17[8]._super,  x17[9]._super,
                 x17[10]._super, x17[11]._super, x17[12]._super, x17[13]._super, x17[14]._super,
                 x17[15]._super, x17[16]._super, x17[17]._super, x17[18]._super, x17[19]._super,
                 x17[20]._super, x17[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super},
      LAYOUT_LOOKUP(layout2, packedW));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16_Struct x20 =
      execUnpackWithCarry(ctx, x19.low, x19.high, LAYOUT_LOOKUP(layout2, newW));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  NondetRegStruct22Array x21 = x4.arrA;
  NondetRegStruct22Array x22 = x4.arrB;
  NondetRegStruct22Array x23 = x5.arrA;
  NondetRegStruct22Array x24 = x5.arrB;
  NondetRegStruct22Array x25 = x6.arrA;
  NondetRegStruct22Array x26 = x6.arrB;
  NondetRegStruct22Array x27 = x7.arrA;
  NondetRegStruct22Array x28 = x7.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:369)
  NondetRegStruct22Array x29 = x4.arrC;
  NondetRegStruct22Array x30 = x5.arrC;
  NondetRegStruct22Array x31 = x6.arrC;
  NondetRegStruct22Array x32 = x7.arrC;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x33 = x20._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  Val x55 = x33[21]._super;
  Val x56 = x33[22]._super;
  Val x57 = x33[23]._super;
  Val x58 = x33[24]._super;
  Val x59 = x33[25]._super;
  Val x60 = x33[26]._super;
  Val x61 = x33[27]._super;
  Val x62 = x33[28]._super;
  Val x63 = x33[29]._super;
  Val x64 = x33[30]._super;
  Val x65 = x33[31]._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  ComputeAEStruct x66 = execComputeAE(
      ctx,
      Val32Array{x21[0]._super,  x21[1]._super,  x21[2]._super,  x21[3]._super,  x21[4]._super,
                 x21[5]._super,  x21[6]._super,  x21[7]._super,  x21[8]._super,  x21[9]._super,
                 x21[10]._super, x21[11]._super, x21[12]._super, x21[13]._super, x21[14]._super,
                 x21[15]._super, x21[16]._super, x21[17]._super, x21[18]._super, x21[19]._super,
                 x21[20]._super, x21[21]._super, x22[0]._super,  x22[1]._super,  x22[2]._super,
                 x22[3]._super,  x22[4]._super,  x22[5]._super,  x22[6]._super,  x22[7]._super,
                 x22[8]._super,  x22[9]._super},
      Val32Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super, x24[0]._super,  x24[1]._super,  x24[2]._super,
                 x24[3]._super,  x24[4]._super,  x24[5]._super,  x24[6]._super,  x24[7]._super,
                 x24[8]._super,  x24[9]._super},
      Val32Array{x25[0]._super,  x25[1]._super,  x25[2]._super,  x25[3]._super,  x25[4]._super,
                 x25[5]._super,  x25[6]._super,  x25[7]._super,  x25[8]._super,  x25[9]._super,
                 x25[10]._super, x25[11]._super, x25[12]._super, x25[13]._super, x25[14]._super,
                 x25[15]._super, x25[16]._super, x25[17]._super, x25[18]._super, x25[19]._super,
                 x25[20]._super, x25[21]._super, x26[0]._super,  x26[1]._super,  x26[2]._super,
                 x26[3]._super,  x26[4]._super,  x26[5]._super,  x26[6]._super,  x26[7]._super,
                 x26[8]._super,  x26[9]._super},
      Val32Array{x27[0]._super,  x27[1]._super,  x27[2]._super,  x27[3]._super,  x27[4]._super,
                 x27[5]._super,  x27[6]._super,  x27[7]._super,  x27[8]._super,  x27[9]._super,
                 x27[10]._super, x27[11]._super, x27[12]._super, x27[13]._super, x27[14]._super,
                 x27[15]._super, x27[16]._super, x27[17]._super, x27[18]._super, x27[19]._super,
                 x27[20]._super, x27[21]._super, x28[0]._super,  x28[1]._super,  x28[2]._super,
                 x28[3]._super,  x28[4]._super,  x28[5]._super,  x28[6]._super,  x28[7]._super,
                 x28[8]._super,  x28[9]._super},
      Val32Array{x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super, x29[0]._super,  x29[1]._super,  x29[2]._super,
                 x29[3]._super,  x29[4]._super,  x29[5]._super,  x29[6]._super,  x29[7]._super,
                 x29[8]._super,  x29[9]._super,  x29[10]._super, x29[11]._super, x29[12]._super,
                 x29[13]._super, x29[14]._super, x29[15]._super, x29[16]._super, x29[17]._super,
                 x29[18]._super, x29[19]._super},
      Val32Array{x24[10]._super, x24[11]._super, x24[12]._super, x24[13]._super, x24[14]._super,
                 x24[15]._super, x24[16]._super, x24[17]._super, x24[18]._super, x24[19]._super,
                 x24[20]._super, x24[21]._super, x30[0]._super,  x30[1]._super,  x30[2]._super,
                 x30[3]._super,  x30[4]._super,  x30[5]._super,  x30[6]._super,  x30[7]._super,
                 x30[8]._super,  x30[9]._super,  x30[10]._super, x30[11]._super, x30[12]._super,
                 x30[13]._super, x30[14]._super, x30[15]._super, x30[16]._super, x30[17]._super,
                 x30[18]._super, x30[19]._super},
      Val32Array{x26[10]._super, x26[11]._super, x26[12]._super, x26[13]._super, x26[14]._super,
                 x26[15]._super, x26[16]._super, x26[17]._super, x26[18]._super, x26[19]._super,
                 x26[20]._super, x26[21]._super, x31[0]._super,  x31[1]._super,  x31[2]._super,
                 x31[3]._super,  x31[4]._super,  x31[5]._super,  x31[6]._super,  x31[7]._super,
                 x31[8]._super,  x31[9]._super,  x31[10]._super, x31[11]._super, x31[12]._super,
                 x31[13]._super, x31[14]._super, x31[15]._super, x31[16]._super, x31[17]._super,
                 x31[18]._super, x31[19]._super},
      Val32Array{x28[10]._super, x28[11]._super, x28[12]._super, x28[13]._super, x28[14]._super,
                 x28[15]._super, x28[16]._super, x28[17]._super, x28[18]._super, x28[19]._super,
                 x28[20]._super, x28[21]._super, x32[0]._super,  x32[1]._super,  x32[2]._super,
                 x32[3]._super,  x32[4]._super,  x32[5]._super,  x32[6]._super,  x32[7]._super,
                 x32[8]._super,  x32[9]._super,  x32[10]._super, x32[11]._super, x32[12]._super,
                 x32[13]._super, x32[14]._super, x32[15]._super, x32[16]._super, x32[17]._super,
                 x32[18]._super, x32[19]._super},
      Val32Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49,
                 x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65},
      TwoShortsStruct{.low = Val(41975), .high = Val(48889)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x67 = x66.aOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16_Struct x68 =
      execUnpackWithCarry(ctx, x67.low, x67.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  TwoShortsStruct x69 = x66.eOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16_Struct x70 =
      execUnpackWithCarry(ctx, x69.low, x69.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x71 = x68._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x72 = x70._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_2__14_Arm1_Super_SuperLayout> x73 = LAYOUT_LOOKUP(x3, arm1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:373)
  Val22Array x74 =
      Val22Array{x71[0]._super,  x71[1]._super,  x71[2]._super,  x71[3]._super,  x71[4]._super,
                 x71[5]._super,  x71[6]._super,  x71[7]._super,  x71[8]._super,  x71[9]._super,
                 x71[10]._super, x71[11]._super, x71[12]._super, x71[13]._super, x71[14]._super,
                 x71[15]._super, x71[16]._super, x71[17]._super, x71[18]._super, x71[19]._super,
                 x71[20]._super, x71[21]._super};
  Val22Array x75 =
      Val22Array{x71[22]._super, x71[23]._super, x71[24]._super, x71[25]._super, x71[26]._super,
                 x71[27]._super, x71[28]._super, x71[29]._super, x71[30]._super, x71[31]._super,
                 x72[0]._super,  x72[1]._super,  x72[2]._super,  x72[3]._super,  x72[4]._super,
                 x72[5]._super,  x72[6]._super,  x72[7]._super,  x72[8]._super,  x72[9]._super,
                 x72[10]._super, x72[11]._super};
  Val22Array x76 =
      Val22Array{x72[12]._super, x72[13]._super, x72[14]._super, x72[15]._super, x72[16]._super,
                 x72[17]._super, x72[18]._super, x72[19]._super, x72[20]._super, x72[21]._super,
                 x72[22]._super, x72[23]._super, x72[24]._super, x72[25]._super, x72[26]._super,
                 x72[27]._super, x72[28]._super, x72[29]._super, x72[30]._super, x72[31]._super,
                 Val(0),         Val(0)};
  Val22Array x77 = Val22Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,
                              x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55};
  Val22Array x78 = Val22Array{x56,    x57,    x58,    x59,    x60,    x61,    x62,    x63,
                              x64,    x65,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  Val x79 = x4.blk._super;
  Val x80 = x4.midx._super;
  if (to_size_t(Val(1))) {
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:376)
    RetTupleStruct x81 =
        exec_RetTuple(ctx,
                      x74,
                      x75,
                      x76,
                      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                      x77,
                      x78,
                      Val(15),
                      Val(22),
                      Val(0),
                      x79,
                      x80,
                      LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  NondetRegStruct24Array x82 = x4.arrD;
  Val24Array x83 =
      Val24Array{x82[0]._super,  x82[1]._super,  x82[2]._super,  x82[3]._super,  x82[4]._super,
                 x82[5]._super,  x82[6]._super,  x82[7]._super,  x82[8]._super,  x82[9]._super,
                 x82[10]._super, x82[11]._super, x82[12]._super, x82[13]._super, x82[14]._super,
                 x82[15]._super, x82[16]._super, x82[17]._super, x82[18]._super, x82[19]._super,
                 x82[20]._super, x82[21]._super, x82[22]._super, x82[23]._super};
  Val x84 = x4.rnd._super;
  if (to_size_t(Val(0))) {
    if (to_size_t(Val(0))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:380)
      RetTupleStruct x85 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(0),
                                         Val(23),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm0));
    }
    if (to_size_t(Val(1))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:383)
      RetTupleStruct x86 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(9),
                                         Val(17),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm1));
    }
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:379)
    RetTupleStruct x87 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x73, _super));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  RetTupleStruct x88 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x88;
}
RetTupleStruct execSha256mix_2__15_(ExecContext& ctx,
                                    RetTupleStruct arg0,
                                    BoundLayout<RetTupleLayout> arg1,
                                    BoundLayout<Sha256mix_2__15_Layout> layout2) {
  BoundLayout<Sha256mix_2__15__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:359)
  RetTupleStruct x5 = back_RetTuple(ctx, 2, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:360)
  RetTupleStruct x6 = back_RetTuple(ctx, 3, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:361)
  RetTupleStruct x7 = back_RetTuple(ctx, 4, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:362)
  RetTupleStruct x8 = back_RetTuple(ctx, 7, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:363)
  RetTupleStruct x9 = back_RetTuple(ctx, 15, arg1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:364)
  RetTupleStruct x10 = back_RetTuple(ctx, 16, arg1);
  // s2w(zirgen/circuit/keccak/sha256_for_keccak.zir:155)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:366)
  NondetRegStruct22Array x11 = x5.arrE;
  NondetRegStruct22Array x12 = x5.arrF;
  NondetRegStruct22Array x13 = x8.arrE;
  NondetRegStruct22Array x14 = x8.arrF;
  NondetRegStruct22Array x15 = x9.arrE;
  NondetRegStruct22Array x16 = x9.arrF;
  NondetRegStruct22Array x17 = x10.arrE;
  NondetRegStruct22Array x18 = x10.arrF;
  TwoShortsStruct x19 = execComputeW(
      ctx,
      Val32Array{x11[0]._super,  x11[1]._super,  x11[2]._super,  x11[3]._super,  x11[4]._super,
                 x11[5]._super,  x11[6]._super,  x11[7]._super,  x11[8]._super,  x11[9]._super,
                 x11[10]._super, x11[11]._super, x11[12]._super, x11[13]._super, x11[14]._super,
                 x11[15]._super, x11[16]._super, x11[17]._super, x11[18]._super, x11[19]._super,
                 x11[20]._super, x11[21]._super, x12[0]._super,  x12[1]._super,  x12[2]._super,
                 x12[3]._super,  x12[4]._super,  x12[5]._super,  x12[6]._super,  x12[7]._super,
                 x12[8]._super,  x12[9]._super},
      Val32Array{x13[0]._super,  x13[1]._super,  x13[2]._super,  x13[3]._super,  x13[4]._super,
                 x13[5]._super,  x13[6]._super,  x13[7]._super,  x13[8]._super,  x13[9]._super,
                 x13[10]._super, x13[11]._super, x13[12]._super, x13[13]._super, x13[14]._super,
                 x13[15]._super, x13[16]._super, x13[17]._super, x13[18]._super, x13[19]._super,
                 x13[20]._super, x13[21]._super, x14[0]._super,  x14[1]._super,  x14[2]._super,
                 x14[3]._super,  x14[4]._super,  x14[5]._super,  x14[6]._super,  x14[7]._super,
                 x14[8]._super,  x14[9]._super},
      Val32Array{x15[0]._super,  x15[1]._super,  x15[2]._super,  x15[3]._super,  x15[4]._super,
                 x15[5]._super,  x15[6]._super,  x15[7]._super,  x15[8]._super,  x15[9]._super,
                 x15[10]._super, x15[11]._super, x15[12]._super, x15[13]._super, x15[14]._super,
                 x15[15]._super, x15[16]._super, x15[17]._super, x15[18]._super, x15[19]._super,
                 x15[20]._super, x15[21]._super, x16[0]._super,  x16[1]._super,  x16[2]._super,
                 x16[3]._super,  x16[4]._super,  x16[5]._super,  x16[6]._super,  x16[7]._super,
                 x16[8]._super,  x16[9]._super},
      Val32Array{x17[0]._super,  x17[1]._super,  x17[2]._super,  x17[3]._super,  x17[4]._super,
                 x17[5]._super,  x17[6]._super,  x17[7]._super,  x17[8]._super,  x17[9]._super,
                 x17[10]._super, x17[11]._super, x17[12]._super, x17[13]._super, x17[14]._super,
                 x17[15]._super, x17[16]._super, x17[17]._super, x17[18]._super, x17[19]._super,
                 x17[20]._super, x17[21]._super, x18[0]._super,  x18[1]._super,  x18[2]._super,
                 x18[3]._super,  x18[4]._super,  x18[5]._super,  x18[6]._super,  x18[7]._super,
                 x18[8]._super,  x18[9]._super},
      LAYOUT_LOOKUP(layout2, packedW));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16_Struct x20 =
      execUnpackWithCarry(ctx, x19.low, x19.high, LAYOUT_LOOKUP(layout2, newW));
  // s2a(zirgen/circuit/keccak/sha256_for_keccak.zir:145)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  NondetRegStruct22Array x21 = x4.arrA;
  NondetRegStruct22Array x22 = x4.arrB;
  NondetRegStruct22Array x23 = x5.arrA;
  NondetRegStruct22Array x24 = x5.arrB;
  NondetRegStruct22Array x25 = x6.arrA;
  NondetRegStruct22Array x26 = x6.arrB;
  NondetRegStruct22Array x27 = x7.arrA;
  NondetRegStruct22Array x28 = x7.arrB;
  // s2e(zirgen/circuit/keccak/sha256_for_keccak.zir:150)
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:369)
  NondetRegStruct22Array x29 = x4.arrC;
  NondetRegStruct22Array x30 = x5.arrC;
  NondetRegStruct22Array x31 = x6.arrC;
  NondetRegStruct22Array x32 = x7.arrC;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:367)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x33 = x20._super;
  Val x34 = x33[0]._super;
  Val x35 = x33[1]._super;
  Val x36 = x33[2]._super;
  Val x37 = x33[3]._super;
  Val x38 = x33[4]._super;
  Val x39 = x33[5]._super;
  Val x40 = x33[6]._super;
  Val x41 = x33[7]._super;
  Val x42 = x33[8]._super;
  Val x43 = x33[9]._super;
  Val x44 = x33[10]._super;
  Val x45 = x33[11]._super;
  Val x46 = x33[12]._super;
  Val x47 = x33[13]._super;
  Val x48 = x33[14]._super;
  Val x49 = x33[15]._super;
  Val x50 = x33[16]._super;
  Val x51 = x33[17]._super;
  Val x52 = x33[18]._super;
  Val x53 = x33[19]._super;
  Val x54 = x33[20]._super;
  Val x55 = x33[21]._super;
  Val x56 = x33[22]._super;
  Val x57 = x33[23]._super;
  Val x58 = x33[24]._super;
  Val x59 = x33[25]._super;
  Val x60 = x33[26]._super;
  Val x61 = x33[27]._super;
  Val x62 = x33[28]._super;
  Val x63 = x33[29]._super;
  Val x64 = x33[30]._super;
  Val x65 = x33[31]._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  ComputeAEStruct x66 = execComputeAE(
      ctx,
      Val32Array{x21[0]._super,  x21[1]._super,  x21[2]._super,  x21[3]._super,  x21[4]._super,
                 x21[5]._super,  x21[6]._super,  x21[7]._super,  x21[8]._super,  x21[9]._super,
                 x21[10]._super, x21[11]._super, x21[12]._super, x21[13]._super, x21[14]._super,
                 x21[15]._super, x21[16]._super, x21[17]._super, x21[18]._super, x21[19]._super,
                 x21[20]._super, x21[21]._super, x22[0]._super,  x22[1]._super,  x22[2]._super,
                 x22[3]._super,  x22[4]._super,  x22[5]._super,  x22[6]._super,  x22[7]._super,
                 x22[8]._super,  x22[9]._super},
      Val32Array{x23[0]._super,  x23[1]._super,  x23[2]._super,  x23[3]._super,  x23[4]._super,
                 x23[5]._super,  x23[6]._super,  x23[7]._super,  x23[8]._super,  x23[9]._super,
                 x23[10]._super, x23[11]._super, x23[12]._super, x23[13]._super, x23[14]._super,
                 x23[15]._super, x23[16]._super, x23[17]._super, x23[18]._super, x23[19]._super,
                 x23[20]._super, x23[21]._super, x24[0]._super,  x24[1]._super,  x24[2]._super,
                 x24[3]._super,  x24[4]._super,  x24[5]._super,  x24[6]._super,  x24[7]._super,
                 x24[8]._super,  x24[9]._super},
      Val32Array{x25[0]._super,  x25[1]._super,  x25[2]._super,  x25[3]._super,  x25[4]._super,
                 x25[5]._super,  x25[6]._super,  x25[7]._super,  x25[8]._super,  x25[9]._super,
                 x25[10]._super, x25[11]._super, x25[12]._super, x25[13]._super, x25[14]._super,
                 x25[15]._super, x25[16]._super, x25[17]._super, x25[18]._super, x25[19]._super,
                 x25[20]._super, x25[21]._super, x26[0]._super,  x26[1]._super,  x26[2]._super,
                 x26[3]._super,  x26[4]._super,  x26[5]._super,  x26[6]._super,  x26[7]._super,
                 x26[8]._super,  x26[9]._super},
      Val32Array{x27[0]._super,  x27[1]._super,  x27[2]._super,  x27[3]._super,  x27[4]._super,
                 x27[5]._super,  x27[6]._super,  x27[7]._super,  x27[8]._super,  x27[9]._super,
                 x27[10]._super, x27[11]._super, x27[12]._super, x27[13]._super, x27[14]._super,
                 x27[15]._super, x27[16]._super, x27[17]._super, x27[18]._super, x27[19]._super,
                 x27[20]._super, x27[21]._super, x28[0]._super,  x28[1]._super,  x28[2]._super,
                 x28[3]._super,  x28[4]._super,  x28[5]._super,  x28[6]._super,  x28[7]._super,
                 x28[8]._super,  x28[9]._super},
      Val32Array{x22[10]._super, x22[11]._super, x22[12]._super, x22[13]._super, x22[14]._super,
                 x22[15]._super, x22[16]._super, x22[17]._super, x22[18]._super, x22[19]._super,
                 x22[20]._super, x22[21]._super, x29[0]._super,  x29[1]._super,  x29[2]._super,
                 x29[3]._super,  x29[4]._super,  x29[5]._super,  x29[6]._super,  x29[7]._super,
                 x29[8]._super,  x29[9]._super,  x29[10]._super, x29[11]._super, x29[12]._super,
                 x29[13]._super, x29[14]._super, x29[15]._super, x29[16]._super, x29[17]._super,
                 x29[18]._super, x29[19]._super},
      Val32Array{x24[10]._super, x24[11]._super, x24[12]._super, x24[13]._super, x24[14]._super,
                 x24[15]._super, x24[16]._super, x24[17]._super, x24[18]._super, x24[19]._super,
                 x24[20]._super, x24[21]._super, x30[0]._super,  x30[1]._super,  x30[2]._super,
                 x30[3]._super,  x30[4]._super,  x30[5]._super,  x30[6]._super,  x30[7]._super,
                 x30[8]._super,  x30[9]._super,  x30[10]._super, x30[11]._super, x30[12]._super,
                 x30[13]._super, x30[14]._super, x30[15]._super, x30[16]._super, x30[17]._super,
                 x30[18]._super, x30[19]._super},
      Val32Array{x26[10]._super, x26[11]._super, x26[12]._super, x26[13]._super, x26[14]._super,
                 x26[15]._super, x26[16]._super, x26[17]._super, x26[18]._super, x26[19]._super,
                 x26[20]._super, x26[21]._super, x31[0]._super,  x31[1]._super,  x31[2]._super,
                 x31[3]._super,  x31[4]._super,  x31[5]._super,  x31[6]._super,  x31[7]._super,
                 x31[8]._super,  x31[9]._super,  x31[10]._super, x31[11]._super, x31[12]._super,
                 x31[13]._super, x31[14]._super, x31[15]._super, x31[16]._super, x31[17]._super,
                 x31[18]._super, x31[19]._super},
      Val32Array{x28[10]._super, x28[11]._super, x28[12]._super, x28[13]._super, x28[14]._super,
                 x28[15]._super, x28[16]._super, x28[17]._super, x28[18]._super, x28[19]._super,
                 x28[20]._super, x28[21]._super, x32[0]._super,  x32[1]._super,  x32[2]._super,
                 x32[3]._super,  x32[4]._super,  x32[5]._super,  x32[6]._super,  x32[7]._super,
                 x32[8]._super,  x32[9]._super,  x32[10]._super, x32[11]._super, x32[12]._super,
                 x32[13]._super, x32[14]._super, x32[15]._super, x32[16]._super, x32[17]._super,
                 x32[18]._super, x32[19]._super},
      Val32Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49,
                 x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65},
      TwoShortsStruct{.low = Val(30962), .high = Val(50801)},
      LAYOUT_LOOKUP(layout2, ae));
  TwoShortsStruct x67 = x66.aOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16_Struct x68 =
      execUnpackWithCarry(ctx, x67.low, x67.high, LAYOUT_LOOKUP(layout2, newA));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:368)
  TwoShortsStruct x69 = x66.eOut;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16_Struct x70 =
      execUnpackWithCarry(ctx, x69.low, x69.high, LAYOUT_LOOKUP(layout2, newE));
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:371)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x71 = x68._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:372)
  Concatenate_NondetReg__16__16__Super_SuperStruct32Array x72 = x70._super;
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  BoundLayout<Sha256mix_2__15_Arm1_Super_SuperLayout> x73 = LAYOUT_LOOKUP(x3, arm1);
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:373)
  Val22Array x74 =
      Val22Array{x71[0]._super,  x71[1]._super,  x71[2]._super,  x71[3]._super,  x71[4]._super,
                 x71[5]._super,  x71[6]._super,  x71[7]._super,  x71[8]._super,  x71[9]._super,
                 x71[10]._super, x71[11]._super, x71[12]._super, x71[13]._super, x71[14]._super,
                 x71[15]._super, x71[16]._super, x71[17]._super, x71[18]._super, x71[19]._super,
                 x71[20]._super, x71[21]._super};
  Val22Array x75 =
      Val22Array{x71[22]._super, x71[23]._super, x71[24]._super, x71[25]._super, x71[26]._super,
                 x71[27]._super, x71[28]._super, x71[29]._super, x71[30]._super, x71[31]._super,
                 x72[0]._super,  x72[1]._super,  x72[2]._super,  x72[3]._super,  x72[4]._super,
                 x72[5]._super,  x72[6]._super,  x72[7]._super,  x72[8]._super,  x72[9]._super,
                 x72[10]._super, x72[11]._super};
  Val22Array x76 =
      Val22Array{x72[12]._super, x72[13]._super, x72[14]._super, x72[15]._super, x72[16]._super,
                 x72[17]._super, x72[18]._super, x72[19]._super, x72[20]._super, x72[21]._super,
                 x72[22]._super, x72[23]._super, x72[24]._super, x72[25]._super, x72[26]._super,
                 x72[27]._super, x72[28]._super, x72[29]._super, x72[30]._super, x72[31]._super,
                 Val(0),         Val(0)};
  Val22Array x77 = Val22Array{x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44,
                              x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55};
  Val22Array x78 = Val22Array{x56,    x57,    x58,    x59,    x60,    x61,    x62,    x63,
                              x64,    x65,    Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  Val x79 = x4.blk._super;
  Val x80 = x4.midx._super;
  if (to_size_t(Val(0))) {
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:376)
    RetTupleStruct x81 =
        exec_RetTuple(ctx,
                      x74,
                      x75,
                      x76,
                      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                      x77,
                      x78,
                      Val(16),
                      Val(22),
                      Val(0),
                      x79,
                      x80,
                      LAYOUT_LOOKUP(x3, arm0));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:358)
  NondetRegStruct24Array x82 = x4.arrD;
  Val24Array x83 =
      Val24Array{x82[0]._super,  x82[1]._super,  x82[2]._super,  x82[3]._super,  x82[4]._super,
                 x82[5]._super,  x82[6]._super,  x82[7]._super,  x82[8]._super,  x82[9]._super,
                 x82[10]._super, x82[11]._super, x82[12]._super, x82[13]._super, x82[14]._super,
                 x82[15]._super, x82[16]._super, x82[17]._super, x82[18]._super, x82[19]._super,
                 x82[20]._super, x82[21]._super, x82[22]._super, x82[23]._super};
  Val x84 = x4.rnd._super;
  if (to_size_t(Val(1))) {
    if (to_size_t(Val(0))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:380)
      RetTupleStruct x85 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(0),
                                         Val(23),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm0));
    }
    if (to_size_t(Val(1))) {
      // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:383)
      RetTupleStruct x86 = exec_RetTuple(ctx,
                                         x74,
                                         x75,
                                         x76,
                                         x83,
                                         x77,
                                         x78,
                                         Val(9),
                                         Val(17),
                                         x84,
                                         x79,
                                         x80,
                                         LAYOUT_LOOKUP(x73, arm1));
    }
    // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:379)
    RetTupleStruct x87 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x73, _super));
  }
  // sha256mix(zirgen/circuit/keccak/sha256_for_keccak.zir:375)
  RetTupleStruct x88 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x88;
}
RetTupleStruct execSha256mixAll_2_(ExecContext& ctx,
                                   RetTupleStruct arg0,
                                   BoundLayout<RetTupleLayout> arg1,
                                   BoundLayout<Sha256mixAll_2_Layout> layout2) {
  // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:391)
  BoundLayout<Sha256mixAll_2__SuperLayout> x3 = LAYOUT_LOOKUP(layout2, _super);
  // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:390)
  RetTupleStruct x4 = back_RetTuple(ctx, 1, arg1);
  OneHot_16_Struct x5 = exec_OneHot_16_(ctx, x4.minor._super, LAYOUT_LOOKUP(layout2, minorOnehot));
  NondetRegStruct16Array x6 = x5._super;
  if (to_size_t(x6[0]._super)) {
    // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:392)
    RetTupleStruct x7 = execSha256mix_2__0_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm0));
  }
  if (to_size_t(x6[1]._super)) {
    // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:393)
    RetTupleStruct x8 = execSha256mix_2__1_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm1));
  }
  if (to_size_t(x6[2]._super)) {
    // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:394)
    RetTupleStruct x9 = execSha256mix_2__2_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm2));
  }
  if (to_size_t(x6[3]._super)) {
    // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:395)
    RetTupleStruct x10 = execSha256mix_2__3_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm3));
  }
  if (to_size_t(x6[4]._super)) {
    // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:396)
    RetTupleStruct x11 = execSha256mix_2__4_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm4));
  }
  if (to_size_t(x6[5]._super)) {
    // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:397)
    RetTupleStruct x12 = execSha256mix_2__5_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm5));
  }
  if (to_size_t(x6[6]._super)) {
    // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:398)
    RetTupleStruct x13 = execSha256mix_2__6_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm6));
  }
  if (to_size_t(x6[7]._super)) {
    // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:399)
    RetTupleStruct x14 = execSha256mix_2__7_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm7));
  }
  if (to_size_t(x6[8]._super)) {
    // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:400)
    RetTupleStruct x15 = execSha256mix_2__8_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm8));
  }
  if (to_size_t(x6[9]._super)) {
    // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:401)
    RetTupleStruct x16 = execSha256mix_2__9_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm9));
  }
  if (to_size_t(x6[10]._super)) {
    // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:402)
    RetTupleStruct x17 = execSha256mix_2__10_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm10));
  }
  if (to_size_t(x6[11]._super)) {
    // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:403)
    RetTupleStruct x18 = execSha256mix_2__11_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm11));
  }
  if (to_size_t(x6[12]._super)) {
    // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:404)
    RetTupleStruct x19 = execSha256mix_2__12_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm12));
  }
  if (to_size_t(x6[13]._super)) {
    // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:405)
    RetTupleStruct x20 = execSha256mix_2__13_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm13));
  }
  if (to_size_t(x6[14]._super)) {
    // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:406)
    RetTupleStruct x21 = execSha256mix_2__14_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm14));
  }
  if (to_size_t(x6[15]._super)) {
    // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:407)
    RetTupleStruct x22 = execSha256mix_2__15_(ctx, arg0, arg1, LAYOUT_LOOKUP(x3, arm15));
  }
  // sha256mix_all(zirgen/circuit/keccak/sha256_for_keccak.zir:391)
  RetTupleStruct x23 = back_RetTuple(ctx, 0, LAYOUT_LOOKUP(x3, _super));
  return x23;
}
TopStruct exec_Top(ExecContext& ctx, BoundLayout<TopLayout> layout0, GlobalBuf global1) {
  // Top(zirgen/circuit/keccak/keccak.zir:1165)
  BoundLayout<NondetRegLayout> x2 = LAYOUT_LOOKUP(layout0, pC);
  // Top(zirgen/circuit/keccak/keccak.zir:1179)
  BoundLayout<TopRetvalsLayout> x3 = LAYOUT_LOOKUP(layout0, retvals);
  BoundLayout<RetTupleLayout> x4 = LAYOUT_LOOKUP(x3, _super);
  // configureInput(zirgen/circuit/keccak/keccak.zir:6)
  // Top(zirgen/circuit/keccak/keccak.zir:1162)
  INVOKE_EXTERN(ctx, configureInput, Val(2));
  // GetCycle(zirgen/circuit/keccak/keccak.zir:5)
  // Top(zirgen/circuit/keccak/keccak.zir:1165)
  Val x5 = INVOKE_EXTERN(ctx, getCycle);
  NondetRegStruct x6 = exec_NondetReg(ctx, x5, x2);
  Val x7 = x6._super;
  // Top(zirgen/circuit/keccak/keccak.zir:1166)
  NondetRegStruct x8 = exec_NondetReg(ctx, inv(x7), LAYOUT_LOOKUP(layout0, invPC));
  // Top(zirgen/circuit/keccak/keccak.zir:1167)
  Val x9 = (Val(1) - (x7 * x8._super));
  // Top(zirgen/circuit/keccak/keccak.zir:1168)
  EQZ((x9 * x7), "Top(zirgen/circuit/keccak/keccak.zir:1168)");
  Val x10;
  if (to_size_t(x9)) {
    x10 = Val(18);
  } else if (to_size_t((Val(1) - x9))) {
    // Top(zirgen/circuit/keccak/keccak.zir:1175)
    NondetRegStruct x11 = back_NondetReg(ctx, 1, x2);
    EQZ((x7 - (x11._super + Val(1))), "Top(zirgen/circuit/keccak/keccak.zir:1175)");
    // Top(zirgen/circuit/keccak/keccak.zir:1176)
    RetTupleStruct x12 = back_RetTuple(ctx, 1, x4);
    x10 = x12.major._super;
  } else {
    assert(0 && "Reached unreachable mux arm");
  }
  // Top(zirgen/circuit/keccak/keccak.zir:1178)
  OneHot_23_Struct x13 = exec_OneHot_23_(ctx, x10, LAYOUT_LOOKUP(layout0, majorOnehot));
  NondetRegStruct23Array x14 = x13._super;
  // Top(zirgen/circuit/keccak/keccak.zir:1179)
  BoundLayout<TopArm18_SuperLayout> x15 = LAYOUT_LOOKUP(x3, arm18);
  if (to_size_t(x14[0]._super)) {
    // Top(zirgen/circuit/keccak/keccak.zir:1180)
    RetTupleStruct x16 = back_RetTuple(ctx, 0, x4);
    RetTupleStruct x17 = execXor5wordsMajor_0_(ctx, x16, x4, LAYOUT_LOOKUP(x3, arm0));
  }
  if (to_size_t(x14[1]._super)) {
    // Top(zirgen/circuit/keccak/keccak.zir:1181)
    RetTupleStruct x18 = back_RetTuple(ctx, 0, x4);
    RetTupleStruct x19 = execXor5wordsMajor_1_(ctx, x18, x4, LAYOUT_LOOKUP(x3, arm1));
  }
  if (to_size_t(x14[2]._super)) {
    // Top(zirgen/circuit/keccak/keccak.zir:1182)
    RetTupleStruct x20 = back_RetTuple(ctx, 0, x4);
    RetTupleStruct x21 = execXor5wordsMajor_2_(ctx, x20, x4, LAYOUT_LOOKUP(x3, arm2));
  }
  if (to_size_t(x14[3]._super)) {
    // Top(zirgen/circuit/keccak/keccak.zir:1183)
    RetTupleStruct x22 = back_RetTuple(ctx, 0, x4);
    RetTupleStruct x23 = execXor5wordsMajor_3_(ctx, x22, x4, LAYOUT_LOOKUP(x3, arm3));
  }
  if (to_size_t(x14[4]._super)) {
    // Top(zirgen/circuit/keccak/keccak.zir:1184)
    RetTupleStruct x24 = back_RetTuple(ctx, 0, x4);
    RetTupleStruct x25 = execXor5wordsMajor_4_(ctx, x24, x4, LAYOUT_LOOKUP(x3, arm4));
  }
  if (to_size_t(x14[5]._super)) {
    // Top(zirgen/circuit/keccak/keccak.zir:1185)
    RetTupleStruct x26 = back_RetTuple(ctx, 0, x4);
    RetTupleStruct x27 = execRhoMajor_0_(ctx, x26, x4, LAYOUT_LOOKUP(x3, arm5));
  }
  if (to_size_t(x14[6]._super)) {
    // Top(zirgen/circuit/keccak/keccak.zir:1186)
    RetTupleStruct x28 = back_RetTuple(ctx, 0, x4);
    RetTupleStruct x29 = execRhoMajor_1_(ctx, x28, x4, LAYOUT_LOOKUP(x3, arm6));
  }
  if (to_size_t(x14[7]._super)) {
    // Top(zirgen/circuit/keccak/keccak.zir:1187)
    RetTupleStruct x30 = back_RetTuple(ctx, 0, x4);
    RetTupleStruct x31 = execRhoMajor_2_(ctx, x30, x4, LAYOUT_LOOKUP(x3, arm7));
  }
  if (to_size_t(x14[8]._super)) {
    // Top(zirgen/circuit/keccak/keccak.zir:1188)
    RetTupleStruct x32 = back_RetTuple(ctx, 0, x4);
    RetTupleStruct x33 = execRhoMajor_3_(ctx, x32, x4, LAYOUT_LOOKUP(x3, arm8));
  }
  if (to_size_t(x14[9]._super)) {
    // Top(zirgen/circuit/keccak/keccak.zir:1189)
    RetTupleStruct x34 = back_RetTuple(ctx, 0, x4);
    RetTupleStruct x35 = execRhoMajor_4_(ctx, x34, x4, LAYOUT_LOOKUP(x3, arm9));
  }
  if (to_size_t(x14[10]._super)) {
    // Top(zirgen/circuit/keccak/keccak.zir:1190)
    RetTupleStruct x36 = back_RetTuple(ctx, 0, x4);
    RetTupleStruct x37 = execChiMajor_0_(ctx, x36, x4, LAYOUT_LOOKUP(x3, arm10));
  }
  if (to_size_t(x14[11]._super)) {
    // Top(zirgen/circuit/keccak/keccak.zir:1191)
    RetTupleStruct x38 = back_RetTuple(ctx, 0, x4);
    RetTupleStruct x39 = execChiMajor_1_(ctx, x38, x4, LAYOUT_LOOKUP(x3, arm11));
  }
  if (to_size_t(x14[12]._super)) {
    // Top(zirgen/circuit/keccak/keccak.zir:1192)
    RetTupleStruct x40 = back_RetTuple(ctx, 0, x4);
    RetTupleStruct x41 = execChiMajor_2_(ctx, x40, x4, LAYOUT_LOOKUP(x3, arm12));
  }
  if (to_size_t(x14[13]._super)) {
    // Top(zirgen/circuit/keccak/keccak.zir:1193)
    RetTupleStruct x42 = back_RetTuple(ctx, 0, x4);
    RetTupleStruct x43 = execChiMajor_3_(ctx, x42, x4, LAYOUT_LOOKUP(x3, arm13));
  }
  if (to_size_t(x14[14]._super)) {
    // Top(zirgen/circuit/keccak/keccak.zir:1194)
    RetTupleStruct x44 = back_RetTuple(ctx, 0, x4);
    RetTupleStruct x45 = execChiMajor_4_(ctx, x44, x4, LAYOUT_LOOKUP(x3, arm14));
  }
  if (to_size_t(x14[15]._super)) {
    // Top(zirgen/circuit/keccak/keccak.zir:1195)
    RetTupleStruct x46 = back_RetTuple(ctx, 0, x4);
    RetTupleStruct x47 = execAbsorbMajor1(ctx, x46, x4, LAYOUT_LOOKUP(x3, arm15));
  }
  if (to_size_t(x14[16]._super)) {
    // Top(zirgen/circuit/keccak/keccak.zir:1196)
    RetTupleStruct x48 = back_RetTuple(ctx, 0, x4);
    RetTupleStruct x49 = execAbsorbMajor2(ctx, x48, x4, LAYOUT_LOOKUP(x3, arm16));
  }
  if (to_size_t(x14[17]._super)) {
    // Top(zirgen/circuit/keccak/keccak.zir:1197)
    RetTupleStruct x50 = back_RetTuple(ctx, 0, x4);
    RetTupleStruct x51 = execSetupMajor(ctx, x50, x4, LAYOUT_LOOKUP(x3, arm17), global1);
  }
  // Top(zirgen/circuit/keccak/keccak.zir:1202)
  Val22Array x52 = Val22Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                              Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
  if (to_size_t(x14[18]._super)) {
    // readInput(zirgen/circuit/keccak/keccak.zir:7)
    // Top(zirgen/circuit/keccak/keccak.zir:1198)
    Val x53 = INVOKE_EXTERN(ctx, readInput);
    NondetRegStruct x54 = exec_NondetReg(ctx, x53, LAYOUT_LOOKUP(x15, blk));
    // readInput(zirgen/circuit/keccak/keccak.zir:7)
    // Top(zirgen/circuit/keccak/keccak.zir:1200)
    Val x55 = INVOKE_EXTERN(ctx, readInput);
    Val x56 = INVOKE_EXTERN(ctx, readInput);
    Val x57 = INVOKE_EXTERN(ctx, readInput);
    // Top(zirgen/circuit/keccak/keccak.zir:1198)
    Val x58 = x54._super;
    // Top(zirgen/circuit/keccak/keccak.zir:1201)
    WriteMemoryStruct x59 =
        exec_WriteMemory(ctx,
                         Val(0),
                         MemDigestStruct{._super = Val4Array{x58, Val(0), Val(0), Val(0)}},
                         LAYOUT_LOOKUP(x15, _0));
    // Top(zirgen/circuit/keccak/keccak.zir:1202)
    RetTupleStruct x60 =
        exec_RetTuple(ctx,
                      x52,
                      x52,
                      x52,
                      Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0),
                                 Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)},
                      x52,
                      x52,
                      Val(0),
                      Val(15),
                      Val(0),
                      x58,
                      Val(0),
                      LAYOUT_LOOKUP(x15, _super));
  }
  if (to_size_t(x14[19]._super)) {
    // Top(zirgen/circuit/keccak/keccak.zir:1205)
    RetTupleStruct x61 = back_RetTuple(ctx, 0, x4);
    RetTupleStruct x62 = execSha256loadAll(ctx, x61, x4, LAYOUT_LOOKUP(x3, arm19));
  }
  if (to_size_t(x14[20]._super)) {
    // Top(zirgen/circuit/keccak/keccak.zir:1206)
    RetTupleStruct x63 = back_RetTuple(ctx, 0, x4);
    RetTupleStruct x64 = execSha256mixAll_0_(ctx, x63, x4, LAYOUT_LOOKUP(x3, arm20));
  }
  if (to_size_t(x14[21]._super)) {
    // Top(zirgen/circuit/keccak/keccak.zir:1207)
    RetTupleStruct x65 = back_RetTuple(ctx, 0, x4);
    RetTupleStruct x66 = execSha256mixAll_1_(ctx, x65, x4, LAYOUT_LOOKUP(x3, arm21));
  }
  if (to_size_t(x14[22]._super)) {
    // Top(zirgen/circuit/keccak/keccak.zir:1208)
    RetTupleStruct x67 = back_RetTuple(ctx, 0, x4);
    RetTupleStruct x68 = execSha256mixAll_2_(ctx, x67, x4, LAYOUT_LOOKUP(x3, arm22));
  }
  // Top(zirgen/circuit/keccak/keccak.zir:1179)
  RetTupleStruct x69 = back_RetTuple(ctx, 0, x4);
  return TopStruct{.retvals = x69};
}
void step_Top(ExecContext& ctx, MutableBuf data0, GlobalBuf global1) {
  // Top(zirgen/circuit/keccak/keccak.zir:1161)
  BoundLayout<TopLayout> x2 = BIND_LAYOUT(kLayout_Top, data0);
  TopStruct x3 = exec_Top(ctx, x2, global1);
  return;
}
ComponentStruct exec_TopAccum(ExecContext& ctx,
                              BoundLayout<TopLayout> arg0,
                              BoundLayout<Reg1LayoutArray> layout1,
                              GlobalBuf mix2) {
  BoundLayout<_mixLayout> x3 = BIND_LAYOUT(kLayoutMix, mix2);
  BoundLayout<_accumLayout> x4 = LAYOUT_LOOKUP(x3, randomness);
  BoundLayout<TopRetvalsLayout> x5 = LAYOUT_LOOKUP(arg0, retvals);
  BoundLayout<NondetRegLayout23LayoutArray> x6 = LAYOUT_LOOKUP(x5, _selector);
  if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(x6, 0), _super), 0))) {
    STORE_EXT(LAYOUT_SUBSCRIPT(layout1, 0), LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 1));
    EQZ((LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 1)),
        "Top(zirgen/circuit/keccak/keccak.zir:1161)");
  }
  if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(x6, 1), _super), 0))) {
    STORE_EXT(LAYOUT_SUBSCRIPT(layout1, 0), LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 1));
    EQZ((LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 1)),
        "Top(zirgen/circuit/keccak/keccak.zir:1161)");
  }
  if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(x6, 2), _super), 0))) {
    STORE_EXT(LAYOUT_SUBSCRIPT(layout1, 0), LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 1));
    EQZ((LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 1)),
        "Top(zirgen/circuit/keccak/keccak.zir:1161)");
  }
  if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(x6, 3), _super), 0))) {
    STORE_EXT(LAYOUT_SUBSCRIPT(layout1, 0), LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 1));
    EQZ((LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 1)),
        "Top(zirgen/circuit/keccak/keccak.zir:1161)");
  }
  if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(x6, 4), _super), 0))) {
    STORE_EXT(LAYOUT_SUBSCRIPT(layout1, 0), LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 1));
    EQZ((LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 1)),
        "Top(zirgen/circuit/keccak/keccak.zir:1161)");
  }
  if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(x6, 5), _super), 0))) {
    STORE_EXT(LAYOUT_SUBSCRIPT(layout1, 0), LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 1));
    EQZ((LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 1)),
        "Top(zirgen/circuit/keccak/keccak.zir:1161)");
  }
  if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(x6, 6), _super), 0))) {
    STORE_EXT(LAYOUT_SUBSCRIPT(layout1, 0), LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 1));
    EQZ((LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 1)),
        "Top(zirgen/circuit/keccak/keccak.zir:1161)");
  }
  if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(x6, 7), _super), 0))) {
    STORE_EXT(LAYOUT_SUBSCRIPT(layout1, 0), LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 1));
    EQZ((LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 1)),
        "Top(zirgen/circuit/keccak/keccak.zir:1161)");
  }
  if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(x6, 8), _super), 0))) {
    STORE_EXT(LAYOUT_SUBSCRIPT(layout1, 0), LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 1));
    EQZ((LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 1)),
        "Top(zirgen/circuit/keccak/keccak.zir:1161)");
  }
  if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(x6, 9), _super), 0))) {
    STORE_EXT(LAYOUT_SUBSCRIPT(layout1, 0), LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 1));
    EQZ((LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 1)),
        "Top(zirgen/circuit/keccak/keccak.zir:1161)");
  }
  if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(x6, 10), _super), 0))) {
    STORE_EXT(LAYOUT_SUBSCRIPT(layout1, 0), LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 1));
    EQZ((LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 1)),
        "Top(zirgen/circuit/keccak/keccak.zir:1161)");
  }
  if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(x6, 11), _super), 0))) {
    STORE_EXT(LAYOUT_SUBSCRIPT(layout1, 0), LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 1));
    EQZ((LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 1)),
        "Top(zirgen/circuit/keccak/keccak.zir:1161)");
  }
  if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(x6, 12), _super), 0))) {
    STORE_EXT(LAYOUT_SUBSCRIPT(layout1, 0), LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 1));
    EQZ((LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 1)),
        "Top(zirgen/circuit/keccak/keccak.zir:1161)");
  }
  if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(x6, 13), _super), 0))) {
    STORE_EXT(LAYOUT_SUBSCRIPT(layout1, 0), LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 1));
    EQZ((LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 1)),
        "Top(zirgen/circuit/keccak/keccak.zir:1161)");
  }
  if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(x6, 14), _super), 0))) {
    STORE_EXT(LAYOUT_SUBSCRIPT(layout1, 0), LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 1));
    EQZ((LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 1)),
        "Top(zirgen/circuit/keccak/keccak.zir:1161)");
  }
  BoundLayout<Arg_UseOnceMemoryElementLayout> x7 = LAYOUT_LOOKUP(x4, useOnceMemoryElement);
  BoundLayout<Reg> x8 = LAYOUT_LOOKUP(x7, index);
  BoundLayout<Reg> x9 = LAYOUT_LOOKUP(x7, _0);
  BoundLayout<Reg> x10 = LAYOUT_LOOKUP(x7, _1);
  BoundLayout<Reg> x11 = LAYOUT_LOOKUP(x7, _2);
  BoundLayout<Reg> x12 = LAYOUT_LOOKUP(x7, _3);
  BoundLayout<Reg> x13 = LAYOUT_LOOKUP(x4, _offset);
  BoundLayout<Reg> x14 = LAYOUT_LOOKUP(
      LAYOUT_LOOKUP(
          LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x5, arm15), _arguments_Super),
                                         useOnceMemoryElement),
                           0),
          count),
      _super);
  BoundLayout<Reg> x15 = LAYOUT_LOOKUP(
      LAYOUT_LOOKUP(
          LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x5, arm15), _arguments_Super),
                                         useOnceMemoryElement),
                           0),
          index),
      _super);
  BoundLayout<Reg> x16 = LAYOUT_LOOKUP(
      LAYOUT_LOOKUP(
          LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x5, arm15), _arguments_Super),
                                         useOnceMemoryElement),
                           0),
          _0),
      _super);
  BoundLayout<Reg> x17 = LAYOUT_LOOKUP(
      LAYOUT_LOOKUP(
          LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x5, arm15), _arguments_Super),
                                         useOnceMemoryElement),
                           0),
          _1),
      _super);
  BoundLayout<Reg> x18 = LAYOUT_LOOKUP(
      LAYOUT_LOOKUP(
          LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x5, arm15), _arguments_Super),
                                         useOnceMemoryElement),
                           0),
          _2),
      _super);
  BoundLayout<Reg> x19 = LAYOUT_LOOKUP(
      LAYOUT_LOOKUP(
          LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x5, arm15), _arguments_Super),
                                         useOnceMemoryElement),
                           0),
          _3),
      _super);
  if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(x6, 15), _super), 0))) {
    ExtVal x20 =
        (((((LOAD_EXT(x8, 0) * LOAD_AS_EXT(x15, 0)) + (LOAD_EXT(x9, 0) * LOAD_AS_EXT(x16, 0))) +
           (LOAD_EXT(x10, 0) * LOAD_AS_EXT(x17, 0))) +
          (LOAD_EXT(x11, 0) * LOAD_AS_EXT(x18, 0))) +
         (LOAD_EXT(x12, 0) * LOAD_AS_EXT(x19, 0)));
    ExtVal x21 = (x20 + LOAD_EXT(x13, 0));
    STORE_EXT(LAYOUT_SUBSCRIPT(layout1, 0),
              (LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 1) + (LOAD_AS_EXT(x14, 0) * inv(x21))));
    EQZ((((LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 1)) *
          x21) -
         LOAD_AS_EXT(x14, 0)),
        "Top(zirgen/circuit/keccak/keccak.zir:1161)");
  }
  BoundLayout<Reg> x22 = LAYOUT_LOOKUP(
      LAYOUT_LOOKUP(
          LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x5, arm16), _arguments_Super),
                                         useOnceMemoryElement),
                           0),
          count),
      _super);
  BoundLayout<Reg> x23 = LAYOUT_LOOKUP(
      LAYOUT_LOOKUP(
          LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x5, arm16), _arguments_Super),
                                         useOnceMemoryElement),
                           0),
          index),
      _super);
  BoundLayout<Reg> x24 = LAYOUT_LOOKUP(
      LAYOUT_LOOKUP(
          LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x5, arm16), _arguments_Super),
                                         useOnceMemoryElement),
                           0),
          _0),
      _super);
  BoundLayout<Reg> x25 = LAYOUT_LOOKUP(
      LAYOUT_LOOKUP(
          LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x5, arm16), _arguments_Super),
                                         useOnceMemoryElement),
                           0),
          _1),
      _super);
  BoundLayout<Reg> x26 = LAYOUT_LOOKUP(
      LAYOUT_LOOKUP(
          LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x5, arm16), _arguments_Super),
                                         useOnceMemoryElement),
                           0),
          _2),
      _super);
  BoundLayout<Reg> x27 = LAYOUT_LOOKUP(
      LAYOUT_LOOKUP(
          LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x5, arm16), _arguments_Super),
                                         useOnceMemoryElement),
                           0),
          _3),
      _super);
  if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(x6, 16), _super), 0))) {
    ExtVal x28 =
        (((((LOAD_EXT(x8, 0) * LOAD_AS_EXT(x23, 0)) + (LOAD_EXT(x9, 0) * LOAD_AS_EXT(x24, 0))) +
           (LOAD_EXT(x10, 0) * LOAD_AS_EXT(x25, 0))) +
          (LOAD_EXT(x11, 0) * LOAD_AS_EXT(x26, 0))) +
         (LOAD_EXT(x12, 0) * LOAD_AS_EXT(x27, 0)));
    ExtVal x29 = (x28 + LOAD_EXT(x13, 0));
    STORE_EXT(LAYOUT_SUBSCRIPT(layout1, 0),
              (LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 1) + (LOAD_AS_EXT(x22, 0) * inv(x29))));
    EQZ((((LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 1)) *
          x29) -
         LOAD_AS_EXT(x22, 0)),
        "Top(zirgen/circuit/keccak/keccak.zir:1161)");
  }
  BoundLayout<UseOnceMemoryElementLayout3LayoutArray> x30 = LAYOUT_LOOKUP(
      LAYOUT_LOOKUP(LAYOUT_LOOKUP(x5, arm17), _arguments_Super), useOnceMemoryElement);
  if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(x6, 17), _super), 0))) {
    ExtVal x31 =
        ((LOAD_EXT(x8, 0) *
          LOAD_AS_EXT(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(x30, 0), index), _super), 0)) +
         (LOAD_EXT(x9, 0) *
          LOAD_AS_EXT(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(x30, 0), _0), _super), 0)));
    ExtVal x32 =
        ((x31 +
          (LOAD_EXT(x10, 0) *
           LOAD_AS_EXT(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(x30, 0), _1), _super), 0))) +
         (LOAD_EXT(x11, 0) *
          LOAD_AS_EXT(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(x30, 0), _2), _super), 0)));
    ExtVal x33 =
        ((x32 +
          (LOAD_EXT(x12, 0) *
           LOAD_AS_EXT(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(x30, 0), _3), _super), 0))) +
         LOAD_EXT(x13, 0));
    ExtVal x34 =
        (LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 1) +
         (LOAD_AS_EXT(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(x30, 0), count), _super), 0) *
          inv(x33)));
    ExtVal x35 =
        ((LOAD_EXT(x8, 0) *
          LOAD_AS_EXT(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(x30, 1), index), _super), 0)) +
         (LOAD_EXT(x9, 0) *
          LOAD_AS_EXT(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(x30, 1), _0), _super), 0)));
    ExtVal x36 =
        ((x35 +
          (LOAD_EXT(x10, 0) *
           LOAD_AS_EXT(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(x30, 1), _1), _super), 0))) +
         (LOAD_EXT(x11, 0) *
          LOAD_AS_EXT(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(x30, 1), _2), _super), 0)));
    ExtVal x37 =
        ((x36 +
          (LOAD_EXT(x12, 0) *
           LOAD_AS_EXT(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(x30, 1), _3), _super), 0))) +
         LOAD_EXT(x13, 0));
    ExtVal x38 = (x33 * x37);
    ExtVal x39 =
        ((LOAD_EXT(x8, 0) *
          LOAD_AS_EXT(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(x30, 2), index), _super), 0)) +
         (LOAD_EXT(x9, 0) *
          LOAD_AS_EXT(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(x30, 2), _0), _super), 0)));
    ExtVal x40 =
        ((x39 +
          (LOAD_EXT(x10, 0) *
           LOAD_AS_EXT(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(x30, 2), _1), _super), 0))) +
         (LOAD_EXT(x11, 0) *
          LOAD_AS_EXT(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(x30, 2), _2), _super), 0)));
    ExtVal x41 =
        ((x40 +
          (LOAD_EXT(x12, 0) *
           LOAD_AS_EXT(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(x30, 2), _3), _super), 0))) +
         LOAD_EXT(x13, 0));
    ExtVal x42 =
        ((x34 +
          (LOAD_AS_EXT(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(x30, 1), count), _super), 0) *
           inv(x37))) +
         (LOAD_AS_EXT(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(x30, 2), count), _super), 0) *
          inv(x41)));
    ExtVal x43 =
        ((LOAD_AS_EXT(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(x30, 0), count), _super), 0) *
          x37) *
         x41);
    STORE_EXT(LAYOUT_SUBSCRIPT(layout1, 0), x42);
    ExtVal x44 =
        ((((LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 1)) *
           (x38 * x41)) -
          x43) -
         ((x33 *
           LOAD_AS_EXT(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(x30, 1), count), _super), 0)) *
          x41));
    EQZ((x44 -
         (x38 *
          LOAD_AS_EXT(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(x30, 2), count), _super), 0))),
        "Top(zirgen/circuit/keccak/keccak.zir:1161)");
  }
  BoundLayout<UseOnceMemoryElementLayout> x45 =
      LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x5, arm18), _0), elem);
  if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(x6, 18), _super), 0))) {
    ExtVal x46 =
        (((LOAD_EXT(x8, 0) * LOAD_AS_EXT(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x45, index), _super), 0)) +
          (LOAD_EXT(x9, 0) * LOAD_AS_EXT(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x45, _0), _super), 0))) +
         (LOAD_EXT(x10, 0) * LOAD_AS_EXT(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x45, _1), _super), 0)));
    ExtVal x47 =
        (((x46 +
           (LOAD_EXT(x11, 0) * LOAD_AS_EXT(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x45, _2), _super), 0))) +
          (LOAD_EXT(x12, 0) * LOAD_AS_EXT(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x45, _3), _super), 0))) +
         LOAD_EXT(x13, 0));
    STORE_EXT(LAYOUT_SUBSCRIPT(layout1, 0),
              (LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 1) +
               (LOAD_AS_EXT(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x45, count), _super), 0) * inv(x47))));
    EQZ((((LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 1)) *
          x47) -
         LOAD_AS_EXT(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x45, count), _super), 0)),
        "Top(zirgen/circuit/keccak/keccak.zir:1161)");
  }
  BoundLayout<Reg> x48 = LAYOUT_LOOKUP(
      LAYOUT_LOOKUP(
          LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x5, arm19), _arguments_Super),
                                         useOnceMemoryElement),
                           0),
          count),
      _super);
  BoundLayout<Reg> x49 = LAYOUT_LOOKUP(
      LAYOUT_LOOKUP(
          LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x5, arm19), _arguments_Super),
                                         useOnceMemoryElement),
                           0),
          index),
      _super);
  BoundLayout<Reg> x50 = LAYOUT_LOOKUP(
      LAYOUT_LOOKUP(
          LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x5, arm19), _arguments_Super),
                                         useOnceMemoryElement),
                           0),
          _0),
      _super);
  BoundLayout<Reg> x51 = LAYOUT_LOOKUP(
      LAYOUT_LOOKUP(
          LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x5, arm19), _arguments_Super),
                                         useOnceMemoryElement),
                           0),
          _1),
      _super);
  BoundLayout<Reg> x52 = LAYOUT_LOOKUP(
      LAYOUT_LOOKUP(
          LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x5, arm19), _arguments_Super),
                                         useOnceMemoryElement),
                           0),
          _2),
      _super);
  BoundLayout<Reg> x53 = LAYOUT_LOOKUP(
      LAYOUT_LOOKUP(
          LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(LAYOUT_LOOKUP(LAYOUT_LOOKUP(x5, arm19), _arguments_Super),
                                         useOnceMemoryElement),
                           0),
          _3),
      _super);
  if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(x6, 19), _super), 0))) {
    ExtVal x54 =
        (((((LOAD_EXT(x8, 0) * LOAD_AS_EXT(x49, 0)) + (LOAD_EXT(x9, 0) * LOAD_AS_EXT(x50, 0))) +
           (LOAD_EXT(x10, 0) * LOAD_AS_EXT(x51, 0))) +
          (LOAD_EXT(x11, 0) * LOAD_AS_EXT(x52, 0))) +
         (LOAD_EXT(x12, 0) * LOAD_AS_EXT(x53, 0)));
    ExtVal x55 = (x54 + LOAD_EXT(x13, 0));
    STORE_EXT(LAYOUT_SUBSCRIPT(layout1, 0),
              (LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 1) + (LOAD_AS_EXT(x48, 0) * inv(x55))));
    EQZ((((LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 1)) *
          x55) -
         LOAD_AS_EXT(x48, 0)),
        "Top(zirgen/circuit/keccak/keccak.zir:1161)");
  }
  if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(x6, 20), _super), 0))) {
    STORE_EXT(LAYOUT_SUBSCRIPT(layout1, 0), LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 1));
    EQZ((LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 1)),
        "Top(zirgen/circuit/keccak/keccak.zir:1161)");
  }
  if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(x6, 21), _super), 0))) {
    STORE_EXT(LAYOUT_SUBSCRIPT(layout1, 0), LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 1));
    EQZ((LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 1)),
        "Top(zirgen/circuit/keccak/keccak.zir:1161)");
  }
  if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(x6, 22), _super), 0))) {
    STORE_EXT(LAYOUT_SUBSCRIPT(layout1, 0), LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 1));
    EQZ((LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(layout1, 0), 1)),
        "Top(zirgen/circuit/keccak/keccak.zir:1161)");
  }
  return ComponentStruct{};
}
void step_TopAccum(ExecContext& ctx, MutableBuf accum0, MutableBuf data1, GlobalBuf mix2) {
  BoundLayout<TopLayout> x3 = BIND_LAYOUT(kLayout_Top, data1);
  BoundLayout<Reg1LayoutArray> x4 = BIND_LAYOUT(kLayout_TopAccum, accum0);
  ComponentStruct x5 = exec_TopAccum(ctx, x3, x4, mix2);
  return;
}
