load("@rules_pkg//pkg:zip.bzl", "pkg_zip")
load("//bazel/rules/lit:defs.bzl", "glob_lit_tests")
load("//bazel/rules/zirgen:dsl-defs.bzl", "zirgen_build")
load("//bazel/rules/zirgen:edsl-defs.bzl", "ZIRGEN_OUTS", "build_circuit")

package(default_visibility = ["//visibility:public"])

filegroup(
    name = "imports",
    srcs = glob(["*.zir"]),
)

glob_lit_tests(
    data = [":imports"],
    size_override = {"top.zir": "medium"},
    test_file_exts = ["zir"],
)

zirgen_build(
    name = "cppinc",
    out = "keccak.cpp.inc",
    data = [":imports"],
    opts = [
        "--emit=cpp",
        "--validity=false",
    ],
    zir_file = ":top.zir",
)

OUTS = ZIRGEN_OUTS + [
    "rust_poly_fp_0.cpp",
    "rust_poly_fp_1.cpp",
    "rust_poly_fp_2.cpp",
    "rust_poly_fp_3.cpp",
    "rust_poly_fp_4.cpp",
    "eval_check_0.cu",
    "eval_check_1.cu",
    "eval_check_2.cu",
    "eval_check_3.cu",
    "eval_check_4.cu",
    "eval_check.cuh",
]

build_circuit(
    name = "codegen",
    outs = OUTS,
    bin = "//zirgen/Main:gen_zirgen",
    data = [":imports"],
    extra_args = [
        "zirgen/circuit/keccak2/top.zir",
        "-I",
        "zirgen/circuit/keccak2",
        "--validity-split-count=5",
    ],
)

ZKRS = [("keccak_lift_" + str(po2)) for po2 in range(14, 19)]

build_circuit(
    name = "predicates",
    srcs = ["predicates.cpp"],
    outs = [fn for zkr in ZKRS for fn in [
        zkr + ".zkr",
        zkr + ".zkr.dbg",
    ]],
    data = ["@zirgen//zirgen/circuit/keccak2:validity.ir"],
    extra_args = ["--keccak-ir=$(location :validity.ir)"],
    deps = ["//zirgen/circuit/predicates:lib"],
)

pkg_zip(
    name = "keccak_zkr",
    srcs = [x + ".zkr" for x in ZKRS],
)

filegroup(
    name = "bootstrap",
    srcs = [
        ":codegen",
        ":keccak_zkr",
    ],
)
