// Simple example circuit that calls an external "GetValFromUser"
// twice to acquire two values, adds them, and outputs the reuslt
// using an external "OutputToUser".

extern GetValFromUser() : Val;
extern OutputToUser(val: Val);

component OneHot(v: Val) {
  // Type parameters are causing name issues in codegen, so we use a fixed
  // constant for now.
  N := 2;
  // Make N bit registers, with bit v set and all others 0
  bits := for i : 0..N { NondetReg(Isz(i - v)) };
  // Verify all elements of bits are actually 0 or 1
  for bit : bits { bit * (1 - bit) = 0; };
  // Verify exactly one bit is set
  reduce bits init 0 with Add = 1;
  // Verify the right bit is set
  reduce for i : 0..N { bits[i] * i } init 0 with Add = v;
  bits
}

component GetGlobalResult() {
  global result : Reg;
  result
}

component SetGlobalResult(val: Val) {
  global result := Reg(val);
}

component Top() {
  op := NondetReg(GetValFromUser());
  left := NondetReg(GetValFromUser());
  right := NondetReg(GetValFromUser());
  result := OneHot(op) -> (
    Reg(left + right),
    Reg(left - right)
  );
  Log("result = %u", result);
  SetGlobalResult(result);
  GetGlobalResult() = result;
  OutputToUser(result);
}
